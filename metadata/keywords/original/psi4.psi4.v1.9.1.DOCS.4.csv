id,quality_attribute,keyword,matched_word,match_idx,sentence,source,filename,author,repo,version,wiki,url
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:13714,Availability,error,errors,13714,"lock, bounded by ``{...}``. This; will set all of these options as ""global"" options (meaning that they are; visible to all parts of the program). Most common |PSIfour| options can be; set in a globals section like this. If an option needs to be visible; only to one part of the program (*e.g.*, we only want to increase the; energy convergence in the SCF code, but not the rest of the; code), it can be placed in a section of input visible to that part of the; program (*e.g.*, ``set scf e_convergence 1.0E-8``). Back to our SAPT example, we have found that for basic-level SAPT; computations (*i.e.*, SAPT0), a good error cancellation is found; [Hohenstein:2012:WIREs]_ with the jun-cc-pVDZ basis (this is the; usual aug-cc-pVDZ basis, but without diffuse functions on hydrogen and; without diffuse :math:`d` functions on heavy atoms) [Papajak:2011:10]_. So,; we'll use that as our standard basis set. The SAPT code is designed to; use density fitting techniques, because they introduce minimal errors; while providing much faster computations [Hohenstein:2010:184111]_ ; [Hohenstein:2010:014101]_. Since we're using density fitting for the SAPT,; we might as well also use it for the Hartree--Fock computations that are; performed as part of the SAPT. We can specify that with ; ``scf_type DF``. Density fitting procedures require the use of auxiliary basis sets that; pair with the primary basis set. Fortunately, |PSIfour| is usually smart; enough to figure out what auxiliary basis sets are needed for a given; computation. In this case, jun-cc-pVDZ is a standard enough basis set; (just a simple truncation of the very popular aug-cc-pVDZ basis set); that |PSIfour| correctly guesses that we want the jun-cc-pVDZ-JKFIT; auxiliary basis for the Hartree--Fock, and the jun-cc-pVDZ-RI basis set; for the SAPT procedure. To speed up the computation a little, we also tell the SAPT procedure to; freeze the core electrons with ``freeze_core True``. The SAPT; procedure is invoked with the simple call",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:19218,Availability,avail,available,19218,"utations could be run in a separate; input file, but because counterpoise correction is a fairly standard; procedure for intermolecular interactions, |PSIfour| knows about it and has; a built-in routine to perform counterpoise correction. It only needs to; know what method you want to do the counterpoise correction on (here, let's; consider CCSD(T)), and it needs to know what's monomer A and what's monomer; B. This last issue of specifying the monomers separately was already dealt; with in the previous SAPT example, where we saw that two dashes in the; ``molecule`` block can be used to separate monomers. So, we're going to do counterpoise-corrected CCSD(T) energies for Ne\ :sub:`2` at; a series of different interatomic distances. And let's print out a table; of the interatomic distances we've considered, and the CP-corrected CCSD(T); interaction energies (in |kcalpermol|) at each geometry. Doing all this; in a single input is surprisingly easy in |PSIfour|. Here's the input; (available as :srcsample:`tu6-cp-ne2`). .. literalinclude:: @SFNX_INCLUDE@samples/tu6-cp-ne2/input.dat. First, you can see the ``molecule`` block has a couple dashes to; separate the monomers from each other. Also note we've used a Z-matrix to; specify the geometry, and we've used a variable (``R``) as the; interatomic distance. We have *not* specified the value of ``R`` in; the ``molecule`` block like we normally would. That's because we're; going to vary it during the scan across the potential energy surface.; Below the ``molecule`` block, you can see the ``Rvals`` array; specified. This is a Python array holding the interatomic distances we; want to consider. In Python, arrays are surrounded by square brackets, and; elements are separated by commas. The next lines, ``set basis aug-cc-pVDZ`` and ``set freeze_core True``,; are familiar from previous test cases. Next comes a slightly; unusual-looking line, ``ecp = {}``. This is Python's way of initializing; a ""dictionary"". We're going to use thi",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:20301,Availability,avail,available,20301,".. literalinclude:: @SFNX_INCLUDE@samples/tu6-cp-ne2/input.dat. First, you can see the ``molecule`` block has a couple dashes to; separate the monomers from each other. Also note we've used a Z-matrix to; specify the geometry, and we've used a variable (``R``) as the; interatomic distance. We have *not* specified the value of ``R`` in; the ``molecule`` block like we normally would. That's because we're; going to vary it during the scan across the potential energy surface.; Below the ``molecule`` block, you can see the ``Rvals`` array; specified. This is a Python array holding the interatomic distances we; want to consider. In Python, arrays are surrounded by square brackets, and; elements are separated by commas. The next lines, ``set basis aug-cc-pVDZ`` and ``set freeze_core True``,; are familiar from previous test cases. Next comes a slightly; unusual-looking line, ``ecp = {}``. This is Python's way of initializing; a ""dictionary"". We're going to use this dictionary to store the; counterpoise-corrected energies as they become available. A dictionary is; like an array, but we can index it using strings or floating-point numbers; instead of integers if we want. Here, we will index it using; floating-point numbers, namely, the ``R`` values. This winds up being; slightly more elegant than a regular array in later parts of the input; file. The next section, beginning with ``for R in Rvals:``, loops over the; interatomic distances, ``R``, in our array ``Rvals``. In Python,; loops need to be indented, and each line in the loop has to be indented; by the same amount. The first line in the loop, ``dimer.R = R``,; sets the Z-matrix variable ``R`` of the molecule called ``dimer``; to the ``R`` value extracted from the ``Rvals`` array. The next line,; ``ecp[R] = energy('ccsd(t)', bsse_type='cp')``, computes the counterpoise-corrected; CCSD(T) energy and places it in the ``ecp`` dictionary with ``R`` as; the index. Note we didn't need to specify ghost atoms, and we didn't need;",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:3689,Deployability,install,installation,3689," a few simple input files as examples. A large ; number of sample input files, covering everything from single-point energies; using density-functional theory to response properties from coupled-cluster; theory, can be found in the :source:`samples` directory. Running a Basic Hartree--Fock Calculation; =========================================. In our first example, we will consider a Hartree--Fock SCF computation; for the water molecule using a cc-pVDZ basis set. We will specify the; geometry of our water molecule using a standard Z-matrix. .. literalinclude:: @SFNX_INCLUDE@samples/tu1-h2o-energy/input.dat. .. note:: The memory and basis set specifications are placed *before* the; energy function is called. Any user options need to; be set before the procedure they are meant to affect. For your convenience, the above example can be found in ; :srcsample:`tu1-h2o-energy`.; You can run it if you wish.; Once |PSIfour| is in your path (see the ; :ref:`User Configuration <faq:runordinaryexe>`; section of the installation instructions), you can run this computation by typing. >>> psi4 input.dat output.dat. If everything goes well, the computation should complete and should report; a final restricted Hartree--Fock energy in a section like this::. Energy converged. @RHF Final Energy: -76.02663273410671. By default, the energy should be converged to about :math:`1.0 \times 10^{-6}`, so agreement; is only expected for about the first 6 digits after the decimal. If the; computation does not complete, there is probably a problem with the; compilation or installation of the program (see the installation; instructions in Sec. :ref:`sec:installFile`). This very simple input is sufficient to run the requested information.; Notice that we didn't tell the program some otherwise useful information; like the charge on the molecule (0, it's neutral), the spin multiplicity; (1 for a closed-shell molecule with all electrons paired), or the reference; wavefunction to use (restricted Hartr",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:4238,Deployability,install,installation,4238,"include:: @SFNX_INCLUDE@samples/tu1-h2o-energy/input.dat. .. note:: The memory and basis set specifications are placed *before* the; energy function is called. Any user options need to; be set before the procedure they are meant to affect. For your convenience, the above example can be found in ; :srcsample:`tu1-h2o-energy`.; You can run it if you wish.; Once |PSIfour| is in your path (see the ; :ref:`User Configuration <faq:runordinaryexe>`; section of the installation instructions), you can run this computation by typing. >>> psi4 input.dat output.dat. If everything goes well, the computation should complete and should report; a final restricted Hartree--Fock energy in a section like this::. Energy converged. @RHF Final Energy: -76.02663273410671. By default, the energy should be converged to about :math:`1.0 \times 10^{-6}`, so agreement; is only expected for about the first 6 digits after the decimal. If the; computation does not complete, there is probably a problem with the; compilation or installation of the program (see the installation; instructions in Sec. :ref:`sec:installFile`). This very simple input is sufficient to run the requested information.; Notice that we didn't tell the program some otherwise useful information; like the charge on the molecule (0, it's neutral), the spin multiplicity; (1 for a closed-shell molecule with all electrons paired), or the reference; wavefunction to use (restricted Hartree--Fock, or RHF, is usually; appropriate for a closed-shell molecule). The program correctly guessed; all of these options for us. We can change the default behavior through; additional keywords. Let's consider what we would do for an open-shell molecule, where; not all electrons are paired. For example, let's run a computation; on methylene (CH\ :sub:`2`\ ), whose ground electronic state has two unpaired; electrons (triplet electronic state, or a spin multiplicity :math:`2S+1 = 3`).; In this case, the default spin multiplicity (1) is not correct, so ",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:4275,Deployability,install,installation,4275,"include:: @SFNX_INCLUDE@samples/tu1-h2o-energy/input.dat. .. note:: The memory and basis set specifications are placed *before* the; energy function is called. Any user options need to; be set before the procedure they are meant to affect. For your convenience, the above example can be found in ; :srcsample:`tu1-h2o-energy`.; You can run it if you wish.; Once |PSIfour| is in your path (see the ; :ref:`User Configuration <faq:runordinaryexe>`; section of the installation instructions), you can run this computation by typing. >>> psi4 input.dat output.dat. If everything goes well, the computation should complete and should report; a final restricted Hartree--Fock energy in a section like this::. Energy converged. @RHF Final Energy: -76.02663273410671. By default, the energy should be converged to about :math:`1.0 \times 10^{-6}`, so agreement; is only expected for about the first 6 digits after the decimal. If the; computation does not complete, there is probably a problem with the; compilation or installation of the program (see the installation; instructions in Sec. :ref:`sec:installFile`). This very simple input is sufficient to run the requested information.; Notice that we didn't tell the program some otherwise useful information; like the charge on the molecule (0, it's neutral), the spin multiplicity; (1 for a closed-shell molecule with all electrons paired), or the reference; wavefunction to use (restricted Hartree--Fock, or RHF, is usually; appropriate for a closed-shell molecule). The program correctly guessed; all of these options for us. We can change the default behavior through; additional keywords. Let's consider what we would do for an open-shell molecule, where; not all electrons are paired. For example, let's run a computation; on methylene (CH\ :sub:`2`\ ), whose ground electronic state has two unpaired; electrons (triplet electronic state, or a spin multiplicity :math:`2S+1 = 3`).; In this case, the default spin multiplicity (1) is not correct, so ",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:4320,Deployability,install,installFile,4320,"pecifications are placed *before* the; energy function is called. Any user options need to; be set before the procedure they are meant to affect. For your convenience, the above example can be found in ; :srcsample:`tu1-h2o-energy`.; You can run it if you wish.; Once |PSIfour| is in your path (see the ; :ref:`User Configuration <faq:runordinaryexe>`; section of the installation instructions), you can run this computation by typing. >>> psi4 input.dat output.dat. If everything goes well, the computation should complete and should report; a final restricted Hartree--Fock energy in a section like this::. Energy converged. @RHF Final Energy: -76.02663273410671. By default, the energy should be converged to about :math:`1.0 \times 10^{-6}`, so agreement; is only expected for about the first 6 digits after the decimal. If the; computation does not complete, there is probably a problem with the; compilation or installation of the program (see the installation; instructions in Sec. :ref:`sec:installFile`). This very simple input is sufficient to run the requested information.; Notice that we didn't tell the program some otherwise useful information; like the charge on the molecule (0, it's neutral), the spin multiplicity; (1 for a closed-shell molecule with all electrons paired), or the reference; wavefunction to use (restricted Hartree--Fock, or RHF, is usually; appropriate for a closed-shell molecule). The program correctly guessed; all of these options for us. We can change the default behavior through; additional keywords. Let's consider what we would do for an open-shell molecule, where; not all electrons are paired. For example, let's run a computation; on methylene (CH\ :sub:`2`\ ), whose ground electronic state has two unpaired; electrons (triplet electronic state, or a spin multiplicity :math:`2S+1 = 3`).; In this case, the default spin multiplicity (1) is not correct, so we; need to tell the program the true value (3). Like many programs, |PSIfour|; can get the cha",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:1770,Energy Efficiency,power,powerful,1770,".. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:tutorial`:. ==================================================; Psithon Tutorial: Using |PSIfour| as an Executable; ==================================================. .. note:: Psithon and PsiAPI refer to two modes of interacting with |PSIfour|. In; Psithon mode, you write an input file in our domain-specific language; (not quite Python) where commands don't have ``psi4.`` in front, then; submit it to the executable ``psi4`` which processes the Psithon into; pure Python and runs it internally. In PsiAPI mode, you write a pure; Python script with ``import psi4`` at the top and commands are behind; the ``psi4.`` namespace, then submit it to the ``python`` interpreter.; Both modes are equally powerful. This tutorial covers the Psithon; mode. .. note:: Some |PSIfour| functions and keywords have aliases. For example,; ``frequency()``, ``frequencies()``, and ``freq()`` all work to ; obtain vibrational frequencies. Basic Input File Structure; ==========================. |PSIfour| reads input from a text file, which can be prepared in any standard; text editor. The default input file name is ``input.dat`` and the; default output file name is ``output.dat``. So that you can give your; files meaningful names, these defaults can be changed by specifying; the input file name and output file name on the the command line.; The syntax is:. >>> psi4 input-name output-name. If you give an input name but no output name, then the output name will; be the same as the input name (replacing any "".in"" or "".dat"" extension by "".out""). Sample Input Files; ==================. Below, we will provide a few simple input files as examples. A large ; number of sample input files, covering every",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:3267,Energy Efficiency,energy,energy,3267,"u can give your; files meaningful names, these defaults can be changed by specifying; the input file name and output file name on the the command line.; The syntax is:. >>> psi4 input-name output-name. If you give an input name but no output name, then the output name will; be the same as the input name (replacing any "".in"" or "".dat"" extension by "".out""). Sample Input Files; ==================. Below, we will provide a few simple input files as examples. A large ; number of sample input files, covering everything from single-point energies; using density-functional theory to response properties from coupled-cluster; theory, can be found in the :source:`samples` directory. Running a Basic Hartree--Fock Calculation; =========================================. In our first example, we will consider a Hartree--Fock SCF computation; for the water molecule using a cc-pVDZ basis set. We will specify the; geometry of our water molecule using a standard Z-matrix. .. literalinclude:: @SFNX_INCLUDE@samples/tu1-h2o-energy/input.dat. .. note:: The memory and basis set specifications are placed *before* the; energy function is called. Any user options need to; be set before the procedure they are meant to affect. For your convenience, the above example can be found in ; :srcsample:`tu1-h2o-energy`.; You can run it if you wish.; Once |PSIfour| is in your path (see the ; :ref:`User Configuration <faq:runordinaryexe>`; section of the installation instructions), you can run this computation by typing. >>> psi4 input.dat output.dat. If everything goes well, the computation should complete and should report; a final restricted Hartree--Fock energy in a section like this::. Energy converged. @RHF Final Energy: -76.02663273410671. By default, the energy should be converged to about :math:`1.0 \times 10^{-6}`, so agreement; is only expected for about the first 6 digits after the decimal. If the; computation does not complete, there is probably a problem with the; compilation or installation",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:3360,Energy Efficiency,energy,energy,3360,"he input file name and output file name on the the command line.; The syntax is:. >>> psi4 input-name output-name. If you give an input name but no output name, then the output name will; be the same as the input name (replacing any "".in"" or "".dat"" extension by "".out""). Sample Input Files; ==================. Below, we will provide a few simple input files as examples. A large ; number of sample input files, covering everything from single-point energies; using density-functional theory to response properties from coupled-cluster; theory, can be found in the :source:`samples` directory. Running a Basic Hartree--Fock Calculation; =========================================. In our first example, we will consider a Hartree--Fock SCF computation; for the water molecule using a cc-pVDZ basis set. We will specify the; geometry of our water molecule using a standard Z-matrix. .. literalinclude:: @SFNX_INCLUDE@samples/tu1-h2o-energy/input.dat. .. note:: The memory and basis set specifications are placed *before* the; energy function is called. Any user options need to; be set before the procedure they are meant to affect. For your convenience, the above example can be found in ; :srcsample:`tu1-h2o-energy`.; You can run it if you wish.; Once |PSIfour| is in your path (see the ; :ref:`User Configuration <faq:runordinaryexe>`; section of the installation instructions), you can run this computation by typing. >>> psi4 input.dat output.dat. If everything goes well, the computation should complete and should report; a final restricted Hartree--Fock energy in a section like this::. Energy converged. @RHF Final Energy: -76.02663273410671. By default, the energy should be converged to about :math:`1.0 \times 10^{-6}`, so agreement; is only expected for about the first 6 digits after the decimal. If the; computation does not complete, there is probably a problem with the; compilation or installation of the program (see the installation; instructions in Sec. :ref:`sec:installFile`). Th",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:3545,Energy Efficiency,energy,energy,3545,"put name will; be the same as the input name (replacing any "".in"" or "".dat"" extension by "".out""). Sample Input Files; ==================. Below, we will provide a few simple input files as examples. A large ; number of sample input files, covering everything from single-point energies; using density-functional theory to response properties from coupled-cluster; theory, can be found in the :source:`samples` directory. Running a Basic Hartree--Fock Calculation; =========================================. In our first example, we will consider a Hartree--Fock SCF computation; for the water molecule using a cc-pVDZ basis set. We will specify the; geometry of our water molecule using a standard Z-matrix. .. literalinclude:: @SFNX_INCLUDE@samples/tu1-h2o-energy/input.dat. .. note:: The memory and basis set specifications are placed *before* the; energy function is called. Any user options need to; be set before the procedure they are meant to affect. For your convenience, the above example can be found in ; :srcsample:`tu1-h2o-energy`.; You can run it if you wish.; Once |PSIfour| is in your path (see the ; :ref:`User Configuration <faq:runordinaryexe>`; section of the installation instructions), you can run this computation by typing. >>> psi4 input.dat output.dat. If everything goes well, the computation should complete and should report; a final restricted Hartree--Fock energy in a section like this::. Energy converged. @RHF Final Energy: -76.02663273410671. By default, the energy should be converged to about :math:`1.0 \times 10^{-6}`, so agreement; is only expected for about the first 6 digits after the decimal. If the; computation does not complete, there is probably a problem with the; compilation or installation of the program (see the installation; instructions in Sec. :ref:`sec:installFile`). This very simple input is sufficient to run the requested information.; Notice that we didn't tell the program some otherwise useful information; like the charge on the molecu",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:3897,Energy Efficiency,energy,energy,3897,"upled-cluster; theory, can be found in the :source:`samples` directory. Running a Basic Hartree--Fock Calculation; =========================================. In our first example, we will consider a Hartree--Fock SCF computation; for the water molecule using a cc-pVDZ basis set. We will specify the; geometry of our water molecule using a standard Z-matrix. .. literalinclude:: @SFNX_INCLUDE@samples/tu1-h2o-energy/input.dat. .. note:: The memory and basis set specifications are placed *before* the; energy function is called. Any user options need to; be set before the procedure they are meant to affect. For your convenience, the above example can be found in ; :srcsample:`tu1-h2o-energy`.; You can run it if you wish.; Once |PSIfour| is in your path (see the ; :ref:`User Configuration <faq:runordinaryexe>`; section of the installation instructions), you can run this computation by typing. >>> psi4 input.dat output.dat. If everything goes well, the computation should complete and should report; a final restricted Hartree--Fock energy in a section like this::. Energy converged. @RHF Final Energy: -76.02663273410671. By default, the energy should be converged to about :math:`1.0 \times 10^{-6}`, so agreement; is only expected for about the first 6 digits after the decimal. If the; computation does not complete, there is probably a problem with the; compilation or installation of the program (see the installation; instructions in Sec. :ref:`sec:installFile`). This very simple input is sufficient to run the requested information.; Notice that we didn't tell the program some otherwise useful information; like the charge on the molecule (0, it's neutral), the spin multiplicity; (1 for a closed-shell molecule with all electrons paired), or the reference; wavefunction to use (restricted Hartree--Fock, or RHF, is usually; appropriate for a closed-shell molecule). The program correctly guessed; all of these options for us. We can change the default behavior through; additional ke",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:4003,Energy Efficiency,energy,energy,4003,"n our first example, we will consider a Hartree--Fock SCF computation; for the water molecule using a cc-pVDZ basis set. We will specify the; geometry of our water molecule using a standard Z-matrix. .. literalinclude:: @SFNX_INCLUDE@samples/tu1-h2o-energy/input.dat. .. note:: The memory and basis set specifications are placed *before* the; energy function is called. Any user options need to; be set before the procedure they are meant to affect. For your convenience, the above example can be found in ; :srcsample:`tu1-h2o-energy`.; You can run it if you wish.; Once |PSIfour| is in your path (see the ; :ref:`User Configuration <faq:runordinaryexe>`; section of the installation instructions), you can run this computation by typing. >>> psi4 input.dat output.dat. If everything goes well, the computation should complete and should report; a final restricted Hartree--Fock energy in a section like this::. Energy converged. @RHF Final Energy: -76.02663273410671. By default, the energy should be converged to about :math:`1.0 \times 10^{-6}`, so agreement; is only expected for about the first 6 digits after the decimal. If the; computation does not complete, there is probably a problem with the; compilation or installation of the program (see the installation; instructions in Sec. :ref:`sec:installFile`). This very simple input is sufficient to run the requested information.; Notice that we didn't tell the program some otherwise useful information; like the charge on the molecule (0, it's neutral), the spin multiplicity; (1 for a closed-shell molecule with all electrons paired), or the reference; wavefunction to use (restricted Hartree--Fock, or RHF, is usually; appropriate for a closed-shell molecule). The program correctly guessed; all of these options for us. We can change the default behavior through; additional keywords. Let's consider what we would do for an open-shell molecule, where; not all electrons are paired. For example, let's run a computation; on methylene (CH",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:4490,Energy Efficiency,charge,charge,4490," you wish.; Once |PSIfour| is in your path (see the ; :ref:`User Configuration <faq:runordinaryexe>`; section of the installation instructions), you can run this computation by typing. >>> psi4 input.dat output.dat. If everything goes well, the computation should complete and should report; a final restricted Hartree--Fock energy in a section like this::. Energy converged. @RHF Final Energy: -76.02663273410671. By default, the energy should be converged to about :math:`1.0 \times 10^{-6}`, so agreement; is only expected for about the first 6 digits after the decimal. If the; computation does not complete, there is probably a problem with the; compilation or installation of the program (see the installation; instructions in Sec. :ref:`sec:installFile`). This very simple input is sufficient to run the requested information.; Notice that we didn't tell the program some otherwise useful information; like the charge on the molecule (0, it's neutral), the spin multiplicity; (1 for a closed-shell molecule with all electrons paired), or the reference; wavefunction to use (restricted Hartree--Fock, or RHF, is usually; appropriate for a closed-shell molecule). The program correctly guessed; all of these options for us. We can change the default behavior through; additional keywords. Let's consider what we would do for an open-shell molecule, where; not all electrons are paired. For example, let's run a computation; on methylene (CH\ :sub:`2`\ ), whose ground electronic state has two unpaired; electrons (triplet electronic state, or a spin multiplicity :math:`2S+1 = 3`).; In this case, the default spin multiplicity (1) is not correct, so we; need to tell the program the true value (3). Like many programs, |PSIfour|; can get the charge and multiplicity as the first two integers in the; Z-matrix. Note the line with ``0 3`` at the beginning of the molecule; specification below. In this example we will also specify the bond length; and bond angle as variables (:math:`R` and :math:`",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:5319,Energy Efficiency,charge,charge,5319,"e`). This very simple input is sufficient to run the requested information.; Notice that we didn't tell the program some otherwise useful information; like the charge on the molecule (0, it's neutral), the spin multiplicity; (1 for a closed-shell molecule with all electrons paired), or the reference; wavefunction to use (restricted Hartree--Fock, or RHF, is usually; appropriate for a closed-shell molecule). The program correctly guessed; all of these options for us. We can change the default behavior through; additional keywords. Let's consider what we would do for an open-shell molecule, where; not all electrons are paired. For example, let's run a computation; on methylene (CH\ :sub:`2`\ ), whose ground electronic state has two unpaired; electrons (triplet electronic state, or a spin multiplicity :math:`2S+1 = 3`).; In this case, the default spin multiplicity (1) is not correct, so we; need to tell the program the true value (3). Like many programs, |PSIfour|; can get the charge and multiplicity as the first two integers in the; Z-matrix. Note the line with ``0 3`` at the beginning of the molecule; specification below. In this example we will also specify the bond length; and bond angle as variables (:math:`R` and :math:`A`), whose values are given; at the end of the Z-matrix specification. .. literalinclude:: @SFNX_INCLUDE@samples/tu2-ch2-energy/input.dat. This sample input can be found in ; :srcsample:`tu2-ch2-energy` and as; before it can be run through the command ``psi4 input.dat output.dat``; (actually, because ``psi4`` by default looks for an input file named; ``input.dat`` and writes by default to a file called ``output.dat``, in this; case one could also just type ``psi4``). If it works, it should print; the final energy as ::. @UHF Final Energy: -38.92533462456894. Notice we added a new keyword, ``set reference uhf``, to the input. For; open-shell molecules, we have a choice of unrestricted orbitals; (unrestricted Hartree--Fock, or UHF), or restricted orb",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:5694,Energy Efficiency,energy,energy,5694,"k, or RHF, is usually; appropriate for a closed-shell molecule). The program correctly guessed; all of these options for us. We can change the default behavior through; additional keywords. Let's consider what we would do for an open-shell molecule, where; not all electrons are paired. For example, let's run a computation; on methylene (CH\ :sub:`2`\ ), whose ground electronic state has two unpaired; electrons (triplet electronic state, or a spin multiplicity :math:`2S+1 = 3`).; In this case, the default spin multiplicity (1) is not correct, so we; need to tell the program the true value (3). Like many programs, |PSIfour|; can get the charge and multiplicity as the first two integers in the; Z-matrix. Note the line with ``0 3`` at the beginning of the molecule; specification below. In this example we will also specify the bond length; and bond angle as variables (:math:`R` and :math:`A`), whose values are given; at the end of the Z-matrix specification. .. literalinclude:: @SFNX_INCLUDE@samples/tu2-ch2-energy/input.dat. This sample input can be found in ; :srcsample:`tu2-ch2-energy` and as; before it can be run through the command ``psi4 input.dat output.dat``; (actually, because ``psi4`` by default looks for an input file named; ``input.dat`` and writes by default to a file called ``output.dat``, in this; case one could also just type ``psi4``). If it works, it should print; the final energy as ::. @UHF Final Energy: -38.92533462456894. Notice we added a new keyword, ``set reference uhf``, to the input. For; open-shell molecules, we have a choice of unrestricted orbitals; (unrestricted Hartree--Fock, or UHF), or restricted orbitals (restricted; open-shell Hartree--Fock, or ROHF). Usually, UHF is a little easier to; converge (although it may be more susceptible to spin contamination than; ROHF). Geometry Optimization and Vibrational Frequency Analysis; ========================================================. The above examples were simple single-point energy computa",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:5768,Energy Efficiency,energy,energy,5768,"l of these options for us. We can change the default behavior through; additional keywords. Let's consider what we would do for an open-shell molecule, where; not all electrons are paired. For example, let's run a computation; on methylene (CH\ :sub:`2`\ ), whose ground electronic state has two unpaired; electrons (triplet electronic state, or a spin multiplicity :math:`2S+1 = 3`).; In this case, the default spin multiplicity (1) is not correct, so we; need to tell the program the true value (3). Like many programs, |PSIfour|; can get the charge and multiplicity as the first two integers in the; Z-matrix. Note the line with ``0 3`` at the beginning of the molecule; specification below. In this example we will also specify the bond length; and bond angle as variables (:math:`R` and :math:`A`), whose values are given; at the end of the Z-matrix specification. .. literalinclude:: @SFNX_INCLUDE@samples/tu2-ch2-energy/input.dat. This sample input can be found in ; :srcsample:`tu2-ch2-energy` and as; before it can be run through the command ``psi4 input.dat output.dat``; (actually, because ``psi4`` by default looks for an input file named; ``input.dat`` and writes by default to a file called ``output.dat``, in this; case one could also just type ``psi4``). If it works, it should print; the final energy as ::. @UHF Final Energy: -38.92533462456894. Notice we added a new keyword, ``set reference uhf``, to the input. For; open-shell molecules, we have a choice of unrestricted orbitals; (unrestricted Hartree--Fock, or UHF), or restricted orbitals (restricted; open-shell Hartree--Fock, or ROHF). Usually, UHF is a little easier to; converge (although it may be more susceptible to spin contamination than; ROHF). Geometry Optimization and Vibrational Frequency Analysis; ========================================================. The above examples were simple single-point energy computations; (as specified by the :py:func:`~psi4.driver.energy` function). Of course there are other; k",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:6085,Energy Efficiency,energy,energy,6085,"npaired; electrons (triplet electronic state, or a spin multiplicity :math:`2S+1 = 3`).; In this case, the default spin multiplicity (1) is not correct, so we; need to tell the program the true value (3). Like many programs, |PSIfour|; can get the charge and multiplicity as the first two integers in the; Z-matrix. Note the line with ``0 3`` at the beginning of the molecule; specification below. In this example we will also specify the bond length; and bond angle as variables (:math:`R` and :math:`A`), whose values are given; at the end of the Z-matrix specification. .. literalinclude:: @SFNX_INCLUDE@samples/tu2-ch2-energy/input.dat. This sample input can be found in ; :srcsample:`tu2-ch2-energy` and as; before it can be run through the command ``psi4 input.dat output.dat``; (actually, because ``psi4`` by default looks for an input file named; ``input.dat`` and writes by default to a file called ``output.dat``, in this; case one could also just type ``psi4``). If it works, it should print; the final energy as ::. @UHF Final Energy: -38.92533462456894. Notice we added a new keyword, ``set reference uhf``, to the input. For; open-shell molecules, we have a choice of unrestricted orbitals; (unrestricted Hartree--Fock, or UHF), or restricted orbitals (restricted; open-shell Hartree--Fock, or ROHF). Usually, UHF is a little easier to; converge (although it may be more susceptible to spin contamination than; ROHF). Geometry Optimization and Vibrational Frequency Analysis; ========================================================. The above examples were simple single-point energy computations; (as specified by the :py:func:`~psi4.driver.energy` function). Of course there are other; kinds of computations to perform, such as geometry optimizations and; vibrational frequency computations. These can be specified by replacing; :py:func:`~psi4.driver.energy` with :py:func:`~psi4.driver.optimize` or :py:func:`~psi4.driver.frequency`, respectively. Here's an example of optimizing t",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:6663,Energy Efficiency,energy,energy,6663,"_INCLUDE@samples/tu2-ch2-energy/input.dat. This sample input can be found in ; :srcsample:`tu2-ch2-energy` and as; before it can be run through the command ``psi4 input.dat output.dat``; (actually, because ``psi4`` by default looks for an input file named; ``input.dat`` and writes by default to a file called ``output.dat``, in this; case one could also just type ``psi4``). If it works, it should print; the final energy as ::. @UHF Final Energy: -38.92533462456894. Notice we added a new keyword, ``set reference uhf``, to the input. For; open-shell molecules, we have a choice of unrestricted orbitals; (unrestricted Hartree--Fock, or UHF), or restricted orbitals (restricted; open-shell Hartree--Fock, or ROHF). Usually, UHF is a little easier to; converge (although it may be more susceptible to spin contamination than; ROHF). Geometry Optimization and Vibrational Frequency Analysis; ========================================================. The above examples were simple single-point energy computations; (as specified by the :py:func:`~psi4.driver.energy` function). Of course there are other; kinds of computations to perform, such as geometry optimizations and; vibrational frequency computations. These can be specified by replacing; :py:func:`~psi4.driver.energy` with :py:func:`~psi4.driver.optimize` or :py:func:`~psi4.driver.frequency`, respectively. Here's an example of optimizing the H\ :sub:`2`\ O molecule using Hartree--Fock with; a cc-pVDZ basis set (located in; :srcsample:`tu3-h2o-opt`). .. literalinclude:: @SFNX_INCLUDE@samples/tu3-h2o-opt/input.dat. This should perform a series of gradient computations. The gradient points; which way is downhill in energy, and the optimizer then modifies the; geometry to follow the gradient. After a few cycles, the geometry should; converge with a message like ``Optimization is complete!``. As indicated; in the following table (printed by the optimizer at the end of the; computation and grep-able with ``~``), the energy decreases",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:6728,Energy Efficiency,energy,energy,6728,"found in ; :srcsample:`tu2-ch2-energy` and as; before it can be run through the command ``psi4 input.dat output.dat``; (actually, because ``psi4`` by default looks for an input file named; ``input.dat`` and writes by default to a file called ``output.dat``, in this; case one could also just type ``psi4``). If it works, it should print; the final energy as ::. @UHF Final Energy: -38.92533462456894. Notice we added a new keyword, ``set reference uhf``, to the input. For; open-shell molecules, we have a choice of unrestricted orbitals; (unrestricted Hartree--Fock, or UHF), or restricted orbitals (restricted; open-shell Hartree--Fock, or ROHF). Usually, UHF is a little easier to; converge (although it may be more susceptible to spin contamination than; ROHF). Geometry Optimization and Vibrational Frequency Analysis; ========================================================. The above examples were simple single-point energy computations; (as specified by the :py:func:`~psi4.driver.energy` function). Of course there are other; kinds of computations to perform, such as geometry optimizations and; vibrational frequency computations. These can be specified by replacing; :py:func:`~psi4.driver.energy` with :py:func:`~psi4.driver.optimize` or :py:func:`~psi4.driver.frequency`, respectively. Here's an example of optimizing the H\ :sub:`2`\ O molecule using Hartree--Fock with; a cc-pVDZ basis set (located in; :srcsample:`tu3-h2o-opt`). .. literalinclude:: @SFNX_INCLUDE@samples/tu3-h2o-opt/input.dat. This should perform a series of gradient computations. The gradient points; which way is downhill in energy, and the optimizer then modifies the; geometry to follow the gradient. After a few cycles, the geometry should; converge with a message like ``Optimization is complete!``. As indicated; in the following table (printed by the optimizer at the end of the; computation and grep-able with ``~``), the energy decreases with each step,; and the maximum force on each atom also decreases",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:6940,Energy Efficiency,energy,energy,6940,"default to a file called ``output.dat``, in this; case one could also just type ``psi4``). If it works, it should print; the final energy as ::. @UHF Final Energy: -38.92533462456894. Notice we added a new keyword, ``set reference uhf``, to the input. For; open-shell molecules, we have a choice of unrestricted orbitals; (unrestricted Hartree--Fock, or UHF), or restricted orbitals (restricted; open-shell Hartree--Fock, or ROHF). Usually, UHF is a little easier to; converge (although it may be more susceptible to spin contamination than; ROHF). Geometry Optimization and Vibrational Frequency Analysis; ========================================================. The above examples were simple single-point energy computations; (as specified by the :py:func:`~psi4.driver.energy` function). Of course there are other; kinds of computations to perform, such as geometry optimizations and; vibrational frequency computations. These can be specified by replacing; :py:func:`~psi4.driver.energy` with :py:func:`~psi4.driver.optimize` or :py:func:`~psi4.driver.frequency`, respectively. Here's an example of optimizing the H\ :sub:`2`\ O molecule using Hartree--Fock with; a cc-pVDZ basis set (located in; :srcsample:`tu3-h2o-opt`). .. literalinclude:: @SFNX_INCLUDE@samples/tu3-h2o-opt/input.dat. This should perform a series of gradient computations. The gradient points; which way is downhill in energy, and the optimizer then modifies the; geometry to follow the gradient. After a few cycles, the geometry should; converge with a message like ``Optimization is complete!``. As indicated; in the following table (printed by the optimizer at the end of the; computation and grep-able with ``~``), the energy decreases with each step,; and the maximum force on each atom also decreases with each step (in; principle these numbers could increase in some iterations, but here they do; not). ::. --------------------------------------------------------------------------------------------------------------",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:7350,Energy Efficiency,energy,energy,7350,"ree--Fock, or ROHF). Usually, UHF is a little easier to; converge (although it may be more susceptible to spin contamination than; ROHF). Geometry Optimization and Vibrational Frequency Analysis; ========================================================. The above examples were simple single-point energy computations; (as specified by the :py:func:`~psi4.driver.energy` function). Of course there are other; kinds of computations to perform, such as geometry optimizations and; vibrational frequency computations. These can be specified by replacing; :py:func:`~psi4.driver.energy` with :py:func:`~psi4.driver.optimize` or :py:func:`~psi4.driver.frequency`, respectively. Here's an example of optimizing the H\ :sub:`2`\ O molecule using Hartree--Fock with; a cc-pVDZ basis set (located in; :srcsample:`tu3-h2o-opt`). .. literalinclude:: @SFNX_INCLUDE@samples/tu3-h2o-opt/input.dat. This should perform a series of gradient computations. The gradient points; which way is downhill in energy, and the optimizer then modifies the; geometry to follow the gradient. After a few cycles, the geometry should; converge with a message like ``Optimization is complete!``. As indicated; in the following table (printed by the optimizer at the end of the; computation and grep-able with ``~``), the energy decreases with each step,; and the maximum force on each atom also decreases with each step (in; principle these numbers could increase in some iterations, but here they do; not). ::. --------------------------------------------------------------------------------------------------------------- ~; Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; --------------------------------------------------------------------------------------------------------------- ~; 1 -76.026632734857 -76.026632734857 0.01523505 0.01245744 0.02742199 0.02277500 ~; 2 -76.027022668419 -0.000389933562 0.00178749 0.00142923 0.01007985 0.00594840 ~; 3 -76.027032729361 -0.000010060942 0.00014016 0.00008485 0",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:7654,Energy Efficiency,energy,energy,7654,"(as specified by the :py:func:`~psi4.driver.energy` function). Of course there are other; kinds of computations to perform, such as geometry optimizations and; vibrational frequency computations. These can be specified by replacing; :py:func:`~psi4.driver.energy` with :py:func:`~psi4.driver.optimize` or :py:func:`~psi4.driver.frequency`, respectively. Here's an example of optimizing the H\ :sub:`2`\ O molecule using Hartree--Fock with; a cc-pVDZ basis set (located in; :srcsample:`tu3-h2o-opt`). .. literalinclude:: @SFNX_INCLUDE@samples/tu3-h2o-opt/input.dat. This should perform a series of gradient computations. The gradient points; which way is downhill in energy, and the optimizer then modifies the; geometry to follow the gradient. After a few cycles, the geometry should; converge with a message like ``Optimization is complete!``. As indicated; in the following table (printed by the optimizer at the end of the; computation and grep-able with ``~``), the energy decreases with each step,; and the maximum force on each atom also decreases with each step (in; principle these numbers could increase in some iterations, but here they do; not). ::. --------------------------------------------------------------------------------------------------------------- ~; Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; --------------------------------------------------------------------------------------------------------------- ~; 1 -76.026632734857 -76.026632734857 0.01523505 0.01245744 0.02742199 0.02277500 ~; 2 -76.027022668419 -0.000389933562 0.00178749 0.00142923 0.01007985 0.00594840 ~; 3 -76.027032729361 -0.000010060942 0.00014016 0.00008485 0.00077279 0.00044621 ~; --------------------------------------------------------------------------------------------------------------- ~. To get harmonic vibrational frequencies, it's important to keep in mind that; the values of the vibrational frequencies are a function of the molecular; geometry. Therefore, *it's ",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:9719,Energy Efficiency,energy,energy,9719,"olecular; geometry. Therefore, *it's important to obtain the vibrational frequencies ; at the OPTIMIZED GEOMETRY*. We could set up a second input file to perform; the vibrational frequency analysis, being very careful to copy over the; optimized geometry from the *bottom* of the output file for the geometry; optimization. This geometry could be specified in either z-matrix or; Cartesian formats. However, there's a much easier way to do this. If we; specify a vibrational frequency analysis in the same input file as the; optimization, after the optimization function has been called, then the; optimized geometry will automatically be carried over. So, it's easiset to do the optimization and vibrational frequency analysis; together. This can be specified as follows (see test case; :srcsample:`tu4-h2o-freq`):. .. literalinclude:: @SFNX_INCLUDE@samples/tu4-h2o-freq/input.dat. The program will do the same optimization as in our previous example,; but then it will follow it with some computations to obtain the Hessian; (second derivative matrix) of the electronic energy with respect to; nuclear displacements. From this, it can obtain the harmonic vibrational; frequencies, given below (roundoff errors of around 0.1 cm\ :sup:`-1`; may exist)::. Irrep Harmonic Frequency; (cm-1); -----------------------------------------------; A1 1775.6480; A1 4113.3794; B2 4212.1826; -----------------------------------------------. Notice that the symmetry type of the normal modes is specified (A1, A1,; B2). The program also prints out the normal modes in terms of Cartesian; coordinates of each atom. For example, the normal mode at 1776 cm\ :sup:`-1` ; is::. Frequency: 1775.65; Force constant: 0.1193; X Y Z mass; O 0.000 0.000 -0.270 15.994915; H 0.000 0.417 0.538 1.007825; H 0.000 -0.417 0.538 1.007825. where the table shows the displacements in the X, Y, and Z dimensions for; each atom along the normal mode coordinate. (This information could be used; to animate the vibrational frequency us",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:10997,Energy Efficiency,energy,energy,10997,"--------------------------------------------; A1 1775.6480; A1 4113.3794; B2 4212.1826; -----------------------------------------------. Notice that the symmetry type of the normal modes is specified (A1, A1,; B2). The program also prints out the normal modes in terms of Cartesian; coordinates of each atom. For example, the normal mode at 1776 cm\ :sup:`-1` ; is::. Frequency: 1775.65; Force constant: 0.1193; X Y Z mass; O 0.000 0.000 -0.270 15.994915; H 0.000 0.417 0.538 1.007825; H 0.000 -0.417 0.538 1.007825. where the table shows the displacements in the X, Y, and Z dimensions for; each atom along the normal mode coordinate. (This information could be used; to animate the vibrational frequency using visualization software.). Because the vibrational frequencies are available, a thermodynamics; analysis is automatically performed at the end of the computation.; You can see this in the next section of the output file. The vibrational; frequencies are sufficient to obtain vibrational contributions to; enthalpy (H), entropy (S), and Gibbs free energy (G). Similarly, the; molecular geometry is used to obtain rotational constants, which are; then used to obtain rotational contributions to H, S, and G. .. _`sec:tutorial_tu5`:. Analysis of Intermolecular Interactions; =======================================. Now let's consider something a little more interesting. |PSIfour|; contains code to analyze the nature of intermolecular interactions; between two molecules, via symmetry-adapted perturbation theory; (SAPT) [Jeziorski:1994:1887]_. This kind of analysis gives a lot; of insight into the nature of intermolecular interactions, and |PSIfour|; makes these computations easier than ever. For a SAPT computation, the input needs to provide information on two; distinct molecules. This is very easy, we just give a Z-matrix or set of; Cartesian coordinates for each molecule, and separate the two with two; dashes, like this::. # Example SAPT computation for ethene*ethine (*i.e.*, e",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:11434,Energy Efficiency,adapt,adapted,11434,"417 0.538 1.007825; H 0.000 -0.417 0.538 1.007825. where the table shows the displacements in the X, Y, and Z dimensions for; each atom along the normal mode coordinate. (This information could be used; to animate the vibrational frequency using visualization software.). Because the vibrational frequencies are available, a thermodynamics; analysis is automatically performed at the end of the computation.; You can see this in the next section of the output file. The vibrational; frequencies are sufficient to obtain vibrational contributions to; enthalpy (H), entropy (S), and Gibbs free energy (G). Similarly, the; molecular geometry is used to obtain rotational constants, which are; then used to obtain rotational contributions to H, S, and G. .. _`sec:tutorial_tu5`:. Analysis of Intermolecular Interactions; =======================================. Now let's consider something a little more interesting. |PSIfour|; contains code to analyze the nature of intermolecular interactions; between two molecules, via symmetry-adapted perturbation theory; (SAPT) [Jeziorski:1994:1887]_. This kind of analysis gives a lot; of insight into the nature of intermolecular interactions, and |PSIfour|; makes these computations easier than ever. For a SAPT computation, the input needs to provide information on two; distinct molecules. This is very easy, we just give a Z-matrix or set of; Cartesian coordinates for each molecule, and separate the two with two; dashes, like this::. # Example SAPT computation for ethene*ethine (*i.e.*, ethylene*acetylene),; # test case 16 from the S22 database; ; molecule dimer {; 0 1; C 0.000000 -0.667578 -2.124659; C 0.000000 0.667578 -2.124659; H 0.923621 -1.232253 -2.126185; H -0.923621 -1.232253 -2.126185; H -0.923621 1.232253 -2.126185; H 0.923621 1.232253 -2.126185; --; 0 1; C 0.000000 0.000000 2.900503; C 0.000000 0.000000 1.693240; H 0.000000 0.000000 0.627352; H 0.000000 0.000000 3.963929; units angstrom; ; }. Here's the second half of the input, where",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:12508,Energy Efficiency,energy,energy,12508,"4:1887]_. This kind of analysis gives a lot; of insight into the nature of intermolecular interactions, and |PSIfour|; makes these computations easier than ever. For a SAPT computation, the input needs to provide information on two; distinct molecules. This is very easy, we just give a Z-matrix or set of; Cartesian coordinates for each molecule, and separate the two with two; dashes, like this::. # Example SAPT computation for ethene*ethine (*i.e.*, ethylene*acetylene),; # test case 16 from the S22 database; ; molecule dimer {; 0 1; C 0.000000 -0.667578 -2.124659; C 0.000000 0.667578 -2.124659; H 0.923621 -1.232253 -2.126185; H -0.923621 -1.232253 -2.126185; H -0.923621 1.232253 -2.126185; H 0.923621 1.232253 -2.126185; --; 0 1; C 0.000000 0.000000 2.900503; C 0.000000 0.000000 1.693240; H 0.000000 0.000000 0.627352; H 0.000000 0.000000 3.963929; units angstrom; ; }. Here's the second half of the input, where we specify the computation; options::. set {; basis jun-cc-pVDZ; scf_type DF; freeze_core True; }; ; energy('sapt0'). Before, we have been setting keywords individually with commands like; ``set basis cc-pVDZ``. Because we have a few more options now, it's; convenient to place them together into the ``set``; block, bounded by ``{...}``. This; will set all of these options as ""global"" options (meaning that they are; visible to all parts of the program). Most common |PSIfour| options can be; set in a globals section like this. If an option needs to be visible; only to one part of the program (*e.g.*, we only want to increase the; energy convergence in the SCF code, but not the rest of the; code), it can be placed in a section of input visible to that part of the; program (*e.g.*, ``set scf e_convergence 1.0E-8``). Back to our SAPT example, we have found that for basic-level SAPT; computations (*i.e.*, SAPT0), a good error cancellation is found; [Hohenstein:2012:WIREs]_ with the jun-cc-pVDZ basis (this is the; usual aug-cc-pVDZ basis, but without diffuse functions ",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:13043,Energy Efficiency,energy,energy,13043,"232253 -2.126185; H -0.923621 -1.232253 -2.126185; H -0.923621 1.232253 -2.126185; H 0.923621 1.232253 -2.126185; --; 0 1; C 0.000000 0.000000 2.900503; C 0.000000 0.000000 1.693240; H 0.000000 0.000000 0.627352; H 0.000000 0.000000 3.963929; units angstrom; ; }. Here's the second half of the input, where we specify the computation; options::. set {; basis jun-cc-pVDZ; scf_type DF; freeze_core True; }; ; energy('sapt0'). Before, we have been setting keywords individually with commands like; ``set basis cc-pVDZ``. Because we have a few more options now, it's; convenient to place them together into the ``set``; block, bounded by ``{...}``. This; will set all of these options as ""global"" options (meaning that they are; visible to all parts of the program). Most common |PSIfour| options can be; set in a globals section like this. If an option needs to be visible; only to one part of the program (*e.g.*, we only want to increase the; energy convergence in the SCF code, but not the rest of the; code), it can be placed in a section of input visible to that part of the; program (*e.g.*, ``set scf e_convergence 1.0E-8``). Back to our SAPT example, we have found that for basic-level SAPT; computations (*i.e.*, SAPT0), a good error cancellation is found; [Hohenstein:2012:WIREs]_ with the jun-cc-pVDZ basis (this is the; usual aug-cc-pVDZ basis, but without diffuse functions on hydrogen and; without diffuse :math:`d` functions on heavy atoms) [Papajak:2011:10]_. So,; we'll use that as our standard basis set. The SAPT code is designed to; use density fitting techniques, because they introduce minimal errors; while providing much faster computations [Hohenstein:2010:184111]_ ; [Hohenstein:2010:014101]_. Since we're using density fitting for the SAPT,; we might as well also use it for the Hartree--Fock computations that are; performed as part of the SAPT. We can specify that with ; ``scf_type DF``. Density fitting procedures require the use of auxiliary basis sets that; pair with th",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:14723,Energy Efficiency,energy,energy,14723,"e minimal errors; while providing much faster computations [Hohenstein:2010:184111]_ ; [Hohenstein:2010:014101]_. Since we're using density fitting for the SAPT,; we might as well also use it for the Hartree--Fock computations that are; performed as part of the SAPT. We can specify that with ; ``scf_type DF``. Density fitting procedures require the use of auxiliary basis sets that; pair with the primary basis set. Fortunately, |PSIfour| is usually smart; enough to figure out what auxiliary basis sets are needed for a given; computation. In this case, jun-cc-pVDZ is a standard enough basis set; (just a simple truncation of the very popular aug-cc-pVDZ basis set); that |PSIfour| correctly guesses that we want the jun-cc-pVDZ-JKFIT; auxiliary basis for the Hartree--Fock, and the jun-cc-pVDZ-RI basis set; for the SAPT procedure. To speed up the computation a little, we also tell the SAPT procedure to; freeze the core electrons with ``freeze_core True``. The SAPT; procedure is invoked with the simple call, ``energy('sapt0')``. This; call knows to automatically run two monomer computations and a dimer; computation and then use these results to perform the SAPT analysis. The; various energy components are printed at the end of the output, in addition; to the total SAPT0 interaction energy. An explanation of the various; energy components can be found in the review by Jeziorski, Moszynski, and; Szalewicz [Jeziorski:1994:1887]_, and this is discussed in more detail; in the SAPT section later in this manual. For now, we'll note that most of; the SAPT energy components are negative; this means those are attractive; contributions (the zero of energy in a SAPT computation is defined as; non-interacting monomers). The exchange contributions are positive; (repulsive). In this example, the most attractive contribution between; ethylene and acetylene is an electrostatic term of -2.12 |kcalpermol|; (``Elst10,r`` where the 1 indicates the first-order; perturbation theory result with r",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:14900,Energy Efficiency,energy,energy,14900,"rmed as part of the SAPT. We can specify that with ; ``scf_type DF``. Density fitting procedures require the use of auxiliary basis sets that; pair with the primary basis set. Fortunately, |PSIfour| is usually smart; enough to figure out what auxiliary basis sets are needed for a given; computation. In this case, jun-cc-pVDZ is a standard enough basis set; (just a simple truncation of the very popular aug-cc-pVDZ basis set); that |PSIfour| correctly guesses that we want the jun-cc-pVDZ-JKFIT; auxiliary basis for the Hartree--Fock, and the jun-cc-pVDZ-RI basis set; for the SAPT procedure. To speed up the computation a little, we also tell the SAPT procedure to; freeze the core electrons with ``freeze_core True``. The SAPT; procedure is invoked with the simple call, ``energy('sapt0')``. This; call knows to automatically run two monomer computations and a dimer; computation and then use these results to perform the SAPT analysis. The; various energy components are printed at the end of the output, in addition; to the total SAPT0 interaction energy. An explanation of the various; energy components can be found in the review by Jeziorski, Moszynski, and; Szalewicz [Jeziorski:1994:1887]_, and this is discussed in more detail; in the SAPT section later in this manual. For now, we'll note that most of; the SAPT energy components are negative; this means those are attractive; contributions (the zero of energy in a SAPT computation is defined as; non-interacting monomers). The exchange contributions are positive; (repulsive). In this example, the most attractive contribution between; ethylene and acetylene is an electrostatic term of -2.12 |kcalpermol|; (``Elst10,r`` where the 1 indicates the first-order; perturbation theory result with respect to the intermolecular interaction,; and the 0 indicates zeroth-order with respect to intramolecular electron; correlation). The next most attractive contribution is the ``Disp20``; term (2nd order intermolecular dispersion, which looks ",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:15000,Energy Efficiency,energy,energy,15000,"rmed as part of the SAPT. We can specify that with ; ``scf_type DF``. Density fitting procedures require the use of auxiliary basis sets that; pair with the primary basis set. Fortunately, |PSIfour| is usually smart; enough to figure out what auxiliary basis sets are needed for a given; computation. In this case, jun-cc-pVDZ is a standard enough basis set; (just a simple truncation of the very popular aug-cc-pVDZ basis set); that |PSIfour| correctly guesses that we want the jun-cc-pVDZ-JKFIT; auxiliary basis for the Hartree--Fock, and the jun-cc-pVDZ-RI basis set; for the SAPT procedure. To speed up the computation a little, we also tell the SAPT procedure to; freeze the core electrons with ``freeze_core True``. The SAPT; procedure is invoked with the simple call, ``energy('sapt0')``. This; call knows to automatically run two monomer computations and a dimer; computation and then use these results to perform the SAPT analysis. The; various energy components are printed at the end of the output, in addition; to the total SAPT0 interaction energy. An explanation of the various; energy components can be found in the review by Jeziorski, Moszynski, and; Szalewicz [Jeziorski:1994:1887]_, and this is discussed in more detail; in the SAPT section later in this manual. For now, we'll note that most of; the SAPT energy components are negative; this means those are attractive; contributions (the zero of energy in a SAPT computation is defined as; non-interacting monomers). The exchange contributions are positive; (repulsive). In this example, the most attractive contribution between; ethylene and acetylene is an electrostatic term of -2.12 |kcalpermol|; (``Elst10,r`` where the 1 indicates the first-order; perturbation theory result with respect to the intermolecular interaction,; and the 0 indicates zeroth-order with respect to intramolecular electron; correlation). The next most attractive contribution is the ``Disp20``; term (2nd order intermolecular dispersion, which looks ",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:15039,Energy Efficiency,energy,energy,15039,"set. Fortunately, |PSIfour| is usually smart; enough to figure out what auxiliary basis sets are needed for a given; computation. In this case, jun-cc-pVDZ is a standard enough basis set; (just a simple truncation of the very popular aug-cc-pVDZ basis set); that |PSIfour| correctly guesses that we want the jun-cc-pVDZ-JKFIT; auxiliary basis for the Hartree--Fock, and the jun-cc-pVDZ-RI basis set; for the SAPT procedure. To speed up the computation a little, we also tell the SAPT procedure to; freeze the core electrons with ``freeze_core True``. The SAPT; procedure is invoked with the simple call, ``energy('sapt0')``. This; call knows to automatically run two monomer computations and a dimer; computation and then use these results to perform the SAPT analysis. The; various energy components are printed at the end of the output, in addition; to the total SAPT0 interaction energy. An explanation of the various; energy components can be found in the review by Jeziorski, Moszynski, and; Szalewicz [Jeziorski:1994:1887]_, and this is discussed in more detail; in the SAPT section later in this manual. For now, we'll note that most of; the SAPT energy components are negative; this means those are attractive; contributions (the zero of energy in a SAPT computation is defined as; non-interacting monomers). The exchange contributions are positive; (repulsive). In this example, the most attractive contribution between; ethylene and acetylene is an electrostatic term of -2.12 |kcalpermol|; (``Elst10,r`` where the 1 indicates the first-order; perturbation theory result with respect to the intermolecular interaction,; and the 0 indicates zeroth-order with respect to intramolecular electron; correlation). The next most attractive contribution is the ``Disp20``; term (2nd order intermolecular dispersion, which looks like an MP2 in which; one excitation is placed on each monomer), contributing an attraction of; -1.21 |kcalpermol|. It is not surprising that the electrostatic; contribut",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:15271,Energy Efficiency,energy,energy,15271," of the very popular aug-cc-pVDZ basis set); that |PSIfour| correctly guesses that we want the jun-cc-pVDZ-JKFIT; auxiliary basis for the Hartree--Fock, and the jun-cc-pVDZ-RI basis set; for the SAPT procedure. To speed up the computation a little, we also tell the SAPT procedure to; freeze the core electrons with ``freeze_core True``. The SAPT; procedure is invoked with the simple call, ``energy('sapt0')``. This; call knows to automatically run two monomer computations and a dimer; computation and then use these results to perform the SAPT analysis. The; various energy components are printed at the end of the output, in addition; to the total SAPT0 interaction energy. An explanation of the various; energy components can be found in the review by Jeziorski, Moszynski, and; Szalewicz [Jeziorski:1994:1887]_, and this is discussed in more detail; in the SAPT section later in this manual. For now, we'll note that most of; the SAPT energy components are negative; this means those are attractive; contributions (the zero of energy in a SAPT computation is defined as; non-interacting monomers). The exchange contributions are positive; (repulsive). In this example, the most attractive contribution between; ethylene and acetylene is an electrostatic term of -2.12 |kcalpermol|; (``Elst10,r`` where the 1 indicates the first-order; perturbation theory result with respect to the intermolecular interaction,; and the 0 indicates zeroth-order with respect to intramolecular electron; correlation). The next most attractive contribution is the ``Disp20``; term (2nd order intermolecular dispersion, which looks like an MP2 in which; one excitation is placed on each monomer), contributing an attraction of; -1.21 |kcalpermol|. It is not surprising that the electrostatic; contribution is dominant, because the geometry chosen for this example has the; acetylene perpendicular to the ethylene, with the acetylene hydrogen; pointing directly at the double bond in ethylene; this will be attractiv",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:15363,Energy Efficiency,energy,energy,15363," of the very popular aug-cc-pVDZ basis set); that |PSIfour| correctly guesses that we want the jun-cc-pVDZ-JKFIT; auxiliary basis for the Hartree--Fock, and the jun-cc-pVDZ-RI basis set; for the SAPT procedure. To speed up the computation a little, we also tell the SAPT procedure to; freeze the core electrons with ``freeze_core True``. The SAPT; procedure is invoked with the simple call, ``energy('sapt0')``. This; call knows to automatically run two monomer computations and a dimer; computation and then use these results to perform the SAPT analysis. The; various energy components are printed at the end of the output, in addition; to the total SAPT0 interaction energy. An explanation of the various; energy components can be found in the review by Jeziorski, Moszynski, and; Szalewicz [Jeziorski:1994:1887]_, and this is discussed in more detail; in the SAPT section later in this manual. For now, we'll note that most of; the SAPT energy components are negative; this means those are attractive; contributions (the zero of energy in a SAPT computation is defined as; non-interacting monomers). The exchange contributions are positive; (repulsive). In this example, the most attractive contribution between; ethylene and acetylene is an electrostatic term of -2.12 |kcalpermol|; (``Elst10,r`` where the 1 indicates the first-order; perturbation theory result with respect to the intermolecular interaction,; and the 0 indicates zeroth-order with respect to intramolecular electron; correlation). The next most attractive contribution is the ``Disp20``; term (2nd order intermolecular dispersion, which looks like an MP2 in which; one excitation is placed on each monomer), contributing an attraction of; -1.21 |kcalpermol|. It is not surprising that the electrostatic; contribution is dominant, because the geometry chosen for this example has the; acetylene perpendicular to the ethylene, with the acetylene hydrogen; pointing directly at the double bond in ethylene; this will be attractiv",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:16390,Energy Efficiency,charge,charge,16390," energy components are negative; this means those are attractive; contributions (the zero of energy in a SAPT computation is defined as; non-interacting monomers). The exchange contributions are positive; (repulsive). In this example, the most attractive contribution between; ethylene and acetylene is an electrostatic term of -2.12 |kcalpermol|; (``Elst10,r`` where the 1 indicates the first-order; perturbation theory result with respect to the intermolecular interaction,; and the 0 indicates zeroth-order with respect to intramolecular electron; correlation). The next most attractive contribution is the ``Disp20``; term (2nd order intermolecular dispersion, which looks like an MP2 in which; one excitation is placed on each monomer), contributing an attraction of; -1.21 |kcalpermol|. It is not surprising that the electrostatic; contribution is dominant, because the geometry chosen for this example has the; acetylene perpendicular to the ethylene, with the acetylene hydrogen; pointing directly at the double bond in ethylene; this will be attractive; because the H atoms in acetylene bear a partial positive charge, while the; electron-rich double bond in ethylene bears a partial negative charge. At; the same time, the dispersion interaction should be smaller because the; perpendicular geometry does not allow much overlap between the monomers.; Hence, the SAPT analysis helps clarify (and quantify) our physical; understanding about the interaction between the two monomers. Potential Surface Scans and Counterpoise Correction Made Easy with Psithon; ==========================================================================. Finally, let's consider an example that shows how the Python driver; in |PSIfour| simplifies some routine tasks. |PSIfour| can interpret; valid Python code in addition to the computational chemistry directives; we've seen in the previous examples; we call this mixture Psithon.; The Python computer language is very easy to pick up, and even users; previousl",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:16472,Energy Efficiency,charge,charge,16472," energy components are negative; this means those are attractive; contributions (the zero of energy in a SAPT computation is defined as; non-interacting monomers). The exchange contributions are positive; (repulsive). In this example, the most attractive contribution between; ethylene and acetylene is an electrostatic term of -2.12 |kcalpermol|; (``Elst10,r`` where the 1 indicates the first-order; perturbation theory result with respect to the intermolecular interaction,; and the 0 indicates zeroth-order with respect to intramolecular electron; correlation). The next most attractive contribution is the ``Disp20``; term (2nd order intermolecular dispersion, which looks like an MP2 in which; one excitation is placed on each monomer), contributing an attraction of; -1.21 |kcalpermol|. It is not surprising that the electrostatic; contribution is dominant, because the geometry chosen for this example has the; acetylene perpendicular to the ethylene, with the acetylene hydrogen; pointing directly at the double bond in ethylene; this will be attractive; because the H atoms in acetylene bear a partial positive charge, while the; electron-rich double bond in ethylene bears a partial negative charge. At; the same time, the dispersion interaction should be smaller because the; perpendicular geometry does not allow much overlap between the monomers.; Hence, the SAPT analysis helps clarify (and quantify) our physical; understanding about the interaction between the two monomers. Potential Surface Scans and Counterpoise Correction Made Easy with Psithon; ==========================================================================. Finally, let's consider an example that shows how the Python driver; in |PSIfour| simplifies some routine tasks. |PSIfour| can interpret; valid Python code in addition to the computational chemistry directives; we've seen in the previous examples; we call this mixture Psithon.; The Python computer language is very easy to pick up, and even users; previousl",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:17475,Energy Efficiency,energy,energy,17475," interaction should be smaller because the; perpendicular geometry does not allow much overlap between the monomers.; Hence, the SAPT analysis helps clarify (and quantify) our physical; understanding about the interaction between the two monomers. Potential Surface Scans and Counterpoise Correction Made Easy with Psithon; ==========================================================================. Finally, let's consider an example that shows how the Python driver; in |PSIfour| simplifies some routine tasks. |PSIfour| can interpret; valid Python code in addition to the computational chemistry directives; we've seen in the previous examples; we call this mixture Psithon.; The Python computer language is very easy to pick up, and even users; previously unfamiliar with Python can use it to simplify tasks by; modifying some of the example input files supplied with |PSIfour|; in the :source:`samples` directory. Suppose you want to do a limited potential energy surface scan, such as; computing the interaction energy between two neon atoms at various; interatomic distances. One simple but unappealing way to do this is to; create separate input files for each distance to be studied. Most of; these input files are identical, except that the interatomic distance is; different. Psithon lets you specify all this in a single input file,; looping over the different distances with an array like this:; ``Rvals=[2.5, 3.0, 4.0]``. Let's also suppose you want to do counterpoise (CP) correction to compute interaction energies.; Counterpoise correction involves computing the dimer energy and then; subtracting out the energies of the two monomers, each evaluated in the; dimer basis. Again, each of these computations could be run in a separate; input file, but because counterpoise correction is a fairly standard; procedure for intermolecular interactions, |PSIfour| knows about it and has; a built-in routine to perform counterpoise correction. It only needs to; know what method you want to ",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:17531,Energy Efficiency,energy,energy,17531," interaction should be smaller because the; perpendicular geometry does not allow much overlap between the monomers.; Hence, the SAPT analysis helps clarify (and quantify) our physical; understanding about the interaction between the two monomers. Potential Surface Scans and Counterpoise Correction Made Easy with Psithon; ==========================================================================. Finally, let's consider an example that shows how the Python driver; in |PSIfour| simplifies some routine tasks. |PSIfour| can interpret; valid Python code in addition to the computational chemistry directives; we've seen in the previous examples; we call this mixture Psithon.; The Python computer language is very easy to pick up, and even users; previously unfamiliar with Python can use it to simplify tasks by; modifying some of the example input files supplied with |PSIfour|; in the :source:`samples` directory. Suppose you want to do a limited potential energy surface scan, such as; computing the interaction energy between two neon atoms at various; interatomic distances. One simple but unappealing way to do this is to; create separate input files for each distance to be studied. Most of; these input files are identical, except that the interatomic distance is; different. Psithon lets you specify all this in a single input file,; looping over the different distances with an array like this:; ``Rvals=[2.5, 3.0, 4.0]``. Let's also suppose you want to do counterpoise (CP) correction to compute interaction energies.; Counterpoise correction involves computing the dimer energy and then; subtracting out the energies of the two monomers, each evaluated in the; dimer basis. Again, each of these computations could be run in a separate; input file, but because counterpoise correction is a fairly standard; procedure for intermolecular interactions, |PSIfour| knows about it and has; a built-in routine to perform counterpoise correction. It only needs to; know what method you want to ",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:18099,Energy Efficiency,energy,energy,18099,"; we've seen in the previous examples; we call this mixture Psithon.; The Python computer language is very easy to pick up, and even users; previously unfamiliar with Python can use it to simplify tasks by; modifying some of the example input files supplied with |PSIfour|; in the :source:`samples` directory. Suppose you want to do a limited potential energy surface scan, such as; computing the interaction energy between two neon atoms at various; interatomic distances. One simple but unappealing way to do this is to; create separate input files for each distance to be studied. Most of; these input files are identical, except that the interatomic distance is; different. Psithon lets you specify all this in a single input file,; looping over the different distances with an array like this:; ``Rvals=[2.5, 3.0, 4.0]``. Let's also suppose you want to do counterpoise (CP) correction to compute interaction energies.; Counterpoise correction involves computing the dimer energy and then; subtracting out the energies of the two monomers, each evaluated in the; dimer basis. Again, each of these computations could be run in a separate; input file, but because counterpoise correction is a fairly standard; procedure for intermolecular interactions, |PSIfour| knows about it and has; a built-in routine to perform counterpoise correction. It only needs to; know what method you want to do the counterpoise correction on (here, let's; consider CCSD(T)), and it needs to know what's monomer A and what's monomer; B. This last issue of specifying the monomers separately was already dealt; with in the previous SAPT example, where we saw that two dashes in the; ``molecule`` block can be used to separate monomers. So, we're going to do counterpoise-corrected CCSD(T) energies for Ne\ :sub:`2` at; a series of different interatomic distances. And let's print out a table; of the interatomic distances we've considered, and the CP-corrected CCSD(T); interaction energies (in |kcalpermol|) at each geo",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:19718,Energy Efficiency,energy,energy,19718,"arately was already dealt; with in the previous SAPT example, where we saw that two dashes in the; ``molecule`` block can be used to separate monomers. So, we're going to do counterpoise-corrected CCSD(T) energies for Ne\ :sub:`2` at; a series of different interatomic distances. And let's print out a table; of the interatomic distances we've considered, and the CP-corrected CCSD(T); interaction energies (in |kcalpermol|) at each geometry. Doing all this; in a single input is surprisingly easy in |PSIfour|. Here's the input; (available as :srcsample:`tu6-cp-ne2`). .. literalinclude:: @SFNX_INCLUDE@samples/tu6-cp-ne2/input.dat. First, you can see the ``molecule`` block has a couple dashes to; separate the monomers from each other. Also note we've used a Z-matrix to; specify the geometry, and we've used a variable (``R``) as the; interatomic distance. We have *not* specified the value of ``R`` in; the ``molecule`` block like we normally would. That's because we're; going to vary it during the scan across the potential energy surface.; Below the ``molecule`` block, you can see the ``Rvals`` array; specified. This is a Python array holding the interatomic distances we; want to consider. In Python, arrays are surrounded by square brackets, and; elements are separated by commas. The next lines, ``set basis aug-cc-pVDZ`` and ``set freeze_core True``,; are familiar from previous test cases. Next comes a slightly; unusual-looking line, ``ecp = {}``. This is Python's way of initializing; a ""dictionary"". We're going to use this dictionary to store the; counterpoise-corrected energies as they become available. A dictionary is; like an array, but we can index it using strings or floating-point numbers; instead of integers if we want. Here, we will index it using; floating-point numbers, namely, the ``R`` values. This winds up being; slightly more elegant than a regular array in later parts of the input; file. The next section, beginning with ``for R in Rvals:``, loops over the; i",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:21040,Energy Efficiency,energy,energy,21040,"a slightly; unusual-looking line, ``ecp = {}``. This is Python's way of initializing; a ""dictionary"". We're going to use this dictionary to store the; counterpoise-corrected energies as they become available. A dictionary is; like an array, but we can index it using strings or floating-point numbers; instead of integers if we want. Here, we will index it using; floating-point numbers, namely, the ``R`` values. This winds up being; slightly more elegant than a regular array in later parts of the input; file. The next section, beginning with ``for R in Rvals:``, loops over the; interatomic distances, ``R``, in our array ``Rvals``. In Python,; loops need to be indented, and each line in the loop has to be indented; by the same amount. The first line in the loop, ``dimer.R = R``,; sets the Z-matrix variable ``R`` of the molecule called ``dimer``; to the ``R`` value extracted from the ``Rvals`` array. The next line,; ``ecp[R] = energy('ccsd(t)', bsse_type='cp')``, computes the counterpoise-corrected; CCSD(T) energy and places it in the ``ecp`` dictionary with ``R`` as; the index. Note we didn't need to specify ghost atoms, and we didn't need; to call the monomer and dimer computations separately. The built-in; Psithon function :py:func:`~psi4.driver.driver_nbody.nbody` does it all for us, automatically. Near the very end of the output file, the counterpoise correction Python; function will print a nice summary of the results of the counterpoise; computation (the energies of the dimer, of monomer 1 with the ghost functions; of monomer 2, of monomer 2 with the ghost functions of monomer 1, and the; overall counterpoise-corrected interaction energy)::. N-Body: Computing complex (1/2) with fragments (2,) in the basis of fragments (1, 2).; ...; N-Body: Complex Energy (fragments = (2,), basis = (1, 2): -128.70932405488924); ...; N-Body: Computing complex (2/2) with fragments (1,) in the basis of fragments (1, 2).; ...; N-Body: Complex Energy (fragments = (1,), basis = (1, 2): ",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:21122,Energy Efficiency,energy,energy,21122,"a slightly; unusual-looking line, ``ecp = {}``. This is Python's way of initializing; a ""dictionary"". We're going to use this dictionary to store the; counterpoise-corrected energies as they become available. A dictionary is; like an array, but we can index it using strings or floating-point numbers; instead of integers if we want. Here, we will index it using; floating-point numbers, namely, the ``R`` values. This winds up being; slightly more elegant than a regular array in later parts of the input; file. The next section, beginning with ``for R in Rvals:``, loops over the; interatomic distances, ``R``, in our array ``Rvals``. In Python,; loops need to be indented, and each line in the loop has to be indented; by the same amount. The first line in the loop, ``dimer.R = R``,; sets the Z-matrix variable ``R`` of the molecule called ``dimer``; to the ``R`` value extracted from the ``Rvals`` array. The next line,; ``ecp[R] = energy('ccsd(t)', bsse_type='cp')``, computes the counterpoise-corrected; CCSD(T) energy and places it in the ``ecp`` dictionary with ``R`` as; the index. Note we didn't need to specify ghost atoms, and we didn't need; to call the monomer and dimer computations separately. The built-in; Psithon function :py:func:`~psi4.driver.driver_nbody.nbody` does it all for us, automatically. Near the very end of the output file, the counterpoise correction Python; function will print a nice summary of the results of the counterpoise; computation (the energies of the dimer, of monomer 1 with the ghost functions; of monomer 2, of monomer 2 with the ghost functions of monomer 1, and the; overall counterpoise-corrected interaction energy)::. N-Body: Computing complex (1/2) with fragments (2,) in the basis of fragments (1, 2).; ...; N-Body: Complex Energy (fragments = (2,), basis = (1, 2): -128.70932405488924); ...; N-Body: Computing complex (2/2) with fragments (1,) in the basis of fragments (1, 2).; ...; N-Body: Complex Energy (fragments = (1,), basis = (1, 2): ",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:21765,Energy Efficiency,energy,energy,21765," the input; file. The next section, beginning with ``for R in Rvals:``, loops over the; interatomic distances, ``R``, in our array ``Rvals``. In Python,; loops need to be indented, and each line in the loop has to be indented; by the same amount. The first line in the loop, ``dimer.R = R``,; sets the Z-matrix variable ``R`` of the molecule called ``dimer``; to the ``R`` value extracted from the ``Rvals`` array. The next line,; ``ecp[R] = energy('ccsd(t)', bsse_type='cp')``, computes the counterpoise-corrected; CCSD(T) energy and places it in the ``ecp`` dictionary with ``R`` as; the index. Note we didn't need to specify ghost atoms, and we didn't need; to call the monomer and dimer computations separately. The built-in; Psithon function :py:func:`~psi4.driver.driver_nbody.nbody` does it all for us, automatically. Near the very end of the output file, the counterpoise correction Python; function will print a nice summary of the results of the counterpoise; computation (the energies of the dimer, of monomer 1 with the ghost functions; of monomer 2, of monomer 2 with the ghost functions of monomer 1, and the; overall counterpoise-corrected interaction energy)::. N-Body: Computing complex (1/2) with fragments (2,) in the basis of fragments (1, 2).; ...; N-Body: Complex Energy (fragments = (2,), basis = (1, 2): -128.70932405488924); ...; N-Body: Computing complex (2/2) with fragments (1,) in the basis of fragments (1, 2).; ...; N-Body: Complex Energy (fragments = (1,), basis = (1, 2): -128.70932405488935); ...; N-Body: Computing complex (1/1) with fragments (1, 2) in the basis of fragments (1, 2).; ...; N-Body: Complex Energy (fragments = (1, 2), basis = (1, 2): -257.41867403127321); ...; ==> N-Body: Counterpoise Corrected (CP) energies <==. n-Body Total Energy [Eh] I.E. [kcal/mol] Delta [kcal/mol]; 1 -257.418648109779 0.000000000000 0.000000000000; 2 -257.418674031273 -0.016265984132 -0.016265984132. And that's it! The only remaining part of the example input is a little",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:7485,Integrability,message,message,7485,"ontamination than; ROHF). Geometry Optimization and Vibrational Frequency Analysis; ========================================================. The above examples were simple single-point energy computations; (as specified by the :py:func:`~psi4.driver.energy` function). Of course there are other; kinds of computations to perform, such as geometry optimizations and; vibrational frequency computations. These can be specified by replacing; :py:func:`~psi4.driver.energy` with :py:func:`~psi4.driver.optimize` or :py:func:`~psi4.driver.frequency`, respectively. Here's an example of optimizing the H\ :sub:`2`\ O molecule using Hartree--Fock with; a cc-pVDZ basis set (located in; :srcsample:`tu3-h2o-opt`). .. literalinclude:: @SFNX_INCLUDE@samples/tu3-h2o-opt/input.dat. This should perform a series of gradient computations. The gradient points; which way is downhill in energy, and the optimizer then modifies the; geometry to follow the gradient. After a few cycles, the geometry should; converge with a message like ``Optimization is complete!``. As indicated; in the following table (printed by the optimizer at the end of the; computation and grep-able with ``~``), the energy decreases with each step,; and the maximum force on each atom also decreases with each step (in; principle these numbers could increase in some iterations, but here they do; not). ::. --------------------------------------------------------------------------------------------------------------- ~; Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; --------------------------------------------------------------------------------------------------------------- ~; 1 -76.026632734857 -76.026632734857 0.01523505 0.01245744 0.02742199 0.02277500 ~; 2 -76.027022668419 -0.000389933562 0.00178749 0.00142923 0.01007985 0.00594840 ~; 3 -76.027032729361 -0.000010060942 0.00014016 0.00008485 0.00077279 0.00044621 ~; -----------------------------------------------------------------------------------------",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:17011,Integrability,rout,routine,17011," one excitation is placed on each monomer), contributing an attraction of; -1.21 |kcalpermol|. It is not surprising that the electrostatic; contribution is dominant, because the geometry chosen for this example has the; acetylene perpendicular to the ethylene, with the acetylene hydrogen; pointing directly at the double bond in ethylene; this will be attractive; because the H atoms in acetylene bear a partial positive charge, while the; electron-rich double bond in ethylene bears a partial negative charge. At; the same time, the dispersion interaction should be smaller because the; perpendicular geometry does not allow much overlap between the monomers.; Hence, the SAPT analysis helps clarify (and quantify) our physical; understanding about the interaction between the two monomers. Potential Surface Scans and Counterpoise Correction Made Easy with Psithon; ==========================================================================. Finally, let's consider an example that shows how the Python driver; in |PSIfour| simplifies some routine tasks. |PSIfour| can interpret; valid Python code in addition to the computational chemistry directives; we've seen in the previous examples; we call this mixture Psithon.; The Python computer language is very easy to pick up, and even users; previously unfamiliar with Python can use it to simplify tasks by; modifying some of the example input files supplied with |PSIfour|; in the :source:`samples` directory. Suppose you want to do a limited potential energy surface scan, such as; computing the interaction energy between two neon atoms at various; interatomic distances. One simple but unappealing way to do this is to; create separate input files for each distance to be studied. Most of; these input files are identical, except that the interatomic distance is; different. Psithon lets you specify all this in a single input file,; looping over the different distances with an array like this:; ``Rvals=[2.5, 3.0, 4.0]``. Let's also suppose y",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:18422,Integrability,rout,routine,18422,"fying some of the example input files supplied with |PSIfour|; in the :source:`samples` directory. Suppose you want to do a limited potential energy surface scan, such as; computing the interaction energy between two neon atoms at various; interatomic distances. One simple but unappealing way to do this is to; create separate input files for each distance to be studied. Most of; these input files are identical, except that the interatomic distance is; different. Psithon lets you specify all this in a single input file,; looping over the different distances with an array like this:; ``Rvals=[2.5, 3.0, 4.0]``. Let's also suppose you want to do counterpoise (CP) correction to compute interaction energies.; Counterpoise correction involves computing the dimer energy and then; subtracting out the energies of the two monomers, each evaluated in the; dimer basis. Again, each of these computations could be run in a separate; input file, but because counterpoise correction is a fairly standard; procedure for intermolecular interactions, |PSIfour| knows about it and has; a built-in routine to perform counterpoise correction. It only needs to; know what method you want to do the counterpoise correction on (here, let's; consider CCSD(T)), and it needs to know what's monomer A and what's monomer; B. This last issue of specifying the monomers separately was already dealt; with in the previous SAPT example, where we saw that two dashes in the; ``molecule`` block can be used to separate monomers. So, we're going to do counterpoise-corrected CCSD(T) energies for Ne\ :sub:`2` at; a series of different interatomic distances. And let's print out a table; of the interatomic distances we've considered, and the CP-corrected CCSD(T); interaction energies (in |kcalpermol|) at each geometry. Doing all this; in a single input is surprisingly easy in |PSIfour|. Here's the input; (available as :srcsample:`tu6-cp-ne2`). .. literalinclude:: @SFNX_INCLUDE@samples/tu6-cp-ne2/input.dat. First, you c",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:5541,Modifiability,variab,variables,5541,"(1 for a closed-shell molecule with all electrons paired), or the reference; wavefunction to use (restricted Hartree--Fock, or RHF, is usually; appropriate for a closed-shell molecule). The program correctly guessed; all of these options for us. We can change the default behavior through; additional keywords. Let's consider what we would do for an open-shell molecule, where; not all electrons are paired. For example, let's run a computation; on methylene (CH\ :sub:`2`\ ), whose ground electronic state has two unpaired; electrons (triplet electronic state, or a spin multiplicity :math:`2S+1 = 3`).; In this case, the default spin multiplicity (1) is not correct, so we; need to tell the program the true value (3). Like many programs, |PSIfour|; can get the charge and multiplicity as the first two integers in the; Z-matrix. Note the line with ``0 3`` at the beginning of the molecule; specification below. In this example we will also specify the bond length; and bond angle as variables (:math:`R` and :math:`A`), whose values are given; at the end of the Z-matrix specification. .. literalinclude:: @SFNX_INCLUDE@samples/tu2-ch2-energy/input.dat. This sample input can be found in ; :srcsample:`tu2-ch2-energy` and as; before it can be run through the command ``psi4 input.dat output.dat``; (actually, because ``psi4`` by default looks for an input file named; ``input.dat`` and writes by default to a file called ``output.dat``, in this; case one could also just type ``psi4``). If it works, it should print; the final energy as ::. @UHF Final Energy: -38.92533462456894. Notice we added a new keyword, ``set reference uhf``, to the input. For; open-shell molecules, we have a choice of unrestricted orbitals; (unrestricted Hartree--Fock, or UHF), or restricted orbitals (restricted; open-shell Hartree--Fock, or ROHF). Usually, UHF is a little easier to; converge (although it may be more susceptible to spin contamination than; ROHF). Geometry Optimization and Vibrational Frequency Analy",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:11434,Modifiability,adapt,adapted,11434,"417 0.538 1.007825; H 0.000 -0.417 0.538 1.007825. where the table shows the displacements in the X, Y, and Z dimensions for; each atom along the normal mode coordinate. (This information could be used; to animate the vibrational frequency using visualization software.). Because the vibrational frequencies are available, a thermodynamics; analysis is automatically performed at the end of the computation.; You can see this in the next section of the output file. The vibrational; frequencies are sufficient to obtain vibrational contributions to; enthalpy (H), entropy (S), and Gibbs free energy (G). Similarly, the; molecular geometry is used to obtain rotational constants, which are; then used to obtain rotational contributions to H, S, and G. .. _`sec:tutorial_tu5`:. Analysis of Intermolecular Interactions; =======================================. Now let's consider something a little more interesting. |PSIfour|; contains code to analyze the nature of intermolecular interactions; between two molecules, via symmetry-adapted perturbation theory; (SAPT) [Jeziorski:1994:1887]_. This kind of analysis gives a lot; of insight into the nature of intermolecular interactions, and |PSIfour|; makes these computations easier than ever. For a SAPT computation, the input needs to provide information on two; distinct molecules. This is very easy, we just give a Z-matrix or set of; Cartesian coordinates for each molecule, and separate the two with two; dashes, like this::. # Example SAPT computation for ethene*ethine (*i.e.*, ethylene*acetylene),; # test case 16 from the S22 database; ; molecule dimer {; 0 1; C 0.000000 -0.667578 -2.124659; C 0.000000 0.667578 -2.124659; H 0.923621 -1.232253 -2.126185; H -0.923621 -1.232253 -2.126185; H -0.923621 1.232253 -2.126185; H 0.923621 1.232253 -2.126185; --; 0 1; C 0.000000 0.000000 2.900503; C 0.000000 0.000000 1.693240; H 0.000000 0.000000 0.627352; H 0.000000 0.000000 3.963929; units angstrom; ; }. Here's the second half of the input, where",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:19501,Modifiability,variab,variable,19501,"ow what method you want to do the counterpoise correction on (here, let's; consider CCSD(T)), and it needs to know what's monomer A and what's monomer; B. This last issue of specifying the monomers separately was already dealt; with in the previous SAPT example, where we saw that two dashes in the; ``molecule`` block can be used to separate monomers. So, we're going to do counterpoise-corrected CCSD(T) energies for Ne\ :sub:`2` at; a series of different interatomic distances. And let's print out a table; of the interatomic distances we've considered, and the CP-corrected CCSD(T); interaction energies (in |kcalpermol|) at each geometry. Doing all this; in a single input is surprisingly easy in |PSIfour|. Here's the input; (available as :srcsample:`tu6-cp-ne2`). .. literalinclude:: @SFNX_INCLUDE@samples/tu6-cp-ne2/input.dat. First, you can see the ``molecule`` block has a couple dashes to; separate the monomers from each other. Also note we've used a Z-matrix to; specify the geometry, and we've used a variable (``R``) as the; interatomic distance. We have *not* specified the value of ``R`` in; the ``molecule`` block like we normally would. That's because we're; going to vary it during the scan across the potential energy surface.; Below the ``molecule`` block, you can see the ``Rvals`` array; specified. This is a Python array holding the interatomic distances we; want to consider. In Python, arrays are surrounded by square brackets, and; elements are separated by commas. The next lines, ``set basis aug-cc-pVDZ`` and ``set freeze_core True``,; are familiar from previous test cases. Next comes a slightly; unusual-looking line, ``ecp = {}``. This is Python's way of initializing; a ""dictionary"". We're going to use this dictionary to store the; counterpoise-corrected energies as they become available. A dictionary is; like an array, but we can index it using strings or floating-point numbers; instead of integers if we want. Here, we will index it using; floating-point numb",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:20909,Modifiability,variab,variable,20909,"elements are separated by commas. The next lines, ``set basis aug-cc-pVDZ`` and ``set freeze_core True``,; are familiar from previous test cases. Next comes a slightly; unusual-looking line, ``ecp = {}``. This is Python's way of initializing; a ""dictionary"". We're going to use this dictionary to store the; counterpoise-corrected energies as they become available. A dictionary is; like an array, but we can index it using strings or floating-point numbers; instead of integers if we want. Here, we will index it using; floating-point numbers, namely, the ``R`` values. This winds up being; slightly more elegant than a regular array in later parts of the input; file. The next section, beginning with ``for R in Rvals:``, loops over the; interatomic distances, ``R``, in our array ``Rvals``. In Python,; loops need to be indented, and each line in the loop has to be indented; by the same amount. The first line in the loop, ``dimer.R = R``,; sets the Z-matrix variable ``R`` of the molecule called ``dimer``; to the ``R`` value extracted from the ``Rvals`` array. The next line,; ``ecp[R] = energy('ccsd(t)', bsse_type='cp')``, computes the counterpoise-corrected; CCSD(T) energy and places it in the ``ecp`` dictionary with ``R`` as; the index. Note we didn't need to specify ghost atoms, and we didn't need; to call the monomer and dimer computations separately. The built-in; Psithon function :py:func:`~psi4.driver.driver_nbody.nbody` does it all for us, automatically. Near the very end of the output file, the counterpoise correction Python; function will print a nice summary of the results of the counterpoise; computation (the energies of the dimer, of monomer 1 with the ghost functions; of monomer 2, of monomer 2 with the ghost functions of monomer 1, and the; overall counterpoise-corrected interaction energy)::. N-Body: Computing complex (1/2) with fragments (2,) in the basis of fragments (1, 2).; ...; N-Body: Complex Energy (fragments = (2,), basis = (1, 2): -128.70932405488924);",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:6799,Performance,perform,perform,6799," the command ``psi4 input.dat output.dat``; (actually, because ``psi4`` by default looks for an input file named; ``input.dat`` and writes by default to a file called ``output.dat``, in this; case one could also just type ``psi4``). If it works, it should print; the final energy as ::. @UHF Final Energy: -38.92533462456894. Notice we added a new keyword, ``set reference uhf``, to the input. For; open-shell molecules, we have a choice of unrestricted orbitals; (unrestricted Hartree--Fock, or UHF), or restricted orbitals (restricted; open-shell Hartree--Fock, or ROHF). Usually, UHF is a little easier to; converge (although it may be more susceptible to spin contamination than; ROHF). Geometry Optimization and Vibrational Frequency Analysis; ========================================================. The above examples were simple single-point energy computations; (as specified by the :py:func:`~psi4.driver.energy` function). Of course there are other; kinds of computations to perform, such as geometry optimizations and; vibrational frequency computations. These can be specified by replacing; :py:func:`~psi4.driver.energy` with :py:func:`~psi4.driver.optimize` or :py:func:`~psi4.driver.frequency`, respectively. Here's an example of optimizing the H\ :sub:`2`\ O molecule using Hartree--Fock with; a cc-pVDZ basis set (located in; :srcsample:`tu3-h2o-opt`). .. literalinclude:: @SFNX_INCLUDE@samples/tu3-h2o-opt/input.dat. This should perform a series of gradient computations. The gradient points; which way is downhill in energy, and the optimizer then modifies the; geometry to follow the gradient. After a few cycles, the geometry should; converge with a message like ``Optimization is complete!``. As indicated; in the following table (printed by the optimizer at the end of the; computation and grep-able with ``~``), the energy decreases with each step,; and the maximum force on each atom also decreases with each step (in; principle these numbers could increase in some iteratio",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:6825,Performance,optimiz,optimizations,6825," the command ``psi4 input.dat output.dat``; (actually, because ``psi4`` by default looks for an input file named; ``input.dat`` and writes by default to a file called ``output.dat``, in this; case one could also just type ``psi4``). If it works, it should print; the final energy as ::. @UHF Final Energy: -38.92533462456894. Notice we added a new keyword, ``set reference uhf``, to the input. For; open-shell molecules, we have a choice of unrestricted orbitals; (unrestricted Hartree--Fock, or UHF), or restricted orbitals (restricted; open-shell Hartree--Fock, or ROHF). Usually, UHF is a little easier to; converge (although it may be more susceptible to spin contamination than; ROHF). Geometry Optimization and Vibrational Frequency Analysis; ========================================================. The above examples were simple single-point energy computations; (as specified by the :py:func:`~psi4.driver.energy` function). Of course there are other; kinds of computations to perform, such as geometry optimizations and; vibrational frequency computations. These can be specified by replacing; :py:func:`~psi4.driver.energy` with :py:func:`~psi4.driver.optimize` or :py:func:`~psi4.driver.frequency`, respectively. Here's an example of optimizing the H\ :sub:`2`\ O molecule using Hartree--Fock with; a cc-pVDZ basis set (located in; :srcsample:`tu3-h2o-opt`). .. literalinclude:: @SFNX_INCLUDE@samples/tu3-h2o-opt/input.dat. This should perform a series of gradient computations. The gradient points; which way is downhill in energy, and the optimizer then modifies the; geometry to follow the gradient. After a few cycles, the geometry should; converge with a message like ``Optimization is complete!``. As indicated; in the following table (printed by the optimizer at the end of the; computation and grep-able with ``~``), the energy decreases with each step,; and the maximum force on each atom also decreases with each step (in; principle these numbers could increase in some iteratio",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:6976,Performance,optimiz,optimize,6976,"t``, in this; case one could also just type ``psi4``). If it works, it should print; the final energy as ::. @UHF Final Energy: -38.92533462456894. Notice we added a new keyword, ``set reference uhf``, to the input. For; open-shell molecules, we have a choice of unrestricted orbitals; (unrestricted Hartree--Fock, or UHF), or restricted orbitals (restricted; open-shell Hartree--Fock, or ROHF). Usually, UHF is a little easier to; converge (although it may be more susceptible to spin contamination than; ROHF). Geometry Optimization and Vibrational Frequency Analysis; ========================================================. The above examples were simple single-point energy computations; (as specified by the :py:func:`~psi4.driver.energy` function). Of course there are other; kinds of computations to perform, such as geometry optimizations and; vibrational frequency computations. These can be specified by replacing; :py:func:`~psi4.driver.energy` with :py:func:`~psi4.driver.optimize` or :py:func:`~psi4.driver.frequency`, respectively. Here's an example of optimizing the H\ :sub:`2`\ O molecule using Hartree--Fock with; a cc-pVDZ basis set (located in; :srcsample:`tu3-h2o-opt`). .. literalinclude:: @SFNX_INCLUDE@samples/tu3-h2o-opt/input.dat. This should perform a series of gradient computations. The gradient points; which way is downhill in energy, and the optimizer then modifies the; geometry to follow the gradient. After a few cycles, the geometry should; converge with a message like ``Optimization is complete!``. As indicated; in the following table (printed by the optimizer at the end of the; computation and grep-able with ``~``), the energy decreases with each step,; and the maximum force on each atom also decreases with each step (in; principle these numbers could increase in some iterations, but here they do; not). ::. --------------------------------------------------------------------------------------------------------------- ~; Step Total Energy Delta E MAX F",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:7059,Performance,optimiz,optimizing,7059,"Energy: -38.92533462456894. Notice we added a new keyword, ``set reference uhf``, to the input. For; open-shell molecules, we have a choice of unrestricted orbitals; (unrestricted Hartree--Fock, or UHF), or restricted orbitals (restricted; open-shell Hartree--Fock, or ROHF). Usually, UHF is a little easier to; converge (although it may be more susceptible to spin contamination than; ROHF). Geometry Optimization and Vibrational Frequency Analysis; ========================================================. The above examples were simple single-point energy computations; (as specified by the :py:func:`~psi4.driver.energy` function). Of course there are other; kinds of computations to perform, such as geometry optimizations and; vibrational frequency computations. These can be specified by replacing; :py:func:`~psi4.driver.energy` with :py:func:`~psi4.driver.optimize` or :py:func:`~psi4.driver.frequency`, respectively. Here's an example of optimizing the H\ :sub:`2`\ O molecule using Hartree--Fock with; a cc-pVDZ basis set (located in; :srcsample:`tu3-h2o-opt`). .. literalinclude:: @SFNX_INCLUDE@samples/tu3-h2o-opt/input.dat. This should perform a series of gradient computations. The gradient points; which way is downhill in energy, and the optimizer then modifies the; geometry to follow the gradient. After a few cycles, the geometry should; converge with a message like ``Optimization is complete!``. As indicated; in the following table (printed by the optimizer at the end of the; computation and grep-able with ``~``), the energy decreases with each step,; and the maximum force on each atom also decreases with each step (in; principle these numbers could increase in some iterations, but here they do; not). ::. --------------------------------------------------------------------------------------------------------------- ~; Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; -----------------------------------------------------------------------------------",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:7261,Performance,perform,perform,7261," (unrestricted Hartree--Fock, or UHF), or restricted orbitals (restricted; open-shell Hartree--Fock, or ROHF). Usually, UHF is a little easier to; converge (although it may be more susceptible to spin contamination than; ROHF). Geometry Optimization and Vibrational Frequency Analysis; ========================================================. The above examples were simple single-point energy computations; (as specified by the :py:func:`~psi4.driver.energy` function). Of course there are other; kinds of computations to perform, such as geometry optimizations and; vibrational frequency computations. These can be specified by replacing; :py:func:`~psi4.driver.energy` with :py:func:`~psi4.driver.optimize` or :py:func:`~psi4.driver.frequency`, respectively. Here's an example of optimizing the H\ :sub:`2`\ O molecule using Hartree--Fock with; a cc-pVDZ basis set (located in; :srcsample:`tu3-h2o-opt`). .. literalinclude:: @SFNX_INCLUDE@samples/tu3-h2o-opt/input.dat. This should perform a series of gradient computations. The gradient points; which way is downhill in energy, and the optimizer then modifies the; geometry to follow the gradient. After a few cycles, the geometry should; converge with a message like ``Optimization is complete!``. As indicated; in the following table (printed by the optimizer at the end of the; computation and grep-able with ``~``), the energy decreases with each step,; and the maximum force on each atom also decreases with each step (in; principle these numbers could increase in some iterations, but here they do; not). ::. --------------------------------------------------------------------------------------------------------------- ~; Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; --------------------------------------------------------------------------------------------------------------- ~; 1 -76.026632734857 -76.026632734857 0.01523505 0.01245744 0.02742199 0.02277500 ~; 2 -76.027022668419 -0.000389933562 0.00178749 0.001",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:7366,Performance,optimiz,optimizer,7366,"ree--Fock, or ROHF). Usually, UHF is a little easier to; converge (although it may be more susceptible to spin contamination than; ROHF). Geometry Optimization and Vibrational Frequency Analysis; ========================================================. The above examples were simple single-point energy computations; (as specified by the :py:func:`~psi4.driver.energy` function). Of course there are other; kinds of computations to perform, such as geometry optimizations and; vibrational frequency computations. These can be specified by replacing; :py:func:`~psi4.driver.energy` with :py:func:`~psi4.driver.optimize` or :py:func:`~psi4.driver.frequency`, respectively. Here's an example of optimizing the H\ :sub:`2`\ O molecule using Hartree--Fock with; a cc-pVDZ basis set (located in; :srcsample:`tu3-h2o-opt`). .. literalinclude:: @SFNX_INCLUDE@samples/tu3-h2o-opt/input.dat. This should perform a series of gradient computations. The gradient points; which way is downhill in energy, and the optimizer then modifies the; geometry to follow the gradient. After a few cycles, the geometry should; converge with a message like ``Optimization is complete!``. As indicated; in the following table (printed by the optimizer at the end of the; computation and grep-able with ``~``), the energy decreases with each step,; and the maximum force on each atom also decreases with each step (in; principle these numbers could increase in some iterations, but here they do; not). ::. --------------------------------------------------------------------------------------------------------------- ~; Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; --------------------------------------------------------------------------------------------------------------- ~; 1 -76.026632734857 -76.026632734857 0.01523505 0.01245744 0.02742199 0.02277500 ~; 2 -76.027022668419 -0.000389933562 0.00178749 0.00142923 0.01007985 0.00594840 ~; 3 -76.027032729361 -0.000010060942 0.00014016 0.00008485 0",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:7582,Performance,optimiz,optimizer,7582,"(as specified by the :py:func:`~psi4.driver.energy` function). Of course there are other; kinds of computations to perform, such as geometry optimizations and; vibrational frequency computations. These can be specified by replacing; :py:func:`~psi4.driver.energy` with :py:func:`~psi4.driver.optimize` or :py:func:`~psi4.driver.frequency`, respectively. Here's an example of optimizing the H\ :sub:`2`\ O molecule using Hartree--Fock with; a cc-pVDZ basis set (located in; :srcsample:`tu3-h2o-opt`). .. literalinclude:: @SFNX_INCLUDE@samples/tu3-h2o-opt/input.dat. This should perform a series of gradient computations. The gradient points; which way is downhill in energy, and the optimizer then modifies the; geometry to follow the gradient. After a few cycles, the geometry should; converge with a message like ``Optimization is complete!``. As indicated; in the following table (printed by the optimizer at the end of the; computation and grep-able with ``~``), the energy decreases with each step,; and the maximum force on each atom also decreases with each step (in; principle these numbers could increase in some iterations, but here they do; not). ::. --------------------------------------------------------------------------------------------------------------- ~; Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; --------------------------------------------------------------------------------------------------------------- ~; 1 -76.026632734857 -76.026632734857 0.01523505 0.01245744 0.02742199 0.02277500 ~; 2 -76.027022668419 -0.000389933562 0.00178749 0.00142923 0.01007985 0.00594840 ~; 3 -76.027032729361 -0.000010060942 0.00014016 0.00008485 0.00077279 0.00044621 ~; --------------------------------------------------------------------------------------------------------------- ~. To get harmonic vibrational frequencies, it's important to keep in mind that; the values of the vibrational frequencies are a function of the molecular; geometry. Therefore, *it's ",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:8801,Performance,perform,perform,8801,"------------------------------------------------------------------------------------------- ~; Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; --------------------------------------------------------------------------------------------------------------- ~; 1 -76.026632734857 -76.026632734857 0.01523505 0.01245744 0.02742199 0.02277500 ~; 2 -76.027022668419 -0.000389933562 0.00178749 0.00142923 0.01007985 0.00594840 ~; 3 -76.027032729361 -0.000010060942 0.00014016 0.00008485 0.00077279 0.00044621 ~; --------------------------------------------------------------------------------------------------------------- ~. To get harmonic vibrational frequencies, it's important to keep in mind that; the values of the vibrational frequencies are a function of the molecular; geometry. Therefore, *it's important to obtain the vibrational frequencies ; at the OPTIMIZED GEOMETRY*. We could set up a second input file to perform; the vibrational frequency analysis, being very careful to copy over the; optimized geometry from the *bottom* of the output file for the geometry; optimization. This geometry could be specified in either z-matrix or; Cartesian formats. However, there's a much easier way to do this. If we; specify a vibrational frequency analysis in the same input file as the; optimization, after the optimization function has been called, then the; optimized geometry will automatically be carried over. So, it's easiset to do the optimization and vibrational frequency analysis; together. This can be specified as follows (see test case; :srcsample:`tu4-h2o-freq`):. .. literalinclude:: @SFNX_INCLUDE@samples/tu4-h2o-freq/input.dat. The program will do the same optimization as in our previous example,; but then it will follow it with some computations to obtain the Hessian; (second derivative matrix) of the electronic energy with respect to; nuclear displacements. From this, it can obtain the harmonic vibrational; frequencies, given below (roundoff errors of arou",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:8883,Performance,optimiz,optimized,8883,"------------------------------------------------------------------------------------------- ~; Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; --------------------------------------------------------------------------------------------------------------- ~; 1 -76.026632734857 -76.026632734857 0.01523505 0.01245744 0.02742199 0.02277500 ~; 2 -76.027022668419 -0.000389933562 0.00178749 0.00142923 0.01007985 0.00594840 ~; 3 -76.027032729361 -0.000010060942 0.00014016 0.00008485 0.00077279 0.00044621 ~; --------------------------------------------------------------------------------------------------------------- ~. To get harmonic vibrational frequencies, it's important to keep in mind that; the values of the vibrational frequencies are a function of the molecular; geometry. Therefore, *it's important to obtain the vibrational frequencies ; at the OPTIMIZED GEOMETRY*. We could set up a second input file to perform; the vibrational frequency analysis, being very careful to copy over the; optimized geometry from the *bottom* of the output file for the geometry; optimization. This geometry could be specified in either z-matrix or; Cartesian formats. However, there's a much easier way to do this. If we; specify a vibrational frequency analysis in the same input file as the; optimization, after the optimization function has been called, then the; optimized geometry will automatically be carried over. So, it's easiset to do the optimization and vibrational frequency analysis; together. This can be specified as follows (see test case; :srcsample:`tu4-h2o-freq`):. .. literalinclude:: @SFNX_INCLUDE@samples/tu4-h2o-freq/input.dat. The program will do the same optimization as in our previous example,; but then it will follow it with some computations to obtain the Hessian; (second derivative matrix) of the electronic energy with respect to; nuclear displacements. From this, it can obtain the harmonic vibrational; frequencies, given below (roundoff errors of arou",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:8957,Performance,optimiz,optimization,8957,"------------------------------------------------------------------------------------------- ~; Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; --------------------------------------------------------------------------------------------------------------- ~; 1 -76.026632734857 -76.026632734857 0.01523505 0.01245744 0.02742199 0.02277500 ~; 2 -76.027022668419 -0.000389933562 0.00178749 0.00142923 0.01007985 0.00594840 ~; 3 -76.027032729361 -0.000010060942 0.00014016 0.00008485 0.00077279 0.00044621 ~; --------------------------------------------------------------------------------------------------------------- ~. To get harmonic vibrational frequencies, it's important to keep in mind that; the values of the vibrational frequencies are a function of the molecular; geometry. Therefore, *it's important to obtain the vibrational frequencies ; at the OPTIMIZED GEOMETRY*. We could set up a second input file to perform; the vibrational frequency analysis, being very careful to copy over the; optimized geometry from the *bottom* of the output file for the geometry; optimization. This geometry could be specified in either z-matrix or; Cartesian formats. However, there's a much easier way to do this. If we; specify a vibrational frequency analysis in the same input file as the; optimization, after the optimization function has been called, then the; optimized geometry will automatically be carried over. So, it's easiset to do the optimization and vibrational frequency analysis; together. This can be specified as follows (see test case; :srcsample:`tu4-h2o-freq`):. .. literalinclude:: @SFNX_INCLUDE@samples/tu4-h2o-freq/input.dat. The program will do the same optimization as in our previous example,; but then it will follow it with some computations to obtain the Hessian; (second derivative matrix) of the electronic energy with respect to; nuclear displacements. From this, it can obtain the harmonic vibrational; frequencies, given below (roundoff errors of arou",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:9172,Performance,optimiz,optimization,9172,"5744 0.02742199 0.02277500 ~; 2 -76.027022668419 -0.000389933562 0.00178749 0.00142923 0.01007985 0.00594840 ~; 3 -76.027032729361 -0.000010060942 0.00014016 0.00008485 0.00077279 0.00044621 ~; --------------------------------------------------------------------------------------------------------------- ~. To get harmonic vibrational frequencies, it's important to keep in mind that; the values of the vibrational frequencies are a function of the molecular; geometry. Therefore, *it's important to obtain the vibrational frequencies ; at the OPTIMIZED GEOMETRY*. We could set up a second input file to perform; the vibrational frequency analysis, being very careful to copy over the; optimized geometry from the *bottom* of the output file for the geometry; optimization. This geometry could be specified in either z-matrix or; Cartesian formats. However, there's a much easier way to do this. If we; specify a vibrational frequency analysis in the same input file as the; optimization, after the optimization function has been called, then the; optimized geometry will automatically be carried over. So, it's easiset to do the optimization and vibrational frequency analysis; together. This can be specified as follows (see test case; :srcsample:`tu4-h2o-freq`):. .. literalinclude:: @SFNX_INCLUDE@samples/tu4-h2o-freq/input.dat. The program will do the same optimization as in our previous example,; but then it will follow it with some computations to obtain the Hessian; (second derivative matrix) of the electronic energy with respect to; nuclear displacements. From this, it can obtain the harmonic vibrational; frequencies, given below (roundoff errors of around 0.1 cm\ :sup:`-1`; may exist)::. Irrep Harmonic Frequency; (cm-1); -----------------------------------------------; A1 1775.6480; A1 4113.3794; B2 4212.1826; -----------------------------------------------. Notice that the symmetry type of the normal modes is specified (A1, A1,; B2). The program also prints out the normal mod",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:9196,Performance,optimiz,optimization,9196,"5744 0.02742199 0.02277500 ~; 2 -76.027022668419 -0.000389933562 0.00178749 0.00142923 0.01007985 0.00594840 ~; 3 -76.027032729361 -0.000010060942 0.00014016 0.00008485 0.00077279 0.00044621 ~; --------------------------------------------------------------------------------------------------------------- ~. To get harmonic vibrational frequencies, it's important to keep in mind that; the values of the vibrational frequencies are a function of the molecular; geometry. Therefore, *it's important to obtain the vibrational frequencies ; at the OPTIMIZED GEOMETRY*. We could set up a second input file to perform; the vibrational frequency analysis, being very careful to copy over the; optimized geometry from the *bottom* of the output file for the geometry; optimization. This geometry could be specified in either z-matrix or; Cartesian formats. However, there's a much easier way to do this. If we; specify a vibrational frequency analysis in the same input file as the; optimization, after the optimization function has been called, then the; optimized geometry will automatically be carried over. So, it's easiset to do the optimization and vibrational frequency analysis; together. This can be specified as follows (see test case; :srcsample:`tu4-h2o-freq`):. .. literalinclude:: @SFNX_INCLUDE@samples/tu4-h2o-freq/input.dat. The program will do the same optimization as in our previous example,; but then it will follow it with some computations to obtain the Hessian; (second derivative matrix) of the electronic energy with respect to; nuclear displacements. From this, it can obtain the harmonic vibrational; frequencies, given below (roundoff errors of around 0.1 cm\ :sup:`-1`; may exist)::. Irrep Harmonic Frequency; (cm-1); -----------------------------------------------; A1 1775.6480; A1 4113.3794; B2 4212.1826; -----------------------------------------------. Notice that the symmetry type of the normal modes is specified (A1, A1,; B2). The program also prints out the normal mod",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:9245,Performance,optimiz,optimized,9245,"5744 0.02742199 0.02277500 ~; 2 -76.027022668419 -0.000389933562 0.00178749 0.00142923 0.01007985 0.00594840 ~; 3 -76.027032729361 -0.000010060942 0.00014016 0.00008485 0.00077279 0.00044621 ~; --------------------------------------------------------------------------------------------------------------- ~. To get harmonic vibrational frequencies, it's important to keep in mind that; the values of the vibrational frequencies are a function of the molecular; geometry. Therefore, *it's important to obtain the vibrational frequencies ; at the OPTIMIZED GEOMETRY*. We could set up a second input file to perform; the vibrational frequency analysis, being very careful to copy over the; optimized geometry from the *bottom* of the output file for the geometry; optimization. This geometry could be specified in either z-matrix or; Cartesian formats. However, there's a much easier way to do this. If we; specify a vibrational frequency analysis in the same input file as the; optimization, after the optimization function has been called, then the; optimized geometry will automatically be carried over. So, it's easiset to do the optimization and vibrational frequency analysis; together. This can be specified as follows (see test case; :srcsample:`tu4-h2o-freq`):. .. literalinclude:: @SFNX_INCLUDE@samples/tu4-h2o-freq/input.dat. The program will do the same optimization as in our previous example,; but then it will follow it with some computations to obtain the Hessian; (second derivative matrix) of the electronic energy with respect to; nuclear displacements. From this, it can obtain the harmonic vibrational; frequencies, given below (roundoff errors of around 0.1 cm\ :sup:`-1`; may exist)::. Irrep Harmonic Frequency; (cm-1); -----------------------------------------------; A1 1775.6480; A1 4113.3794; B2 4212.1826; -----------------------------------------------. Notice that the symmetry type of the normal modes is specified (A1, A1,; B2). The program also prints out the normal mod",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:9327,Performance,optimiz,optimization,9327,"0.00014016 0.00008485 0.00077279 0.00044621 ~; --------------------------------------------------------------------------------------------------------------- ~. To get harmonic vibrational frequencies, it's important to keep in mind that; the values of the vibrational frequencies are a function of the molecular; geometry. Therefore, *it's important to obtain the vibrational frequencies ; at the OPTIMIZED GEOMETRY*. We could set up a second input file to perform; the vibrational frequency analysis, being very careful to copy over the; optimized geometry from the *bottom* of the output file for the geometry; optimization. This geometry could be specified in either z-matrix or; Cartesian formats. However, there's a much easier way to do this. If we; specify a vibrational frequency analysis in the same input file as the; optimization, after the optimization function has been called, then the; optimized geometry will automatically be carried over. So, it's easiset to do the optimization and vibrational frequency analysis; together. This can be specified as follows (see test case; :srcsample:`tu4-h2o-freq`):. .. literalinclude:: @SFNX_INCLUDE@samples/tu4-h2o-freq/input.dat. The program will do the same optimization as in our previous example,; but then it will follow it with some computations to obtain the Hessian; (second derivative matrix) of the electronic energy with respect to; nuclear displacements. From this, it can obtain the harmonic vibrational; frequencies, given below (roundoff errors of around 0.1 cm\ :sup:`-1`; may exist)::. Irrep Harmonic Frequency; (cm-1); -----------------------------------------------; A1 1775.6480; A1 4113.3794; B2 4212.1826; -----------------------------------------------. Notice that the symmetry type of the normal modes is specified (A1, A1,; B2). The program also prints out the normal modes in terms of Cartesian; coordinates of each atom. For example, the normal mode at 1776 cm\ :sup:`-1` ; is::. Frequency: 1775.65; Force constant:",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:9559,Performance,optimiz,optimization,9559,"olecular; geometry. Therefore, *it's important to obtain the vibrational frequencies ; at the OPTIMIZED GEOMETRY*. We could set up a second input file to perform; the vibrational frequency analysis, being very careful to copy over the; optimized geometry from the *bottom* of the output file for the geometry; optimization. This geometry could be specified in either z-matrix or; Cartesian formats. However, there's a much easier way to do this. If we; specify a vibrational frequency analysis in the same input file as the; optimization, after the optimization function has been called, then the; optimized geometry will automatically be carried over. So, it's easiset to do the optimization and vibrational frequency analysis; together. This can be specified as follows (see test case; :srcsample:`tu4-h2o-freq`):. .. literalinclude:: @SFNX_INCLUDE@samples/tu4-h2o-freq/input.dat. The program will do the same optimization as in our previous example,; but then it will follow it with some computations to obtain the Hessian; (second derivative matrix) of the electronic energy with respect to; nuclear displacements. From this, it can obtain the harmonic vibrational; frequencies, given below (roundoff errors of around 0.1 cm\ :sup:`-1`; may exist)::. Irrep Harmonic Frequency; (cm-1); -----------------------------------------------; A1 1775.6480; A1 4113.3794; B2 4212.1826; -----------------------------------------------. Notice that the symmetry type of the normal modes is specified (A1, A1,; B2). The program also prints out the normal modes in terms of Cartesian; coordinates of each atom. For example, the normal mode at 1776 cm\ :sup:`-1` ; is::. Frequency: 1775.65; Force constant: 0.1193; X Y Z mass; O 0.000 0.000 -0.270 15.994915; H 0.000 0.417 0.538 1.007825; H 0.000 -0.417 0.538 1.007825. where the table shows the displacements in the X, Y, and Z dimensions for; each atom along the normal mode coordinate. (This information could be used; to animate the vibrational frequency us",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:10772,Performance,perform,performed,10772,"uclear displacements. From this, it can obtain the harmonic vibrational; frequencies, given below (roundoff errors of around 0.1 cm\ :sup:`-1`; may exist)::. Irrep Harmonic Frequency; (cm-1); -----------------------------------------------; A1 1775.6480; A1 4113.3794; B2 4212.1826; -----------------------------------------------. Notice that the symmetry type of the normal modes is specified (A1, A1,; B2). The program also prints out the normal modes in terms of Cartesian; coordinates of each atom. For example, the normal mode at 1776 cm\ :sup:`-1` ; is::. Frequency: 1775.65; Force constant: 0.1193; X Y Z mass; O 0.000 0.000 -0.270 15.994915; H 0.000 0.417 0.538 1.007825; H 0.000 -0.417 0.538 1.007825. where the table shows the displacements in the X, Y, and Z dimensions for; each atom along the normal mode coordinate. (This information could be used; to animate the vibrational frequency using visualization software.). Because the vibrational frequencies are available, a thermodynamics; analysis is automatically performed at the end of the computation.; You can see this in the next section of the output file. The vibrational; frequencies are sufficient to obtain vibrational contributions to; enthalpy (H), entropy (S), and Gibbs free energy (G). Similarly, the; molecular geometry is used to obtain rotational constants, which are; then used to obtain rotational contributions to H, S, and G. .. _`sec:tutorial_tu5`:. Analysis of Intermolecular Interactions; =======================================. Now let's consider something a little more interesting. |PSIfour|; contains code to analyze the nature of intermolecular interactions; between two molecules, via symmetry-adapted perturbation theory; (SAPT) [Jeziorski:1994:1887]_. This kind of analysis gives a lot; of insight into the nature of intermolecular interactions, and |PSIfour|; makes these computations easier than ever. For a SAPT computation, the input needs to provide information on two; distinct molecules. This is",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:13941,Performance,perform,performed,13941,"can be; set in a globals section like this. If an option needs to be visible; only to one part of the program (*e.g.*, we only want to increase the; energy convergence in the SCF code, but not the rest of the; code), it can be placed in a section of input visible to that part of the; program (*e.g.*, ``set scf e_convergence 1.0E-8``). Back to our SAPT example, we have found that for basic-level SAPT; computations (*i.e.*, SAPT0), a good error cancellation is found; [Hohenstein:2012:WIREs]_ with the jun-cc-pVDZ basis (this is the; usual aug-cc-pVDZ basis, but without diffuse functions on hydrogen and; without diffuse :math:`d` functions on heavy atoms) [Papajak:2011:10]_. So,; we'll use that as our standard basis set. The SAPT code is designed to; use density fitting techniques, because they introduce minimal errors; while providing much faster computations [Hohenstein:2010:184111]_ ; [Hohenstein:2010:014101]_. Since we're using density fitting for the SAPT,; we might as well also use it for the Hartree--Fock computations that are; performed as part of the SAPT. We can specify that with ; ``scf_type DF``. Density fitting procedures require the use of auxiliary basis sets that; pair with the primary basis set. Fortunately, |PSIfour| is usually smart; enough to figure out what auxiliary basis sets are needed for a given; computation. In this case, jun-cc-pVDZ is a standard enough basis set; (just a simple truncation of the very popular aug-cc-pVDZ basis set); that |PSIfour| correctly guesses that we want the jun-cc-pVDZ-JKFIT; auxiliary basis for the Hartree--Fock, and the jun-cc-pVDZ-RI basis set; for the SAPT procedure. To speed up the computation a little, we also tell the SAPT procedure to; freeze the core electrons with ``freeze_core True``. The SAPT; procedure is invoked with the simple call, ``energy('sapt0')``. This; call knows to automatically run two monomer computations and a dimer; computation and then use these results to perform the SAPT analysis. The; va",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:14860,Performance,perform,perform,14860,"1]_. Since we're using density fitting for the SAPT,; we might as well also use it for the Hartree--Fock computations that are; performed as part of the SAPT. We can specify that with ; ``scf_type DF``. Density fitting procedures require the use of auxiliary basis sets that; pair with the primary basis set. Fortunately, |PSIfour| is usually smart; enough to figure out what auxiliary basis sets are needed for a given; computation. In this case, jun-cc-pVDZ is a standard enough basis set; (just a simple truncation of the very popular aug-cc-pVDZ basis set); that |PSIfour| correctly guesses that we want the jun-cc-pVDZ-JKFIT; auxiliary basis for the Hartree--Fock, and the jun-cc-pVDZ-RI basis set; for the SAPT procedure. To speed up the computation a little, we also tell the SAPT procedure to; freeze the core electrons with ``freeze_core True``. The SAPT; procedure is invoked with the simple call, ``energy('sapt0')``. This; call knows to automatically run two monomer computations and a dimer; computation and then use these results to perform the SAPT analysis. The; various energy components are printed at the end of the output, in addition; to the total SAPT0 interaction energy. An explanation of the various; energy components can be found in the review by Jeziorski, Moszynski, and; Szalewicz [Jeziorski:1994:1887]_, and this is discussed in more detail; in the SAPT section later in this manual. For now, we'll note that most of; the SAPT energy components are negative; this means those are attractive; contributions (the zero of energy in a SAPT computation is defined as; non-interacting monomers). The exchange contributions are positive; (repulsive). In this example, the most attractive contribution between; ethylene and acetylene is an electrostatic term of -2.12 |kcalpermol|; (``Elst10,r`` where the 1 indicates the first-order; perturbation theory result with respect to the intermolecular interaction,; and the 0 indicates zeroth-order with respect to intramolecular ele",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:18433,Performance,perform,perform,18433,"fying some of the example input files supplied with |PSIfour|; in the :source:`samples` directory. Suppose you want to do a limited potential energy surface scan, such as; computing the interaction energy between two neon atoms at various; interatomic distances. One simple but unappealing way to do this is to; create separate input files for each distance to be studied. Most of; these input files are identical, except that the interatomic distance is; different. Psithon lets you specify all this in a single input file,; looping over the different distances with an array like this:; ``Rvals=[2.5, 3.0, 4.0]``. Let's also suppose you want to do counterpoise (CP) correction to compute interaction energies.; Counterpoise correction involves computing the dimer energy and then; subtracting out the energies of the two monomers, each evaluated in the; dimer basis. Again, each of these computations could be run in a separate; input file, but because counterpoise correction is a fairly standard; procedure for intermolecular interactions, |PSIfour| knows about it and has; a built-in routine to perform counterpoise correction. It only needs to; know what method you want to do the counterpoise correction on (here, let's; consider CCSD(T)), and it needs to know what's monomer A and what's monomer; B. This last issue of specifying the monomers separately was already dealt; with in the previous SAPT example, where we saw that two dashes in the; ``molecule`` block can be used to separate monomers. So, we're going to do counterpoise-corrected CCSD(T) energies for Ne\ :sub:`2` at; a series of different interatomic distances. And let's print out a table; of the interatomic distances we've considered, and the CP-corrected CCSD(T); interaction energies (in |kcalpermol|) at each geometry. Doing all this; in a single input is surprisingly easy in |PSIfour|. Here's the input; (available as :srcsample:`tu6-cp-ne2`). .. literalinclude:: @SFNX_INCLUDE@samples/tu6-cp-ne2/input.dat. First, you c",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:23120,Security,access,accessed,23120,"omplex Energy (fragments = (1,), basis = (1, 2): -128.70932405488935); ...; N-Body: Computing complex (1/1) with fragments (1, 2) in the basis of fragments (1, 2).; ...; N-Body: Complex Energy (fragments = (1, 2), basis = (1, 2): -257.41867403127321); ...; ==> N-Body: Counterpoise Corrected (CP) energies <==. n-Body Total Energy [Eh] I.E. [kcal/mol] Delta [kcal/mol]; 1 -257.418648109779 0.000000000000 0.000000000000; 2 -257.418674031273 -0.016265984132 -0.016265984132. And that's it! The only remaining part of the example input is a little table; of the different R values and the CP-corrected CCSD(T) energies, converted from; atomic units (Hartree) to |kcalpermol| by multiplying by the; automatically-defined conversion factor ``psi_hartree2kcalmol``. |PSIfour|; provides several built-in physical constants and conversion factors, as; described in section :ref:`sec:physicalConstants`.; Notice the loop over :math:`R` to create; the table looks just like the loop over ``R`` to run the different; computations, and the CP-corrected energies ``ecp[R]`` are accessed the same; way they were stored. The ``print`` line at the end just specifies some; formatting for the printed table (first element is a floating point number 3; spaces wide with one digit after the decimal, and the second element is a; floating point number 10 spaces wide with 6 digits after the decimal); the; format strings are the same as in the C programming language. For tables more; complicated than the simple one used here, Psithon has built-in support for; tables (see the next section). Our table is printed at the very end of the output file, and looks like; this ::. CP-corrected CCSD(T)/aug-cc-pVDZ interaction energies; ; R (Ang) E_int (kcal/mol); -----------------------------------------------------; 2.5 0.757718; 3.0 0.015687; 4.0 -0.016264; ; The following section goes over Psithon in much more detail, but; hopefully this example already makes it clear that many complex tasks; can be done very easily i",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:9424,Testability,test,test,9424,"---------------------------------------------------------------------------- ~. To get harmonic vibrational frequencies, it's important to keep in mind that; the values of the vibrational frequencies are a function of the molecular; geometry. Therefore, *it's important to obtain the vibrational frequencies ; at the OPTIMIZED GEOMETRY*. We could set up a second input file to perform; the vibrational frequency analysis, being very careful to copy over the; optimized geometry from the *bottom* of the output file for the geometry; optimization. This geometry could be specified in either z-matrix or; Cartesian formats. However, there's a much easier way to do this. If we; specify a vibrational frequency analysis in the same input file as the; optimization, after the optimization function has been called, then the; optimized geometry will automatically be carried over. So, it's easiset to do the optimization and vibrational frequency analysis; together. This can be specified as follows (see test case; :srcsample:`tu4-h2o-freq`):. .. literalinclude:: @SFNX_INCLUDE@samples/tu4-h2o-freq/input.dat. The program will do the same optimization as in our previous example,; but then it will follow it with some computations to obtain the Hessian; (second derivative matrix) of the electronic energy with respect to; nuclear displacements. From this, it can obtain the harmonic vibrational; frequencies, given below (roundoff errors of around 0.1 cm\ :sup:`-1`; may exist)::. Irrep Harmonic Frequency; (cm-1); -----------------------------------------------; A1 1775.6480; A1 4113.3794; B2 4212.1826; -----------------------------------------------. Notice that the symmetry type of the normal modes is specified (A1, A1,; B2). The program also prints out the normal modes in terms of Cartesian; coordinates of each atom. For example, the normal mode at 1776 cm\ :sup:`-1` ; is::. Frequency: 1775.65; Force constant: 0.1193; X Y Z mass; O 0.000 0.000 -0.270 15.994915; H 0.000 0.417 0.538 1.007825;",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:11962,Testability,test,test,11962," and Gibbs free energy (G). Similarly, the; molecular geometry is used to obtain rotational constants, which are; then used to obtain rotational contributions to H, S, and G. .. _`sec:tutorial_tu5`:. Analysis of Intermolecular Interactions; =======================================. Now let's consider something a little more interesting. |PSIfour|; contains code to analyze the nature of intermolecular interactions; between two molecules, via symmetry-adapted perturbation theory; (SAPT) [Jeziorski:1994:1887]_. This kind of analysis gives a lot; of insight into the nature of intermolecular interactions, and |PSIfour|; makes these computations easier than ever. For a SAPT computation, the input needs to provide information on two; distinct molecules. This is very easy, we just give a Z-matrix or set of; Cartesian coordinates for each molecule, and separate the two with two; dashes, like this::. # Example SAPT computation for ethene*ethine (*i.e.*, ethylene*acetylene),; # test case 16 from the S22 database; ; molecule dimer {; 0 1; C 0.000000 -0.667578 -2.124659; C 0.000000 0.667578 -2.124659; H 0.923621 -1.232253 -2.126185; H -0.923621 -1.232253 -2.126185; H -0.923621 1.232253 -2.126185; H 0.923621 1.232253 -2.126185; --; 0 1; C 0.000000 0.000000 2.900503; C 0.000000 0.000000 1.693240; H 0.000000 0.000000 0.627352; H 0.000000 0.000000 3.963929; units angstrom; ; }. Here's the second half of the input, where we specify the computation; options::. set {; basis jun-cc-pVDZ; scf_type DF; freeze_core True; }; ; energy('sapt0'). Before, we have been setting keywords individually with commands like; ``set basis cc-pVDZ``. Because we have a few more options now, it's; convenient to place them together into the ``set``; block, bounded by ``{...}``. This; will set all of these options as ""global"" options (meaning that they are; visible to all parts of the program). Most common |PSIfour| options can be; set in a globals section like this. If an option needs to be visible; only to o",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:20080,Testability,test,test,20080,"idered, and the CP-corrected CCSD(T); interaction energies (in |kcalpermol|) at each geometry. Doing all this; in a single input is surprisingly easy in |PSIfour|. Here's the input; (available as :srcsample:`tu6-cp-ne2`). .. literalinclude:: @SFNX_INCLUDE@samples/tu6-cp-ne2/input.dat. First, you can see the ``molecule`` block has a couple dashes to; separate the monomers from each other. Also note we've used a Z-matrix to; specify the geometry, and we've used a variable (``R``) as the; interatomic distance. We have *not* specified the value of ``R`` in; the ``molecule`` block like we normally would. That's because we're; going to vary it during the scan across the potential energy surface.; Below the ``molecule`` block, you can see the ``Rvals`` array; specified. This is a Python array holding the interatomic distances we; want to consider. In Python, arrays are surrounded by square brackets, and; elements are separated by commas. The next lines, ``set basis aug-cc-pVDZ`` and ``set freeze_core True``,; are familiar from previous test cases. Next comes a slightly; unusual-looking line, ``ecp = {}``. This is Python's way of initializing; a ""dictionary"". We're going to use this dictionary to store the; counterpoise-corrected energies as they become available. A dictionary is; like an array, but we can index it using strings or floating-point numbers; instead of integers if we want. Here, we will index it using; floating-point numbers, namely, the ``R`` values. This winds up being; slightly more elegant than a regular array in later parts of the input; file. The next section, beginning with ``for R in Rvals:``, loops over the; interatomic distances, ``R``, in our array ``Rvals``. In Python,; loops need to be indented, and each line in the loop has to be indented; by the same amount. The first line in the loop, ``dimer.R = R``,; sets the Z-matrix variable ``R`` of the molecule called ``dimer``; to the ``R`` value extracted from the ``Rvals`` array. The next line,; ``ecp[",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:2676,Usability,simpl,simple,2676,"he ``psi4.`` namespace, then submit it to the ``python`` interpreter.; Both modes are equally powerful. This tutorial covers the Psithon; mode. .. note:: Some |PSIfour| functions and keywords have aliases. For example,; ``frequency()``, ``frequencies()``, and ``freq()`` all work to ; obtain vibrational frequencies. Basic Input File Structure; ==========================. |PSIfour| reads input from a text file, which can be prepared in any standard; text editor. The default input file name is ``input.dat`` and the; default output file name is ``output.dat``. So that you can give your; files meaningful names, these defaults can be changed by specifying; the input file name and output file name on the the command line.; The syntax is:. >>> psi4 input-name output-name. If you give an input name but no output name, then the output name will; be the same as the input name (replacing any "".in"" or "".dat"" extension by "".out""). Sample Input Files; ==================. Below, we will provide a few simple input files as examples. A large ; number of sample input files, covering everything from single-point energies; using density-functional theory to response properties from coupled-cluster; theory, can be found in the :source:`samples` directory. Running a Basic Hartree--Fock Calculation; =========================================. In our first example, we will consider a Hartree--Fock SCF computation; for the water molecule using a cc-pVDZ basis set. We will specify the; geometry of our water molecule using a standard Z-matrix. .. literalinclude:: @SFNX_INCLUDE@samples/tu1-h2o-energy/input.dat. .. note:: The memory and basis set specifications are placed *before* the; energy function is called. Any user options need to; be set before the procedure they are meant to affect. For your convenience, the above example can be found in ; :srcsample:`tu1-h2o-energy`.; You can run it if you wish.; Once |PSIfour| is in your path (see the ; :ref:`User Configuration <faq:runordinaryexe>`; sec",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:4345,Usability,simpl,simple,4345,"nction is called. Any user options need to; be set before the procedure they are meant to affect. For your convenience, the above example can be found in ; :srcsample:`tu1-h2o-energy`.; You can run it if you wish.; Once |PSIfour| is in your path (see the ; :ref:`User Configuration <faq:runordinaryexe>`; section of the installation instructions), you can run this computation by typing. >>> psi4 input.dat output.dat. If everything goes well, the computation should complete and should report; a final restricted Hartree--Fock energy in a section like this::. Energy converged. @RHF Final Energy: -76.02663273410671. By default, the energy should be converged to about :math:`1.0 \times 10^{-6}`, so agreement; is only expected for about the first 6 digits after the decimal. If the; computation does not complete, there is probably a problem with the; compilation or installation of the program (see the installation; instructions in Sec. :ref:`sec:installFile`). This very simple input is sufficient to run the requested information.; Notice that we didn't tell the program some otherwise useful information; like the charge on the molecule (0, it's neutral), the spin multiplicity; (1 for a closed-shell molecule with all electrons paired), or the reference; wavefunction to use (restricted Hartree--Fock, or RHF, is usually; appropriate for a closed-shell molecule). The program correctly guessed; all of these options for us. We can change the default behavior through; additional keywords. Let's consider what we would do for an open-shell molecule, where; not all electrons are paired. For example, let's run a computation; on methylene (CH\ :sub:`2`\ ), whose ground electronic state has two unpaired; electrons (triplet electronic state, or a spin multiplicity :math:`2S+1 = 3`).; In this case, the default spin multiplicity (1) is not correct, so we; need to tell the program the true value (3). Like many programs, |PSIfour|; can get the charge and multiplicity as the first two integers i",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:6643,Usability,simpl,simple,6643,"_INCLUDE@samples/tu2-ch2-energy/input.dat. This sample input can be found in ; :srcsample:`tu2-ch2-energy` and as; before it can be run through the command ``psi4 input.dat output.dat``; (actually, because ``psi4`` by default looks for an input file named; ``input.dat`` and writes by default to a file called ``output.dat``, in this; case one could also just type ``psi4``). If it works, it should print; the final energy as ::. @UHF Final Energy: -38.92533462456894. Notice we added a new keyword, ``set reference uhf``, to the input. For; open-shell molecules, we have a choice of unrestricted orbitals; (unrestricted Hartree--Fock, or UHF), or restricted orbitals (restricted; open-shell Hartree--Fock, or ROHF). Usually, UHF is a little easier to; converge (although it may be more susceptible to spin contamination than; ROHF). Geometry Optimization and Vibrational Frequency Analysis; ========================================================. The above examples were simple single-point energy computations; (as specified by the :py:func:`~psi4.driver.energy` function). Of course there are other; kinds of computations to perform, such as geometry optimizations and; vibrational frequency computations. These can be specified by replacing; :py:func:`~psi4.driver.energy` with :py:func:`~psi4.driver.optimize` or :py:func:`~psi4.driver.frequency`, respectively. Here's an example of optimizing the H\ :sub:`2`\ O molecule using Hartree--Fock with; a cc-pVDZ basis set (located in; :srcsample:`tu3-h2o-opt`). .. literalinclude:: @SFNX_INCLUDE@samples/tu3-h2o-opt/input.dat. This should perform a series of gradient computations. The gradient points; which way is downhill in energy, and the optimizer then modifies the; geometry to follow the gradient. After a few cycles, the geometry should; converge with a message like ``Optimization is complete!``. As indicated; in the following table (printed by the optimizer at the end of the; computation and grep-able with ``~``), the energy decreases",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:14313,Usability,simpl,simple,14313," the jun-cc-pVDZ basis (this is the; usual aug-cc-pVDZ basis, but without diffuse functions on hydrogen and; without diffuse :math:`d` functions on heavy atoms) [Papajak:2011:10]_. So,; we'll use that as our standard basis set. The SAPT code is designed to; use density fitting techniques, because they introduce minimal errors; while providing much faster computations [Hohenstein:2010:184111]_ ; [Hohenstein:2010:014101]_. Since we're using density fitting for the SAPT,; we might as well also use it for the Hartree--Fock computations that are; performed as part of the SAPT. We can specify that with ; ``scf_type DF``. Density fitting procedures require the use of auxiliary basis sets that; pair with the primary basis set. Fortunately, |PSIfour| is usually smart; enough to figure out what auxiliary basis sets are needed for a given; computation. In this case, jun-cc-pVDZ is a standard enough basis set; (just a simple truncation of the very popular aug-cc-pVDZ basis set); that |PSIfour| correctly guesses that we want the jun-cc-pVDZ-JKFIT; auxiliary basis for the Hartree--Fock, and the jun-cc-pVDZ-RI basis set; for the SAPT procedure. To speed up the computation a little, we also tell the SAPT procedure to; freeze the core electrons with ``freeze_core True``. The SAPT; procedure is invoked with the simple call, ``energy('sapt0')``. This; call knows to automatically run two monomer computations and a dimer; computation and then use these results to perform the SAPT analysis. The; various energy components are printed at the end of the output, in addition; to the total SAPT0 interaction energy. An explanation of the various; energy components can be found in the review by Jeziorski, Moszynski, and; Szalewicz [Jeziorski:1994:1887]_, and this is discussed in more detail; in the SAPT section later in this manual. For now, we'll note that most of; the SAPT energy components are negative; this means those are attractive; contributions (the zero of energy in a SAPT computation i",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:14708,Usability,simpl,simple,14708,"e minimal errors; while providing much faster computations [Hohenstein:2010:184111]_ ; [Hohenstein:2010:014101]_. Since we're using density fitting for the SAPT,; we might as well also use it for the Hartree--Fock computations that are; performed as part of the SAPT. We can specify that with ; ``scf_type DF``. Density fitting procedures require the use of auxiliary basis sets that; pair with the primary basis set. Fortunately, |PSIfour| is usually smart; enough to figure out what auxiliary basis sets are needed for a given; computation. In this case, jun-cc-pVDZ is a standard enough basis set; (just a simple truncation of the very popular aug-cc-pVDZ basis set); that |PSIfour| correctly guesses that we want the jun-cc-pVDZ-JKFIT; auxiliary basis for the Hartree--Fock, and the jun-cc-pVDZ-RI basis set; for the SAPT procedure. To speed up the computation a little, we also tell the SAPT procedure to; freeze the core electrons with ``freeze_core True``. The SAPT; procedure is invoked with the simple call, ``energy('sapt0')``. This; call knows to automatically run two monomer computations and a dimer; computation and then use these results to perform the SAPT analysis. The; various energy components are printed at the end of the output, in addition; to the total SAPT0 interaction energy. An explanation of the various; energy components can be found in the review by Jeziorski, Moszynski, and; Szalewicz [Jeziorski:1994:1887]_, and this is discussed in more detail; in the SAPT section later in this manual. For now, we'll note that most of; the SAPT energy components are negative; this means those are attractive; contributions (the zero of energy in a SAPT computation is defined as; non-interacting monomers). The exchange contributions are positive; (repulsive). In this example, the most attractive contribution between; ethylene and acetylene is an electrostatic term of -2.12 |kcalpermol|; (``Elst10,r`` where the 1 indicates the first-order; perturbation theory result with r",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:16995,Usability,simpl,simplifies,16995," one excitation is placed on each monomer), contributing an attraction of; -1.21 |kcalpermol|. It is not surprising that the electrostatic; contribution is dominant, because the geometry chosen for this example has the; acetylene perpendicular to the ethylene, with the acetylene hydrogen; pointing directly at the double bond in ethylene; this will be attractive; because the H atoms in acetylene bear a partial positive charge, while the; electron-rich double bond in ethylene bears a partial negative charge. At; the same time, the dispersion interaction should be smaller because the; perpendicular geometry does not allow much overlap between the monomers.; Hence, the SAPT analysis helps clarify (and quantify) our physical; understanding about the interaction between the two monomers. Potential Surface Scans and Counterpoise Correction Made Easy with Psithon; ==========================================================================. Finally, let's consider an example that shows how the Python driver; in |PSIfour| simplifies some routine tasks. |PSIfour| can interpret; valid Python code in addition to the computational chemistry directives; we've seen in the previous examples; we call this mixture Psithon.; The Python computer language is very easy to pick up, and even users; previously unfamiliar with Python can use it to simplify tasks by; modifying some of the example input files supplied with |PSIfour|; in the :source:`samples` directory. Suppose you want to do a limited potential energy surface scan, such as; computing the interaction energy between two neon atoms at various; interatomic distances. One simple but unappealing way to do this is to; create separate input files for each distance to be studied. Most of; these input files are identical, except that the interatomic distance is; different. Psithon lets you specify all this in a single input file,; looping over the different distances with an array like this:; ``Rvals=[2.5, 3.0, 4.0]``. Let's also suppose y",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:17310,Usability,simpl,simplify,17310,"is will be attractive; because the H atoms in acetylene bear a partial positive charge, while the; electron-rich double bond in ethylene bears a partial negative charge. At; the same time, the dispersion interaction should be smaller because the; perpendicular geometry does not allow much overlap between the monomers.; Hence, the SAPT analysis helps clarify (and quantify) our physical; understanding about the interaction between the two monomers. Potential Surface Scans and Counterpoise Correction Made Easy with Psithon; ==========================================================================. Finally, let's consider an example that shows how the Python driver; in |PSIfour| simplifies some routine tasks. |PSIfour| can interpret; valid Python code in addition to the computational chemistry directives; we've seen in the previous examples; we call this mixture Psithon.; The Python computer language is very easy to pick up, and even users; previously unfamiliar with Python can use it to simplify tasks by; modifying some of the example input files supplied with |PSIfour|; in the :source:`samples` directory. Suppose you want to do a limited potential energy surface scan, such as; computing the interaction energy between two neon atoms at various; interatomic distances. One simple but unappealing way to do this is to; create separate input files for each distance to be studied. Most of; these input files are identical, except that the interatomic distance is; different. Psithon lets you specify all this in a single input file,; looping over the different distances with an array like this:; ``Rvals=[2.5, 3.0, 4.0]``. Let's also suppose you want to do counterpoise (CP) correction to compute interaction energies.; Counterpoise correction involves computing the dimer energy and then; subtracting out the energies of the two monomers, each evaluated in the; dimer basis. Again, each of these computations could be run in a separate; input file, but because counterpoise correction",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:17600,Usability,simpl,simple,17600,"lysis helps clarify (and quantify) our physical; understanding about the interaction between the two monomers. Potential Surface Scans and Counterpoise Correction Made Easy with Psithon; ==========================================================================. Finally, let's consider an example that shows how the Python driver; in |PSIfour| simplifies some routine tasks. |PSIfour| can interpret; valid Python code in addition to the computational chemistry directives; we've seen in the previous examples; we call this mixture Psithon.; The Python computer language is very easy to pick up, and even users; previously unfamiliar with Python can use it to simplify tasks by; modifying some of the example input files supplied with |PSIfour|; in the :source:`samples` directory. Suppose you want to do a limited potential energy surface scan, such as; computing the interaction energy between two neon atoms at various; interatomic distances. One simple but unappealing way to do this is to; create separate input files for each distance to be studied. Most of; these input files are identical, except that the interatomic distance is; different. Psithon lets you specify all this in a single input file,; looping over the different distances with an array like this:; ``Rvals=[2.5, 3.0, 4.0]``. Let's also suppose you want to do counterpoise (CP) correction to compute interaction energies.; Counterpoise correction involves computing the dimer energy and then; subtracting out the energies of the two monomers, each evaluated in the; dimer basis. Again, each of these computations could be run in a separate; input file, but because counterpoise correction is a fairly standard; procedure for intermolecular interactions, |PSIfour| knows about it and has; a built-in routine to perform counterpoise correction. It only needs to; know what method you want to do the counterpoise correction on (here, let's; consider CCSD(T)), and it needs to know what's monomer A and what's monomer; B. This last",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:23541,Usability,simpl,simple,23541,"(fragments = (1,), basis = (1, 2): -128.70932405488935); ...; N-Body: Computing complex (1/1) with fragments (1, 2) in the basis of fragments (1, 2).; ...; N-Body: Complex Energy (fragments = (1, 2), basis = (1, 2): -257.41867403127321); ...; ==> N-Body: Counterpoise Corrected (CP) energies <==. n-Body Total Energy [Eh] I.E. [kcal/mol] Delta [kcal/mol]; 1 -257.418648109779 0.000000000000 0.000000000000; 2 -257.418674031273 -0.016265984132 -0.016265984132. And that's it! The only remaining part of the example input is a little table; of the different R values and the CP-corrected CCSD(T) energies, converted from; atomic units (Hartree) to |kcalpermol| by multiplying by the; automatically-defined conversion factor ``psi_hartree2kcalmol``. |PSIfour|; provides several built-in physical constants and conversion factors, as; described in section :ref:`sec:physicalConstants`.; Notice the loop over :math:`R` to create; the table looks just like the loop over ``R`` to run the different; computations, and the CP-corrected energies ``ecp[R]`` are accessed the same; way they were stored. The ``print`` line at the end just specifies some; formatting for the printed table (first element is a floating point number 3; spaces wide with one digit after the decimal, and the second element is a; floating point number 10 spaces wide with 6 digits after the decimal); the; format strings are the same as in the C programming language. For tables more; complicated than the simple one used here, Psithon has built-in support for; tables (see the next section). Our table is printed at the very end of the output file, and looks like; this ::. CP-corrected CCSD(T)/aug-cc-pVDZ interaction energies; ; R (Ang) E_int (kcal/mol); -----------------------------------------------------; 2.5 0.757718; 3.0 0.015687; 4.0 -0.016264; ; The following section goes over Psithon in much more detail, but; hopefully this example already makes it clear that many complex tasks; can be done very easily in |PSIfour|. ",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:23999,Usability,clear,clear,23999,"(fragments = (1,), basis = (1, 2): -128.70932405488935); ...; N-Body: Computing complex (1/1) with fragments (1, 2) in the basis of fragments (1, 2).; ...; N-Body: Complex Energy (fragments = (1, 2), basis = (1, 2): -257.41867403127321); ...; ==> N-Body: Counterpoise Corrected (CP) energies <==. n-Body Total Energy [Eh] I.E. [kcal/mol] Delta [kcal/mol]; 1 -257.418648109779 0.000000000000 0.000000000000; 2 -257.418674031273 -0.016265984132 -0.016265984132. And that's it! The only remaining part of the example input is a little table; of the different R values and the CP-corrected CCSD(T) energies, converted from; atomic units (Hartree) to |kcalpermol| by multiplying by the; automatically-defined conversion factor ``psi_hartree2kcalmol``. |PSIfour|; provides several built-in physical constants and conversion factors, as; described in section :ref:`sec:physicalConstants`.; Notice the loop over :math:`R` to create; the table looks just like the loop over ``R`` to run the different; computations, and the CP-corrected energies ``ecp[R]`` are accessed the same; way they were stored. The ``print`` line at the end just specifies some; formatting for the printed table (first element is a floating point number 3; spaces wide with one digit after the decimal, and the second element is a; floating point number 10 spaces wide with 6 digits after the decimal); the; format strings are the same as in the C programming language. For tables more; complicated than the simple one used here, Psithon has built-in support for; tables (see the next section). Our table is printed at the very end of the output file, and looks like; this ::. CP-corrected CCSD(T)/aug-cc-pVDZ interaction energies; ; R (Ang) E_int (kcal/mol); -----------------------------------------------------; 2.5 0.757718; 3.0 0.015687; 4.0 -0.016264; ; The following section goes over Psithon in much more detail, but; hopefully this example already makes it clear that many complex tasks; can be done very easily in |PSIfour|. ",MatchSource.DOCS,doc/sphinxman/source/tutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst:1704,Availability,avail,available,1704,".. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:bestPractices_py`:. Best Practices for Python Functions; ===================================. - Thy python functions shall always have final argument \*\*kwargs, that they may take in and pass on keywords meant for other functions. Yea, even the run_mcscf(), and run_ccsd() -type functions that have no use for kwargs. The exceptions are python functions that are only helpers called by a driver function. - Python functions should read the kwargs dictionary and (possibly) add to it. Functions should not pop or remove keywords from kwargs, even those keywords meaningful only to itself. This will ensure that the complete kwargs is available for pickling and sow/reap procedures. The exception is the molecule argument, which is read by the first function that gets ahold of it. This first function activates the molecule and pops it out of kwargs, effectively setting molecule for all subsequent functions. The code below should suffice. ::. # Make sure the molecule the user provided is the active one; if 'molecule' in kwargs:; activate(kwargs['molecule']); del kwargs['molecule']; molecule = psi4.get_active_molecule(); molecule.update_geometry(). - Preferrably, the python function signature (for functions intended to be called in input files) is ``function(name, **kwargs)``. For functions that have other positional keywords, please bundle them into kwargs at earliest convenience (see :ref:`sec:db()` argument db_name for example). - After the docstring, the first two lines of your function should be the ones below. The first provides a case insensitive handle to the name argument value. The second converts all the kwarg",MatchSource.DOCS,doc/sphinxman/source/attic/bestpractices_py.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst:3195,Deployability,continuous,continuous,3195,"ecule.update_geometry(). - Preferrably, the python function signature (for functions intended to be called in input files) is ``function(name, **kwargs)``. For functions that have other positional keywords, please bundle them into kwargs at earliest convenience (see :ref:`sec:db()` argument db_name for example). - After the docstring, the first two lines of your function should be the ones below. The first provides a case insensitive handle to the name argument value. The second converts all the kwargs dictionary keys to lowercase versions of themselves, so that input files can be case insensitive. ::. lowername = name.lower(); kwargs = kwargs_lower(kwargs). - Case sensitivity for kwargs dictionary values still needs to be handled. The first line below shows how to convert argument values to lowercase for matching. When not matching a whole value such that regular expressions are needed, the second line below performs a case insensitive match. ::. if (kwargs['db_mode'].lower() == 'continuous'):; if re.match(r'^sapt', name, flags=re.IGNORECASE):. - Match boolean keywords (db_cp in the example below) with expressions like the following, which allow case insensitive yes/true/on/1/no/false/off/0 user input. If your argument's value is a derivative level, similarly, use input.der0th, input.der1st, and input.der2nd. ::. if input.yes.match(str(db_cp)):; elif input.no.match(str(db_cp)):. - For keywords that might be used in other functions as well as your own, prepend the argument name with a short representation of your function name. For example, there are keywords cp_func, db_func, and opt_func to request what python function, if not energy(), is called by cp(), database(), and optimize(). - Upon checking in a new python file, edit the file ``psi4/doc/userman/source/index.rst`` and follow the instructions therein that your file may be autodocumented here. - Write docstrings! For a major function intended for use in input files, emulate any docstring in ``psi4/share/python",MatchSource.DOCS,doc/sphinxman/source/attic/bestpractices_py.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst:3856,Energy Efficiency,energy,energy,3856,"); kwargs = kwargs_lower(kwargs). - Case sensitivity for kwargs dictionary values still needs to be handled. The first line below shows how to convert argument values to lowercase for matching. When not matching a whole value such that regular expressions are needed, the second line below performs a case insensitive match. ::. if (kwargs['db_mode'].lower() == 'continuous'):; if re.match(r'^sapt', name, flags=re.IGNORECASE):. - Match boolean keywords (db_cp in the example below) with expressions like the following, which allow case insensitive yes/true/on/1/no/false/off/0 user input. If your argument's value is a derivative level, similarly, use input.der0th, input.der1st, and input.der2nd. ::. if input.yes.match(str(db_cp)):; elif input.no.match(str(db_cp)):. - For keywords that might be used in other functions as well as your own, prepend the argument name with a short representation of your function name. For example, there are keywords cp_func, db_func, and opt_func to request what python function, if not energy(), is called by cp(), database(), and optimize(). - Upon checking in a new python file, edit the file ``psi4/doc/userman/source/index.rst`` and follow the instructions therein that your file may be autodocumented here. - Write docstrings! For a major function intended for use in input files, emulate any docstring in ``psi4/share/python/driver.py``. For a behind-the-scenes function or if you don't want the bother of dealing with `reStructuredText <http://docutils.sourceforge.net/docs/user/rst/quickref.html>`_, just write an ordinary docstring. It will get slurped into the documentation in plain text. - Your python function should follow `PEP8 <http://www.python.org/dev/peps/pep-0008/>`_ conventions (without the line-length restriction). I'm aiming for files to pass the line below, unless for good reason. The second line is for database Python files. >>> pep8.py -r --ignore=E501 pythonfile.py; >>> pep8.py -r --ignore=E501,E221,E222,E241,E201,E202 databasefi",MatchSource.DOCS,doc/sphinxman/source/attic/bestpractices_py.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst:5245,Energy Efficiency,energy,energy,5245," or if you don't want the bother of dealing with `reStructuredText <http://docutils.sourceforge.net/docs/user/rst/quickref.html>`_, just write an ordinary docstring. It will get slurped into the documentation in plain text. - Your python function should follow `PEP8 <http://www.python.org/dev/peps/pep-0008/>`_ conventions (without the line-length restriction). I'm aiming for files to pass the line below, unless for good reason. The second line is for database Python files. >>> pep8.py -r --ignore=E501 pythonfile.py; >>> pep8.py -r --ignore=E501,E221,E222,E241,E201,E202 databasefile.py. - Your python function should not prevent any test case from passing. A test case(s) should be written and checked in for any major python function, so that others do not break your code. If most of your work was on the python (as opposed to c++) side, the test case prefix pywrap\_ is suggested. - Be sure to set any new PSI variables through lines like those below. Especially if the function returns an energy, set the 'current energy' variable. This last is needed to communicate with the optimizer. ::. psi4.set_variable('MP2.5 CORRELATION ENERGY', ce_mp25); psi4.set_variable('MP2.5 TOTAL ENERGY', e_mp25); psi4.set_variable('CURRENT ENERGY', e_mp25). - Once your python function is fairly stable on its own, it's potential for interoperability with energy()/opt()/cp()/db()/cbs()/etc. should be evaluated. If it makes physical sense that it should work, you should strive to make that interoperability a reality. Some steps:. - If any interoperability is possible, define an argument xx_func, where xx is a short name for your function. Add near the top of your function code like the below (less the final two lines). The net result of this code is that if the user specifies no \*_func arguments, then energy() gets called. If the user defines xx_func, then its value gets called. If the user defines func, then its value gets reassigned to xx_func, func itself is deleted, and xx_func() gets called",MatchSource.DOCS,doc/sphinxman/source/attic/bestpractices_py.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst:5270,Energy Efficiency,energy,energy,5270," or if you don't want the bother of dealing with `reStructuredText <http://docutils.sourceforge.net/docs/user/rst/quickref.html>`_, just write an ordinary docstring. It will get slurped into the documentation in plain text. - Your python function should follow `PEP8 <http://www.python.org/dev/peps/pep-0008/>`_ conventions (without the line-length restriction). I'm aiming for files to pass the line below, unless for good reason. The second line is for database Python files. >>> pep8.py -r --ignore=E501 pythonfile.py; >>> pep8.py -r --ignore=E501,E221,E222,E241,E201,E202 databasefile.py. - Your python function should not prevent any test case from passing. A test case(s) should be written and checked in for any major python function, so that others do not break your code. If most of your work was on the python (as opposed to c++) side, the test case prefix pywrap\_ is suggested. - Be sure to set any new PSI variables through lines like those below. Especially if the function returns an energy, set the 'current energy' variable. This last is needed to communicate with the optimizer. ::. psi4.set_variable('MP2.5 CORRELATION ENERGY', ce_mp25); psi4.set_variable('MP2.5 TOTAL ENERGY', e_mp25); psi4.set_variable('CURRENT ENERGY', e_mp25). - Once your python function is fairly stable on its own, it's potential for interoperability with energy()/opt()/cp()/db()/cbs()/etc. should be evaluated. If it makes physical sense that it should work, you should strive to make that interoperability a reality. Some steps:. - If any interoperability is possible, define an argument xx_func, where xx is a short name for your function. Add near the top of your function code like the below (less the final two lines). The net result of this code is that if the user specifies no \*_func arguments, then energy() gets called. If the user defines xx_func, then its value gets called. If the user defines func, then its value gets reassigned to xx_func, func itself is deleted, and xx_func() gets called",MatchSource.DOCS,doc/sphinxman/source/attic/bestpractices_py.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst:5595,Energy Efficiency,energy,energy,5595,"ntions (without the line-length restriction). I'm aiming for files to pass the line below, unless for good reason. The second line is for database Python files. >>> pep8.py -r --ignore=E501 pythonfile.py; >>> pep8.py -r --ignore=E501,E221,E222,E241,E201,E202 databasefile.py. - Your python function should not prevent any test case from passing. A test case(s) should be written and checked in for any major python function, so that others do not break your code. If most of your work was on the python (as opposed to c++) side, the test case prefix pywrap\_ is suggested. - Be sure to set any new PSI variables through lines like those below. Especially if the function returns an energy, set the 'current energy' variable. This last is needed to communicate with the optimizer. ::. psi4.set_variable('MP2.5 CORRELATION ENERGY', ce_mp25); psi4.set_variable('MP2.5 TOTAL ENERGY', e_mp25); psi4.set_variable('CURRENT ENERGY', e_mp25). - Once your python function is fairly stable on its own, it's potential for interoperability with energy()/opt()/cp()/db()/cbs()/etc. should be evaluated. If it makes physical sense that it should work, you should strive to make that interoperability a reality. Some steps:. - If any interoperability is possible, define an argument xx_func, where xx is a short name for your function. Add near the top of your function code like the below (less the final two lines). The net result of this code is that if the user specifies no \*_func arguments, then energy() gets called. If the user defines xx_func, then its value gets called. If the user defines func, then its value gets reassigned to xx_func, func itself is deleted, and xx_func() gets called. Whatever is getting called is stored in func within the function. ::. # Establish function to call; if not('xx_func' in kwargs):; if ('func' in kwargs):; kwargs['xx_func'] = kwargs['func']; del kwargs['func']; else:; kwargs['xx_func'] = energy; func = kwargs['xx_func']; if not func:; raise ValidationError('Functi",MatchSource.DOCS,doc/sphinxman/source/attic/bestpractices_py.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst:6050,Energy Efficiency,energy,energy,6050,"our code. If most of your work was on the python (as opposed to c++) side, the test case prefix pywrap\_ is suggested. - Be sure to set any new PSI variables through lines like those below. Especially if the function returns an energy, set the 'current energy' variable. This last is needed to communicate with the optimizer. ::. psi4.set_variable('MP2.5 CORRELATION ENERGY', ce_mp25); psi4.set_variable('MP2.5 TOTAL ENERGY', e_mp25); psi4.set_variable('CURRENT ENERGY', e_mp25). - Once your python function is fairly stable on its own, it's potential for interoperability with energy()/opt()/cp()/db()/cbs()/etc. should be evaluated. If it makes physical sense that it should work, you should strive to make that interoperability a reality. Some steps:. - If any interoperability is possible, define an argument xx_func, where xx is a short name for your function. Add near the top of your function code like the below (less the final two lines). The net result of this code is that if the user specifies no \*_func arguments, then energy() gets called. If the user defines xx_func, then its value gets called. If the user defines func, then its value gets reassigned to xx_func, func itself is deleted, and xx_func() gets called. Whatever is getting called is stored in func within the function. ::. # Establish function to call; if not('xx_func' in kwargs):; if ('func' in kwargs):; kwargs['xx_func'] = kwargs['func']; del kwargs['func']; else:; kwargs['xx_func'] = energy; func = kwargs['xx_func']; if not func:; raise ValidationError('Function \'%s\' does not exist to be called by wrapper counterpoise_correct.' % (func.__name__)); if (func is db):; raise ValidationError('Wrapper xx is unhappy to be calling function \'%s\'.' % (func.__name__)). - If specific interoperabilities are known, code them in. For example, if xx shouldn't call db, add the last two lines above to the xx function. If db shouldn't call xx, add the following two lines below to the db function. ::. if (func is xx):; ra",MatchSource.DOCS,doc/sphinxman/source/attic/bestpractices_py.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst:6486,Energy Efficiency,energy,energy,6486,"ENT ENERGY', e_mp25). - Once your python function is fairly stable on its own, it's potential for interoperability with energy()/opt()/cp()/db()/cbs()/etc. should be evaluated. If it makes physical sense that it should work, you should strive to make that interoperability a reality. Some steps:. - If any interoperability is possible, define an argument xx_func, where xx is a short name for your function. Add near the top of your function code like the below (less the final two lines). The net result of this code is that if the user specifies no \*_func arguments, then energy() gets called. If the user defines xx_func, then its value gets called. If the user defines func, then its value gets reassigned to xx_func, func itself is deleted, and xx_func() gets called. Whatever is getting called is stored in func within the function. ::. # Establish function to call; if not('xx_func' in kwargs):; if ('func' in kwargs):; kwargs['xx_func'] = kwargs['func']; del kwargs['func']; else:; kwargs['xx_func'] = energy; func = kwargs['xx_func']; if not func:; raise ValidationError('Function \'%s\' does not exist to be called by wrapper counterpoise_correct.' % (func.__name__)); if (func is db):; raise ValidationError('Wrapper xx is unhappy to be calling function \'%s\'.' % (func.__name__)). - If specific interoperabilities are known, code them in. For example, if xx shouldn't call db, add the last two lines above to the xx function. If db shouldn't call xx, add the following two lines below to the db function. ::. if (func is xx):; raise ValidationError('Wrapper database is unhappy to be calling function \'%s\'.' % (func.__name__)). - Create a multipart test case that runs some intercalls between your function and others (akin to :srcsample:`pywrap_all)`. In trials, permute the order of calls a few times to expose any calls that don't clean up after themselves and need further attention. - When all is validated, add your findings to the great :ref:`table:intercalls` table in the docu",MatchSource.DOCS,doc/sphinxman/source/attic/bestpractices_py.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst:5573,Integrability,interoperab,interoperability,5573,"ntions (without the line-length restriction). I'm aiming for files to pass the line below, unless for good reason. The second line is for database Python files. >>> pep8.py -r --ignore=E501 pythonfile.py; >>> pep8.py -r --ignore=E501,E221,E222,E241,E201,E202 databasefile.py. - Your python function should not prevent any test case from passing. A test case(s) should be written and checked in for any major python function, so that others do not break your code. If most of your work was on the python (as opposed to c++) side, the test case prefix pywrap\_ is suggested. - Be sure to set any new PSI variables through lines like those below. Especially if the function returns an energy, set the 'current energy' variable. This last is needed to communicate with the optimizer. ::. psi4.set_variable('MP2.5 CORRELATION ENERGY', ce_mp25); psi4.set_variable('MP2.5 TOTAL ENERGY', e_mp25); psi4.set_variable('CURRENT ENERGY', e_mp25). - Once your python function is fairly stable on its own, it's potential for interoperability with energy()/opt()/cp()/db()/cbs()/etc. should be evaluated. If it makes physical sense that it should work, you should strive to make that interoperability a reality. Some steps:. - If any interoperability is possible, define an argument xx_func, where xx is a short name for your function. Add near the top of your function code like the below (less the final two lines). The net result of this code is that if the user specifies no \*_func arguments, then energy() gets called. If the user defines xx_func, then its value gets called. If the user defines func, then its value gets reassigned to xx_func, func itself is deleted, and xx_func() gets called. Whatever is getting called is stored in func within the function. ::. # Establish function to call; if not('xx_func' in kwargs):; if ('func' in kwargs):; kwargs['xx_func'] = kwargs['func']; del kwargs['func']; else:; kwargs['xx_func'] = energy; func = kwargs['xx_func']; if not func:; raise ValidationError('Functi",MatchSource.DOCS,doc/sphinxman/source/attic/bestpractices_py.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst:5731,Integrability,interoperab,interoperability,5731,"abase Python files. >>> pep8.py -r --ignore=E501 pythonfile.py; >>> pep8.py -r --ignore=E501,E221,E222,E241,E201,E202 databasefile.py. - Your python function should not prevent any test case from passing. A test case(s) should be written and checked in for any major python function, so that others do not break your code. If most of your work was on the python (as opposed to c++) side, the test case prefix pywrap\_ is suggested. - Be sure to set any new PSI variables through lines like those below. Especially if the function returns an energy, set the 'current energy' variable. This last is needed to communicate with the optimizer. ::. psi4.set_variable('MP2.5 CORRELATION ENERGY', ce_mp25); psi4.set_variable('MP2.5 TOTAL ENERGY', e_mp25); psi4.set_variable('CURRENT ENERGY', e_mp25). - Once your python function is fairly stable on its own, it's potential for interoperability with energy()/opt()/cp()/db()/cbs()/etc. should be evaluated. If it makes physical sense that it should work, you should strive to make that interoperability a reality. Some steps:. - If any interoperability is possible, define an argument xx_func, where xx is a short name for your function. Add near the top of your function code like the below (less the final two lines). The net result of this code is that if the user specifies no \*_func arguments, then energy() gets called. If the user defines xx_func, then its value gets called. If the user defines func, then its value gets reassigned to xx_func, func itself is deleted, and xx_func() gets called. Whatever is getting called is stored in func within the function. ::. # Establish function to call; if not('xx_func' in kwargs):; if ('func' in kwargs):; kwargs['xx_func'] = kwargs['func']; del kwargs['func']; else:; kwargs['xx_func'] = energy; func = kwargs['xx_func']; if not func:; raise ValidationError('Function \'%s\' does not exist to be called by wrapper counterpoise_correct.' % (func.__name__)); if (func is db):; raise ValidationError('Wrapper x",MatchSource.DOCS,doc/sphinxman/source/attic/bestpractices_py.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst:5781,Integrability,interoperab,interoperability,5781,"basefile.py. - Your python function should not prevent any test case from passing. A test case(s) should be written and checked in for any major python function, so that others do not break your code. If most of your work was on the python (as opposed to c++) side, the test case prefix pywrap\_ is suggested. - Be sure to set any new PSI variables through lines like those below. Especially if the function returns an energy, set the 'current energy' variable. This last is needed to communicate with the optimizer. ::. psi4.set_variable('MP2.5 CORRELATION ENERGY', ce_mp25); psi4.set_variable('MP2.5 TOTAL ENERGY', e_mp25); psi4.set_variable('CURRENT ENERGY', e_mp25). - Once your python function is fairly stable on its own, it's potential for interoperability with energy()/opt()/cp()/db()/cbs()/etc. should be evaluated. If it makes physical sense that it should work, you should strive to make that interoperability a reality. Some steps:. - If any interoperability is possible, define an argument xx_func, where xx is a short name for your function. Add near the top of your function code like the below (less the final two lines). The net result of this code is that if the user specifies no \*_func arguments, then energy() gets called. If the user defines xx_func, then its value gets called. If the user defines func, then its value gets reassigned to xx_func, func itself is deleted, and xx_func() gets called. Whatever is getting called is stored in func within the function. ::. # Establish function to call; if not('xx_func' in kwargs):; if ('func' in kwargs):; kwargs['xx_func'] = kwargs['func']; del kwargs['func']; else:; kwargs['xx_func'] = energy; func = kwargs['xx_func']; if not func:; raise ValidationError('Function \'%s\' does not exist to be called by wrapper counterpoise_correct.' % (func.__name__)); if (func is db):; raise ValidationError('Wrapper xx is unhappy to be calling function \'%s\'.' % (func.__name__)). - If specific interoperabilities are known, code them in.",MatchSource.DOCS,doc/sphinxman/source/attic/bestpractices_py.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst:6604,Integrability,wrap,wrapper,6604,"ENT ENERGY', e_mp25). - Once your python function is fairly stable on its own, it's potential for interoperability with energy()/opt()/cp()/db()/cbs()/etc. should be evaluated. If it makes physical sense that it should work, you should strive to make that interoperability a reality. Some steps:. - If any interoperability is possible, define an argument xx_func, where xx is a short name for your function. Add near the top of your function code like the below (less the final two lines). The net result of this code is that if the user specifies no \*_func arguments, then energy() gets called. If the user defines xx_func, then its value gets called. If the user defines func, then its value gets reassigned to xx_func, func itself is deleted, and xx_func() gets called. Whatever is getting called is stored in func within the function. ::. # Establish function to call; if not('xx_func' in kwargs):; if ('func' in kwargs):; kwargs['xx_func'] = kwargs['func']; del kwargs['func']; else:; kwargs['xx_func'] = energy; func = kwargs['xx_func']; if not func:; raise ValidationError('Function \'%s\' does not exist to be called by wrapper counterpoise_correct.' % (func.__name__)); if (func is db):; raise ValidationError('Wrapper xx is unhappy to be calling function \'%s\'.' % (func.__name__)). - If specific interoperabilities are known, code them in. For example, if xx shouldn't call db, add the last two lines above to the xx function. If db shouldn't call xx, add the following two lines below to the db function. ::. if (func is xx):; raise ValidationError('Wrapper database is unhappy to be calling function \'%s\'.' % (func.__name__)). - Create a multipart test case that runs some intercalls between your function and others (akin to :srcsample:`pywrap_all)`. In trials, permute the order of calls a few times to expose any calls that don't clean up after themselves and need further attention. - When all is validated, add your findings to the great :ref:`table:intercalls` table in the docu",MatchSource.DOCS,doc/sphinxman/source/attic/bestpractices_py.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst:6784,Integrability,interoperab,interoperabilities,6784," e_mp25). - Once your python function is fairly stable on its own, it's potential for interoperability with energy()/opt()/cp()/db()/cbs()/etc. should be evaluated. If it makes physical sense that it should work, you should strive to make that interoperability a reality. Some steps:. - If any interoperability is possible, define an argument xx_func, where xx is a short name for your function. Add near the top of your function code like the below (less the final two lines). The net result of this code is that if the user specifies no \*_func arguments, then energy() gets called. If the user defines xx_func, then its value gets called. If the user defines func, then its value gets reassigned to xx_func, func itself is deleted, and xx_func() gets called. Whatever is getting called is stored in func within the function. ::. # Establish function to call; if not('xx_func' in kwargs):; if ('func' in kwargs):; kwargs['xx_func'] = kwargs['func']; del kwargs['func']; else:; kwargs['xx_func'] = energy; func = kwargs['xx_func']; if not func:; raise ValidationError('Function \'%s\' does not exist to be called by wrapper counterpoise_correct.' % (func.__name__)); if (func is db):; raise ValidationError('Wrapper xx is unhappy to be calling function \'%s\'.' % (func.__name__)). - If specific interoperabilities are known, code them in. For example, if xx shouldn't call db, add the last two lines above to the xx function. If db shouldn't call xx, add the following two lines below to the db function. ::. if (func is xx):; raise ValidationError('Wrapper database is unhappy to be calling function \'%s\'.' % (func.__name__)). - Create a multipart test case that runs some intercalls between your function and others (akin to :srcsample:`pywrap_all)`. In trials, permute the order of calls a few times to expose any calls that don't clean up after themselves and need further attention. - When all is validated, add your findings to the great :ref:`table:intercalls` table in the documentation. ",MatchSource.DOCS,doc/sphinxman/source/attic/bestpractices_py.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst:5165,Modifiability,variab,variables,5165,"cstring in ``psi4/share/python/driver.py``. For a behind-the-scenes function or if you don't want the bother of dealing with `reStructuredText <http://docutils.sourceforge.net/docs/user/rst/quickref.html>`_, just write an ordinary docstring. It will get slurped into the documentation in plain text. - Your python function should follow `PEP8 <http://www.python.org/dev/peps/pep-0008/>`_ conventions (without the line-length restriction). I'm aiming for files to pass the line below, unless for good reason. The second line is for database Python files. >>> pep8.py -r --ignore=E501 pythonfile.py; >>> pep8.py -r --ignore=E501,E221,E222,E241,E201,E202 databasefile.py. - Your python function should not prevent any test case from passing. A test case(s) should be written and checked in for any major python function, so that others do not break your code. If most of your work was on the python (as opposed to c++) side, the test case prefix pywrap\_ is suggested. - Be sure to set any new PSI variables through lines like those below. Especially if the function returns an energy, set the 'current energy' variable. This last is needed to communicate with the optimizer. ::. psi4.set_variable('MP2.5 CORRELATION ENERGY', ce_mp25); psi4.set_variable('MP2.5 TOTAL ENERGY', e_mp25); psi4.set_variable('CURRENT ENERGY', e_mp25). - Once your python function is fairly stable on its own, it's potential for interoperability with energy()/opt()/cp()/db()/cbs()/etc. should be evaluated. If it makes physical sense that it should work, you should strive to make that interoperability a reality. Some steps:. - If any interoperability is possible, define an argument xx_func, where xx is a short name for your function. Add near the top of your function code like the below (less the final two lines). The net result of this code is that if the user specifies no \*_func arguments, then energy() gets called. If the user defines xx_func, then its value gets called. If the user defines func, then its value g",MatchSource.DOCS,doc/sphinxman/source/attic/bestpractices_py.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst:5278,Modifiability,variab,variable,5278," or if you don't want the bother of dealing with `reStructuredText <http://docutils.sourceforge.net/docs/user/rst/quickref.html>`_, just write an ordinary docstring. It will get slurped into the documentation in plain text. - Your python function should follow `PEP8 <http://www.python.org/dev/peps/pep-0008/>`_ conventions (without the line-length restriction). I'm aiming for files to pass the line below, unless for good reason. The second line is for database Python files. >>> pep8.py -r --ignore=E501 pythonfile.py; >>> pep8.py -r --ignore=E501,E221,E222,E241,E201,E202 databasefile.py. - Your python function should not prevent any test case from passing. A test case(s) should be written and checked in for any major python function, so that others do not break your code. If most of your work was on the python (as opposed to c++) side, the test case prefix pywrap\_ is suggested. - Be sure to set any new PSI variables through lines like those below. Especially if the function returns an energy, set the 'current energy' variable. This last is needed to communicate with the optimizer. ::. psi4.set_variable('MP2.5 CORRELATION ENERGY', ce_mp25); psi4.set_variable('MP2.5 TOTAL ENERGY', e_mp25); psi4.set_variable('CURRENT ENERGY', e_mp25). - Once your python function is fairly stable on its own, it's potential for interoperability with energy()/opt()/cp()/db()/cbs()/etc. should be evaluated. If it makes physical sense that it should work, you should strive to make that interoperability a reality. Some steps:. - If any interoperability is possible, define an argument xx_func, where xx is a short name for your function. Add near the top of your function code like the below (less the final two lines). The net result of this code is that if the user specifies no \*_func arguments, then energy() gets called. If the user defines xx_func, then its value gets called. If the user defines func, then its value gets reassigned to xx_func, func itself is deleted, and xx_func() gets called",MatchSource.DOCS,doc/sphinxman/source/attic/bestpractices_py.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst:3122,Performance,perform,performs,3122," in kwargs:; activate(kwargs['molecule']); del kwargs['molecule']; molecule = psi4.get_active_molecule(); molecule.update_geometry(). - Preferrably, the python function signature (for functions intended to be called in input files) is ``function(name, **kwargs)``. For functions that have other positional keywords, please bundle them into kwargs at earliest convenience (see :ref:`sec:db()` argument db_name for example). - After the docstring, the first two lines of your function should be the ones below. The first provides a case insensitive handle to the name argument value. The second converts all the kwargs dictionary keys to lowercase versions of themselves, so that input files can be case insensitive. ::. lowername = name.lower(); kwargs = kwargs_lower(kwargs). - Case sensitivity for kwargs dictionary values still needs to be handled. The first line below shows how to convert argument values to lowercase for matching. When not matching a whole value such that regular expressions are needed, the second line below performs a case insensitive match. ::. if (kwargs['db_mode'].lower() == 'continuous'):; if re.match(r'^sapt', name, flags=re.IGNORECASE):. - Match boolean keywords (db_cp in the example below) with expressions like the following, which allow case insensitive yes/true/on/1/no/false/off/0 user input. If your argument's value is a derivative level, similarly, use input.der0th, input.der1st, and input.der2nd. ::. if input.yes.match(str(db_cp)):; elif input.no.match(str(db_cp)):. - For keywords that might be used in other functions as well as your own, prepend the argument name with a short representation of your function name. For example, there are keywords cp_func, db_func, and opt_func to request what python function, if not energy(), is called by cp(), database(), and optimize(). - Upon checking in a new python file, edit the file ``psi4/doc/userman/source/index.rst`` and follow the instructions therein that your file may be autodocumented here. - Write d",MatchSource.DOCS,doc/sphinxman/source/attic/bestpractices_py.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst:3901,Performance,optimiz,optimize,3901,"); kwargs = kwargs_lower(kwargs). - Case sensitivity for kwargs dictionary values still needs to be handled. The first line below shows how to convert argument values to lowercase for matching. When not matching a whole value such that regular expressions are needed, the second line below performs a case insensitive match. ::. if (kwargs['db_mode'].lower() == 'continuous'):; if re.match(r'^sapt', name, flags=re.IGNORECASE):. - Match boolean keywords (db_cp in the example below) with expressions like the following, which allow case insensitive yes/true/on/1/no/false/off/0 user input. If your argument's value is a derivative level, similarly, use input.der0th, input.der1st, and input.der2nd. ::. if input.yes.match(str(db_cp)):; elif input.no.match(str(db_cp)):. - For keywords that might be used in other functions as well as your own, prepend the argument name with a short representation of your function name. For example, there are keywords cp_func, db_func, and opt_func to request what python function, if not energy(), is called by cp(), database(), and optimize(). - Upon checking in a new python file, edit the file ``psi4/doc/userman/source/index.rst`` and follow the instructions therein that your file may be autodocumented here. - Write docstrings! For a major function intended for use in input files, emulate any docstring in ``psi4/share/python/driver.py``. For a behind-the-scenes function or if you don't want the bother of dealing with `reStructuredText <http://docutils.sourceforge.net/docs/user/rst/quickref.html>`_, just write an ordinary docstring. It will get slurped into the documentation in plain text. - Your python function should follow `PEP8 <http://www.python.org/dev/peps/pep-0008/>`_ conventions (without the line-length restriction). I'm aiming for files to pass the line below, unless for good reason. The second line is for database Python files. >>> pep8.py -r --ignore=E501 pythonfile.py; >>> pep8.py -r --ignore=E501,E221,E222,E241,E201,E202 databasefi",MatchSource.DOCS,doc/sphinxman/source/attic/bestpractices_py.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst:5332,Performance,optimiz,optimizer,5332,"http://docutils.sourceforge.net/docs/user/rst/quickref.html>`_, just write an ordinary docstring. It will get slurped into the documentation in plain text. - Your python function should follow `PEP8 <http://www.python.org/dev/peps/pep-0008/>`_ conventions (without the line-length restriction). I'm aiming for files to pass the line below, unless for good reason. The second line is for database Python files. >>> pep8.py -r --ignore=E501 pythonfile.py; >>> pep8.py -r --ignore=E501,E221,E222,E241,E201,E202 databasefile.py. - Your python function should not prevent any test case from passing. A test case(s) should be written and checked in for any major python function, so that others do not break your code. If most of your work was on the python (as opposed to c++) side, the test case prefix pywrap\_ is suggested. - Be sure to set any new PSI variables through lines like those below. Especially if the function returns an energy, set the 'current energy' variable. This last is needed to communicate with the optimizer. ::. psi4.set_variable('MP2.5 CORRELATION ENERGY', ce_mp25); psi4.set_variable('MP2.5 TOTAL ENERGY', e_mp25); psi4.set_variable('CURRENT ENERGY', e_mp25). - Once your python function is fairly stable on its own, it's potential for interoperability with energy()/opt()/cp()/db()/cbs()/etc. should be evaluated. If it makes physical sense that it should work, you should strive to make that interoperability a reality. Some steps:. - If any interoperability is possible, define an argument xx_func, where xx is a short name for your function. Add near the top of your function code like the below (less the final two lines). The net result of this code is that if the user specifies no \*_func arguments, then energy() gets called. If the user defines xx_func, then its value gets called. If the user defines func, then its value gets reassigned to xx_func, func itself is deleted, and xx_func() gets called. Whatever is getting called is stored in func within the function. ",MatchSource.DOCS,doc/sphinxman/source/attic/bestpractices_py.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst:7297,Security,expose,expose,7297," e_mp25). - Once your python function is fairly stable on its own, it's potential for interoperability with energy()/opt()/cp()/db()/cbs()/etc. should be evaluated. If it makes physical sense that it should work, you should strive to make that interoperability a reality. Some steps:. - If any interoperability is possible, define an argument xx_func, where xx is a short name for your function. Add near the top of your function code like the below (less the final two lines). The net result of this code is that if the user specifies no \*_func arguments, then energy() gets called. If the user defines xx_func, then its value gets called. If the user defines func, then its value gets reassigned to xx_func, func itself is deleted, and xx_func() gets called. Whatever is getting called is stored in func within the function. ::. # Establish function to call; if not('xx_func' in kwargs):; if ('func' in kwargs):; kwargs['xx_func'] = kwargs['func']; del kwargs['func']; else:; kwargs['xx_func'] = energy; func = kwargs['xx_func']; if not func:; raise ValidationError('Function \'%s\' does not exist to be called by wrapper counterpoise_correct.' % (func.__name__)); if (func is db):; raise ValidationError('Wrapper xx is unhappy to be calling function \'%s\'.' % (func.__name__)). - If specific interoperabilities are known, code them in. For example, if xx shouldn't call db, add the last two lines above to the xx function. If db shouldn't call xx, add the following two lines below to the db function. ::. if (func is xx):; raise ValidationError('Wrapper database is unhappy to be calling function \'%s\'.' % (func.__name__)). - Create a multipart test case that runs some intercalls between your function and others (akin to :srcsample:`pywrap_all)`. In trials, permute the order of calls a few times to expose any calls that don't clean up after themselves and need further attention. - When all is validated, add your findings to the great :ref:`table:intercalls` table in the documentation. ",MatchSource.DOCS,doc/sphinxman/source/attic/bestpractices_py.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst:7393,Security,validat,validated,7393," e_mp25). - Once your python function is fairly stable on its own, it's potential for interoperability with energy()/opt()/cp()/db()/cbs()/etc. should be evaluated. If it makes physical sense that it should work, you should strive to make that interoperability a reality. Some steps:. - If any interoperability is possible, define an argument xx_func, where xx is a short name for your function. Add near the top of your function code like the below (less the final two lines). The net result of this code is that if the user specifies no \*_func arguments, then energy() gets called. If the user defines xx_func, then its value gets called. If the user defines func, then its value gets reassigned to xx_func, func itself is deleted, and xx_func() gets called. Whatever is getting called is stored in func within the function. ::. # Establish function to call; if not('xx_func' in kwargs):; if ('func' in kwargs):; kwargs['xx_func'] = kwargs['func']; del kwargs['func']; else:; kwargs['xx_func'] = energy; func = kwargs['xx_func']; if not func:; raise ValidationError('Function \'%s\' does not exist to be called by wrapper counterpoise_correct.' % (func.__name__)); if (func is db):; raise ValidationError('Wrapper xx is unhappy to be calling function \'%s\'.' % (func.__name__)). - If specific interoperabilities are known, code them in. For example, if xx shouldn't call db, add the last two lines above to the xx function. If db shouldn't call xx, add the following two lines below to the db function. ::. if (func is xx):; raise ValidationError('Wrapper database is unhappy to be calling function \'%s\'.' % (func.__name__)). - Create a multipart test case that runs some intercalls between your function and others (akin to :srcsample:`pywrap_all)`. In trials, permute the order of calls a few times to expose any calls that don't clean up after themselves and need further attention. - When all is validated, add your findings to the great :ref:`table:intercalls` table in the documentation. ",MatchSource.DOCS,doc/sphinxman/source/attic/bestpractices_py.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst:4885,Testability,test,test,4885,"ed by cp(), database(), and optimize(). - Upon checking in a new python file, edit the file ``psi4/doc/userman/source/index.rst`` and follow the instructions therein that your file may be autodocumented here. - Write docstrings! For a major function intended for use in input files, emulate any docstring in ``psi4/share/python/driver.py``. For a behind-the-scenes function or if you don't want the bother of dealing with `reStructuredText <http://docutils.sourceforge.net/docs/user/rst/quickref.html>`_, just write an ordinary docstring. It will get slurped into the documentation in plain text. - Your python function should follow `PEP8 <http://www.python.org/dev/peps/pep-0008/>`_ conventions (without the line-length restriction). I'm aiming for files to pass the line below, unless for good reason. The second line is for database Python files. >>> pep8.py -r --ignore=E501 pythonfile.py; >>> pep8.py -r --ignore=E501,E221,E222,E241,E201,E202 databasefile.py. - Your python function should not prevent any test case from passing. A test case(s) should be written and checked in for any major python function, so that others do not break your code. If most of your work was on the python (as opposed to c++) side, the test case prefix pywrap\_ is suggested. - Be sure to set any new PSI variables through lines like those below. Especially if the function returns an energy, set the 'current energy' variable. This last is needed to communicate with the optimizer. ::. psi4.set_variable('MP2.5 CORRELATION ENERGY', ce_mp25); psi4.set_variable('MP2.5 TOTAL ENERGY', e_mp25); psi4.set_variable('CURRENT ENERGY', e_mp25). - Once your python function is fairly stable on its own, it's potential for interoperability with energy()/opt()/cp()/db()/cbs()/etc. should be evaluated. If it makes physical sense that it should work, you should strive to make that interoperability a reality. Some steps:. - If any interoperability is possible, define an argument xx_func, where xx is a short name for your ",MatchSource.DOCS,doc/sphinxman/source/attic/bestpractices_py.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst:4911,Testability,test,test,4911,"psi4/doc/userman/source/index.rst`` and follow the instructions therein that your file may be autodocumented here. - Write docstrings! For a major function intended for use in input files, emulate any docstring in ``psi4/share/python/driver.py``. For a behind-the-scenes function or if you don't want the bother of dealing with `reStructuredText <http://docutils.sourceforge.net/docs/user/rst/quickref.html>`_, just write an ordinary docstring. It will get slurped into the documentation in plain text. - Your python function should follow `PEP8 <http://www.python.org/dev/peps/pep-0008/>`_ conventions (without the line-length restriction). I'm aiming for files to pass the line below, unless for good reason. The second line is for database Python files. >>> pep8.py -r --ignore=E501 pythonfile.py; >>> pep8.py -r --ignore=E501,E221,E222,E241,E201,E202 databasefile.py. - Your python function should not prevent any test case from passing. A test case(s) should be written and checked in for any major python function, so that others do not break your code. If most of your work was on the python (as opposed to c++) side, the test case prefix pywrap\_ is suggested. - Be sure to set any new PSI variables through lines like those below. Especially if the function returns an energy, set the 'current energy' variable. This last is needed to communicate with the optimizer. ::. psi4.set_variable('MP2.5 CORRELATION ENERGY', ce_mp25); psi4.set_variable('MP2.5 TOTAL ENERGY', e_mp25); psi4.set_variable('CURRENT ENERGY', e_mp25). - Once your python function is fairly stable on its own, it's potential for interoperability with energy()/opt()/cp()/db()/cbs()/etc. should be evaluated. If it makes physical sense that it should work, you should strive to make that interoperability a reality. Some steps:. - If any interoperability is possible, define an argument xx_func, where xx is a short name for your function. Add near the top of your function code like the below (less the final two lines). Th",MatchSource.DOCS,doc/sphinxman/source/attic/bestpractices_py.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst:5096,Testability,test,test,5096,". - Write docstrings! For a major function intended for use in input files, emulate any docstring in ``psi4/share/python/driver.py``. For a behind-the-scenes function or if you don't want the bother of dealing with `reStructuredText <http://docutils.sourceforge.net/docs/user/rst/quickref.html>`_, just write an ordinary docstring. It will get slurped into the documentation in plain text. - Your python function should follow `PEP8 <http://www.python.org/dev/peps/pep-0008/>`_ conventions (without the line-length restriction). I'm aiming for files to pass the line below, unless for good reason. The second line is for database Python files. >>> pep8.py -r --ignore=E501 pythonfile.py; >>> pep8.py -r --ignore=E501,E221,E222,E241,E201,E202 databasefile.py. - Your python function should not prevent any test case from passing. A test case(s) should be written and checked in for any major python function, so that others do not break your code. If most of your work was on the python (as opposed to c++) side, the test case prefix pywrap\_ is suggested. - Be sure to set any new PSI variables through lines like those below. Especially if the function returns an energy, set the 'current energy' variable. This last is needed to communicate with the optimizer. ::. psi4.set_variable('MP2.5 CORRELATION ENERGY', ce_mp25); psi4.set_variable('MP2.5 TOTAL ENERGY', e_mp25); psi4.set_variable('CURRENT ENERGY', e_mp25). - Once your python function is fairly stable on its own, it's potential for interoperability with energy()/opt()/cp()/db()/cbs()/etc. should be evaluated. If it makes physical sense that it should work, you should strive to make that interoperability a reality. Some steps:. - If any interoperability is possible, define an argument xx_func, where xx is a short name for your function. Add near the top of your function code like the below (less the final two lines). The net result of this code is that if the user specifies no \*_func arguments, then energy() gets called. If the us",MatchSource.DOCS,doc/sphinxman/source/attic/bestpractices_py.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst:7140,Testability,test,test,7140," e_mp25). - Once your python function is fairly stable on its own, it's potential for interoperability with energy()/opt()/cp()/db()/cbs()/etc. should be evaluated. If it makes physical sense that it should work, you should strive to make that interoperability a reality. Some steps:. - If any interoperability is possible, define an argument xx_func, where xx is a short name for your function. Add near the top of your function code like the below (less the final two lines). The net result of this code is that if the user specifies no \*_func arguments, then energy() gets called. If the user defines xx_func, then its value gets called. If the user defines func, then its value gets reassigned to xx_func, func itself is deleted, and xx_func() gets called. Whatever is getting called is stored in func within the function. ::. # Establish function to call; if not('xx_func' in kwargs):; if ('func' in kwargs):; kwargs['xx_func'] = kwargs['func']; del kwargs['func']; else:; kwargs['xx_func'] = energy; func = kwargs['xx_func']; if not func:; raise ValidationError('Function \'%s\' does not exist to be called by wrapper counterpoise_correct.' % (func.__name__)); if (func is db):; raise ValidationError('Wrapper xx is unhappy to be calling function \'%s\'.' % (func.__name__)). - If specific interoperabilities are known, code them in. For example, if xx shouldn't call db, add the last two lines above to the xx function. If db shouldn't call xx, add the following two lines below to the db function. ::. if (func is xx):; raise ValidationError('Wrapper database is unhappy to be calling function \'%s\'.' % (func.__name__)). - Create a multipart test case that runs some intercalls between your function and others (akin to :srcsample:`pywrap_all)`. In trials, permute the order of calls a few times to expose any calls that don't clean up after themselves and need further attention. - When all is validated, add your findings to the great :ref:`table:intercalls` table in the documentation. ",MatchSource.DOCS,doc/sphinxman/source/attic/bestpractices_py.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst:4542,Availability,error,error,4542,"s3|, |detci__ras4|,; |globals__frozen_docc|, |globals__frozen_uocc|, |detci__active|, *etc.*, need to be; in the global ``set {...}`` block section of the input file so they may; be accessed by other modules. The ability to perform state-averaged ; [Docken:1972:4928]_ [Ruedenberg:1979:1069]_; CASSCF or RASSCF computations has been added. This is accomplished using the ; |detci__avg_states| keyword. See the :srcsample:`casscf-sp` and :srcsample:`casscf-sa-sp` examples in the ; samples directory and the example below. Basic Keywords; --------------. WFN = string; This may be ``casscf`` or ``rasscf``. REFERENCE = string; Any of the references allowed by detci should work (*i.e.*, not; {\tt uhf}), but there should be no reason not to use {\tt rhf}. DERTYPE = string; At present, only energies ({\tt none}) are supported; future; releases will implement gradients ({\tt first}). CONVERGENCE = integer; Convergence desired on the orbital gradient. Convergence is achieved when; the RMS of the error in the orbital gradient is less than 10**(-n). The ; default is 4 for energy calculations and 7 for gradients. Note that; this is a different convergence criterion than for the \PSIdetci\; program itself. These can be differentiated, if changed by the user,; by placing the {\tt CONVERGENCE} keywords within separate sections of; input, such as {\tt detcas: ( convergence = x )}. ENERGY\_CONVERGENCE = integer; Convergence desired on the total MCSCF energy. The default is 7.; \item[RESTRICTED\_DOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of lowest energy doubly occupied orbitals in each irreducible; representation from which there will be no excitations. ; These orbitals are optimized in the MCSCF.; The Cotton ordering of the irredicible representations is used.; The default is the zero vector. RESTRICTED\_UOCC = (integer array); Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of highest energ",MatchSource.DOCS,doc/sphinxman/source/attic/detcas.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst:1194,Deployability,configurat,configurational,1194,"rt of Psi4.; .. #; .. # Psi4 is free software; you can redistribute it and/or modify; .. # it under the terms of the GNU Lesser General Public License as published by; .. # the Free Software Foundation, version 3.; .. #; .. # Psi4 is distributed in the hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:casscf`:. Complete-Active-Space Self-Consistent-Field (CASSCF); ====================================================. Multi-configurational self-consistent-field (MCSCF) ; is a general method for obtaining qualitatively correct; wavefunctions for highly strained molecules, diradicals, or bond; breaking reactions. The most commonly used MCSCF procedure; is the complete-active-space self-consistent-field (CASSCF); approach [Roos:1980]_, which includes all possible determinants; (with the proper symmetry) that can be formed by distributing ; a set of active electrons among a set of active orbitals.; The detcasman module performs; CASSCF optimization of molecular orbitals via a two-step; procedure in which the CI wavefunction is computed using; detci, and the orbital rotation step is computed using; detcas. The detcas program is fairly simple; and uses an approximate orbital Hessian [Chaban:1997:88]_; and a Newton-Raphson update,; accelerated by Pulay's DIIS procedure [Pulay:1980]_.; We have also implemented a prototype version of the RASSCF method; [Malmqvist:1990:RASSCF]_, which is another kind of MCSCF which ; is typically less complete (and less expensive) than CASSCF.; However, orbital convergenc",MatchSource.DOCS,doc/sphinxman/source/attic/detcas.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst:2002,Deployability,update,update,2002,"2110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:casscf`:. Complete-Active-Space Self-Consistent-Field (CASSCF); ====================================================. Multi-configurational self-consistent-field (MCSCF) ; is a general method for obtaining qualitatively correct; wavefunctions for highly strained molecules, diradicals, or bond; breaking reactions. The most commonly used MCSCF procedure; is the complete-active-space self-consistent-field (CASSCF); approach [Roos:1980]_, which includes all possible determinants; (with the proper symmetry) that can be formed by distributing ; a set of active electrons among a set of active orbitals.; The detcasman module performs; CASSCF optimization of molecular orbitals via a two-step; procedure in which the CI wavefunction is computed using; detci, and the orbital rotation step is computed using; detcas. The detcas program is fairly simple; and uses an approximate orbital Hessian [Chaban:1997:88]_; and a Newton-Raphson update,; accelerated by Pulay's DIIS procedure [Pulay:1980]_.; We have also implemented a prototype version of the RASSCF method; [Malmqvist:1990:RASSCF]_, which is another kind of MCSCF which ; is typically less complete (and less expensive) than CASSCF.; However, orbital convergence for RASSCF can be difficult in our; current implementation. Inactive orbitals in the MCSCF may be specified by the ; |detci__restricted_docc| and |detci__restricted_uocc| keywords. These; orbitals will remain doubly-occupied or doubly-unoccupied, respectively,; in the MCSCF wavefunction. However, the form of these orbitals will; be optimized in the MCSCF procedure. It is also possible to ; literally freeze inactive orbitals in their original (SCF) form; using the |globals__frozen_docc| and |globals__frozen_uocc| keywords.; This is not normally what one wishes to do in an MCSCF computation; (*e.g.*, it complicates the computation of gradients),; but it can make the computations ",MatchSource.DOCS,doc/sphinxman/source/attic/detcas.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst:4380,Deployability,release,releases,4380," also at least to the transformation program; (and in the case of MCSCF, to other programs as well). Thus,; orbital subspace keywords such as |detci__ras1|, |detci__ras2|, |detci__ras3|, |detci__ras4|,; |globals__frozen_docc|, |globals__frozen_uocc|, |detci__active|, *etc.*, need to be; in the global ``set {...}`` block section of the input file so they may; be accessed by other modules. The ability to perform state-averaged ; [Docken:1972:4928]_ [Ruedenberg:1979:1069]_; CASSCF or RASSCF computations has been added. This is accomplished using the ; |detci__avg_states| keyword. See the :srcsample:`casscf-sp` and :srcsample:`casscf-sa-sp` examples in the ; samples directory and the example below. Basic Keywords; --------------. WFN = string; This may be ``casscf`` or ``rasscf``. REFERENCE = string; Any of the references allowed by detci should work (*i.e.*, not; {\tt uhf}), but there should be no reason not to use {\tt rhf}. DERTYPE = string; At present, only energies ({\tt none}) are supported; future; releases will implement gradients ({\tt first}). CONVERGENCE = integer; Convergence desired on the orbital gradient. Convergence is achieved when; the RMS of the error in the orbital gradient is less than 10**(-n). The ; default is 4 for energy calculations and 7 for gradients. Note that; this is a different convergence criterion than for the \PSIdetci\; program itself. These can be differentiated, if changed by the user,; by placing the {\tt CONVERGENCE} keywords within separate sections of; input, such as {\tt detcas: ( convergence = x )}. ENERGY\_CONVERGENCE = integer; Convergence desired on the total MCSCF energy. The default is 7.; \item[RESTRICTED\_DOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of lowest energy doubly occupied orbitals in each irreducible; representation from which there will be no excitations. ; These orbitals are optimized in the MCSCF.; The Cotton ordering of the irredicible repres",MatchSource.DOCS,doc/sphinxman/source/attic/detcas.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst:4618,Energy Efficiency,energy,energy,4618,"ve|, *etc.*, need to be; in the global ``set {...}`` block section of the input file so they may; be accessed by other modules. The ability to perform state-averaged ; [Docken:1972:4928]_ [Ruedenberg:1979:1069]_; CASSCF or RASSCF computations has been added. This is accomplished using the ; |detci__avg_states| keyword. See the :srcsample:`casscf-sp` and :srcsample:`casscf-sa-sp` examples in the ; samples directory and the example below. Basic Keywords; --------------. WFN = string; This may be ``casscf`` or ``rasscf``. REFERENCE = string; Any of the references allowed by detci should work (*i.e.*, not; {\tt uhf}), but there should be no reason not to use {\tt rhf}. DERTYPE = string; At present, only energies ({\tt none}) are supported; future; releases will implement gradients ({\tt first}). CONVERGENCE = integer; Convergence desired on the orbital gradient. Convergence is achieved when; the RMS of the error in the orbital gradient is less than 10**(-n). The ; default is 4 for energy calculations and 7 for gradients. Note that; this is a different convergence criterion than for the \PSIdetci\; program itself. These can be differentiated, if changed by the user,; by placing the {\tt CONVERGENCE} keywords within separate sections of; input, such as {\tt detcas: ( convergence = x )}. ENERGY\_CONVERGENCE = integer; Convergence desired on the total MCSCF energy. The default is 7.; \item[RESTRICTED\_DOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of lowest energy doubly occupied orbitals in each irreducible; representation from which there will be no excitations. ; These orbitals are optimized in the MCSCF.; The Cotton ordering of the irredicible representations is used.; The default is the zero vector. RESTRICTED\_UOCC = (integer array); Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of highest energy unoccupied orbitals in each irreducible; representation into which there will b",MatchSource.DOCS,doc/sphinxman/source/attic/detcas.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst:4998,Energy Efficiency,energy,energy,4998,"`casscf-sp` and :srcsample:`casscf-sa-sp` examples in the ; samples directory and the example below. Basic Keywords; --------------. WFN = string; This may be ``casscf`` or ``rasscf``. REFERENCE = string; Any of the references allowed by detci should work (*i.e.*, not; {\tt uhf}), but there should be no reason not to use {\tt rhf}. DERTYPE = string; At present, only energies ({\tt none}) are supported; future; releases will implement gradients ({\tt first}). CONVERGENCE = integer; Convergence desired on the orbital gradient. Convergence is achieved when; the RMS of the error in the orbital gradient is less than 10**(-n). The ; default is 4 for energy calculations and 7 for gradients. Note that; this is a different convergence criterion than for the \PSIdetci\; program itself. These can be differentiated, if changed by the user,; by placing the {\tt CONVERGENCE} keywords within separate sections of; input, such as {\tt detcas: ( convergence = x )}. ENERGY\_CONVERGENCE = integer; Convergence desired on the total MCSCF energy. The default is 7.; \item[RESTRICTED\_DOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of lowest energy doubly occupied orbitals in each irreducible; representation from which there will be no excitations. ; These orbitals are optimized in the MCSCF.; The Cotton ordering of the irredicible representations is used.; The default is the zero vector. RESTRICTED\_UOCC = (integer array); Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of highest energy unoccupied orbitals in each irreducible; representation into which there will be no excitations.; These orbitals are optimized in the MCSCF.; The default is the zero vector. FROZEN\_DOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of lowest energy doubly occupied orbitals in each irreducible; representation from which there will be no excitations. ; These",MatchSource.DOCS,doc/sphinxman/source/attic/detcas.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst:5164,Energy Efficiency,energy,energy,5164,"tci should work (*i.e.*, not; {\tt uhf}), but there should be no reason not to use {\tt rhf}. DERTYPE = string; At present, only energies ({\tt none}) are supported; future; releases will implement gradients ({\tt first}). CONVERGENCE = integer; Convergence desired on the orbital gradient. Convergence is achieved when; the RMS of the error in the orbital gradient is less than 10**(-n). The ; default is 4 for energy calculations and 7 for gradients. Note that; this is a different convergence criterion than for the \PSIdetci\; program itself. These can be differentiated, if changed by the user,; by placing the {\tt CONVERGENCE} keywords within separate sections of; input, such as {\tt detcas: ( convergence = x )}. ENERGY\_CONVERGENCE = integer; Convergence desired on the total MCSCF energy. The default is 7.; \item[RESTRICTED\_DOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of lowest energy doubly occupied orbitals in each irreducible; representation from which there will be no excitations. ; These orbitals are optimized in the MCSCF.; The Cotton ordering of the irredicible representations is used.; The default is the zero vector. RESTRICTED\_UOCC = (integer array); Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of highest energy unoccupied orbitals in each irreducible; representation into which there will be no excitations.; These orbitals are optimized in the MCSCF.; The default is the zero vector. FROZEN\_DOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of lowest energy doubly occupied orbitals in each irreducible; representation from which there will be no excitations. ; These orbitals are literally frozen and are not optimized in the MCSCF;; usually one wishes to use {\tt RESTRICTED\_DOCC} instead.; The current version of the program does not allow both; {\tt RESTRICTED\_DOCC} and {\tt FROZEN\_DOCC}.; Should be ",MatchSource.DOCS,doc/sphinxman/source/attic/detcas.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst:5540,Energy Efficiency,energy,energy,5540," than 10**(-n). The ; default is 4 for energy calculations and 7 for gradients. Note that; this is a different convergence criterion than for the \PSIdetci\; program itself. These can be differentiated, if changed by the user,; by placing the {\tt CONVERGENCE} keywords within separate sections of; input, such as {\tt detcas: ( convergence = x )}. ENERGY\_CONVERGENCE = integer; Convergence desired on the total MCSCF energy. The default is 7.; \item[RESTRICTED\_DOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of lowest energy doubly occupied orbitals in each irreducible; representation from which there will be no excitations. ; These orbitals are optimized in the MCSCF.; The Cotton ordering of the irredicible representations is used.; The default is the zero vector. RESTRICTED\_UOCC = (integer array); Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of highest energy unoccupied orbitals in each irreducible; representation into which there will be no excitations.; These orbitals are optimized in the MCSCF.; The default is the zero vector. FROZEN\_DOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of lowest energy doubly occupied orbitals in each irreducible; representation from which there will be no excitations. ; These orbitals are literally frozen and are not optimized in the MCSCF;; usually one wishes to use {\tt RESTRICTED\_DOCC} instead.; The current version of the program does not allow both; {\tt RESTRICTED\_DOCC} and {\tt FROZEN\_DOCC}.; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The Cotton ordering of the irredicible representations is used.; The default is the zero vector. FROZEN\_UOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of highest energy unoccupied orbitals in each irreducible; representation into which there will be no",MatchSource.DOCS,doc/sphinxman/source/attic/detcas.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst:5850,Energy Efficiency,energy,energy,5850, {\tt detcas: ( convergence = x )}. ENERGY\_CONVERGENCE = integer; Convergence desired on the total MCSCF energy. The default is 7.; \item[RESTRICTED\_DOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of lowest energy doubly occupied orbitals in each irreducible; representation from which there will be no excitations. ; These orbitals are optimized in the MCSCF.; The Cotton ordering of the irredicible representations is used.; The default is the zero vector. RESTRICTED\_UOCC = (integer array); Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of highest energy unoccupied orbitals in each irreducible; representation into which there will be no excitations.; These orbitals are optimized in the MCSCF.; The default is the zero vector. FROZEN\_DOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of lowest energy doubly occupied orbitals in each irreducible; representation from which there will be no excitations. ; These orbitals are literally frozen and are not optimized in the MCSCF;; usually one wishes to use {\tt RESTRICTED\_DOCC} instead.; The current version of the program does not allow both; {\tt RESTRICTED\_DOCC} and {\tt FROZEN\_DOCC}.; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The Cotton ordering of the irredicible representations is used.; The default is the zero vector. FROZEN\_UOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of highest energy unoccupied orbitals in each irreducible; representation into which there will be no excitations.; These orbitals are literally frozen and are not optimized in the MCSCF;; usually one wishes to use {\tt RESTRICTED\_UOCC} instead.; The current version of the program does not allow both; {\tt RESTRICTED\_UOCC} and {\tt FROZEN\_UOCC}.; Should be in {\tt psi:()} or {\tt default:()} sections of inpu,MatchSource.DOCS,doc/sphinxman/source/attic/detcas.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst:6490,Energy Efficiency,energy,energy,6490,"of highest energy unoccupied orbitals in each irreducible; representation into which there will be no excitations.; These orbitals are optimized in the MCSCF.; The default is the zero vector. FROZEN\_DOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of lowest energy doubly occupied orbitals in each irreducible; representation from which there will be no excitations. ; These orbitals are literally frozen and are not optimized in the MCSCF;; usually one wishes to use {\tt RESTRICTED\_DOCC} instead.; The current version of the program does not allow both; {\tt RESTRICTED\_DOCC} and {\tt FROZEN\_DOCC}.; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The Cotton ordering of the irredicible representations is used.; The default is the zero vector. FROZEN\_UOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of highest energy unoccupied orbitals in each irreducible; representation into which there will be no excitations.; These orbitals are literally frozen and are not optimized in the MCSCF;; usually one wishes to use {\tt RESTRICTED\_UOCC} instead.; The current version of the program does not allow both; {\tt RESTRICTED\_UOCC} and {\tt FROZEN\_UOCC}.; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The default is the zero vector. NCASITER = integer]\mbox{}\\; Maximum number of iterations to optimize the orbitals. This option; should be specified in the DEFAULT section of input, because; it needs to be visible to the control program PSI. Defaults to 20. AVERAGE\_STATES = (integer array)]\mbox{}\\; This gives a list of what states to average for the orbital ; optimization. States are numbered starting from 1. PRINT = integer]\mbox{}\\; This option determines the verbosity of the output. A value of 1 or; 2 specifies minimal printing, a value of 3 specifies verbose printing.; Values of 4 or 5 are used for debugging. Do not ",MatchSource.DOCS,doc/sphinxman/source/attic/detcas.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst:1194,Modifiability,config,configurational,1194,"rt of Psi4.; .. #; .. # Psi4 is free software; you can redistribute it and/or modify; .. # it under the terms of the GNU Lesser General Public License as published by; .. # the Free Software Foundation, version 3.; .. #; .. # Psi4 is distributed in the hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:casscf`:. Complete-Active-Space Self-Consistent-Field (CASSCF); ====================================================. Multi-configurational self-consistent-field (MCSCF) ; is a general method for obtaining qualitatively correct; wavefunctions for highly strained molecules, diradicals, or bond; breaking reactions. The most commonly used MCSCF procedure; is the complete-active-space self-consistent-field (CASSCF); approach [Roos:1980]_, which includes all possible determinants; (with the proper symmetry) that can be formed by distributing ; a set of active electrons among a set of active orbitals.; The detcasman module performs; CASSCF optimization of molecular orbitals via a two-step; procedure in which the CI wavefunction is computed using; detci, and the orbital rotation step is computed using; detcas. The detcas program is fairly simple; and uses an approximate orbital Hessian [Chaban:1997:88]_; and a Newton-Raphson update,; accelerated by Pulay's DIIS procedure [Pulay:1980]_.; We have also implemented a prototype version of the RASSCF method; [Malmqvist:1990:RASSCF]_, which is another kind of MCSCF which ; is typically less complete (and less expensive) than CASSCF.; However, orbital convergenc",MatchSource.DOCS,doc/sphinxman/source/attic/detcas.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst:1695,Performance,perform,performs,1695,"hould have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:casscf`:. Complete-Active-Space Self-Consistent-Field (CASSCF); ====================================================. Multi-configurational self-consistent-field (MCSCF) ; is a general method for obtaining qualitatively correct; wavefunctions for highly strained molecules, diradicals, or bond; breaking reactions. The most commonly used MCSCF procedure; is the complete-active-space self-consistent-field (CASSCF); approach [Roos:1980]_, which includes all possible determinants; (with the proper symmetry) that can be formed by distributing ; a set of active electrons among a set of active orbitals.; The detcasman module performs; CASSCF optimization of molecular orbitals via a two-step; procedure in which the CI wavefunction is computed using; detci, and the orbital rotation step is computed using; detcas. The detcas program is fairly simple; and uses an approximate orbital Hessian [Chaban:1997:88]_; and a Newton-Raphson update,; accelerated by Pulay's DIIS procedure [Pulay:1980]_.; We have also implemented a prototype version of the RASSCF method; [Malmqvist:1990:RASSCF]_, which is another kind of MCSCF which ; is typically less complete (and less expensive) than CASSCF.; However, orbital convergence for RASSCF can be difficult in our; current implementation. Inactive orbitals in the MCSCF may be specified by the ; |detci__restricted_docc| and |detci__restricted_uocc| keywords. These; orbitals will remain doubly-occupied or doubly-unoccupied, respectively,; in the MCSCF wavefunction. However, the form of these orbitals will; be optimized in the MCSCF procedure. It is also possible to ; literally freeze inactive orbitals in their original (SCF) form; using the |globals__frozen_docc|",MatchSource.DOCS,doc/sphinxman/source/attic/detcas.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst:1712,Performance,optimiz,optimization,1712,"hould have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:casscf`:. Complete-Active-Space Self-Consistent-Field (CASSCF); ====================================================. Multi-configurational self-consistent-field (MCSCF) ; is a general method for obtaining qualitatively correct; wavefunctions for highly strained molecules, diradicals, or bond; breaking reactions. The most commonly used MCSCF procedure; is the complete-active-space self-consistent-field (CASSCF); approach [Roos:1980]_, which includes all possible determinants; (with the proper symmetry) that can be formed by distributing ; a set of active electrons among a set of active orbitals.; The detcasman module performs; CASSCF optimization of molecular orbitals via a two-step; procedure in which the CI wavefunction is computed using; detci, and the orbital rotation step is computed using; detcas. The detcas program is fairly simple; and uses an approximate orbital Hessian [Chaban:1997:88]_; and a Newton-Raphson update,; accelerated by Pulay's DIIS procedure [Pulay:1980]_.; We have also implemented a prototype version of the RASSCF method; [Malmqvist:1990:RASSCF]_, which is another kind of MCSCF which ; is typically less complete (and less expensive) than CASSCF.; However, orbital convergence for RASSCF can be difficult in our; current implementation. Inactive orbitals in the MCSCF may be specified by the ; |detci__restricted_docc| and |detci__restricted_uocc| keywords. These; orbitals will remain doubly-occupied or doubly-unoccupied, respectively,; in the MCSCF wavefunction. However, the form of these orbitals will; be optimized in the MCSCF procedure. It is also possible to ; literally freeze inactive orbitals in their original (SCF) form; using the |globals__frozen_docc|",MatchSource.DOCS,doc/sphinxman/source/attic/detcas.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst:2622,Performance,optimiz,optimized,2622,"a set of active electrons among a set of active orbitals.; The detcasman module performs; CASSCF optimization of molecular orbitals via a two-step; procedure in which the CI wavefunction is computed using; detci, and the orbital rotation step is computed using; detcas. The detcas program is fairly simple; and uses an approximate orbital Hessian [Chaban:1997:88]_; and a Newton-Raphson update,; accelerated by Pulay's DIIS procedure [Pulay:1980]_.; We have also implemented a prototype version of the RASSCF method; [Malmqvist:1990:RASSCF]_, which is another kind of MCSCF which ; is typically less complete (and less expensive) than CASSCF.; However, orbital convergence for RASSCF can be difficult in our; current implementation. Inactive orbitals in the MCSCF may be specified by the ; |detci__restricted_docc| and |detci__restricted_uocc| keywords. These; orbitals will remain doubly-occupied or doubly-unoccupied, respectively,; in the MCSCF wavefunction. However, the form of these orbitals will; be optimized in the MCSCF procedure. It is also possible to ; literally freeze inactive orbitals in their original (SCF) form; using the |globals__frozen_docc| and |globals__frozen_uocc| keywords.; This is not normally what one wishes to do in an MCSCF computation; (*e.g.*, it complicates the computation of gradients),; but it can make the computations faster and is helpful in some; circumstances where unphysical mixing of inactive and active; occupied orbitals might occur. Presently, it is not possible; to mix the use of restricted and frozen orbitals in |PSIfour|. The division of the molecular orbitals into various subspaces such as RAS; spaces, or frozen vs active orbitals, etc, needs to be clear not only to; the detci program, but also at least to the transformation program; (and in the case of MCSCF, to other programs as well). Thus,; orbital subspace keywords such as |detci__ras1|, |detci__ras2|, |detci__ras3|, |detci__ras4|,; |globals__frozen_docc|, |globals__frozen_uocc|, |d",MatchSource.DOCS,doc/sphinxman/source/attic/detcas.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst:3769,Performance,perform,perform,3769,"his is not normally what one wishes to do in an MCSCF computation; (*e.g.*, it complicates the computation of gradients),; but it can make the computations faster and is helpful in some; circumstances where unphysical mixing of inactive and active; occupied orbitals might occur. Presently, it is not possible; to mix the use of restricted and frozen orbitals in |PSIfour|. The division of the molecular orbitals into various subspaces such as RAS; spaces, or frozen vs active orbitals, etc, needs to be clear not only to; the detci program, but also at least to the transformation program; (and in the case of MCSCF, to other programs as well). Thus,; orbital subspace keywords such as |detci__ras1|, |detci__ras2|, |detci__ras3|, |detci__ras4|,; |globals__frozen_docc|, |globals__frozen_uocc|, |detci__active|, *etc.*, need to be; in the global ``set {...}`` block section of the input file so they may; be accessed by other modules. The ability to perform state-averaged ; [Docken:1972:4928]_ [Ruedenberg:1979:1069]_; CASSCF or RASSCF computations has been added. This is accomplished using the ; |detci__avg_states| keyword. See the :srcsample:`casscf-sp` and :srcsample:`casscf-sa-sp` examples in the ; samples directory and the example below. Basic Keywords; --------------. WFN = string; This may be ``casscf`` or ``rasscf``. REFERENCE = string; Any of the references allowed by detci should work (*i.e.*, not; {\tt uhf}), but there should be no reason not to use {\tt rhf}. DERTYPE = string; At present, only energies ({\tt none}) are supported; future; releases will implement gradients ({\tt first}). CONVERGENCE = integer; Convergence desired on the orbital gradient. Convergence is achieved when; the RMS of the error in the orbital gradient is less than 10**(-n). The ; default is 4 for energy calculations and 7 for gradients. Note that; this is a different convergence criterion than for the \PSIdetci\; program itself. These can be differentiated, if changed by the user,; by placing t",MatchSource.DOCS,doc/sphinxman/source/attic/detcas.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst:5294,Performance,optimiz,optimized,5294,"rhf}. DERTYPE = string; At present, only energies ({\tt none}) are supported; future; releases will implement gradients ({\tt first}). CONVERGENCE = integer; Convergence desired on the orbital gradient. Convergence is achieved when; the RMS of the error in the orbital gradient is less than 10**(-n). The ; default is 4 for energy calculations and 7 for gradients. Note that; this is a different convergence criterion than for the \PSIdetci\; program itself. These can be differentiated, if changed by the user,; by placing the {\tt CONVERGENCE} keywords within separate sections of; input, such as {\tt detcas: ( convergence = x )}. ENERGY\_CONVERGENCE = integer; Convergence desired on the total MCSCF energy. The default is 7.; \item[RESTRICTED\_DOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of lowest energy doubly occupied orbitals in each irreducible; representation from which there will be no excitations. ; These orbitals are optimized in the MCSCF.; The Cotton ordering of the irredicible representations is used.; The default is the zero vector. RESTRICTED\_UOCC = (integer array); Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of highest energy unoccupied orbitals in each irreducible; representation into which there will be no excitations.; These orbitals are optimized in the MCSCF.; The default is the zero vector. FROZEN\_DOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of lowest energy doubly occupied orbitals in each irreducible; representation from which there will be no excitations. ; These orbitals are literally frozen and are not optimized in the MCSCF;; usually one wishes to use {\tt RESTRICTED\_DOCC} instead.; The current version of the program does not allow both; {\tt RESTRICTED\_DOCC} and {\tt FROZEN\_DOCC}.; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The Cotton ordering of the irred",MatchSource.DOCS,doc/sphinxman/source/attic/detcas.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst:5664,Performance,optimiz,optimized,5664,"hat; this is a different convergence criterion than for the \PSIdetci\; program itself. These can be differentiated, if changed by the user,; by placing the {\tt CONVERGENCE} keywords within separate sections of; input, such as {\tt detcas: ( convergence = x )}. ENERGY\_CONVERGENCE = integer; Convergence desired on the total MCSCF energy. The default is 7.; \item[RESTRICTED\_DOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of lowest energy doubly occupied orbitals in each irreducible; representation from which there will be no excitations. ; These orbitals are optimized in the MCSCF.; The Cotton ordering of the irredicible representations is used.; The default is the zero vector. RESTRICTED\_UOCC = (integer array); Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of highest energy unoccupied orbitals in each irreducible; representation into which there will be no excitations.; These orbitals are optimized in the MCSCF.; The default is the zero vector. FROZEN\_DOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of lowest energy doubly occupied orbitals in each irreducible; representation from which there will be no excitations. ; These orbitals are literally frozen and are not optimized in the MCSCF;; usually one wishes to use {\tt RESTRICTED\_DOCC} instead.; The current version of the program does not allow both; {\tt RESTRICTED\_DOCC} and {\tt FROZEN\_DOCC}.; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The Cotton ordering of the irredicible representations is used.; The default is the zero vector. FROZEN\_UOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of highest energy unoccupied orbitals in each irreducible; representation into which there will be no excitations.; These orbitals are literally frozen and are not optimized in the MCSCF",MatchSource.DOCS,doc/sphinxman/source/attic/detcas.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst:6009,Performance,optimiz,optimized,6009, \item[RESTRICTED\_DOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of lowest energy doubly occupied orbitals in each irreducible; representation from which there will be no excitations. ; These orbitals are optimized in the MCSCF.; The Cotton ordering of the irredicible representations is used.; The default is the zero vector. RESTRICTED\_UOCC = (integer array); Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of highest energy unoccupied orbitals in each irreducible; representation into which there will be no excitations.; These orbitals are optimized in the MCSCF.; The default is the zero vector. FROZEN\_DOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of lowest energy doubly occupied orbitals in each irreducible; representation from which there will be no excitations. ; These orbitals are literally frozen and are not optimized in the MCSCF;; usually one wishes to use {\tt RESTRICTED\_DOCC} instead.; The current version of the program does not allow both; {\tt RESTRICTED\_DOCC} and {\tt FROZEN\_DOCC}.; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The Cotton ordering of the irredicible representations is used.; The default is the zero vector. FROZEN\_UOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of highest energy unoccupied orbitals in each irreducible; representation into which there will be no excitations.; These orbitals are literally frozen and are not optimized in the MCSCF;; usually one wishes to use {\tt RESTRICTED\_UOCC} instead.; The current version of the program does not allow both; {\tt RESTRICTED\_UOCC} and {\tt FROZEN\_UOCC}.; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The default is the zero vector. NCASITER = integer]\mbox{}\\; Maximum number of iterations to optimize the orbitals. This option,MatchSource.DOCS,doc/sphinxman/source/attic/detcas.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst:6643,Performance,optimiz,optimized,6643," are optimized in the MCSCF.; The default is the zero vector. FROZEN\_DOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of lowest energy doubly occupied orbitals in each irreducible; representation from which there will be no excitations. ; These orbitals are literally frozen and are not optimized in the MCSCF;; usually one wishes to use {\tt RESTRICTED\_DOCC} instead.; The current version of the program does not allow both; {\tt RESTRICTED\_DOCC} and {\tt FROZEN\_DOCC}.; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The Cotton ordering of the irredicible representations is used.; The default is the zero vector. FROZEN\_UOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of highest energy unoccupied orbitals in each irreducible; representation into which there will be no excitations.; These orbitals are literally frozen and are not optimized in the MCSCF;; usually one wishes to use {\tt RESTRICTED\_UOCC} instead.; The current version of the program does not allow both; {\tt RESTRICTED\_UOCC} and {\tt FROZEN\_UOCC}.; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The default is the zero vector. NCASITER = integer]\mbox{}\\; Maximum number of iterations to optimize the orbitals. This option; should be specified in the DEFAULT section of input, because; it needs to be visible to the control program PSI. Defaults to 20. AVERAGE\_STATES = (integer array)]\mbox{}\\; This gives a list of what states to average for the orbital ; optimization. States are numbered starting from 1. PRINT = integer]\mbox{}\\; This option determines the verbosity of the output. A value of 1 or; 2 specifies minimal printing, a value of 3 specifies verbose printing.; Values of 4 or 5 are used for debugging. Do not use level 5 unless; the test case is very small (e.g. STO H\ :sub:`2`\ O CISD). Examples; --------. Example of a CASSCF single-po",MatchSource.DOCS,doc/sphinxman/source/attic/detcas.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst:6991,Performance,optimiz,optimize,6991,"itals are literally frozen and are not optimized in the MCSCF;; usually one wishes to use {\tt RESTRICTED\_DOCC} instead.; The current version of the program does not allow both; {\tt RESTRICTED\_DOCC} and {\tt FROZEN\_DOCC}.; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The Cotton ordering of the irredicible representations is used.; The default is the zero vector. FROZEN\_UOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of highest energy unoccupied orbitals in each irreducible; representation into which there will be no excitations.; These orbitals are literally frozen and are not optimized in the MCSCF;; usually one wishes to use {\tt RESTRICTED\_UOCC} instead.; The current version of the program does not allow both; {\tt RESTRICTED\_UOCC} and {\tt FROZEN\_UOCC}.; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The default is the zero vector. NCASITER = integer]\mbox{}\\; Maximum number of iterations to optimize the orbitals. This option; should be specified in the DEFAULT section of input, because; it needs to be visible to the control program PSI. Defaults to 20. AVERAGE\_STATES = (integer array)]\mbox{}\\; This gives a list of what states to average for the orbital ; optimization. States are numbered starting from 1. PRINT = integer]\mbox{}\\; This option determines the verbosity of the output. A value of 1 or; 2 specifies minimal printing, a value of 3 specifies verbose printing.; Values of 4 or 5 are used for debugging. Do not use level 5 unless; the test case is very small (e.g. STO H\ :sub:`2`\ O CISD). Examples; --------. Example of a CASSCF single-point calculation for H\ :sub:`2`\ O using; a valence active space 3a\ :sub:`1` 1b\ :sub:`1` 2b\ :sub:`2`. ::. % 6-31G** H2O Test CASSCF Energy Point; ; psi: (; label = ""6-31G** CASSCF H2O""; jobtype = sp; wfn = casscf; reference = rhf; restricted_docc = (1 0 0 0); active = (3 0 1 2); basis = ""6-31G**""; zmat = (; ",MatchSource.DOCS,doc/sphinxman/source/attic/detcas.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst:7263,Performance,optimiz,optimization,7263," optimized in the MCSCF;; usually one wishes to use {\tt RESTRICTED\_DOCC} instead.; The current version of the program does not allow both; {\tt RESTRICTED\_DOCC} and {\tt FROZEN\_DOCC}.; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The Cotton ordering of the irredicible representations is used.; The default is the zero vector. FROZEN\_UOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of highest energy unoccupied orbitals in each irreducible; representation into which there will be no excitations.; These orbitals are literally frozen and are not optimized in the MCSCF;; usually one wishes to use {\tt RESTRICTED\_UOCC} instead.; The current version of the program does not allow both; {\tt RESTRICTED\_UOCC} and {\tt FROZEN\_UOCC}.; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The default is the zero vector. NCASITER = integer]\mbox{}\\; Maximum number of iterations to optimize the orbitals. This option; should be specified in the DEFAULT section of input, because; it needs to be visible to the control program PSI. Defaults to 20. AVERAGE\_STATES = (integer array)]\mbox{}\\; This gives a list of what states to average for the orbital ; optimization. States are numbered starting from 1. PRINT = integer]\mbox{}\\; This option determines the verbosity of the output. A value of 1 or; 2 specifies minimal printing, a value of 3 specifies verbose printing.; Values of 4 or 5 are used for debugging. Do not use level 5 unless; the test case is very small (e.g. STO H\ :sub:`2`\ O CISD). Examples; --------. Example of a CASSCF single-point calculation for H\ :sub:`2`\ O using; a valence active space 3a\ :sub:`1` 1b\ :sub:`1` 2b\ :sub:`2`. ::. % 6-31G** H2O Test CASSCF Energy Point; ; psi: (; label = ""6-31G** CASSCF H2O""; jobtype = sp; wfn = casscf; reference = rhf; restricted_docc = (1 0 0 0); active = (3 0 1 2); basis = ""6-31G**""; zmat = (; o; h 1 1.00; h 1 1.00 2 103.1; ); ). ",MatchSource.DOCS,doc/sphinxman/source/attic/detcas.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst:3727,Security,access,accessed,3727,"s in their original (SCF) form; using the |globals__frozen_docc| and |globals__frozen_uocc| keywords.; This is not normally what one wishes to do in an MCSCF computation; (*e.g.*, it complicates the computation of gradients),; but it can make the computations faster and is helpful in some; circumstances where unphysical mixing of inactive and active; occupied orbitals might occur. Presently, it is not possible; to mix the use of restricted and frozen orbitals in |PSIfour|. The division of the molecular orbitals into various subspaces such as RAS; spaces, or frozen vs active orbitals, etc, needs to be clear not only to; the detci program, but also at least to the transformation program; (and in the case of MCSCF, to other programs as well). Thus,; orbital subspace keywords such as |detci__ras1|, |detci__ras2|, |detci__ras3|, |detci__ras4|,; |globals__frozen_docc|, |globals__frozen_uocc|, |detci__active|, *etc.*, need to be; in the global ``set {...}`` block section of the input file so they may; be accessed by other modules. The ability to perform state-averaged ; [Docken:1972:4928]_ [Ruedenberg:1979:1069]_; CASSCF or RASSCF computations has been added. This is accomplished using the ; |detci__avg_states| keyword. See the :srcsample:`casscf-sp` and :srcsample:`casscf-sa-sp` examples in the ; samples directory and the example below. Basic Keywords; --------------. WFN = string; This may be ``casscf`` or ``rasscf``. REFERENCE = string; Any of the references allowed by detci should work (*i.e.*, not; {\tt uhf}), but there should be no reason not to use {\tt rhf}. DERTYPE = string; At present, only energies ({\tt none}) are supported; future; releases will implement gradients ({\tt first}). CONVERGENCE = integer; Convergence desired on the orbital gradient. Convergence is achieved when; the RMS of the error in the orbital gradient is less than 10**(-n). The ; default is 4 for energy calculations and 7 for gradients. Note that; this is a different convergence criterion th",MatchSource.DOCS,doc/sphinxman/source/attic/detcas.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst:7554,Testability,test,test,7554," optimized in the MCSCF;; usually one wishes to use {\tt RESTRICTED\_DOCC} instead.; The current version of the program does not allow both; {\tt RESTRICTED\_DOCC} and {\tt FROZEN\_DOCC}.; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The Cotton ordering of the irredicible representations is used.; The default is the zero vector. FROZEN\_UOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of highest energy unoccupied orbitals in each irreducible; representation into which there will be no excitations.; These orbitals are literally frozen and are not optimized in the MCSCF;; usually one wishes to use {\tt RESTRICTED\_UOCC} instead.; The current version of the program does not allow both; {\tt RESTRICTED\_UOCC} and {\tt FROZEN\_UOCC}.; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The default is the zero vector. NCASITER = integer]\mbox{}\\; Maximum number of iterations to optimize the orbitals. This option; should be specified in the DEFAULT section of input, because; it needs to be visible to the control program PSI. Defaults to 20. AVERAGE\_STATES = (integer array)]\mbox{}\\; This gives a list of what states to average for the orbital ; optimization. States are numbered starting from 1. PRINT = integer]\mbox{}\\; This option determines the verbosity of the output. A value of 1 or; 2 specifies minimal printing, a value of 3 specifies verbose printing.; Values of 4 or 5 are used for debugging. Do not use level 5 unless; the test case is very small (e.g. STO H\ :sub:`2`\ O CISD). Examples; --------. Example of a CASSCF single-point calculation for H\ :sub:`2`\ O using; a valence active space 3a\ :sub:`1` 1b\ :sub:`1` 2b\ :sub:`2`. ::. % 6-31G** H2O Test CASSCF Energy Point; ; psi: (; label = ""6-31G** CASSCF H2O""; jobtype = sp; wfn = casscf; reference = rhf; restricted_docc = (1 0 0 0); active = (3 0 1 2); basis = ""6-31G**""; zmat = (; o; h 1 1.00; h 1 1.00 2 103.1; ); ). ",MatchSource.DOCS,doc/sphinxman/source/attic/detcas.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst:1914,Usability,simpl,simple,1914,"2110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:casscf`:. Complete-Active-Space Self-Consistent-Field (CASSCF); ====================================================. Multi-configurational self-consistent-field (MCSCF) ; is a general method for obtaining qualitatively correct; wavefunctions for highly strained molecules, diradicals, or bond; breaking reactions. The most commonly used MCSCF procedure; is the complete-active-space self-consistent-field (CASSCF); approach [Roos:1980]_, which includes all possible determinants; (with the proper symmetry) that can be formed by distributing ; a set of active electrons among a set of active orbitals.; The detcasman module performs; CASSCF optimization of molecular orbitals via a two-step; procedure in which the CI wavefunction is computed using; detci, and the orbital rotation step is computed using; detcas. The detcas program is fairly simple; and uses an approximate orbital Hessian [Chaban:1997:88]_; and a Newton-Raphson update,; accelerated by Pulay's DIIS procedure [Pulay:1980]_.; We have also implemented a prototype version of the RASSCF method; [Malmqvist:1990:RASSCF]_, which is another kind of MCSCF which ; is typically less complete (and less expensive) than CASSCF.; However, orbital convergence for RASSCF can be difficult in our; current implementation. Inactive orbitals in the MCSCF may be specified by the ; |detci__restricted_docc| and |detci__restricted_uocc| keywords. These; orbitals will remain doubly-occupied or doubly-unoccupied, respectively,; in the MCSCF wavefunction. However, the form of these orbitals will; be optimized in the MCSCF procedure. It is also possible to ; literally freeze inactive orbitals in their original (SCF) form; using the |globals__frozen_docc| and |globals__frozen_uocc| keywords.; This is not normally what one wishes to do in an MCSCF computation; (*e.g.*, it complicates the computation of gradients),; but it can make the computations ",MatchSource.DOCS,doc/sphinxman/source/attic/detcas.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst:3322,Usability,clear,clear,3322,"rent implementation. Inactive orbitals in the MCSCF may be specified by the ; |detci__restricted_docc| and |detci__restricted_uocc| keywords. These; orbitals will remain doubly-occupied or doubly-unoccupied, respectively,; in the MCSCF wavefunction. However, the form of these orbitals will; be optimized in the MCSCF procedure. It is also possible to ; literally freeze inactive orbitals in their original (SCF) form; using the |globals__frozen_docc| and |globals__frozen_uocc| keywords.; This is not normally what one wishes to do in an MCSCF computation; (*e.g.*, it complicates the computation of gradients),; but it can make the computations faster and is helpful in some; circumstances where unphysical mixing of inactive and active; occupied orbitals might occur. Presently, it is not possible; to mix the use of restricted and frozen orbitals in |PSIfour|. The division of the molecular orbitals into various subspaces such as RAS; spaces, or frozen vs active orbitals, etc, needs to be clear not only to; the detci program, but also at least to the transformation program; (and in the case of MCSCF, to other programs as well). Thus,; orbital subspace keywords such as |detci__ras1|, |detci__ras2|, |detci__ras3|, |detci__ras4|,; |globals__frozen_docc|, |globals__frozen_uocc|, |detci__active|, *etc.*, need to be; in the global ``set {...}`` block section of the input file so they may; be accessed by other modules. The ability to perform state-averaged ; [Docken:1972:4928]_ [Ruedenberg:1979:1069]_; CASSCF or RASSCF computations has been added. This is accomplished using the ; |detci__avg_states| keyword. See the :srcsample:`casscf-sp` and :srcsample:`casscf-sa-sp` examples in the ; samples directory and the example below. Basic Keywords; --------------. WFN = string; This may be ``casscf`` or ``rasscf``. REFERENCE = string; Any of the references allowed by detci should work (*i.e.*, not; {\tt uhf}), but there should be no reason not to use {\tt rhf}. DERTYPE = string; At presen",MatchSource.DOCS,doc/sphinxman/source/attic/detcas.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/history.rst:401,Availability,robust,robust,401,"%; % History of Psi; %; % Daniel Crawford, 24 January, 1996; %. The PSI suite of {\em ab initio} quantum chemistry programs is the result; of an ongoing attempt by a cadre of graduate students, postdoctoral; associates, and professors to produce code that is efficient but also; easy to extend to new theoretical methods. Significant effort has been; devoted to the development of libraries which are robust and easy to use.; Some of the earliest contributions to what is now referred to as ``PSI''; include a direct configuration interaction (CI) program (Robert Lucchese,; 1976, now at Texas A\&M), the well-known graphical unitary group CI program; (Bernie Brooks, 1977-78, now at N.I.H.), and the original integrals code; (Russ Pitzer, 1978, now at Ohio State). From 1978-1987, the package was; know as the {\tt BERKELEY} suite, and after the Schaefer group moved to the; Center for Computational Quantum Chemistry at the University of Georgia,; the package was renamed {\tt PSI}. Thanks primarily to the efforts of Curt; Janssen (Sandia Labs, Livermore) and Ed Seidl (LLNL), the package was; ported to UNIX systems, and substantially improved with new input formats; and a C-based I/O system. Beginning in 1999, an extensive effort was begun to develop \PSIthree\; --- a {\tt PSI} suite with a completely new face. As a result of this; effort, all of the legacy Fortran code was removed, and everything was; rewritten in C and C++, including new integral/derivative integral,; coupled cluster, and CI codes. In addition, new I/O libraries have; been added, as well as an improved checkpoint file structure and greater; automation of typical tasks such as geometry optimization and frequency; analysis. The package has the capability to determine wavefunctions,; energies, analytic gradients, and various molecular properties based on; a variety of theories, including spin-restricted, spin-unrestricted, and; restricted open-shell Hartree-Fock (RHF, UHF, and ROHF); configuration; interaction (CI",MatchSource.DOCS,doc/sphinxman/source/attic/history.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/history.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/history.rst:1585,Availability,checkpoint,checkpoint,1585,"-known graphical unitary group CI program; (Bernie Brooks, 1977-78, now at N.I.H.), and the original integrals code; (Russ Pitzer, 1978, now at Ohio State). From 1978-1987, the package was; know as the {\tt BERKELEY} suite, and after the Schaefer group moved to the; Center for Computational Quantum Chemistry at the University of Georgia,; the package was renamed {\tt PSI}. Thanks primarily to the efforts of Curt; Janssen (Sandia Labs, Livermore) and Ed Seidl (LLNL), the package was; ported to UNIX systems, and substantially improved with new input formats; and a C-based I/O system. Beginning in 1999, an extensive effort was begun to develop \PSIthree\; --- a {\tt PSI} suite with a completely new face. As a result of this; effort, all of the legacy Fortran code was removed, and everything was; rewritten in C and C++, including new integral/derivative integral,; coupled cluster, and CI codes. In addition, new I/O libraries have; been added, as well as an improved checkpoint file structure and greater; automation of typical tasks such as geometry optimization and frequency; analysis. The package has the capability to determine wavefunctions,; energies, analytic gradients, and various molecular properties based on; a variety of theories, including spin-restricted, spin-unrestricted, and; restricted open-shell Hartree-Fock (RHF, UHF, and ROHF); configuration; interaction (CI) (including a variety of multireference CI's and full; CI); coupled-cluster (CC) including CC with variationaly optimized; orbitals; second-order M{\o}ller-Plesset perturbation theory (MPPT); including explicitly correlated second-order M{\o}ller-Plesset energy; (MP2-R12); and complete-active-space self-consistent field (CASSCF); theory. By January 2008, all of the C code in \PSIthree\ was ; converted to C++ to enable a path toward more object-oriented design; and a single-excecutable framework that will facilitate code reuse and ; ease efforts at parallelization. At this same time, all of the legacy",MatchSource.DOCS,doc/sphinxman/source/attic/history.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/history.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/history.rst:517,Deployability,configurat,configuration,517,"%; % History of Psi; %; % Daniel Crawford, 24 January, 1996; %. The PSI suite of {\em ab initio} quantum chemistry programs is the result; of an ongoing attempt by a cadre of graduate students, postdoctoral; associates, and professors to produce code that is efficient but also; easy to extend to new theoretical methods. Significant effort has been; devoted to the development of libraries which are robust and easy to use.; Some of the earliest contributions to what is now referred to as ``PSI''; include a direct configuration interaction (CI) program (Robert Lucchese,; 1976, now at Texas A\&M), the well-known graphical unitary group CI program; (Bernie Brooks, 1977-78, now at N.I.H.), and the original integrals code; (Russ Pitzer, 1978, now at Ohio State). From 1978-1987, the package was; know as the {\tt BERKELEY} suite, and after the Schaefer group moved to the; Center for Computational Quantum Chemistry at the University of Georgia,; the package was renamed {\tt PSI}. Thanks primarily to the efforts of Curt; Janssen (Sandia Labs, Livermore) and Ed Seidl (LLNL), the package was; ported to UNIX systems, and substantially improved with new input formats; and a C-based I/O system. Beginning in 1999, an extensive effort was begun to develop \PSIthree\; --- a {\tt PSI} suite with a completely new face. As a result of this; effort, all of the legacy Fortran code was removed, and everything was; rewritten in C and C++, including new integral/derivative integral,; coupled cluster, and CI codes. In addition, new I/O libraries have; been added, as well as an improved checkpoint file structure and greater; automation of typical tasks such as geometry optimization and frequency; analysis. The package has the capability to determine wavefunctions,; energies, analytic gradients, and various molecular properties based on; a variety of theories, including spin-restricted, spin-unrestricted, and; restricted open-shell Hartree-Fock (RHF, UHF, and ROHF); configuration; interaction (CI",MatchSource.DOCS,doc/sphinxman/source/attic/history.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/history.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/history.rst:1971,Deployability,configurat,configuration,1971,"ntegrals code; (Russ Pitzer, 1978, now at Ohio State). From 1978-1987, the package was; know as the {\tt BERKELEY} suite, and after the Schaefer group moved to the; Center for Computational Quantum Chemistry at the University of Georgia,; the package was renamed {\tt PSI}. Thanks primarily to the efforts of Curt; Janssen (Sandia Labs, Livermore) and Ed Seidl (LLNL), the package was; ported to UNIX systems, and substantially improved with new input formats; and a C-based I/O system. Beginning in 1999, an extensive effort was begun to develop \PSIthree\; --- a {\tt PSI} suite with a completely new face. As a result of this; effort, all of the legacy Fortran code was removed, and everything was; rewritten in C and C++, including new integral/derivative integral,; coupled cluster, and CI codes. In addition, new I/O libraries have; been added, as well as an improved checkpoint file structure and greater; automation of typical tasks such as geometry optimization and frequency; analysis. The package has the capability to determine wavefunctions,; energies, analytic gradients, and various molecular properties based on; a variety of theories, including spin-restricted, spin-unrestricted, and; restricted open-shell Hartree-Fock (RHF, UHF, and ROHF); configuration; interaction (CI) (including a variety of multireference CI's and full; CI); coupled-cluster (CC) including CC with variationaly optimized; orbitals; second-order M{\o}ller-Plesset perturbation theory (MPPT); including explicitly correlated second-order M{\o}ller-Plesset energy; (MP2-R12); and complete-active-space self-consistent field (CASSCF); theory. By January 2008, all of the C code in \PSIthree\ was ; converted to C++ to enable a path toward more object-oriented design; and a single-excecutable framework that will facilitate code reuse and ; ease efforts at parallelization. At this same time, all of the legacy I/O; routines from {\tt PSI2} were removed, greatly streamlining the; \library{libciomr.a} library.; ",MatchSource.DOCS,doc/sphinxman/source/attic/history.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/history.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/history.rst:259,Energy Efficiency,efficient,efficient,259,"%; % History of Psi; %; % Daniel Crawford, 24 January, 1996; %. The PSI suite of {\em ab initio} quantum chemistry programs is the result; of an ongoing attempt by a cadre of graduate students, postdoctoral; associates, and professors to produce code that is efficient but also; easy to extend to new theoretical methods. Significant effort has been; devoted to the development of libraries which are robust and easy to use.; Some of the earliest contributions to what is now referred to as ``PSI''; include a direct configuration interaction (CI) program (Robert Lucchese,; 1976, now at Texas A\&M), the well-known graphical unitary group CI program; (Bernie Brooks, 1977-78, now at N.I.H.), and the original integrals code; (Russ Pitzer, 1978, now at Ohio State). From 1978-1987, the package was; know as the {\tt BERKELEY} suite, and after the Schaefer group moved to the; Center for Computational Quantum Chemistry at the University of Georgia,; the package was renamed {\tt PSI}. Thanks primarily to the efforts of Curt; Janssen (Sandia Labs, Livermore) and Ed Seidl (LLNL), the package was; ported to UNIX systems, and substantially improved with new input formats; and a C-based I/O system. Beginning in 1999, an extensive effort was begun to develop \PSIthree\; --- a {\tt PSI} suite with a completely new face. As a result of this; effort, all of the legacy Fortran code was removed, and everything was; rewritten in C and C++, including new integral/derivative integral,; coupled cluster, and CI codes. In addition, new I/O libraries have; been added, as well as an improved checkpoint file structure and greater; automation of typical tasks such as geometry optimization and frequency; analysis. The package has the capability to determine wavefunctions,; energies, analytic gradients, and various molecular properties based on; a variety of theories, including spin-restricted, spin-unrestricted, and; restricted open-shell Hartree-Fock (RHF, UHF, and ROHF); configuration; interaction (CI",MatchSource.DOCS,doc/sphinxman/source/attic/history.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/history.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/history.rst:2257,Energy Efficiency,energy,energy,2257,"ntegrals code; (Russ Pitzer, 1978, now at Ohio State). From 1978-1987, the package was; know as the {\tt BERKELEY} suite, and after the Schaefer group moved to the; Center for Computational Quantum Chemistry at the University of Georgia,; the package was renamed {\tt PSI}. Thanks primarily to the efforts of Curt; Janssen (Sandia Labs, Livermore) and Ed Seidl (LLNL), the package was; ported to UNIX systems, and substantially improved with new input formats; and a C-based I/O system. Beginning in 1999, an extensive effort was begun to develop \PSIthree\; --- a {\tt PSI} suite with a completely new face. As a result of this; effort, all of the legacy Fortran code was removed, and everything was; rewritten in C and C++, including new integral/derivative integral,; coupled cluster, and CI codes. In addition, new I/O libraries have; been added, as well as an improved checkpoint file structure and greater; automation of typical tasks such as geometry optimization and frequency; analysis. The package has the capability to determine wavefunctions,; energies, analytic gradients, and various molecular properties based on; a variety of theories, including spin-restricted, spin-unrestricted, and; restricted open-shell Hartree-Fock (RHF, UHF, and ROHF); configuration; interaction (CI) (including a variety of multireference CI's and full; CI); coupled-cluster (CC) including CC with variationaly optimized; orbitals; second-order M{\o}ller-Plesset perturbation theory (MPPT); including explicitly correlated second-order M{\o}ller-Plesset energy; (MP2-R12); and complete-active-space self-consistent field (CASSCF); theory. By January 2008, all of the C code in \PSIthree\ was ; converted to C++ to enable a path toward more object-oriented design; and a single-excecutable framework that will facilitate code reuse and ; ease efforts at parallelization. At this same time, all of the legacy I/O; routines from {\tt PSI2} were removed, greatly streamlining the; \library{libciomr.a} library.; ",MatchSource.DOCS,doc/sphinxman/source/attic/history.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/history.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/history.rst:2615,Integrability,rout,routines,2615,"ntegrals code; (Russ Pitzer, 1978, now at Ohio State). From 1978-1987, the package was; know as the {\tt BERKELEY} suite, and after the Schaefer group moved to the; Center for Computational Quantum Chemistry at the University of Georgia,; the package was renamed {\tt PSI}. Thanks primarily to the efforts of Curt; Janssen (Sandia Labs, Livermore) and Ed Seidl (LLNL), the package was; ported to UNIX systems, and substantially improved with new input formats; and a C-based I/O system. Beginning in 1999, an extensive effort was begun to develop \PSIthree\; --- a {\tt PSI} suite with a completely new face. As a result of this; effort, all of the legacy Fortran code was removed, and everything was; rewritten in C and C++, including new integral/derivative integral,; coupled cluster, and CI codes. In addition, new I/O libraries have; been added, as well as an improved checkpoint file structure and greater; automation of typical tasks such as geometry optimization and frequency; analysis. The package has the capability to determine wavefunctions,; energies, analytic gradients, and various molecular properties based on; a variety of theories, including spin-restricted, spin-unrestricted, and; restricted open-shell Hartree-Fock (RHF, UHF, and ROHF); configuration; interaction (CI) (including a variety of multireference CI's and full; CI); coupled-cluster (CC) including CC with variationaly optimized; orbitals; second-order M{\o}ller-Plesset perturbation theory (MPPT); including explicitly correlated second-order M{\o}ller-Plesset energy; (MP2-R12); and complete-active-space self-consistent field (CASSCF); theory. By January 2008, all of the C code in \PSIthree\ was ; converted to C++ to enable a path toward more object-oriented design; and a single-excecutable framework that will facilitate code reuse and ; ease efforts at parallelization. At this same time, all of the legacy I/O; routines from {\tt PSI2} were removed, greatly streamlining the; \library{libciomr.a} library.; ",MatchSource.DOCS,doc/sphinxman/source/attic/history.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/history.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/history.rst:287,Modifiability,extend,extend,287,"%; % History of Psi; %; % Daniel Crawford, 24 January, 1996; %. The PSI suite of {\em ab initio} quantum chemistry programs is the result; of an ongoing attempt by a cadre of graduate students, postdoctoral; associates, and professors to produce code that is efficient but also; easy to extend to new theoretical methods. Significant effort has been; devoted to the development of libraries which are robust and easy to use.; Some of the earliest contributions to what is now referred to as ``PSI''; include a direct configuration interaction (CI) program (Robert Lucchese,; 1976, now at Texas A\&M), the well-known graphical unitary group CI program; (Bernie Brooks, 1977-78, now at N.I.H.), and the original integrals code; (Russ Pitzer, 1978, now at Ohio State). From 1978-1987, the package was; know as the {\tt BERKELEY} suite, and after the Schaefer group moved to the; Center for Computational Quantum Chemistry at the University of Georgia,; the package was renamed {\tt PSI}. Thanks primarily to the efforts of Curt; Janssen (Sandia Labs, Livermore) and Ed Seidl (LLNL), the package was; ported to UNIX systems, and substantially improved with new input formats; and a C-based I/O system. Beginning in 1999, an extensive effort was begun to develop \PSIthree\; --- a {\tt PSI} suite with a completely new face. As a result of this; effort, all of the legacy Fortran code was removed, and everything was; rewritten in C and C++, including new integral/derivative integral,; coupled cluster, and CI codes. In addition, new I/O libraries have; been added, as well as an improved checkpoint file structure and greater; automation of typical tasks such as geometry optimization and frequency; analysis. The package has the capability to determine wavefunctions,; energies, analytic gradients, and various molecular properties based on; a variety of theories, including spin-restricted, spin-unrestricted, and; restricted open-shell Hartree-Fock (RHF, UHF, and ROHF); configuration; interaction (CI",MatchSource.DOCS,doc/sphinxman/source/attic/history.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/history.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/history.rst:517,Modifiability,config,configuration,517,"%; % History of Psi; %; % Daniel Crawford, 24 January, 1996; %. The PSI suite of {\em ab initio} quantum chemistry programs is the result; of an ongoing attempt by a cadre of graduate students, postdoctoral; associates, and professors to produce code that is efficient but also; easy to extend to new theoretical methods. Significant effort has been; devoted to the development of libraries which are robust and easy to use.; Some of the earliest contributions to what is now referred to as ``PSI''; include a direct configuration interaction (CI) program (Robert Lucchese,; 1976, now at Texas A\&M), the well-known graphical unitary group CI program; (Bernie Brooks, 1977-78, now at N.I.H.), and the original integrals code; (Russ Pitzer, 1978, now at Ohio State). From 1978-1987, the package was; know as the {\tt BERKELEY} suite, and after the Schaefer group moved to the; Center for Computational Quantum Chemistry at the University of Georgia,; the package was renamed {\tt PSI}. Thanks primarily to the efforts of Curt; Janssen (Sandia Labs, Livermore) and Ed Seidl (LLNL), the package was; ported to UNIX systems, and substantially improved with new input formats; and a C-based I/O system. Beginning in 1999, an extensive effort was begun to develop \PSIthree\; --- a {\tt PSI} suite with a completely new face. As a result of this; effort, all of the legacy Fortran code was removed, and everything was; rewritten in C and C++, including new integral/derivative integral,; coupled cluster, and CI codes. In addition, new I/O libraries have; been added, as well as an improved checkpoint file structure and greater; automation of typical tasks such as geometry optimization and frequency; analysis. The package has the capability to determine wavefunctions,; energies, analytic gradients, and various molecular properties based on; a variety of theories, including spin-restricted, spin-unrestricted, and; restricted open-shell Hartree-Fock (RHF, UHF, and ROHF); configuration; interaction (CI",MatchSource.DOCS,doc/sphinxman/source/attic/history.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/history.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/history.rst:1971,Modifiability,config,configuration,1971,"ntegrals code; (Russ Pitzer, 1978, now at Ohio State). From 1978-1987, the package was; know as the {\tt BERKELEY} suite, and after the Schaefer group moved to the; Center for Computational Quantum Chemistry at the University of Georgia,; the package was renamed {\tt PSI}. Thanks primarily to the efforts of Curt; Janssen (Sandia Labs, Livermore) and Ed Seidl (LLNL), the package was; ported to UNIX systems, and substantially improved with new input formats; and a C-based I/O system. Beginning in 1999, an extensive effort was begun to develop \PSIthree\; --- a {\tt PSI} suite with a completely new face. As a result of this; effort, all of the legacy Fortran code was removed, and everything was; rewritten in C and C++, including new integral/derivative integral,; coupled cluster, and CI codes. In addition, new I/O libraries have; been added, as well as an improved checkpoint file structure and greater; automation of typical tasks such as geometry optimization and frequency; analysis. The package has the capability to determine wavefunctions,; energies, analytic gradients, and various molecular properties based on; a variety of theories, including spin-restricted, spin-unrestricted, and; restricted open-shell Hartree-Fock (RHF, UHF, and ROHF); configuration; interaction (CI) (including a variety of multireference CI's and full; CI); coupled-cluster (CC) including CC with variationaly optimized; orbitals; second-order M{\o}ller-Plesset perturbation theory (MPPT); including explicitly correlated second-order M{\o}ller-Plesset energy; (MP2-R12); and complete-active-space self-consistent field (CASSCF); theory. By January 2008, all of the C code in \PSIthree\ was ; converted to C++ to enable a path toward more object-oriented design; and a single-excecutable framework that will facilitate code reuse and ; ease efforts at parallelization. At this same time, all of the legacy I/O; routines from {\tt PSI2} were removed, greatly streamlining the; \library{libciomr.a} library.; ",MatchSource.DOCS,doc/sphinxman/source/attic/history.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/history.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/history.rst:1669,Performance,optimiz,optimization,1669,"-known graphical unitary group CI program; (Bernie Brooks, 1977-78, now at N.I.H.), and the original integrals code; (Russ Pitzer, 1978, now at Ohio State). From 1978-1987, the package was; know as the {\tt BERKELEY} suite, and after the Schaefer group moved to the; Center for Computational Quantum Chemistry at the University of Georgia,; the package was renamed {\tt PSI}. Thanks primarily to the efforts of Curt; Janssen (Sandia Labs, Livermore) and Ed Seidl (LLNL), the package was; ported to UNIX systems, and substantially improved with new input formats; and a C-based I/O system. Beginning in 1999, an extensive effort was begun to develop \PSIthree\; --- a {\tt PSI} suite with a completely new face. As a result of this; effort, all of the legacy Fortran code was removed, and everything was; rewritten in C and C++, including new integral/derivative integral,; coupled cluster, and CI codes. In addition, new I/O libraries have; been added, as well as an improved checkpoint file structure and greater; automation of typical tasks such as geometry optimization and frequency; analysis. The package has the capability to determine wavefunctions,; energies, analytic gradients, and various molecular properties based on; a variety of theories, including spin-restricted, spin-unrestricted, and; restricted open-shell Hartree-Fock (RHF, UHF, and ROHF); configuration; interaction (CI) (including a variety of multireference CI's and full; CI); coupled-cluster (CC) including CC with variationaly optimized; orbitals; second-order M{\o}ller-Plesset perturbation theory (MPPT); including explicitly correlated second-order M{\o}ller-Plesset energy; (MP2-R12); and complete-active-space self-consistent field (CASSCF); theory. By January 2008, all of the C code in \PSIthree\ was ; converted to C++ to enable a path toward more object-oriented design; and a single-excecutable framework that will facilitate code reuse and ; ease efforts at parallelization. At this same time, all of the legacy",MatchSource.DOCS,doc/sphinxman/source/attic/history.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/history.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/history.rst:2114,Performance,optimiz,optimized,2114,"ntegrals code; (Russ Pitzer, 1978, now at Ohio State). From 1978-1987, the package was; know as the {\tt BERKELEY} suite, and after the Schaefer group moved to the; Center for Computational Quantum Chemistry at the University of Georgia,; the package was renamed {\tt PSI}. Thanks primarily to the efforts of Curt; Janssen (Sandia Labs, Livermore) and Ed Seidl (LLNL), the package was; ported to UNIX systems, and substantially improved with new input formats; and a C-based I/O system. Beginning in 1999, an extensive effort was begun to develop \PSIthree\; --- a {\tt PSI} suite with a completely new face. As a result of this; effort, all of the legacy Fortran code was removed, and everything was; rewritten in C and C++, including new integral/derivative integral,; coupled cluster, and CI codes. In addition, new I/O libraries have; been added, as well as an improved checkpoint file structure and greater; automation of typical tasks such as geometry optimization and frequency; analysis. The package has the capability to determine wavefunctions,; energies, analytic gradients, and various molecular properties based on; a variety of theories, including spin-restricted, spin-unrestricted, and; restricted open-shell Hartree-Fock (RHF, UHF, and ROHF); configuration; interaction (CI) (including a variety of multireference CI's and full; CI); coupled-cluster (CC) including CC with variationaly optimized; orbitals; second-order M{\o}ller-Plesset perturbation theory (MPPT); including explicitly correlated second-order M{\o}ller-Plesset energy; (MP2-R12); and complete-active-space self-consistent field (CASSCF); theory. By January 2008, all of the C code in \PSIthree\ was ; converted to C++ to enable a path toward more object-oriented design; and a single-excecutable framework that will facilitate code reuse and ; ease efforts at parallelization. At this same time, all of the legacy I/O; routines from {\tt PSI2} were removed, greatly streamlining the; \library{libciomr.a} library.; ",MatchSource.DOCS,doc/sphinxman/source/attic/history.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/history.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst:1686,Availability,avail,available,1686,"; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:mp2`:. Second-order |MollerPlesset| Theory: MP2 and MP2-R12 methods; ============================================================. Second-order |MollerPlesset| theory is one of the most basic; wavefunction approaches which includes electron correlation; directly.; Due to its simplicity, the MP2 method is often the best; level one can afford for a larger molecular system.; At the other end of the spectrum, the MP2-R12 method; of Kutzelnigg, Klopper, and co-workers is a promising; approach to computing MP2 energies in the complete; basis set limit for smaller systems. |PSIfour| is; one of the very few publicly available programs to; feature a robust implementation of the MP2-R12 method. |PSIfour| is capable of computing closed-shell; MP2 and MP2-R12/A energies using integral-direct techniques and a; multithreaded algorithm, which lends itself perfectly for execution ; on symmetric multiprocessor (SMP) machines. |PSIfour| is also; capable of computing RHF, UHF, and ROHF (using semicanonical orbitals); MP2 energies and one-particle density matrices, and RHF MP2 analytic ; gradients. Occupied and virtual orbitals can be frozen during the ; energy calculation, but not for the calculation of the ; one-particle density matrix or the analytic gradient. .. table:: Summary of MP2 and MP2-R12 capabilities in |PSIfour|. +-----------+-----------+---------------+--------------------------+----------+; | Reference | Method | Energy (conv) | Energy (integral-direct) | Gradient |; +===========+===========+===============+==========================+==========+; | RHF | MP2 | Y | Y | Y |; +-----------+-----------+------------",MatchSource.DOCS,doc/sphinxman/source/attic/mp2.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst:1719,Availability,robust,robust,1719,"; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:mp2`:. Second-order |MollerPlesset| Theory: MP2 and MP2-R12 methods; ============================================================. Second-order |MollerPlesset| theory is one of the most basic; wavefunction approaches which includes electron correlation; directly.; Due to its simplicity, the MP2 method is often the best; level one can afford for a larger molecular system.; At the other end of the spectrum, the MP2-R12 method; of Kutzelnigg, Klopper, and co-workers is a promising; approach to computing MP2 energies in the complete; basis set limit for smaller systems. |PSIfour| is; one of the very few publicly available programs to; feature a robust implementation of the MP2-R12 method. |PSIfour| is capable of computing closed-shell; MP2 and MP2-R12/A energies using integral-direct techniques and a; multithreaded algorithm, which lends itself perfectly for execution ; on symmetric multiprocessor (SMP) machines. |PSIfour| is also; capable of computing RHF, UHF, and ROHF (using semicanonical orbitals); MP2 energies and one-particle density matrices, and RHF MP2 analytic ; gradients. Occupied and virtual orbitals can be frozen during the ; energy calculation, but not for the calculation of the ; one-particle density matrix or the analytic gradient. .. table:: Summary of MP2 and MP2-R12 capabilities in |PSIfour|. +-----------+-----------+---------------+--------------------------+----------+; | Reference | Method | Energy (conv) | Energy (integral-direct) | Gradient |; +===========+===========+===============+==========================+==========+; | RHF | MP2 | Y | Y | Y |; +-----------+-----------+------------",MatchSource.DOCS,doc/sphinxman/source/attic/mp2.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst:5520,Availability,robust,robust,5520,"fault is false. \item[OPDM\_WRITE = boolean]\mbox{}\\; If {\tt true}, write the one-particle density matrix to disk. \item[OPDM\_PRINT = boolean]\mbox{}\\; If {\tt true}, print the one-particle density matrix to the output file. Using the MP2-R12 method; ------------------------. Although this manual is not a how-to on running; quantum chemistry applications, the MP2-R12 method is; a rather non-standard tool, hence a few comments on its; use are appropriate. * The version of the MP2-R12 method implemented in |PSIfour|; is a so-called single-basis MP2-R12 method; in standard approximation A. This means that a basis set; rather complete in Hartree--Fock (or one-particle) sense; is absolutely mandatory for meaningful computations with the MP2-R12; method. The user is strongly urged to read literature on; linear R12 methods before using |PSIfour| to compute MP2-R12; energies. * More robust, two-basis versions; of the MP2-R12 method, also known as the auxiliary basis; MP2-R12 method, have been implemented; in a publicly available Massively Parallel Quantum Chemistry (MPQC); package (see \url{http://aros.ca.sandia.gov/~cljanss/mpqc/}).; The two-basis version of the MP2-R12 method is a theoretically more; sound approach, and thus should be preferred to the single-basis method.; In some situations, however, it may make sense to use; the single-basis method. Larger Calculations; -------------------. Here are a few recommendations for carrying out extended integral-direct MP2 and; MP2-R12 calculations with |PSIfour|: . * While the integral-direct MP2 algorithm doesn't need any; significant disk storage,; the integral-direct algorithm for the MP2-R12 energy; stores the transformed integrals to disk, hence very large; computations will require a lot of disk space. In general; the storage requirement is :math:`16 o^2N^2` bytes, where :math:`o`; is the number of occupied orbitals, and :math:`N` is the size of the basis. * If there is not enough memory to perform the computation i",MatchSource.DOCS,doc/sphinxman/source/attic/mp2.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst:5659,Availability,avail,available,5659,"fault is false. \item[OPDM\_WRITE = boolean]\mbox{}\\; If {\tt true}, write the one-particle density matrix to disk. \item[OPDM\_PRINT = boolean]\mbox{}\\; If {\tt true}, print the one-particle density matrix to the output file. Using the MP2-R12 method; ------------------------. Although this manual is not a how-to on running; quantum chemistry applications, the MP2-R12 method is; a rather non-standard tool, hence a few comments on its; use are appropriate. * The version of the MP2-R12 method implemented in |PSIfour|; is a so-called single-basis MP2-R12 method; in standard approximation A. This means that a basis set; rather complete in Hartree--Fock (or one-particle) sense; is absolutely mandatory for meaningful computations with the MP2-R12; method. The user is strongly urged to read literature on; linear R12 methods before using |PSIfour| to compute MP2-R12; energies. * More robust, two-basis versions; of the MP2-R12 method, also known as the auxiliary basis; MP2-R12 method, have been implemented; in a publicly available Massively Parallel Quantum Chemistry (MPQC); package (see \url{http://aros.ca.sandia.gov/~cljanss/mpqc/}).; The two-basis version of the MP2-R12 method is a theoretically more; sound approach, and thus should be preferred to the single-basis method.; In some situations, however, it may make sense to use; the single-basis method. Larger Calculations; -------------------. Here are a few recommendations for carrying out extended integral-direct MP2 and; MP2-R12 calculations with |PSIfour|: . * While the integral-direct MP2 algorithm doesn't need any; significant disk storage,; the integral-direct algorithm for the MP2-R12 energy; stores the transformed integrals to disk, hence very large; computations will require a lot of disk space. In general; the storage requirement is :math:`16 o^2N^2` bytes, where :math:`o`; is the number of occupied orbitals, and :math:`N` is the size of the basis. * If there is not enough memory to perform the computation i",MatchSource.DOCS,doc/sphinxman/source/attic/mp2.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst:6839,Availability,avail,available,6839,"-R12 method is a theoretically more; sound approach, and thus should be preferred to the single-basis method.; In some situations, however, it may make sense to use; the single-basis method. Larger Calculations; -------------------. Here are a few recommendations for carrying out extended integral-direct MP2 and; MP2-R12 calculations with |PSIfour|: . * While the integral-direct MP2 algorithm doesn't need any; significant disk storage,; the integral-direct algorithm for the MP2-R12 energy; stores the transformed integrals to disk, hence very large; computations will require a lot of disk space. In general; the storage requirement is :math:`16 o^2N^2` bytes, where :math:`o`; is the number of occupied orbitals, and :math:`N` is the size of the basis. * If there is not enough memory to perform the computation in one pass,; the program will do multiple passes through the entire set of integrals,; hence your computation will run that many times longer.; In such case, find the machine with the most memory and processors available. * On SMP machines, set the {\tt NUM\_THREADS} to the number of; processors available for the job, or, if all processors are allocated for; your job, set {\tt NUM\_THREADS} to {\em twice} the number of processors; you have. Modern operating systems schedulers are usually very efficient; at handling multithreaded programs, so the overhead of thread context; switching is not significant, but using more threads may lead to better; load balancing, and lower execution times. For example, on a 32-processor; IBM eServer p690 we found that the optimal number of threads was 128.; For the optimal performance, do a few runs with different number of threads; and see which number works best.; Avoid excessively large; number of threads, as this descreases the net amount of memory available to; the computation and thus may increase the number of passes. . * Set the {\tt MEMORY} keyword to the 90% of the available physical; memory, at most. There is a small amoun",MatchSource.DOCS,doc/sphinxman/source/attic/mp2.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst:6925,Availability,avail,available,6925," sense to use; the single-basis method. Larger Calculations; -------------------. Here are a few recommendations for carrying out extended integral-direct MP2 and; MP2-R12 calculations with |PSIfour|: . * While the integral-direct MP2 algorithm doesn't need any; significant disk storage,; the integral-direct algorithm for the MP2-R12 energy; stores the transformed integrals to disk, hence very large; computations will require a lot of disk space. In general; the storage requirement is :math:`16 o^2N^2` bytes, where :math:`o`; is the number of occupied orbitals, and :math:`N` is the size of the basis. * If there is not enough memory to perform the computation in one pass,; the program will do multiple passes through the entire set of integrals,; hence your computation will run that many times longer.; In such case, find the machine with the most memory and processors available. * On SMP machines, set the {\tt NUM\_THREADS} to the number of; processors available for the job, or, if all processors are allocated for; your job, set {\tt NUM\_THREADS} to {\em twice} the number of processors; you have. Modern operating systems schedulers are usually very efficient; at handling multithreaded programs, so the overhead of thread context; switching is not significant, but using more threads may lead to better; load balancing, and lower execution times. For example, on a 32-processor; IBM eServer p690 we found that the optimal number of threads was 128.; For the optimal performance, do a few runs with different number of threads; and see which number works best.; Avoid excessively large; number of threads, as this descreases the net amount of memory available to; the computation and thus may increase the number of passes. . * Set the {\tt MEMORY} keyword to the 90% of the available physical; memory, at most. There is a small amount of overhead associated with the; integral-direct algorithms that is not accounted for by the internal memory; handling routines. * The implementation",MatchSource.DOCS,doc/sphinxman/source/attic/mp2.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst:7626,Availability,avail,available,7626,"h:`N` is the size of the basis. * If there is not enough memory to perform the computation in one pass,; the program will do multiple passes through the entire set of integrals,; hence your computation will run that many times longer.; In such case, find the machine with the most memory and processors available. * On SMP machines, set the {\tt NUM\_THREADS} to the number of; processors available for the job, or, if all processors are allocated for; your job, set {\tt NUM\_THREADS} to {\em twice} the number of processors; you have. Modern operating systems schedulers are usually very efficient; at handling multithreaded programs, so the overhead of thread context; switching is not significant, but using more threads may lead to better; load balancing, and lower execution times. For example, on a 32-processor; IBM eServer p690 we found that the optimal number of threads was 128.; For the optimal performance, do a few runs with different number of threads; and see which number works best.; Avoid excessively large; number of threads, as this descreases the net amount of memory available to; the computation and thus may increase the number of passes. . * Set the {\tt MEMORY} keyword to the 90% of the available physical; memory, at most. There is a small amount of overhead associated with the; integral-direct algorithms that is not accounted for by the internal memory; handling routines. * The implementation of the integral-direct MP2-R12 (and MP2) method; in |PSIfour| can run efficiently on SMP, or shared-memory, machines,; by utilizing multiple processors via multithreaded approach.; However, it cannot utilize distributed memory machines,; such as commodity (PC) clusters and massively parallel machines,; to their full potential, since one computation can only take advantage; of one node of such machine at a time.; In such environments, the aformentioned MPQC implementation of; the MP2-R12 method should be preferred; (see \url{http://aros.ca.sandia.gov/~cljanss/mpqc/}). ",MatchSource.DOCS,doc/sphinxman/source/attic/mp2.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst:7751,Availability,avail,available,7751,"h:`N` is the size of the basis. * If there is not enough memory to perform the computation in one pass,; the program will do multiple passes through the entire set of integrals,; hence your computation will run that many times longer.; In such case, find the machine with the most memory and processors available. * On SMP machines, set the {\tt NUM\_THREADS} to the number of; processors available for the job, or, if all processors are allocated for; your job, set {\tt NUM\_THREADS} to {\em twice} the number of processors; you have. Modern operating systems schedulers are usually very efficient; at handling multithreaded programs, so the overhead of thread context; switching is not significant, but using more threads may lead to better; load balancing, and lower execution times. For example, on a 32-processor; IBM eServer p690 we found that the optimal number of threads was 128.; For the optimal performance, do a few runs with different number of threads; and see which number works best.; Avoid excessively large; number of threads, as this descreases the net amount of memory available to; the computation and thus may increase the number of passes. . * Set the {\tt MEMORY} keyword to the 90% of the available physical; memory, at most. There is a small amount of overhead associated with the; integral-direct algorithms that is not accounted for by the internal memory; handling routines. * The implementation of the integral-direct MP2-R12 (and MP2) method; in |PSIfour| can run efficiently on SMP, or shared-memory, machines,; by utilizing multiple processors via multithreaded approach.; However, it cannot utilize distributed memory machines,; such as commodity (PC) clusters and massively parallel machines,; to their full potential, since one computation can only take advantage; of one node of such machine at a time.; In such environments, the aformentioned MPQC implementation of; the MP2-R12 method should be preferred; (see \url{http://aros.ca.sandia.gov/~cljanss/mpqc/}). ",MatchSource.DOCS,doc/sphinxman/source/attic/mp2.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst:2223,Energy Efficiency,energy,energy,2223,"e most basic; wavefunction approaches which includes electron correlation; directly.; Due to its simplicity, the MP2 method is often the best; level one can afford for a larger molecular system.; At the other end of the spectrum, the MP2-R12 method; of Kutzelnigg, Klopper, and co-workers is a promising; approach to computing MP2 energies in the complete; basis set limit for smaller systems. |PSIfour| is; one of the very few publicly available programs to; feature a robust implementation of the MP2-R12 method. |PSIfour| is capable of computing closed-shell; MP2 and MP2-R12/A energies using integral-direct techniques and a; multithreaded algorithm, which lends itself perfectly for execution ; on symmetric multiprocessor (SMP) machines. |PSIfour| is also; capable of computing RHF, UHF, and ROHF (using semicanonical orbitals); MP2 energies and one-particle density matrices, and RHF MP2 analytic ; gradients. Occupied and virtual orbitals can be frozen during the ; energy calculation, but not for the calculation of the ; one-particle density matrix or the analytic gradient. .. table:: Summary of MP2 and MP2-R12 capabilities in |PSIfour|. +-----------+-----------+---------------+--------------------------+----------+; | Reference | Method | Energy (conv) | Energy (integral-direct) | Gradient |; +===========+===========+===============+==========================+==========+; | RHF | MP2 | Y | Y | Y |; +-----------+-----------+---------------+--------------------------+----------+; | UHF | MP2 | Y | --- | --- |; +-----------+-----------+---------------+--------------------------+----------+; | ROHF | MP2 | Y | --- | --- |; +-----------+-----------+---------------+--------------------------+----------+; | RHF | MP2-R12/A | --- | Y | --- |; +-----------+-----------+---------------+--------------------------+----------+. Basic Keywords; --------------. To compute a ground-state MP2 or MP2-R12 energy at a fixed geometry,; the following keywords are common:. \item[WFN = string]\m",MatchSource.DOCS,doc/sphinxman/source/attic/mp2.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst:3163,Energy Efficiency,energy,energy,3163," and virtual orbitals can be frozen during the ; energy calculation, but not for the calculation of the ; one-particle density matrix or the analytic gradient. .. table:: Summary of MP2 and MP2-R12 capabilities in |PSIfour|. +-----------+-----------+---------------+--------------------------+----------+; | Reference | Method | Energy (conv) | Energy (integral-direct) | Gradient |; +===========+===========+===============+==========================+==========+; | RHF | MP2 | Y | Y | Y |; +-----------+-----------+---------------+--------------------------+----------+; | UHF | MP2 | Y | --- | --- |; +-----------+-----------+---------------+--------------------------+----------+; | ROHF | MP2 | Y | --- | --- |; +-----------+-----------+---------------+--------------------------+----------+; | RHF | MP2-R12/A | --- | Y | --- |; +-----------+-----------+---------------+--------------------------+----------+. Basic Keywords; --------------. To compute a ground-state MP2 or MP2-R12 energy at a fixed geometry,; the following keywords are common:. \item[WFN = string]\mbox{}\\; Acceptable values are {\tt mp2} for MP2, {\tt mp2r12} [for MP2-R12/A]; There is no default. . \item[REFERENCE = string]\mbox{}\\; The only acceptable value are {\tt rhf, uhf, and rohf}.; There is no default. \item[JOBTYPE = string]\mbox{}\\; Acceptable values are {\tt sp} and {\tt opt}. There is no default. \item[MEMORY = (real MB)]\mbox{}\\; Specified the amount of core memory to be used, in MB. Defaults to 256.; Other units (*e.g.*, KB or GB) are also allowed. .. comment include:: autodir_options_c/detci__reference.rst. \item[DIRECT = boolean]\mbox{}\\; Specifies whether to use the conventional ({\tt false}) or; integral-direct ({\tt true}) algorithm. Default is {\tt false}. \item[NUM\_THREADS = integer]\mbox{}\\; Specified the number of threads to be used in the integral-direct; computation (only valid if {\tt DIRECT} is set to {\tt true}).; Default is 1. \item[FREEZE\_CORE = boolean]\mbox{}\\; Speci",MatchSource.DOCS,doc/sphinxman/source/attic/mp2.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst:6296,Energy Efficiency,energy,energy,6296,"k (or one-particle) sense; is absolutely mandatory for meaningful computations with the MP2-R12; method. The user is strongly urged to read literature on; linear R12 methods before using |PSIfour| to compute MP2-R12; energies. * More robust, two-basis versions; of the MP2-R12 method, also known as the auxiliary basis; MP2-R12 method, have been implemented; in a publicly available Massively Parallel Quantum Chemistry (MPQC); package (see \url{http://aros.ca.sandia.gov/~cljanss/mpqc/}).; The two-basis version of the MP2-R12 method is a theoretically more; sound approach, and thus should be preferred to the single-basis method.; In some situations, however, it may make sense to use; the single-basis method. Larger Calculations; -------------------. Here are a few recommendations for carrying out extended integral-direct MP2 and; MP2-R12 calculations with |PSIfour|: . * While the integral-direct MP2 algorithm doesn't need any; significant disk storage,; the integral-direct algorithm for the MP2-R12 energy; stores the transformed integrals to disk, hence very large; computations will require a lot of disk space. In general; the storage requirement is :math:`16 o^2N^2` bytes, where :math:`o`; is the number of occupied orbitals, and :math:`N` is the size of the basis. * If there is not enough memory to perform the computation in one pass,; the program will do multiple passes through the entire set of integrals,; hence your computation will run that many times longer.; In such case, find the machine with the most memory and processors available. * On SMP machines, set the {\tt NUM\_THREADS} to the number of; processors available for the job, or, if all processors are allocated for; your job, set {\tt NUM\_THREADS} to {\em twice} the number of processors; you have. Modern operating systems schedulers are usually very efficient; at handling multithreaded programs, so the overhead of thread context; switching is not significant, but using more threads may lead to better; load ",MatchSource.DOCS,doc/sphinxman/source/attic/mp2.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst:6974,Energy Efficiency,allocate,allocated,6974," sense to use; the single-basis method. Larger Calculations; -------------------. Here are a few recommendations for carrying out extended integral-direct MP2 and; MP2-R12 calculations with |PSIfour|: . * While the integral-direct MP2 algorithm doesn't need any; significant disk storage,; the integral-direct algorithm for the MP2-R12 energy; stores the transformed integrals to disk, hence very large; computations will require a lot of disk space. In general; the storage requirement is :math:`16 o^2N^2` bytes, where :math:`o`; is the number of occupied orbitals, and :math:`N` is the size of the basis. * If there is not enough memory to perform the computation in one pass,; the program will do multiple passes through the entire set of integrals,; hence your computation will run that many times longer.; In such case, find the machine with the most memory and processors available. * On SMP machines, set the {\tt NUM\_THREADS} to the number of; processors available for the job, or, if all processors are allocated for; your job, set {\tt NUM\_THREADS} to {\em twice} the number of processors; you have. Modern operating systems schedulers are usually very efficient; at handling multithreaded programs, so the overhead of thread context; switching is not significant, but using more threads may lead to better; load balancing, and lower execution times. For example, on a 32-processor; IBM eServer p690 we found that the optimal number of threads was 128.; For the optimal performance, do a few runs with different number of threads; and see which number works best.; Avoid excessively large; number of threads, as this descreases the net amount of memory available to; the computation and thus may increase the number of passes. . * Set the {\tt MEMORY} keyword to the 90% of the available physical; memory, at most. There is a small amount of overhead associated with the; integral-direct algorithms that is not accounted for by the internal memory; handling routines. * The implementation",MatchSource.DOCS,doc/sphinxman/source/attic/mp2.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst:7098,Energy Efficiency,schedul,schedulers,7098,"gorithm doesn't need any; significant disk storage,; the integral-direct algorithm for the MP2-R12 energy; stores the transformed integrals to disk, hence very large; computations will require a lot of disk space. In general; the storage requirement is :math:`16 o^2N^2` bytes, where :math:`o`; is the number of occupied orbitals, and :math:`N` is the size of the basis. * If there is not enough memory to perform the computation in one pass,; the program will do multiple passes through the entire set of integrals,; hence your computation will run that many times longer.; In such case, find the machine with the most memory and processors available. * On SMP machines, set the {\tt NUM\_THREADS} to the number of; processors available for the job, or, if all processors are allocated for; your job, set {\tt NUM\_THREADS} to {\em twice} the number of processors; you have. Modern operating systems schedulers are usually very efficient; at handling multithreaded programs, so the overhead of thread context; switching is not significant, but using more threads may lead to better; load balancing, and lower execution times. For example, on a 32-processor; IBM eServer p690 we found that the optimal number of threads was 128.; For the optimal performance, do a few runs with different number of threads; and see which number works best.; Avoid excessively large; number of threads, as this descreases the net amount of memory available to; the computation and thus may increase the number of passes. . * Set the {\tt MEMORY} keyword to the 90% of the available physical; memory, at most. There is a small amount of overhead associated with the; integral-direct algorithms that is not accounted for by the internal memory; handling routines. * The implementation of the integral-direct MP2-R12 (and MP2) method; in |PSIfour| can run efficiently on SMP, or shared-memory, machines,; by utilizing multiple processors via multithreaded approach.; However, it cannot utilize distributed memory machines,",MatchSource.DOCS,doc/sphinxman/source/attic/mp2.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst:7126,Energy Efficiency,efficient,efficient,7126,"gorithm doesn't need any; significant disk storage,; the integral-direct algorithm for the MP2-R12 energy; stores the transformed integrals to disk, hence very large; computations will require a lot of disk space. In general; the storage requirement is :math:`16 o^2N^2` bytes, where :math:`o`; is the number of occupied orbitals, and :math:`N` is the size of the basis. * If there is not enough memory to perform the computation in one pass,; the program will do multiple passes through the entire set of integrals,; hence your computation will run that many times longer.; In such case, find the machine with the most memory and processors available. * On SMP machines, set the {\tt NUM\_THREADS} to the number of; processors available for the job, or, if all processors are allocated for; your job, set {\tt NUM\_THREADS} to {\em twice} the number of processors; you have. Modern operating systems schedulers are usually very efficient; at handling multithreaded programs, so the overhead of thread context; switching is not significant, but using more threads may lead to better; load balancing, and lower execution times. For example, on a 32-processor; IBM eServer p690 we found that the optimal number of threads was 128.; For the optimal performance, do a few runs with different number of threads; and see which number works best.; Avoid excessively large; number of threads, as this descreases the net amount of memory available to; the computation and thus may increase the number of passes. . * Set the {\tt MEMORY} keyword to the 90% of the available physical; memory, at most. There is a small amount of overhead associated with the; integral-direct algorithms that is not accounted for by the internal memory; handling routines. * The implementation of the integral-direct MP2-R12 (and MP2) method; in |PSIfour| can run efficiently on SMP, or shared-memory, machines,; by utilizing multiple processors via multithreaded approach.; However, it cannot utilize distributed memory machines,",MatchSource.DOCS,doc/sphinxman/source/attic/mp2.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst:8032,Energy Efficiency,efficient,efficiently,8032,"h:`N` is the size of the basis. * If there is not enough memory to perform the computation in one pass,; the program will do multiple passes through the entire set of integrals,; hence your computation will run that many times longer.; In such case, find the machine with the most memory and processors available. * On SMP machines, set the {\tt NUM\_THREADS} to the number of; processors available for the job, or, if all processors are allocated for; your job, set {\tt NUM\_THREADS} to {\em twice} the number of processors; you have. Modern operating systems schedulers are usually very efficient; at handling multithreaded programs, so the overhead of thread context; switching is not significant, but using more threads may lead to better; load balancing, and lower execution times. For example, on a 32-processor; IBM eServer p690 we found that the optimal number of threads was 128.; For the optimal performance, do a few runs with different number of threads; and see which number works best.; Avoid excessively large; number of threads, as this descreases the net amount of memory available to; the computation and thus may increase the number of passes. . * Set the {\tt MEMORY} keyword to the 90% of the available physical; memory, at most. There is a small amount of overhead associated with the; integral-direct algorithms that is not accounted for by the internal memory; handling routines. * The implementation of the integral-direct MP2-R12 (and MP2) method; in |PSIfour| can run efficiently on SMP, or shared-memory, machines,; by utilizing multiple processors via multithreaded approach.; However, it cannot utilize distributed memory machines,; such as commodity (PC) clusters and massively parallel machines,; to their full potential, since one computation can only take advantage; of one node of such machine at a time.; In such environments, the aformentioned MPQC implementation of; the MP2-R12 method should be preferred; (see \url{http://aros.ca.sandia.gov/~cljanss/mpqc/}). ",MatchSource.DOCS,doc/sphinxman/source/attic/mp2.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst:7931,Integrability,rout,routines,7931,"h:`N` is the size of the basis. * If there is not enough memory to perform the computation in one pass,; the program will do multiple passes through the entire set of integrals,; hence your computation will run that many times longer.; In such case, find the machine with the most memory and processors available. * On SMP machines, set the {\tt NUM\_THREADS} to the number of; processors available for the job, or, if all processors are allocated for; your job, set {\tt NUM\_THREADS} to {\em twice} the number of processors; you have. Modern operating systems schedulers are usually very efficient; at handling multithreaded programs, so the overhead of thread context; switching is not significant, but using more threads may lead to better; load balancing, and lower execution times. For example, on a 32-processor; IBM eServer p690 we found that the optimal number of threads was 128.; For the optimal performance, do a few runs with different number of threads; and see which number works best.; Avoid excessively large; number of threads, as this descreases the net amount of memory available to; the computation and thus may increase the number of passes. . * Set the {\tt MEMORY} keyword to the 90% of the available physical; memory, at most. There is a small amount of overhead associated with the; integral-direct algorithms that is not accounted for by the internal memory; handling routines. * The implementation of the integral-direct MP2-R12 (and MP2) method; in |PSIfour| can run efficiently on SMP, or shared-memory, machines,; by utilizing multiple processors via multithreaded approach.; However, it cannot utilize distributed memory machines,; such as commodity (PC) clusters and massively parallel machines,; to their full potential, since one computation can only take advantage; of one node of such machine at a time.; In such environments, the aformentioned MPQC implementation of; the MP2-R12 method should be preferred; (see \url{http://aros.ca.sandia.gov/~cljanss/mpqc/}). ",MatchSource.DOCS,doc/sphinxman/source/attic/mp2.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst:6090,Modifiability,extend,extended,6090,"ion of the MP2-R12 method implemented in |PSIfour|; is a so-called single-basis MP2-R12 method; in standard approximation A. This means that a basis set; rather complete in Hartree--Fock (or one-particle) sense; is absolutely mandatory for meaningful computations with the MP2-R12; method. The user is strongly urged to read literature on; linear R12 methods before using |PSIfour| to compute MP2-R12; energies. * More robust, two-basis versions; of the MP2-R12 method, also known as the auxiliary basis; MP2-R12 method, have been implemented; in a publicly available Massively Parallel Quantum Chemistry (MPQC); package (see \url{http://aros.ca.sandia.gov/~cljanss/mpqc/}).; The two-basis version of the MP2-R12 method is a theoretically more; sound approach, and thus should be preferred to the single-basis method.; In some situations, however, it may make sense to use; the single-basis method. Larger Calculations; -------------------. Here are a few recommendations for carrying out extended integral-direct MP2 and; MP2-R12 calculations with |PSIfour|: . * While the integral-direct MP2 algorithm doesn't need any; significant disk storage,; the integral-direct algorithm for the MP2-R12 energy; stores the transformed integrals to disk, hence very large; computations will require a lot of disk space. In general; the storage requirement is :math:`16 o^2N^2` bytes, where :math:`o`; is the number of occupied orbitals, and :math:`N` is the size of the basis. * If there is not enough memory to perform the computation in one pass,; the program will do multiple passes through the entire set of integrals,; hence your computation will run that many times longer.; In such case, find the machine with the most memory and processors available. * On SMP machines, set the {\tt NUM\_THREADS} to the number of; processors available for the job, or, if all processors are allocated for; your job, set {\tt NUM\_THREADS} to {\em twice} the number of processors; you have. Modern operating systems sche",MatchSource.DOCS,doc/sphinxman/source/attic/mp2.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst:6603,Performance,perform,perform,6603," Massively Parallel Quantum Chemistry (MPQC); package (see \url{http://aros.ca.sandia.gov/~cljanss/mpqc/}).; The two-basis version of the MP2-R12 method is a theoretically more; sound approach, and thus should be preferred to the single-basis method.; In some situations, however, it may make sense to use; the single-basis method. Larger Calculations; -------------------. Here are a few recommendations for carrying out extended integral-direct MP2 and; MP2-R12 calculations with |PSIfour|: . * While the integral-direct MP2 algorithm doesn't need any; significant disk storage,; the integral-direct algorithm for the MP2-R12 energy; stores the transformed integrals to disk, hence very large; computations will require a lot of disk space. In general; the storage requirement is :math:`16 o^2N^2` bytes, where :math:`o`; is the number of occupied orbitals, and :math:`N` is the size of the basis. * If there is not enough memory to perform the computation in one pass,; the program will do multiple passes through the entire set of integrals,; hence your computation will run that many times longer.; In such case, find the machine with the most memory and processors available. * On SMP machines, set the {\tt NUM\_THREADS} to the number of; processors available for the job, or, if all processors are allocated for; your job, set {\tt NUM\_THREADS} to {\em twice} the number of processors; you have. Modern operating systems schedulers are usually very efficient; at handling multithreaded programs, so the overhead of thread context; switching is not significant, but using more threads may lead to better; load balancing, and lower execution times. For example, on a 32-processor; IBM eServer p690 we found that the optimal number of threads was 128.; For the optimal performance, do a few runs with different number of threads; and see which number works best.; Avoid excessively large; number of threads, as this descreases the net amount of memory available to; the computation and thus may ",MatchSource.DOCS,doc/sphinxman/source/attic/mp2.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst:7281,Performance,load,load,7281,"gorithm doesn't need any; significant disk storage,; the integral-direct algorithm for the MP2-R12 energy; stores the transformed integrals to disk, hence very large; computations will require a lot of disk space. In general; the storage requirement is :math:`16 o^2N^2` bytes, where :math:`o`; is the number of occupied orbitals, and :math:`N` is the size of the basis. * If there is not enough memory to perform the computation in one pass,; the program will do multiple passes through the entire set of integrals,; hence your computation will run that many times longer.; In such case, find the machine with the most memory and processors available. * On SMP machines, set the {\tt NUM\_THREADS} to the number of; processors available for the job, or, if all processors are allocated for; your job, set {\tt NUM\_THREADS} to {\em twice} the number of processors; you have. Modern operating systems schedulers are usually very efficient; at handling multithreaded programs, so the overhead of thread context; switching is not significant, but using more threads may lead to better; load balancing, and lower execution times. For example, on a 32-processor; IBM eServer p690 we found that the optimal number of threads was 128.; For the optimal performance, do a few runs with different number of threads; and see which number works best.; Avoid excessively large; number of threads, as this descreases the net amount of memory available to; the computation and thus may increase the number of passes. . * Set the {\tt MEMORY} keyword to the 90% of the available physical; memory, at most. There is a small amount of overhead associated with the; integral-direct algorithms that is not accounted for by the internal memory; handling routines. * The implementation of the integral-direct MP2-R12 (and MP2) method; in |PSIfour| can run efficiently on SMP, or shared-memory, machines,; by utilizing multiple processors via multithreaded approach.; However, it cannot utilize distributed memory machines,",MatchSource.DOCS,doc/sphinxman/source/attic/mp2.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst:7443,Performance,perform,performance,7443," :math:`o`; is the number of occupied orbitals, and :math:`N` is the size of the basis. * If there is not enough memory to perform the computation in one pass,; the program will do multiple passes through the entire set of integrals,; hence your computation will run that many times longer.; In such case, find the machine with the most memory and processors available. * On SMP machines, set the {\tt NUM\_THREADS} to the number of; processors available for the job, or, if all processors are allocated for; your job, set {\tt NUM\_THREADS} to {\em twice} the number of processors; you have. Modern operating systems schedulers are usually very efficient; at handling multithreaded programs, so the overhead of thread context; switching is not significant, but using more threads may lead to better; load balancing, and lower execution times. For example, on a 32-processor; IBM eServer p690 we found that the optimal number of threads was 128.; For the optimal performance, do a few runs with different number of threads; and see which number works best.; Avoid excessively large; number of threads, as this descreases the net amount of memory available to; the computation and thus may increase the number of passes. . * Set the {\tt MEMORY} keyword to the 90% of the available physical; memory, at most. There is a small amount of overhead associated with the; integral-direct algorithms that is not accounted for by the internal memory; handling routines. * The implementation of the integral-direct MP2-R12 (and MP2) method; in |PSIfour| can run efficiently on SMP, or shared-memory, machines,; by utilizing multiple processors via multithreaded approach.; However, it cannot utilize distributed memory machines,; such as commodity (PC) clusters and massively parallel machines,; to their full potential, since one computation can only take advantage; of one node of such machine at a time.; In such environments, the aformentioned MPQC implementation of; the MP2-R12 method should be preferred;",MatchSource.DOCS,doc/sphinxman/source/attic/mp2.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst:1346,Usability,simpl,simplicity,1346," terms of the GNU Lesser General Public License as published by; .. # the Free Software Foundation, version 3.; .. #; .. # Psi4 is distributed in the hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:mp2`:. Second-order |MollerPlesset| Theory: MP2 and MP2-R12 methods; ============================================================. Second-order |MollerPlesset| theory is one of the most basic; wavefunction approaches which includes electron correlation; directly.; Due to its simplicity, the MP2 method is often the best; level one can afford for a larger molecular system.; At the other end of the spectrum, the MP2-R12 method; of Kutzelnigg, Klopper, and co-workers is a promising; approach to computing MP2 energies in the complete; basis set limit for smaller systems. |PSIfour| is; one of the very few publicly available programs to; feature a robust implementation of the MP2-R12 method. |PSIfour| is capable of computing closed-shell; MP2 and MP2-R12/A energies using integral-direct techniques and a; multithreaded algorithm, which lends itself perfectly for execution ; on symmetric multiprocessor (SMP) machines. |PSIfour| is also; capable of computing RHF, UHF, and ROHF (using semicanonical orbitals); MP2 energies and one-particle density matrices, and RHF MP2 analytic ; gradients. Occupied and virtual orbitals can be frozen during the ; energy calculation, but not for the calculation of the ; one-particle density matrix or the analytic gradient. .. table:: Summary of MP2 and MP2-R12 capabilities in ",MatchSource.DOCS,doc/sphinxman/source/attic/mp2.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:580,Availability,avail,available,580,"%; % PSI Programmer's Manual; %; % SVN Revision Control Section; % (formerly CVS); %; % TDC, February, 1996; % Modified by TDC, December 2002; % Updated from CVS to SVN, April 2007; %. The subversion control system (SVN) (\htmladdnormallink{{\tt; subversion.tigris.org}}{http://subversion.tigris.org/}) provides a; convenient means by which programmers may obtain the latest (or any; previous) version of the \PSIfour\ source from the main repository or; a branch version, add new code to the source tree or modify existing; \PSIfour\ modules, and then make changes and additions available to; other programmers by checking the modifications back into the main; repository. SVN also provides a ``safety net'' in that any erroneous; modifications to the code may be easily removed once they have been; identified. This section describes how to use SVN to access and; modify the \PSIfour\ source code. (Note that compilation and; installation instructions are given in a separate document.). The main repository for the \PSIfour\ Source code is currently; maintained by the Crawford group at Virginia Tech. To check out the; code, one must first obtain an SVN account by emailing; \htmladdnormallink{{\tt crawdad@vt.edu}}{mailto:crawdad@vt.edu}.; After you have a login-id and password, you are now ready to access; the repository via a secure, SSL-based WebDAV connection, but first; you must decide which version of the code you need. The \PSIfour\ SVN repository contains three top-level directories:; \begin{itemize}; \item {\tt trunk}: The main development area.; \item {\tt branches}: Release branches and private development; branches are stored here.; \item {\tt tags:} Snapshots of the repository corresponding to public; releases are stored here and should {\em never} be modified.; \end{itemize}; If you have a PSI4 SVN account, you can peruse these directories if; you like by pointing web browser to:. \noindent; {\tt https://sirius.chem.vt.edu/svn/psi4/}. \subsection{\PSIfour\ SVN Policie",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:2817,Availability,mainten,maintenance,2817,"an peruse these directories if; you like by pointing web browser to:. \noindent; {\tt https://sirius.chem.vt.edu/svn/psi4/}. \subsection{\PSIfour\ SVN Policies: Which Branch Should I Use?}; \label{section:branches}. The \PSIfour\ repository comprises a main trunk and several; release branches. The branch you should use depends on the sort of ; work you plan for the codes:; \begin{enumerate}; \item For any piece of code already in the most recent release, bug; fixes (defined as anything that doesn't add functionality ---; including documentation updates) should be made {\em only} on the; most recent stable release branch.; \item The main trunk is reserved for development of new functionality.; This allows us to keep new, possibly unstable code away from public; access until the code is ready.; \item Code that you do not want to put into next major release of; \PSIfour\ should be put onto a separate branch off the main; trunk. You will be solely responsible for maintenance of the new; branch, so you should read the SVN manual before attempting this.; \end{enumerate}. \noindent Fig.~\ref{Fig:svn} provides a schematic of the SVN revision-control; structure and branch labeling. Two release branches are shown, the current; stable branch, named {\tt psi-3-4}, and a planned future release, to be named; {\tt psi-3-5}. The tags on the branches indicate release shapshots, where; bugs have been fixed and the code has been or will be exported for public; distribution. The dotted lines in the figure indicate merge points: just; prior to each public release, changes made to the code on the stable release; branch will be merged into the main trunk. \begin{figure}[h]; \begin{center}; \epsfig{file=svn/svn.eps,height=6.5cm}; \end{center}; \caption{\PSIfour\ SVN branch structure with examples of branch- and; release-tag labelling.}; \label{Fig:svn}; \end{figure}. \noindent A frequently encountered problem is what to do about bug fixes; that are necessary for uninterrupted code developme",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:928,Deployability,install,installation,928,"%; % PSI Programmer's Manual; %; % SVN Revision Control Section; % (formerly CVS); %; % TDC, February, 1996; % Modified by TDC, December 2002; % Updated from CVS to SVN, April 2007; %. The subversion control system (SVN) (\htmladdnormallink{{\tt; subversion.tigris.org}}{http://subversion.tigris.org/}) provides a; convenient means by which programmers may obtain the latest (or any; previous) version of the \PSIfour\ source from the main repository or; a branch version, add new code to the source tree or modify existing; \PSIfour\ modules, and then make changes and additions available to; other programmers by checking the modifications back into the main; repository. SVN also provides a ``safety net'' in that any erroneous; modifications to the code may be easily removed once they have been; identified. This section describes how to use SVN to access and; modify the \PSIfour\ source code. (Note that compilation and; installation instructions are given in a separate document.). The main repository for the \PSIfour\ Source code is currently; maintained by the Crawford group at Virginia Tech. To check out the; code, one must first obtain an SVN account by emailing; \htmladdnormallink{{\tt crawdad@vt.edu}}{mailto:crawdad@vt.edu}.; After you have a login-id and password, you are now ready to access; the repository via a secure, SSL-based WebDAV connection, but first; you must decide which version of the code you need. The \PSIfour\ SVN repository contains three top-level directories:; \begin{itemize}; \item {\tt trunk}: The main development area.; \item {\tt branches}: Release branches and private development; branches are stored here.; \item {\tt tags:} Snapshots of the repository corresponding to public; releases are stored here and should {\em never} be modified.; \end{itemize}; If you have a PSI4 SVN account, you can peruse these directories if; you like by pointing web browser to:. \noindent; {\tt https://sirius.chem.vt.edu/svn/psi4/}. \subsection{\PSIfour\ SVN Policie",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:1729,Deployability,release,releases,1729,"rroneous; modifications to the code may be easily removed once they have been; identified. This section describes how to use SVN to access and; modify the \PSIfour\ source code. (Note that compilation and; installation instructions are given in a separate document.). The main repository for the \PSIfour\ Source code is currently; maintained by the Crawford group at Virginia Tech. To check out the; code, one must first obtain an SVN account by emailing; \htmladdnormallink{{\tt crawdad@vt.edu}}{mailto:crawdad@vt.edu}.; After you have a login-id and password, you are now ready to access; the repository via a secure, SSL-based WebDAV connection, but first; you must decide which version of the code you need. The \PSIfour\ SVN repository contains three top-level directories:; \begin{itemize}; \item {\tt trunk}: The main development area.; \item {\tt branches}: Release branches and private development; branches are stored here.; \item {\tt tags:} Snapshots of the repository corresponding to public; releases are stored here and should {\em never} be modified.; \end{itemize}; If you have a PSI4 SVN account, you can peruse these directories if; you like by pointing web browser to:. \noindent; {\tt https://sirius.chem.vt.edu/svn/psi4/}. \subsection{\PSIfour\ SVN Policies: Which Branch Should I Use?}; \label{section:branches}. The \PSIfour\ repository comprises a main trunk and several; release branches. The branch you should use depends on the sort of ; work you plan for the codes:; \begin{enumerate}; \item For any piece of code already in the most recent release, bug; fixes (defined as anything that doesn't add functionality ---; including documentation updates) should be made {\em only} on the; most recent stable release branch.; \item The main trunk is reserved for development of new functionality.; This allows us to keep new, possibly unstable code away from public; access until the code is ready.; \item Code that you do not want to put into next major release of; \PSIfour\",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:2120,Deployability,release,release,2120,"a Tech. To check out the; code, one must first obtain an SVN account by emailing; \htmladdnormallink{{\tt crawdad@vt.edu}}{mailto:crawdad@vt.edu}.; After you have a login-id and password, you are now ready to access; the repository via a secure, SSL-based WebDAV connection, but first; you must decide which version of the code you need. The \PSIfour\ SVN repository contains three top-level directories:; \begin{itemize}; \item {\tt trunk}: The main development area.; \item {\tt branches}: Release branches and private development; branches are stored here.; \item {\tt tags:} Snapshots of the repository corresponding to public; releases are stored here and should {\em never} be modified.; \end{itemize}; If you have a PSI4 SVN account, you can peruse these directories if; you like by pointing web browser to:. \noindent; {\tt https://sirius.chem.vt.edu/svn/psi4/}. \subsection{\PSIfour\ SVN Policies: Which Branch Should I Use?}; \label{section:branches}. The \PSIfour\ repository comprises a main trunk and several; release branches. The branch you should use depends on the sort of ; work you plan for the codes:; \begin{enumerate}; \item For any piece of code already in the most recent release, bug; fixes (defined as anything that doesn't add functionality ---; including documentation updates) should be made {\em only} on the; most recent stable release branch.; \item The main trunk is reserved for development of new functionality.; This allows us to keep new, possibly unstable code away from public; access until the code is ready.; \item Code that you do not want to put into next major release of; \PSIfour\ should be put onto a separate branch off the main; trunk. You will be solely responsible for maintenance of the new; branch, so you should read the SVN manual before attempting this.; \end{enumerate}. \noindent Fig.~\ref{Fig:svn} provides a schematic of the SVN revision-control; structure and branch labeling. Two release branches are shown, the current; stable branch, nam",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:2293,Deployability,release,release,2293,"o access; the repository via a secure, SSL-based WebDAV connection, but first; you must decide which version of the code you need. The \PSIfour\ SVN repository contains three top-level directories:; \begin{itemize}; \item {\tt trunk}: The main development area.; \item {\tt branches}: Release branches and private development; branches are stored here.; \item {\tt tags:} Snapshots of the repository corresponding to public; releases are stored here and should {\em never} be modified.; \end{itemize}; If you have a PSI4 SVN account, you can peruse these directories if; you like by pointing web browser to:. \noindent; {\tt https://sirius.chem.vt.edu/svn/psi4/}. \subsection{\PSIfour\ SVN Policies: Which Branch Should I Use?}; \label{section:branches}. The \PSIfour\ repository comprises a main trunk and several; release branches. The branch you should use depends on the sort of ; work you plan for the codes:; \begin{enumerate}; \item For any piece of code already in the most recent release, bug; fixes (defined as anything that doesn't add functionality ---; including documentation updates) should be made {\em only} on the; most recent stable release branch.; \item The main trunk is reserved for development of new functionality.; This allows us to keep new, possibly unstable code away from public; access until the code is ready.; \item Code that you do not want to put into next major release of; \PSIfour\ should be put onto a separate branch off the main; trunk. You will be solely responsible for maintenance of the new; branch, so you should read the SVN manual before attempting this.; \end{enumerate}. \noindent Fig.~\ref{Fig:svn} provides a schematic of the SVN revision-control; structure and branch labeling. Two release branches are shown, the current; stable branch, named {\tt psi-3-4}, and a planned future release, to be named; {\tt psi-3-5}. The tags on the branches indicate release shapshots, where; bugs have been fixed and the code has been or will be exported for pub",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:2394,Deployability,update,updates,2394,"o access; the repository via a secure, SSL-based WebDAV connection, but first; you must decide which version of the code you need. The \PSIfour\ SVN repository contains three top-level directories:; \begin{itemize}; \item {\tt trunk}: The main development area.; \item {\tt branches}: Release branches and private development; branches are stored here.; \item {\tt tags:} Snapshots of the repository corresponding to public; releases are stored here and should {\em never} be modified.; \end{itemize}; If you have a PSI4 SVN account, you can peruse these directories if; you like by pointing web browser to:. \noindent; {\tt https://sirius.chem.vt.edu/svn/psi4/}. \subsection{\PSIfour\ SVN Policies: Which Branch Should I Use?}; \label{section:branches}. The \PSIfour\ repository comprises a main trunk and several; release branches. The branch you should use depends on the sort of ; work you plan for the codes:; \begin{enumerate}; \item For any piece of code already in the most recent release, bug; fixes (defined as anything that doesn't add functionality ---; including documentation updates) should be made {\em only} on the; most recent stable release branch.; \item The main trunk is reserved for development of new functionality.; This allows us to keep new, possibly unstable code away from public; access until the code is ready.; \item Code that you do not want to put into next major release of; \PSIfour\ should be put onto a separate branch off the main; trunk. You will be solely responsible for maintenance of the new; branch, so you should read the SVN manual before attempting this.; \end{enumerate}. \noindent Fig.~\ref{Fig:svn} provides a schematic of the SVN revision-control; structure and branch labeling. Two release branches are shown, the current; stable branch, named {\tt psi-3-4}, and a planned future release, to be named; {\tt psi-3-5}. The tags on the branches indicate release shapshots, where; bugs have been fixed and the code has been or will be exported for pub",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:2456,Deployability,release,release,2456,"o access; the repository via a secure, SSL-based WebDAV connection, but first; you must decide which version of the code you need. The \PSIfour\ SVN repository contains three top-level directories:; \begin{itemize}; \item {\tt trunk}: The main development area.; \item {\tt branches}: Release branches and private development; branches are stored here.; \item {\tt tags:} Snapshots of the repository corresponding to public; releases are stored here and should {\em never} be modified.; \end{itemize}; If you have a PSI4 SVN account, you can peruse these directories if; you like by pointing web browser to:. \noindent; {\tt https://sirius.chem.vt.edu/svn/psi4/}. \subsection{\PSIfour\ SVN Policies: Which Branch Should I Use?}; \label{section:branches}. The \PSIfour\ repository comprises a main trunk and several; release branches. The branch you should use depends on the sort of ; work you plan for the codes:; \begin{enumerate}; \item For any piece of code already in the most recent release, bug; fixes (defined as anything that doesn't add functionality ---; including documentation updates) should be made {\em only} on the; most recent stable release branch.; \item The main trunk is reserved for development of new functionality.; This allows us to keep new, possibly unstable code away from public; access until the code is ready.; \item Code that you do not want to put into next major release of; \PSIfour\ should be put onto a separate branch off the main; trunk. You will be solely responsible for maintenance of the new; branch, so you should read the SVN manual before attempting this.; \end{enumerate}. \noindent Fig.~\ref{Fig:svn} provides a schematic of the SVN revision-control; structure and branch labeling. Two release branches are shown, the current; stable branch, named {\tt psi-3-4}, and a planned future release, to be named; {\tt psi-3-5}. The tags on the branches indicate release shapshots, where; bugs have been fixed and the code has been or will be exported for pub",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:2702,Deployability,release,release,2702,"ding to public; releases are stored here and should {\em never} be modified.; \end{itemize}; If you have a PSI4 SVN account, you can peruse these directories if; you like by pointing web browser to:. \noindent; {\tt https://sirius.chem.vt.edu/svn/psi4/}. \subsection{\PSIfour\ SVN Policies: Which Branch Should I Use?}; \label{section:branches}. The \PSIfour\ repository comprises a main trunk and several; release branches. The branch you should use depends on the sort of ; work you plan for the codes:; \begin{enumerate}; \item For any piece of code already in the most recent release, bug; fixes (defined as anything that doesn't add functionality ---; including documentation updates) should be made {\em only} on the; most recent stable release branch.; \item The main trunk is reserved for development of new functionality.; This allows us to keep new, possibly unstable code away from public; access until the code is ready.; \item Code that you do not want to put into next major release of; \PSIfour\ should be put onto a separate branch off the main; trunk. You will be solely responsible for maintenance of the new; branch, so you should read the SVN manual before attempting this.; \end{enumerate}. \noindent Fig.~\ref{Fig:svn} provides a schematic of the SVN revision-control; structure and branch labeling. Two release branches are shown, the current; stable branch, named {\tt psi-3-4}, and a planned future release, to be named; {\tt psi-3-5}. The tags on the branches indicate release shapshots, where; bugs have been fixed and the code has been or will be exported for public; distribution. The dotted lines in the figure indicate merge points: just; prior to each public release, changes made to the code on the stable release; branch will be merged into the main trunk. \begin{figure}[h]; \begin{center}; \epsfig{file=svn/svn.eps,height=6.5cm}; \end{center}; \caption{\PSIfour\ SVN branch structure with examples of branch- and; release-tag labelling.}; \label{Fig:svn}; \end{fig",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:3039,Deployability,release,release,3039,"unk and several; release branches. The branch you should use depends on the sort of ; work you plan for the codes:; \begin{enumerate}; \item For any piece of code already in the most recent release, bug; fixes (defined as anything that doesn't add functionality ---; including documentation updates) should be made {\em only} on the; most recent stable release branch.; \item The main trunk is reserved for development of new functionality.; This allows us to keep new, possibly unstable code away from public; access until the code is ready.; \item Code that you do not want to put into next major release of; \PSIfour\ should be put onto a separate branch off the main; trunk. You will be solely responsible for maintenance of the new; branch, so you should read the SVN manual before attempting this.; \end{enumerate}. \noindent Fig.~\ref{Fig:svn} provides a schematic of the SVN revision-control; structure and branch labeling. Two release branches are shown, the current; stable branch, named {\tt psi-3-4}, and a planned future release, to be named; {\tt psi-3-5}. The tags on the branches indicate release shapshots, where; bugs have been fixed and the code has been or will be exported for public; distribution. The dotted lines in the figure indicate merge points: just; prior to each public release, changes made to the code on the stable release; branch will be merged into the main trunk. \begin{figure}[h]; \begin{center}; \epsfig{file=svn/svn.eps,height=6.5cm}; \end{center}; \caption{\PSIfour\ SVN branch structure with examples of branch- and; release-tag labelling.}; \label{Fig:svn}; \end{figure}. \noindent A frequently encountered problem is what to do about bug fixes; that are necessary for uninterrupted code development of the code on the; main trunk. As Rule 1 of the above policy states, all bug fixes of the code; already in the recent stable release must go on the corresponding branch,; not on the main trunk. The next step depends on the severity of the bug:; \begin{enum",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:3137,Deployability,release,release,3137,"unk and several; release branches. The branch you should use depends on the sort of ; work you plan for the codes:; \begin{enumerate}; \item For any piece of code already in the most recent release, bug; fixes (defined as anything that doesn't add functionality ---; including documentation updates) should be made {\em only} on the; most recent stable release branch.; \item The main trunk is reserved for development of new functionality.; This allows us to keep new, possibly unstable code away from public; access until the code is ready.; \item Code that you do not want to put into next major release of; \PSIfour\ should be put onto a separate branch off the main; trunk. You will be solely responsible for maintenance of the new; branch, so you should read the SVN manual before attempting this.; \end{enumerate}. \noindent Fig.~\ref{Fig:svn} provides a schematic of the SVN revision-control; structure and branch labeling. Two release branches are shown, the current; stable branch, named {\tt psi-3-4}, and a planned future release, to be named; {\tt psi-3-5}. The tags on the branches indicate release shapshots, where; bugs have been fixed and the code has been or will be exported for public; distribution. The dotted lines in the figure indicate merge points: just; prior to each public release, changes made to the code on the stable release; branch will be merged into the main trunk. \begin{figure}[h]; \begin{center}; \epsfig{file=svn/svn.eps,height=6.5cm}; \end{center}; \caption{\PSIfour\ SVN branch structure with examples of branch- and; release-tag labelling.}; \label{Fig:svn}; \end{figure}. \noindent A frequently encountered problem is what to do about bug fixes; that are necessary for uninterrupted code development of the code on the; main trunk. As Rule 1 of the above policy states, all bug fixes of the code; already in the recent stable release must go on the corresponding branch,; not on the main trunk. The next step depends on the severity of the bug:; \begin{enum",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:3208,Deployability,release,release,3208," any piece of code already in the most recent release, bug; fixes (defined as anything that doesn't add functionality ---; including documentation updates) should be made {\em only} on the; most recent stable release branch.; \item The main trunk is reserved for development of new functionality.; This allows us to keep new, possibly unstable code away from public; access until the code is ready.; \item Code that you do not want to put into next major release of; \PSIfour\ should be put onto a separate branch off the main; trunk. You will be solely responsible for maintenance of the new; branch, so you should read the SVN manual before attempting this.; \end{enumerate}. \noindent Fig.~\ref{Fig:svn} provides a schematic of the SVN revision-control; structure and branch labeling. Two release branches are shown, the current; stable branch, named {\tt psi-3-4}, and a planned future release, to be named; {\tt psi-3-5}. The tags on the branches indicate release shapshots, where; bugs have been fixed and the code has been or will be exported for public; distribution. The dotted lines in the figure indicate merge points: just; prior to each public release, changes made to the code on the stable release; branch will be merged into the main trunk. \begin{figure}[h]; \begin{center}; \epsfig{file=svn/svn.eps,height=6.5cm}; \end{center}; \caption{\PSIfour\ SVN branch structure with examples of branch- and; release-tag labelling.}; \label{Fig:svn}; \end{figure}. \noindent A frequently encountered problem is what to do about bug fixes; that are necessary for uninterrupted code development of the code on the; main trunk. As Rule 1 of the above policy states, all bug fixes of the code; already in the recent stable release must go on the corresponding branch,; not on the main trunk. The next step depends on the severity of the bug:; \begin{enumerate}; \item If the bug fix is critical and potentially affects every; developer of the code on the main trunk, then \PSIfour\; administrators ",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:3404,Deployability,release,release,3404," made {\em only} on the; most recent stable release branch.; \item The main trunk is reserved for development of new functionality.; This allows us to keep new, possibly unstable code away from public; access until the code is ready.; \item Code that you do not want to put into next major release of; \PSIfour\ should be put onto a separate branch off the main; trunk. You will be solely responsible for maintenance of the new; branch, so you should read the SVN manual before attempting this.; \end{enumerate}. \noindent Fig.~\ref{Fig:svn} provides a schematic of the SVN revision-control; structure and branch labeling. Two release branches are shown, the current; stable branch, named {\tt psi-3-4}, and a planned future release, to be named; {\tt psi-3-5}. The tags on the branches indicate release shapshots, where; bugs have been fixed and the code has been or will be exported for public; distribution. The dotted lines in the figure indicate merge points: just; prior to each public release, changes made to the code on the stable release; branch will be merged into the main trunk. \begin{figure}[h]; \begin{center}; \epsfig{file=svn/svn.eps,height=6.5cm}; \end{center}; \caption{\PSIfour\ SVN branch structure with examples of branch- and; release-tag labelling.}; \label{Fig:svn}; \end{figure}. \noindent A frequently encountered problem is what to do about bug fixes; that are necessary for uninterrupted code development of the code on the; main trunk. As Rule 1 of the above policy states, all bug fixes of the code; already in the recent stable release must go on the corresponding branch,; not on the main trunk. The next step depends on the severity of the bug:; \begin{enumerate}; \item If the bug fix is critical and potentially affects every; developer of the code on the main trunk, then \PSIfour\; administrators should be notified of the fix. If deemed necessary,; appropriate steps to create a new patch release will be made. Once; the next patch release is created then the b",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:3452,Deployability,release,release,3452," made {\em only} on the; most recent stable release branch.; \item The main trunk is reserved for development of new functionality.; This allows us to keep new, possibly unstable code away from public; access until the code is ready.; \item Code that you do not want to put into next major release of; \PSIfour\ should be put onto a separate branch off the main; trunk. You will be solely responsible for maintenance of the new; branch, so you should read the SVN manual before attempting this.; \end{enumerate}. \noindent Fig.~\ref{Fig:svn} provides a schematic of the SVN revision-control; structure and branch labeling. Two release branches are shown, the current; stable branch, named {\tt psi-3-4}, and a planned future release, to be named; {\tt psi-3-5}. The tags on the branches indicate release shapshots, where; bugs have been fixed and the code has been or will be exported for public; distribution. The dotted lines in the figure indicate merge points: just; prior to each public release, changes made to the code on the stable release; branch will be merged into the main trunk. \begin{figure}[h]; \begin{center}; \epsfig{file=svn/svn.eps,height=6.5cm}; \end{center}; \caption{\PSIfour\ SVN branch structure with examples of branch- and; release-tag labelling.}; \label{Fig:svn}; \end{figure}. \noindent A frequently encountered problem is what to do about bug fixes; that are necessary for uninterrupted code development of the code on the; main trunk. As Rule 1 of the above policy states, all bug fixes of the code; already in the recent stable release must go on the corresponding branch,; not on the main trunk. The next step depends on the severity of the bug:; \begin{enumerate}; \item If the bug fix is critical and potentially affects every; developer of the code on the main trunk, then \PSIfour\; administrators should be notified of the fix. If deemed necessary,; appropriate steps to create a new patch release will be made. Once; the next patch release is created then the b",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:3663,Deployability,release,release-tag,3663,"e code is ready.; \item Code that you do not want to put into next major release of; \PSIfour\ should be put onto a separate branch off the main; trunk. You will be solely responsible for maintenance of the new; branch, so you should read the SVN manual before attempting this.; \end{enumerate}. \noindent Fig.~\ref{Fig:svn} provides a schematic of the SVN revision-control; structure and branch labeling. Two release branches are shown, the current; stable branch, named {\tt psi-3-4}, and a planned future release, to be named; {\tt psi-3-5}. The tags on the branches indicate release shapshots, where; bugs have been fixed and the code has been or will be exported for public; distribution. The dotted lines in the figure indicate merge points: just; prior to each public release, changes made to the code on the stable release; branch will be merged into the main trunk. \begin{figure}[h]; \begin{center}; \epsfig{file=svn/svn.eps,height=6.5cm}; \end{center}; \caption{\PSIfour\ SVN branch structure with examples of branch- and; release-tag labelling.}; \label{Fig:svn}; \end{figure}. \noindent A frequently encountered problem is what to do about bug fixes; that are necessary for uninterrupted code development of the code on the; main trunk. As Rule 1 of the above policy states, all bug fixes of the code; already in the recent stable release must go on the corresponding branch,; not on the main trunk. The next step depends on the severity of the bug:; \begin{enumerate}; \item If the bug fix is critical and potentially affects every; developer of the code on the main trunk, then \PSIfour\; administrators should be notified of the fix. If deemed necessary,; appropriate steps to create a new patch release will be made. Once; the next patch release is created then the bug fixes will be merged; onto the main trunk. If the bug fix doesn't warrant an immediate; new patch release, then you can incorporate the bug fix into your; local copy of the main trunk code manually or using SVN me",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:3973,Deployability,release,release,3973,"des a schematic of the SVN revision-control; structure and branch labeling. Two release branches are shown, the current; stable branch, named {\tt psi-3-4}, and a planned future release, to be named; {\tt psi-3-5}. The tags on the branches indicate release shapshots, where; bugs have been fixed and the code has been or will be exported for public; distribution. The dotted lines in the figure indicate merge points: just; prior to each public release, changes made to the code on the stable release; branch will be merged into the main trunk. \begin{figure}[h]; \begin{center}; \epsfig{file=svn/svn.eps,height=6.5cm}; \end{center}; \caption{\PSIfour\ SVN branch structure with examples of branch- and; release-tag labelling.}; \label{Fig:svn}; \end{figure}. \noindent A frequently encountered problem is what to do about bug fixes; that are necessary for uninterrupted code development of the code on the; main trunk. As Rule 1 of the above policy states, all bug fixes of the code; already in the recent stable release must go on the corresponding branch,; not on the main trunk. The next step depends on the severity of the bug:; \begin{enumerate}; \item If the bug fix is critical and potentially affects every; developer of the code on the main trunk, then \PSIfour\; administrators should be notified of the fix. If deemed necessary,; appropriate steps to create a new patch release will be made. Once; the next patch release is created then the bug fixes will be merged; onto the main trunk. If the bug fix doesn't warrant an immediate; new patch release, then you can incorporate the bug fix into your; local copy of the main trunk code manually or using SVN merge; features. This will allow you to continue development until next; patch release is created and the bug fix is incorporated into the; main trunk code in the repository. However you should {\em never}; merge such changes into the main trunk yourself.; \item If the bug fix is not critical (e.g. a documentation; update/fix), the",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:4335,Deployability,patch,patch,4335,"n. The dotted lines in the figure indicate merge points: just; prior to each public release, changes made to the code on the stable release; branch will be merged into the main trunk. \begin{figure}[h]; \begin{center}; \epsfig{file=svn/svn.eps,height=6.5cm}; \end{center}; \caption{\PSIfour\ SVN branch structure with examples of branch- and; release-tag labelling.}; \label{Fig:svn}; \end{figure}. \noindent A frequently encountered problem is what to do about bug fixes; that are necessary for uninterrupted code development of the code on the; main trunk. As Rule 1 of the above policy states, all bug fixes of the code; already in the recent stable release must go on the corresponding branch,; not on the main trunk. The next step depends on the severity of the bug:; \begin{enumerate}; \item If the bug fix is critical and potentially affects every; developer of the code on the main trunk, then \PSIfour\; administrators should be notified of the fix. If deemed necessary,; appropriate steps to create a new patch release will be made. Once; the next patch release is created then the bug fixes will be merged; onto the main trunk. If the bug fix doesn't warrant an immediate; new patch release, then you can incorporate the bug fix into your; local copy of the main trunk code manually or using SVN merge; features. This will allow you to continue development until next; patch release is created and the bug fix is incorporated into the; main trunk code in the repository. However you should {\em never}; merge such changes into the main trunk yourself.; \item If the bug fix is not critical (e.g. a documentation; update/fix), then you should wait until next patch release when it; will be merged into the main trunk automatically.; \end{enumerate}. \noindent; The following are some of the most commonly used SVN commands for checking; out and updating working copies of the \PSIfour\ source code. \noindent; $\bullet$ To checkout a working copy of the head of the main trunk:. {\tt svn co",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:4341,Deployability,release,release,4341,"n. The dotted lines in the figure indicate merge points: just; prior to each public release, changes made to the code on the stable release; branch will be merged into the main trunk. \begin{figure}[h]; \begin{center}; \epsfig{file=svn/svn.eps,height=6.5cm}; \end{center}; \caption{\PSIfour\ SVN branch structure with examples of branch- and; release-tag labelling.}; \label{Fig:svn}; \end{figure}. \noindent A frequently encountered problem is what to do about bug fixes; that are necessary for uninterrupted code development of the code on the; main trunk. As Rule 1 of the above policy states, all bug fixes of the code; already in the recent stable release must go on the corresponding branch,; not on the main trunk. The next step depends on the severity of the bug:; \begin{enumerate}; \item If the bug fix is critical and potentially affects every; developer of the code on the main trunk, then \PSIfour\; administrators should be notified of the fix. If deemed necessary,; appropriate steps to create a new patch release will be made. Once; the next patch release is created then the bug fixes will be merged; onto the main trunk. If the bug fix doesn't warrant an immediate; new patch release, then you can incorporate the bug fix into your; local copy of the main trunk code manually or using SVN merge; features. This will allow you to continue development until next; patch release is created and the bug fix is incorporated into the; main trunk code in the repository. However you should {\em never}; merge such changes into the main trunk yourself.; \item If the bug fix is not critical (e.g. a documentation; update/fix), then you should wait until next patch release when it; will be merged into the main trunk automatically.; \end{enumerate}. \noindent; The following are some of the most commonly used SVN commands for checking; out and updating working copies of the \PSIfour\ source code. \noindent; $\bullet$ To checkout a working copy of the head of the main trunk:. {\tt svn co",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:4378,Deployability,patch,patch,4378,"e, changes made to the code on the stable release; branch will be merged into the main trunk. \begin{figure}[h]; \begin{center}; \epsfig{file=svn/svn.eps,height=6.5cm}; \end{center}; \caption{\PSIfour\ SVN branch structure with examples of branch- and; release-tag labelling.}; \label{Fig:svn}; \end{figure}. \noindent A frequently encountered problem is what to do about bug fixes; that are necessary for uninterrupted code development of the code on the; main trunk. As Rule 1 of the above policy states, all bug fixes of the code; already in the recent stable release must go on the corresponding branch,; not on the main trunk. The next step depends on the severity of the bug:; \begin{enumerate}; \item If the bug fix is critical and potentially affects every; developer of the code on the main trunk, then \PSIfour\; administrators should be notified of the fix. If deemed necessary,; appropriate steps to create a new patch release will be made. Once; the next patch release is created then the bug fixes will be merged; onto the main trunk. If the bug fix doesn't warrant an immediate; new patch release, then you can incorporate the bug fix into your; local copy of the main trunk code manually or using SVN merge; features. This will allow you to continue development until next; patch release is created and the bug fix is incorporated into the; main trunk code in the repository. However you should {\em never}; merge such changes into the main trunk yourself.; \item If the bug fix is not critical (e.g. a documentation; update/fix), then you should wait until next patch release when it; will be merged into the main trunk automatically.; \end{enumerate}. \noindent; The following are some of the most commonly used SVN commands for checking; out and updating working copies of the \PSIfour\ source code. \noindent; $\bullet$ To checkout a working copy of the head of the main trunk:. {\tt svn co https://sirius.chem.vt.edu/svn/psi4/trunk/ psi4} . \noindent; $\bullet$ To check out a wo",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:4384,Deployability,release,release,4384,"e, changes made to the code on the stable release; branch will be merged into the main trunk. \begin{figure}[h]; \begin{center}; \epsfig{file=svn/svn.eps,height=6.5cm}; \end{center}; \caption{\PSIfour\ SVN branch structure with examples of branch- and; release-tag labelling.}; \label{Fig:svn}; \end{figure}. \noindent A frequently encountered problem is what to do about bug fixes; that are necessary for uninterrupted code development of the code on the; main trunk. As Rule 1 of the above policy states, all bug fixes of the code; already in the recent stable release must go on the corresponding branch,; not on the main trunk. The next step depends on the severity of the bug:; \begin{enumerate}; \item If the bug fix is critical and potentially affects every; developer of the code on the main trunk, then \PSIfour\; administrators should be notified of the fix. If deemed necessary,; appropriate steps to create a new patch release will be made. Once; the next patch release is created then the bug fixes will be merged; onto the main trunk. If the bug fix doesn't warrant an immediate; new patch release, then you can incorporate the bug fix into your; local copy of the main trunk code manually or using SVN merge; features. This will allow you to continue development until next; patch release is created and the bug fix is incorporated into the; main trunk code in the repository. However you should {\em never}; merge such changes into the main trunk yourself.; \item If the bug fix is not critical (e.g. a documentation; update/fix), then you should wait until next patch release when it; will be merged into the main trunk automatically.; \end{enumerate}. \noindent; The following are some of the most commonly used SVN commands for checking; out and updating working copies of the \PSIfour\ source code. \noindent; $\bullet$ To checkout a working copy of the head of the main trunk:. {\tt svn co https://sirius.chem.vt.edu/svn/psi4/trunk/ psi4} . \noindent; $\bullet$ To check out a wo",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:4508,Deployability,patch,patch,4508,"e=svn/svn.eps,height=6.5cm}; \end{center}; \caption{\PSIfour\ SVN branch structure with examples of branch- and; release-tag labelling.}; \label{Fig:svn}; \end{figure}. \noindent A frequently encountered problem is what to do about bug fixes; that are necessary for uninterrupted code development of the code on the; main trunk. As Rule 1 of the above policy states, all bug fixes of the code; already in the recent stable release must go on the corresponding branch,; not on the main trunk. The next step depends on the severity of the bug:; \begin{enumerate}; \item If the bug fix is critical and potentially affects every; developer of the code on the main trunk, then \PSIfour\; administrators should be notified of the fix. If deemed necessary,; appropriate steps to create a new patch release will be made. Once; the next patch release is created then the bug fixes will be merged; onto the main trunk. If the bug fix doesn't warrant an immediate; new patch release, then you can incorporate the bug fix into your; local copy of the main trunk code manually or using SVN merge; features. This will allow you to continue development until next; patch release is created and the bug fix is incorporated into the; main trunk code in the repository. However you should {\em never}; merge such changes into the main trunk yourself.; \item If the bug fix is not critical (e.g. a documentation; update/fix), then you should wait until next patch release when it; will be merged into the main trunk automatically.; \end{enumerate}. \noindent; The following are some of the most commonly used SVN commands for checking; out and updating working copies of the \PSIfour\ source code. \noindent; $\bullet$ To checkout a working copy of the head of the main trunk:. {\tt svn co https://sirius.chem.vt.edu/svn/psi4/trunk/ psi4} . \noindent; $\bullet$ To check out a working copy of the head of a specific release branch,; e.g., the branch labelled {\tt psi-4-0}:. {\tt svn co https://sirius.chem.vt.edu/svn/PS",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:4514,Deployability,release,release,4514,"e=svn/svn.eps,height=6.5cm}; \end{center}; \caption{\PSIfour\ SVN branch structure with examples of branch- and; release-tag labelling.}; \label{Fig:svn}; \end{figure}. \noindent A frequently encountered problem is what to do about bug fixes; that are necessary for uninterrupted code development of the code on the; main trunk. As Rule 1 of the above policy states, all bug fixes of the code; already in the recent stable release must go on the corresponding branch,; not on the main trunk. The next step depends on the severity of the bug:; \begin{enumerate}; \item If the bug fix is critical and potentially affects every; developer of the code on the main trunk, then \PSIfour\; administrators should be notified of the fix. If deemed necessary,; appropriate steps to create a new patch release will be made. Once; the next patch release is created then the bug fixes will be merged; onto the main trunk. If the bug fix doesn't warrant an immediate; new patch release, then you can incorporate the bug fix into your; local copy of the main trunk code manually or using SVN merge; features. This will allow you to continue development until next; patch release is created and the bug fix is incorporated into the; main trunk code in the repository. However you should {\em never}; merge such changes into the main trunk yourself.; \item If the bug fix is not critical (e.g. a documentation; update/fix), then you should wait until next patch release when it; will be merged into the main trunk automatically.; \end{enumerate}. \noindent; The following are some of the most commonly used SVN commands for checking; out and updating working copies of the \PSIfour\ source code. \noindent; $\bullet$ To checkout a working copy of the head of the main trunk:. {\tt svn co https://sirius.chem.vt.edu/svn/psi4/trunk/ psi4} . \noindent; $\bullet$ To check out a working copy of the head of a specific release branch,; e.g., the branch labelled {\tt psi-4-0}:. {\tt svn co https://sirius.chem.vt.edu/svn/PS",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:4700,Deployability,patch,patch,4700,"indent A frequently encountered problem is what to do about bug fixes; that are necessary for uninterrupted code development of the code on the; main trunk. As Rule 1 of the above policy states, all bug fixes of the code; already in the recent stable release must go on the corresponding branch,; not on the main trunk. The next step depends on the severity of the bug:; \begin{enumerate}; \item If the bug fix is critical and potentially affects every; developer of the code on the main trunk, then \PSIfour\; administrators should be notified of the fix. If deemed necessary,; appropriate steps to create a new patch release will be made. Once; the next patch release is created then the bug fixes will be merged; onto the main trunk. If the bug fix doesn't warrant an immediate; new patch release, then you can incorporate the bug fix into your; local copy of the main trunk code manually or using SVN merge; features. This will allow you to continue development until next; patch release is created and the bug fix is incorporated into the; main trunk code in the repository. However you should {\em never}; merge such changes into the main trunk yourself.; \item If the bug fix is not critical (e.g. a documentation; update/fix), then you should wait until next patch release when it; will be merged into the main trunk automatically.; \end{enumerate}. \noindent; The following are some of the most commonly used SVN commands for checking; out and updating working copies of the \PSIfour\ source code. \noindent; $\bullet$ To checkout a working copy of the head of the main trunk:. {\tt svn co https://sirius.chem.vt.edu/svn/psi4/trunk/ psi4} . \noindent; $\bullet$ To check out a working copy of the head of a specific release branch,; e.g., the branch labelled {\tt psi-4-0}:. {\tt svn co https://sirius.chem.vt.edu/svn/PSI4/branches/psi-4-0 psi4}. \noindent Note that subsequent {\tt svn update} commands in this; working copy will provide updates only on the chosen branch. Note; also that a",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:4706,Deployability,release,release,4706,"indent A frequently encountered problem is what to do about bug fixes; that are necessary for uninterrupted code development of the code on the; main trunk. As Rule 1 of the above policy states, all bug fixes of the code; already in the recent stable release must go on the corresponding branch,; not on the main trunk. The next step depends on the severity of the bug:; \begin{enumerate}; \item If the bug fix is critical and potentially affects every; developer of the code on the main trunk, then \PSIfour\; administrators should be notified of the fix. If deemed necessary,; appropriate steps to create a new patch release will be made. Once; the next patch release is created then the bug fixes will be merged; onto the main trunk. If the bug fix doesn't warrant an immediate; new patch release, then you can incorporate the bug fix into your; local copy of the main trunk code manually or using SVN merge; features. This will allow you to continue development until next; patch release is created and the bug fix is incorporated into the; main trunk code in the repository. However you should {\em never}; merge such changes into the main trunk yourself.; \item If the bug fix is not critical (e.g. a documentation; update/fix), then you should wait until next patch release when it; will be merged into the main trunk automatically.; \end{enumerate}. \noindent; The following are some of the most commonly used SVN commands for checking; out and updating working copies of the \PSIfour\ source code. \noindent; $\bullet$ To checkout a working copy of the head of the main trunk:. {\tt svn co https://sirius.chem.vt.edu/svn/psi4/trunk/ psi4} . \noindent; $\bullet$ To check out a working copy of the head of a specific release branch,; e.g., the branch labelled {\tt psi-4-0}:. {\tt svn co https://sirius.chem.vt.edu/svn/PSI4/branches/psi-4-0 psi4}. \noindent Note that subsequent {\tt svn update} commands in this; working copy will provide updates only on the chosen branch. Note; also that a",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:4944,Deployability,update,update,4944,"he corresponding branch,; not on the main trunk. The next step depends on the severity of the bug:; \begin{enumerate}; \item If the bug fix is critical and potentially affects every; developer of the code on the main trunk, then \PSIfour\; administrators should be notified of the fix. If deemed necessary,; appropriate steps to create a new patch release will be made. Once; the next patch release is created then the bug fixes will be merged; onto the main trunk. If the bug fix doesn't warrant an immediate; new patch release, then you can incorporate the bug fix into your; local copy of the main trunk code manually or using SVN merge; features. This will allow you to continue development until next; patch release is created and the bug fix is incorporated into the; main trunk code in the repository. However you should {\em never}; merge such changes into the main trunk yourself.; \item If the bug fix is not critical (e.g. a documentation; update/fix), then you should wait until next patch release when it; will be merged into the main trunk automatically.; \end{enumerate}. \noindent; The following are some of the most commonly used SVN commands for checking; out and updating working copies of the \PSIfour\ source code. \noindent; $\bullet$ To checkout a working copy of the head of the main trunk:. {\tt svn co https://sirius.chem.vt.edu/svn/psi4/trunk/ psi4} . \noindent; $\bullet$ To check out a working copy of the head of a specific release branch,; e.g., the branch labelled {\tt psi-4-0}:. {\tt svn co https://sirius.chem.vt.edu/svn/PSI4/branches/psi-4-0 psi4}. \noindent Note that subsequent {\tt svn update} commands in this; working copy will provide updates only on the chosen branch. Note; also that after you have checked out a fresh working copy of the code; you must run the {\tt autoconf} command to generate a {\tt configure}; script for building the code. (See the installation manual for; configuration, compilation, and testing instructions.). \noindent For each of",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:4989,Deployability,patch,patch,4989,"he corresponding branch,; not on the main trunk. The next step depends on the severity of the bug:; \begin{enumerate}; \item If the bug fix is critical and potentially affects every; developer of the code on the main trunk, then \PSIfour\; administrators should be notified of the fix. If deemed necessary,; appropriate steps to create a new patch release will be made. Once; the next patch release is created then the bug fixes will be merged; onto the main trunk. If the bug fix doesn't warrant an immediate; new patch release, then you can incorporate the bug fix into your; local copy of the main trunk code manually or using SVN merge; features. This will allow you to continue development until next; patch release is created and the bug fix is incorporated into the; main trunk code in the repository. However you should {\em never}; merge such changes into the main trunk yourself.; \item If the bug fix is not critical (e.g. a documentation; update/fix), then you should wait until next patch release when it; will be merged into the main trunk automatically.; \end{enumerate}. \noindent; The following are some of the most commonly used SVN commands for checking; out and updating working copies of the \PSIfour\ source code. \noindent; $\bullet$ To checkout a working copy of the head of the main trunk:. {\tt svn co https://sirius.chem.vt.edu/svn/psi4/trunk/ psi4} . \noindent; $\bullet$ To check out a working copy of the head of a specific release branch,; e.g., the branch labelled {\tt psi-4-0}:. {\tt svn co https://sirius.chem.vt.edu/svn/PSI4/branches/psi-4-0 psi4}. \noindent Note that subsequent {\tt svn update} commands in this; working copy will provide updates only on the chosen branch. Note; also that after you have checked out a fresh working copy of the code; you must run the {\tt autoconf} command to generate a {\tt configure}; script for building the code. (See the installation manual for; configuration, compilation, and testing instructions.). \noindent For each of",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:4995,Deployability,release,release,4995,"he corresponding branch,; not on the main trunk. The next step depends on the severity of the bug:; \begin{enumerate}; \item If the bug fix is critical and potentially affects every; developer of the code on the main trunk, then \PSIfour\; administrators should be notified of the fix. If deemed necessary,; appropriate steps to create a new patch release will be made. Once; the next patch release is created then the bug fixes will be merged; onto the main trunk. If the bug fix doesn't warrant an immediate; new patch release, then you can incorporate the bug fix into your; local copy of the main trunk code manually or using SVN merge; features. This will allow you to continue development until next; patch release is created and the bug fix is incorporated into the; main trunk code in the repository. However you should {\em never}; merge such changes into the main trunk yourself.; \item If the bug fix is not critical (e.g. a documentation; update/fix), then you should wait until next patch release when it; will be merged into the main trunk automatically.; \end{enumerate}. \noindent; The following are some of the most commonly used SVN commands for checking; out and updating working copies of the \PSIfour\ source code. \noindent; $\bullet$ To checkout a working copy of the head of the main trunk:. {\tt svn co https://sirius.chem.vt.edu/svn/psi4/trunk/ psi4} . \noindent; $\bullet$ To check out a working copy of the head of a specific release branch,; e.g., the branch labelled {\tt psi-4-0}:. {\tt svn co https://sirius.chem.vt.edu/svn/PSI4/branches/psi-4-0 psi4}. \noindent Note that subsequent {\tt svn update} commands in this; working copy will provide updates only on the chosen branch. Note; also that after you have checked out a fresh working copy of the code; you must run the {\tt autoconf} command to generate a {\tt configure}; script for building the code. (See the installation manual for; configuration, compilation, and testing instructions.). \noindent For each of",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:5447,Deployability,release,release,5447,"xes will be merged; onto the main trunk. If the bug fix doesn't warrant an immediate; new patch release, then you can incorporate the bug fix into your; local copy of the main trunk code manually or using SVN merge; features. This will allow you to continue development until next; patch release is created and the bug fix is incorporated into the; main trunk code in the repository. However you should {\em never}; merge such changes into the main trunk yourself.; \item If the bug fix is not critical (e.g. a documentation; update/fix), then you should wait until next patch release when it; will be merged into the main trunk automatically.; \end{enumerate}. \noindent; The following are some of the most commonly used SVN commands for checking; out and updating working copies of the \PSIfour\ source code. \noindent; $\bullet$ To checkout a working copy of the head of the main trunk:. {\tt svn co https://sirius.chem.vt.edu/svn/psi4/trunk/ psi4} . \noindent; $\bullet$ To check out a working copy of the head of a specific release branch,; e.g., the branch labelled {\tt psi-4-0}:. {\tt svn co https://sirius.chem.vt.edu/svn/PSI4/branches/psi-4-0 psi4}. \noindent Note that subsequent {\tt svn update} commands in this; working copy will provide updates only on the chosen branch. Note; also that after you have checked out a fresh working copy of the code; you must run the {\tt autoconf} command to generate a {\tt configure}; script for building the code. (See the installation manual for; configuration, compilation, and testing instructions.). \noindent For each of the above commands, the working copy of your; code will be placed in the directory \file{psi4}, regardless of your; choice of branch. In this manual, we will refer to this directory; from now on as {\tt \$PSI4}. Subsequent SVN commands are usually run; within this top-level directory. \noindent; $\bullet$ To update your current working copy to include the latest revisions:. {\tt svn update}. \noindent; Notes: (a) This wi",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:5618,Deployability,update,update,5618,"es. This will allow you to continue development until next; patch release is created and the bug fix is incorporated into the; main trunk code in the repository. However you should {\em never}; merge such changes into the main trunk yourself.; \item If the bug fix is not critical (e.g. a documentation; update/fix), then you should wait until next patch release when it; will be merged into the main trunk automatically.; \end{enumerate}. \noindent; The following are some of the most commonly used SVN commands for checking; out and updating working copies of the \PSIfour\ source code. \noindent; $\bullet$ To checkout a working copy of the head of the main trunk:. {\tt svn co https://sirius.chem.vt.edu/svn/psi4/trunk/ psi4} . \noindent; $\bullet$ To check out a working copy of the head of a specific release branch,; e.g., the branch labelled {\tt psi-4-0}:. {\tt svn co https://sirius.chem.vt.edu/svn/PSI4/branches/psi-4-0 psi4}. \noindent Note that subsequent {\tt svn update} commands in this; working copy will provide updates only on the chosen branch. Note; also that after you have checked out a fresh working copy of the code; you must run the {\tt autoconf} command to generate a {\tt configure}; script for building the code. (See the installation manual for; configuration, compilation, and testing instructions.). \noindent For each of the above commands, the working copy of your; code will be placed in the directory \file{psi4}, regardless of your; choice of branch. In this manual, we will refer to this directory; from now on as {\tt \$PSI4}. Subsequent SVN commands are usually run; within this top-level directory. \noindent; $\bullet$ To update your current working copy to include the latest revisions:. {\tt svn update}. \noindent; Notes: (a) This will update only the revisions on your current branch;; (b) The old {\tt -d} and {\tt -P} flags required by CVS are not necessary with SVN. . \noindent; $\bullet$ To convert your working copy to the head of a specific branch",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:5670,Deployability,update,updates,5670,"es. This will allow you to continue development until next; patch release is created and the bug fix is incorporated into the; main trunk code in the repository. However you should {\em never}; merge such changes into the main trunk yourself.; \item If the bug fix is not critical (e.g. a documentation; update/fix), then you should wait until next patch release when it; will be merged into the main trunk automatically.; \end{enumerate}. \noindent; The following are some of the most commonly used SVN commands for checking; out and updating working copies of the \PSIfour\ source code. \noindent; $\bullet$ To checkout a working copy of the head of the main trunk:. {\tt svn co https://sirius.chem.vt.edu/svn/psi4/trunk/ psi4} . \noindent; $\bullet$ To check out a working copy of the head of a specific release branch,; e.g., the branch labelled {\tt psi-4-0}:. {\tt svn co https://sirius.chem.vt.edu/svn/PSI4/branches/psi-4-0 psi4}. \noindent Note that subsequent {\tt svn update} commands in this; working copy will provide updates only on the chosen branch. Note; also that after you have checked out a fresh working copy of the code; you must run the {\tt autoconf} command to generate a {\tt configure}; script for building the code. (See the installation manual for; configuration, compilation, and testing instructions.). \noindent For each of the above commands, the working copy of your; code will be placed in the directory \file{psi4}, regardless of your; choice of branch. In this manual, we will refer to this directory; from now on as {\tt \$PSI4}. Subsequent SVN commands are usually run; within this top-level directory. \noindent; $\bullet$ To update your current working copy to include the latest revisions:. {\tt svn update}. \noindent; Notes: (a) This will update only the revisions on your current branch;; (b) The old {\tt -d} and {\tt -P} flags required by CVS are not necessary with SVN. . \noindent; $\bullet$ To convert your working copy to the head of a specific branch",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:5892,Deployability,install,installation,5892," a documentation; update/fix), then you should wait until next patch release when it; will be merged into the main trunk automatically.; \end{enumerate}. \noindent; The following are some of the most commonly used SVN commands for checking; out and updating working copies of the \PSIfour\ source code. \noindent; $\bullet$ To checkout a working copy of the head of the main trunk:. {\tt svn co https://sirius.chem.vt.edu/svn/psi4/trunk/ psi4} . \noindent; $\bullet$ To check out a working copy of the head of a specific release branch,; e.g., the branch labelled {\tt psi-4-0}:. {\tt svn co https://sirius.chem.vt.edu/svn/PSI4/branches/psi-4-0 psi4}. \noindent Note that subsequent {\tt svn update} commands in this; working copy will provide updates only on the chosen branch. Note; also that after you have checked out a fresh working copy of the code; you must run the {\tt autoconf} command to generate a {\tt configure}; script for building the code. (See the installation manual for; configuration, compilation, and testing instructions.). \noindent For each of the above commands, the working copy of your; code will be placed in the directory \file{psi4}, regardless of your; choice of branch. In this manual, we will refer to this directory; from now on as {\tt \$PSI4}. Subsequent SVN commands are usually run; within this top-level directory. \noindent; $\bullet$ To update your current working copy to include the latest revisions:. {\tt svn update}. \noindent; Notes: (a) This will update only the revisions on your current branch;; (b) The old {\tt -d} and {\tt -P} flags required by CVS are not necessary with SVN. . \noindent; $\bullet$ To convert your working copy to the head of a specific branch:. {\tt svn switch https://sirius.chem.vt.edu/svn/PSI4/branches/psi-4-0}. \noindent; $\bullet$ To convert your working copy to the head of the main trunk:. {\tt svn switch https://sirius.chem.vt.edu/svn/psi4/trunk/}. \noindent; $\bullet$ To find out what branch your working copy is on",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:5917,Deployability,configurat,configuration,5917," a documentation; update/fix), then you should wait until next patch release when it; will be merged into the main trunk automatically.; \end{enumerate}. \noindent; The following are some of the most commonly used SVN commands for checking; out and updating working copies of the \PSIfour\ source code. \noindent; $\bullet$ To checkout a working copy of the head of the main trunk:. {\tt svn co https://sirius.chem.vt.edu/svn/psi4/trunk/ psi4} . \noindent; $\bullet$ To check out a working copy of the head of a specific release branch,; e.g., the branch labelled {\tt psi-4-0}:. {\tt svn co https://sirius.chem.vt.edu/svn/PSI4/branches/psi-4-0 psi4}. \noindent Note that subsequent {\tt svn update} commands in this; working copy will provide updates only on the chosen branch. Note; also that after you have checked out a fresh working copy of the code; you must run the {\tt autoconf} command to generate a {\tt configure}; script for building the code. (See the installation manual for; configuration, compilation, and testing instructions.). \noindent For each of the above commands, the working copy of your; code will be placed in the directory \file{psi4}, regardless of your; choice of branch. In this manual, we will refer to this directory; from now on as {\tt \$PSI4}. Subsequent SVN commands are usually run; within this top-level directory. \noindent; $\bullet$ To update your current working copy to include the latest revisions:. {\tt svn update}. \noindent; Notes: (a) This will update only the revisions on your current branch;; (b) The old {\tt -d} and {\tt -P} flags required by CVS are not necessary with SVN. . \noindent; $\bullet$ To convert your working copy to the head of a specific branch:. {\tt svn switch https://sirius.chem.vt.edu/svn/PSI4/branches/psi-4-0}. \noindent; $\bullet$ To convert your working copy to the head of the main trunk:. {\tt svn switch https://sirius.chem.vt.edu/svn/psi4/trunk/}. \noindent; $\bullet$ To find out what branch your working copy is on",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:6305,Deployability,update,update,6305,"s://sirius.chem.vt.edu/svn/psi4/trunk/ psi4} . \noindent; $\bullet$ To check out a working copy of the head of a specific release branch,; e.g., the branch labelled {\tt psi-4-0}:. {\tt svn co https://sirius.chem.vt.edu/svn/PSI4/branches/psi-4-0 psi4}. \noindent Note that subsequent {\tt svn update} commands in this; working copy will provide updates only on the chosen branch. Note; also that after you have checked out a fresh working copy of the code; you must run the {\tt autoconf} command to generate a {\tt configure}; script for building the code. (See the installation manual for; configuration, compilation, and testing instructions.). \noindent For each of the above commands, the working copy of your; code will be placed in the directory \file{psi4}, regardless of your; choice of branch. In this manual, we will refer to this directory; from now on as {\tt \$PSI4}. Subsequent SVN commands are usually run; within this top-level directory. \noindent; $\bullet$ To update your current working copy to include the latest revisions:. {\tt svn update}. \noindent; Notes: (a) This will update only the revisions on your current branch;; (b) The old {\tt -d} and {\tt -P} flags required by CVS are not necessary with SVN. . \noindent; $\bullet$ To convert your working copy to the head of a specific branch:. {\tt svn switch https://sirius.chem.vt.edu/svn/PSI4/branches/psi-4-0}. \noindent; $\bullet$ To convert your working copy to the head of the main trunk:. {\tt svn switch https://sirius.chem.vt.edu/svn/psi4/trunk/}. \noindent; $\bullet$ To find out what branch your working copy is on, run this in your; top-level \PSIfour\ source directory:. {\tt svn info | grep URL}. \noindent; This will return the SVN directory from which your working copy was; taken, e.g.,. \noindent; {\tt URL: https://sirius.chem.vt.edu/svn/PSI4/branches/psi-4-0}. \noindent; Some words of advice:; \begin{enumerate}; \item Most SVN commands are reasonably safe, . \item Unlike CVS, you shouldn't use {\tt svn",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:6381,Deployability,update,update,6381,"t; $\bullet$ To check out a working copy of the head of a specific release branch,; e.g., the branch labelled {\tt psi-4-0}:. {\tt svn co https://sirius.chem.vt.edu/svn/PSI4/branches/psi-4-0 psi4}. \noindent Note that subsequent {\tt svn update} commands in this; working copy will provide updates only on the chosen branch. Note; also that after you have checked out a fresh working copy of the code; you must run the {\tt autoconf} command to generate a {\tt configure}; script for building the code. (See the installation manual for; configuration, compilation, and testing instructions.). \noindent For each of the above commands, the working copy of your; code will be placed in the directory \file{psi4}, regardless of your; choice of branch. In this manual, we will refer to this directory; from now on as {\tt \$PSI4}. Subsequent SVN commands are usually run; within this top-level directory. \noindent; $\bullet$ To update your current working copy to include the latest revisions:. {\tt svn update}. \noindent; Notes: (a) This will update only the revisions on your current branch;; (b) The old {\tt -d} and {\tt -P} flags required by CVS are not necessary with SVN. . \noindent; $\bullet$ To convert your working copy to the head of a specific branch:. {\tt svn switch https://sirius.chem.vt.edu/svn/PSI4/branches/psi-4-0}. \noindent; $\bullet$ To convert your working copy to the head of the main trunk:. {\tt svn switch https://sirius.chem.vt.edu/svn/psi4/trunk/}. \noindent; $\bullet$ To find out what branch your working copy is on, run this in your; top-level \PSIfour\ source directory:. {\tt svn info | grep URL}. \noindent; This will return the SVN directory from which your working copy was; taken, e.g.,. \noindent; {\tt URL: https://sirius.chem.vt.edu/svn/PSI4/branches/psi-4-0}. \noindent; Some words of advice:; \begin{enumerate}; \item Most SVN commands are reasonably safe, . \item Unlike CVS, you shouldn't use {\tt svn update} to see the status; of your working copy. With",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:6422,Deployability,update,update,6422,"e branch labelled {\tt psi-4-0}:. {\tt svn co https://sirius.chem.vt.edu/svn/PSI4/branches/psi-4-0 psi4}. \noindent Note that subsequent {\tt svn update} commands in this; working copy will provide updates only on the chosen branch. Note; also that after you have checked out a fresh working copy of the code; you must run the {\tt autoconf} command to generate a {\tt configure}; script for building the code. (See the installation manual for; configuration, compilation, and testing instructions.). \noindent For each of the above commands, the working copy of your; code will be placed in the directory \file{psi4}, regardless of your; choice of branch. In this manual, we will refer to this directory; from now on as {\tt \$PSI4}. Subsequent SVN commands are usually run; within this top-level directory. \noindent; $\bullet$ To update your current working copy to include the latest revisions:. {\tt svn update}. \noindent; Notes: (a) This will update only the revisions on your current branch;; (b) The old {\tt -d} and {\tt -P} flags required by CVS are not necessary with SVN. . \noindent; $\bullet$ To convert your working copy to the head of a specific branch:. {\tt svn switch https://sirius.chem.vt.edu/svn/PSI4/branches/psi-4-0}. \noindent; $\bullet$ To convert your working copy to the head of the main trunk:. {\tt svn switch https://sirius.chem.vt.edu/svn/psi4/trunk/}. \noindent; $\bullet$ To find out what branch your working copy is on, run this in your; top-level \PSIfour\ source directory:. {\tt svn info | grep URL}. \noindent; This will return the SVN directory from which your working copy was; taken, e.g.,. \noindent; {\tt URL: https://sirius.chem.vt.edu/svn/PSI4/branches/psi-4-0}. \noindent; Some words of advice:; \begin{enumerate}; \item Most SVN commands are reasonably safe, . \item Unlike CVS, you shouldn't use {\tt svn update} to see the status; of your working copy. With SVN you should use {\tt svn status} to; see if you've modified any files or directories. If ",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:7327,Deployability,update,update,7327,"king copy to include the latest revisions:. {\tt svn update}. \noindent; Notes: (a) This will update only the revisions on your current branch;; (b) The old {\tt -d} and {\tt -P} flags required by CVS are not necessary with SVN. . \noindent; $\bullet$ To convert your working copy to the head of a specific branch:. {\tt svn switch https://sirius.chem.vt.edu/svn/PSI4/branches/psi-4-0}. \noindent; $\bullet$ To convert your working copy to the head of the main trunk:. {\tt svn switch https://sirius.chem.vt.edu/svn/psi4/trunk/}. \noindent; $\bullet$ To find out what branch your working copy is on, run this in your; top-level \PSIfour\ source directory:. {\tt svn info | grep URL}. \noindent; This will return the SVN directory from which your working copy was; taken, e.g.,. \noindent; {\tt URL: https://sirius.chem.vt.edu/svn/PSI4/branches/psi-4-0}. \noindent; Some words of advice:; \begin{enumerate}; \item Most SVN commands are reasonably safe, . \item Unlike CVS, you shouldn't use {\tt svn update} to see the status; of your working copy. With SVN you should use {\tt svn status} to; see if you've modified any files or directories. If you want a; direct comparison with the repository, you should use {\tt svn status -u}.; \item Read the SVN manual. Seriously.; \begin{center}; \htmladdnormallink{{\tt; http://svnbook.red-bean.com/}}{http://svnbook.red-bean.com/}; \end{center}; \item If you're about to start some significant development or bug-fixes,; first update your working copy to the latest version on your branch.; In addition, if you do development over a long period of time (say weeks to; months) on a specific module or modules, be sure to run a {\tt svn status -u}; occasionally. In can be {\em very} frustrating to try to check in lots; of changes, only to find out that the \PSIfour\ has changed dramatically; since your last update.; \end{enumerate}. \subsection{Checking in altered \PSIfour\ binaries or libraries}. If you have changes to Psi binaries or libraries which a",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:7798,Deployability,update,update,7798,"f the main trunk:. {\tt svn switch https://sirius.chem.vt.edu/svn/psi4/trunk/}. \noindent; $\bullet$ To find out what branch your working copy is on, run this in your; top-level \PSIfour\ source directory:. {\tt svn info | grep URL}. \noindent; This will return the SVN directory from which your working copy was; taken, e.g.,. \noindent; {\tt URL: https://sirius.chem.vt.edu/svn/PSI4/branches/psi-4-0}. \noindent; Some words of advice:; \begin{enumerate}; \item Most SVN commands are reasonably safe, . \item Unlike CVS, you shouldn't use {\tt svn update} to see the status; of your working copy. With SVN you should use {\tt svn status} to; see if you've modified any files or directories. If you want a; direct comparison with the repository, you should use {\tt svn status -u}.; \item Read the SVN manual. Seriously.; \begin{center}; \htmladdnormallink{{\tt; http://svnbook.red-bean.com/}}{http://svnbook.red-bean.com/}; \end{center}; \item If you're about to start some significant development or bug-fixes,; first update your working copy to the latest version on your branch.; In addition, if you do development over a long period of time (say weeks to; months) on a specific module or modules, be sure to run a {\tt svn status -u}; occasionally. In can be {\em very} frustrating to try to check in lots; of changes, only to find out that the \PSIfour\ has changed dramatically; since your last update.; \end{enumerate}. \subsection{Checking in altered \PSIfour\ binaries or libraries}. If you have changes to Psi binaries or libraries which already exist, one; of two series of steps is necessary to check these changes in to the main; repository. The first series may be followed if all changes have been made; only to files which already exist in the current version. The second series; should be followed if new files must be added to the code in the repository. \begin{itemize}; \item No new files need to be added to the repository. We will use; \library{libciomr} as an example. ; \begi",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:8180,Deployability,update,update,8180,"indent; {\tt URL: https://sirius.chem.vt.edu/svn/PSI4/branches/psi-4-0}. \noindent; Some words of advice:; \begin{enumerate}; \item Most SVN commands are reasonably safe, . \item Unlike CVS, you shouldn't use {\tt svn update} to see the status; of your working copy. With SVN you should use {\tt svn status} to; see if you've modified any files or directories. If you want a; direct comparison with the repository, you should use {\tt svn status -u}.; \item Read the SVN manual. Seriously.; \begin{center}; \htmladdnormallink{{\tt; http://svnbook.red-bean.com/}}{http://svnbook.red-bean.com/}; \end{center}; \item If you're about to start some significant development or bug-fixes,; first update your working copy to the latest version on your branch.; In addition, if you do development over a long period of time (say weeks to; months) on a specific module or modules, be sure to run a {\tt svn status -u}; occasionally. In can be {\em very} frustrating to try to check in lots; of changes, only to find out that the \PSIfour\ has changed dramatically; since your last update.; \end{enumerate}. \subsection{Checking in altered \PSIfour\ binaries or libraries}. If you have changes to Psi binaries or libraries which already exist, one; of two series of steps is necessary to check these changes in to the main; repository. The first series may be followed if all changes have been made; only to files which already exist in the current version. The second series; should be followed if new files must be added to the code in the repository. \begin{itemize}; \item No new files need to be added to the repository. We will use; \library{libciomr} as an example. ; \begin{enumerate}; \item {\tt cd \$PSI4/src/lib/libciomr}; \item {\tt svn ci -m ``Put comments here.''}; \end{enumerate}; \item New files must be added to the repository. Again, we use ; \library{libciomr}; as an example. Suppose the new file is named \file{great\_code.cc} .; \begin{enumerate}; \item {\tt cd \$PSI4/src/lib/libciomr} ;",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:10454,Deployability,install,installed,10454,"Any files which; have been altered (and for which no conflicts with newer versions; exist!) will be identified and checked in to the main repository (as; well as the new file in the second situation). SVN requires that you include a comment on your changes. However,; unlike CVS, SVN prefers that you put your comments on the command-line; rather than editing a text file. I prefer the CVS way, but this is a; minor pain compared to all the advantages of SVN, in my opinion. \subsection{Adding entirely new code to the main \PSIfour\ repository} ; \label{checkin_new}. If the programmer is adding a new executable module or library to the; \PSIfour\ repository, a number of important conventions should be followed:. \begin{enumerate}; \item Since such changes almost always involve additional functionality,; new modules or libraries should be added only on the main SVN trunk.; See section \ref{section:branches} for additional information. \item The directory containing the new code should be given a name; that matches the name of the installed code (e.g. if the code will; be installed as \module{newcode}, the directory containing the code; should be named \file{newcode}). New executable modules must be; placed in \shellvar{\$PSI4}\file{/src/bin} and libraries in; \shellvar{\$PSI4}\file{/src/lib} of the user's working copy. \item The Makefile should be converted to an input file for the; configure script (\file{Makefile.in} --- see any of the current; \PSIfour\ binaries for an example) and should follow the; conventions set up in all of the current \PSIfour\; \file{Makefiles}. This includes use of \file{MakeVars} and; \file{MakeRules}. \item New binaries should be added to the list contained in; \shellvar{\$PSI4}\file{/src/bin/Makefile.in} so that they will be; compiled automatically when a full compilation of the \PSIfour\; distribution occurs. This step is included in the sequence below. \item A documentation page should be included with the new code (see; section \ref{Docum",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:10496,Deployability,install,installed,10496,"ed in to the main repository (as; well as the new file in the second situation). SVN requires that you include a comment on your changes. However,; unlike CVS, SVN prefers that you put your comments on the command-line; rather than editing a text file. I prefer the CVS way, but this is a; minor pain compared to all the advantages of SVN, in my opinion. \subsection{Adding entirely new code to the main \PSIfour\ repository} ; \label{checkin_new}. If the programmer is adding a new executable module or library to the; \PSIfour\ repository, a number of important conventions should be followed:. \begin{enumerate}; \item Since such changes almost always involve additional functionality,; new modules or libraries should be added only on the main SVN trunk.; See section \ref{section:branches} for additional information. \item The directory containing the new code should be given a name; that matches the name of the installed code (e.g. if the code will; be installed as \module{newcode}, the directory containing the code; should be named \file{newcode}). New executable modules must be; placed in \shellvar{\$PSI4}\file{/src/bin} and libraries in; \shellvar{\$PSI4}\file{/src/lib} of the user's working copy. \item The Makefile should be converted to an input file for the; configure script (\file{Makefile.in} --- see any of the current; \PSIfour\ binaries for an example) and should follow the; conventions set up in all of the current \PSIfour\; \file{Makefiles}. This includes use of \file{MakeVars} and; \file{MakeRules}. \item New binaries should be added to the list contained in; \shellvar{\$PSI4}\file{/src/bin/Makefile.in} so that they will be; compiled automatically when a full compilation of the \PSIfour\; distribution occurs. This step is included in the sequence below. \item A documentation page should be included with the new code (see; section \ref{Documentation} for more information). As a general; rule, if the code is not ready to have a documentation page, it is; not r",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:11545,Deployability,install,installed,11545,"as \module{newcode}, the directory containing the code; should be named \file{newcode}). New executable modules must be; placed in \shellvar{\$PSI4}\file{/src/bin} and libraries in; \shellvar{\$PSI4}\file{/src/lib} of the user's working copy. \item The Makefile should be converted to an input file for the; configure script (\file{Makefile.in} --- see any of the current; \PSIfour\ binaries for an example) and should follow the; conventions set up in all of the current \PSIfour\; \file{Makefiles}. This includes use of \file{MakeVars} and; \file{MakeRules}. \item New binaries should be added to the list contained in; \shellvar{\$PSI4}\file{/src/bin/Makefile.in} so that they will be; compiled automatically when a full compilation of the \PSIfour\; distribution occurs. This step is included in the sequence below. \item A documentation page should be included with the new code (see; section \ref{Documentation} for more information). As a general; rule, if the code is not ready to have a documentation page, it is; not ready to be installed in \PSIfour. \item The \file{configure.ac} file must be altered so that users may; check out copies of the new code and so that the \file{configure}; script will know to create the Makefile for the new code. These; steps are included in the sequence below. \end{enumerate}. Assume the new code is an executable module and is named; \module{great\_code}. The directory containing the new code must; contain only those files which are to be checked in to the repository!; Then the following steps will check in a new piece of code to the main; repository:. \begin{enumerate}; \item {\tt cd \$PSI4/src/bin}; \item {\tt svn add great\_code}; \item {\tt svn ci -m ``Put comments here.''}; \item {\tt cd \$PSI4}; \item Edit \file{configure.ac} and add \file{great\_code} to the list. ; \item {\tt svn ci configure.ac -m ``Put comments here.''}; \item {\tt autoconf} ; \item {\tt cd \$PSI4/src/bin} ; \item Edit \file{Makefile.in} and add \file{great\_code} t",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:13037,Deployability,update,update,13037," great\_code}; \item {\tt svn ci -m ``Put comments here.''}; \item {\tt cd \$PSI4}; \item Edit \file{configure.ac} and add \file{great\_code} to the list. ; \item {\tt svn ci configure.ac -m ``Put comments here.''}; \item {\tt autoconf} ; \item {\tt cd \$PSI4/src/bin} ; \item Edit \file{Makefile.in} and add \file{great\_code} to the list. ; \item {\tt svn ci Makefile.in -m ``Put comments here.''}; \end{enumerate}; At this point, all of the code has been properly checked in, but you; should also test to make sure that the code can be checked out by; other programmers, and that it will compile correctly. The following; steps will store your personal version of the code, check out the new; code, and test-compile it:; \begin{enumerate}; \item {\tt cd \$PSI4/src/bin}; \item {\tt mv great\_code great\_code.bak}; \item {\tt cd \$PSI4/..}; \item {\tt svn update}; \item {\tt cd \$objdir}; \item {\tt \$PSI4/configure -}{\tt -prefix=\$prefix}; \item {\tt cd src/bin/great\_code}; \item {\tt make install}; \end{enumerate}; (Note that \$prefix and \$objdir to the installation and compilation; directories defined in the \PSIfour\ installation instructions.); Your original version of the code remains under \file{great\_code.bak},; but should be no longer necessary if the above steps work. Note that it is; necessary to re-run \file{configure} explicitly, instead of just running; \file{config.status}, because the latter contains no information about; the new code. \subsection{Updating checked out code}. If the code in the main repository has been altered, other users' working; copies will of course not automatically be updated. In general, it is; only necessary to execute the following steps in order to completely update; your working copy of the code:. \begin{enumerate}; \item {\tt cd \$PSI4}; \item {\tt svn update}; \end{enumerate}. This will examine each entry in your working copy and compare it to; the most recent version in the main repository. When the file in the; main reposit",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:13177,Deployability,install,install,13177," great\_code}; \item {\tt svn ci -m ``Put comments here.''}; \item {\tt cd \$PSI4}; \item Edit \file{configure.ac} and add \file{great\_code} to the list. ; \item {\tt svn ci configure.ac -m ``Put comments here.''}; \item {\tt autoconf} ; \item {\tt cd \$PSI4/src/bin} ; \item Edit \file{Makefile.in} and add \file{great\_code} to the list. ; \item {\tt svn ci Makefile.in -m ``Put comments here.''}; \end{enumerate}; At this point, all of the code has been properly checked in, but you; should also test to make sure that the code can be checked out by; other programmers, and that it will compile correctly. The following; steps will store your personal version of the code, check out the new; code, and test-compile it:; \begin{enumerate}; \item {\tt cd \$PSI4/src/bin}; \item {\tt mv great\_code great\_code.bak}; \item {\tt cd \$PSI4/..}; \item {\tt svn update}; \item {\tt cd \$objdir}; \item {\tt \$PSI4/configure -}{\tt -prefix=\$prefix}; \item {\tt cd src/bin/great\_code}; \item {\tt make install}; \end{enumerate}; (Note that \$prefix and \$objdir to the installation and compilation; directories defined in the \PSIfour\ installation instructions.); Your original version of the code remains under \file{great\_code.bak},; but should be no longer necessary if the above steps work. Note that it is; necessary to re-run \file{configure} explicitly, instead of just running; \file{config.status}, because the latter contains no information about; the new code. \subsection{Updating checked out code}. If the code in the main repository has been altered, other users' working; copies will of course not automatically be updated. In general, it is; only necessary to execute the following steps in order to completely update; your working copy of the code:. \begin{enumerate}; \item {\tt cd \$PSI4}; \item {\tt svn update}; \end{enumerate}. This will examine each entry in your working copy and compare it to; the most recent version in the main repository. When the file in the; main reposit",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:13244,Deployability,install,installation,13244," great\_code}; \item {\tt svn ci -m ``Put comments here.''}; \item {\tt cd \$PSI4}; \item Edit \file{configure.ac} and add \file{great\_code} to the list. ; \item {\tt svn ci configure.ac -m ``Put comments here.''}; \item {\tt autoconf} ; \item {\tt cd \$PSI4/src/bin} ; \item Edit \file{Makefile.in} and add \file{great\_code} to the list. ; \item {\tt svn ci Makefile.in -m ``Put comments here.''}; \end{enumerate}; At this point, all of the code has been properly checked in, but you; should also test to make sure that the code can be checked out by; other programmers, and that it will compile correctly. The following; steps will store your personal version of the code, check out the new; code, and test-compile it:; \begin{enumerate}; \item {\tt cd \$PSI4/src/bin}; \item {\tt mv great\_code great\_code.bak}; \item {\tt cd \$PSI4/..}; \item {\tt svn update}; \item {\tt cd \$objdir}; \item {\tt \$PSI4/configure -}{\tt -prefix=\$prefix}; \item {\tt cd src/bin/great\_code}; \item {\tt make install}; \end{enumerate}; (Note that \$prefix and \$objdir to the installation and compilation; directories defined in the \PSIfour\ installation instructions.); Your original version of the code remains under \file{great\_code.bak},; but should be no longer necessary if the above steps work. Note that it is; necessary to re-run \file{configure} explicitly, instead of just running; \file{config.status}, because the latter contains no information about; the new code. \subsection{Updating checked out code}. If the code in the main repository has been altered, other users' working; copies will of course not automatically be updated. In general, it is; only necessary to execute the following steps in order to completely update; your working copy of the code:. \begin{enumerate}; \item {\tt cd \$PSI4}; \item {\tt svn update}; \end{enumerate}. This will examine each entry in your working copy and compare it to; the most recent version in the main repository. When the file in the; main reposit",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:13311,Deployability,install,installation,13311," great\_code}; \item {\tt svn ci -m ``Put comments here.''}; \item {\tt cd \$PSI4}; \item Edit \file{configure.ac} and add \file{great\_code} to the list. ; \item {\tt svn ci configure.ac -m ``Put comments here.''}; \item {\tt autoconf} ; \item {\tt cd \$PSI4/src/bin} ; \item Edit \file{Makefile.in} and add \file{great\_code} to the list. ; \item {\tt svn ci Makefile.in -m ``Put comments here.''}; \end{enumerate}; At this point, all of the code has been properly checked in, but you; should also test to make sure that the code can be checked out by; other programmers, and that it will compile correctly. The following; steps will store your personal version of the code, check out the new; code, and test-compile it:; \begin{enumerate}; \item {\tt cd \$PSI4/src/bin}; \item {\tt mv great\_code great\_code.bak}; \item {\tt cd \$PSI4/..}; \item {\tt svn update}; \item {\tt cd \$objdir}; \item {\tt \$PSI4/configure -}{\tt -prefix=\$prefix}; \item {\tt cd src/bin/great\_code}; \item {\tt make install}; \end{enumerate}; (Note that \$prefix and \$objdir to the installation and compilation; directories defined in the \PSIfour\ installation instructions.); Your original version of the code remains under \file{great\_code.bak},; but should be no longer necessary if the above steps work. Note that it is; necessary to re-run \file{configure} explicitly, instead of just running; \file{config.status}, because the latter contains no information about; the new code. \subsection{Updating checked out code}. If the code in the main repository has been altered, other users' working; copies will of course not automatically be updated. In general, it is; only necessary to execute the following steps in order to completely update; your working copy of the code:. \begin{enumerate}; \item {\tt cd \$PSI4}; \item {\tt svn update}; \end{enumerate}. This will examine each entry in your working copy and compare it to; the most recent version in the main repository. When the file in the; main reposit",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:13807,Deployability,update,updated,13807," and that it will compile correctly. The following; steps will store your personal version of the code, check out the new; code, and test-compile it:; \begin{enumerate}; \item {\tt cd \$PSI4/src/bin}; \item {\tt mv great\_code great\_code.bak}; \item {\tt cd \$PSI4/..}; \item {\tt svn update}; \item {\tt cd \$objdir}; \item {\tt \$PSI4/configure -}{\tt -prefix=\$prefix}; \item {\tt cd src/bin/great\_code}; \item {\tt make install}; \end{enumerate}; (Note that \$prefix and \$objdir to the installation and compilation; directories defined in the \PSIfour\ installation instructions.); Your original version of the code remains under \file{great\_code.bak},; but should be no longer necessary if the above steps work. Note that it is; necessary to re-run \file{configure} explicitly, instead of just running; \file{config.status}, because the latter contains no information about; the new code. \subsection{Updating checked out code}. If the code in the main repository has been altered, other users' working; copies will of course not automatically be updated. In general, it is; only necessary to execute the following steps in order to completely update; your working copy of the code:. \begin{enumerate}; \item {\tt cd \$PSI4}; \item {\tt svn update}; \end{enumerate}. This will examine each entry in your working copy and compare it to; the most recent version in the main repository. When the file in the; main repository is more recent, your version of the code will be; updated. If you have made changes to your version, but the version in; the main repository has not changed, the altered code will be; identified to you with an ``M''. If you have made changes to your; version of the code, and one or more newer versions have been updated; in the main repository, SVN will examine the two versions and attempt; to merge them -- this process often reveals conflicts, however, and is; sometimes unsuccessful. You will be notified of any conflicts that; arise (labelled with a ``C'') and you",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:13904,Deployability,update,update,13904," and test-compile it:; \begin{enumerate}; \item {\tt cd \$PSI4/src/bin}; \item {\tt mv great\_code great\_code.bak}; \item {\tt cd \$PSI4/..}; \item {\tt svn update}; \item {\tt cd \$objdir}; \item {\tt \$PSI4/configure -}{\tt -prefix=\$prefix}; \item {\tt cd src/bin/great\_code}; \item {\tt make install}; \end{enumerate}; (Note that \$prefix and \$objdir to the installation and compilation; directories defined in the \PSIfour\ installation instructions.); Your original version of the code remains under \file{great\_code.bak},; but should be no longer necessary if the above steps work. Note that it is; necessary to re-run \file{configure} explicitly, instead of just running; \file{config.status}, because the latter contains no information about; the new code. \subsection{Updating checked out code}. If the code in the main repository has been altered, other users' working; copies will of course not automatically be updated. In general, it is; only necessary to execute the following steps in order to completely update; your working copy of the code:. \begin{enumerate}; \item {\tt cd \$PSI4}; \item {\tt svn update}; \end{enumerate}. This will examine each entry in your working copy and compare it to; the most recent version in the main repository. When the file in the; main repository is more recent, your version of the code will be; updated. If you have made changes to your version, but the version in; the main repository has not changed, the altered code will be; identified to you with an ``M''. If you have made changes to your; version of the code, and one or more newer versions have been updated; in the main repository, SVN will examine the two versions and attempt; to merge them -- this process often reveals conflicts, however, and is; sometimes unsuccessful. You will be notified of any conflicts that; arise (labelled with a ``C'') and you must resolve them manually. If new directories have been added to the repository, the update above; will automatically add the",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:14001,Deployability,update,update,14001,"_code.bak}; \item {\tt cd \$PSI4/..}; \item {\tt svn update}; \item {\tt cd \$objdir}; \item {\tt \$PSI4/configure -}{\tt -prefix=\$prefix}; \item {\tt cd src/bin/great\_code}; \item {\tt make install}; \end{enumerate}; (Note that \$prefix and \$objdir to the installation and compilation; directories defined in the \PSIfour\ installation instructions.); Your original version of the code remains under \file{great\_code.bak},; but should be no longer necessary if the above steps work. Note that it is; necessary to re-run \file{configure} explicitly, instead of just running; \file{config.status}, because the latter contains no information about; the new code. \subsection{Updating checked out code}. If the code in the main repository has been altered, other users' working; copies will of course not automatically be updated. In general, it is; only necessary to execute the following steps in order to completely update; your working copy of the code:. \begin{enumerate}; \item {\tt cd \$PSI4}; \item {\tt svn update}; \end{enumerate}. This will examine each entry in your working copy and compare it to; the most recent version in the main repository. When the file in the; main repository is more recent, your version of the code will be; updated. If you have made changes to your version, but the version in; the main repository has not changed, the altered code will be; identified to you with an ``M''. If you have made changes to your; version of the code, and one or more newer versions have been updated; in the main repository, SVN will examine the two versions and attempt; to merge them -- this process often reveals conflicts, however, and is; sometimes unsuccessful. You will be notified of any conflicts that; arise (labelled with a ``C'') and you must resolve them manually. If new directories have been added to the repository, the update above; will automatically add them to your working copy. However, you may; need to re-run {\tt autoconf} and configure ({\tt; \$objdir/conf",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:14232,Deployability,update,updated,14232,"{enumerate}; (Note that \$prefix and \$objdir to the installation and compilation; directories defined in the \PSIfour\ installation instructions.); Your original version of the code remains under \file{great\_code.bak},; but should be no longer necessary if the above steps work. Note that it is; necessary to re-run \file{configure} explicitly, instead of just running; \file{config.status}, because the latter contains no information about; the new code. \subsection{Updating checked out code}. If the code in the main repository has been altered, other users' working; copies will of course not automatically be updated. In general, it is; only necessary to execute the following steps in order to completely update; your working copy of the code:. \begin{enumerate}; \item {\tt cd \$PSI4}; \item {\tt svn update}; \end{enumerate}. This will examine each entry in your working copy and compare it to; the most recent version in the main repository. When the file in the; main repository is more recent, your version of the code will be; updated. If you have made changes to your version, but the version in; the main repository has not changed, the altered code will be; identified to you with an ``M''. If you have made changes to your; version of the code, and one or more newer versions have been updated; in the main repository, SVN will examine the two versions and attempt; to merge them -- this process often reveals conflicts, however, and is; sometimes unsuccessful. You will be notified of any conflicts that; arise (labelled with a ``C'') and you must resolve them manually. If new directories have been added to the repository, the update above; will automatically add them to your working copy. However, you may; need to re-run {\tt autoconf} and configure ({\tt; \$objdir/config.status --recheck} is a convenient command) to be; able to build the new code. \subsection{Removing code from the repository}; If alterations of libraries or binaries under Psi involves the deletion of ; s",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:14495,Deployability,update,updated,14495,"ly, instead of just running; \file{config.status}, because the latter contains no information about; the new code. \subsection{Updating checked out code}. If the code in the main repository has been altered, other users' working; copies will of course not automatically be updated. In general, it is; only necessary to execute the following steps in order to completely update; your working copy of the code:. \begin{enumerate}; \item {\tt cd \$PSI4}; \item {\tt svn update}; \end{enumerate}. This will examine each entry in your working copy and compare it to; the most recent version in the main repository. When the file in the; main repository is more recent, your version of the code will be; updated. If you have made changes to your version, but the version in; the main repository has not changed, the altered code will be; identified to you with an ``M''. If you have made changes to your; version of the code, and one or more newer versions have been updated; in the main repository, SVN will examine the two versions and attempt; to merge them -- this process often reveals conflicts, however, and is; sometimes unsuccessful. You will be notified of any conflicts that; arise (labelled with a ``C'') and you must resolve them manually. If new directories have been added to the repository, the update above; will automatically add them to your working copy. However, you may; need to re-run {\tt autoconf} and configure ({\tt; \$objdir/config.status --recheck} is a convenient command) to be; able to build the new code. \subsection{Removing code from the repository}; If alterations of libraries or binaries under Psi involves the deletion of ; source code files from the code, these must be explicitly removed through SVN. The following steps will remove a source code file named \file{bad\_code.F} ; from a binary module named \module{great\_code}:; \begin{enumerate}; \item {\tt cd \$PSI4/src/bin/great\_code}; \item {\tt svn remove bad\_code.F}; \item {\tt svn ci -m ``Put comments he",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:14839,Deployability,update,update,14839,"ecessary to execute the following steps in order to completely update; your working copy of the code:. \begin{enumerate}; \item {\tt cd \$PSI4}; \item {\tt svn update}; \end{enumerate}. This will examine each entry in your working copy and compare it to; the most recent version in the main repository. When the file in the; main repository is more recent, your version of the code will be; updated. If you have made changes to your version, but the version in; the main repository has not changed, the altered code will be; identified to you with an ``M''. If you have made changes to your; version of the code, and one or more newer versions have been updated; in the main repository, SVN will examine the two versions and attempt; to merge them -- this process often reveals conflicts, however, and is; sometimes unsuccessful. You will be notified of any conflicts that; arise (labelled with a ``C'') and you must resolve them manually. If new directories have been added to the repository, the update above; will automatically add them to your working copy. However, you may; need to re-run {\tt autoconf} and configure ({\tt; \$objdir/config.status --recheck} is a convenient command) to be; able to build the new code. \subsection{Removing code from the repository}; If alterations of libraries or binaries under Psi involves the deletion of ; source code files from the code, these must be explicitly removed through SVN. The following steps will remove a source code file named \file{bad\_code.F} ; from a binary module named \module{great\_code}:; \begin{enumerate}; \item {\tt cd \$PSI4/src/bin/great\_code}; \item {\tt svn remove bad\_code.F}; \item {\tt svn ci -m ``Put comments here.''}; \end{enumerate}. \subsection{Checking out older versions of the code}; It is sometimes necessary to check out older versions of a piece of code.; Assume we wish to check out an old version of \PSIdetci. If this; is the case, the following steps will do this:; \begin{enumerate}; \item {\tt cd \$PSI4",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:17128,Deployability,install,installed,17128,"es have been; made to the code. Anytime one checks in a new version of a file, SVN; requires the user to provide comments on the changes with the {\tt -m}; flag. These comments go into a log information that may be easily; accessed through SVN. To see what changes have been made recently to; the file \file{detci.cc}, one would go into the \file{detci} source; directory and type; \begin{verbatim}; svn log detci.cc; \end{verbatim}; Checking the log files is a very useful way to see what recent changes might ; be causing new problems with the code. \subsection{The structure of the \PSIfour\ Source Tree}; \label{psitree} . Your working copy of the \PSIfour\ source code includes a number of; important subdirectories:. \begin{itemize}; \item \shellvar{\$PSI4}\file{/lib} -- Source files for; OS-independent ``library'' data. This includes the main basis set; data file (\file{pbasis.dat}) and the \PSIfour\ program execution; control file (\file{psi.dat}), among others. These files are; installed in \file{\$prefix/share}. \item \shellvar{\$PSI4}\file{/include} -- Source files for; OS-independent header files, including \file{physconst.h} (whose; contents should be obvious from its name), \file{psifiles.h}, and; \file{ccfiles.h}, among others. These files are installed in; \$prefix/include. \item \shellvar{\$PSI4}\file{/src/util} -- Source code for the utility; program \module{tocprint}. (Note that the \module{tmpl} module is; no longer used and will eventually disappear.). \item \shellvar{\$PSI4}\file{/src/lib} -- Source code for the; libraries, including \library{libpsio}, \library{libipv1},; \library{libchkpt}, etc. The include files from the library; source are used directly during the compilation of PSI to ; avoid problems associated with incomplete installations. Some; include files are architecture-dependent and go in an include; subdirectory of the compilation (object) directory. \item \shellvar{\$PSI4}\file{/src/bin} -- Source code for the; executable modules.; \end{it",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:17405,Deployability,install,installed,17405,"ade recently to; the file \file{detci.cc}, one would go into the \file{detci} source; directory and type; \begin{verbatim}; svn log detci.cc; \end{verbatim}; Checking the log files is a very useful way to see what recent changes might ; be causing new problems with the code. \subsection{The structure of the \PSIfour\ Source Tree}; \label{psitree} . Your working copy of the \PSIfour\ source code includes a number of; important subdirectories:. \begin{itemize}; \item \shellvar{\$PSI4}\file{/lib} -- Source files for; OS-independent ``library'' data. This includes the main basis set; data file (\file{pbasis.dat}) and the \PSIfour\ program execution; control file (\file{psi.dat}), among others. These files are; installed in \file{\$prefix/share}. \item \shellvar{\$PSI4}\file{/include} -- Source files for; OS-independent header files, including \file{physconst.h} (whose; contents should be obvious from its name), \file{psifiles.h}, and; \file{ccfiles.h}, among others. These files are installed in; \$prefix/include. \item \shellvar{\$PSI4}\file{/src/util} -- Source code for the utility; program \module{tocprint}. (Note that the \module{tmpl} module is; no longer used and will eventually disappear.). \item \shellvar{\$PSI4}\file{/src/lib} -- Source code for the; libraries, including \library{libpsio}, \library{libipv1},; \library{libchkpt}, etc. The include files from the library; source are used directly during the compilation of PSI to ; avoid problems associated with incomplete installations. Some; include files are architecture-dependent and go in an include; subdirectory of the compilation (object) directory. \item \shellvar{\$PSI4}\file{/src/bin} -- Source code for the; executable modules.; \end{itemize}. After compilation and installation, the \file{\$prefix} directory; contains the executable codes and other necessary files. {\bf NB:}; The files in this area should never be directly modified; rather, the; working copy should be modified and the \PSIfour\ \file{Makef",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:17910,Deployability,install,installations,17910,"rectories:. \begin{itemize}; \item \shellvar{\$PSI4}\file{/lib} -- Source files for; OS-independent ``library'' data. This includes the main basis set; data file (\file{pbasis.dat}) and the \PSIfour\ program execution; control file (\file{psi.dat}), among others. These files are; installed in \file{\$prefix/share}. \item \shellvar{\$PSI4}\file{/include} -- Source files for; OS-independent header files, including \file{physconst.h} (whose; contents should be obvious from its name), \file{psifiles.h}, and; \file{ccfiles.h}, among others. These files are installed in; \$prefix/include. \item \shellvar{\$PSI4}\file{/src/util} -- Source code for the utility; program \module{tocprint}. (Note that the \module{tmpl} module is; no longer used and will eventually disappear.). \item \shellvar{\$PSI4}\file{/src/lib} -- Source code for the; libraries, including \library{libpsio}, \library{libipv1},; \library{libchkpt}, etc. The include files from the library; source are used directly during the compilation of PSI to ; avoid problems associated with incomplete installations. Some; include files are architecture-dependent and go in an include; subdirectory of the compilation (object) directory. \item \shellvar{\$PSI4}\file{/src/bin} -- Source code for the; executable modules.; \end{itemize}. After compilation and installation, the \file{\$prefix} directory; contains the executable codes and other necessary files. {\bf NB:}; The files in this area should never be directly modified; rather, the; working copy should be modified and the \PSIfour\ \file{Makefile}; hierarchy should handle installation of any changes. The structure of; the installation area is:. \begin{itemize}; \item \file{\$prefix/bin} -- The main executable directory. This; directory must be in your path in order for the driver program,; \module{PSI4}, to find the modules. \item \file{\$prefix/lib} -- The \PSIfour\ code libraries. (NB: The; description of \PSIfour\ \file{Makefiles} later in this manual will; explain ho",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:18167,Deployability,install,installation,18167,"Source files for; OS-independent header files, including \file{physconst.h} (whose; contents should be obvious from its name), \file{psifiles.h}, and; \file{ccfiles.h}, among others. These files are installed in; \$prefix/include. \item \shellvar{\$PSI4}\file{/src/util} -- Source code for the utility; program \module{tocprint}. (Note that the \module{tmpl} module is; no longer used and will eventually disappear.). \item \shellvar{\$PSI4}\file{/src/lib} -- Source code for the; libraries, including \library{libpsio}, \library{libipv1},; \library{libchkpt}, etc. The include files from the library; source are used directly during the compilation of PSI to ; avoid problems associated with incomplete installations. Some; include files are architecture-dependent and go in an include; subdirectory of the compilation (object) directory. \item \shellvar{\$PSI4}\file{/src/bin} -- Source code for the; executable modules.; \end{itemize}. After compilation and installation, the \file{\$prefix} directory; contains the executable codes and other necessary files. {\bf NB:}; The files in this area should never be directly modified; rather, the; working copy should be modified and the \PSIfour\ \file{Makefile}; hierarchy should handle installation of any changes. The structure of; the installation area is:. \begin{itemize}; \item \file{\$prefix/bin} -- The main executable directory. This; directory must be in your path in order for the driver program,; \module{PSI4}, to find the modules. \item \file{\$prefix/lib} -- The \PSIfour\ code libraries. (NB: The; description of \PSIfour\ \file{Makefiles} later in this manual will; explain how to use the libraries.). \item \file{\$prefix/include} -- Header files. These are not actually; used during the compilation of PSI but are useful for inclusion by; external programs because they are all in the same directory. \item \file{\$prefix/share} -- OS-independent data files, including; basis set information. (Do not edit this file directly; any ch",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:18442,Deployability,install,installation,18442,"s.h}, among others. These files are installed in; \$prefix/include. \item \shellvar{\$PSI4}\file{/src/util} -- Source code for the utility; program \module{tocprint}. (Note that the \module{tmpl} module is; no longer used and will eventually disappear.). \item \shellvar{\$PSI4}\file{/src/lib} -- Source code for the; libraries, including \library{libpsio}, \library{libipv1},; \library{libchkpt}, etc. The include files from the library; source are used directly during the compilation of PSI to ; avoid problems associated with incomplete installations. Some; include files are architecture-dependent and go in an include; subdirectory of the compilation (object) directory. \item \shellvar{\$PSI4}\file{/src/bin} -- Source code for the; executable modules.; \end{itemize}. After compilation and installation, the \file{\$prefix} directory; contains the executable codes and other necessary files. {\bf NB:}; The files in this area should never be directly modified; rather, the; working copy should be modified and the \PSIfour\ \file{Makefile}; hierarchy should handle installation of any changes. The structure of; the installation area is:. \begin{itemize}; \item \file{\$prefix/bin} -- The main executable directory. This; directory must be in your path in order for the driver program,; \module{PSI4}, to find the modules. \item \file{\$prefix/lib} -- The \PSIfour\ code libraries. (NB: The; description of \PSIfour\ \file{Makefiles} later in this manual will; explain how to use the libraries.). \item \file{\$prefix/include} -- Header files. These are not actually; used during the compilation of PSI but are useful for inclusion by; external programs because they are all in the same directory. \item \file{\$prefix/share} -- OS-independent data files, including; basis set information. (Do not edit this file directly; any changes; you make can be overwritten by subsequent {\tt make} commands.). \item \file{\$prefix/doc} -- \PSIfour\ documentation, including; installation, programmer, ",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:18493,Deployability,install,installation,18493,"e installed in; \$prefix/include. \item \shellvar{\$PSI4}\file{/src/util} -- Source code for the utility; program \module{tocprint}. (Note that the \module{tmpl} module is; no longer used and will eventually disappear.). \item \shellvar{\$PSI4}\file{/src/lib} -- Source code for the; libraries, including \library{libpsio}, \library{libipv1},; \library{libchkpt}, etc. The include files from the library; source are used directly during the compilation of PSI to ; avoid problems associated with incomplete installations. Some; include files are architecture-dependent and go in an include; subdirectory of the compilation (object) directory. \item \shellvar{\$PSI4}\file{/src/bin} -- Source code for the; executable modules.; \end{itemize}. After compilation and installation, the \file{\$prefix} directory; contains the executable codes and other necessary files. {\bf NB:}; The files in this area should never be directly modified; rather, the; working copy should be modified and the \PSIfour\ \file{Makefile}; hierarchy should handle installation of any changes. The structure of; the installation area is:. \begin{itemize}; \item \file{\$prefix/bin} -- The main executable directory. This; directory must be in your path in order for the driver program,; \module{PSI4}, to find the modules. \item \file{\$prefix/lib} -- The \PSIfour\ code libraries. (NB: The; description of \PSIfour\ \file{Makefiles} later in this manual will; explain how to use the libraries.). \item \file{\$prefix/include} -- Header files. These are not actually; used during the compilation of PSI but are useful for inclusion by; external programs because they are all in the same directory. \item \file{\$prefix/share} -- OS-independent data files, including; basis set information. (Do not edit this file directly; any changes; you make can be overwritten by subsequent {\tt make} commands.). \item \file{\$prefix/doc} -- \PSIfour\ documentation, including; installation, programmer, and user manuals.; \end{itemize}. ",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:19343,Deployability,install,installation,19343,"e installed in; \$prefix/include. \item \shellvar{\$PSI4}\file{/src/util} -- Source code for the utility; program \module{tocprint}. (Note that the \module{tmpl} module is; no longer used and will eventually disappear.). \item \shellvar{\$PSI4}\file{/src/lib} -- Source code for the; libraries, including \library{libpsio}, \library{libipv1},; \library{libchkpt}, etc. The include files from the library; source are used directly during the compilation of PSI to ; avoid problems associated with incomplete installations. Some; include files are architecture-dependent and go in an include; subdirectory of the compilation (object) directory. \item \shellvar{\$PSI4}\file{/src/bin} -- Source code for the; executable modules.; \end{itemize}. After compilation and installation, the \file{\$prefix} directory; contains the executable codes and other necessary files. {\bf NB:}; The files in this area should never be directly modified; rather, the; working copy should be modified and the \PSIfour\ \file{Makefile}; hierarchy should handle installation of any changes. The structure of; the installation area is:. \begin{itemize}; \item \file{\$prefix/bin} -- The main executable directory. This; directory must be in your path in order for the driver program,; \module{PSI4}, to find the modules. \item \file{\$prefix/lib} -- The \PSIfour\ code libraries. (NB: The; description of \PSIfour\ \file{Makefiles} later in this manual will; explain how to use the libraries.). \item \file{\$prefix/include} -- Header files. These are not actually; used during the compilation of PSI but are useful for inclusion by; external programs because they are all in the same directory. \item \file{\$prefix/share} -- OS-independent data files, including; basis set information. (Do not edit this file directly; any changes; you make can be overwritten by subsequent {\tt make} commands.). \item \file{\$prefix/doc} -- \PSIfour\ documentation, including; installation, programmer, and user manuals.; \end{itemize}. ",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:2164,Integrability,depend,depends,2164,"o access; the repository via a secure, SSL-based WebDAV connection, but first; you must decide which version of the code you need. The \PSIfour\ SVN repository contains three top-level directories:; \begin{itemize}; \item {\tt trunk}: The main development area.; \item {\tt branches}: Release branches and private development; branches are stored here.; \item {\tt tags:} Snapshots of the repository corresponding to public; releases are stored here and should {\em never} be modified.; \end{itemize}; If you have a PSI4 SVN account, you can peruse these directories if; you like by pointing web browser to:. \noindent; {\tt https://sirius.chem.vt.edu/svn/psi4/}. \subsection{\PSIfour\ SVN Policies: Which Branch Should I Use?}; \label{section:branches}. The \PSIfour\ repository comprises a main trunk and several; release branches. The branch you should use depends on the sort of ; work you plan for the codes:; \begin{enumerate}; \item For any piece of code already in the most recent release, bug; fixes (defined as anything that doesn't add functionality ---; including documentation updates) should be made {\em only} on the; most recent stable release branch.; \item The main trunk is reserved for development of new functionality.; This allows us to keep new, possibly unstable code away from public; access until the code is ready.; \item Code that you do not want to put into next major release of; \PSIfour\ should be put onto a separate branch off the main; trunk. You will be solely responsible for maintenance of the new; branch, so you should read the SVN manual before attempting this.; \end{enumerate}. \noindent Fig.~\ref{Fig:svn} provides a schematic of the SVN revision-control; structure and branch labeling. Two release branches are shown, the current; stable branch, named {\tt psi-3-4}, and a planned future release, to be named; {\tt psi-3-5}. The tags on the branches indicate release shapshots, where; bugs have been fixed and the code has been or will be exported for pub",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:4056,Integrability,depend,depends,4056,"{\tt psi-3-5}. The tags on the branches indicate release shapshots, where; bugs have been fixed and the code has been or will be exported for public; distribution. The dotted lines in the figure indicate merge points: just; prior to each public release, changes made to the code on the stable release; branch will be merged into the main trunk. \begin{figure}[h]; \begin{center}; \epsfig{file=svn/svn.eps,height=6.5cm}; \end{center}; \caption{\PSIfour\ SVN branch structure with examples of branch- and; release-tag labelling.}; \label{Fig:svn}; \end{figure}. \noindent A frequently encountered problem is what to do about bug fixes; that are necessary for uninterrupted code development of the code on the; main trunk. As Rule 1 of the above policy states, all bug fixes of the code; already in the recent stable release must go on the corresponding branch,; not on the main trunk. The next step depends on the severity of the bug:; \begin{enumerate}; \item If the bug fix is critical and potentially affects every; developer of the code on the main trunk, then \PSIfour\; administrators should be notified of the fix. If deemed necessary,; appropriate steps to create a new patch release will be made. Once; the next patch release is created then the bug fixes will be merged; onto the main trunk. If the bug fix doesn't warrant an immediate; new patch release, then you can incorporate the bug fix into your; local copy of the main trunk code manually or using SVN merge; features. This will allow you to continue development until next; patch release is created and the bug fix is incorporated into the; main trunk code in the repository. However you should {\em never}; merge such changes into the main trunk yourself.; \item If the bug fix is not critical (e.g. a documentation; update/fix), then you should wait until next patch release when it; will be merged into the main trunk automatically.; \end{enumerate}. \noindent; The following are some of the most commonly used SVN commands for che",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:17962,Integrability,depend,dependent,17962,"ain basis set; data file (\file{pbasis.dat}) and the \PSIfour\ program execution; control file (\file{psi.dat}), among others. These files are; installed in \file{\$prefix/share}. \item \shellvar{\$PSI4}\file{/include} -- Source files for; OS-independent header files, including \file{physconst.h} (whose; contents should be obvious from its name), \file{psifiles.h}, and; \file{ccfiles.h}, among others. These files are installed in; \$prefix/include. \item \shellvar{\$PSI4}\file{/src/util} -- Source code for the utility; program \module{tocprint}. (Note that the \module{tmpl} module is; no longer used and will eventually disappear.). \item \shellvar{\$PSI4}\file{/src/lib} -- Source code for the; libraries, including \library{libpsio}, \library{libipv1},; \library{libchkpt}, etc. The include files from the library; source are used directly during the compilation of PSI to ; avoid problems associated with incomplete installations. Some; include files are architecture-dependent and go in an include; subdirectory of the compilation (object) directory. \item \shellvar{\$PSI4}\file{/src/bin} -- Source code for the; executable modules.; \end{itemize}. After compilation and installation, the \file{\$prefix} directory; contains the executable codes and other necessary files. {\bf NB:}; The files in this area should never be directly modified; rather, the; working copy should be modified and the \PSIfour\ \file{Makefile}; hierarchy should handle installation of any changes. The structure of; the installation area is:. \begin{itemize}; \item \file{\$prefix/bin} -- The main executable directory. This; directory must be in your path in order for the driver program,; \module{PSI4}, to find the modules. \item \file{\$prefix/lib} -- The \PSIfour\ code libraries. (NB: The; description of \PSIfour\ \file{Makefiles} later in this manual will; explain how to use the libraries.). \item \file{\$prefix/include} -- Header files. These are not actually; used during the compilation of PSI but a",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:5841,Modifiability,config,configure,5841,"ository. However you should {\em never}; merge such changes into the main trunk yourself.; \item If the bug fix is not critical (e.g. a documentation; update/fix), then you should wait until next patch release when it; will be merged into the main trunk automatically.; \end{enumerate}. \noindent; The following are some of the most commonly used SVN commands for checking; out and updating working copies of the \PSIfour\ source code. \noindent; $\bullet$ To checkout a working copy of the head of the main trunk:. {\tt svn co https://sirius.chem.vt.edu/svn/psi4/trunk/ psi4} . \noindent; $\bullet$ To check out a working copy of the head of a specific release branch,; e.g., the branch labelled {\tt psi-4-0}:. {\tt svn co https://sirius.chem.vt.edu/svn/PSI4/branches/psi-4-0 psi4}. \noindent Note that subsequent {\tt svn update} commands in this; working copy will provide updates only on the chosen branch. Note; also that after you have checked out a fresh working copy of the code; you must run the {\tt autoconf} command to generate a {\tt configure}; script for building the code. (See the installation manual for; configuration, compilation, and testing instructions.). \noindent For each of the above commands, the working copy of your; code will be placed in the directory \file{psi4}, regardless of your; choice of branch. In this manual, we will refer to this directory; from now on as {\tt \$PSI4}. Subsequent SVN commands are usually run; within this top-level directory. \noindent; $\bullet$ To update your current working copy to include the latest revisions:. {\tt svn update}. \noindent; Notes: (a) This will update only the revisions on your current branch;; (b) The old {\tt -d} and {\tt -P} flags required by CVS are not necessary with SVN. . \noindent; $\bullet$ To convert your working copy to the head of a specific branch:. {\tt svn switch https://sirius.chem.vt.edu/svn/PSI4/branches/psi-4-0}. \noindent; $\bullet$ To convert your working copy to the head of the main trun",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:5917,Modifiability,config,configuration,5917," a documentation; update/fix), then you should wait until next patch release when it; will be merged into the main trunk automatically.; \end{enumerate}. \noindent; The following are some of the most commonly used SVN commands for checking; out and updating working copies of the \PSIfour\ source code. \noindent; $\bullet$ To checkout a working copy of the head of the main trunk:. {\tt svn co https://sirius.chem.vt.edu/svn/psi4/trunk/ psi4} . \noindent; $\bullet$ To check out a working copy of the head of a specific release branch,; e.g., the branch labelled {\tt psi-4-0}:. {\tt svn co https://sirius.chem.vt.edu/svn/PSI4/branches/psi-4-0 psi4}. \noindent Note that subsequent {\tt svn update} commands in this; working copy will provide updates only on the chosen branch. Note; also that after you have checked out a fresh working copy of the code; you must run the {\tt autoconf} command to generate a {\tt configure}; script for building the code. (See the installation manual for; configuration, compilation, and testing instructions.). \noindent For each of the above commands, the working copy of your; code will be placed in the directory \file{psi4}, regardless of your; choice of branch. In this manual, we will refer to this directory; from now on as {\tt \$PSI4}. Subsequent SVN commands are usually run; within this top-level directory. \noindent; $\bullet$ To update your current working copy to include the latest revisions:. {\tt svn update}. \noindent; Notes: (a) This will update only the revisions on your current branch;; (b) The old {\tt -d} and {\tt -P} flags required by CVS are not necessary with SVN. . \noindent; $\bullet$ To convert your working copy to the head of a specific branch:. {\tt svn switch https://sirius.chem.vt.edu/svn/PSI4/branches/psi-4-0}. \noindent; $\bullet$ To convert your working copy to the head of the main trunk:. {\tt svn switch https://sirius.chem.vt.edu/svn/psi4/trunk/}. \noindent; $\bullet$ To find out what branch your working copy is on",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:10814,Modifiability,config,configure,10814,"he CVS way, but this is a; minor pain compared to all the advantages of SVN, in my opinion. \subsection{Adding entirely new code to the main \PSIfour\ repository} ; \label{checkin_new}. If the programmer is adding a new executable module or library to the; \PSIfour\ repository, a number of important conventions should be followed:. \begin{enumerate}; \item Since such changes almost always involve additional functionality,; new modules or libraries should be added only on the main SVN trunk.; See section \ref{section:branches} for additional information. \item The directory containing the new code should be given a name; that matches the name of the installed code (e.g. if the code will; be installed as \module{newcode}, the directory containing the code; should be named \file{newcode}). New executable modules must be; placed in \shellvar{\$PSI4}\file{/src/bin} and libraries in; \shellvar{\$PSI4}\file{/src/lib} of the user's working copy. \item The Makefile should be converted to an input file for the; configure script (\file{Makefile.in} --- see any of the current; \PSIfour\ binaries for an example) and should follow the; conventions set up in all of the current \PSIfour\; \file{Makefiles}. This includes use of \file{MakeVars} and; \file{MakeRules}. \item New binaries should be added to the list contained in; \shellvar{\$PSI4}\file{/src/bin/Makefile.in} so that they will be; compiled automatically when a full compilation of the \PSIfour\; distribution occurs. This step is included in the sequence below. \item A documentation page should be included with the new code (see; section \ref{Documentation} for more information). As a general; rule, if the code is not ready to have a documentation page, it is; not ready to be installed in \PSIfour. \item The \file{configure.ac} file must be altered so that users may; check out copies of the new code and so that the \file{configure}; script will know to create the Makefile for the new code. These; steps are included in the se",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:11584,Modifiability,config,configure,11584,"ile{newcode}). New executable modules must be; placed in \shellvar{\$PSI4}\file{/src/bin} and libraries in; \shellvar{\$PSI4}\file{/src/lib} of the user's working copy. \item The Makefile should be converted to an input file for the; configure script (\file{Makefile.in} --- see any of the current; \PSIfour\ binaries for an example) and should follow the; conventions set up in all of the current \PSIfour\; \file{Makefiles}. This includes use of \file{MakeVars} and; \file{MakeRules}. \item New binaries should be added to the list contained in; \shellvar{\$PSI4}\file{/src/bin/Makefile.in} so that they will be; compiled automatically when a full compilation of the \PSIfour\; distribution occurs. This step is included in the sequence below. \item A documentation page should be included with the new code (see; section \ref{Documentation} for more information). As a general; rule, if the code is not ready to have a documentation page, it is; not ready to be installed in \PSIfour. \item The \file{configure.ac} file must be altered so that users may; check out copies of the new code and so that the \file{configure}; script will know to create the Makefile for the new code. These; steps are included in the sequence below. \end{enumerate}. Assume the new code is an executable module and is named; \module{great\_code}. The directory containing the new code must; contain only those files which are to be checked in to the repository!; Then the following steps will check in a new piece of code to the main; repository:. \begin{enumerate}; \item {\tt cd \$PSI4/src/bin}; \item {\tt svn add great\_code}; \item {\tt svn ci -m ``Put comments here.''}; \item {\tt cd \$PSI4}; \item Edit \file{configure.ac} and add \file{great\_code} to the list. ; \item {\tt svn ci configure.ac -m ``Put comments here.''}; \item {\tt autoconf} ; \item {\tt cd \$PSI4/src/bin} ; \item Edit \file{Makefile.in} and add \file{great\_code} to the list. ; \item {\tt svn ci Makefile.in -m ``Put comments here.''}; \e",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:11693,Modifiability,config,configure,11693,"aries in; \shellvar{\$PSI4}\file{/src/lib} of the user's working copy. \item The Makefile should be converted to an input file for the; configure script (\file{Makefile.in} --- see any of the current; \PSIfour\ binaries for an example) and should follow the; conventions set up in all of the current \PSIfour\; \file{Makefiles}. This includes use of \file{MakeVars} and; \file{MakeRules}. \item New binaries should be added to the list contained in; \shellvar{\$PSI4}\file{/src/bin/Makefile.in} so that they will be; compiled automatically when a full compilation of the \PSIfour\; distribution occurs. This step is included in the sequence below. \item A documentation page should be included with the new code (see; section \ref{Documentation} for more information). As a general; rule, if the code is not ready to have a documentation page, it is; not ready to be installed in \PSIfour. \item The \file{configure.ac} file must be altered so that users may; check out copies of the new code and so that the \file{configure}; script will know to create the Makefile for the new code. These; steps are included in the sequence below. \end{enumerate}. Assume the new code is an executable module and is named; \module{great\_code}. The directory containing the new code must; contain only those files which are to be checked in to the repository!; Then the following steps will check in a new piece of code to the main; repository:. \begin{enumerate}; \item {\tt cd \$PSI4/src/bin}; \item {\tt svn add great\_code}; \item {\tt svn ci -m ``Put comments here.''}; \item {\tt cd \$PSI4}; \item Edit \file{configure.ac} and add \file{great\_code} to the list. ; \item {\tt svn ci configure.ac -m ``Put comments here.''}; \item {\tt autoconf} ; \item {\tt cd \$PSI4/src/bin} ; \item Edit \file{Makefile.in} and add \file{great\_code} to the list. ; \item {\tt svn ci Makefile.in -m ``Put comments here.''}; \end{enumerate}; At this point, all of the code has been properly checked in, but you; should also ",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:12279,Modifiability,config,configure,12279,"istribution occurs. This step is included in the sequence below. \item A documentation page should be included with the new code (see; section \ref{Documentation} for more information). As a general; rule, if the code is not ready to have a documentation page, it is; not ready to be installed in \PSIfour. \item The \file{configure.ac} file must be altered so that users may; check out copies of the new code and so that the \file{configure}; script will know to create the Makefile for the new code. These; steps are included in the sequence below. \end{enumerate}. Assume the new code is an executable module and is named; \module{great\_code}. The directory containing the new code must; contain only those files which are to be checked in to the repository!; Then the following steps will check in a new piece of code to the main; repository:. \begin{enumerate}; \item {\tt cd \$PSI4/src/bin}; \item {\tt svn add great\_code}; \item {\tt svn ci -m ``Put comments here.''}; \item {\tt cd \$PSI4}; \item Edit \file{configure.ac} and add \file{great\_code} to the list. ; \item {\tt svn ci configure.ac -m ``Put comments here.''}; \item {\tt autoconf} ; \item {\tt cd \$PSI4/src/bin} ; \item Edit \file{Makefile.in} and add \file{great\_code} to the list. ; \item {\tt svn ci Makefile.in -m ``Put comments here.''}; \end{enumerate}; At this point, all of the code has been properly checked in, but you; should also test to make sure that the code can be checked out by; other programmers, and that it will compile correctly. The following; steps will store your personal version of the code, check out the new; code, and test-compile it:; \begin{enumerate}; \item {\tt cd \$PSI4/src/bin}; \item {\tt mv great\_code great\_code.bak}; \item {\tt cd \$PSI4/..}; \item {\tt svn update}; \item {\tt cd \$objdir}; \item {\tt \$PSI4/configure -}{\tt -prefix=\$prefix}; \item {\tt cd src/bin/great\_code}; \item {\tt make install}; \end{enumerate}; (Note that \$prefix and \$objdir to the installation and c",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:12353,Modifiability,config,configure,12353," page should be included with the new code (see; section \ref{Documentation} for more information). As a general; rule, if the code is not ready to have a documentation page, it is; not ready to be installed in \PSIfour. \item The \file{configure.ac} file must be altered so that users may; check out copies of the new code and so that the \file{configure}; script will know to create the Makefile for the new code. These; steps are included in the sequence below. \end{enumerate}. Assume the new code is an executable module and is named; \module{great\_code}. The directory containing the new code must; contain only those files which are to be checked in to the repository!; Then the following steps will check in a new piece of code to the main; repository:. \begin{enumerate}; \item {\tt cd \$PSI4/src/bin}; \item {\tt svn add great\_code}; \item {\tt svn ci -m ``Put comments here.''}; \item {\tt cd \$PSI4}; \item Edit \file{configure.ac} and add \file{great\_code} to the list. ; \item {\tt svn ci configure.ac -m ``Put comments here.''}; \item {\tt autoconf} ; \item {\tt cd \$PSI4/src/bin} ; \item Edit \file{Makefile.in} and add \file{great\_code} to the list. ; \item {\tt svn ci Makefile.in -m ``Put comments here.''}; \end{enumerate}; At this point, all of the code has been properly checked in, but you; should also test to make sure that the code can be checked out by; other programmers, and that it will compile correctly. The following; steps will store your personal version of the code, check out the new; code, and test-compile it:; \begin{enumerate}; \item {\tt cd \$PSI4/src/bin}; \item {\tt mv great\_code great\_code.bak}; \item {\tt cd \$PSI4/..}; \item {\tt svn update}; \item {\tt cd \$objdir}; \item {\tt \$PSI4/configure -}{\tt -prefix=\$prefix}; \item {\tt cd src/bin/great\_code}; \item {\tt make install}; \end{enumerate}; (Note that \$prefix and \$objdir to the installation and compilation; directories defined in the \PSIfour\ installation instructions.); Your ori",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:13089,Modifiability,config,configure,13089," great\_code}; \item {\tt svn ci -m ``Put comments here.''}; \item {\tt cd \$PSI4}; \item Edit \file{configure.ac} and add \file{great\_code} to the list. ; \item {\tt svn ci configure.ac -m ``Put comments here.''}; \item {\tt autoconf} ; \item {\tt cd \$PSI4/src/bin} ; \item Edit \file{Makefile.in} and add \file{great\_code} to the list. ; \item {\tt svn ci Makefile.in -m ``Put comments here.''}; \end{enumerate}; At this point, all of the code has been properly checked in, but you; should also test to make sure that the code can be checked out by; other programmers, and that it will compile correctly. The following; steps will store your personal version of the code, check out the new; code, and test-compile it:; \begin{enumerate}; \item {\tt cd \$PSI4/src/bin}; \item {\tt mv great\_code great\_code.bak}; \item {\tt cd \$PSI4/..}; \item {\tt svn update}; \item {\tt cd \$objdir}; \item {\tt \$PSI4/configure -}{\tt -prefix=\$prefix}; \item {\tt cd src/bin/great\_code}; \item {\tt make install}; \end{enumerate}; (Note that \$prefix and \$objdir to the installation and compilation; directories defined in the \PSIfour\ installation instructions.); Your original version of the code remains under \file{great\_code.bak},; but should be no longer necessary if the above steps work. Note that it is; necessary to re-run \file{configure} explicitly, instead of just running; \file{config.status}, because the latter contains no information about; the new code. \subsection{Updating checked out code}. If the code in the main repository has been altered, other users' working; copies will of course not automatically be updated. In general, it is; only necessary to execute the following steps in order to completely update; your working copy of the code:. \begin{enumerate}; \item {\tt cd \$PSI4}; \item {\tt svn update}; \end{enumerate}. This will examine each entry in your working copy and compare it to; the most recent version in the main repository. When the file in the; main reposit",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:13515,Modifiability,config,configure,13515,"tem {\tt svn ci Makefile.in -m ``Put comments here.''}; \end{enumerate}; At this point, all of the code has been properly checked in, but you; should also test to make sure that the code can be checked out by; other programmers, and that it will compile correctly. The following; steps will store your personal version of the code, check out the new; code, and test-compile it:; \begin{enumerate}; \item {\tt cd \$PSI4/src/bin}; \item {\tt mv great\_code great\_code.bak}; \item {\tt cd \$PSI4/..}; \item {\tt svn update}; \item {\tt cd \$objdir}; \item {\tt \$PSI4/configure -}{\tt -prefix=\$prefix}; \item {\tt cd src/bin/great\_code}; \item {\tt make install}; \end{enumerate}; (Note that \$prefix and \$objdir to the installation and compilation; directories defined in the \PSIfour\ installation instructions.); Your original version of the code remains under \file{great\_code.bak},; but should be no longer necessary if the above steps work. Note that it is; necessary to re-run \file{configure} explicitly, instead of just running; \file{config.status}, because the latter contains no information about; the new code. \subsection{Updating checked out code}. If the code in the main repository has been altered, other users' working; copies will of course not automatically be updated. In general, it is; only necessary to execute the following steps in order to completely update; your working copy of the code:. \begin{enumerate}; \item {\tt cd \$PSI4}; \item {\tt svn update}; \end{enumerate}. This will examine each entry in your working copy and compare it to; the most recent version in the main repository. When the file in the; main repository is more recent, your version of the code will be; updated. If you have made changes to your version, but the version in; the main repository has not changed, the altered code will be; identified to you with an ``M''. If you have made changes to your; version of the code, and one or more newer versions have been updated; in the main reposito",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:13569,Modifiability,config,config,13569,"tem {\tt svn ci Makefile.in -m ``Put comments here.''}; \end{enumerate}; At this point, all of the code has been properly checked in, but you; should also test to make sure that the code can be checked out by; other programmers, and that it will compile correctly. The following; steps will store your personal version of the code, check out the new; code, and test-compile it:; \begin{enumerate}; \item {\tt cd \$PSI4/src/bin}; \item {\tt mv great\_code great\_code.bak}; \item {\tt cd \$PSI4/..}; \item {\tt svn update}; \item {\tt cd \$objdir}; \item {\tt \$PSI4/configure -}{\tt -prefix=\$prefix}; \item {\tt cd src/bin/great\_code}; \item {\tt make install}; \end{enumerate}; (Note that \$prefix and \$objdir to the installation and compilation; directories defined in the \PSIfour\ installation instructions.); Your original version of the code remains under \file{great\_code.bak},; but should be no longer necessary if the above steps work. Note that it is; necessary to re-run \file{configure} explicitly, instead of just running; \file{config.status}, because the latter contains no information about; the new code. \subsection{Updating checked out code}. If the code in the main repository has been altered, other users' working; copies will of course not automatically be updated. In general, it is; only necessary to execute the following steps in order to completely update; your working copy of the code:. \begin{enumerate}; \item {\tt cd \$PSI4}; \item {\tt svn update}; \end{enumerate}. This will examine each entry in your working copy and compare it to; the most recent version in the main repository. When the file in the; main repository is more recent, your version of the code will be; updated. If you have made changes to your version, but the version in; the main repository has not changed, the altered code will be; identified to you with an ``M''. If you have made changes to your; version of the code, and one or more newer versions have been updated; in the main reposito",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:14955,Modifiability,config,configure,14955,"begin{enumerate}; \item {\tt cd \$PSI4}; \item {\tt svn update}; \end{enumerate}. This will examine each entry in your working copy and compare it to; the most recent version in the main repository. When the file in the; main repository is more recent, your version of the code will be; updated. If you have made changes to your version, but the version in; the main repository has not changed, the altered code will be; identified to you with an ``M''. If you have made changes to your; version of the code, and one or more newer versions have been updated; in the main repository, SVN will examine the two versions and attempt; to merge them -- this process often reveals conflicts, however, and is; sometimes unsuccessful. You will be notified of any conflicts that; arise (labelled with a ``C'') and you must resolve them manually. If new directories have been added to the repository, the update above; will automatically add them to your working copy. However, you may; need to re-run {\tt autoconf} and configure ({\tt; \$objdir/config.status --recheck} is a convenient command) to be; able to build the new code. \subsection{Removing code from the repository}; If alterations of libraries or binaries under Psi involves the deletion of ; source code files from the code, these must be explicitly removed through SVN. The following steps will remove a source code file named \file{bad\_code.F} ; from a binary module named \module{great\_code}:; \begin{enumerate}; \item {\tt cd \$PSI4/src/bin/great\_code}; \item {\tt svn remove bad\_code.F}; \item {\tt svn ci -m ``Put comments here.''}; \end{enumerate}. \subsection{Checking out older versions of the code}; It is sometimes necessary to check out older versions of a piece of code.; Assume we wish to check out an old version of \PSIdetci. If this; is the case, the following steps will do this:; \begin{enumerate}; \item {\tt cd \$PSI4/src/bin/detci}; \item {\tt svn co --revision \{2002-02-17\}}; \end{enumerate}. This will check the main",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:14981,Modifiability,config,config,14981,"begin{enumerate}; \item {\tt cd \$PSI4}; \item {\tt svn update}; \end{enumerate}. This will examine each entry in your working copy and compare it to; the most recent version in the main repository. When the file in the; main repository is more recent, your version of the code will be; updated. If you have made changes to your version, but the version in; the main repository has not changed, the altered code will be; identified to you with an ``M''. If you have made changes to your; version of the code, and one or more newer versions have been updated; in the main repository, SVN will examine the two versions and attempt; to merge them -- this process often reveals conflicts, however, and is; sometimes unsuccessful. You will be notified of any conflicts that; arise (labelled with a ``C'') and you must resolve them manually. If new directories have been added to the repository, the update above; will automatically add them to your working copy. However, you may; need to re-run {\tt autoconf} and configure ({\tt; \$objdir/config.status --recheck} is a convenient command) to be; able to build the new code. \subsection{Removing code from the repository}; If alterations of libraries or binaries under Psi involves the deletion of ; source code files from the code, these must be explicitly removed through SVN. The following steps will remove a source code file named \file{bad\_code.F} ; from a binary module named \module{great\_code}:; \begin{enumerate}; \item {\tt cd \$PSI4/src/bin/great\_code}; \item {\tt svn remove bad\_code.F}; \item {\tt svn ci -m ``Put comments here.''}; \end{enumerate}. \subsection{Checking out older versions of the code}; It is sometimes necessary to check out older versions of a piece of code.; Assume we wish to check out an old version of \PSIdetci. If this; is the case, the following steps will do this:; \begin{enumerate}; \item {\tt cd \$PSI4/src/bin/detci}; \item {\tt svn co --revision \{2002-02-17\}}; \end{enumerate}. This will check the main",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:696,Safety,safe,safety,696,"%; % PSI Programmer's Manual; %; % SVN Revision Control Section; % (formerly CVS); %; % TDC, February, 1996; % Modified by TDC, December 2002; % Updated from CVS to SVN, April 2007; %. The subversion control system (SVN) (\htmladdnormallink{{\tt; subversion.tigris.org}}{http://subversion.tigris.org/}) provides a; convenient means by which programmers may obtain the latest (or any; previous) version of the \PSIfour\ source from the main repository or; a branch version, add new code to the source tree or modify existing; \PSIfour\ modules, and then make changes and additions available to; other programmers by checking the modifications back into the main; repository. SVN also provides a ``safety net'' in that any erroneous; modifications to the code may be easily removed once they have been; identified. This section describes how to use SVN to access and; modify the \PSIfour\ source code. (Note that compilation and; installation instructions are given in a separate document.). The main repository for the \PSIfour\ Source code is currently; maintained by the Crawford group at Virginia Tech. To check out the; code, one must first obtain an SVN account by emailing; \htmladdnormallink{{\tt crawdad@vt.edu}}{mailto:crawdad@vt.edu}.; After you have a login-id and password, you are now ready to access; the repository via a secure, SSL-based WebDAV connection, but first; you must decide which version of the code you need. The \PSIfour\ SVN repository contains three top-level directories:; \begin{itemize}; \item {\tt trunk}: The main development area.; \item {\tt branches}: Release branches and private development; branches are stored here.; \item {\tt tags:} Snapshots of the repository corresponding to public; releases are stored here and should {\em never} be modified.; \end{itemize}; If you have a PSI4 SVN account, you can peruse these directories if; you like by pointing web browser to:. \noindent; {\tt https://sirius.chem.vt.edu/svn/psi4/}. \subsection{\PSIfour\ SVN Policie",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:7274,Safety,safe,safe,7274,"are usually run; within this top-level directory. \noindent; $\bullet$ To update your current working copy to include the latest revisions:. {\tt svn update}. \noindent; Notes: (a) This will update only the revisions on your current branch;; (b) The old {\tt -d} and {\tt -P} flags required by CVS are not necessary with SVN. . \noindent; $\bullet$ To convert your working copy to the head of a specific branch:. {\tt svn switch https://sirius.chem.vt.edu/svn/PSI4/branches/psi-4-0}. \noindent; $\bullet$ To convert your working copy to the head of the main trunk:. {\tt svn switch https://sirius.chem.vt.edu/svn/psi4/trunk/}. \noindent; $\bullet$ To find out what branch your working copy is on, run this in your; top-level \PSIfour\ source directory:. {\tt svn info | grep URL}. \noindent; This will return the SVN directory from which your working copy was; taken, e.g.,. \noindent; {\tt URL: https://sirius.chem.vt.edu/svn/PSI4/branches/psi-4-0}. \noindent; Some words of advice:; \begin{enumerate}; \item Most SVN commands are reasonably safe, . \item Unlike CVS, you shouldn't use {\tt svn update} to see the status; of your working copy. With SVN you should use {\tt svn status} to; see if you've modified any files or directories. If you want a; direct comparison with the repository, you should use {\tt svn status -u}.; \item Read the SVN manual. Seriously.; \begin{center}; \htmladdnormallink{{\tt; http://svnbook.red-bean.com/}}{http://svnbook.red-bean.com/}; \end{center}; \item If you're about to start some significant development or bug-fixes,; first update your working copy to the latest version on your branch.; In addition, if you do development over a long period of time (say weeks to; months) on a specific module or modules, be sure to run a {\tt svn status -u}; occasionally. In can be {\em very} frustrating to try to check in lots; of changes, only to find out that the \PSIfour\ has changed dramatically; since your last update.; \end{enumerate}. \subsection{Checking in a",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:17868,Safety,avoid,avoid,17868,"rectories:. \begin{itemize}; \item \shellvar{\$PSI4}\file{/lib} -- Source files for; OS-independent ``library'' data. This includes the main basis set; data file (\file{pbasis.dat}) and the \PSIfour\ program execution; control file (\file{psi.dat}), among others. These files are; installed in \file{\$prefix/share}. \item \shellvar{\$PSI4}\file{/include} -- Source files for; OS-independent header files, including \file{physconst.h} (whose; contents should be obvious from its name), \file{psifiles.h}, and; \file{ccfiles.h}, among others. These files are installed in; \$prefix/include. \item \shellvar{\$PSI4}\file{/src/util} -- Source code for the utility; program \module{tocprint}. (Note that the \module{tmpl} module is; no longer used and will eventually disappear.). \item \shellvar{\$PSI4}\file{/src/lib} -- Source code for the; libraries, including \library{libpsio}, \library{libipv1},; \library{libchkpt}, etc. The include files from the library; source are used directly during the compilation of PSI to ; avoid problems associated with incomplete installations. Some; include files are architecture-dependent and go in an include; subdirectory of the compilation (object) directory. \item \shellvar{\$PSI4}\file{/src/bin} -- Source code for the; executable modules.; \end{itemize}. After compilation and installation, the \file{\$prefix} directory; contains the executable codes and other necessary files. {\bf NB:}; The files in this area should never be directly modified; rather, the; working copy should be modified and the \PSIfour\ \file{Makefile}; hierarchy should handle installation of any changes. The structure of; the installation area is:. \begin{itemize}; \item \file{\$prefix/bin} -- The main executable directory. This; directory must be in your path in order for the driver program,; \module{PSI4}, to find the modules. \item \file{\$prefix/lib} -- The \PSIfour\ code libraries. (NB: The; description of \PSIfour\ \file{Makefiles} later in this manual will; explain ho",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:854,Security,access,access,854,"%; % PSI Programmer's Manual; %; % SVN Revision Control Section; % (formerly CVS); %; % TDC, February, 1996; % Modified by TDC, December 2002; % Updated from CVS to SVN, April 2007; %. The subversion control system (SVN) (\htmladdnormallink{{\tt; subversion.tigris.org}}{http://subversion.tigris.org/}) provides a; convenient means by which programmers may obtain the latest (or any; previous) version of the \PSIfour\ source from the main repository or; a branch version, add new code to the source tree or modify existing; \PSIfour\ modules, and then make changes and additions available to; other programmers by checking the modifications back into the main; repository. SVN also provides a ``safety net'' in that any erroneous; modifications to the code may be easily removed once they have been; identified. This section describes how to use SVN to access and; modify the \PSIfour\ source code. (Note that compilation and; installation instructions are given in a separate document.). The main repository for the \PSIfour\ Source code is currently; maintained by the Crawford group at Virginia Tech. To check out the; code, one must first obtain an SVN account by emailing; \htmladdnormallink{{\tt crawdad@vt.edu}}{mailto:crawdad@vt.edu}.; After you have a login-id and password, you are now ready to access; the repository via a secure, SSL-based WebDAV connection, but first; you must decide which version of the code you need. The \PSIfour\ SVN repository contains three top-level directories:; \begin{itemize}; \item {\tt trunk}: The main development area.; \item {\tt branches}: Release branches and private development; branches are stored here.; \item {\tt tags:} Snapshots of the repository corresponding to public; releases are stored here and should {\em never} be modified.; \end{itemize}; If you have a PSI4 SVN account, you can peruse these directories if; you like by pointing web browser to:. \noindent; {\tt https://sirius.chem.vt.edu/svn/psi4/}. \subsection{\PSIfour\ SVN Policie",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:1275,Security,password,password,1275,"ch programmers may obtain the latest (or any; previous) version of the \PSIfour\ source from the main repository or; a branch version, add new code to the source tree or modify existing; \PSIfour\ modules, and then make changes and additions available to; other programmers by checking the modifications back into the main; repository. SVN also provides a ``safety net'' in that any erroneous; modifications to the code may be easily removed once they have been; identified. This section describes how to use SVN to access and; modify the \PSIfour\ source code. (Note that compilation and; installation instructions are given in a separate document.). The main repository for the \PSIfour\ Source code is currently; maintained by the Crawford group at Virginia Tech. To check out the; code, one must first obtain an SVN account by emailing; \htmladdnormallink{{\tt crawdad@vt.edu}}{mailto:crawdad@vt.edu}.; After you have a login-id and password, you are now ready to access; the repository via a secure, SSL-based WebDAV connection, but first; you must decide which version of the code you need. The \PSIfour\ SVN repository contains three top-level directories:; \begin{itemize}; \item {\tt trunk}: The main development area.; \item {\tt branches}: Release branches and private development; branches are stored here.; \item {\tt tags:} Snapshots of the repository corresponding to public; releases are stored here and should {\em never} be modified.; \end{itemize}; If you have a PSI4 SVN account, you can peruse these directories if; you like by pointing web browser to:. \noindent; {\tt https://sirius.chem.vt.edu/svn/psi4/}. \subsection{\PSIfour\ SVN Policies: Which Branch Should I Use?}; \label{section:branches}. The \PSIfour\ repository comprises a main trunk and several; release branches. The branch you should use depends on the sort of ; work you plan for the codes:; \begin{enumerate}; \item For any piece of code already in the most recent release, bug; fixes (defined as anything that ",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:1306,Security,access,access,1306,"ch programmers may obtain the latest (or any; previous) version of the \PSIfour\ source from the main repository or; a branch version, add new code to the source tree or modify existing; \PSIfour\ modules, and then make changes and additions available to; other programmers by checking the modifications back into the main; repository. SVN also provides a ``safety net'' in that any erroneous; modifications to the code may be easily removed once they have been; identified. This section describes how to use SVN to access and; modify the \PSIfour\ source code. (Note that compilation and; installation instructions are given in a separate document.). The main repository for the \PSIfour\ Source code is currently; maintained by the Crawford group at Virginia Tech. To check out the; code, one must first obtain an SVN account by emailing; \htmladdnormallink{{\tt crawdad@vt.edu}}{mailto:crawdad@vt.edu}.; After you have a login-id and password, you are now ready to access; the repository via a secure, SSL-based WebDAV connection, but first; you must decide which version of the code you need. The \PSIfour\ SVN repository contains three top-level directories:; \begin{itemize}; \item {\tt trunk}: The main development area.; \item {\tt branches}: Release branches and private development; branches are stored here.; \item {\tt tags:} Snapshots of the repository corresponding to public; releases are stored here and should {\em never} be modified.; \end{itemize}; If you have a PSI4 SVN account, you can peruse these directories if; you like by pointing web browser to:. \noindent; {\tt https://sirius.chem.vt.edu/svn/psi4/}. \subsection{\PSIfour\ SVN Policies: Which Branch Should I Use?}; \label{section:branches}. The \PSIfour\ repository comprises a main trunk and several; release branches. The branch you should use depends on the sort of ; work you plan for the codes:; \begin{enumerate}; \item For any piece of code already in the most recent release, bug; fixes (defined as anything that ",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:1335,Security,secur,secure,1335,"ch programmers may obtain the latest (or any; previous) version of the \PSIfour\ source from the main repository or; a branch version, add new code to the source tree or modify existing; \PSIfour\ modules, and then make changes and additions available to; other programmers by checking the modifications back into the main; repository. SVN also provides a ``safety net'' in that any erroneous; modifications to the code may be easily removed once they have been; identified. This section describes how to use SVN to access and; modify the \PSIfour\ source code. (Note that compilation and; installation instructions are given in a separate document.). The main repository for the \PSIfour\ Source code is currently; maintained by the Crawford group at Virginia Tech. To check out the; code, one must first obtain an SVN account by emailing; \htmladdnormallink{{\tt crawdad@vt.edu}}{mailto:crawdad@vt.edu}.; After you have a login-id and password, you are now ready to access; the repository via a secure, SSL-based WebDAV connection, but first; you must decide which version of the code you need. The \PSIfour\ SVN repository contains three top-level directories:; \begin{itemize}; \item {\tt trunk}: The main development area.; \item {\tt branches}: Release branches and private development; branches are stored here.; \item {\tt tags:} Snapshots of the repository corresponding to public; releases are stored here and should {\em never} be modified.; \end{itemize}; If you have a PSI4 SVN account, you can peruse these directories if; you like by pointing web browser to:. \noindent; {\tt https://sirius.chem.vt.edu/svn/psi4/}. \subsection{\PSIfour\ SVN Policies: Which Branch Should I Use?}; \label{section:branches}. The \PSIfour\ repository comprises a main trunk and several; release branches. The branch you should use depends on the sort of ; work you plan for the codes:; \begin{enumerate}; \item For any piece of code already in the most recent release, bug; fixes (defined as anything that ",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:2614,Security,access,access,2614,"se branches and private development; branches are stored here.; \item {\tt tags:} Snapshots of the repository corresponding to public; releases are stored here and should {\em never} be modified.; \end{itemize}; If you have a PSI4 SVN account, you can peruse these directories if; you like by pointing web browser to:. \noindent; {\tt https://sirius.chem.vt.edu/svn/psi4/}. \subsection{\PSIfour\ SVN Policies: Which Branch Should I Use?}; \label{section:branches}. The \PSIfour\ repository comprises a main trunk and several; release branches. The branch you should use depends on the sort of ; work you plan for the codes:; \begin{enumerate}; \item For any piece of code already in the most recent release, bug; fixes (defined as anything that doesn't add functionality ---; including documentation updates) should be made {\em only} on the; most recent stable release branch.; \item The main trunk is reserved for development of new functionality.; This allows us to keep new, possibly unstable code away from public; access until the code is ready.; \item Code that you do not want to put into next major release of; \PSIfour\ should be put onto a separate branch off the main; trunk. You will be solely responsible for maintenance of the new; branch, so you should read the SVN manual before attempting this.; \end{enumerate}. \noindent Fig.~\ref{Fig:svn} provides a schematic of the SVN revision-control; structure and branch labeling. Two release branches are shown, the current; stable branch, named {\tt psi-3-4}, and a planned future release, to be named; {\tt psi-3-5}. The tags on the branches indicate release shapshots, where; bugs have been fixed and the code has been or will be exported for public; distribution. The dotted lines in the figure indicate merge points: just; prior to each public release, changes made to the code on the stable release; branch will be merged into the main trunk. \begin{figure}[h]; \begin{center}; \epsfig{file=svn/svn.eps,height=6.5cm}; \end{center}; \",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:16359,Security,access,accessed,16359,"code.F} ; from a binary module named \module{great\_code}:; \begin{enumerate}; \item {\tt cd \$PSI4/src/bin/great\_code}; \item {\tt svn remove bad\_code.F}; \item {\tt svn ci -m ``Put comments here.''}; \end{enumerate}. \subsection{Checking out older versions of the code}; It is sometimes necessary to check out older versions of a piece of code.; Assume we wish to check out an old version of \PSIdetci. If this; is the case, the following steps will do this:; \begin{enumerate}; \item {\tt cd \$PSI4/src/bin/detci}; \item {\tt svn co --revision \{2002-02-17\}}; \end{enumerate}. This will check the main repository and provide you with the code as; it stood exactly on February 17th, 2002. . \subsection{Examining the revision history}; It can be very useful to use cvs to see what recent changes have been; made to the code. Anytime one checks in a new version of a file, SVN; requires the user to provide comments on the changes with the {\tt -m}; flag. These comments go into a log information that may be easily; accessed through SVN. To see what changes have been made recently to; the file \file{detci.cc}, one would go into the \file{detci} source; directory and type; \begin{verbatim}; svn log detci.cc; \end{verbatim}; Checking the log files is a very useful way to see what recent changes might ; be causing new problems with the code. \subsection{The structure of the \PSIfour\ Source Tree}; \label{psitree} . Your working copy of the \PSIfour\ source code includes a number of; important subdirectories:. \begin{itemize}; \item \shellvar{\$PSI4}\file{/lib} -- Source files for; OS-independent ``library'' data. This includes the main basis set; data file (\file{pbasis.dat}) and the \PSIfour\ program execution; control file (\file{psi.dat}), among others. These files are; installed in \file{\$prefix/share}. \item \shellvar{\$PSI4}\file{/include} -- Source files for; OS-independent header files, including \file{physconst.h} (whose; contents should be obvious from its name), \file{",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:1262,Testability,log,login-id,1262,"ch programmers may obtain the latest (or any; previous) version of the \PSIfour\ source from the main repository or; a branch version, add new code to the source tree or modify existing; \PSIfour\ modules, and then make changes and additions available to; other programmers by checking the modifications back into the main; repository. SVN also provides a ``safety net'' in that any erroneous; modifications to the code may be easily removed once they have been; identified. This section describes how to use SVN to access and; modify the \PSIfour\ source code. (Note that compilation and; installation instructions are given in a separate document.). The main repository for the \PSIfour\ Source code is currently; maintained by the Crawford group at Virginia Tech. To check out the; code, one must first obtain an SVN account by emailing; \htmladdnormallink{{\tt crawdad@vt.edu}}{mailto:crawdad@vt.edu}.; After you have a login-id and password, you are now ready to access; the repository via a secure, SSL-based WebDAV connection, but first; you must decide which version of the code you need. The \PSIfour\ SVN repository contains three top-level directories:; \begin{itemize}; \item {\tt trunk}: The main development area.; \item {\tt branches}: Release branches and private development; branches are stored here.; \item {\tt tags:} Snapshots of the repository corresponding to public; releases are stored here and should {\em never} be modified.; \end{itemize}; If you have a PSI4 SVN account, you can peruse these directories if; you like by pointing web browser to:. \noindent; {\tt https://sirius.chem.vt.edu/svn/psi4/}. \subsection{\PSIfour\ SVN Policies: Which Branch Should I Use?}; \label{section:branches}. The \PSIfour\ repository comprises a main trunk and several; release branches. The branch you should use depends on the sort of ; work you plan for the codes:; \begin{enumerate}; \item For any piece of code already in the most recent release, bug; fixes (defined as anything that ",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:5949,Testability,test,testing,5949," a documentation; update/fix), then you should wait until next patch release when it; will be merged into the main trunk automatically.; \end{enumerate}. \noindent; The following are some of the most commonly used SVN commands for checking; out and updating working copies of the \PSIfour\ source code. \noindent; $\bullet$ To checkout a working copy of the head of the main trunk:. {\tt svn co https://sirius.chem.vt.edu/svn/psi4/trunk/ psi4} . \noindent; $\bullet$ To check out a working copy of the head of a specific release branch,; e.g., the branch labelled {\tt psi-4-0}:. {\tt svn co https://sirius.chem.vt.edu/svn/PSI4/branches/psi-4-0 psi4}. \noindent Note that subsequent {\tt svn update} commands in this; working copy will provide updates only on the chosen branch. Note; also that after you have checked out a fresh working copy of the code; you must run the {\tt autoconf} command to generate a {\tt configure}; script for building the code. (See the installation manual for; configuration, compilation, and testing instructions.). \noindent For each of the above commands, the working copy of your; code will be placed in the directory \file{psi4}, regardless of your; choice of branch. In this manual, we will refer to this directory; from now on as {\tt \$PSI4}. Subsequent SVN commands are usually run; within this top-level directory. \noindent; $\bullet$ To update your current working copy to include the latest revisions:. {\tt svn update}. \noindent; Notes: (a) This will update only the revisions on your current branch;; (b) The old {\tt -d} and {\tt -P} flags required by CVS are not necessary with SVN. . \noindent; $\bullet$ To convert your working copy to the head of a specific branch:. {\tt svn switch https://sirius.chem.vt.edu/svn/PSI4/branches/psi-4-0}. \noindent; $\bullet$ To convert your working copy to the head of the main trunk:. {\tt svn switch https://sirius.chem.vt.edu/svn/psi4/trunk/}. \noindent; $\bullet$ To find out what branch your working copy is on",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:12678,Testability,test,test,12678,"at the \file{configure}; script will know to create the Makefile for the new code. These; steps are included in the sequence below. \end{enumerate}. Assume the new code is an executable module and is named; \module{great\_code}. The directory containing the new code must; contain only those files which are to be checked in to the repository!; Then the following steps will check in a new piece of code to the main; repository:. \begin{enumerate}; \item {\tt cd \$PSI4/src/bin}; \item {\tt svn add great\_code}; \item {\tt svn ci -m ``Put comments here.''}; \item {\tt cd \$PSI4}; \item Edit \file{configure.ac} and add \file{great\_code} to the list. ; \item {\tt svn ci configure.ac -m ``Put comments here.''}; \item {\tt autoconf} ; \item {\tt cd \$PSI4/src/bin} ; \item Edit \file{Makefile.in} and add \file{great\_code} to the list. ; \item {\tt svn ci Makefile.in -m ``Put comments here.''}; \end{enumerate}; At this point, all of the code has been properly checked in, but you; should also test to make sure that the code can be checked out by; other programmers, and that it will compile correctly. The following; steps will store your personal version of the code, check out the new; code, and test-compile it:; \begin{enumerate}; \item {\tt cd \$PSI4/src/bin}; \item {\tt mv great\_code great\_code.bak}; \item {\tt cd \$PSI4/..}; \item {\tt svn update}; \item {\tt cd \$objdir}; \item {\tt \$PSI4/configure -}{\tt -prefix=\$prefix}; \item {\tt cd src/bin/great\_code}; \item {\tt make install}; \end{enumerate}; (Note that \$prefix and \$objdir to the installation and compilation; directories defined in the \PSIfour\ installation instructions.); Your original version of the code remains under \file{great\_code.bak},; but should be no longer necessary if the above steps work. Note that it is; necessary to re-run \file{configure} explicitly, instead of just running; \file{config.status}, because the latter contains no information about; the new code. \subsection{Updating checked out",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:12884,Testability,test,test-compile,12884,"module{great\_code}. The directory containing the new code must; contain only those files which are to be checked in to the repository!; Then the following steps will check in a new piece of code to the main; repository:. \begin{enumerate}; \item {\tt cd \$PSI4/src/bin}; \item {\tt svn add great\_code}; \item {\tt svn ci -m ``Put comments here.''}; \item {\tt cd \$PSI4}; \item Edit \file{configure.ac} and add \file{great\_code} to the list. ; \item {\tt svn ci configure.ac -m ``Put comments here.''}; \item {\tt autoconf} ; \item {\tt cd \$PSI4/src/bin} ; \item Edit \file{Makefile.in} and add \file{great\_code} to the list. ; \item {\tt svn ci Makefile.in -m ``Put comments here.''}; \end{enumerate}; At this point, all of the code has been properly checked in, but you; should also test to make sure that the code can be checked out by; other programmers, and that it will compile correctly. The following; steps will store your personal version of the code, check out the new; code, and test-compile it:; \begin{enumerate}; \item {\tt cd \$PSI4/src/bin}; \item {\tt mv great\_code great\_code.bak}; \item {\tt cd \$PSI4/..}; \item {\tt svn update}; \item {\tt cd \$objdir}; \item {\tt \$PSI4/configure -}{\tt -prefix=\$prefix}; \item {\tt cd src/bin/great\_code}; \item {\tt make install}; \end{enumerate}; (Note that \$prefix and \$objdir to the installation and compilation; directories defined in the \PSIfour\ installation instructions.); Your original version of the code remains under \file{great\_code.bak},; but should be no longer necessary if the above steps work. Note that it is; necessary to re-run \file{configure} explicitly, instead of just running; \file{config.status}, because the latter contains no information about; the new code. \subsection{Updating checked out code}. If the code in the main repository has been altered, other users' working; copies will of course not automatically be updated. In general, it is; only necessary to execute the following steps in order",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:16323,Testability,log,log,16323,"code.F} ; from a binary module named \module{great\_code}:; \begin{enumerate}; \item {\tt cd \$PSI4/src/bin/great\_code}; \item {\tt svn remove bad\_code.F}; \item {\tt svn ci -m ``Put comments here.''}; \end{enumerate}. \subsection{Checking out older versions of the code}; It is sometimes necessary to check out older versions of a piece of code.; Assume we wish to check out an old version of \PSIdetci. If this; is the case, the following steps will do this:; \begin{enumerate}; \item {\tt cd \$PSI4/src/bin/detci}; \item {\tt svn co --revision \{2002-02-17\}}; \end{enumerate}. This will check the main repository and provide you with the code as; it stood exactly on February 17th, 2002. . \subsection{Examining the revision history}; It can be very useful to use cvs to see what recent changes have been; made to the code. Anytime one checks in a new version of a file, SVN; requires the user to provide comments on the changes with the {\tt -m}; flag. These comments go into a log information that may be easily; accessed through SVN. To see what changes have been made recently to; the file \file{detci.cc}, one would go into the \file{detci} source; directory and type; \begin{verbatim}; svn log detci.cc; \end{verbatim}; Checking the log files is a very useful way to see what recent changes might ; be causing new problems with the code. \subsection{The structure of the \PSIfour\ Source Tree}; \label{psitree} . Your working copy of the \PSIfour\ source code includes a number of; important subdirectories:. \begin{itemize}; \item \shellvar{\$PSI4}\file{/lib} -- Source files for; OS-independent ``library'' data. This includes the main basis set; data file (\file{pbasis.dat}) and the \PSIfour\ program execution; control file (\file{psi.dat}), among others. These files are; installed in \file{\$prefix/share}. \item \shellvar{\$PSI4}\file{/include} -- Source files for; OS-independent header files, including \file{physconst.h} (whose; contents should be obvious from its name), \file{",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:16540,Testability,log,log,16540,"m {\tt svn ci -m ``Put comments here.''}; \end{enumerate}. \subsection{Checking out older versions of the code}; It is sometimes necessary to check out older versions of a piece of code.; Assume we wish to check out an old version of \PSIdetci. If this; is the case, the following steps will do this:; \begin{enumerate}; \item {\tt cd \$PSI4/src/bin/detci}; \item {\tt svn co --revision \{2002-02-17\}}; \end{enumerate}. This will check the main repository and provide you with the code as; it stood exactly on February 17th, 2002. . \subsection{Examining the revision history}; It can be very useful to use cvs to see what recent changes have been; made to the code. Anytime one checks in a new version of a file, SVN; requires the user to provide comments on the changes with the {\tt -m}; flag. These comments go into a log information that may be easily; accessed through SVN. To see what changes have been made recently to; the file \file{detci.cc}, one would go into the \file{detci} source; directory and type; \begin{verbatim}; svn log detci.cc; \end{verbatim}; Checking the log files is a very useful way to see what recent changes might ; be causing new problems with the code. \subsection{The structure of the \PSIfour\ Source Tree}; \label{psitree} . Your working copy of the \PSIfour\ source code includes a number of; important subdirectories:. \begin{itemize}; \item \shellvar{\$PSI4}\file{/lib} -- Source files for; OS-independent ``library'' data. This includes the main basis set; data file (\file{pbasis.dat}) and the \PSIfour\ program execution; control file (\file{psi.dat}), among others. These files are; installed in \file{\$prefix/share}. \item \shellvar{\$PSI4}\file{/include} -- Source files for; OS-independent header files, including \file{physconst.h} (whose; contents should be obvious from its name), \file{psifiles.h}, and; \file{ccfiles.h}, among others. These files are installed in; \$prefix/include. \item \shellvar{\$PSI4}\file{/src/util} -- Source code for the ",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:16583,Testability,log,log,16583," sometimes necessary to check out older versions of a piece of code.; Assume we wish to check out an old version of \PSIdetci. If this; is the case, the following steps will do this:; \begin{enumerate}; \item {\tt cd \$PSI4/src/bin/detci}; \item {\tt svn co --revision \{2002-02-17\}}; \end{enumerate}. This will check the main repository and provide you with the code as; it stood exactly on February 17th, 2002. . \subsection{Examining the revision history}; It can be very useful to use cvs to see what recent changes have been; made to the code. Anytime one checks in a new version of a file, SVN; requires the user to provide comments on the changes with the {\tt -m}; flag. These comments go into a log information that may be easily; accessed through SVN. To see what changes have been made recently to; the file \file{detci.cc}, one would go into the \file{detci} source; directory and type; \begin{verbatim}; svn log detci.cc; \end{verbatim}; Checking the log files is a very useful way to see what recent changes might ; be causing new problems with the code. \subsection{The structure of the \PSIfour\ Source Tree}; \label{psitree} . Your working copy of the \PSIfour\ source code includes a number of; important subdirectories:. \begin{itemize}; \item \shellvar{\$PSI4}\file{/lib} -- Source files for; OS-independent ``library'' data. This includes the main basis set; data file (\file{pbasis.dat}) and the \PSIfour\ program execution; control file (\file{psi.dat}), among others. These files are; installed in \file{\$prefix/share}. \item \shellvar{\$PSI4}\file{/include} -- Source files for; OS-independent header files, including \file{physconst.h} (whose; contents should be obvious from its name), \file{psifiles.h}, and; \file{ccfiles.h}, among others. These files are installed in; \$prefix/include. \item \shellvar{\$PSI4}\file{/src/util} -- Source code for the utility; program \module{tocprint}. (Note that the \module{tmpl} module is; no longer used and will eventually disappea",MatchSource.DOCS,doc/sphinxman/source/attic/proggit.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progman.rst:416,Deployability,install,installation,416,"The purpose of this manual is to provide a reasonably detailed; overview of the source code and programming philosophy of \PSIfour,; such that programmers interested in contributing to the code will have; an easier task. Section \ref{svn} gives a succint explanation of the; steps required to obtain the source code from the main repository at; Virginia Tech. (Installation instructions are given separately in the; installation manual or in \$PSI4/INSTALL.) \ref{Style} offers advice on; appropriate programming style for \PSIfour\ code, and section \ref{Makefiles}; describes the structure of the package's \file{Makefile}s. Section; The appendices provide important reference material,; including the currently accepted \PSIfour\ citation and format; information for some of the most important text files used by; \PSIfour\ modules. There are many examples included in this document to provide sample input files; and source files; these can be found in ASCII form in the \PSIfour\ source; itself. Each included file has a path, which is relative to; \$PSI4/doc/progman, as its title and this is where the unformatted file can be; found. The examples described herein can even be compiled from the directories; in which the source files are found. Mention the GPL and development policies... ",MatchSource.DOCS,doc/sphinxman/source/attic/progman.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progman.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progpycppconnect.rst:911,Energy Efficiency,energy,energy,911,"One of the most significant changes introduced in version 4 was the use of; Python. The input file is actually a Python script, which interacts with a Psi; Python module to perform computations. In order for this to happen, the C++; binding must be known to Python; this is all done in the ; {\tt \$PSI4/src/bin/psi4/python.cc} file. For example, we have an SCF module, with; the C++ signature; {\tt PsiReturnType cscf::cscf(Options \&options);}; To allow Python to use this, we first define a little wrapper function; \begin{verbatim}; double py_psi_scf(); {; if (scf::scf(Process::environment.options) == Success); return Process::environment.globals[""CURRENT ENERGY""];; else; return 0.0;; }; \end{verbatim}; This does a couple of things to automate things a) it passes the default; options object into SCF automatically, so that the user doesn't have to, and b); checks the return value, and will return the energy, which is posted to the; globals map, back to Python. Note that this is C++ code, within \PSIfour\ so; it is aware of all global objects, such as PSIO, Chkpt and Options. Now we; have this simple function call, we can tell Python about it:; \begin{verbatim}; def(""scf"", py_psi_scf);; \end{verbatim}; This binds the keyword ``scf'' to the newly created wrapper function, allowing; the user to type ``scf()'' in their Python input file to fire up the SCF; module. Similarly, the user might want to be able to call {\tt Molecule}'s; member functions directly from Python. This can also be done easily:. \begin{verbatim}; class_<Molecule, shared_ptr<Molecule> >(""Molecule"").; def(""print_to_output"", &Molecule::print).; def(""nuclear_repulsion_energy"", &Molecule::nuclear_repulsion_energy);; \end{verbatim}. This first defines the keyword {\tt Molecule} to refer to the C++ {\tt; Molecule}; the {\tt shared\_ptr<Molecule>} keyword tells Python to store it as; a shared pointer, which ensures that the object will not be deleted until both; C++ and Python have no more references to it. The",MatchSource.DOCS,doc/sphinxman/source/attic/progpycppconnect.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progpycppconnect.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progpycppconnect.rst:501,Integrability,wrap,wrapper,501,"One of the most significant changes introduced in version 4 was the use of; Python. The input file is actually a Python script, which interacts with a Psi; Python module to perform computations. In order for this to happen, the C++; binding must be known to Python; this is all done in the ; {\tt \$PSI4/src/bin/psi4/python.cc} file. For example, we have an SCF module, with; the C++ signature; {\tt PsiReturnType cscf::cscf(Options \&options);}; To allow Python to use this, we first define a little wrapper function; \begin{verbatim}; double py_psi_scf(); {; if (scf::scf(Process::environment.options) == Success); return Process::environment.globals[""CURRENT ENERGY""];; else; return 0.0;; }; \end{verbatim}; This does a couple of things to automate things a) it passes the default; options object into SCF automatically, so that the user doesn't have to, and b); checks the return value, and will return the energy, which is posted to the; globals map, back to Python. Note that this is C++ code, within \PSIfour\ so; it is aware of all global objects, such as PSIO, Chkpt and Options. Now we; have this simple function call, we can tell Python about it:; \begin{verbatim}; def(""scf"", py_psi_scf);; \end{verbatim}; This binds the keyword ``scf'' to the newly created wrapper function, allowing; the user to type ``scf()'' in their Python input file to fire up the SCF; module. Similarly, the user might want to be able to call {\tt Molecule}'s; member functions directly from Python. This can also be done easily:. \begin{verbatim}; class_<Molecule, shared_ptr<Molecule> >(""Molecule"").; def(""print_to_output"", &Molecule::print).; def(""nuclear_repulsion_energy"", &Molecule::nuclear_repulsion_energy);; \end{verbatim}. This first defines the keyword {\tt Molecule} to refer to the C++ {\tt; Molecule}; the {\tt shared\_ptr<Molecule>} keyword tells Python to store it as; a shared pointer, which ensures that the object will not be deleted until both; C++ and Python have no more references to it. The",MatchSource.DOCS,doc/sphinxman/source/attic/progpycppconnect.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progpycppconnect.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progpycppconnect.rst:1270,Integrability,wrap,wrapper,1270,"binding must be known to Python; this is all done in the ; {\tt \$PSI4/src/bin/psi4/python.cc} file. For example, we have an SCF module, with; the C++ signature; {\tt PsiReturnType cscf::cscf(Options \&options);}; To allow Python to use this, we first define a little wrapper function; \begin{verbatim}; double py_psi_scf(); {; if (scf::scf(Process::environment.options) == Success); return Process::environment.globals[""CURRENT ENERGY""];; else; return 0.0;; }; \end{verbatim}; This does a couple of things to automate things a) it passes the default; options object into SCF automatically, so that the user doesn't have to, and b); checks the return value, and will return the energy, which is posted to the; globals map, back to Python. Note that this is C++ code, within \PSIfour\ so; it is aware of all global objects, such as PSIO, Chkpt and Options. Now we; have this simple function call, we can tell Python about it:; \begin{verbatim}; def(""scf"", py_psi_scf);; \end{verbatim}; This binds the keyword ``scf'' to the newly created wrapper function, allowing; the user to type ``scf()'' in their Python input file to fire up the SCF; module. Similarly, the user might want to be able to call {\tt Molecule}'s; member functions directly from Python. This can also be done easily:. \begin{verbatim}; class_<Molecule, shared_ptr<Molecule> >(""Molecule"").; def(""print_to_output"", &Molecule::print).; def(""nuclear_repulsion_energy"", &Molecule::nuclear_repulsion_energy);; \end{verbatim}. This first defines the keyword {\tt Molecule} to refer to the C++ {\tt; Molecule}; the {\tt shared\_ptr<Molecule>} keyword tells Python to store it as; a shared pointer, which ensures that the object will not be deleted until both; C++ and Python have no more references to it. The member functions to be bound; are then specified by a chained sequence of {\tt def} calls (note the periods),; terminated by a semicolon. Then, if the user had defined a molecule called; ``water'', they could print its geometry simp",MatchSource.DOCS,doc/sphinxman/source/attic/progpycppconnect.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progpycppconnect.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progpycppconnect.rst:173,Performance,perform,perform,173,"One of the most significant changes introduced in version 4 was the use of; Python. The input file is actually a Python script, which interacts with a Psi; Python module to perform computations. In order for this to happen, the C++; binding must be known to Python; this is all done in the ; {\tt \$PSI4/src/bin/psi4/python.cc} file. For example, we have an SCF module, with; the C++ signature; {\tt PsiReturnType cscf::cscf(Options \&options);}; To allow Python to use this, we first define a little wrapper function; \begin{verbatim}; double py_psi_scf(); {; if (scf::scf(Process::environment.options) == Success); return Process::environment.globals[""CURRENT ENERGY""];; else; return 0.0;; }; \end{verbatim}; This does a couple of things to automate things a) it passes the default; options object into SCF automatically, so that the user doesn't have to, and b); checks the return value, and will return the energy, which is posted to the; globals map, back to Python. Note that this is C++ code, within \PSIfour\ so; it is aware of all global objects, such as PSIO, Chkpt and Options. Now we; have this simple function call, we can tell Python about it:; \begin{verbatim}; def(""scf"", py_psi_scf);; \end{verbatim}; This binds the keyword ``scf'' to the newly created wrapper function, allowing; the user to type ``scf()'' in their Python input file to fire up the SCF; module. Similarly, the user might want to be able to call {\tt Molecule}'s; member functions directly from Python. This can also be done easily:. \begin{verbatim}; class_<Molecule, shared_ptr<Molecule> >(""Molecule"").; def(""print_to_output"", &Molecule::print).; def(""nuclear_repulsion_energy"", &Molecule::nuclear_repulsion_energy);; \end{verbatim}. This first defines the keyword {\tt Molecule} to refer to the C++ {\tt; Molecule}; the {\tt shared\_ptr<Molecule>} keyword tells Python to store it as; a shared pointer, which ensures that the object will not be deleted until both; C++ and Python have no more references to it. The",MatchSource.DOCS,doc/sphinxman/source/attic/progpycppconnect.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progpycppconnect.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progpycppconnect.rst:1107,Usability,simpl,simple,1107,"binding must be known to Python; this is all done in the ; {\tt \$PSI4/src/bin/psi4/python.cc} file. For example, we have an SCF module, with; the C++ signature; {\tt PsiReturnType cscf::cscf(Options \&options);}; To allow Python to use this, we first define a little wrapper function; \begin{verbatim}; double py_psi_scf(); {; if (scf::scf(Process::environment.options) == Success); return Process::environment.globals[""CURRENT ENERGY""];; else; return 0.0;; }; \end{verbatim}; This does a couple of things to automate things a) it passes the default; options object into SCF automatically, so that the user doesn't have to, and b); checks the return value, and will return the energy, which is posted to the; globals map, back to Python. Note that this is C++ code, within \PSIfour\ so; it is aware of all global objects, such as PSIO, Chkpt and Options. Now we; have this simple function call, we can tell Python about it:; \begin{verbatim}; def(""scf"", py_psi_scf);; \end{verbatim}; This binds the keyword ``scf'' to the newly created wrapper function, allowing; the user to type ``scf()'' in their Python input file to fire up the SCF; module. Similarly, the user might want to be able to call {\tt Molecule}'s; member functions directly from Python. This can also be done easily:. \begin{verbatim}; class_<Molecule, shared_ptr<Molecule> >(""Molecule"").; def(""print_to_output"", &Molecule::print).; def(""nuclear_repulsion_energy"", &Molecule::nuclear_repulsion_energy);; \end{verbatim}. This first defines the keyword {\tt Molecule} to refer to the C++ {\tt; Molecule}; the {\tt shared\_ptr<Molecule>} keyword tells Python to store it as; a shared pointer, which ensures that the object will not be deleted until both; C++ and Python have no more references to it. The member functions to be bound; are then specified by a chained sequence of {\tt def} calls (note the periods),; terminated by a semicolon. Then, if the user had defined a molecule called; ``water'', they could print its geometry simp",MatchSource.DOCS,doc/sphinxman/source/attic/progpycppconnect.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progpycppconnect.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progpycppconnect.rst:2230,Usability,simpl,simply,2230,"\end{verbatim}; This binds the keyword ``scf'' to the newly created wrapper function, allowing; the user to type ``scf()'' in their Python input file to fire up the SCF; module. Similarly, the user might want to be able to call {\tt Molecule}'s; member functions directly from Python. This can also be done easily:. \begin{verbatim}; class_<Molecule, shared_ptr<Molecule> >(""Molecule"").; def(""print_to_output"", &Molecule::print).; def(""nuclear_repulsion_energy"", &Molecule::nuclear_repulsion_energy);; \end{verbatim}. This first defines the keyword {\tt Molecule} to refer to the C++ {\tt; Molecule}; the {\tt shared\_ptr<Molecule>} keyword tells Python to store it as; a shared pointer, which ensures that the object will not be deleted until both; C++ and Python have no more references to it. The member functions to be bound; are then specified by a chained sequence of {\tt def} calls (note the periods),; terminated by a semicolon. Then, if the user had defined a molecule called; ``water'', they could print its geometry simply with the command {\tt; water.print\_to\_output()}. Direct interaction with the Psi module from Python requires function calls that; look like {\tt psi4.call\_some\_function()}. This is not very friendly to; your average user, so a preprocessor checks for known Psi syntax and turns it; into valid Python, before handing it off for excecution. This preprocessor is; purely Python, and lives in {\tt \$PSI4/lib/python/input.py}. For example, the; following text \begin{verbatim}; set scf {; SCF_TYPE DIRECT; BASIS cc-pVDZ; RI_BASIS_SCF cc-pVDZ-HF; guess core; }; \end{verbatim}; is converted to the following text; \begin{verbatim}; psi4.set_default_options_for_module(""SCF""); psi4.set_option(""SCF_TYPE"", ""DIRECT""); psi4.set_option(""BASIS"", ""cc-pVDZ""); psi4.set_option(""RI_BASIS_SCF"", ""cc-pVDZ-HF""); psi4.set_option(""GUESS"", ""core""); \end{verbatim}; which can be handled by Python. There are a number of other utilities, which are entirely Python, located in; {\tt \$P",MatchSource.DOCS,doc/sphinxman/source/attic/progpycppconnect.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progpycppconnect.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst:1670,Availability,avail,available,1670,"SIfour\; executables have been installed. The configure script in \$PSI4 ; will take all the necessary files in \$PSI4/tests; with the .in stub: Makefile.in, MakeRules.in, MakeVars.in,; and runtest.pl.in, replace variables with system specific parameters,; and copy/create the testing files and directories in \$prefix/tests.; The tests should be run in the object directory before installation. If you have just added a new module for performing, say multireference ; coupled cluster, and you would like to add a test case to the current ; test suite, here is what you should do. ; \begin{enumerate}; \item Copy one of the existing test case directories to an ; appropriately named directory for the new test case. \item Create an appropriate input file for running the new module. ; Then, if your program produced the correct data, rename; the output files to *.ref. Follow the convention of the ; existing test cases. Make sure you add a descriptive comment to the; input file, stating what the calculation type is. Use the special comment; marker ``\%!'' to do this, so that the comment is inserted into the user's; manual. \item If the test case is small, add the directory name to the list; in \$PSI4/tests/Makefile.in. If the test is particularly tricky,; see the psi\_start or rhf-stab test cases as an example. \item All the testing functionality is located in the perl library; \file{runtest.pl.in}. If you are testing for a quantity that; is not searched for currently, then add a function to the ; library following the format of the functions already available.; If you have added functionality to the \PSIfour\ driver,; make sure to update the appropriate functions in \file{runtest.pl.in}. \item Add the location of the Makefile for the new test case; to the configure script in \$PSI4. \end{enumerate}. Please contact one of the authors of \PSIfour\ before making any; major changes or if you have a problem adding a new test case.; Remember, if all else fails, read the source code. ",MatchSource.DOCS,doc/sphinxman/source/attic/progtestsuite.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst:137,Deployability,install,installed,137,"The \PSIfour\ test suite is designed to maximize code reuse and; provide testing in \$prefix before the \PSIfour\; executables have been installed. The configure script in \$PSI4 ; will take all the necessary files in \$PSI4/tests; with the .in stub: Makefile.in, MakeRules.in, MakeVars.in,; and runtest.pl.in, replace variables with system specific parameters,; and copy/create the testing files and directories in \$prefix/tests.; The tests should be run in the object directory before installation. If you have just added a new module for performing, say multireference ; coupled cluster, and you would like to add a test case to the current ; test suite, here is what you should do. ; \begin{enumerate}; \item Copy one of the existing test case directories to an ; appropriately named directory for the new test case. \item Create an appropriate input file for running the new module. ; Then, if your program produced the correct data, rename; the output files to *.ref. Follow the convention of the ; existing test cases. Make sure you add a descriptive comment to the; input file, stating what the calculation type is. Use the special comment; marker ``\%!'' to do this, so that the comment is inserted into the user's; manual. \item If the test case is small, add the directory name to the list; in \$PSI4/tests/Makefile.in. If the test is particularly tricky,; see the psi\_start or rhf-stab test cases as an example. \item All the testing functionality is located in the perl library; \file{runtest.pl.in}. If you are testing for a quantity that; is not searched for currently, then add a function to the ; library following the format of the functions already available.; If you have added functionality to the \PSIfour\ driver,; make sure to update the appropriate functions in \file{runtest.pl.in}. \item Add the location of the Makefile for the new test case; to the configure script in \$PSI4. \end{enumerate}. Please contact one of the authors of \PSIfour\ before making any; major chan",MatchSource.DOCS,doc/sphinxman/source/attic/progtestsuite.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst:488,Deployability,install,installation,488,"The \PSIfour\ test suite is designed to maximize code reuse and; provide testing in \$prefix before the \PSIfour\; executables have been installed. The configure script in \$PSI4 ; will take all the necessary files in \$PSI4/tests; with the .in stub: Makefile.in, MakeRules.in, MakeVars.in,; and runtest.pl.in, replace variables with system specific parameters,; and copy/create the testing files and directories in \$prefix/tests.; The tests should be run in the object directory before installation. If you have just added a new module for performing, say multireference ; coupled cluster, and you would like to add a test case to the current ; test suite, here is what you should do. ; \begin{enumerate}; \item Copy one of the existing test case directories to an ; appropriately named directory for the new test case. \item Create an appropriate input file for running the new module. ; Then, if your program produced the correct data, rename; the output files to *.ref. Follow the convention of the ; existing test cases. Make sure you add a descriptive comment to the; input file, stating what the calculation type is. Use the special comment; marker ``\%!'' to do this, so that the comment is inserted into the user's; manual. \item If the test case is small, add the directory name to the list; in \$PSI4/tests/Makefile.in. If the test is particularly tricky,; see the psi\_start or rhf-stab test cases as an example. \item All the testing functionality is located in the perl library; \file{runtest.pl.in}. If you are testing for a quantity that; is not searched for currently, then add a function to the ; library following the format of the functions already available.; If you have added functionality to the \PSIfour\ driver,; make sure to update the appropriate functions in \file{runtest.pl.in}. \item Add the location of the Makefile for the new test case; to the configure script in \$PSI4. \end{enumerate}. Please contact one of the authors of \PSIfour\ before making any; major chan",MatchSource.DOCS,doc/sphinxman/source/attic/progtestsuite.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst:1753,Deployability,update,update,1753,"SIfour\; executables have been installed. The configure script in \$PSI4 ; will take all the necessary files in \$PSI4/tests; with the .in stub: Makefile.in, MakeRules.in, MakeVars.in,; and runtest.pl.in, replace variables with system specific parameters,; and copy/create the testing files and directories in \$prefix/tests.; The tests should be run in the object directory before installation. If you have just added a new module for performing, say multireference ; coupled cluster, and you would like to add a test case to the current ; test suite, here is what you should do. ; \begin{enumerate}; \item Copy one of the existing test case directories to an ; appropriately named directory for the new test case. \item Create an appropriate input file for running the new module. ; Then, if your program produced the correct data, rename; the output files to *.ref. Follow the convention of the ; existing test cases. Make sure you add a descriptive comment to the; input file, stating what the calculation type is. Use the special comment; marker ``\%!'' to do this, so that the comment is inserted into the user's; manual. \item If the test case is small, add the directory name to the list; in \$PSI4/tests/Makefile.in. If the test is particularly tricky,; see the psi\_start or rhf-stab test cases as an example. \item All the testing functionality is located in the perl library; \file{runtest.pl.in}. If you are testing for a quantity that; is not searched for currently, then add a function to the ; library following the format of the functions already available.; If you have added functionality to the \PSIfour\ driver,; make sure to update the appropriate functions in \file{runtest.pl.in}. \item Add the location of the Makefile for the new test case; to the configure script in \$PSI4. \end{enumerate}. Please contact one of the authors of \PSIfour\ before making any; major changes or if you have a problem adding a new test case.; Remember, if all else fails, read the source code. ",MatchSource.DOCS,doc/sphinxman/source/attic/progtestsuite.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst:152,Modifiability,config,configure,152,"The \PSIfour\ test suite is designed to maximize code reuse and; provide testing in \$prefix before the \PSIfour\; executables have been installed. The configure script in \$PSI4 ; will take all the necessary files in \$PSI4/tests; with the .in stub: Makefile.in, MakeRules.in, MakeVars.in,; and runtest.pl.in, replace variables with system specific parameters,; and copy/create the testing files and directories in \$prefix/tests.; The tests should be run in the object directory before installation. If you have just added a new module for performing, say multireference ; coupled cluster, and you would like to add a test case to the current ; test suite, here is what you should do. ; \begin{enumerate}; \item Copy one of the existing test case directories to an ; appropriately named directory for the new test case. \item Create an appropriate input file for running the new module. ; Then, if your program produced the correct data, rename; the output files to *.ref. Follow the convention of the ; existing test cases. Make sure you add a descriptive comment to the; input file, stating what the calculation type is. Use the special comment; marker ``\%!'' to do this, so that the comment is inserted into the user's; manual. \item If the test case is small, add the directory name to the list; in \$PSI4/tests/Makefile.in. If the test is particularly tricky,; see the psi\_start or rhf-stab test cases as an example. \item All the testing functionality is located in the perl library; \file{runtest.pl.in}. If you are testing for a quantity that; is not searched for currently, then add a function to the ; library following the format of the functions already available.; If you have added functionality to the \PSIfour\ driver,; make sure to update the appropriate functions in \file{runtest.pl.in}. \item Add the location of the Makefile for the new test case; to the configure script in \$PSI4. \end{enumerate}. Please contact one of the authors of \PSIfour\ before making any; major chan",MatchSource.DOCS,doc/sphinxman/source/attic/progtestsuite.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst:319,Modifiability,variab,variables,319,"The \PSIfour\ test suite is designed to maximize code reuse and; provide testing in \$prefix before the \PSIfour\; executables have been installed. The configure script in \$PSI4 ; will take all the necessary files in \$PSI4/tests; with the .in stub: Makefile.in, MakeRules.in, MakeVars.in,; and runtest.pl.in, replace variables with system specific parameters,; and copy/create the testing files and directories in \$prefix/tests.; The tests should be run in the object directory before installation. If you have just added a new module for performing, say multireference ; coupled cluster, and you would like to add a test case to the current ; test suite, here is what you should do. ; \begin{enumerate}; \item Copy one of the existing test case directories to an ; appropriately named directory for the new test case. \item Create an appropriate input file for running the new module. ; Then, if your program produced the correct data, rename; the output files to *.ref. Follow the convention of the ; existing test cases. Make sure you add a descriptive comment to the; input file, stating what the calculation type is. Use the special comment; marker ``\%!'' to do this, so that the comment is inserted into the user's; manual. \item If the test case is small, add the directory name to the list; in \$PSI4/tests/Makefile.in. If the test is particularly tricky,; see the psi\_start or rhf-stab test cases as an example. \item All the testing functionality is located in the perl library; \file{runtest.pl.in}. If you are testing for a quantity that; is not searched for currently, then add a function to the ; library following the format of the functions already available.; If you have added functionality to the \PSIfour\ driver,; make sure to update the appropriate functions in \file{runtest.pl.in}. \item Add the location of the Makefile for the new test case; to the configure script in \$PSI4. \end{enumerate}. Please contact one of the authors of \PSIfour\ before making any; major chan",MatchSource.DOCS,doc/sphinxman/source/attic/progtestsuite.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst:1880,Modifiability,config,configure,1880,"SIfour\; executables have been installed. The configure script in \$PSI4 ; will take all the necessary files in \$PSI4/tests; with the .in stub: Makefile.in, MakeRules.in, MakeVars.in,; and runtest.pl.in, replace variables with system specific parameters,; and copy/create the testing files and directories in \$prefix/tests.; The tests should be run in the object directory before installation. If you have just added a new module for performing, say multireference ; coupled cluster, and you would like to add a test case to the current ; test suite, here is what you should do. ; \begin{enumerate}; \item Copy one of the existing test case directories to an ; appropriately named directory for the new test case. \item Create an appropriate input file for running the new module. ; Then, if your program produced the correct data, rename; the output files to *.ref. Follow the convention of the ; existing test cases. Make sure you add a descriptive comment to the; input file, stating what the calculation type is. Use the special comment; marker ``\%!'' to do this, so that the comment is inserted into the user's; manual. \item If the test case is small, add the directory name to the list; in \$PSI4/tests/Makefile.in. If the test is particularly tricky,; see the psi\_start or rhf-stab test cases as an example. \item All the testing functionality is located in the perl library; \file{runtest.pl.in}. If you are testing for a quantity that; is not searched for currently, then add a function to the ; library following the format of the functions already available.; If you have added functionality to the \PSIfour\ driver,; make sure to update the appropriate functions in \file{runtest.pl.in}. \item Add the location of the Makefile for the new test case; to the configure script in \$PSI4. \end{enumerate}. Please contact one of the authors of \PSIfour\ before making any; major changes or if you have a problem adding a new test case.; Remember, if all else fails, read the source code. ",MatchSource.DOCS,doc/sphinxman/source/attic/progtestsuite.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst:542,Performance,perform,performing,542,"The \PSIfour\ test suite is designed to maximize code reuse and; provide testing in \$prefix before the \PSIfour\; executables have been installed. The configure script in \$PSI4 ; will take all the necessary files in \$PSI4/tests; with the .in stub: Makefile.in, MakeRules.in, MakeVars.in,; and runtest.pl.in, replace variables with system specific parameters,; and copy/create the testing files and directories in \$prefix/tests.; The tests should be run in the object directory before installation. If you have just added a new module for performing, say multireference ; coupled cluster, and you would like to add a test case to the current ; test suite, here is what you should do. ; \begin{enumerate}; \item Copy one of the existing test case directories to an ; appropriately named directory for the new test case. \item Create an appropriate input file for running the new module. ; Then, if your program produced the correct data, rename; the output files to *.ref. Follow the convention of the ; existing test cases. Make sure you add a descriptive comment to the; input file, stating what the calculation type is. Use the special comment; marker ``\%!'' to do this, so that the comment is inserted into the user's; manual. \item If the test case is small, add the directory name to the list; in \$PSI4/tests/Makefile.in. If the test is particularly tricky,; see the psi\_start or rhf-stab test cases as an example. \item All the testing functionality is located in the perl library; \file{runtest.pl.in}. If you are testing for a quantity that; is not searched for currently, then add a function to the ; library following the format of the functions already available.; If you have added functionality to the \PSIfour\ driver,; make sure to update the appropriate functions in \file{runtest.pl.in}. \item Add the location of the Makefile for the new test case; to the configure script in \$PSI4. \end{enumerate}. Please contact one of the authors of \PSIfour\ before making any; major chan",MatchSource.DOCS,doc/sphinxman/source/attic/progtestsuite.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst:14,Testability,test,test,14,"The \PSIfour\ test suite is designed to maximize code reuse and; provide testing in \$prefix before the \PSIfour\; executables have been installed. The configure script in \$PSI4 ; will take all the necessary files in \$PSI4/tests; with the .in stub: Makefile.in, MakeRules.in, MakeVars.in,; and runtest.pl.in, replace variables with system specific parameters,; and copy/create the testing files and directories in \$prefix/tests.; The tests should be run in the object directory before installation. If you have just added a new module for performing, say multireference ; coupled cluster, and you would like to add a test case to the current ; test suite, here is what you should do. ; \begin{enumerate}; \item Copy one of the existing test case directories to an ; appropriately named directory for the new test case. \item Create an appropriate input file for running the new module. ; Then, if your program produced the correct data, rename; the output files to *.ref. Follow the convention of the ; existing test cases. Make sure you add a descriptive comment to the; input file, stating what the calculation type is. Use the special comment; marker ``\%!'' to do this, so that the comment is inserted into the user's; manual. \item If the test case is small, add the directory name to the list; in \$PSI4/tests/Makefile.in. If the test is particularly tricky,; see the psi\_start or rhf-stab test cases as an example. \item All the testing functionality is located in the perl library; \file{runtest.pl.in}. If you are testing for a quantity that; is not searched for currently, then add a function to the ; library following the format of the functions already available.; If you have added functionality to the \PSIfour\ driver,; make sure to update the appropriate functions in \file{runtest.pl.in}. \item Add the location of the Makefile for the new test case; to the configure script in \$PSI4. \end{enumerate}. Please contact one of the authors of \PSIfour\ before making any; major chan",MatchSource.DOCS,doc/sphinxman/source/attic/progtestsuite.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst:73,Testability,test,testing,73,"The \PSIfour\ test suite is designed to maximize code reuse and; provide testing in \$prefix before the \PSIfour\; executables have been installed. The configure script in \$PSI4 ; will take all the necessary files in \$PSI4/tests; with the .in stub: Makefile.in, MakeRules.in, MakeVars.in,; and runtest.pl.in, replace variables with system specific parameters,; and copy/create the testing files and directories in \$prefix/tests.; The tests should be run in the object directory before installation. If you have just added a new module for performing, say multireference ; coupled cluster, and you would like to add a test case to the current ; test suite, here is what you should do. ; \begin{enumerate}; \item Copy one of the existing test case directories to an ; appropriately named directory for the new test case. \item Create an appropriate input file for running the new module. ; Then, if your program produced the correct data, rename; the output files to *.ref. Follow the convention of the ; existing test cases. Make sure you add a descriptive comment to the; input file, stating what the calculation type is. Use the special comment; marker ``\%!'' to do this, so that the comment is inserted into the user's; manual. \item If the test case is small, add the directory name to the list; in \$PSI4/tests/Makefile.in. If the test is particularly tricky,; see the psi\_start or rhf-stab test cases as an example. \item All the testing functionality is located in the perl library; \file{runtest.pl.in}. If you are testing for a quantity that; is not searched for currently, then add a function to the ; library following the format of the functions already available.; If you have added functionality to the \PSIfour\ driver,; make sure to update the appropriate functions in \file{runtest.pl.in}. \item Add the location of the Makefile for the new test case; to the configure script in \$PSI4. \end{enumerate}. Please contact one of the authors of \PSIfour\ before making any; major chan",MatchSource.DOCS,doc/sphinxman/source/attic/progtestsuite.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst:225,Testability,test,tests,225,"The \PSIfour\ test suite is designed to maximize code reuse and; provide testing in \$prefix before the \PSIfour\; executables have been installed. The configure script in \$PSI4 ; will take all the necessary files in \$PSI4/tests; with the .in stub: Makefile.in, MakeRules.in, MakeVars.in,; and runtest.pl.in, replace variables with system specific parameters,; and copy/create the testing files and directories in \$prefix/tests.; The tests should be run in the object directory before installation. If you have just added a new module for performing, say multireference ; coupled cluster, and you would like to add a test case to the current ; test suite, here is what you should do. ; \begin{enumerate}; \item Copy one of the existing test case directories to an ; appropriately named directory for the new test case. \item Create an appropriate input file for running the new module. ; Then, if your program produced the correct data, rename; the output files to *.ref. Follow the convention of the ; existing test cases. Make sure you add a descriptive comment to the; input file, stating what the calculation type is. Use the special comment; marker ``\%!'' to do this, so that the comment is inserted into the user's; manual. \item If the test case is small, add the directory name to the list; in \$PSI4/tests/Makefile.in. If the test is particularly tricky,; see the psi\_start or rhf-stab test cases as an example. \item All the testing functionality is located in the perl library; \file{runtest.pl.in}. If you are testing for a quantity that; is not searched for currently, then add a function to the ; library following the format of the functions already available.; If you have added functionality to the \PSIfour\ driver,; make sure to update the appropriate functions in \file{runtest.pl.in}. \item Add the location of the Makefile for the new test case; to the configure script in \$PSI4. \end{enumerate}. Please contact one of the authors of \PSIfour\ before making any; major chan",MatchSource.DOCS,doc/sphinxman/source/attic/progtestsuite.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst:245,Testability,stub,stub,245,"The \PSIfour\ test suite is designed to maximize code reuse and; provide testing in \$prefix before the \PSIfour\; executables have been installed. The configure script in \$PSI4 ; will take all the necessary files in \$PSI4/tests; with the .in stub: Makefile.in, MakeRules.in, MakeVars.in,; and runtest.pl.in, replace variables with system specific parameters,; and copy/create the testing files and directories in \$prefix/tests.; The tests should be run in the object directory before installation. If you have just added a new module for performing, say multireference ; coupled cluster, and you would like to add a test case to the current ; test suite, here is what you should do. ; \begin{enumerate}; \item Copy one of the existing test case directories to an ; appropriately named directory for the new test case. \item Create an appropriate input file for running the new module. ; Then, if your program produced the correct data, rename; the output files to *.ref. Follow the convention of the ; existing test cases. Make sure you add a descriptive comment to the; input file, stating what the calculation type is. Use the special comment; marker ``\%!'' to do this, so that the comment is inserted into the user's; manual. \item If the test case is small, add the directory name to the list; in \$PSI4/tests/Makefile.in. If the test is particularly tricky,; see the psi\_start or rhf-stab test cases as an example. \item All the testing functionality is located in the perl library; \file{runtest.pl.in}. If you are testing for a quantity that; is not searched for currently, then add a function to the ; library following the format of the functions already available.; If you have added functionality to the \PSIfour\ driver,; make sure to update the appropriate functions in \file{runtest.pl.in}. \item Add the location of the Makefile for the new test case; to the configure script in \$PSI4. \end{enumerate}. Please contact one of the authors of \PSIfour\ before making any; major chan",MatchSource.DOCS,doc/sphinxman/source/attic/progtestsuite.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst:383,Testability,test,testing,383,"The \PSIfour\ test suite is designed to maximize code reuse and; provide testing in \$prefix before the \PSIfour\; executables have been installed. The configure script in \$PSI4 ; will take all the necessary files in \$PSI4/tests; with the .in stub: Makefile.in, MakeRules.in, MakeVars.in,; and runtest.pl.in, replace variables with system specific parameters,; and copy/create the testing files and directories in \$prefix/tests.; The tests should be run in the object directory before installation. If you have just added a new module for performing, say multireference ; coupled cluster, and you would like to add a test case to the current ; test suite, here is what you should do. ; \begin{enumerate}; \item Copy one of the existing test case directories to an ; appropriately named directory for the new test case. \item Create an appropriate input file for running the new module. ; Then, if your program produced the correct data, rename; the output files to *.ref. Follow the convention of the ; existing test cases. Make sure you add a descriptive comment to the; input file, stating what the calculation type is. Use the special comment; marker ``\%!'' to do this, so that the comment is inserted into the user's; manual. \item If the test case is small, add the directory name to the list; in \$PSI4/tests/Makefile.in. If the test is particularly tricky,; see the psi\_start or rhf-stab test cases as an example. \item All the testing functionality is located in the perl library; \file{runtest.pl.in}. If you are testing for a quantity that; is not searched for currently, then add a function to the ; library following the format of the functions already available.; If you have added functionality to the \PSIfour\ driver,; make sure to update the appropriate functions in \file{runtest.pl.in}. \item Add the location of the Makefile for the new test case; to the configure script in \$PSI4. \end{enumerate}. Please contact one of the authors of \PSIfour\ before making any; major chan",MatchSource.DOCS,doc/sphinxman/source/attic/progtestsuite.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst:425,Testability,test,tests,425,"The \PSIfour\ test suite is designed to maximize code reuse and; provide testing in \$prefix before the \PSIfour\; executables have been installed. The configure script in \$PSI4 ; will take all the necessary files in \$PSI4/tests; with the .in stub: Makefile.in, MakeRules.in, MakeVars.in,; and runtest.pl.in, replace variables with system specific parameters,; and copy/create the testing files and directories in \$prefix/tests.; The tests should be run in the object directory before installation. If you have just added a new module for performing, say multireference ; coupled cluster, and you would like to add a test case to the current ; test suite, here is what you should do. ; \begin{enumerate}; \item Copy one of the existing test case directories to an ; appropriately named directory for the new test case. \item Create an appropriate input file for running the new module. ; Then, if your program produced the correct data, rename; the output files to *.ref. Follow the convention of the ; existing test cases. Make sure you add a descriptive comment to the; input file, stating what the calculation type is. Use the special comment; marker ``\%!'' to do this, so that the comment is inserted into the user's; manual. \item If the test case is small, add the directory name to the list; in \$PSI4/tests/Makefile.in. If the test is particularly tricky,; see the psi\_start or rhf-stab test cases as an example. \item All the testing functionality is located in the perl library; \file{runtest.pl.in}. If you are testing for a quantity that; is not searched for currently, then add a function to the ; library following the format of the functions already available.; If you have added functionality to the \PSIfour\ driver,; make sure to update the appropriate functions in \file{runtest.pl.in}. \item Add the location of the Makefile for the new test case; to the configure script in \$PSI4. \end{enumerate}. Please contact one of the authors of \PSIfour\ before making any; major chan",MatchSource.DOCS,doc/sphinxman/source/attic/progtestsuite.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst:437,Testability,test,tests,437,"The \PSIfour\ test suite is designed to maximize code reuse and; provide testing in \$prefix before the \PSIfour\; executables have been installed. The configure script in \$PSI4 ; will take all the necessary files in \$PSI4/tests; with the .in stub: Makefile.in, MakeRules.in, MakeVars.in,; and runtest.pl.in, replace variables with system specific parameters,; and copy/create the testing files and directories in \$prefix/tests.; The tests should be run in the object directory before installation. If you have just added a new module for performing, say multireference ; coupled cluster, and you would like to add a test case to the current ; test suite, here is what you should do. ; \begin{enumerate}; \item Copy one of the existing test case directories to an ; appropriately named directory for the new test case. \item Create an appropriate input file for running the new module. ; Then, if your program produced the correct data, rename; the output files to *.ref. Follow the convention of the ; existing test cases. Make sure you add a descriptive comment to the; input file, stating what the calculation type is. Use the special comment; marker ``\%!'' to do this, so that the comment is inserted into the user's; manual. \item If the test case is small, add the directory name to the list; in \$PSI4/tests/Makefile.in. If the test is particularly tricky,; see the psi\_start or rhf-stab test cases as an example. \item All the testing functionality is located in the perl library; \file{runtest.pl.in}. If you are testing for a quantity that; is not searched for currently, then add a function to the ; library following the format of the functions already available.; If you have added functionality to the \PSIfour\ driver,; make sure to update the appropriate functions in \file{runtest.pl.in}. \item Add the location of the Makefile for the new test case; to the configure script in \$PSI4. \end{enumerate}. Please contact one of the authors of \PSIfour\ before making any; major chan",MatchSource.DOCS,doc/sphinxman/source/attic/progtestsuite.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst:620,Testability,test,test,620,"The \PSIfour\ test suite is designed to maximize code reuse and; provide testing in \$prefix before the \PSIfour\; executables have been installed. The configure script in \$PSI4 ; will take all the necessary files in \$PSI4/tests; with the .in stub: Makefile.in, MakeRules.in, MakeVars.in,; and runtest.pl.in, replace variables with system specific parameters,; and copy/create the testing files and directories in \$prefix/tests.; The tests should be run in the object directory before installation. If you have just added a new module for performing, say multireference ; coupled cluster, and you would like to add a test case to the current ; test suite, here is what you should do. ; \begin{enumerate}; \item Copy one of the existing test case directories to an ; appropriately named directory for the new test case. \item Create an appropriate input file for running the new module. ; Then, if your program produced the correct data, rename; the output files to *.ref. Follow the convention of the ; existing test cases. Make sure you add a descriptive comment to the; input file, stating what the calculation type is. Use the special comment; marker ``\%!'' to do this, so that the comment is inserted into the user's; manual. \item If the test case is small, add the directory name to the list; in \$PSI4/tests/Makefile.in. If the test is particularly tricky,; see the psi\_start or rhf-stab test cases as an example. \item All the testing functionality is located in the perl library; \file{runtest.pl.in}. If you are testing for a quantity that; is not searched for currently, then add a function to the ; library following the format of the functions already available.; If you have added functionality to the \PSIfour\ driver,; make sure to update the appropriate functions in \file{runtest.pl.in}. \item Add the location of the Makefile for the new test case; to the configure script in \$PSI4. \end{enumerate}. Please contact one of the authors of \PSIfour\ before making any; major chan",MatchSource.DOCS,doc/sphinxman/source/attic/progtestsuite.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst:647,Testability,test,test,647,"The \PSIfour\ test suite is designed to maximize code reuse and; provide testing in \$prefix before the \PSIfour\; executables have been installed. The configure script in \$PSI4 ; will take all the necessary files in \$PSI4/tests; with the .in stub: Makefile.in, MakeRules.in, MakeVars.in,; and runtest.pl.in, replace variables with system specific parameters,; and copy/create the testing files and directories in \$prefix/tests.; The tests should be run in the object directory before installation. If you have just added a new module for performing, say multireference ; coupled cluster, and you would like to add a test case to the current ; test suite, here is what you should do. ; \begin{enumerate}; \item Copy one of the existing test case directories to an ; appropriately named directory for the new test case. \item Create an appropriate input file for running the new module. ; Then, if your program produced the correct data, rename; the output files to *.ref. Follow the convention of the ; existing test cases. Make sure you add a descriptive comment to the; input file, stating what the calculation type is. Use the special comment; marker ``\%!'' to do this, so that the comment is inserted into the user's; manual. \item If the test case is small, add the directory name to the list; in \$PSI4/tests/Makefile.in. If the test is particularly tricky,; see the psi\_start or rhf-stab test cases as an example. \item All the testing functionality is located in the perl library; \file{runtest.pl.in}. If you are testing for a quantity that; is not searched for currently, then add a function to the ; library following the format of the functions already available.; If you have added functionality to the \PSIfour\ driver,; make sure to update the appropriate functions in \file{runtest.pl.in}. \item Add the location of the Makefile for the new test case; to the configure script in \$PSI4. \end{enumerate}. Please contact one of the authors of \PSIfour\ before making any; major chan",MatchSource.DOCS,doc/sphinxman/source/attic/progtestsuite.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst:739,Testability,test,test,739,"The \PSIfour\ test suite is designed to maximize code reuse and; provide testing in \$prefix before the \PSIfour\; executables have been installed. The configure script in \$PSI4 ; will take all the necessary files in \$PSI4/tests; with the .in stub: Makefile.in, MakeRules.in, MakeVars.in,; and runtest.pl.in, replace variables with system specific parameters,; and copy/create the testing files and directories in \$prefix/tests.; The tests should be run in the object directory before installation. If you have just added a new module for performing, say multireference ; coupled cluster, and you would like to add a test case to the current ; test suite, here is what you should do. ; \begin{enumerate}; \item Copy one of the existing test case directories to an ; appropriately named directory for the new test case. \item Create an appropriate input file for running the new module. ; Then, if your program produced the correct data, rename; the output files to *.ref. Follow the convention of the ; existing test cases. Make sure you add a descriptive comment to the; input file, stating what the calculation type is. Use the special comment; marker ``\%!'' to do this, so that the comment is inserted into the user's; manual. \item If the test case is small, add the directory name to the list; in \$PSI4/tests/Makefile.in. If the test is particularly tricky,; see the psi\_start or rhf-stab test cases as an example. \item All the testing functionality is located in the perl library; \file{runtest.pl.in}. If you are testing for a quantity that; is not searched for currently, then add a function to the ; library following the format of the functions already available.; If you have added functionality to the \PSIfour\ driver,; make sure to update the appropriate functions in \file{runtest.pl.in}. \item Add the location of the Makefile for the new test case; to the configure script in \$PSI4. \end{enumerate}. Please contact one of the authors of \PSIfour\ before making any; major chan",MatchSource.DOCS,doc/sphinxman/source/attic/progtestsuite.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst:811,Testability,test,test,811,"The \PSIfour\ test suite is designed to maximize code reuse and; provide testing in \$prefix before the \PSIfour\; executables have been installed. The configure script in \$PSI4 ; will take all the necessary files in \$PSI4/tests; with the .in stub: Makefile.in, MakeRules.in, MakeVars.in,; and runtest.pl.in, replace variables with system specific parameters,; and copy/create the testing files and directories in \$prefix/tests.; The tests should be run in the object directory before installation. If you have just added a new module for performing, say multireference ; coupled cluster, and you would like to add a test case to the current ; test suite, here is what you should do. ; \begin{enumerate}; \item Copy one of the existing test case directories to an ; appropriately named directory for the new test case. \item Create an appropriate input file for running the new module. ; Then, if your program produced the correct data, rename; the output files to *.ref. Follow the convention of the ; existing test cases. Make sure you add a descriptive comment to the; input file, stating what the calculation type is. Use the special comment; marker ``\%!'' to do this, so that the comment is inserted into the user's; manual. \item If the test case is small, add the directory name to the list; in \$PSI4/tests/Makefile.in. If the test is particularly tricky,; see the psi\_start or rhf-stab test cases as an example. \item All the testing functionality is located in the perl library; \file{runtest.pl.in}. If you are testing for a quantity that; is not searched for currently, then add a function to the ; library following the format of the functions already available.; If you have added functionality to the \PSIfour\ driver,; make sure to update the appropriate functions in \file{runtest.pl.in}. \item Add the location of the Makefile for the new test case; to the configure script in \$PSI4. \end{enumerate}. Please contact one of the authors of \PSIfour\ before making any; major chan",MatchSource.DOCS,doc/sphinxman/source/attic/progtestsuite.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst:1015,Testability,test,test,1015,"The \PSIfour\ test suite is designed to maximize code reuse and; provide testing in \$prefix before the \PSIfour\; executables have been installed. The configure script in \$PSI4 ; will take all the necessary files in \$PSI4/tests; with the .in stub: Makefile.in, MakeRules.in, MakeVars.in,; and runtest.pl.in, replace variables with system specific parameters,; and copy/create the testing files and directories in \$prefix/tests.; The tests should be run in the object directory before installation. If you have just added a new module for performing, say multireference ; coupled cluster, and you would like to add a test case to the current ; test suite, here is what you should do. ; \begin{enumerate}; \item Copy one of the existing test case directories to an ; appropriately named directory for the new test case. \item Create an appropriate input file for running the new module. ; Then, if your program produced the correct data, rename; the output files to *.ref. Follow the convention of the ; existing test cases. Make sure you add a descriptive comment to the; input file, stating what the calculation type is. Use the special comment; marker ``\%!'' to do this, so that the comment is inserted into the user's; manual. \item If the test case is small, add the directory name to the list; in \$PSI4/tests/Makefile.in. If the test is particularly tricky,; see the psi\_start or rhf-stab test cases as an example. \item All the testing functionality is located in the perl library; \file{runtest.pl.in}. If you are testing for a quantity that; is not searched for currently, then add a function to the ; library following the format of the functions already available.; If you have added functionality to the \PSIfour\ driver,; make sure to update the appropriate functions in \file{runtest.pl.in}. \item Add the location of the Makefile for the new test case; to the configure script in \$PSI4. \end{enumerate}. Please contact one of the authors of \PSIfour\ before making any; major cha",MatchSource.DOCS,doc/sphinxman/source/attic/progtestsuite.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst:1247,Testability,test,test,1247,"SIfour\; executables have been installed. The configure script in \$PSI4 ; will take all the necessary files in \$PSI4/tests; with the .in stub: Makefile.in, MakeRules.in, MakeVars.in,; and runtest.pl.in, replace variables with system specific parameters,; and copy/create the testing files and directories in \$prefix/tests.; The tests should be run in the object directory before installation. If you have just added a new module for performing, say multireference ; coupled cluster, and you would like to add a test case to the current ; test suite, here is what you should do. ; \begin{enumerate}; \item Copy one of the existing test case directories to an ; appropriately named directory for the new test case. \item Create an appropriate input file for running the new module. ; Then, if your program produced the correct data, rename; the output files to *.ref. Follow the convention of the ; existing test cases. Make sure you add a descriptive comment to the; input file, stating what the calculation type is. Use the special comment; marker ``\%!'' to do this, so that the comment is inserted into the user's; manual. \item If the test case is small, add the directory name to the list; in \$PSI4/tests/Makefile.in. If the test is particularly tricky,; see the psi\_start or rhf-stab test cases as an example. \item All the testing functionality is located in the perl library; \file{runtest.pl.in}. If you are testing for a quantity that; is not searched for currently, then add a function to the ; library following the format of the functions already available.; If you have added functionality to the \PSIfour\ driver,; make sure to update the appropriate functions in \file{runtest.pl.in}. \item Add the location of the Makefile for the new test case; to the configure script in \$PSI4. \end{enumerate}. Please contact one of the authors of \PSIfour\ before making any; major changes or if you have a problem adding a new test case.; Remember, if all else fails, read the source code. ",MatchSource.DOCS,doc/sphinxman/source/attic/progtestsuite.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst:1313,Testability,test,tests,1313,"SIfour\; executables have been installed. The configure script in \$PSI4 ; will take all the necessary files in \$PSI4/tests; with the .in stub: Makefile.in, MakeRules.in, MakeVars.in,; and runtest.pl.in, replace variables with system specific parameters,; and copy/create the testing files and directories in \$prefix/tests.; The tests should be run in the object directory before installation. If you have just added a new module for performing, say multireference ; coupled cluster, and you would like to add a test case to the current ; test suite, here is what you should do. ; \begin{enumerate}; \item Copy one of the existing test case directories to an ; appropriately named directory for the new test case. \item Create an appropriate input file for running the new module. ; Then, if your program produced the correct data, rename; the output files to *.ref. Follow the convention of the ; existing test cases. Make sure you add a descriptive comment to the; input file, stating what the calculation type is. Use the special comment; marker ``\%!'' to do this, so that the comment is inserted into the user's; manual. \item If the test case is small, add the directory name to the list; in \$PSI4/tests/Makefile.in. If the test is particularly tricky,; see the psi\_start or rhf-stab test cases as an example. \item All the testing functionality is located in the perl library; \file{runtest.pl.in}. If you are testing for a quantity that; is not searched for currently, then add a function to the ; library following the format of the functions already available.; If you have added functionality to the \PSIfour\ driver,; make sure to update the appropriate functions in \file{runtest.pl.in}. \item Add the location of the Makefile for the new test case; to the configure script in \$PSI4. \end{enumerate}. Please contact one of the authors of \PSIfour\ before making any; major changes or if you have a problem adding a new test case.; Remember, if all else fails, read the source code. ",MatchSource.DOCS,doc/sphinxman/source/attic/progtestsuite.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst:1339,Testability,test,test,1339,"SIfour\; executables have been installed. The configure script in \$PSI4 ; will take all the necessary files in \$PSI4/tests; with the .in stub: Makefile.in, MakeRules.in, MakeVars.in,; and runtest.pl.in, replace variables with system specific parameters,; and copy/create the testing files and directories in \$prefix/tests.; The tests should be run in the object directory before installation. If you have just added a new module for performing, say multireference ; coupled cluster, and you would like to add a test case to the current ; test suite, here is what you should do. ; \begin{enumerate}; \item Copy one of the existing test case directories to an ; appropriately named directory for the new test case. \item Create an appropriate input file for running the new module. ; Then, if your program produced the correct data, rename; the output files to *.ref. Follow the convention of the ; existing test cases. Make sure you add a descriptive comment to the; input file, stating what the calculation type is. Use the special comment; marker ``\%!'' to do this, so that the comment is inserted into the user's; manual. \item If the test case is small, add the directory name to the list; in \$PSI4/tests/Makefile.in. If the test is particularly tricky,; see the psi\_start or rhf-stab test cases as an example. \item All the testing functionality is located in the perl library; \file{runtest.pl.in}. If you are testing for a quantity that; is not searched for currently, then add a function to the ; library following the format of the functions already available.; If you have added functionality to the \PSIfour\ driver,; make sure to update the appropriate functions in \file{runtest.pl.in}. \item Add the location of the Makefile for the new test case; to the configure script in \$PSI4. \end{enumerate}. Please contact one of the authors of \PSIfour\ before making any; major changes or if you have a problem adding a new test case.; Remember, if all else fails, read the source code. ",MatchSource.DOCS,doc/sphinxman/source/attic/progtestsuite.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst:1400,Testability,test,test,1400,"SIfour\; executables have been installed. The configure script in \$PSI4 ; will take all the necessary files in \$PSI4/tests; with the .in stub: Makefile.in, MakeRules.in, MakeVars.in,; and runtest.pl.in, replace variables with system specific parameters,; and copy/create the testing files and directories in \$prefix/tests.; The tests should be run in the object directory before installation. If you have just added a new module for performing, say multireference ; coupled cluster, and you would like to add a test case to the current ; test suite, here is what you should do. ; \begin{enumerate}; \item Copy one of the existing test case directories to an ; appropriately named directory for the new test case. \item Create an appropriate input file for running the new module. ; Then, if your program produced the correct data, rename; the output files to *.ref. Follow the convention of the ; existing test cases. Make sure you add a descriptive comment to the; input file, stating what the calculation type is. Use the special comment; marker ``\%!'' to do this, so that the comment is inserted into the user's; manual. \item If the test case is small, add the directory name to the list; in \$PSI4/tests/Makefile.in. If the test is particularly tricky,; see the psi\_start or rhf-stab test cases as an example. \item All the testing functionality is located in the perl library; \file{runtest.pl.in}. If you are testing for a quantity that; is not searched for currently, then add a function to the ; library following the format of the functions already available.; If you have added functionality to the \PSIfour\ driver,; make sure to update the appropriate functions in \file{runtest.pl.in}. \item Add the location of the Makefile for the new test case; to the configure script in \$PSI4. \end{enumerate}. Please contact one of the authors of \PSIfour\ before making any; major changes or if you have a problem adding a new test case.; Remember, if all else fails, read the source code. ",MatchSource.DOCS,doc/sphinxman/source/attic/progtestsuite.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst:1440,Testability,test,testing,1440,"SIfour\; executables have been installed. The configure script in \$PSI4 ; will take all the necessary files in \$PSI4/tests; with the .in stub: Makefile.in, MakeRules.in, MakeVars.in,; and runtest.pl.in, replace variables with system specific parameters,; and copy/create the testing files and directories in \$prefix/tests.; The tests should be run in the object directory before installation. If you have just added a new module for performing, say multireference ; coupled cluster, and you would like to add a test case to the current ; test suite, here is what you should do. ; \begin{enumerate}; \item Copy one of the existing test case directories to an ; appropriately named directory for the new test case. \item Create an appropriate input file for running the new module. ; Then, if your program produced the correct data, rename; the output files to *.ref. Follow the convention of the ; existing test cases. Make sure you add a descriptive comment to the; input file, stating what the calculation type is. Use the special comment; marker ``\%!'' to do this, so that the comment is inserted into the user's; manual. \item If the test case is small, add the directory name to the list; in \$PSI4/tests/Makefile.in. If the test is particularly tricky,; see the psi\_start or rhf-stab test cases as an example. \item All the testing functionality is located in the perl library; \file{runtest.pl.in}. If you are testing for a quantity that; is not searched for currently, then add a function to the ; library following the format of the functions already available.; If you have added functionality to the \PSIfour\ driver,; make sure to update the appropriate functions in \file{runtest.pl.in}. \item Add the location of the Makefile for the new test case; to the configure script in \$PSI4. \end{enumerate}. Please contact one of the authors of \PSIfour\ before making any; major changes or if you have a problem adding a new test case.; Remember, if all else fails, read the source code. ",MatchSource.DOCS,doc/sphinxman/source/attic/progtestsuite.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst:1527,Testability,test,testing,1527,"SIfour\; executables have been installed. The configure script in \$PSI4 ; will take all the necessary files in \$PSI4/tests; with the .in stub: Makefile.in, MakeRules.in, MakeVars.in,; and runtest.pl.in, replace variables with system specific parameters,; and copy/create the testing files and directories in \$prefix/tests.; The tests should be run in the object directory before installation. If you have just added a new module for performing, say multireference ; coupled cluster, and you would like to add a test case to the current ; test suite, here is what you should do. ; \begin{enumerate}; \item Copy one of the existing test case directories to an ; appropriately named directory for the new test case. \item Create an appropriate input file for running the new module. ; Then, if your program produced the correct data, rename; the output files to *.ref. Follow the convention of the ; existing test cases. Make sure you add a descriptive comment to the; input file, stating what the calculation type is. Use the special comment; marker ``\%!'' to do this, so that the comment is inserted into the user's; manual. \item If the test case is small, add the directory name to the list; in \$PSI4/tests/Makefile.in. If the test is particularly tricky,; see the psi\_start or rhf-stab test cases as an example. \item All the testing functionality is located in the perl library; \file{runtest.pl.in}. If you are testing for a quantity that; is not searched for currently, then add a function to the ; library following the format of the functions already available.; If you have added functionality to the \PSIfour\ driver,; make sure to update the appropriate functions in \file{runtest.pl.in}. \item Add the location of the Makefile for the new test case; to the configure script in \$PSI4. \end{enumerate}. Please contact one of the authors of \PSIfour\ before making any; major changes or if you have a problem adding a new test case.; Remember, if all else fails, read the source code. ",MatchSource.DOCS,doc/sphinxman/source/attic/progtestsuite.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst:1862,Testability,test,test,1862,"SIfour\; executables have been installed. The configure script in \$PSI4 ; will take all the necessary files in \$PSI4/tests; with the .in stub: Makefile.in, MakeRules.in, MakeVars.in,; and runtest.pl.in, replace variables with system specific parameters,; and copy/create the testing files and directories in \$prefix/tests.; The tests should be run in the object directory before installation. If you have just added a new module for performing, say multireference ; coupled cluster, and you would like to add a test case to the current ; test suite, here is what you should do. ; \begin{enumerate}; \item Copy one of the existing test case directories to an ; appropriately named directory for the new test case. \item Create an appropriate input file for running the new module. ; Then, if your program produced the correct data, rename; the output files to *.ref. Follow the convention of the ; existing test cases. Make sure you add a descriptive comment to the; input file, stating what the calculation type is. Use the special comment; marker ``\%!'' to do this, so that the comment is inserted into the user's; manual. \item If the test case is small, add the directory name to the list; in \$PSI4/tests/Makefile.in. If the test is particularly tricky,; see the psi\_start or rhf-stab test cases as an example. \item All the testing functionality is located in the perl library; \file{runtest.pl.in}. If you are testing for a quantity that; is not searched for currently, then add a function to the ; library following the format of the functions already available.; If you have added functionality to the \PSIfour\ driver,; make sure to update the appropriate functions in \file{runtest.pl.in}. \item Add the location of the Makefile for the new test case; to the configure script in \$PSI4. \end{enumerate}. Please contact one of the authors of \PSIfour\ before making any; major changes or if you have a problem adding a new test case.; Remember, if all else fails, read the source code. ",MatchSource.DOCS,doc/sphinxman/source/attic/progtestsuite.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst:2043,Testability,test,test,2043,"SIfour\; executables have been installed. The configure script in \$PSI4 ; will take all the necessary files in \$PSI4/tests; with the .in stub: Makefile.in, MakeRules.in, MakeVars.in,; and runtest.pl.in, replace variables with system specific parameters,; and copy/create the testing files and directories in \$prefix/tests.; The tests should be run in the object directory before installation. If you have just added a new module for performing, say multireference ; coupled cluster, and you would like to add a test case to the current ; test suite, here is what you should do. ; \begin{enumerate}; \item Copy one of the existing test case directories to an ; appropriately named directory for the new test case. \item Create an appropriate input file for running the new module. ; Then, if your program produced the correct data, rename; the output files to *.ref. Follow the convention of the ; existing test cases. Make sure you add a descriptive comment to the; input file, stating what the calculation type is. Use the special comment; marker ``\%!'' to do this, so that the comment is inserted into the user's; manual. \item If the test case is small, add the directory name to the list; in \$PSI4/tests/Makefile.in. If the test is particularly tricky,; see the psi\_start or rhf-stab test cases as an example. \item All the testing functionality is located in the perl library; \file{runtest.pl.in}. If you are testing for a quantity that; is not searched for currently, then add a function to the ; library following the format of the functions already available.; If you have added functionality to the \PSIfour\ driver,; make sure to update the appropriate functions in \file{runtest.pl.in}. \item Add the location of the Makefile for the new test case; to the configure script in \$PSI4. \end{enumerate}. Please contact one of the authors of \PSIfour\ before making any; major changes or if you have a problem adding a new test case.; Remember, if all else fails, read the source code. ",MatchSource.DOCS,doc/sphinxman/source/attic/progtestsuite.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtutorial.rst:3511,Availability,down,down,3511," to different parts of the code, but having; the same name, would cause conflicts. The \module{read\_options} function is; responsible for setting up the \module{Options} object, which contains the list; of user-provided options. Lines 25--32 are important - these provide the list; of keywords expected by the code, their types, and their default values (if; any). This part of the code will be inserted into the \PSIfour\ driver when; the module is ready for merging with the \PSIfour\ distribution; this process; will be detailed later in the chapter. Notice the special format of the; comments on lines 27 and 30. These are still valid \module{C++} comments, but; the extra hyphens inside are essential in this context. Whenever adding any; options for any module, you must comment them as shown - this will ensure that; the keywords are automatically inserted into the \PSIfour\ users' manual. The; \module{main} function does a little setting up of the \PSI\ input and output; environments, before calling the module code we're developing (on line 53) and; shutting down the \PSIfour\ I/O systems. The module we're developing is in the following source file. \includesource{sample-codes/integrals/integrals.cc}{C++}. Given the extensive documentation within the code, we'll not describe this file; line-by-line; however, some points warrant elaboration. Notice that the entire; module is encapsulated in the \module{psi::integrals} namespace (lines 6 and; 92). This simple example has only one function body, which lives in a single; source file - if more functions and/or source files were added, these too would; have to live in the \module{psi::integrals} namespace. On lines 29 and 31 of; \file{main.cc} we told the parser which keywords to expect, and provided; default values in case the user omited them from the input. This makes; retrieving these options very clean and simple ({\it c.f.} lines 11 and 12 of; \file{integrals.cc}). Each \PSIfour\ module will have to initialize its own; ",MatchSource.DOCS,doc/sphinxman/source/attic/progtutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtutorial.rst:74,Deployability,integrat,integrated,74,"As noted previously, we want to start from a code that's not too tightly; integrated with the \PSIfour\ code itself, so we begin with a \file{Makefile}; that will allow us to write a standalone code that includes all requisite \PSI\; libraries. We're going to write a small sample code that generates integrals,; which involves two just two source files. We begin by defining a; \file{Makefile} that will include all of the \PSIfour\ libraries and header; files, so that we can take full advantage of the wide range of features; implemented without having to worry about the details of their implementation. \includesource{sample-codes/integrals/Makefile}{make}. Only a few lines of this makefile need to be modified to utilize it for other; programming projects; we'll concentrate on them. On the second line, we define; the name of the executable to be generated, in this example we opt for the; unimaginative title of \module{integrals}. Line 4 provides the list of source files; that the project comprises; these will be detailed below. The top source; directory for the \PSIfour\ installation and the top object directory (where; \PSIfour\ was compiled) should be provided on lines 6 and 8, respectively.; Lines 10 and 11 describe the flags needed to link in the \module{BLAS} and; \module{LAPACK} libraries and might need a combination of ``\file{-L; folder\_name}'' and ``\file{-l library\_name}'', depending on your system's; setup. Finally, the compiler and flags are detailed on lines 12--17. It's a; good idea to use the flags described on line 16 for development; they speed up; code compilation and provide lots of information for standard debugging tools.; As noted in the \file{Makefile} itself, nothing below line 17 should require; modification for any other \PSIfour\ project. The \PSIfour\ driver program provides a lot of functionality that we forgo in; writing a standalone code; this is instead emulated in the {\tt main.cc} file,; shown below. \includesource{sample-codes/integr",MatchSource.DOCS,doc/sphinxman/source/attic/progtutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtutorial.rst:1085,Deployability,install,installation,1085,"egin with a \file{Makefile}; that will allow us to write a standalone code that includes all requisite \PSI\; libraries. We're going to write a small sample code that generates integrals,; which involves two just two source files. We begin by defining a; \file{Makefile} that will include all of the \PSIfour\ libraries and header; files, so that we can take full advantage of the wide range of features; implemented without having to worry about the details of their implementation. \includesource{sample-codes/integrals/Makefile}{make}. Only a few lines of this makefile need to be modified to utilize it for other; programming projects; we'll concentrate on them. On the second line, we define; the name of the executable to be generated, in this example we opt for the; unimaginative title of \module{integrals}. Line 4 provides the list of source files; that the project comprises; these will be detailed below. The top source; directory for the \PSIfour\ installation and the top object directory (where; \PSIfour\ was compiled) should be provided on lines 6 and 8, respectively.; Lines 10 and 11 describe the flags needed to link in the \module{BLAS} and; \module{LAPACK} libraries and might need a combination of ``\file{-L; folder\_name}'' and ``\file{-l library\_name}'', depending on your system's; setup. Finally, the compiler and flags are detailed on lines 12--17. It's a; good idea to use the flags described on line 16 for development; they speed up; code compilation and provide lots of information for standard debugging tools.; As noted in the \file{Makefile} itself, nothing below line 17 should require; modification for any other \PSIfour\ project. The \PSIfour\ driver program provides a lot of functionality that we forgo in; writing a standalone code; this is instead emulated in the {\tt main.cc} file,; shown below. \includesource{sample-codes/integrals/main.cc}{C++}. All modules in \PSIfour\ must have the argument list and return type shown on; line 13. The possible retu",MatchSource.DOCS,doc/sphinxman/source/attic/progtutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtutorial.rst:4833,Energy Efficiency,allocate,allocated,4833,"ing any; options for any module, you must comment them as shown - this will ensure that; the keywords are automatically inserted into the \PSIfour\ users' manual. The; \module{main} function does a little setting up of the \PSI\ input and output; environments, before calling the module code we're developing (on line 53) and; shutting down the \PSIfour\ I/O systems. The module we're developing is in the following source file. \includesource{sample-codes/integrals/integrals.cc}{C++}. Given the extensive documentation within the code, we'll not describe this file; line-by-line; however, some points warrant elaboration. Notice that the entire; module is encapsulated in the \module{psi::integrals} namespace (lines 6 and; 92). This simple example has only one function body, which lives in a single; source file - if more functions and/or source files were added, these too would; have to live in the \module{psi::integrals} namespace. On lines 29 and 31 of; \file{main.cc} we told the parser which keywords to expect, and provided; default values in case the user omited them from the input. This makes; retrieving these options very clean and simple ({\it c.f.} lines 11 and 12 of; \file{integrals.cc}). Each \PSIfour\ module will have to initialize its own; local \module{PSIO} and \module{Chkpt} objects to perform I/O and to retrieve; information from previously run modules. Notice that these objects are created; within smart pointers (see section XXX for more information) so that they are; automatically deleted when they go out of scope, thus reducing the burden on; the programmer. Likewise, the basis sets, matrices and integral objects are; allocated using smart pointers. The code described above can be built by simply typing ``make'' on the command; line. To run this code, you must first run the \module{input} module to read; in the basis set information. A \PSI\ input for this code should look some; thing like the following:. \includeinput{sample-codes/integrals/input.dat}; ",MatchSource.DOCS,doc/sphinxman/source/attic/progtutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtutorial.rst:74,Integrability,integrat,integrated,74,"As noted previously, we want to start from a code that's not too tightly; integrated with the \PSIfour\ code itself, so we begin with a \file{Makefile}; that will allow us to write a standalone code that includes all requisite \PSI\; libraries. We're going to write a small sample code that generates integrals,; which involves two just two source files. We begin by defining a; \file{Makefile} that will include all of the \PSIfour\ libraries and header; files, so that we can take full advantage of the wide range of features; implemented without having to worry about the details of their implementation. \includesource{sample-codes/integrals/Makefile}{make}. Only a few lines of this makefile need to be modified to utilize it for other; programming projects; we'll concentrate on them. On the second line, we define; the name of the executable to be generated, in this example we opt for the; unimaginative title of \module{integrals}. Line 4 provides the list of source files; that the project comprises; these will be detailed below. The top source; directory for the \PSIfour\ installation and the top object directory (where; \PSIfour\ was compiled) should be provided on lines 6 and 8, respectively.; Lines 10 and 11 describe the flags needed to link in the \module{BLAS} and; \module{LAPACK} libraries and might need a combination of ``\file{-L; folder\_name}'' and ``\file{-l library\_name}'', depending on your system's; setup. Finally, the compiler and flags are detailed on lines 12--17. It's a; good idea to use the flags described on line 16 for development; they speed up; code compilation and provide lots of information for standard debugging tools.; As noted in the \file{Makefile} itself, nothing below line 17 should require; modification for any other \PSIfour\ project. The \PSIfour\ driver program provides a lot of functionality that we forgo in; writing a standalone code; this is instead emulated in the {\tt main.cc} file,; shown below. \includesource{sample-codes/integr",MatchSource.DOCS,doc/sphinxman/source/attic/progtutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtutorial.rst:1406,Integrability,depend,depending,1406,"ves two just two source files. We begin by defining a; \file{Makefile} that will include all of the \PSIfour\ libraries and header; files, so that we can take full advantage of the wide range of features; implemented without having to worry about the details of their implementation. \includesource{sample-codes/integrals/Makefile}{make}. Only a few lines of this makefile need to be modified to utilize it for other; programming projects; we'll concentrate on them. On the second line, we define; the name of the executable to be generated, in this example we opt for the; unimaginative title of \module{integrals}. Line 4 provides the list of source files; that the project comprises; these will be detailed below. The top source; directory for the \PSIfour\ installation and the top object directory (where; \PSIfour\ was compiled) should be provided on lines 6 and 8, respectively.; Lines 10 and 11 describe the flags needed to link in the \module{BLAS} and; \module{LAPACK} libraries and might need a combination of ``\file{-L; folder\_name}'' and ``\file{-l library\_name}'', depending on your system's; setup. Finally, the compiler and flags are detailed on lines 12--17. It's a; good idea to use the flags described on line 16 for development; they speed up; code compilation and provide lots of information for standard debugging tools.; As noted in the \file{Makefile} itself, nothing below line 17 should require; modification for any other \PSIfour\ project. The \PSIfour\ driver program provides a lot of functionality that we forgo in; writing a standalone code; this is instead emulated in the {\tt main.cc} file,; shown below. \includesource{sample-codes/integrals/main.cc}{C++}. All modules in \PSIfour\ must have the argument list and return type shown on; line 13. The possible return types, defined by an enumeratable constant are; documented in \file{psi4-dec.h}, which lives in \$PSI4/include. Notice that; all of the code must live in it's own namespace within the \module{psi};",MatchSource.DOCS,doc/sphinxman/source/attic/progtutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtutorial.rst:4490,Performance,perform,perform,4490,"ing any; options for any module, you must comment them as shown - this will ensure that; the keywords are automatically inserted into the \PSIfour\ users' manual. The; \module{main} function does a little setting up of the \PSI\ input and output; environments, before calling the module code we're developing (on line 53) and; shutting down the \PSIfour\ I/O systems. The module we're developing is in the following source file. \includesource{sample-codes/integrals/integrals.cc}{C++}. Given the extensive documentation within the code, we'll not describe this file; line-by-line; however, some points warrant elaboration. Notice that the entire; module is encapsulated in the \module{psi::integrals} namespace (lines 6 and; 92). This simple example has only one function body, which lives in a single; source file - if more functions and/or source files were added, these too would; have to live in the \module{psi::integrals} namespace. On lines 29 and 31 of; \file{main.cc} we told the parser which keywords to expect, and provided; default values in case the user omited them from the input. This makes; retrieving these options very clean and simple ({\it c.f.} lines 11 and 12 of; \file{integrals.cc}). Each \PSIfour\ module will have to initialize its own; local \module{PSIO} and \module{Chkpt} objects to perform I/O and to retrieve; information from previously run modules. Notice that these objects are created; within smart pointers (see section XXX for more information) so that they are; automatically deleted when they go out of scope, thus reducing the burden on; the programmer. Likewise, the basis sets, matrices and integral objects are; allocated using smart pointers. The code described above can be built by simply typing ``make'' on the command; line. To run this code, you must first run the \module{input} module to read; in the basis set information. A \PSI\ input for this code should look some; thing like the following:. \includeinput{sample-codes/integrals/input.dat}; ",MatchSource.DOCS,doc/sphinxman/source/attic/progtutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtutorial.rst:3911,Usability,simpl,simple,3911,"ial format of the; comments on lines 27 and 30. These are still valid \module{C++} comments, but; the extra hyphens inside are essential in this context. Whenever adding any; options for any module, you must comment them as shown - this will ensure that; the keywords are automatically inserted into the \PSIfour\ users' manual. The; \module{main} function does a little setting up of the \PSI\ input and output; environments, before calling the module code we're developing (on line 53) and; shutting down the \PSIfour\ I/O systems. The module we're developing is in the following source file. \includesource{sample-codes/integrals/integrals.cc}{C++}. Given the extensive documentation within the code, we'll not describe this file; line-by-line; however, some points warrant elaboration. Notice that the entire; module is encapsulated in the \module{psi::integrals} namespace (lines 6 and; 92). This simple example has only one function body, which lives in a single; source file - if more functions and/or source files were added, these too would; have to live in the \module{psi::integrals} namespace. On lines 29 and 31 of; \file{main.cc} we told the parser which keywords to expect, and provided; default values in case the user omited them from the input. This makes; retrieving these options very clean and simple ({\it c.f.} lines 11 and 12 of; \file{integrals.cc}). Each \PSIfour\ module will have to initialize its own; local \module{PSIO} and \module{Chkpt} objects to perform I/O and to retrieve; information from previously run modules. Notice that these objects are created; within smart pointers (see section XXX for more information) so that they are; automatically deleted when they go out of scope, thus reducing the burden on; the programmer. Likewise, the basis sets, matrices and integral objects are; allocated using smart pointers. The code described above can be built by simply typing ``make'' on the command; line. To run this code, you must first run the \module{input} mod",MatchSource.DOCS,doc/sphinxman/source/attic/progtutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtutorial.rst:4324,Usability,simpl,simple,4324,"ing any; options for any module, you must comment them as shown - this will ensure that; the keywords are automatically inserted into the \PSIfour\ users' manual. The; \module{main} function does a little setting up of the \PSI\ input and output; environments, before calling the module code we're developing (on line 53) and; shutting down the \PSIfour\ I/O systems. The module we're developing is in the following source file. \includesource{sample-codes/integrals/integrals.cc}{C++}. Given the extensive documentation within the code, we'll not describe this file; line-by-line; however, some points warrant elaboration. Notice that the entire; module is encapsulated in the \module{psi::integrals} namespace (lines 6 and; 92). This simple example has only one function body, which lives in a single; source file - if more functions and/or source files were added, these too would; have to live in the \module{psi::integrals} namespace. On lines 29 and 31 of; \file{main.cc} we told the parser which keywords to expect, and provided; default values in case the user omited them from the input. This makes; retrieving these options very clean and simple ({\it c.f.} lines 11 and 12 of; \file{integrals.cc}). Each \PSIfour\ module will have to initialize its own; local \module{PSIO} and \module{Chkpt} objects to perform I/O and to retrieve; information from previously run modules. Notice that these objects are created; within smart pointers (see section XXX for more information) so that they are; automatically deleted when they go out of scope, thus reducing the burden on; the programmer. Likewise, the basis sets, matrices and integral objects are; allocated using smart pointers. The code described above can be built by simply typing ``make'' on the command; line. To run this code, you must first run the \module{input} module to read; in the basis set information. A \PSI\ input for this code should look some; thing like the following:. \includeinput{sample-codes/integrals/input.dat}; ",MatchSource.DOCS,doc/sphinxman/source/attic/progtutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtutorial.rst:4906,Usability,simpl,simply,4906,"ing any; options for any module, you must comment them as shown - this will ensure that; the keywords are automatically inserted into the \PSIfour\ users' manual. The; \module{main} function does a little setting up of the \PSI\ input and output; environments, before calling the module code we're developing (on line 53) and; shutting down the \PSIfour\ I/O systems. The module we're developing is in the following source file. \includesource{sample-codes/integrals/integrals.cc}{C++}. Given the extensive documentation within the code, we'll not describe this file; line-by-line; however, some points warrant elaboration. Notice that the entire; module is encapsulated in the \module{psi::integrals} namespace (lines 6 and; 92). This simple example has only one function body, which lives in a single; source file - if more functions and/or source files were added, these too would; have to live in the \module{psi::integrals} namespace. On lines 29 and 31 of; \file{main.cc} we told the parser which keywords to expect, and provided; default values in case the user omited them from the input. This makes; retrieving these options very clean and simple ({\it c.f.} lines 11 and 12 of; \file{integrals.cc}). Each \PSIfour\ module will have to initialize its own; local \module{PSIO} and \module{Chkpt} objects to perform I/O and to retrieve; information from previously run modules. Notice that these objects are created; within smart pointers (see section XXX for more information) so that they are; automatically deleted when they go out of scope, thus reducing the burden on; the programmer. Likewise, the basis sets, matrices and integral objects are; allocated using smart pointers. The code described above can be built by simply typing ``make'' on the command; line. To run this code, you must first run the \module{input} module to read; in the basis set information. A \PSI\ input for this code should look some; thing like the following:. \includeinput{sample-codes/integrals/input.dat}; ",MatchSource.DOCS,doc/sphinxman/source/attic/progtutorial.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtutorial.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/prog_basissets.rst:8306,Deployability,install,installed,8306,"is set specifictation is; molecule mymol {; # water dimer where; O -2 0 0; H_hb -1 0 0; H -1 -1 0; --; O 2 0 0; H_hb 1 0 0; H 2 1 0; }; * per molecule; set basis cc-pv(d+d)z; --or--; basis mydz {; assign cc-pv(d+d)z; }; ; * per element; basis mydz {; assign cc-pv(d+d)z; ; * per . <<< Q for Jet/Andy/Rob >>>. * Shouldn't lock_frame_ be reset to False for set_basis_all_atoms/by_symbol/by_label?; Need to trigger reeval of symm upon geometry_update(). Doing this with set_shell.... * Ok that maybe can't form a basisset name using a key that's not a keyword. * Ok to remove parser from arg list. * since set_basis by number being removed from user domain, switching it to 0-indexing (more natural; for c-side prog code) and to not indluce dummies (why give a dummy a basis set). * ok that symm lowering won't show up until basis built?. * order of searching for basissets. * get approval for bas search order: strings, here, PSIPATH, library (I think). <<< todo >>>. * make sure PSIDATDIR getting searched right, esp for installed copy. * transfer load_basis printing to output file. * check puream handling. * get correct full PT basis aux sets. * empty mol before adding basis sets in basis {} block; * establish that a basis spec must cover the whole molecule. << boost::shared_ptr<BasisSetParser> parser(new Gaussian94BasisSetParser());; << basisset_ = BasisSet::construct(parser, molecule_, ""BASIS"");. >> basisset_ = BasisSet::pyconstruct(molecule_, ""BASIS"", options_.get_str(""BASIS""));. << boost::shared_ptr<BasisSet> auxiliary = BasisSet::construct(parser, primary->molecule(), ""DF_BASIS_SCF"");. >> boost::shared_ptr<BasisSet> auxiliary = BasisSet::pyconstruct(primary->molecule(),; ""DF_BASIS_SCF"", options.get_str(""DF_BASIS_SCF""), ""JKFIT"", options.get_str(""BASIS""));. boost::shared_ptr<BasisSetParser> parser(new Gaussian94BasisSetParser(old_forced_puream));; molecule_->set_basis_all_atoms(basisname, ""DUAL_BASIS_SCF"");; boost::shared_ptr<BasisSet> dual_basis = BasisSet::construct(parser, mo",MatchSource.DOCS,doc/sphinxman/source/attic/prog_basissets.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/prog_basissets.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/prog_basissets.rst:2371,Safety,safe,safe,2371," objects has been changed. Advantages to New Scheme (aka *Why*); ------------------------------------. - Defaults for fitting basis sets set on a per-atom basis (*e.g.*, DF-SCF; on metal-organic with cc-pVDZ uses cc-pVDZ-JKFIT for the organic and; Def2-tzvpp (or something) for the metal) so that the user shouldn't; experience a failed job on account of incomplete fitting basis sets. - All default info for auxiliary basis sets in one place. Programmer when; calling for a new auxiliary BasisSet gives the fitting role if defaults; need to be computed (e.g., JKFIT) and the orbital basis to compute; defaults off of (e.g., get_option(BASIS)). This eliminates all the; ""corresponding_jkfit"" boilerplate in ``proc.py`` and also means defaults; can be assigned for non-uniform orbital basis sets. - Assignment of basis sets to atoms proceeds through ""all"", ""by_symbol""; (e.g., ""Co""), or ""by_label"" (e.g., H1 or Co_mine). There is *no*; assignment to atoms by number (except a bit internally where it's safe); which can be ambiguous when the Molecule has been fragmented as for SAPT. - Users don't need to ""set basis basisname"" after every `molecule {...}`; definition or activation because basis sets are not attached to the; molecule at time option is set but at time BasisSet is built. Similarly,; once can define a `basis basisname {...}` block and use it for multiple; molecules. BasisSet gives the option name where any user intentions as to proper; value may be found (DF_BASIS_SCF), the name by which the new basis can be; recalled (get_str('DF_BASIS_SCF')), the fitting role if defaults need to; be computed (JKFIT), the. *How* for Programmers; ---------------------. To get a BasisSet object into your module, just call `pyconstruct` where; formerly you called `construct`. There are two flavors, one for orbital; basis sets and one for auxiliary basis sets. There's no difference in the; BasisSet objects they return or even the code used to assemble them- the; two flavors are just for sane",MatchSource.DOCS,doc/sphinxman/source/attic/prog_basissets.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/prog_basissets.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/prog_basissets.rst:3842,Usability,simpl,simple,3842," be; recalled (get_str('DF_BASIS_SCF')), the fitting role if defaults need to; be computed (JKFIT), the. *How* for Programmers; ---------------------. To get a BasisSet object into your module, just call `pyconstruct` where; formerly you called `construct`. There are two flavors, one for orbital; basis sets and one for auxiliary basis sets. There's no difference in the; BasisSet objects they return or even the code used to assemble them- the; two flavors are just for sane argument naming and to establish different; signatures for Boost binding. Orbital Basis; *************. Give the function a Molecule object for which to build basis, a label for; the basis (generally, BASIS), and a hint for finding the basis. This last; argument gets used to find a python function by that name camoflaged; (that's what ``basis {...}`` blocks in the input file get translated into); or failing that a string to find a gbs file defining the basis. ::. // simple; boost::shared_ptr<BasisSet> primary = BasisSet::pyconstruct_orbital(molecule, ; ""BASIS"", ""CC-PVDZ"");. // self-contained; boost::shared_ptr<BasisSet> primary = BasisSet::pyconstruct_orbital(Process::environment.molecule(),; ""BASIS"", Process::environment.options.get_str(""BASIS""));. Auxiliary Basis; ***************. Give the function a Molecule object for which to build basis, a label for; the basis, a hint for finding the basis, a fitting role to apply if; defaults need to be generated, and a hint for finding the orbital basis to; build defaults against. ::. // simple; boost::shared_ptr<BasisSet> auxiliary = BasisSet::pyconstruct_auxiliary(molecule,; ""DF_BASIS_SCF"", """", ; ""JKFIT"", ""CC-PVDZ"");. // self-contained and force Spherical; boost::shared_ptr<BasisSet> auxiliary = BasisSet::pyconstruct_auxiliary(Process::environment.molecule(),; ""DF_BASIS_SCF"", Process::environment.options.get_str(""DF_BASIS_SCF""), ; ""JKFIT"", Process:environment.options.get_str(""BASIS""), 1);. Adding Basis Option to Code; ***************************. - Registe",MatchSource.DOCS,doc/sphinxman/source/attic/prog_basissets.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/prog_basissets.rst
https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/prog_basissets.rst:4416,Usability,simpl,simple,4416,"he function a Molecule object for which to build basis, a label for; the basis (generally, BASIS), and a hint for finding the basis. This last; argument gets used to find a python function by that name camoflaged; (that's what ``basis {...}`` blocks in the input file get translated into); or failing that a string to find a gbs file defining the basis. ::. // simple; boost::shared_ptr<BasisSet> primary = BasisSet::pyconstruct_orbital(molecule, ; ""BASIS"", ""CC-PVDZ"");. // self-contained; boost::shared_ptr<BasisSet> primary = BasisSet::pyconstruct_orbital(Process::environment.molecule(),; ""BASIS"", Process::environment.options.get_str(""BASIS""));. Auxiliary Basis; ***************. Give the function a Molecule object for which to build basis, a label for; the basis, a hint for finding the basis, a fitting role to apply if; defaults need to be generated, and a hint for finding the orbital basis to; build defaults against. ::. // simple; boost::shared_ptr<BasisSet> auxiliary = BasisSet::pyconstruct_auxiliary(molecule,; ""DF_BASIS_SCF"", """", ; ""JKFIT"", ""CC-PVDZ"");. // self-contained and force Spherical; boost::shared_ptr<BasisSet> auxiliary = BasisSet::pyconstruct_auxiliary(Process::environment.molecule(),; ""DF_BASIS_SCF"", Process::environment.options.get_str(""DF_BASIS_SCF""), ; ""JKFIT"", Process:environment.options.get_str(""BASIS""), 1);. Adding Basis Option to Code; ***************************. - Register new basis keyword with :source:`src/bin/psi4/read_options.cc`; (of course). The default should be the empty string. ::. options.add_str(""DF_BASIS_ELST"", """");. - Register new basis keyword with the input parser; :source:`share/python/inputparser.py`. In the main function; `process_input`, add it to the regex below. This ensures that users can; define ``basis_keyword basis_name {...}`` blocks where the contents of; the block get associated with basis_name and assigned to your; basis_keyword. ::. basis_block = re.compile(r'^(\s*?)(basis|df_basis_scf|df_basis_mp2|df_basis_cc|df_bas",MatchSource.DOCS,doc/sphinxman/source/attic/prog_basissets.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/prog_basissets.rst
https://github.com/psi4/psi4/tree/v1.9.1/tests/dftd3/psithon2/psiaux1/myplugin1/doc.rst:545,Integrability,depend,depends,545,"; .. include:: /autodoc_abbr_options_c.rst; .. include:: /autodoc_abbr_options_plugins.rst. Theory, Usage, and Notes; ------------------------. .. codeauthor:: Psi4 Developer; .. sectionauthor:: Psi4 Developer. Casual documentation for this plugin goes here.; Uncomment the ``.. comment`` for some examples. .. comment * this plugin solves :math:`H=F_A+W_A+F_B+W_B+V`; .. comment * reference to keyword |globals__docc| and |myplugin1__print|; .. comment * returns :psivar:`CURRENT ENERGY <CURRENTENERGY>` in |kcalpermol|; .. comment * operation depends on :envvar:`OMP_NUM_THREADS`.; .. comment * operation requires external software described in :ref:`sec:interfacing`; .. comment ; .. comment .. caution:: Some features are not yet implemented.; .. comment ; .. comment - Do not run plugin more than ten feet away from developer.; .. comment ; .. comment - Do not run plugin on benzene dimer. ",MatchSource.DOCS,tests/dftd3/psithon2/psiaux1/myplugin1/doc.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/dftd3/psithon2/psiaux1/myplugin1/doc.rst
https://github.com/psi4/psi4/tree/v1.9.1/tests/dftd3/psithon2/psiaux1/myplugin1/doc.rst:241,Modifiability,plugin,plugin,241,"; .. include:: /autodoc_abbr_options_c.rst; .. include:: /autodoc_abbr_options_plugins.rst. Theory, Usage, and Notes; ------------------------. .. codeauthor:: Psi4 Developer; .. sectionauthor:: Psi4 Developer. Casual documentation for this plugin goes here.; Uncomment the ``.. comment`` for some examples. .. comment * this plugin solves :math:`H=F_A+W_A+F_B+W_B+V`; .. comment * reference to keyword |globals__docc| and |myplugin1__print|; .. comment * returns :psivar:`CURRENT ENERGY <CURRENTENERGY>` in |kcalpermol|; .. comment * operation depends on :envvar:`OMP_NUM_THREADS`.; .. comment * operation requires external software described in :ref:`sec:interfacing`; .. comment ; .. comment .. caution:: Some features are not yet implemented.; .. comment ; .. comment - Do not run plugin more than ten feet away from developer.; .. comment ; .. comment - Do not run plugin on benzene dimer. ",MatchSource.DOCS,tests/dftd3/psithon2/psiaux1/myplugin1/doc.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/dftd3/psithon2/psiaux1/myplugin1/doc.rst
https://github.com/psi4/psi4/tree/v1.9.1/tests/dftd3/psithon2/psiaux1/myplugin1/doc.rst:326,Modifiability,plugin,plugin,326,"; .. include:: /autodoc_abbr_options_c.rst; .. include:: /autodoc_abbr_options_plugins.rst. Theory, Usage, and Notes; ------------------------. .. codeauthor:: Psi4 Developer; .. sectionauthor:: Psi4 Developer. Casual documentation for this plugin goes here.; Uncomment the ``.. comment`` for some examples. .. comment * this plugin solves :math:`H=F_A+W_A+F_B+W_B+V`; .. comment * reference to keyword |globals__docc| and |myplugin1__print|; .. comment * returns :psivar:`CURRENT ENERGY <CURRENTENERGY>` in |kcalpermol|; .. comment * operation depends on :envvar:`OMP_NUM_THREADS`.; .. comment * operation requires external software described in :ref:`sec:interfacing`; .. comment ; .. comment .. caution:: Some features are not yet implemented.; .. comment ; .. comment - Do not run plugin more than ten feet away from developer.; .. comment ; .. comment - Do not run plugin on benzene dimer. ",MatchSource.DOCS,tests/dftd3/psithon2/psiaux1/myplugin1/doc.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/dftd3/psithon2/psiaux1/myplugin1/doc.rst
https://github.com/psi4/psi4/tree/v1.9.1/tests/dftd3/psithon2/psiaux1/myplugin1/doc.rst:785,Modifiability,plugin,plugin,785,"; .. include:: /autodoc_abbr_options_c.rst; .. include:: /autodoc_abbr_options_plugins.rst. Theory, Usage, and Notes; ------------------------. .. codeauthor:: Psi4 Developer; .. sectionauthor:: Psi4 Developer. Casual documentation for this plugin goes here.; Uncomment the ``.. comment`` for some examples. .. comment * this plugin solves :math:`H=F_A+W_A+F_B+W_B+V`; .. comment * reference to keyword |globals__docc| and |myplugin1__print|; .. comment * returns :psivar:`CURRENT ENERGY <CURRENTENERGY>` in |kcalpermol|; .. comment * operation depends on :envvar:`OMP_NUM_THREADS`.; .. comment * operation requires external software described in :ref:`sec:interfacing`; .. comment ; .. comment .. caution:: Some features are not yet implemented.; .. comment ; .. comment - Do not run plugin more than ten feet away from developer.; .. comment ; .. comment - Do not run plugin on benzene dimer. ",MatchSource.DOCS,tests/dftd3/psithon2/psiaux1/myplugin1/doc.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/dftd3/psithon2/psiaux1/myplugin1/doc.rst
https://github.com/psi4/psi4/tree/v1.9.1/tests/dftd3/psithon2/psiaux1/myplugin1/doc.rst:870,Modifiability,plugin,plugin,870,"; .. include:: /autodoc_abbr_options_c.rst; .. include:: /autodoc_abbr_options_plugins.rst. Theory, Usage, and Notes; ------------------------. .. codeauthor:: Psi4 Developer; .. sectionauthor:: Psi4 Developer. Casual documentation for this plugin goes here.; Uncomment the ``.. comment`` for some examples. .. comment * this plugin solves :math:`H=F_A+W_A+F_B+W_B+V`; .. comment * reference to keyword |globals__docc| and |myplugin1__print|; .. comment * returns :psivar:`CURRENT ENERGY <CURRENTENERGY>` in |kcalpermol|; .. comment * operation depends on :envvar:`OMP_NUM_THREADS`.; .. comment * operation requires external software described in :ref:`sec:interfacing`; .. comment ; .. comment .. caution:: Some features are not yet implemented.; .. comment ; .. comment - Do not run plugin more than ten feet away from developer.; .. comment ; .. comment - Do not run plugin on benzene dimer. ",MatchSource.DOCS,tests/dftd3/psithon2/psiaux1/myplugin1/doc.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/dftd3/psithon2/psiaux1/myplugin1/doc.rst
https://github.com/psi4/psi4/tree/v1.9.1/tests/psithon2/psiaux1/myplugin1/doc.rst:545,Integrability,depend,depends,545,"; .. include:: /autodoc_abbr_options_c.rst; .. include:: /autodoc_abbr_options_plugins.rst. Theory, Usage, and Notes; ------------------------. .. codeauthor:: Psi4 Developer; .. sectionauthor:: Psi4 Developer. Casual documentation for this plugin goes here.; Uncomment the ``.. comment`` for some examples. .. comment * this plugin solves :math:`H=F_A+W_A+F_B+W_B+V`; .. comment * reference to keyword |globals__docc| and |myplugin1__print|; .. comment * returns :psivar:`CURRENT ENERGY <CURRENTENERGY>` in |kcalpermol|; .. comment * operation depends on :envvar:`OMP_NUM_THREADS`.; .. comment * operation requires external software described in :ref:`sec:interfacing`; .. comment ; .. comment .. caution:: Some features are not yet implemented.; .. comment ; .. comment - Do not run plugin more than ten feet away from developer.; .. comment ; .. comment - Do not run plugin on benzene dimer. ",MatchSource.DOCS,tests/psithon2/psiaux1/myplugin1/doc.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/psithon2/psiaux1/myplugin1/doc.rst
https://github.com/psi4/psi4/tree/v1.9.1/tests/psithon2/psiaux1/myplugin1/doc.rst:241,Modifiability,plugin,plugin,241,"; .. include:: /autodoc_abbr_options_c.rst; .. include:: /autodoc_abbr_options_plugins.rst. Theory, Usage, and Notes; ------------------------. .. codeauthor:: Psi4 Developer; .. sectionauthor:: Psi4 Developer. Casual documentation for this plugin goes here.; Uncomment the ``.. comment`` for some examples. .. comment * this plugin solves :math:`H=F_A+W_A+F_B+W_B+V`; .. comment * reference to keyword |globals__docc| and |myplugin1__print|; .. comment * returns :psivar:`CURRENT ENERGY <CURRENTENERGY>` in |kcalpermol|; .. comment * operation depends on :envvar:`OMP_NUM_THREADS`.; .. comment * operation requires external software described in :ref:`sec:interfacing`; .. comment ; .. comment .. caution:: Some features are not yet implemented.; .. comment ; .. comment - Do not run plugin more than ten feet away from developer.; .. comment ; .. comment - Do not run plugin on benzene dimer. ",MatchSource.DOCS,tests/psithon2/psiaux1/myplugin1/doc.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/psithon2/psiaux1/myplugin1/doc.rst
https://github.com/psi4/psi4/tree/v1.9.1/tests/psithon2/psiaux1/myplugin1/doc.rst:326,Modifiability,plugin,plugin,326,"; .. include:: /autodoc_abbr_options_c.rst; .. include:: /autodoc_abbr_options_plugins.rst. Theory, Usage, and Notes; ------------------------. .. codeauthor:: Psi4 Developer; .. sectionauthor:: Psi4 Developer. Casual documentation for this plugin goes here.; Uncomment the ``.. comment`` for some examples. .. comment * this plugin solves :math:`H=F_A+W_A+F_B+W_B+V`; .. comment * reference to keyword |globals__docc| and |myplugin1__print|; .. comment * returns :psivar:`CURRENT ENERGY <CURRENTENERGY>` in |kcalpermol|; .. comment * operation depends on :envvar:`OMP_NUM_THREADS`.; .. comment * operation requires external software described in :ref:`sec:interfacing`; .. comment ; .. comment .. caution:: Some features are not yet implemented.; .. comment ; .. comment - Do not run plugin more than ten feet away from developer.; .. comment ; .. comment - Do not run plugin on benzene dimer. ",MatchSource.DOCS,tests/psithon2/psiaux1/myplugin1/doc.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/psithon2/psiaux1/myplugin1/doc.rst
https://github.com/psi4/psi4/tree/v1.9.1/tests/psithon2/psiaux1/myplugin1/doc.rst:785,Modifiability,plugin,plugin,785,"; .. include:: /autodoc_abbr_options_c.rst; .. include:: /autodoc_abbr_options_plugins.rst. Theory, Usage, and Notes; ------------------------. .. codeauthor:: Psi4 Developer; .. sectionauthor:: Psi4 Developer. Casual documentation for this plugin goes here.; Uncomment the ``.. comment`` for some examples. .. comment * this plugin solves :math:`H=F_A+W_A+F_B+W_B+V`; .. comment * reference to keyword |globals__docc| and |myplugin1__print|; .. comment * returns :psivar:`CURRENT ENERGY <CURRENTENERGY>` in |kcalpermol|; .. comment * operation depends on :envvar:`OMP_NUM_THREADS`.; .. comment * operation requires external software described in :ref:`sec:interfacing`; .. comment ; .. comment .. caution:: Some features are not yet implemented.; .. comment ; .. comment - Do not run plugin more than ten feet away from developer.; .. comment ; .. comment - Do not run plugin on benzene dimer. ",MatchSource.DOCS,tests/psithon2/psiaux1/myplugin1/doc.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/psithon2/psiaux1/myplugin1/doc.rst
https://github.com/psi4/psi4/tree/v1.9.1/tests/psithon2/psiaux1/myplugin1/doc.rst:870,Modifiability,plugin,plugin,870,"; .. include:: /autodoc_abbr_options_c.rst; .. include:: /autodoc_abbr_options_plugins.rst. Theory, Usage, and Notes; ------------------------. .. codeauthor:: Psi4 Developer; .. sectionauthor:: Psi4 Developer. Casual documentation for this plugin goes here.; Uncomment the ``.. comment`` for some examples. .. comment * this plugin solves :math:`H=F_A+W_A+F_B+W_B+V`; .. comment * reference to keyword |globals__docc| and |myplugin1__print|; .. comment * returns :psivar:`CURRENT ENERGY <CURRENTENERGY>` in |kcalpermol|; .. comment * operation depends on :envvar:`OMP_NUM_THREADS`.; .. comment * operation requires external software described in :ref:`sec:interfacing`; .. comment ; .. comment .. caution:: Some features are not yet implemented.; .. comment ; .. comment - Do not run plugin more than ten feet away from developer.; .. comment ; .. comment - Do not run plugin on benzene dimer. ",MatchSource.DOCS,tests/psithon2/psiaux1/myplugin1/doc.rst,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/psithon2/psiaux1/myplugin1/doc.rst
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:9087,Availability,failure,failures,9087,"nabling Fortran language even when Fortran addons enabled. Use when only linking pre-built, not compiling addon code."" OFF). # Append modules added to pasture as needed; if(ENABLE_ccsort OR ENABLE_transqt2); set(ENABLE_pasture ON); message(STATUS ""Enabling pasture plugins""); endif(). if(ENABLE_gdma OR ENABLE_dkh OR ENABLE_erd OR ENABLE_PCMSolver); if(psi4_SKIP_ENABLE_Fortran); message(STATUS ""NOT Enabling Fortran""); else(); enable_language(Fortran); set(Fortran_ENABLED ON) # communicate required languages with psi4-core; message(STATUS ""Enabling Fortran""); endif(); endif(). if(ENABLE_erd); message(FATAL_ERROR ""The Psi4/ERD interface is broken, probably since spring 2017. It's toast (comment this line to try), but disabling for now.""); message(WARNING ""ERD will build, link, and run in Psi4 just fine. However, it has not been hooked into Psi4 in all roles, notably gradients, LRC DFT energies, and ESP. So upon activating through ``set integral_package erd``, known failures will be caught and halted, but perhaps other types not tested and identified will give *wrong* answers. Consider this your warning.""); endif(). ############################ Options: Build How? #############################; include(psi4OptionsTools); option_with_print(BUILD_SHARED_LIBS ""Build internally built Psi4 add-on libraries as shared, not static"" OFF); option_with_default(CMAKE_BUILD_TYPE ""Build type (Release or Debug)"" Release); include(xhost) # defines: option(ENABLE_XHOST ""Enable processor-specific optimization"" ON); # below are uncommon to adjust; option_with_print(ENABLE_OPENMP ""Enables OpenMP parallelization"" ON); option_with_print(ENABLE_AUTO_BLAS ""Enables CMake to auto-detect BLAS"" ON); option_with_print(ENABLE_AUTO_LAPACK ""Enables CMake to auto-detect LAPACK"" ON); option_with_print(ENABLE_PLUGIN_TESTING ""Test the plugin templates build and run"" OFF); option_with_print(ENABLE_CYTHONIZE ""Compile each python file rather than plaintext (requires cython) !experimental!"" OFF); option_with_f",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:12669,Availability,error,errors,12669,"h psi4 CMake config files installed."" share/cmake/psi4); option_with_default(TargetLAPACK_INSTALL_CMAKEDIR ""Directory to which psi4 CMake config files installed."" share/cmake/TargetLAPACK); option_with_default(TargetHDF5_INSTALL_CMAKEDIR ""Directory to which psi4 CMake config files installed."" share/cmake/TargetHDF5); option_with_default(ENABLE_GENERIC ""Enables mostly static linking of language libraries for shared library"" OFF); option_with_default(CMAKE_INSTALL_MESSAGE ""Specify verbosity of installation messages"" LAZY); option_with_default(psi4_CXX_STANDARD ""Specify C++ standard for core Psi4"" 17); option_with_default(psi4_CXX_STANDARD_Libint2 ""Specify C++ standard for Psi4 files including Libint2 headers. Older (e.g., 2021.4) Intel compilers may need 14"" 17); option_with_default(SIMINT_VECTOR ""Vectorization type to use for simint (scalar sse avx avxfma micavx512)"" avx); option_with_default(SPHINX_THEME ""Theme for Sphinx documentation and extensions"" sphinx_psi_theme); option_with_default(SPHINXMAN_STRICT ""Turn warnings into errors for docs target sphinxman"" OFF); option_with_default(BUILD_Libint2_GENERATOR ""If prebuilt not found, don't build Libint2 from source tarball but instead build and run generator (several hours for production library). Edit angular momentum and integrals classes directly in `external/upstream/libint2/CMakeLists.txt` (requires Ninja)."" OFF); option_with_default(psi4_SHGAUSS_ORDERING ""Ordering for shells of solid harmonic Gaussians: standard -- standard ordering (-l, -l+1 ... l) -or- gaussian -- the Gaussian ordering (0, 1, -1, 2, -2, ... l, -l). Changing this is experimental, expert only, and not a future plan. Internal calculations should be correct and fchk files should be correct, but other exports like Molden and QCSchema.Wavefunction won't be."" gaussian); include(custom_int_orderings). ######################## Process & Validate Options ##########################; include(GNUInstallDirs); include(autocmake_safeguards); include(custom_c",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:18465,Availability,down,downstream,18465,"nsums=${ENABLE_Einsums}; -DENABLE_erd=${ENABLE_erd}; -DENABLE_simint=${ENABLE_simint}; -DENABLE_gdma=${ENABLE_gdma}; -DENABLE_PCMSolver=${ENABLE_PCMSolver}; -DENABLE_ddx=${ENABLE_ddx}; -DENABLE_mdi=${ENABLE_mdi}; -DENABLE_BrianQC=${ENABLE_BrianQC}; -DENABLE_OPENMP=${ENABLE_OPENMP}; -DTargetLAPACK_DIR=${TargetLAPACK_DIR}; -DTargetHDF5_DIR=${TargetHDF5_DIR}; -DEigen3_DIR=${Eigen3_DIR}; -Dambit_DIR=${ambit_DIR}; -DCheMPS2_DIR=${CheMPS2_DIR}; -Ddkh_DIR=${dkh_DIR}; -Decpint_DIR=${ecpint_DIR}; -Dlibefp_DIR=${libefp_DIR}; -DEinsums_DIR=${Einsums_DIR}; -Derd_DIR=${erd_DIR}; -Dgau2grid_DIR=${gau2grid_DIR}; -Dgdma_DIR=${gdma_DIR}; #-DLibint_DIR=${Libint_DIR}; -DLibint2_DIR=${Libint2_DIR}; -DPCMSolver_DIR=${PCMSolver_DIR}; -Dmdi_DIR=${mdi_DIR}; -Dpybind11_DIR=${pybind11_DIR}; -Dpylibefp_DIR=${pylibefp_DIR}; -Dsimint_DIR=${simint_DIR}; -DLibxc_DIR=${Libxc_DIR}; -DBrianQC_DIR=${BrianQC_DIR}; -DFortran_ENABLED=${Fortran_ENABLED}; -DLIBC_INTERJECT=${LIBC_INTERJECT}; -DRESTRICT_KEYWORD=${RESTRICT_KEYWORD}; -DFC_SYMBOL=${FC_SYMBOL}; -DOpenMP_LIBRARY_DIRS=${OpenMP_LIBRARY_DIRS}; -DCMAKE_EXPORT_COMPILE_COMMANDS=ON; -DENABLE_CYTHONIZE=${ENABLE_CYTHONIZE}; -Dpsi4_SHGSHELL_ORDERING=${psi4_SHGSHELL_ORDERING}; CMAKE_CACHE_ARGS -DCMAKE_PREFIX_PATH:PATH=${CMAKE_PREFIX_PATH}; -DCMAKE_C_COMPILER_ARG1:STRING=${CMAKE_C_COMPILER_ARG1}; -DCMAKE_CXX_COMPILER_ARG1:STRING=${CMAKE_CXX_COMPILER_ARG1}; -DCMAKE_Fortran_COMPILER_ARG1:STRING=${CMAKE_Fortran_COMPILER_ARG1}; # CMAKE_<lang>_COMPILER_ARG1 vars pass args thru when CMAKE_<lang>_COMPILER set as ""compiler --vital-args""; USES_TERMINAL_BUILD 1; BUILD_ALWAYS 1). add_subdirectory(external/downstream); add_subdirectory(doc); include(ConfigTesting). # <<< Install >>>. install(DIRECTORY ${STAGED_INSTALL_PREFIX}/; DESTINATION ${CMAKE_INSTALL_PREFIX}; USE_SOURCE_PERMISSIONS; PATTERN ""*.pyc"" EXCLUDE). install(DIRECTORY samples; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4; USE_SOURCE_PERMISSIONS; PATTERN ""example_psi4rc_file"" EXCLUDE); ",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:1328,Deployability,install,install-,1328,"_TIMESTAMP in CMake 3.24:; cmake_policy(SET CMP0135 NEW); endif(); # 3.15: useable FindPython with NumPy component and LOCATION; # 3.8: CXX_STANDARD recognizes C++17; # 3.3: EP_add(DEPENDS interfacelib, CheckFortranCompilerFlag; # 3.2: continue(); # 3.1: CMAKE_CXX_STANDARD, BUILD_ALWAYS. set(CMAKE_BUILD_TYPE ""Release"" CACHE STRING ""Choose the type of build."") # foil Ninja Debug on Windows. project(psi4; LANGUAGES C CXX); set(psi4_URL ""http://www.psicode.org/""); set(psi4_EMAIL ""psi4aiqc+cmake@gmail.com""); set(psi4_LICENSE ""GNU Lesser General Public License, version 3 (LGPL-3.0)""); set(psi4_DESCRIPTION ""Open-Source Quantum Chemistry""). list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake). message(STATUS ""Building using CMake ${CMAKE_VERSION} Generator ${CMAKE_GENERATOR}""). ################ Options: Overview and Not Otherwise Mentioned ###############. # <<< CMake build overview >>>; #; # >>> ls; # external/ COPYING psi4/ tests/ ...; # >>> cmake -S. -Bobjdir -DCMAKE_INSTALL_PREFIX=/path/to/install-psi4 ...; # ...; # -- Generating done; # -- Build files have been written to: /current/dir/objdir; # >>> cmake --build objdir --target install -j`getconf _NPROCESSORS_ONLN`. # <<< Required build dependencies that Psi4 can't build itself >>>; #; # - CMake (e.g., `conda install cmake`); # - C++ and C compilers (C++17 compliant); # - BLAS/LAPACK (also runtime; e.g., `conda install mkl-devel`); # - Python (also runtime; interpreter and headers; e.g., `conda install python`); # - NumPy (also runtime; avoidable at buildtime if gau2grid pre-built; e.g., `conda install numpy`); # - networkx >=2.4 (runtime only; e.g., `conda install networkx`); # - pint >=0.10 (runtime only; e.g., `conda install pint -c conda-forge`); # - pydantic >=1.0 (runtime only; e.g., `conda install pydantic -c conda-forge`); # - msgpack-python (runtime only; e.g., `conda install msgpack-python`); # - Eigen (for Libint2; e.g., `conda install eigen`); # - Boost (header-only libs for Libint2; e.g., `co",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:1471,Deployability,install,install,1471,"nd LOCATION; # 3.8: CXX_STANDARD recognizes C++17; # 3.3: EP_add(DEPENDS interfacelib, CheckFortranCompilerFlag; # 3.2: continue(); # 3.1: CMAKE_CXX_STANDARD, BUILD_ALWAYS. set(CMAKE_BUILD_TYPE ""Release"" CACHE STRING ""Choose the type of build."") # foil Ninja Debug on Windows. project(psi4; LANGUAGES C CXX); set(psi4_URL ""http://www.psicode.org/""); set(psi4_EMAIL ""psi4aiqc+cmake@gmail.com""); set(psi4_LICENSE ""GNU Lesser General Public License, version 3 (LGPL-3.0)""); set(psi4_DESCRIPTION ""Open-Source Quantum Chemistry""). list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake). message(STATUS ""Building using CMake ${CMAKE_VERSION} Generator ${CMAKE_GENERATOR}""). ################ Options: Overview and Not Otherwise Mentioned ###############. # <<< CMake build overview >>>; #; # >>> ls; # external/ COPYING psi4/ tests/ ...; # >>> cmake -S. -Bobjdir -DCMAKE_INSTALL_PREFIX=/path/to/install-psi4 ...; # ...; # -- Generating done; # -- Build files have been written to: /current/dir/objdir; # >>> cmake --build objdir --target install -j`getconf _NPROCESSORS_ONLN`. # <<< Required build dependencies that Psi4 can't build itself >>>; #; # - CMake (e.g., `conda install cmake`); # - C++ and C compilers (C++17 compliant); # - BLAS/LAPACK (also runtime; e.g., `conda install mkl-devel`); # - Python (also runtime; interpreter and headers; e.g., `conda install python`); # - NumPy (also runtime; avoidable at buildtime if gau2grid pre-built; e.g., `conda install numpy`); # - networkx >=2.4 (runtime only; e.g., `conda install networkx`); # - pint >=0.10 (runtime only; e.g., `conda install pint -c conda-forge`); # - pydantic >=1.0 (runtime only; e.g., `conda install pydantic -c conda-forge`); # - msgpack-python (runtime only; e.g., `conda install msgpack-python`); # - Eigen (for Libint2; e.g., `conda install eigen`); # - Boost (header-only libs for Libint2; e.g., `conda install boost-cpp`); # - SciPy (runtime only; avoidable through keyword setting; e.g., `conda install scipy`); #",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:1605,Deployability,install,install,1605,"""Choose the type of build."") # foil Ninja Debug on Windows. project(psi4; LANGUAGES C CXX); set(psi4_URL ""http://www.psicode.org/""); set(psi4_EMAIL ""psi4aiqc+cmake@gmail.com""); set(psi4_LICENSE ""GNU Lesser General Public License, version 3 (LGPL-3.0)""); set(psi4_DESCRIPTION ""Open-Source Quantum Chemistry""). list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake). message(STATUS ""Building using CMake ${CMAKE_VERSION} Generator ${CMAKE_GENERATOR}""). ################ Options: Overview and Not Otherwise Mentioned ###############. # <<< CMake build overview >>>; #; # >>> ls; # external/ COPYING psi4/ tests/ ...; # >>> cmake -S. -Bobjdir -DCMAKE_INSTALL_PREFIX=/path/to/install-psi4 ...; # ...; # -- Generating done; # -- Build files have been written to: /current/dir/objdir; # >>> cmake --build objdir --target install -j`getconf _NPROCESSORS_ONLN`. # <<< Required build dependencies that Psi4 can't build itself >>>; #; # - CMake (e.g., `conda install cmake`); # - C++ and C compilers (C++17 compliant); # - BLAS/LAPACK (also runtime; e.g., `conda install mkl-devel`); # - Python (also runtime; interpreter and headers; e.g., `conda install python`); # - NumPy (also runtime; avoidable at buildtime if gau2grid pre-built; e.g., `conda install numpy`); # - networkx >=2.4 (runtime only; e.g., `conda install networkx`); # - pint >=0.10 (runtime only; e.g., `conda install pint -c conda-forge`); # - pydantic >=1.0 (runtime only; e.g., `conda install pydantic -c conda-forge`); # - msgpack-python (runtime only; e.g., `conda install msgpack-python`); # - Eigen (for Libint2; e.g., `conda install eigen`); # - Boost (header-only libs for Libint2; e.g., `conda install boost-cpp`); # - SciPy (runtime only; avoidable through keyword setting; e.g., `conda install scipy`); # - py-cpuinfo (runtime only; e.g., `conda install py-cpuinfo`); # - psutil (runtime only; e.g., `conda install psutil`). # These three ""### Options ###"" sections contain useful CMake variables for build configuration.",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:1709,Deployability,install,install,1709,"t(psi4_URL ""http://www.psicode.org/""); set(psi4_EMAIL ""psi4aiqc+cmake@gmail.com""); set(psi4_LICENSE ""GNU Lesser General Public License, version 3 (LGPL-3.0)""); set(psi4_DESCRIPTION ""Open-Source Quantum Chemistry""). list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake). message(STATUS ""Building using CMake ${CMAKE_VERSION} Generator ${CMAKE_GENERATOR}""). ################ Options: Overview and Not Otherwise Mentioned ###############. # <<< CMake build overview >>>; #; # >>> ls; # external/ COPYING psi4/ tests/ ...; # >>> cmake -S. -Bobjdir -DCMAKE_INSTALL_PREFIX=/path/to/install-psi4 ...; # ...; # -- Generating done; # -- Build files have been written to: /current/dir/objdir; # >>> cmake --build objdir --target install -j`getconf _NPROCESSORS_ONLN`. # <<< Required build dependencies that Psi4 can't build itself >>>; #; # - CMake (e.g., `conda install cmake`); # - C++ and C compilers (C++17 compliant); # - BLAS/LAPACK (also runtime; e.g., `conda install mkl-devel`); # - Python (also runtime; interpreter and headers; e.g., `conda install python`); # - NumPy (also runtime; avoidable at buildtime if gau2grid pre-built; e.g., `conda install numpy`); # - networkx >=2.4 (runtime only; e.g., `conda install networkx`); # - pint >=0.10 (runtime only; e.g., `conda install pint -c conda-forge`); # - pydantic >=1.0 (runtime only; e.g., `conda install pydantic -c conda-forge`); # - msgpack-python (runtime only; e.g., `conda install msgpack-python`); # - Eigen (for Libint2; e.g., `conda install eigen`); # - Boost (header-only libs for Libint2; e.g., `conda install boost-cpp`); # - SciPy (runtime only; avoidable through keyword setting; e.g., `conda install scipy`); # - py-cpuinfo (runtime only; e.g., `conda install py-cpuinfo`); # - psutil (runtime only; e.g., `conda install psutil`). # These three ""### Options ###"" sections contain useful CMake variables for build configuration. # <<< Compilers and flags >>>; #; # - CMAKE_C_COMPILER ""C compiler""; # - CMAKE_C_FLAGS ""Additi",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:1794,Deployability,install,install,1794,"CENSE ""GNU Lesser General Public License, version 3 (LGPL-3.0)""); set(psi4_DESCRIPTION ""Open-Source Quantum Chemistry""). list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake). message(STATUS ""Building using CMake ${CMAKE_VERSION} Generator ${CMAKE_GENERATOR}""). ################ Options: Overview and Not Otherwise Mentioned ###############. # <<< CMake build overview >>>; #; # >>> ls; # external/ COPYING psi4/ tests/ ...; # >>> cmake -S. -Bobjdir -DCMAKE_INSTALL_PREFIX=/path/to/install-psi4 ...; # ...; # -- Generating done; # -- Build files have been written to: /current/dir/objdir; # >>> cmake --build objdir --target install -j`getconf _NPROCESSORS_ONLN`. # <<< Required build dependencies that Psi4 can't build itself >>>; #; # - CMake (e.g., `conda install cmake`); # - C++ and C compilers (C++17 compliant); # - BLAS/LAPACK (also runtime; e.g., `conda install mkl-devel`); # - Python (also runtime; interpreter and headers; e.g., `conda install python`); # - NumPy (also runtime; avoidable at buildtime if gau2grid pre-built; e.g., `conda install numpy`); # - networkx >=2.4 (runtime only; e.g., `conda install networkx`); # - pint >=0.10 (runtime only; e.g., `conda install pint -c conda-forge`); # - pydantic >=1.0 (runtime only; e.g., `conda install pydantic -c conda-forge`); # - msgpack-python (runtime only; e.g., `conda install msgpack-python`); # - Eigen (for Libint2; e.g., `conda install eigen`); # - Boost (header-only libs for Libint2; e.g., `conda install boost-cpp`); # - SciPy (runtime only; avoidable through keyword setting; e.g., `conda install scipy`); # - py-cpuinfo (runtime only; e.g., `conda install py-cpuinfo`); # - psutil (runtime only; e.g., `conda install psutil`). # These three ""### Options ###"" sections contain useful CMake variables for build configuration. # <<< Compilers and flags >>>; #; # - CMAKE_C_COMPILER ""C compiler""; # - CMAKE_C_FLAGS ""Additional C flags""; # - CMAKE_CXX_COMPILER ""C++ compiler""; # - CMAKE_CXX_FLAGS ""Additional C++ fla",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:1896,Deployability,install,install,1896,"4_DESCRIPTION ""Open-Source Quantum Chemistry""). list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake). message(STATUS ""Building using CMake ${CMAKE_VERSION} Generator ${CMAKE_GENERATOR}""). ################ Options: Overview and Not Otherwise Mentioned ###############. # <<< CMake build overview >>>; #; # >>> ls; # external/ COPYING psi4/ tests/ ...; # >>> cmake -S. -Bobjdir -DCMAKE_INSTALL_PREFIX=/path/to/install-psi4 ...; # ...; # -- Generating done; # -- Build files have been written to: /current/dir/objdir; # >>> cmake --build objdir --target install -j`getconf _NPROCESSORS_ONLN`. # <<< Required build dependencies that Psi4 can't build itself >>>; #; # - CMake (e.g., `conda install cmake`); # - C++ and C compilers (C++17 compliant); # - BLAS/LAPACK (also runtime; e.g., `conda install mkl-devel`); # - Python (also runtime; interpreter and headers; e.g., `conda install python`); # - NumPy (also runtime; avoidable at buildtime if gau2grid pre-built; e.g., `conda install numpy`); # - networkx >=2.4 (runtime only; e.g., `conda install networkx`); # - pint >=0.10 (runtime only; e.g., `conda install pint -c conda-forge`); # - pydantic >=1.0 (runtime only; e.g., `conda install pydantic -c conda-forge`); # - msgpack-python (runtime only; e.g., `conda install msgpack-python`); # - Eigen (for Libint2; e.g., `conda install eigen`); # - Boost (header-only libs for Libint2; e.g., `conda install boost-cpp`); # - SciPy (runtime only; avoidable through keyword setting; e.g., `conda install scipy`); # - py-cpuinfo (runtime only; e.g., `conda install py-cpuinfo`); # - psutil (runtime only; e.g., `conda install psutil`). # These three ""### Options ###"" sections contain useful CMake variables for build configuration. # <<< Compilers and flags >>>; #; # - CMAKE_C_COMPILER ""C compiler""; # - CMAKE_C_FLAGS ""Additional C flags""; # - CMAKE_CXX_COMPILER ""C++ compiler""; # - CMAKE_CXX_FLAGS ""Additional C++ flags""; # - CMAKE_Fortran_COMPILER ""Fortran compiler (required for some add-o",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:1960,Deployability,install,install,1960,"E_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake). message(STATUS ""Building using CMake ${CMAKE_VERSION} Generator ${CMAKE_GENERATOR}""). ################ Options: Overview and Not Otherwise Mentioned ###############. # <<< CMake build overview >>>; #; # >>> ls; # external/ COPYING psi4/ tests/ ...; # >>> cmake -S. -Bobjdir -DCMAKE_INSTALL_PREFIX=/path/to/install-psi4 ...; # ...; # -- Generating done; # -- Build files have been written to: /current/dir/objdir; # >>> cmake --build objdir --target install -j`getconf _NPROCESSORS_ONLN`. # <<< Required build dependencies that Psi4 can't build itself >>>; #; # - CMake (e.g., `conda install cmake`); # - C++ and C compilers (C++17 compliant); # - BLAS/LAPACK (also runtime; e.g., `conda install mkl-devel`); # - Python (also runtime; interpreter and headers; e.g., `conda install python`); # - NumPy (also runtime; avoidable at buildtime if gau2grid pre-built; e.g., `conda install numpy`); # - networkx >=2.4 (runtime only; e.g., `conda install networkx`); # - pint >=0.10 (runtime only; e.g., `conda install pint -c conda-forge`); # - pydantic >=1.0 (runtime only; e.g., `conda install pydantic -c conda-forge`); # - msgpack-python (runtime only; e.g., `conda install msgpack-python`); # - Eigen (for Libint2; e.g., `conda install eigen`); # - Boost (header-only libs for Libint2; e.g., `conda install boost-cpp`); # - SciPy (runtime only; avoidable through keyword setting; e.g., `conda install scipy`); # - py-cpuinfo (runtime only; e.g., `conda install py-cpuinfo`); # - psutil (runtime only; e.g., `conda install psutil`). # These three ""### Options ###"" sections contain useful CMake variables for build configuration. # <<< Compilers and flags >>>; #; # - CMAKE_C_COMPILER ""C compiler""; # - CMAKE_C_FLAGS ""Additional C flags""; # - CMAKE_CXX_COMPILER ""C++ compiler""; # - CMAKE_CXX_FLAGS ""Additional C++ flags""; # - CMAKE_Fortran_COMPILER ""Fortran compiler (required for some add-ons)""; # - CMAKE_Fortran_FLAGS ""Additional Fortran flags"". # <<<",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:2024,Deployability,install,install,2024,"ing using CMake ${CMAKE_VERSION} Generator ${CMAKE_GENERATOR}""). ################ Options: Overview and Not Otherwise Mentioned ###############. # <<< CMake build overview >>>; #; # >>> ls; # external/ COPYING psi4/ tests/ ...; # >>> cmake -S. -Bobjdir -DCMAKE_INSTALL_PREFIX=/path/to/install-psi4 ...; # ...; # -- Generating done; # -- Build files have been written to: /current/dir/objdir; # >>> cmake --build objdir --target install -j`getconf _NPROCESSORS_ONLN`. # <<< Required build dependencies that Psi4 can't build itself >>>; #; # - CMake (e.g., `conda install cmake`); # - C++ and C compilers (C++17 compliant); # - BLAS/LAPACK (also runtime; e.g., `conda install mkl-devel`); # - Python (also runtime; interpreter and headers; e.g., `conda install python`); # - NumPy (also runtime; avoidable at buildtime if gau2grid pre-built; e.g., `conda install numpy`); # - networkx >=2.4 (runtime only; e.g., `conda install networkx`); # - pint >=0.10 (runtime only; e.g., `conda install pint -c conda-forge`); # - pydantic >=1.0 (runtime only; e.g., `conda install pydantic -c conda-forge`); # - msgpack-python (runtime only; e.g., `conda install msgpack-python`); # - Eigen (for Libint2; e.g., `conda install eigen`); # - Boost (header-only libs for Libint2; e.g., `conda install boost-cpp`); # - SciPy (runtime only; avoidable through keyword setting; e.g., `conda install scipy`); # - py-cpuinfo (runtime only; e.g., `conda install py-cpuinfo`); # - psutil (runtime only; e.g., `conda install psutil`). # These three ""### Options ###"" sections contain useful CMake variables for build configuration. # <<< Compilers and flags >>>; #; # - CMAKE_C_COMPILER ""C compiler""; # - CMAKE_C_FLAGS ""Additional C flags""; # - CMAKE_CXX_COMPILER ""C++ compiler""; # - CMAKE_CXX_FLAGS ""Additional C++ flags""; # - CMAKE_Fortran_COMPILER ""Fortran compiler (required for some add-ons)""; # - CMAKE_Fortran_FLAGS ""Additional Fortran flags"". # <<< Detecting dependencies and add-ons >>>; #; # - Python_EXECUTABLE ""Pytho",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:2102,Deployability,install,install,2102," Overview and Not Otherwise Mentioned ###############. # <<< CMake build overview >>>; #; # >>> ls; # external/ COPYING psi4/ tests/ ...; # >>> cmake -S. -Bobjdir -DCMAKE_INSTALL_PREFIX=/path/to/install-psi4 ...; # ...; # -- Generating done; # -- Build files have been written to: /current/dir/objdir; # >>> cmake --build objdir --target install -j`getconf _NPROCESSORS_ONLN`. # <<< Required build dependencies that Psi4 can't build itself >>>; #; # - CMake (e.g., `conda install cmake`); # - C++ and C compilers (C++17 compliant); # - BLAS/LAPACK (also runtime; e.g., `conda install mkl-devel`); # - Python (also runtime; interpreter and headers; e.g., `conda install python`); # - NumPy (also runtime; avoidable at buildtime if gau2grid pre-built; e.g., `conda install numpy`); # - networkx >=2.4 (runtime only; e.g., `conda install networkx`); # - pint >=0.10 (runtime only; e.g., `conda install pint -c conda-forge`); # - pydantic >=1.0 (runtime only; e.g., `conda install pydantic -c conda-forge`); # - msgpack-python (runtime only; e.g., `conda install msgpack-python`); # - Eigen (for Libint2; e.g., `conda install eigen`); # - Boost (header-only libs for Libint2; e.g., `conda install boost-cpp`); # - SciPy (runtime only; avoidable through keyword setting; e.g., `conda install scipy`); # - py-cpuinfo (runtime only; e.g., `conda install py-cpuinfo`); # - psutil (runtime only; e.g., `conda install psutil`). # These three ""### Options ###"" sections contain useful CMake variables for build configuration. # <<< Compilers and flags >>>; #; # - CMAKE_C_COMPILER ""C compiler""; # - CMAKE_C_FLAGS ""Additional C flags""; # - CMAKE_CXX_COMPILER ""C++ compiler""; # - CMAKE_CXX_FLAGS ""Additional C++ flags""; # - CMAKE_Fortran_COMPILER ""Fortran compiler (required for some add-ons)""; # - CMAKE_Fortran_FLAGS ""Additional Fortran flags"". # <<< Detecting dependencies and add-ons >>>; #; # - Python_EXECUTABLE ""Python interpreter to use (e.g., /path/to/bin/python3.7)""; # - Python_LIBRARY ""Python library ",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:2184,Deployability,install,install,2184," overview >>>; #; # >>> ls; # external/ COPYING psi4/ tests/ ...; # >>> cmake -S. -Bobjdir -DCMAKE_INSTALL_PREFIX=/path/to/install-psi4 ...; # ...; # -- Generating done; # -- Build files have been written to: /current/dir/objdir; # >>> cmake --build objdir --target install -j`getconf _NPROCESSORS_ONLN`. # <<< Required build dependencies that Psi4 can't build itself >>>; #; # - CMake (e.g., `conda install cmake`); # - C++ and C compilers (C++17 compliant); # - BLAS/LAPACK (also runtime; e.g., `conda install mkl-devel`); # - Python (also runtime; interpreter and headers; e.g., `conda install python`); # - NumPy (also runtime; avoidable at buildtime if gau2grid pre-built; e.g., `conda install numpy`); # - networkx >=2.4 (runtime only; e.g., `conda install networkx`); # - pint >=0.10 (runtime only; e.g., `conda install pint -c conda-forge`); # - pydantic >=1.0 (runtime only; e.g., `conda install pydantic -c conda-forge`); # - msgpack-python (runtime only; e.g., `conda install msgpack-python`); # - Eigen (for Libint2; e.g., `conda install eigen`); # - Boost (header-only libs for Libint2; e.g., `conda install boost-cpp`); # - SciPy (runtime only; avoidable through keyword setting; e.g., `conda install scipy`); # - py-cpuinfo (runtime only; e.g., `conda install py-cpuinfo`); # - psutil (runtime only; e.g., `conda install psutil`). # These three ""### Options ###"" sections contain useful CMake variables for build configuration. # <<< Compilers and flags >>>; #; # - CMAKE_C_COMPILER ""C compiler""; # - CMAKE_C_FLAGS ""Additional C flags""; # - CMAKE_CXX_COMPILER ""C++ compiler""; # - CMAKE_CXX_FLAGS ""Additional C++ flags""; # - CMAKE_Fortran_COMPILER ""Fortran compiler (required for some add-ons)""; # - CMAKE_Fortran_FLAGS ""Additional Fortran flags"". # <<< Detecting dependencies and add-ons >>>; #; # - Python_EXECUTABLE ""Python interpreter to use (e.g., /path/to/bin/python3.7)""; # - Python_LIBRARY ""Python library that goes with the interpreter (e.g., /path/to/lib/python3.7.so)""; # - Py",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:2247,Deployability,install,install,2247," >>> cmake -S. -Bobjdir -DCMAKE_INSTALL_PREFIX=/path/to/install-psi4 ...; # ...; # -- Generating done; # -- Build files have been written to: /current/dir/objdir; # >>> cmake --build objdir --target install -j`getconf _NPROCESSORS_ONLN`. # <<< Required build dependencies that Psi4 can't build itself >>>; #; # - CMake (e.g., `conda install cmake`); # - C++ and C compilers (C++17 compliant); # - BLAS/LAPACK (also runtime; e.g., `conda install mkl-devel`); # - Python (also runtime; interpreter and headers; e.g., `conda install python`); # - NumPy (also runtime; avoidable at buildtime if gau2grid pre-built; e.g., `conda install numpy`); # - networkx >=2.4 (runtime only; e.g., `conda install networkx`); # - pint >=0.10 (runtime only; e.g., `conda install pint -c conda-forge`); # - pydantic >=1.0 (runtime only; e.g., `conda install pydantic -c conda-forge`); # - msgpack-python (runtime only; e.g., `conda install msgpack-python`); # - Eigen (for Libint2; e.g., `conda install eigen`); # - Boost (header-only libs for Libint2; e.g., `conda install boost-cpp`); # - SciPy (runtime only; avoidable through keyword setting; e.g., `conda install scipy`); # - py-cpuinfo (runtime only; e.g., `conda install py-cpuinfo`); # - psutil (runtime only; e.g., `conda install psutil`). # These three ""### Options ###"" sections contain useful CMake variables for build configuration. # <<< Compilers and flags >>>; #; # - CMAKE_C_COMPILER ""C compiler""; # - CMAKE_C_FLAGS ""Additional C flags""; # - CMAKE_CXX_COMPILER ""C++ compiler""; # - CMAKE_CXX_FLAGS ""Additional C++ flags""; # - CMAKE_Fortran_COMPILER ""Fortran compiler (required for some add-ons)""; # - CMAKE_Fortran_FLAGS ""Additional Fortran flags"". # <<< Detecting dependencies and add-ons >>>; #; # - Python_EXECUTABLE ""Python interpreter to use (e.g., /path/to/bin/python3.7)""; # - Python_LIBRARY ""Python library that goes with the interpreter (e.g., /path/to/lib/python3.7.so)""; # - Python_INCLUDE_DIR ""Path to the python include files (e.g., /path/to/",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:2318,Deployability,install,install,2318,"-- Generating done; # -- Build files have been written to: /current/dir/objdir; # >>> cmake --build objdir --target install -j`getconf _NPROCESSORS_ONLN`. # <<< Required build dependencies that Psi4 can't build itself >>>; #; # - CMake (e.g., `conda install cmake`); # - C++ and C compilers (C++17 compliant); # - BLAS/LAPACK (also runtime; e.g., `conda install mkl-devel`); # - Python (also runtime; interpreter and headers; e.g., `conda install python`); # - NumPy (also runtime; avoidable at buildtime if gau2grid pre-built; e.g., `conda install numpy`); # - networkx >=2.4 (runtime only; e.g., `conda install networkx`); # - pint >=0.10 (runtime only; e.g., `conda install pint -c conda-forge`); # - pydantic >=1.0 (runtime only; e.g., `conda install pydantic -c conda-forge`); # - msgpack-python (runtime only; e.g., `conda install msgpack-python`); # - Eigen (for Libint2; e.g., `conda install eigen`); # - Boost (header-only libs for Libint2; e.g., `conda install boost-cpp`); # - SciPy (runtime only; avoidable through keyword setting; e.g., `conda install scipy`); # - py-cpuinfo (runtime only; e.g., `conda install py-cpuinfo`); # - psutil (runtime only; e.g., `conda install psutil`). # These three ""### Options ###"" sections contain useful CMake variables for build configuration. # <<< Compilers and flags >>>; #; # - CMAKE_C_COMPILER ""C compiler""; # - CMAKE_C_FLAGS ""Additional C flags""; # - CMAKE_CXX_COMPILER ""C++ compiler""; # - CMAKE_CXX_FLAGS ""Additional C++ flags""; # - CMAKE_Fortran_COMPILER ""Fortran compiler (required for some add-ons)""; # - CMAKE_Fortran_FLAGS ""Additional Fortran flags"". # <<< Detecting dependencies and add-ons >>>; #; # - Python_EXECUTABLE ""Python interpreter to use (e.g., /path/to/bin/python3.7)""; # - Python_LIBRARY ""Python library that goes with the interpreter (e.g., /path/to/lib/python3.7.so)""; # - Python_INCLUDE_DIR ""Path to the python include files (e.g., /path/to/include/python3.7)""; # - SPHINX_ROOT ""Root directory for Sphinx: 'bin/sphinx-build",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:2412,Deployability,install,install,2412,"r; # >>> cmake --build objdir --target install -j`getconf _NPROCESSORS_ONLN`. # <<< Required build dependencies that Psi4 can't build itself >>>; #; # - CMake (e.g., `conda install cmake`); # - C++ and C compilers (C++17 compliant); # - BLAS/LAPACK (also runtime; e.g., `conda install mkl-devel`); # - Python (also runtime; interpreter and headers; e.g., `conda install python`); # - NumPy (also runtime; avoidable at buildtime if gau2grid pre-built; e.g., `conda install numpy`); # - networkx >=2.4 (runtime only; e.g., `conda install networkx`); # - pint >=0.10 (runtime only; e.g., `conda install pint -c conda-forge`); # - pydantic >=1.0 (runtime only; e.g., `conda install pydantic -c conda-forge`); # - msgpack-python (runtime only; e.g., `conda install msgpack-python`); # - Eigen (for Libint2; e.g., `conda install eigen`); # - Boost (header-only libs for Libint2; e.g., `conda install boost-cpp`); # - SciPy (runtime only; avoidable through keyword setting; e.g., `conda install scipy`); # - py-cpuinfo (runtime only; e.g., `conda install py-cpuinfo`); # - psutil (runtime only; e.g., `conda install psutil`). # These three ""### Options ###"" sections contain useful CMake variables for build configuration. # <<< Compilers and flags >>>; #; # - CMAKE_C_COMPILER ""C compiler""; # - CMAKE_C_FLAGS ""Additional C flags""; # - CMAKE_CXX_COMPILER ""C++ compiler""; # - CMAKE_CXX_FLAGS ""Additional C++ flags""; # - CMAKE_Fortran_COMPILER ""Fortran compiler (required for some add-ons)""; # - CMAKE_Fortran_FLAGS ""Additional Fortran flags"". # <<< Detecting dependencies and add-ons >>>; #; # - Python_EXECUTABLE ""Python interpreter to use (e.g., /path/to/bin/python3.7)""; # - Python_LIBRARY ""Python library that goes with the interpreter (e.g., /path/to/lib/python3.7.so)""; # - Python_INCLUDE_DIR ""Path to the python include files (e.g., /path/to/include/python3.7)""; # - SPHINX_ROOT ""Root directory for Sphinx: 'bin/sphinx-build' (or similar) should be in this dir.""; #; # For any ${AddOn} of: ambit, CheM",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:2472,Deployability,install,install,2472,"PROCESSORS_ONLN`. # <<< Required build dependencies that Psi4 can't build itself >>>; #; # - CMake (e.g., `conda install cmake`); # - C++ and C compilers (C++17 compliant); # - BLAS/LAPACK (also runtime; e.g., `conda install mkl-devel`); # - Python (also runtime; interpreter and headers; e.g., `conda install python`); # - NumPy (also runtime; avoidable at buildtime if gau2grid pre-built; e.g., `conda install numpy`); # - networkx >=2.4 (runtime only; e.g., `conda install networkx`); # - pint >=0.10 (runtime only; e.g., `conda install pint -c conda-forge`); # - pydantic >=1.0 (runtime only; e.g., `conda install pydantic -c conda-forge`); # - msgpack-python (runtime only; e.g., `conda install msgpack-python`); # - Eigen (for Libint2; e.g., `conda install eigen`); # - Boost (header-only libs for Libint2; e.g., `conda install boost-cpp`); # - SciPy (runtime only; avoidable through keyword setting; e.g., `conda install scipy`); # - py-cpuinfo (runtime only; e.g., `conda install py-cpuinfo`); # - psutil (runtime only; e.g., `conda install psutil`). # These three ""### Options ###"" sections contain useful CMake variables for build configuration. # <<< Compilers and flags >>>; #; # - CMAKE_C_COMPILER ""C compiler""; # - CMAKE_C_FLAGS ""Additional C flags""; # - CMAKE_CXX_COMPILER ""C++ compiler""; # - CMAKE_CXX_FLAGS ""Additional C++ flags""; # - CMAKE_Fortran_COMPILER ""Fortran compiler (required for some add-ons)""; # - CMAKE_Fortran_FLAGS ""Additional Fortran flags"". # <<< Detecting dependencies and add-ons >>>; #; # - Python_EXECUTABLE ""Python interpreter to use (e.g., /path/to/bin/python3.7)""; # - Python_LIBRARY ""Python library that goes with the interpreter (e.g., /path/to/lib/python3.7.so)""; # - Python_INCLUDE_DIR ""Path to the python include files (e.g., /path/to/include/python3.7)""; # - SPHINX_ROOT ""Root directory for Sphinx: 'bin/sphinx-build' (or similar) should be in this dir.""; #; # For any ${AddOn} of: ambit, CheMPS2, dkh, ecpint, libefp, Einsums, erd, gau2grid, gdma, Libin",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:2533,Deployability,install,install,2533,"encies that Psi4 can't build itself >>>; #; # - CMake (e.g., `conda install cmake`); # - C++ and C compilers (C++17 compliant); # - BLAS/LAPACK (also runtime; e.g., `conda install mkl-devel`); # - Python (also runtime; interpreter and headers; e.g., `conda install python`); # - NumPy (also runtime; avoidable at buildtime if gau2grid pre-built; e.g., `conda install numpy`); # - networkx >=2.4 (runtime only; e.g., `conda install networkx`); # - pint >=0.10 (runtime only; e.g., `conda install pint -c conda-forge`); # - pydantic >=1.0 (runtime only; e.g., `conda install pydantic -c conda-forge`); # - msgpack-python (runtime only; e.g., `conda install msgpack-python`); # - Eigen (for Libint2; e.g., `conda install eigen`); # - Boost (header-only libs for Libint2; e.g., `conda install boost-cpp`); # - SciPy (runtime only; avoidable through keyword setting; e.g., `conda install scipy`); # - py-cpuinfo (runtime only; e.g., `conda install py-cpuinfo`); # - psutil (runtime only; e.g., `conda install psutil`). # These three ""### Options ###"" sections contain useful CMake variables for build configuration. # <<< Compilers and flags >>>; #; # - CMAKE_C_COMPILER ""C compiler""; # - CMAKE_C_FLAGS ""Additional C flags""; # - CMAKE_CXX_COMPILER ""C++ compiler""; # - CMAKE_CXX_FLAGS ""Additional C++ flags""; # - CMAKE_Fortran_COMPILER ""Fortran compiler (required for some add-ons)""; # - CMAKE_Fortran_FLAGS ""Additional Fortran flags"". # <<< Detecting dependencies and add-ons >>>; #; # - Python_EXECUTABLE ""Python interpreter to use (e.g., /path/to/bin/python3.7)""; # - Python_LIBRARY ""Python library that goes with the interpreter (e.g., /path/to/lib/python3.7.so)""; # - Python_INCLUDE_DIR ""Path to the python include files (e.g., /path/to/include/python3.7)""; # - SPHINX_ROOT ""Root directory for Sphinx: 'bin/sphinx-build' (or similar) should be in this dir.""; #; # For any ${AddOn} of: ambit, CheMPS2, dkh, ecpint, libefp, Einsums, erd, gau2grid, gdma, Libint2, PCMSolver, pybind11, pylibefp,; # qcelem",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:2633,Deployability,configurat,configuration,2633,"`conda install cmake`); # - C++ and C compilers (C++17 compliant); # - BLAS/LAPACK (also runtime; e.g., `conda install mkl-devel`); # - Python (also runtime; interpreter and headers; e.g., `conda install python`); # - NumPy (also runtime; avoidable at buildtime if gau2grid pre-built; e.g., `conda install numpy`); # - networkx >=2.4 (runtime only; e.g., `conda install networkx`); # - pint >=0.10 (runtime only; e.g., `conda install pint -c conda-forge`); # - pydantic >=1.0 (runtime only; e.g., `conda install pydantic -c conda-forge`); # - msgpack-python (runtime only; e.g., `conda install msgpack-python`); # - Eigen (for Libint2; e.g., `conda install eigen`); # - Boost (header-only libs for Libint2; e.g., `conda install boost-cpp`); # - SciPy (runtime only; avoidable through keyword setting; e.g., `conda install scipy`); # - py-cpuinfo (runtime only; e.g., `conda install py-cpuinfo`); # - psutil (runtime only; e.g., `conda install psutil`). # These three ""### Options ###"" sections contain useful CMake variables for build configuration. # <<< Compilers and flags >>>; #; # - CMAKE_C_COMPILER ""C compiler""; # - CMAKE_C_FLAGS ""Additional C flags""; # - CMAKE_CXX_COMPILER ""C++ compiler""; # - CMAKE_CXX_FLAGS ""Additional C++ flags""; # - CMAKE_Fortran_COMPILER ""Fortran compiler (required for some add-ons)""; # - CMAKE_Fortran_FLAGS ""Additional Fortran flags"". # <<< Detecting dependencies and add-ons >>>; #; # - Python_EXECUTABLE ""Python interpreter to use (e.g., /path/to/bin/python3.7)""; # - Python_LIBRARY ""Python library that goes with the interpreter (e.g., /path/to/lib/python3.7.so)""; # - Python_INCLUDE_DIR ""Path to the python include files (e.g., /path/to/include/python3.7)""; # - SPHINX_ROOT ""Root directory for Sphinx: 'bin/sphinx-build' (or similar) should be in this dir.""; #; # For any ${AddOn} of: ambit, CheMPS2, dkh, ecpint, libefp, Einsums, erd, gau2grid, gdma, Libint2, PCMSolver, pybind11, pylibefp,; # qcelemental, qcengine, optking, simint, Libxc; # - CMAKE_PREFIX_PATH",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:3706,Deployability,install,install-libint,3706,"al C flags""; # - CMAKE_CXX_COMPILER ""C++ compiler""; # - CMAKE_CXX_FLAGS ""Additional C++ flags""; # - CMAKE_Fortran_COMPILER ""Fortran compiler (required for some add-ons)""; # - CMAKE_Fortran_FLAGS ""Additional Fortran flags"". # <<< Detecting dependencies and add-ons >>>; #; # - Python_EXECUTABLE ""Python interpreter to use (e.g., /path/to/bin/python3.7)""; # - Python_LIBRARY ""Python library that goes with the interpreter (e.g., /path/to/lib/python3.7.so)""; # - Python_INCLUDE_DIR ""Path to the python include files (e.g., /path/to/include/python3.7)""; # - SPHINX_ROOT ""Root directory for Sphinx: 'bin/sphinx-build' (or similar) should be in this dir.""; #; # For any ${AddOn} of: ambit, CheMPS2, dkh, ecpint, libefp, Einsums, erd, gau2grid, gdma, Libint2, PCMSolver, pybind11, pylibefp,; # qcelemental, qcengine, optking, simint, Libxc; # - CMAKE_PREFIX_PATH ""Set to list of root directories to look for externally built add-ons and dependencies; # (e.g., /path/to/install-libint;/path/to/install-gdma where exists /path/to/install-libint/lib/libderiv.a)""; # - ${AddOn}_DIR ""Set to directory containing ${AddOn}Config.cmake file to facilitate detection of external build""; # - CMAKE_DISABLE_FIND_PACKAGE_${AddON} ""Set to ON to force internal build""; # - CMAKE_INSIST_FIND_PACKAGE_${AddON} ""Set to ON to force external detect"". # <<< Detecting BLAS/LAPACK >>>; #; # - ENV(MATH_ROOT) ""Root directory where BLAS/LAPACK libraries should be detected (e.g., ${MATH_ROOT}/lib/libblas.so)""; # - BLAS_TYPE ""Target BLAS distribution for math detection; # (default: search order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_TYPE ""Target LAPACK distribution for math detection; # (default: search order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_LIBRARIES ""Location of BLAS/LAPACK libraries as "";""-separated list of full paths, bypassing math detection""; # - LAPACK_INCLUDE_DIRS ""Location of BLAS/",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:3730,Deployability,install,install-gdma,3730,"al C flags""; # - CMAKE_CXX_COMPILER ""C++ compiler""; # - CMAKE_CXX_FLAGS ""Additional C++ flags""; # - CMAKE_Fortran_COMPILER ""Fortran compiler (required for some add-ons)""; # - CMAKE_Fortran_FLAGS ""Additional Fortran flags"". # <<< Detecting dependencies and add-ons >>>; #; # - Python_EXECUTABLE ""Python interpreter to use (e.g., /path/to/bin/python3.7)""; # - Python_LIBRARY ""Python library that goes with the interpreter (e.g., /path/to/lib/python3.7.so)""; # - Python_INCLUDE_DIR ""Path to the python include files (e.g., /path/to/include/python3.7)""; # - SPHINX_ROOT ""Root directory for Sphinx: 'bin/sphinx-build' (or similar) should be in this dir.""; #; # For any ${AddOn} of: ambit, CheMPS2, dkh, ecpint, libefp, Einsums, erd, gau2grid, gdma, Libint2, PCMSolver, pybind11, pylibefp,; # qcelemental, qcengine, optking, simint, Libxc; # - CMAKE_PREFIX_PATH ""Set to list of root directories to look for externally built add-ons and dependencies; # (e.g., /path/to/install-libint;/path/to/install-gdma where exists /path/to/install-libint/lib/libderiv.a)""; # - ${AddOn}_DIR ""Set to directory containing ${AddOn}Config.cmake file to facilitate detection of external build""; # - CMAKE_DISABLE_FIND_PACKAGE_${AddON} ""Set to ON to force internal build""; # - CMAKE_INSIST_FIND_PACKAGE_${AddON} ""Set to ON to force external detect"". # <<< Detecting BLAS/LAPACK >>>; #; # - ENV(MATH_ROOT) ""Root directory where BLAS/LAPACK libraries should be detected (e.g., ${MATH_ROOT}/lib/libblas.so)""; # - BLAS_TYPE ""Target BLAS distribution for math detection; # (default: search order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_TYPE ""Target LAPACK distribution for math detection; # (default: search order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_LIBRARIES ""Location of BLAS/LAPACK libraries as "";""-separated list of full paths, bypassing math detection""; # - LAPACK_INCLUDE_DIRS ""Location of BLAS/",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:3765,Deployability,install,install-libint,3765,"al C flags""; # - CMAKE_CXX_COMPILER ""C++ compiler""; # - CMAKE_CXX_FLAGS ""Additional C++ flags""; # - CMAKE_Fortran_COMPILER ""Fortran compiler (required for some add-ons)""; # - CMAKE_Fortran_FLAGS ""Additional Fortran flags"". # <<< Detecting dependencies and add-ons >>>; #; # - Python_EXECUTABLE ""Python interpreter to use (e.g., /path/to/bin/python3.7)""; # - Python_LIBRARY ""Python library that goes with the interpreter (e.g., /path/to/lib/python3.7.so)""; # - Python_INCLUDE_DIR ""Path to the python include files (e.g., /path/to/include/python3.7)""; # - SPHINX_ROOT ""Root directory for Sphinx: 'bin/sphinx-build' (or similar) should be in this dir.""; #; # For any ${AddOn} of: ambit, CheMPS2, dkh, ecpint, libefp, Einsums, erd, gau2grid, gdma, Libint2, PCMSolver, pybind11, pylibefp,; # qcelemental, qcengine, optking, simint, Libxc; # - CMAKE_PREFIX_PATH ""Set to list of root directories to look for externally built add-ons and dependencies; # (e.g., /path/to/install-libint;/path/to/install-gdma where exists /path/to/install-libint/lib/libderiv.a)""; # - ${AddOn}_DIR ""Set to directory containing ${AddOn}Config.cmake file to facilitate detection of external build""; # - CMAKE_DISABLE_FIND_PACKAGE_${AddON} ""Set to ON to force internal build""; # - CMAKE_INSIST_FIND_PACKAGE_${AddON} ""Set to ON to force external detect"". # <<< Detecting BLAS/LAPACK >>>; #; # - ENV(MATH_ROOT) ""Root directory where BLAS/LAPACK libraries should be detected (e.g., ${MATH_ROOT}/lib/libblas.so)""; # - BLAS_TYPE ""Target BLAS distribution for math detection; # (default: search order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_TYPE ""Target LAPACK distribution for math detection; # (default: search order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_LIBRARIES ""Location of BLAS/LAPACK libraries as "";""-separated list of full paths, bypassing math detection""; # - LAPACK_INCLUDE_DIRS ""Location of BLAS/",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:5034,Deployability,install,installed,5034,"h order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_TYPE ""Target LAPACK distribution for math detection; # (default: search order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_LIBRARIES ""Location of BLAS/LAPACK libraries as "";""-separated list of full paths, bypassing math detection""; # - LAPACK_INCLUDE_DIRS ""Location of BLAS/LAPACK headers (only needed for MKL), bypassing math detection""; # - OpenMP_LIBRARY_DIRS ""Location of OpenMP libraries (iomp5/gomp/omp) as "";""-separated list, hinting OpenMP detection"". # <<< Install >>>; #; # - CMAKE_INSTALL_PREFIX ""Location to which Psi4 and internally built add-ons are installed (default: /usr/local/psi4)""; # - CMAKE_INSTALL_BINDIR ""Location within CMAKE_INSTALL_PREFIX to which executables are installed (default: bin)""; # - CMAKE_INSTALL_LIBDIR ""Location within CMAKE_INSTALL_PREFIX to which libraries are installed (default: lib)""; # - CMAKE_INSTALL_DATADIR ""Location within CMAKE_INSTALL_PREFIX to which resources are installed (default: share)""; # - CMAKE_INSTALL_INCLUDEDIR ""Location within CMAKE_INSTALL_PREFIX to which headers are installed (default: include)""; # - PYMOD_INSTALL_LIBDIR ""Location within CMAKE_INSTALL_LIBDIR to which python modules are installed (default: /); # Must start with: / . Used to imitate python install: /python3.6/site-packages ."". ############################ Options: Build What? ############################; option(ENABLE_ambit ""Enables the ambit tensor library"" OFF); option(ENABLE_bse ""Enables the basis_set_exchange for requesting basis sets (requires jsonschema, regex; can also be added at runtime)"" OFF); option(ENABLE_CheMPS2 ""Enables CheMPS2 for DMRG (requires HDF5)"" OFF); option(ENABLE_cppe ""Enables CPPE for Polarizable Embedding"" OFF); option(ENABLE_adcc ""Enables adcc for algebraic-diagrammatic construction methods (requires libtensorlight; can also be added at runtime)"" OFF); op",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:5161,Deployability,install,installed,5161,"h order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_TYPE ""Target LAPACK distribution for math detection; # (default: search order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_LIBRARIES ""Location of BLAS/LAPACK libraries as "";""-separated list of full paths, bypassing math detection""; # - LAPACK_INCLUDE_DIRS ""Location of BLAS/LAPACK headers (only needed for MKL), bypassing math detection""; # - OpenMP_LIBRARY_DIRS ""Location of OpenMP libraries (iomp5/gomp/omp) as "";""-separated list, hinting OpenMP detection"". # <<< Install >>>; #; # - CMAKE_INSTALL_PREFIX ""Location to which Psi4 and internally built add-ons are installed (default: /usr/local/psi4)""; # - CMAKE_INSTALL_BINDIR ""Location within CMAKE_INSTALL_PREFIX to which executables are installed (default: bin)""; # - CMAKE_INSTALL_LIBDIR ""Location within CMAKE_INSTALL_PREFIX to which libraries are installed (default: lib)""; # - CMAKE_INSTALL_DATADIR ""Location within CMAKE_INSTALL_PREFIX to which resources are installed (default: share)""; # - CMAKE_INSTALL_INCLUDEDIR ""Location within CMAKE_INSTALL_PREFIX to which headers are installed (default: include)""; # - PYMOD_INSTALL_LIBDIR ""Location within CMAKE_INSTALL_LIBDIR to which python modules are installed (default: /); # Must start with: / . Used to imitate python install: /python3.6/site-packages ."". ############################ Options: Build What? ############################; option(ENABLE_ambit ""Enables the ambit tensor library"" OFF); option(ENABLE_bse ""Enables the basis_set_exchange for requesting basis sets (requires jsonschema, regex; can also be added at runtime)"" OFF); option(ENABLE_CheMPS2 ""Enables CheMPS2 for DMRG (requires HDF5)"" OFF); option(ENABLE_cppe ""Enables CPPE for Polarizable Embedding"" OFF); option(ENABLE_adcc ""Enables adcc for algebraic-diagrammatic construction methods (requires libtensorlight; can also be added at runtime)"" OFF); op",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:5274,Deployability,install,installed,5274,"h order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_TYPE ""Target LAPACK distribution for math detection; # (default: search order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_LIBRARIES ""Location of BLAS/LAPACK libraries as "";""-separated list of full paths, bypassing math detection""; # - LAPACK_INCLUDE_DIRS ""Location of BLAS/LAPACK headers (only needed for MKL), bypassing math detection""; # - OpenMP_LIBRARY_DIRS ""Location of OpenMP libraries (iomp5/gomp/omp) as "";""-separated list, hinting OpenMP detection"". # <<< Install >>>; #; # - CMAKE_INSTALL_PREFIX ""Location to which Psi4 and internally built add-ons are installed (default: /usr/local/psi4)""; # - CMAKE_INSTALL_BINDIR ""Location within CMAKE_INSTALL_PREFIX to which executables are installed (default: bin)""; # - CMAKE_INSTALL_LIBDIR ""Location within CMAKE_INSTALL_PREFIX to which libraries are installed (default: lib)""; # - CMAKE_INSTALL_DATADIR ""Location within CMAKE_INSTALL_PREFIX to which resources are installed (default: share)""; # - CMAKE_INSTALL_INCLUDEDIR ""Location within CMAKE_INSTALL_PREFIX to which headers are installed (default: include)""; # - PYMOD_INSTALL_LIBDIR ""Location within CMAKE_INSTALL_LIBDIR to which python modules are installed (default: /); # Must start with: / . Used to imitate python install: /python3.6/site-packages ."". ############################ Options: Build What? ############################; option(ENABLE_ambit ""Enables the ambit tensor library"" OFF); option(ENABLE_bse ""Enables the basis_set_exchange for requesting basis sets (requires jsonschema, regex; can also be added at runtime)"" OFF); option(ENABLE_CheMPS2 ""Enables CheMPS2 for DMRG (requires HDF5)"" OFF); option(ENABLE_cppe ""Enables CPPE for Polarizable Embedding"" OFF); option(ENABLE_adcc ""Enables adcc for algebraic-diagrammatic construction methods (requires libtensorlight; can also be added at runtime)"" OFF); op",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:5388,Deployability,install,installed,5388,"h order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_TYPE ""Target LAPACK distribution for math detection; # (default: search order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_LIBRARIES ""Location of BLAS/LAPACK libraries as "";""-separated list of full paths, bypassing math detection""; # - LAPACK_INCLUDE_DIRS ""Location of BLAS/LAPACK headers (only needed for MKL), bypassing math detection""; # - OpenMP_LIBRARY_DIRS ""Location of OpenMP libraries (iomp5/gomp/omp) as "";""-separated list, hinting OpenMP detection"". # <<< Install >>>; #; # - CMAKE_INSTALL_PREFIX ""Location to which Psi4 and internally built add-ons are installed (default: /usr/local/psi4)""; # - CMAKE_INSTALL_BINDIR ""Location within CMAKE_INSTALL_PREFIX to which executables are installed (default: bin)""; # - CMAKE_INSTALL_LIBDIR ""Location within CMAKE_INSTALL_PREFIX to which libraries are installed (default: lib)""; # - CMAKE_INSTALL_DATADIR ""Location within CMAKE_INSTALL_PREFIX to which resources are installed (default: share)""; # - CMAKE_INSTALL_INCLUDEDIR ""Location within CMAKE_INSTALL_PREFIX to which headers are installed (default: include)""; # - PYMOD_INSTALL_LIBDIR ""Location within CMAKE_INSTALL_LIBDIR to which python modules are installed (default: /); # Must start with: / . Used to imitate python install: /python3.6/site-packages ."". ############################ Options: Build What? ############################; option(ENABLE_ambit ""Enables the ambit tensor library"" OFF); option(ENABLE_bse ""Enables the basis_set_exchange for requesting basis sets (requires jsonschema, regex; can also be added at runtime)"" OFF); option(ENABLE_CheMPS2 ""Enables CheMPS2 for DMRG (requires HDF5)"" OFF); option(ENABLE_cppe ""Enables CPPE for Polarizable Embedding"" OFF); option(ENABLE_adcc ""Enables adcc for algebraic-diagrammatic construction methods (requires libtensorlight; can also be added at runtime)"" OFF); op",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:5505,Deployability,install,installed,5505,"h order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_TYPE ""Target LAPACK distribution for math detection; # (default: search order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_LIBRARIES ""Location of BLAS/LAPACK libraries as "";""-separated list of full paths, bypassing math detection""; # - LAPACK_INCLUDE_DIRS ""Location of BLAS/LAPACK headers (only needed for MKL), bypassing math detection""; # - OpenMP_LIBRARY_DIRS ""Location of OpenMP libraries (iomp5/gomp/omp) as "";""-separated list, hinting OpenMP detection"". # <<< Install >>>; #; # - CMAKE_INSTALL_PREFIX ""Location to which Psi4 and internally built add-ons are installed (default: /usr/local/psi4)""; # - CMAKE_INSTALL_BINDIR ""Location within CMAKE_INSTALL_PREFIX to which executables are installed (default: bin)""; # - CMAKE_INSTALL_LIBDIR ""Location within CMAKE_INSTALL_PREFIX to which libraries are installed (default: lib)""; # - CMAKE_INSTALL_DATADIR ""Location within CMAKE_INSTALL_PREFIX to which resources are installed (default: share)""; # - CMAKE_INSTALL_INCLUDEDIR ""Location within CMAKE_INSTALL_PREFIX to which headers are installed (default: include)""; # - PYMOD_INSTALL_LIBDIR ""Location within CMAKE_INSTALL_LIBDIR to which python modules are installed (default: /); # Must start with: / . Used to imitate python install: /python3.6/site-packages ."". ############################ Options: Build What? ############################; option(ENABLE_ambit ""Enables the ambit tensor library"" OFF); option(ENABLE_bse ""Enables the basis_set_exchange for requesting basis sets (requires jsonschema, regex; can also be added at runtime)"" OFF); option(ENABLE_CheMPS2 ""Enables CheMPS2 for DMRG (requires HDF5)"" OFF); option(ENABLE_cppe ""Enables CPPE for Polarizable Embedding"" OFF); option(ENABLE_adcc ""Enables adcc for algebraic-diagrammatic construction methods (requires libtensorlight; can also be added at runtime)"" OFF); op",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:5627,Deployability,install,installed,5627,"h order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_TYPE ""Target LAPACK distribution for math detection; # (default: search order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_LIBRARIES ""Location of BLAS/LAPACK libraries as "";""-separated list of full paths, bypassing math detection""; # - LAPACK_INCLUDE_DIRS ""Location of BLAS/LAPACK headers (only needed for MKL), bypassing math detection""; # - OpenMP_LIBRARY_DIRS ""Location of OpenMP libraries (iomp5/gomp/omp) as "";""-separated list, hinting OpenMP detection"". # <<< Install >>>; #; # - CMAKE_INSTALL_PREFIX ""Location to which Psi4 and internally built add-ons are installed (default: /usr/local/psi4)""; # - CMAKE_INSTALL_BINDIR ""Location within CMAKE_INSTALL_PREFIX to which executables are installed (default: bin)""; # - CMAKE_INSTALL_LIBDIR ""Location within CMAKE_INSTALL_PREFIX to which libraries are installed (default: lib)""; # - CMAKE_INSTALL_DATADIR ""Location within CMAKE_INSTALL_PREFIX to which resources are installed (default: share)""; # - CMAKE_INSTALL_INCLUDEDIR ""Location within CMAKE_INSTALL_PREFIX to which headers are installed (default: include)""; # - PYMOD_INSTALL_LIBDIR ""Location within CMAKE_INSTALL_LIBDIR to which python modules are installed (default: /); # Must start with: / . Used to imitate python install: /python3.6/site-packages ."". ############################ Options: Build What? ############################; option(ENABLE_ambit ""Enables the ambit tensor library"" OFF); option(ENABLE_bse ""Enables the basis_set_exchange for requesting basis sets (requires jsonschema, regex; can also be added at runtime)"" OFF); option(ENABLE_CheMPS2 ""Enables CheMPS2 for DMRG (requires HDF5)"" OFF); option(ENABLE_cppe ""Enables CPPE for Polarizable Embedding"" OFF); option(ENABLE_adcc ""Enables adcc for algebraic-diagrammatic construction methods (requires libtensorlight; can also be added at runtime)"" OFF); op",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:5697,Deployability,install,install,5697,"ction""; # - LAPACK_INCLUDE_DIRS ""Location of BLAS/LAPACK headers (only needed for MKL), bypassing math detection""; # - OpenMP_LIBRARY_DIRS ""Location of OpenMP libraries (iomp5/gomp/omp) as "";""-separated list, hinting OpenMP detection"". # <<< Install >>>; #; # - CMAKE_INSTALL_PREFIX ""Location to which Psi4 and internally built add-ons are installed (default: /usr/local/psi4)""; # - CMAKE_INSTALL_BINDIR ""Location within CMAKE_INSTALL_PREFIX to which executables are installed (default: bin)""; # - CMAKE_INSTALL_LIBDIR ""Location within CMAKE_INSTALL_PREFIX to which libraries are installed (default: lib)""; # - CMAKE_INSTALL_DATADIR ""Location within CMAKE_INSTALL_PREFIX to which resources are installed (default: share)""; # - CMAKE_INSTALL_INCLUDEDIR ""Location within CMAKE_INSTALL_PREFIX to which headers are installed (default: include)""; # - PYMOD_INSTALL_LIBDIR ""Location within CMAKE_INSTALL_LIBDIR to which python modules are installed (default: /); # Must start with: / . Used to imitate python install: /python3.6/site-packages ."". ############################ Options: Build What? ############################; option(ENABLE_ambit ""Enables the ambit tensor library"" OFF); option(ENABLE_bse ""Enables the basis_set_exchange for requesting basis sets (requires jsonschema, regex; can also be added at runtime)"" OFF); option(ENABLE_CheMPS2 ""Enables CheMPS2 for DMRG (requires HDF5)"" OFF); option(ENABLE_cppe ""Enables CPPE for Polarizable Embedding"" OFF); option(ENABLE_adcc ""Enables adcc for algebraic-diagrammatic construction methods (requires libtensorlight; can also be added at runtime)"" OFF); option(ENABLE_ddx ""Enables ddx for domain-decomposition contiuum solvation models (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_dkh ""Enables DKH integrals (requires Fortran)"" OFF); option(ENABLE_ecpint ""Enables libecpint for effective core potentials (ECP)"" OFF); option(ENABLE_libefp ""Enables LIBEFP and PylibEFP for fragments"" OFF); option(ENABLE_Einsums ""Enables the E",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:7728,Deployability,install,installation,7728,"_adcc ""Enables adcc for algebraic-diagrammatic construction methods (requires libtensorlight; can also be added at runtime)"" OFF); option(ENABLE_ddx ""Enables ddx for domain-decomposition contiuum solvation models (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_dkh ""Enables DKH integrals (requires Fortran)"" OFF); option(ENABLE_ecpint ""Enables libecpint for effective core potentials (ECP)"" OFF); option(ENABLE_libefp ""Enables LIBEFP and PylibEFP for fragments"" OFF); option(ENABLE_Einsums ""Enables the Einsums tensor library"" OFF); option(ENABLE_erd ""Enables use of ERD instead of Libint (requires Fortran)"" OFF); option(ENABLE_simint ""Enables use of SIMINT two-electron integral library"" OFF); option(ENABLE_gdma ""Enables Stone's GDMA multipole code (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_PCMSolver ""Enables PCMSolver library (requires Fortran)"" OFF); option(ENABLE_snsmp2 ""Enables SNSMP2 plugin (can also be added at runtime)"" OFF); option(ENABLE_v2rdm_casscf ""Enables V2RDM_CASSCF plugin (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_psi4fockci ""Enables Psi4FockCI plugin (can also be added at runtime)"" OFF); option(ENABLE_cct3 ""Enables cct3 plugin (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_gpu_dfcc ""Enables GPU_DFCC plugin for gpu-accelerated df-cc (requires CUDA; can also be added at runtime)"" OFF); option(ENABLE_mdi ""Enables MolSSI driver interface"" OFF); option(ENABLE_BrianQC ""Enables the BrianQC GPU module (requires CUDA; requires separate installation and licensing of the BrianQC module)"" OFF); option(ENABLE_Libint1t ""Enables Libint1 in special _t variety"" OFF); # These options are relevant to pasture, expert only; option(ENABLE_ccsort ""Enables ccsort plugin installed from psi4pasture"" OFF); option(ENABLE_transqt2 ""Enables transqt2 plugin installed from psi4pasture"" OFF); option(psi4_SKIP_ENABLE_Fortran ""Suppress enabling Fortran language even when Fortran addons enabled.",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:7952,Deployability,install,installed,7952,"_adcc ""Enables adcc for algebraic-diagrammatic construction methods (requires libtensorlight; can also be added at runtime)"" OFF); option(ENABLE_ddx ""Enables ddx for domain-decomposition contiuum solvation models (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_dkh ""Enables DKH integrals (requires Fortran)"" OFF); option(ENABLE_ecpint ""Enables libecpint for effective core potentials (ECP)"" OFF); option(ENABLE_libefp ""Enables LIBEFP and PylibEFP for fragments"" OFF); option(ENABLE_Einsums ""Enables the Einsums tensor library"" OFF); option(ENABLE_erd ""Enables use of ERD instead of Libint (requires Fortran)"" OFF); option(ENABLE_simint ""Enables use of SIMINT two-electron integral library"" OFF); option(ENABLE_gdma ""Enables Stone's GDMA multipole code (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_PCMSolver ""Enables PCMSolver library (requires Fortran)"" OFF); option(ENABLE_snsmp2 ""Enables SNSMP2 plugin (can also be added at runtime)"" OFF); option(ENABLE_v2rdm_casscf ""Enables V2RDM_CASSCF plugin (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_psi4fockci ""Enables Psi4FockCI plugin (can also be added at runtime)"" OFF); option(ENABLE_cct3 ""Enables cct3 plugin (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_gpu_dfcc ""Enables GPU_DFCC plugin for gpu-accelerated df-cc (requires CUDA; can also be added at runtime)"" OFF); option(ENABLE_mdi ""Enables MolSSI driver interface"" OFF); option(ENABLE_BrianQC ""Enables the BrianQC GPU module (requires CUDA; requires separate installation and licensing of the BrianQC module)"" OFF); option(ENABLE_Libint1t ""Enables Libint1 in special _t variety"" OFF); # These options are relevant to pasture, expert only; option(ENABLE_ccsort ""Enables ccsort plugin installed from psi4pasture"" OFF); option(ENABLE_transqt2 ""Enables transqt2 plugin installed from psi4pasture"" OFF); option(psi4_SKIP_ENABLE_Fortran ""Suppress enabling Fortran language even when Fortran addons enabled.",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:8034,Deployability,install,installed,8034,"_adcc ""Enables adcc for algebraic-diagrammatic construction methods (requires libtensorlight; can also be added at runtime)"" OFF); option(ENABLE_ddx ""Enables ddx for domain-decomposition contiuum solvation models (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_dkh ""Enables DKH integrals (requires Fortran)"" OFF); option(ENABLE_ecpint ""Enables libecpint for effective core potentials (ECP)"" OFF); option(ENABLE_libefp ""Enables LIBEFP and PylibEFP for fragments"" OFF); option(ENABLE_Einsums ""Enables the Einsums tensor library"" OFF); option(ENABLE_erd ""Enables use of ERD instead of Libint (requires Fortran)"" OFF); option(ENABLE_simint ""Enables use of SIMINT two-electron integral library"" OFF); option(ENABLE_gdma ""Enables Stone's GDMA multipole code (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_PCMSolver ""Enables PCMSolver library (requires Fortran)"" OFF); option(ENABLE_snsmp2 ""Enables SNSMP2 plugin (can also be added at runtime)"" OFF); option(ENABLE_v2rdm_casscf ""Enables V2RDM_CASSCF plugin (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_psi4fockci ""Enables Psi4FockCI plugin (can also be added at runtime)"" OFF); option(ENABLE_cct3 ""Enables cct3 plugin (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_gpu_dfcc ""Enables GPU_DFCC plugin for gpu-accelerated df-cc (requires CUDA; can also be added at runtime)"" OFF); option(ENABLE_mdi ""Enables MolSSI driver interface"" OFF); option(ENABLE_BrianQC ""Enables the BrianQC GPU module (requires CUDA; requires separate installation and licensing of the BrianQC module)"" OFF); option(ENABLE_Libint1t ""Enables Libint1 in special _t variety"" OFF); # These options are relevant to pasture, expert only; option(ENABLE_ccsort ""Enables ccsort plugin installed from psi4pasture"" OFF); option(ENABLE_transqt2 ""Enables transqt2 plugin installed from psi4pasture"" OFF); option(psi4_SKIP_ENABLE_Fortran ""Suppress enabling Fortran language even when Fortran addons enabled.",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:11428,Deployability,install,installed,11428,"quires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=address -fno-omit-frame-pointer""); option_with_flags(ENABLE_TSAN ""Enables thread sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=thread -fPIE -pie -fno-omit-frame-pointer""); option_with_flags(ENABLE_UBSAN ""Enables undefined behavior sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=undefined -fno-omit-frame-pointer""); option_with_flags(ENABLE_MSAN ""Enables memory sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=memory -fPIE -pie -fno-omit-frame-pointer""); option_with_default(MAX_AM_ERI ""Maximum angular momentum for integrals. The definition changed with Libint2 but still single integer. Default fine for production."" 5); option_with_default(FC_SYMBOL ""The type of Fortran name mangling"" 2); option_with_default(BUILD_FPIC ""Compile static libraries with position independent code"" ON); option_with_default(CMAKE_INSTALL_LIBDIR ""Directory to which libraries installed"" lib); option_with_default(PYMOD_INSTALL_LIBDIR ""Location within CMAKE_INSTALL_LIBDIR to which python modules are installed"" /); option_with_default(psi4_INSTALL_CMAKEDIR ""Directory to which psi4 CMake config files installed."" share/cmake/psi4); option_with_default(TargetLAPACK_INSTALL_CMAKEDIR ""Directory to which psi4 CMake config files installed."" share/cmake/TargetLAPACK); option_with_default(TargetHDF5_INSTALL_CMAKEDIR ""Directory to which psi4 CMake config files installed."" share/cmake/TargetHDF5); option_with_default(ENABLE_GENERIC ""Enables mostly static linking of language libraries for shared library"" OFF); option_with_default(CMAKE_INSTALL_MESSAGE ""Specify verbosity of installation messages"" LAZY); option_with_default(psi4_CXX_STANDARD ""Specify C++ standard for core Psi4"" 17); option_with_default(psi4_CXX_STANDARD_Libint2 ""Specify C++ standard for Psi4 files including Libint2 headers. Older (e.g., 2021.4) Intel compilers may need 14"" 17); option_with_default(SIMINT",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:11552,Deployability,install,installed,11552,"quires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=address -fno-omit-frame-pointer""); option_with_flags(ENABLE_TSAN ""Enables thread sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=thread -fPIE -pie -fno-omit-frame-pointer""); option_with_flags(ENABLE_UBSAN ""Enables undefined behavior sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=undefined -fno-omit-frame-pointer""); option_with_flags(ENABLE_MSAN ""Enables memory sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=memory -fPIE -pie -fno-omit-frame-pointer""); option_with_default(MAX_AM_ERI ""Maximum angular momentum for integrals. The definition changed with Libint2 but still single integer. Default fine for production."" 5); option_with_default(FC_SYMBOL ""The type of Fortran name mangling"" 2); option_with_default(BUILD_FPIC ""Compile static libraries with position independent code"" ON); option_with_default(CMAKE_INSTALL_LIBDIR ""Directory to which libraries installed"" lib); option_with_default(PYMOD_INSTALL_LIBDIR ""Location within CMAKE_INSTALL_LIBDIR to which python modules are installed"" /); option_with_default(psi4_INSTALL_CMAKEDIR ""Directory to which psi4 CMake config files installed."" share/cmake/psi4); option_with_default(TargetLAPACK_INSTALL_CMAKEDIR ""Directory to which psi4 CMake config files installed."" share/cmake/TargetLAPACK); option_with_default(TargetHDF5_INSTALL_CMAKEDIR ""Directory to which psi4 CMake config files installed."" share/cmake/TargetHDF5); option_with_default(ENABLE_GENERIC ""Enables mostly static linking of language libraries for shared library"" OFF); option_with_default(CMAKE_INSTALL_MESSAGE ""Specify verbosity of installation messages"" LAZY); option_with_default(psi4_CXX_STANDARD ""Specify C++ standard for core Psi4"" 17); option_with_default(psi4_CXX_STANDARD_Libint2 ""Specify C++ standard for Psi4 files including Libint2 headers. Older (e.g., 2021.4) Intel compilers may need 14"" 17); option_with_default(SIMINT",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:11653,Deployability,install,installed,11653,"quires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=address -fno-omit-frame-pointer""); option_with_flags(ENABLE_TSAN ""Enables thread sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=thread -fPIE -pie -fno-omit-frame-pointer""); option_with_flags(ENABLE_UBSAN ""Enables undefined behavior sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=undefined -fno-omit-frame-pointer""); option_with_flags(ENABLE_MSAN ""Enables memory sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=memory -fPIE -pie -fno-omit-frame-pointer""); option_with_default(MAX_AM_ERI ""Maximum angular momentum for integrals. The definition changed with Libint2 but still single integer. Default fine for production."" 5); option_with_default(FC_SYMBOL ""The type of Fortran name mangling"" 2); option_with_default(BUILD_FPIC ""Compile static libraries with position independent code"" ON); option_with_default(CMAKE_INSTALL_LIBDIR ""Directory to which libraries installed"" lib); option_with_default(PYMOD_INSTALL_LIBDIR ""Location within CMAKE_INSTALL_LIBDIR to which python modules are installed"" /); option_with_default(psi4_INSTALL_CMAKEDIR ""Directory to which psi4 CMake config files installed."" share/cmake/psi4); option_with_default(TargetLAPACK_INSTALL_CMAKEDIR ""Directory to which psi4 CMake config files installed."" share/cmake/TargetLAPACK); option_with_default(TargetHDF5_INSTALL_CMAKEDIR ""Directory to which psi4 CMake config files installed."" share/cmake/TargetHDF5); option_with_default(ENABLE_GENERIC ""Enables mostly static linking of language libraries for shared library"" OFF); option_with_default(CMAKE_INSTALL_MESSAGE ""Specify verbosity of installation messages"" LAZY); option_with_default(psi4_CXX_STANDARD ""Specify C++ standard for core Psi4"" 17); option_with_default(psi4_CXX_STANDARD_Libint2 ""Specify C++ standard for Psi4 files including Libint2 headers. Older (e.g., 2021.4) Intel compilers may need 14"" 17); option_with_default(SIMINT",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:11778,Deployability,install,installed,11778,"es undefined behavior sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=undefined -fno-omit-frame-pointer""); option_with_flags(ENABLE_MSAN ""Enables memory sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=memory -fPIE -pie -fno-omit-frame-pointer""); option_with_default(MAX_AM_ERI ""Maximum angular momentum for integrals. The definition changed with Libint2 but still single integer. Default fine for production."" 5); option_with_default(FC_SYMBOL ""The type of Fortran name mangling"" 2); option_with_default(BUILD_FPIC ""Compile static libraries with position independent code"" ON); option_with_default(CMAKE_INSTALL_LIBDIR ""Directory to which libraries installed"" lib); option_with_default(PYMOD_INSTALL_LIBDIR ""Location within CMAKE_INSTALL_LIBDIR to which python modules are installed"" /); option_with_default(psi4_INSTALL_CMAKEDIR ""Directory to which psi4 CMake config files installed."" share/cmake/psi4); option_with_default(TargetLAPACK_INSTALL_CMAKEDIR ""Directory to which psi4 CMake config files installed."" share/cmake/TargetLAPACK); option_with_default(TargetHDF5_INSTALL_CMAKEDIR ""Directory to which psi4 CMake config files installed."" share/cmake/TargetHDF5); option_with_default(ENABLE_GENERIC ""Enables mostly static linking of language libraries for shared library"" OFF); option_with_default(CMAKE_INSTALL_MESSAGE ""Specify verbosity of installation messages"" LAZY); option_with_default(psi4_CXX_STANDARD ""Specify C++ standard for core Psi4"" 17); option_with_default(psi4_CXX_STANDARD_Libint2 ""Specify C++ standard for Psi4 files including Libint2 headers. Older (e.g., 2021.4) Intel compilers may need 14"" 17); option_with_default(SIMINT_VECTOR ""Vectorization type to use for simint (scalar sse avx avxfma micavx512)"" avx); option_with_default(SPHINX_THEME ""Theme for Sphinx documentation and extensions"" sphinx_psi_theme); option_with_default(SPHINXMAN_STRICT ""Turn warnings into errors for docs target sphinxman"" OFF); option_with_defau",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:11909,Deployability,install,installed,11909,"er""); option_with_flags(ENABLE_MSAN ""Enables memory sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=memory -fPIE -pie -fno-omit-frame-pointer""); option_with_default(MAX_AM_ERI ""Maximum angular momentum for integrals. The definition changed with Libint2 but still single integer. Default fine for production."" 5); option_with_default(FC_SYMBOL ""The type of Fortran name mangling"" 2); option_with_default(BUILD_FPIC ""Compile static libraries with position independent code"" ON); option_with_default(CMAKE_INSTALL_LIBDIR ""Directory to which libraries installed"" lib); option_with_default(PYMOD_INSTALL_LIBDIR ""Location within CMAKE_INSTALL_LIBDIR to which python modules are installed"" /); option_with_default(psi4_INSTALL_CMAKEDIR ""Directory to which psi4 CMake config files installed."" share/cmake/psi4); option_with_default(TargetLAPACK_INSTALL_CMAKEDIR ""Directory to which psi4 CMake config files installed."" share/cmake/TargetLAPACK); option_with_default(TargetHDF5_INSTALL_CMAKEDIR ""Directory to which psi4 CMake config files installed."" share/cmake/TargetHDF5); option_with_default(ENABLE_GENERIC ""Enables mostly static linking of language libraries for shared library"" OFF); option_with_default(CMAKE_INSTALL_MESSAGE ""Specify verbosity of installation messages"" LAZY); option_with_default(psi4_CXX_STANDARD ""Specify C++ standard for core Psi4"" 17); option_with_default(psi4_CXX_STANDARD_Libint2 ""Specify C++ standard for Psi4 files including Libint2 headers. Older (e.g., 2021.4) Intel compilers may need 14"" 17); option_with_default(SIMINT_VECTOR ""Vectorization type to use for simint (scalar sse avx avxfma micavx512)"" avx); option_with_default(SPHINX_THEME ""Theme for Sphinx documentation and extensions"" sphinx_psi_theme); option_with_default(SPHINXMAN_STRICT ""Turn warnings into errors for docs target sphinxman"" OFF); option_with_default(BUILD_Libint2_GENERATOR ""If prebuilt not found, don't build Libint2 from source tarball but instead build and run generator (",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:12124,Deployability,install,installation,12124,"2 but still single integer. Default fine for production."" 5); option_with_default(FC_SYMBOL ""The type of Fortran name mangling"" 2); option_with_default(BUILD_FPIC ""Compile static libraries with position independent code"" ON); option_with_default(CMAKE_INSTALL_LIBDIR ""Directory to which libraries installed"" lib); option_with_default(PYMOD_INSTALL_LIBDIR ""Location within CMAKE_INSTALL_LIBDIR to which python modules are installed"" /); option_with_default(psi4_INSTALL_CMAKEDIR ""Directory to which psi4 CMake config files installed."" share/cmake/psi4); option_with_default(TargetLAPACK_INSTALL_CMAKEDIR ""Directory to which psi4 CMake config files installed."" share/cmake/TargetLAPACK); option_with_default(TargetHDF5_INSTALL_CMAKEDIR ""Directory to which psi4 CMake config files installed."" share/cmake/TargetHDF5); option_with_default(ENABLE_GENERIC ""Enables mostly static linking of language libraries for shared library"" OFF); option_with_default(CMAKE_INSTALL_MESSAGE ""Specify verbosity of installation messages"" LAZY); option_with_default(psi4_CXX_STANDARD ""Specify C++ standard for core Psi4"" 17); option_with_default(psi4_CXX_STANDARD_Libint2 ""Specify C++ standard for Psi4 files including Libint2 headers. Older (e.g., 2021.4) Intel compilers may need 14"" 17); option_with_default(SIMINT_VECTOR ""Vectorization type to use for simint (scalar sse avx avxfma micavx512)"" avx); option_with_default(SPHINX_THEME ""Theme for Sphinx documentation and extensions"" sphinx_psi_theme); option_with_default(SPHINXMAN_STRICT ""Turn warnings into errors for docs target sphinxman"" OFF); option_with_default(BUILD_Libint2_GENERATOR ""If prebuilt not found, don't build Libint2 from source tarball but instead build and run generator (several hours for production library). Edit angular momentum and integrals classes directly in `external/upstream/libint2/CMakeLists.txt` (requires Ninja)."" OFF); option_with_default(psi4_SHGAUSS_ORDERING ""Ordering for shells of solid harmonic Gaussians: standard -- standard o",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:13799,Deployability,install,install,13799,"int2_GENERATOR ""If prebuilt not found, don't build Libint2 from source tarball but instead build and run generator (several hours for production library). Edit angular momentum and integrals classes directly in `external/upstream/libint2/CMakeLists.txt` (requires Ninja)."" OFF); option_with_default(psi4_SHGAUSS_ORDERING ""Ordering for shells of solid harmonic Gaussians: standard -- standard ordering (-l, -l+1 ... l) -or- gaussian -- the Gaussian ordering (0, 1, -1, 2, -2, ... l, -l). Changing this is experimental, expert only, and not a future plan. Internal calculations should be correct and fchk files should be correct, but other exports like Molden and QCSchema.Wavefunction won't be."" gaussian); include(custom_int_orderings). ######################## Process & Validate Options ##########################; include(GNUInstallDirs); include(autocmake_safeguards); include(custom_color_messages). if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT); set(CMAKE_INSTALL_PREFIX ""/usr/local/psi4"" CACHE PATH ""Install path"" FORCE); endif(); message(STATUS ""Psi4 install: ${CMAKE_INSTALL_PREFIX}""). # Python use in psi4 (not incl. external/); # * interpreter: run the versioner in psi4-core. run tests and build docs in psi4; # * headers: Python.h for pybind11 to build against in psi4-core; # * library: not at all. set(Python_ADDITIONAL_VERSIONS 3.12 3.11 3.10 3.9 3.8) # adjust with CMake minimum FindPythonInterp; find_package(Python 3.8 COMPONENTS Interpreter Development NumPy REQUIRED); message(STATUS ""${Cyan}Found Python ${Python_VERSION_MAJOR}.${Python_VERSION_MINOR}${ColourReset}: ${Python_EXECUTABLE} (found version ${Python_VERSION})""). set(STAGED_INSTALL_PREFIX ${CMAKE_BINARY_DIR}/stage); message(STATUS ""Psi4 staging: ${STAGED_INSTALL_PREFIX}""); message(STATUS ""CMAKE_CXX_FLAGS: ${CMAKE_CXX_FLAGS}""); add_subdirectory(external/common); add_subdirectory(external/upstream). # external projects manage their own OpenMP and c++YY flags, so only add to CXX_FLAGS for psi4-core; include(cus",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:18544,Deployability,install,install,18544,"nsums=${ENABLE_Einsums}; -DENABLE_erd=${ENABLE_erd}; -DENABLE_simint=${ENABLE_simint}; -DENABLE_gdma=${ENABLE_gdma}; -DENABLE_PCMSolver=${ENABLE_PCMSolver}; -DENABLE_ddx=${ENABLE_ddx}; -DENABLE_mdi=${ENABLE_mdi}; -DENABLE_BrianQC=${ENABLE_BrianQC}; -DENABLE_OPENMP=${ENABLE_OPENMP}; -DTargetLAPACK_DIR=${TargetLAPACK_DIR}; -DTargetHDF5_DIR=${TargetHDF5_DIR}; -DEigen3_DIR=${Eigen3_DIR}; -Dambit_DIR=${ambit_DIR}; -DCheMPS2_DIR=${CheMPS2_DIR}; -Ddkh_DIR=${dkh_DIR}; -Decpint_DIR=${ecpint_DIR}; -Dlibefp_DIR=${libefp_DIR}; -DEinsums_DIR=${Einsums_DIR}; -Derd_DIR=${erd_DIR}; -Dgau2grid_DIR=${gau2grid_DIR}; -Dgdma_DIR=${gdma_DIR}; #-DLibint_DIR=${Libint_DIR}; -DLibint2_DIR=${Libint2_DIR}; -DPCMSolver_DIR=${PCMSolver_DIR}; -Dmdi_DIR=${mdi_DIR}; -Dpybind11_DIR=${pybind11_DIR}; -Dpylibefp_DIR=${pylibefp_DIR}; -Dsimint_DIR=${simint_DIR}; -DLibxc_DIR=${Libxc_DIR}; -DBrianQC_DIR=${BrianQC_DIR}; -DFortran_ENABLED=${Fortran_ENABLED}; -DLIBC_INTERJECT=${LIBC_INTERJECT}; -DRESTRICT_KEYWORD=${RESTRICT_KEYWORD}; -DFC_SYMBOL=${FC_SYMBOL}; -DOpenMP_LIBRARY_DIRS=${OpenMP_LIBRARY_DIRS}; -DCMAKE_EXPORT_COMPILE_COMMANDS=ON; -DENABLE_CYTHONIZE=${ENABLE_CYTHONIZE}; -Dpsi4_SHGSHELL_ORDERING=${psi4_SHGSHELL_ORDERING}; CMAKE_CACHE_ARGS -DCMAKE_PREFIX_PATH:PATH=${CMAKE_PREFIX_PATH}; -DCMAKE_C_COMPILER_ARG1:STRING=${CMAKE_C_COMPILER_ARG1}; -DCMAKE_CXX_COMPILER_ARG1:STRING=${CMAKE_CXX_COMPILER_ARG1}; -DCMAKE_Fortran_COMPILER_ARG1:STRING=${CMAKE_Fortran_COMPILER_ARG1}; # CMAKE_<lang>_COMPILER_ARG1 vars pass args thru when CMAKE_<lang>_COMPILER set as ""compiler --vital-args""; USES_TERMINAL_BUILD 1; BUILD_ALWAYS 1). add_subdirectory(external/downstream); add_subdirectory(doc); include(ConfigTesting). # <<< Install >>>. install(DIRECTORY ${STAGED_INSTALL_PREFIX}/; DESTINATION ${CMAKE_INSTALL_PREFIX}; USE_SOURCE_PERMISSIONS; PATTERN ""*.pyc"" EXCLUDE). install(DIRECTORY samples; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4; USE_SOURCE_PERMISSIONS; PATTERN ""example_psi4rc_file"" EXCLUDE); ",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:18676,Deployability,install,install,18676,"nsums=${ENABLE_Einsums}; -DENABLE_erd=${ENABLE_erd}; -DENABLE_simint=${ENABLE_simint}; -DENABLE_gdma=${ENABLE_gdma}; -DENABLE_PCMSolver=${ENABLE_PCMSolver}; -DENABLE_ddx=${ENABLE_ddx}; -DENABLE_mdi=${ENABLE_mdi}; -DENABLE_BrianQC=${ENABLE_BrianQC}; -DENABLE_OPENMP=${ENABLE_OPENMP}; -DTargetLAPACK_DIR=${TargetLAPACK_DIR}; -DTargetHDF5_DIR=${TargetHDF5_DIR}; -DEigen3_DIR=${Eigen3_DIR}; -Dambit_DIR=${ambit_DIR}; -DCheMPS2_DIR=${CheMPS2_DIR}; -Ddkh_DIR=${dkh_DIR}; -Decpint_DIR=${ecpint_DIR}; -Dlibefp_DIR=${libefp_DIR}; -DEinsums_DIR=${Einsums_DIR}; -Derd_DIR=${erd_DIR}; -Dgau2grid_DIR=${gau2grid_DIR}; -Dgdma_DIR=${gdma_DIR}; #-DLibint_DIR=${Libint_DIR}; -DLibint2_DIR=${Libint2_DIR}; -DPCMSolver_DIR=${PCMSolver_DIR}; -Dmdi_DIR=${mdi_DIR}; -Dpybind11_DIR=${pybind11_DIR}; -Dpylibefp_DIR=${pylibefp_DIR}; -Dsimint_DIR=${simint_DIR}; -DLibxc_DIR=${Libxc_DIR}; -DBrianQC_DIR=${BrianQC_DIR}; -DFortran_ENABLED=${Fortran_ENABLED}; -DLIBC_INTERJECT=${LIBC_INTERJECT}; -DRESTRICT_KEYWORD=${RESTRICT_KEYWORD}; -DFC_SYMBOL=${FC_SYMBOL}; -DOpenMP_LIBRARY_DIRS=${OpenMP_LIBRARY_DIRS}; -DCMAKE_EXPORT_COMPILE_COMMANDS=ON; -DENABLE_CYTHONIZE=${ENABLE_CYTHONIZE}; -Dpsi4_SHGSHELL_ORDERING=${psi4_SHGSHELL_ORDERING}; CMAKE_CACHE_ARGS -DCMAKE_PREFIX_PATH:PATH=${CMAKE_PREFIX_PATH}; -DCMAKE_C_COMPILER_ARG1:STRING=${CMAKE_C_COMPILER_ARG1}; -DCMAKE_CXX_COMPILER_ARG1:STRING=${CMAKE_CXX_COMPILER_ARG1}; -DCMAKE_Fortran_COMPILER_ARG1:STRING=${CMAKE_Fortran_COMPILER_ARG1}; # CMAKE_<lang>_COMPILER_ARG1 vars pass args thru when CMAKE_<lang>_COMPILER set as ""compiler --vital-args""; USES_TERMINAL_BUILD 1; BUILD_ALWAYS 1). add_subdirectory(external/downstream); add_subdirectory(doc); include(ConfigTesting). # <<< Install >>>. install(DIRECTORY ${STAGED_INSTALL_PREFIX}/; DESTINATION ${CMAKE_INSTALL_PREFIX}; USE_SOURCE_PERMISSIONS; PATTERN ""*.pyc"" EXCLUDE). install(DIRECTORY samples; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4; USE_SOURCE_PERMISSIONS; PATTERN ""example_psi4rc_file"" EXCLUDE); ",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:503,Integrability,interface,interfacelib,503,"############################# Superbuild Project #############################; cmake_minimum_required(VERSION 3.15 FATAL_ERROR); cmake_policy(SET CMP0094 NEW); cmake_policy(SET CMP0075 NEW); # cmake_policy(SET CMP0144 NEW); if (CMAKE_VERSION VERSION_GREATER_EQUAL ""3.24.0""); # Avoid warning about DOWNLOAD_EXTRACT_TIMESTAMP in CMake 3.24:; cmake_policy(SET CMP0135 NEW); endif(); # 3.15: useable FindPython with NumPy component and LOCATION; # 3.8: CXX_STANDARD recognizes C++17; # 3.3: EP_add(DEPENDS interfacelib, CheckFortranCompilerFlag; # 3.2: continue(); # 3.1: CMAKE_CXX_STANDARD, BUILD_ALWAYS. set(CMAKE_BUILD_TYPE ""Release"" CACHE STRING ""Choose the type of build."") # foil Ninja Debug on Windows. project(psi4; LANGUAGES C CXX); set(psi4_URL ""http://www.psicode.org/""); set(psi4_EMAIL ""psi4aiqc+cmake@gmail.com""); set(psi4_LICENSE ""GNU Lesser General Public License, version 3 (LGPL-3.0)""); set(psi4_DESCRIPTION ""Open-Source Quantum Chemistry""). list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake). message(STATUS ""Building using CMake ${CMAKE_VERSION} Generator ${CMAKE_GENERATOR}""). ################ Options: Overview and Not Otherwise Mentioned ###############. # <<< CMake build overview >>>; #; # >>> ls; # external/ COPYING psi4/ tests/ ...; # >>> cmake -S. -Bobjdir -DCMAKE_INSTALL_PREFIX=/path/to/install-psi4 ...; # ...; # -- Generating done; # -- Build files have been written to: /current/dir/objdir; # >>> cmake --build objdir --target install -j`getconf _NPROCESSORS_ONLN`. # <<< Required build dependencies that Psi4 can't build itself >>>; #; # - CMake (e.g., `conda install cmake`); # - C++ and C compilers (C++17 compliant); # - BLAS/LAPACK (also runtime; e.g., `conda install mkl-devel`); # - Python (also runtime; interpreter and headers; e.g., `conda install python`); # - NumPy (also runtime; avoidable at buildtime if gau2grid pre-built; e.g., `conda install numpy`); # - networkx >=2.4 (runtime only; e.g., `conda install networkx`); # - pint >=0.10 (runt",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:1022,Integrability,message,message,1022,"##############; cmake_minimum_required(VERSION 3.15 FATAL_ERROR); cmake_policy(SET CMP0094 NEW); cmake_policy(SET CMP0075 NEW); # cmake_policy(SET CMP0144 NEW); if (CMAKE_VERSION VERSION_GREATER_EQUAL ""3.24.0""); # Avoid warning about DOWNLOAD_EXTRACT_TIMESTAMP in CMake 3.24:; cmake_policy(SET CMP0135 NEW); endif(); # 3.15: useable FindPython with NumPy component and LOCATION; # 3.8: CXX_STANDARD recognizes C++17; # 3.3: EP_add(DEPENDS interfacelib, CheckFortranCompilerFlag; # 3.2: continue(); # 3.1: CMAKE_CXX_STANDARD, BUILD_ALWAYS. set(CMAKE_BUILD_TYPE ""Release"" CACHE STRING ""Choose the type of build."") # foil Ninja Debug on Windows. project(psi4; LANGUAGES C CXX); set(psi4_URL ""http://www.psicode.org/""); set(psi4_EMAIL ""psi4aiqc+cmake@gmail.com""); set(psi4_LICENSE ""GNU Lesser General Public License, version 3 (LGPL-3.0)""); set(psi4_DESCRIPTION ""Open-Source Quantum Chemistry""). list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake). message(STATUS ""Building using CMake ${CMAKE_VERSION} Generator ${CMAKE_GENERATOR}""). ################ Options: Overview and Not Otherwise Mentioned ###############. # <<< CMake build overview >>>; #; # >>> ls; # external/ COPYING psi4/ tests/ ...; # >>> cmake -S. -Bobjdir -DCMAKE_INSTALL_PREFIX=/path/to/install-psi4 ...; # ...; # -- Generating done; # -- Build files have been written to: /current/dir/objdir; # >>> cmake --build objdir --target install -j`getconf _NPROCESSORS_ONLN`. # <<< Required build dependencies that Psi4 can't build itself >>>; #; # - CMake (e.g., `conda install cmake`); # - C++ and C compilers (C++17 compliant); # - BLAS/LAPACK (also runtime; e.g., `conda install mkl-devel`); # - Python (also runtime; interpreter and headers; e.g., `conda install python`); # - NumPy (also runtime; avoidable at buildtime if gau2grid pre-built; e.g., `conda install numpy`); # - networkx >=2.4 (runtime only; e.g., `conda install networkx`); # - pint >=0.10 (runtime only; e.g., `conda install pint -c conda-forge`); # - pydan",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:1531,Integrability,depend,dependencies,1531,"ontinue(); # 3.1: CMAKE_CXX_STANDARD, BUILD_ALWAYS. set(CMAKE_BUILD_TYPE ""Release"" CACHE STRING ""Choose the type of build."") # foil Ninja Debug on Windows. project(psi4; LANGUAGES C CXX); set(psi4_URL ""http://www.psicode.org/""); set(psi4_EMAIL ""psi4aiqc+cmake@gmail.com""); set(psi4_LICENSE ""GNU Lesser General Public License, version 3 (LGPL-3.0)""); set(psi4_DESCRIPTION ""Open-Source Quantum Chemistry""). list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake). message(STATUS ""Building using CMake ${CMAKE_VERSION} Generator ${CMAKE_GENERATOR}""). ################ Options: Overview and Not Otherwise Mentioned ###############. # <<< CMake build overview >>>; #; # >>> ls; # external/ COPYING psi4/ tests/ ...; # >>> cmake -S. -Bobjdir -DCMAKE_INSTALL_PREFIX=/path/to/install-psi4 ...; # ...; # -- Generating done; # -- Build files have been written to: /current/dir/objdir; # >>> cmake --build objdir --target install -j`getconf _NPROCESSORS_ONLN`. # <<< Required build dependencies that Psi4 can't build itself >>>; #; # - CMake (e.g., `conda install cmake`); # - C++ and C compilers (C++17 compliant); # - BLAS/LAPACK (also runtime; e.g., `conda install mkl-devel`); # - Python (also runtime; interpreter and headers; e.g., `conda install python`); # - NumPy (also runtime; avoidable at buildtime if gau2grid pre-built; e.g., `conda install numpy`); # - networkx >=2.4 (runtime only; e.g., `conda install networkx`); # - pint >=0.10 (runtime only; e.g., `conda install pint -c conda-forge`); # - pydantic >=1.0 (runtime only; e.g., `conda install pydantic -c conda-forge`); # - msgpack-python (runtime only; e.g., `conda install msgpack-python`); # - Eigen (for Libint2; e.g., `conda install eigen`); # - Boost (header-only libs for Libint2; e.g., `conda install boost-cpp`); # - SciPy (runtime only; avoidable through keyword setting; e.g., `conda install scipy`); # - py-cpuinfo (runtime only; e.g., `conda install py-cpuinfo`); # - psutil (runtime only; e.g., `conda install psutil`). #",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:2983,Integrability,depend,dependencies,2983,"`conda install pint -c conda-forge`); # - pydantic >=1.0 (runtime only; e.g., `conda install pydantic -c conda-forge`); # - msgpack-python (runtime only; e.g., `conda install msgpack-python`); # - Eigen (for Libint2; e.g., `conda install eigen`); # - Boost (header-only libs for Libint2; e.g., `conda install boost-cpp`); # - SciPy (runtime only; avoidable through keyword setting; e.g., `conda install scipy`); # - py-cpuinfo (runtime only; e.g., `conda install py-cpuinfo`); # - psutil (runtime only; e.g., `conda install psutil`). # These three ""### Options ###"" sections contain useful CMake variables for build configuration. # <<< Compilers and flags >>>; #; # - CMAKE_C_COMPILER ""C compiler""; # - CMAKE_C_FLAGS ""Additional C flags""; # - CMAKE_CXX_COMPILER ""C++ compiler""; # - CMAKE_CXX_FLAGS ""Additional C++ flags""; # - CMAKE_Fortran_COMPILER ""Fortran compiler (required for some add-ons)""; # - CMAKE_Fortran_FLAGS ""Additional Fortran flags"". # <<< Detecting dependencies and add-ons >>>; #; # - Python_EXECUTABLE ""Python interpreter to use (e.g., /path/to/bin/python3.7)""; # - Python_LIBRARY ""Python library that goes with the interpreter (e.g., /path/to/lib/python3.7.so)""; # - Python_INCLUDE_DIR ""Path to the python include files (e.g., /path/to/include/python3.7)""; # - SPHINX_ROOT ""Root directory for Sphinx: 'bin/sphinx-build' (or similar) should be in this dir.""; #; # For any ${AddOn} of: ambit, CheMPS2, dkh, ecpint, libefp, Einsums, erd, gau2grid, gdma, Libint2, PCMSolver, pybind11, pylibefp,; # qcelemental, qcengine, optking, simint, Libxc; # - CMAKE_PREFIX_PATH ""Set to list of root directories to look for externally built add-ons and dependencies; # (e.g., /path/to/install-libint;/path/to/install-gdma where exists /path/to/install-libint/lib/libderiv.a)""; # - ${AddOn}_DIR ""Set to directory containing ${AddOn}Config.cmake file to facilitate detection of external build""; # - CMAKE_DISABLE_FIND_PACKAGE_${AddON} ""Set to ON to force internal build""; # - CMAKE_INSIST_FIND_PACK",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:3674,Integrability,depend,dependencies,3674,"sutil`). # These three ""### Options ###"" sections contain useful CMake variables for build configuration. # <<< Compilers and flags >>>; #; # - CMAKE_C_COMPILER ""C compiler""; # - CMAKE_C_FLAGS ""Additional C flags""; # - CMAKE_CXX_COMPILER ""C++ compiler""; # - CMAKE_CXX_FLAGS ""Additional C++ flags""; # - CMAKE_Fortran_COMPILER ""Fortran compiler (required for some add-ons)""; # - CMAKE_Fortran_FLAGS ""Additional Fortran flags"". # <<< Detecting dependencies and add-ons >>>; #; # - Python_EXECUTABLE ""Python interpreter to use (e.g., /path/to/bin/python3.7)""; # - Python_LIBRARY ""Python library that goes with the interpreter (e.g., /path/to/lib/python3.7.so)""; # - Python_INCLUDE_DIR ""Path to the python include files (e.g., /path/to/include/python3.7)""; # - SPHINX_ROOT ""Root directory for Sphinx: 'bin/sphinx-build' (or similar) should be in this dir.""; #; # For any ${AddOn} of: ambit, CheMPS2, dkh, ecpint, libefp, Einsums, erd, gau2grid, gdma, Libint2, PCMSolver, pybind11, pylibefp,; # qcelemental, qcengine, optking, simint, Libxc; # - CMAKE_PREFIX_PATH ""Set to list of root directories to look for externally built add-ons and dependencies; # (e.g., /path/to/install-libint;/path/to/install-gdma where exists /path/to/install-libint/lib/libderiv.a)""; # - ${AddOn}_DIR ""Set to directory containing ${AddOn}Config.cmake file to facilitate detection of external build""; # - CMAKE_DISABLE_FIND_PACKAGE_${AddON} ""Set to ON to force internal build""; # - CMAKE_INSIST_FIND_PACKAGE_${AddON} ""Set to ON to force external detect"". # <<< Detecting BLAS/LAPACK >>>; #; # - ENV(MATH_ROOT) ""Root directory where BLAS/LAPACK libraries should be detected (e.g., ${MATH_ROOT}/lib/libblas.so)""; # - BLAS_TYPE ""Target BLAS distribution for math detection; # (default: search order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_TYPE ""Target LAPACK distribution for math detection; # (default: search order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE ",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:7623,Integrability,interface,interface,7623,"_adcc ""Enables adcc for algebraic-diagrammatic construction methods (requires libtensorlight; can also be added at runtime)"" OFF); option(ENABLE_ddx ""Enables ddx for domain-decomposition contiuum solvation models (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_dkh ""Enables DKH integrals (requires Fortran)"" OFF); option(ENABLE_ecpint ""Enables libecpint for effective core potentials (ECP)"" OFF); option(ENABLE_libefp ""Enables LIBEFP and PylibEFP for fragments"" OFF); option(ENABLE_Einsums ""Enables the Einsums tensor library"" OFF); option(ENABLE_erd ""Enables use of ERD instead of Libint (requires Fortran)"" OFF); option(ENABLE_simint ""Enables use of SIMINT two-electron integral library"" OFF); option(ENABLE_gdma ""Enables Stone's GDMA multipole code (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_PCMSolver ""Enables PCMSolver library (requires Fortran)"" OFF); option(ENABLE_snsmp2 ""Enables SNSMP2 plugin (can also be added at runtime)"" OFF); option(ENABLE_v2rdm_casscf ""Enables V2RDM_CASSCF plugin (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_psi4fockci ""Enables Psi4FockCI plugin (can also be added at runtime)"" OFF); option(ENABLE_cct3 ""Enables cct3 plugin (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_gpu_dfcc ""Enables GPU_DFCC plugin for gpu-accelerated df-cc (requires CUDA; can also be added at runtime)"" OFF); option(ENABLE_mdi ""Enables MolSSI driver interface"" OFF); option(ENABLE_BrianQC ""Enables the BrianQC GPU module (requires CUDA; requires separate installation and licensing of the BrianQC module)"" OFF); option(ENABLE_Libint1t ""Enables Libint1 in special _t variety"" OFF); # These options are relevant to pasture, expert only; option(ENABLE_ccsort ""Enables ccsort plugin installed from psi4pasture"" OFF); option(ENABLE_transqt2 ""Enables transqt2 plugin installed from psi4pasture"" OFF); option(psi4_SKIP_ENABLE_Fortran ""Suppress enabling Fortran language even when Fortran addons enabled.",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:8343,Integrability,message,message,8343,"lugin (can also be added at runtime)"" OFF); option(ENABLE_cct3 ""Enables cct3 plugin (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_gpu_dfcc ""Enables GPU_DFCC plugin for gpu-accelerated df-cc (requires CUDA; can also be added at runtime)"" OFF); option(ENABLE_mdi ""Enables MolSSI driver interface"" OFF); option(ENABLE_BrianQC ""Enables the BrianQC GPU module (requires CUDA; requires separate installation and licensing of the BrianQC module)"" OFF); option(ENABLE_Libint1t ""Enables Libint1 in special _t variety"" OFF); # These options are relevant to pasture, expert only; option(ENABLE_ccsort ""Enables ccsort plugin installed from psi4pasture"" OFF); option(ENABLE_transqt2 ""Enables transqt2 plugin installed from psi4pasture"" OFF); option(psi4_SKIP_ENABLE_Fortran ""Suppress enabling Fortran language even when Fortran addons enabled. Use when only linking pre-built, not compiling addon code."" OFF). # Append modules added to pasture as needed; if(ENABLE_ccsort OR ENABLE_transqt2); set(ENABLE_pasture ON); message(STATUS ""Enabling pasture plugins""); endif(). if(ENABLE_gdma OR ENABLE_dkh OR ENABLE_erd OR ENABLE_PCMSolver); if(psi4_SKIP_ENABLE_Fortran); message(STATUS ""NOT Enabling Fortran""); else(); enable_language(Fortran); set(Fortran_ENABLED ON) # communicate required languages with psi4-core; message(STATUS ""Enabling Fortran""); endif(); endif(). if(ENABLE_erd); message(FATAL_ERROR ""The Psi4/ERD interface is broken, probably since spring 2017. It's toast (comment this line to try), but disabling for now.""); message(WARNING ""ERD will build, link, and run in Psi4 just fine. However, it has not been hooked into Psi4 in all roles, notably gradients, LRC DFT energies, and ESP. So upon activating through ``set integral_package erd``, known failures will be caught and halted, but perhaps other types not tested and identified will give *wrong* answers. Consider this your warning.""); endif(). ############################ Options: Build How? ##########################",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:8491,Integrability,message,message,8491,"; can also be added at runtime)"" OFF); option(ENABLE_mdi ""Enables MolSSI driver interface"" OFF); option(ENABLE_BrianQC ""Enables the BrianQC GPU module (requires CUDA; requires separate installation and licensing of the BrianQC module)"" OFF); option(ENABLE_Libint1t ""Enables Libint1 in special _t variety"" OFF); # These options are relevant to pasture, expert only; option(ENABLE_ccsort ""Enables ccsort plugin installed from psi4pasture"" OFF); option(ENABLE_transqt2 ""Enables transqt2 plugin installed from psi4pasture"" OFF); option(psi4_SKIP_ENABLE_Fortran ""Suppress enabling Fortran language even when Fortran addons enabled. Use when only linking pre-built, not compiling addon code."" OFF). # Append modules added to pasture as needed; if(ENABLE_ccsort OR ENABLE_transqt2); set(ENABLE_pasture ON); message(STATUS ""Enabling pasture plugins""); endif(). if(ENABLE_gdma OR ENABLE_dkh OR ENABLE_erd OR ENABLE_PCMSolver); if(psi4_SKIP_ENABLE_Fortran); message(STATUS ""NOT Enabling Fortran""); else(); enable_language(Fortran); set(Fortran_ENABLED ON) # communicate required languages with psi4-core; message(STATUS ""Enabling Fortran""); endif(); endif(). if(ENABLE_erd); message(FATAL_ERROR ""The Psi4/ERD interface is broken, probably since spring 2017. It's toast (comment this line to try), but disabling for now.""); message(WARNING ""ERD will build, link, and run in Psi4 just fine. However, it has not been hooked into Psi4 in all roles, notably gradients, LRC DFT energies, and ESP. So upon activating through ``set integral_package erd``, known failures will be caught and halted, but perhaps other types not tested and identified will give *wrong* answers. Consider this your warning.""); endif(). ############################ Options: Build How? #############################; include(psi4OptionsTools); option_with_print(BUILD_SHARED_LIBS ""Build internally built Psi4 add-on libraries as shared, not static"" OFF); option_with_default(CMAKE_BUILD_TYPE ""Build type (Release or Debug)"" Release); includ",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:8638,Integrability,message,message,8638,"; can also be added at runtime)"" OFF); option(ENABLE_mdi ""Enables MolSSI driver interface"" OFF); option(ENABLE_BrianQC ""Enables the BrianQC GPU module (requires CUDA; requires separate installation and licensing of the BrianQC module)"" OFF); option(ENABLE_Libint1t ""Enables Libint1 in special _t variety"" OFF); # These options are relevant to pasture, expert only; option(ENABLE_ccsort ""Enables ccsort plugin installed from psi4pasture"" OFF); option(ENABLE_transqt2 ""Enables transqt2 plugin installed from psi4pasture"" OFF); option(psi4_SKIP_ENABLE_Fortran ""Suppress enabling Fortran language even when Fortran addons enabled. Use when only linking pre-built, not compiling addon code."" OFF). # Append modules added to pasture as needed; if(ENABLE_ccsort OR ENABLE_transqt2); set(ENABLE_pasture ON); message(STATUS ""Enabling pasture plugins""); endif(). if(ENABLE_gdma OR ENABLE_dkh OR ENABLE_erd OR ENABLE_PCMSolver); if(psi4_SKIP_ENABLE_Fortran); message(STATUS ""NOT Enabling Fortran""); else(); enable_language(Fortran); set(Fortran_ENABLED ON) # communicate required languages with psi4-core; message(STATUS ""Enabling Fortran""); endif(); endif(). if(ENABLE_erd); message(FATAL_ERROR ""The Psi4/ERD interface is broken, probably since spring 2017. It's toast (comment this line to try), but disabling for now.""); message(WARNING ""ERD will build, link, and run in Psi4 just fine. However, it has not been hooked into Psi4 in all roles, notably gradients, LRC DFT energies, and ESP. So upon activating through ``set integral_package erd``, known failures will be caught and halted, but perhaps other types not tested and identified will give *wrong* answers. Consider this your warning.""); endif(). ############################ Options: Build How? #############################; include(psi4OptionsTools); option_with_print(BUILD_SHARED_LIBS ""Build internally built Psi4 add-on libraries as shared, not static"" OFF); option_with_default(CMAKE_BUILD_TYPE ""Build type (Release or Debug)"" Release); includ",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:8708,Integrability,message,message,8708," and licensing of the BrianQC module)"" OFF); option(ENABLE_Libint1t ""Enables Libint1 in special _t variety"" OFF); # These options are relevant to pasture, expert only; option(ENABLE_ccsort ""Enables ccsort plugin installed from psi4pasture"" OFF); option(ENABLE_transqt2 ""Enables transqt2 plugin installed from psi4pasture"" OFF); option(psi4_SKIP_ENABLE_Fortran ""Suppress enabling Fortran language even when Fortran addons enabled. Use when only linking pre-built, not compiling addon code."" OFF). # Append modules added to pasture as needed; if(ENABLE_ccsort OR ENABLE_transqt2); set(ENABLE_pasture ON); message(STATUS ""Enabling pasture plugins""); endif(). if(ENABLE_gdma OR ENABLE_dkh OR ENABLE_erd OR ENABLE_PCMSolver); if(psi4_SKIP_ENABLE_Fortran); message(STATUS ""NOT Enabling Fortran""); else(); enable_language(Fortran); set(Fortran_ENABLED ON) # communicate required languages with psi4-core; message(STATUS ""Enabling Fortran""); endif(); endif(). if(ENABLE_erd); message(FATAL_ERROR ""The Psi4/ERD interface is broken, probably since spring 2017. It's toast (comment this line to try), but disabling for now.""); message(WARNING ""ERD will build, link, and run in Psi4 just fine. However, it has not been hooked into Psi4 in all roles, notably gradients, LRC DFT energies, and ESP. So upon activating through ``set integral_package erd``, known failures will be caught and halted, but perhaps other types not tested and identified will give *wrong* answers. Consider this your warning.""); endif(). ############################ Options: Build How? #############################; include(psi4OptionsTools); option_with_print(BUILD_SHARED_LIBS ""Build internally built Psi4 add-on libraries as shared, not static"" OFF); option_with_default(CMAKE_BUILD_TYPE ""Build type (Release or Debug)"" Release); include(xhost) # defines: option(ENABLE_XHOST ""Enable processor-specific optimization"" ON); # below are uncommon to adjust; option_with_print(ENABLE_OPENMP ""Enables OpenMP parallelization"" ON); option_wit",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:8742,Integrability,interface,interface,8742," and licensing of the BrianQC module)"" OFF); option(ENABLE_Libint1t ""Enables Libint1 in special _t variety"" OFF); # These options are relevant to pasture, expert only; option(ENABLE_ccsort ""Enables ccsort plugin installed from psi4pasture"" OFF); option(ENABLE_transqt2 ""Enables transqt2 plugin installed from psi4pasture"" OFF); option(psi4_SKIP_ENABLE_Fortran ""Suppress enabling Fortran language even when Fortran addons enabled. Use when only linking pre-built, not compiling addon code."" OFF). # Append modules added to pasture as needed; if(ENABLE_ccsort OR ENABLE_transqt2); set(ENABLE_pasture ON); message(STATUS ""Enabling pasture plugins""); endif(). if(ENABLE_gdma OR ENABLE_dkh OR ENABLE_erd OR ENABLE_PCMSolver); if(psi4_SKIP_ENABLE_Fortran); message(STATUS ""NOT Enabling Fortran""); else(); enable_language(Fortran); set(Fortran_ENABLED ON) # communicate required languages with psi4-core; message(STATUS ""Enabling Fortran""); endif(); endif(). if(ENABLE_erd); message(FATAL_ERROR ""The Psi4/ERD interface is broken, probably since spring 2017. It's toast (comment this line to try), but disabling for now.""); message(WARNING ""ERD will build, link, and run in Psi4 just fine. However, it has not been hooked into Psi4 in all roles, notably gradients, LRC DFT energies, and ESP. So upon activating through ``set integral_package erd``, known failures will be caught and halted, but perhaps other types not tested and identified will give *wrong* answers. Consider this your warning.""); endif(). ############################ Options: Build How? #############################; include(psi4OptionsTools); option_with_print(BUILD_SHARED_LIBS ""Build internally built Psi4 add-on libraries as shared, not static"" OFF); option_with_default(CMAKE_BUILD_TYPE ""Build type (Release or Debug)"" Release); include(xhost) # defines: option(ENABLE_XHOST ""Enable processor-specific optimization"" ON); # below are uncommon to adjust; option_with_print(ENABLE_OPENMP ""Enables OpenMP parallelization"" ON); option_wit",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:8856,Integrability,message,message,8856,"pasture, expert only; option(ENABLE_ccsort ""Enables ccsort plugin installed from psi4pasture"" OFF); option(ENABLE_transqt2 ""Enables transqt2 plugin installed from psi4pasture"" OFF); option(psi4_SKIP_ENABLE_Fortran ""Suppress enabling Fortran language even when Fortran addons enabled. Use when only linking pre-built, not compiling addon code."" OFF). # Append modules added to pasture as needed; if(ENABLE_ccsort OR ENABLE_transqt2); set(ENABLE_pasture ON); message(STATUS ""Enabling pasture plugins""); endif(). if(ENABLE_gdma OR ENABLE_dkh OR ENABLE_erd OR ENABLE_PCMSolver); if(psi4_SKIP_ENABLE_Fortran); message(STATUS ""NOT Enabling Fortran""); else(); enable_language(Fortran); set(Fortran_ENABLED ON) # communicate required languages with psi4-core; message(STATUS ""Enabling Fortran""); endif(); endif(). if(ENABLE_erd); message(FATAL_ERROR ""The Psi4/ERD interface is broken, probably since spring 2017. It's toast (comment this line to try), but disabling for now.""); message(WARNING ""ERD will build, link, and run in Psi4 just fine. However, it has not been hooked into Psi4 in all roles, notably gradients, LRC DFT energies, and ESP. So upon activating through ``set integral_package erd``, known failures will be caught and halted, but perhaps other types not tested and identified will give *wrong* answers. Consider this your warning.""); endif(). ############################ Options: Build How? #############################; include(psi4OptionsTools); option_with_print(BUILD_SHARED_LIBS ""Build internally built Psi4 add-on libraries as shared, not static"" OFF); option_with_default(CMAKE_BUILD_TYPE ""Build type (Release or Debug)"" Release); include(xhost) # defines: option(ENABLE_XHOST ""Enable processor-specific optimization"" ON); # below are uncommon to adjust; option_with_print(ENABLE_OPENMP ""Enables OpenMP parallelization"" ON); option_with_print(ENABLE_AUTO_BLAS ""Enables CMake to auto-detect BLAS"" ON); option_with_print(ENABLE_AUTO_LAPACK ""Enables CMake to auto-detect LAPACK"" ON); ",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:12137,Integrability,message,messages,12137,"2 but still single integer. Default fine for production."" 5); option_with_default(FC_SYMBOL ""The type of Fortran name mangling"" 2); option_with_default(BUILD_FPIC ""Compile static libraries with position independent code"" ON); option_with_default(CMAKE_INSTALL_LIBDIR ""Directory to which libraries installed"" lib); option_with_default(PYMOD_INSTALL_LIBDIR ""Location within CMAKE_INSTALL_LIBDIR to which python modules are installed"" /); option_with_default(psi4_INSTALL_CMAKEDIR ""Directory to which psi4 CMake config files installed."" share/cmake/psi4); option_with_default(TargetLAPACK_INSTALL_CMAKEDIR ""Directory to which psi4 CMake config files installed."" share/cmake/TargetLAPACK); option_with_default(TargetHDF5_INSTALL_CMAKEDIR ""Directory to which psi4 CMake config files installed."" share/cmake/TargetHDF5); option_with_default(ENABLE_GENERIC ""Enables mostly static linking of language libraries for shared library"" OFF); option_with_default(CMAKE_INSTALL_MESSAGE ""Specify verbosity of installation messages"" LAZY); option_with_default(psi4_CXX_STANDARD ""Specify C++ standard for core Psi4"" 17); option_with_default(psi4_CXX_STANDARD_Libint2 ""Specify C++ standard for Psi4 files including Libint2 headers. Older (e.g., 2021.4) Intel compilers may need 14"" 17); option_with_default(SIMINT_VECTOR ""Vectorization type to use for simint (scalar sse avx avxfma micavx512)"" avx); option_with_default(SPHINX_THEME ""Theme for Sphinx documentation and extensions"" sphinx_psi_theme); option_with_default(SPHINXMAN_STRICT ""Turn warnings into errors for docs target sphinxman"" OFF); option_with_default(BUILD_Libint2_GENERATOR ""If prebuilt not found, don't build Libint2 from source tarball but instead build and run generator (several hours for production library). Edit angular momentum and integrals classes directly in `external/upstream/libint2/CMakeLists.txt` (requires Ninja)."" OFF); option_with_default(psi4_SHGAUSS_ORDERING ""Ordering for shells of solid harmonic Gaussians: standard -- standard o",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:13778,Integrability,message,message,13778,"int2_GENERATOR ""If prebuilt not found, don't build Libint2 from source tarball but instead build and run generator (several hours for production library). Edit angular momentum and integrals classes directly in `external/upstream/libint2/CMakeLists.txt` (requires Ninja)."" OFF); option_with_default(psi4_SHGAUSS_ORDERING ""Ordering for shells of solid harmonic Gaussians: standard -- standard ordering (-l, -l+1 ... l) -or- gaussian -- the Gaussian ordering (0, 1, -1, 2, -2, ... l, -l). Changing this is experimental, expert only, and not a future plan. Internal calculations should be correct and fchk files should be correct, but other exports like Molden and QCSchema.Wavefunction won't be."" gaussian); include(custom_int_orderings). ######################## Process & Validate Options ##########################; include(GNUInstallDirs); include(autocmake_safeguards); include(custom_color_messages). if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT); set(CMAKE_INSTALL_PREFIX ""/usr/local/psi4"" CACHE PATH ""Install path"" FORCE); endif(); message(STATUS ""Psi4 install: ${CMAKE_INSTALL_PREFIX}""). # Python use in psi4 (not incl. external/); # * interpreter: run the versioner in psi4-core. run tests and build docs in psi4; # * headers: Python.h for pybind11 to build against in psi4-core; # * library: not at all. set(Python_ADDITIONAL_VERSIONS 3.12 3.11 3.10 3.9 3.8) # adjust with CMake minimum FindPythonInterp; find_package(Python 3.8 COMPONENTS Interpreter Development NumPy REQUIRED); message(STATUS ""${Cyan}Found Python ${Python_VERSION_MAJOR}.${Python_VERSION_MINOR}${ColourReset}: ${Python_EXECUTABLE} (found version ${Python_VERSION})""). set(STAGED_INSTALL_PREFIX ${CMAKE_BINARY_DIR}/stage); message(STATUS ""Psi4 staging: ${STAGED_INSTALL_PREFIX}""); message(STATUS ""CMAKE_CXX_FLAGS: ${CMAKE_CXX_FLAGS}""); add_subdirectory(external/common); add_subdirectory(external/upstream). # external projects manage their own OpenMP and c++YY flags, so only add to CXX_FLAGS for psi4-core; include(cus",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:14230,Integrability,message,message,14230," this is experimental, expert only, and not a future plan. Internal calculations should be correct and fchk files should be correct, but other exports like Molden and QCSchema.Wavefunction won't be."" gaussian); include(custom_int_orderings). ######################## Process & Validate Options ##########################; include(GNUInstallDirs); include(autocmake_safeguards); include(custom_color_messages). if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT); set(CMAKE_INSTALL_PREFIX ""/usr/local/psi4"" CACHE PATH ""Install path"" FORCE); endif(); message(STATUS ""Psi4 install: ${CMAKE_INSTALL_PREFIX}""). # Python use in psi4 (not incl. external/); # * interpreter: run the versioner in psi4-core. run tests and build docs in psi4; # * headers: Python.h for pybind11 to build against in psi4-core; # * library: not at all. set(Python_ADDITIONAL_VERSIONS 3.12 3.11 3.10 3.9 3.8) # adjust with CMake minimum FindPythonInterp; find_package(Python 3.8 COMPONENTS Interpreter Development NumPy REQUIRED); message(STATUS ""${Cyan}Found Python ${Python_VERSION_MAJOR}.${Python_VERSION_MINOR}${ColourReset}: ${Python_EXECUTABLE} (found version ${Python_VERSION})""). set(STAGED_INSTALL_PREFIX ${CMAKE_BINARY_DIR}/stage); message(STATUS ""Psi4 staging: ${STAGED_INSTALL_PREFIX}""); message(STATUS ""CMAKE_CXX_FLAGS: ${CMAKE_CXX_FLAGS}""); add_subdirectory(external/common); add_subdirectory(external/upstream). # external projects manage their own OpenMP and c++YY flags, so only add to CXX_FLAGS for psi4-core; include(custom_cxxstandard); include(custom_static_library). ################################ Main Project ################################; include(ExternalProject); ExternalProject_Add(psi4-core; DEPENDS lapack_external; hdf5_external; ambit_external; bse_external; chemps2_external; cppe_external; dkh_external; ecpint_external; libefp_external; einsums_external; erd_external; gau2grid_external; gdma_external; libint_external; libint2_external; pcmsolver_external; ddx_external; pybind11_external; pyl",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:14441,Integrability,message,message,14441,"ss & Validate Options ##########################; include(GNUInstallDirs); include(autocmake_safeguards); include(custom_color_messages). if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT); set(CMAKE_INSTALL_PREFIX ""/usr/local/psi4"" CACHE PATH ""Install path"" FORCE); endif(); message(STATUS ""Psi4 install: ${CMAKE_INSTALL_PREFIX}""). # Python use in psi4 (not incl. external/); # * interpreter: run the versioner in psi4-core. run tests and build docs in psi4; # * headers: Python.h for pybind11 to build against in psi4-core; # * library: not at all. set(Python_ADDITIONAL_VERSIONS 3.12 3.11 3.10 3.9 3.8) # adjust with CMake minimum FindPythonInterp; find_package(Python 3.8 COMPONENTS Interpreter Development NumPy REQUIRED); message(STATUS ""${Cyan}Found Python ${Python_VERSION_MAJOR}.${Python_VERSION_MINOR}${ColourReset}: ${Python_EXECUTABLE} (found version ${Python_VERSION})""). set(STAGED_INSTALL_PREFIX ${CMAKE_BINARY_DIR}/stage); message(STATUS ""Psi4 staging: ${STAGED_INSTALL_PREFIX}""); message(STATUS ""CMAKE_CXX_FLAGS: ${CMAKE_CXX_FLAGS}""); add_subdirectory(external/common); add_subdirectory(external/upstream). # external projects manage their own OpenMP and c++YY flags, so only add to CXX_FLAGS for psi4-core; include(custom_cxxstandard); include(custom_static_library). ################################ Main Project ################################; include(ExternalProject); ExternalProject_Add(psi4-core; DEPENDS lapack_external; hdf5_external; ambit_external; bse_external; chemps2_external; cppe_external; dkh_external; ecpint_external; libefp_external; einsums_external; erd_external; gau2grid_external; gdma_external; libint_external; libint2_external; pcmsolver_external; ddx_external; pybind11_external; pylibefp_external; qcelemental_external; qcengine_external; optking_external; simint_external; libxc_external; mdi_external; brianqc_external; SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/psi4; CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=${STAGED_INSTALL_PREFIX}; -DCMAKE_BUILD_TYPE=${CMAKE_B",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:14499,Integrability,message,message,14499,"ss & Validate Options ##########################; include(GNUInstallDirs); include(autocmake_safeguards); include(custom_color_messages). if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT); set(CMAKE_INSTALL_PREFIX ""/usr/local/psi4"" CACHE PATH ""Install path"" FORCE); endif(); message(STATUS ""Psi4 install: ${CMAKE_INSTALL_PREFIX}""). # Python use in psi4 (not incl. external/); # * interpreter: run the versioner in psi4-core. run tests and build docs in psi4; # * headers: Python.h for pybind11 to build against in psi4-core; # * library: not at all. set(Python_ADDITIONAL_VERSIONS 3.12 3.11 3.10 3.9 3.8) # adjust with CMake minimum FindPythonInterp; find_package(Python 3.8 COMPONENTS Interpreter Development NumPy REQUIRED); message(STATUS ""${Cyan}Found Python ${Python_VERSION_MAJOR}.${Python_VERSION_MINOR}${ColourReset}: ${Python_EXECUTABLE} (found version ${Python_VERSION})""). set(STAGED_INSTALL_PREFIX ${CMAKE_BINARY_DIR}/stage); message(STATUS ""Psi4 staging: ${STAGED_INSTALL_PREFIX}""); message(STATUS ""CMAKE_CXX_FLAGS: ${CMAKE_CXX_FLAGS}""); add_subdirectory(external/common); add_subdirectory(external/upstream). # external projects manage their own OpenMP and c++YY flags, so only add to CXX_FLAGS for psi4-core; include(custom_cxxstandard); include(custom_static_library). ################################ Main Project ################################; include(ExternalProject); ExternalProject_Add(psi4-core; DEPENDS lapack_external; hdf5_external; ambit_external; bse_external; chemps2_external; cppe_external; dkh_external; ecpint_external; libefp_external; einsums_external; erd_external; gau2grid_external; gdma_external; libint_external; libint2_external; pcmsolver_external; ddx_external; pybind11_external; pylibefp_external; qcelemental_external; qcengine_external; optking_external; simint_external; libxc_external; mdi_external; brianqc_external; SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/psi4; CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=${STAGED_INSTALL_PREFIX}; -DCMAKE_BUILD_TYPE=${CMAKE_B",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:2613,Modifiability,variab,variables,2613,"`conda install cmake`); # - C++ and C compilers (C++17 compliant); # - BLAS/LAPACK (also runtime; e.g., `conda install mkl-devel`); # - Python (also runtime; interpreter and headers; e.g., `conda install python`); # - NumPy (also runtime; avoidable at buildtime if gau2grid pre-built; e.g., `conda install numpy`); # - networkx >=2.4 (runtime only; e.g., `conda install networkx`); # - pint >=0.10 (runtime only; e.g., `conda install pint -c conda-forge`); # - pydantic >=1.0 (runtime only; e.g., `conda install pydantic -c conda-forge`); # - msgpack-python (runtime only; e.g., `conda install msgpack-python`); # - Eigen (for Libint2; e.g., `conda install eigen`); # - Boost (header-only libs for Libint2; e.g., `conda install boost-cpp`); # - SciPy (runtime only; avoidable through keyword setting; e.g., `conda install scipy`); # - py-cpuinfo (runtime only; e.g., `conda install py-cpuinfo`); # - psutil (runtime only; e.g., `conda install psutil`). # These three ""### Options ###"" sections contain useful CMake variables for build configuration. # <<< Compilers and flags >>>; #; # - CMAKE_C_COMPILER ""C compiler""; # - CMAKE_C_FLAGS ""Additional C flags""; # - CMAKE_CXX_COMPILER ""C++ compiler""; # - CMAKE_CXX_FLAGS ""Additional C++ flags""; # - CMAKE_Fortran_COMPILER ""Fortran compiler (required for some add-ons)""; # - CMAKE_Fortran_FLAGS ""Additional Fortran flags"". # <<< Detecting dependencies and add-ons >>>; #; # - Python_EXECUTABLE ""Python interpreter to use (e.g., /path/to/bin/python3.7)""; # - Python_LIBRARY ""Python library that goes with the interpreter (e.g., /path/to/lib/python3.7.so)""; # - Python_INCLUDE_DIR ""Path to the python include files (e.g., /path/to/include/python3.7)""; # - SPHINX_ROOT ""Root directory for Sphinx: 'bin/sphinx-build' (or similar) should be in this dir.""; #; # For any ${AddOn} of: ambit, CheMPS2, dkh, ecpint, libefp, Einsums, erd, gau2grid, gdma, Libint2, PCMSolver, pybind11, pylibefp,; # qcelemental, qcengine, optking, simint, Libxc; # - CMAKE_PREFIX_PATH",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:2633,Modifiability,config,configuration,2633,"`conda install cmake`); # - C++ and C compilers (C++17 compliant); # - BLAS/LAPACK (also runtime; e.g., `conda install mkl-devel`); # - Python (also runtime; interpreter and headers; e.g., `conda install python`); # - NumPy (also runtime; avoidable at buildtime if gau2grid pre-built; e.g., `conda install numpy`); # - networkx >=2.4 (runtime only; e.g., `conda install networkx`); # - pint >=0.10 (runtime only; e.g., `conda install pint -c conda-forge`); # - pydantic >=1.0 (runtime only; e.g., `conda install pydantic -c conda-forge`); # - msgpack-python (runtime only; e.g., `conda install msgpack-python`); # - Eigen (for Libint2; e.g., `conda install eigen`); # - Boost (header-only libs for Libint2; e.g., `conda install boost-cpp`); # - SciPy (runtime only; avoidable through keyword setting; e.g., `conda install scipy`); # - py-cpuinfo (runtime only; e.g., `conda install py-cpuinfo`); # - psutil (runtime only; e.g., `conda install psutil`). # These three ""### Options ###"" sections contain useful CMake variables for build configuration. # <<< Compilers and flags >>>; #; # - CMAKE_C_COMPILER ""C compiler""; # - CMAKE_C_FLAGS ""Additional C flags""; # - CMAKE_CXX_COMPILER ""C++ compiler""; # - CMAKE_CXX_FLAGS ""Additional C++ flags""; # - CMAKE_Fortran_COMPILER ""Fortran compiler (required for some add-ons)""; # - CMAKE_Fortran_FLAGS ""Additional Fortran flags"". # <<< Detecting dependencies and add-ons >>>; #; # - Python_EXECUTABLE ""Python interpreter to use (e.g., /path/to/bin/python3.7)""; # - Python_LIBRARY ""Python library that goes with the interpreter (e.g., /path/to/lib/python3.7.so)""; # - Python_INCLUDE_DIR ""Path to the python include files (e.g., /path/to/include/python3.7)""; # - SPHINX_ROOT ""Root directory for Sphinx: 'bin/sphinx-build' (or similar) should be in this dir.""; #; # For any ${AddOn} of: ambit, CheMPS2, dkh, ecpint, libefp, Einsums, erd, gau2grid, gdma, Libint2, PCMSolver, pybind11, pylibefp,; # qcelemental, qcengine, optking, simint, Libxc; # - CMAKE_PREFIX_PATH",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:7112,Modifiability,plugin,plugin,7112,"s CPPE for Polarizable Embedding"" OFF); option(ENABLE_adcc ""Enables adcc for algebraic-diagrammatic construction methods (requires libtensorlight; can also be added at runtime)"" OFF); option(ENABLE_ddx ""Enables ddx for domain-decomposition contiuum solvation models (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_dkh ""Enables DKH integrals (requires Fortran)"" OFF); option(ENABLE_ecpint ""Enables libecpint for effective core potentials (ECP)"" OFF); option(ENABLE_libefp ""Enables LIBEFP and PylibEFP for fragments"" OFF); option(ENABLE_Einsums ""Enables the Einsums tensor library"" OFF); option(ENABLE_erd ""Enables use of ERD instead of Libint (requires Fortran)"" OFF); option(ENABLE_simint ""Enables use of SIMINT two-electron integral library"" OFF); option(ENABLE_gdma ""Enables Stone's GDMA multipole code (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_PCMSolver ""Enables PCMSolver library (requires Fortran)"" OFF); option(ENABLE_snsmp2 ""Enables SNSMP2 plugin (can also be added at runtime)"" OFF); option(ENABLE_v2rdm_casscf ""Enables V2RDM_CASSCF plugin (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_psi4fockci ""Enables Psi4FockCI plugin (can also be added at runtime)"" OFF); option(ENABLE_cct3 ""Enables cct3 plugin (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_gpu_dfcc ""Enables GPU_DFCC plugin for gpu-accelerated df-cc (requires CUDA; can also be added at runtime)"" OFF); option(ENABLE_mdi ""Enables MolSSI driver interface"" OFF); option(ENABLE_BrianQC ""Enables the BrianQC GPU module (requires CUDA; requires separate installation and licensing of the BrianQC module)"" OFF); option(ENABLE_Libint1t ""Enables Libint1 in special _t variety"" OFF); # These options are relevant to pasture, expert only; option(ENABLE_ccsort ""Enables ccsort plugin installed from psi4pasture"" OFF); option(ENABLE_transqt2 ""Enables transqt2 plugin installed from psi4pasture"" OFF); option(psi4_SKIP_ENABLE_Fortran ""Suppress enabli",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:7206,Modifiability,plugin,plugin,7206,"_adcc ""Enables adcc for algebraic-diagrammatic construction methods (requires libtensorlight; can also be added at runtime)"" OFF); option(ENABLE_ddx ""Enables ddx for domain-decomposition contiuum solvation models (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_dkh ""Enables DKH integrals (requires Fortran)"" OFF); option(ENABLE_ecpint ""Enables libecpint for effective core potentials (ECP)"" OFF); option(ENABLE_libefp ""Enables LIBEFP and PylibEFP for fragments"" OFF); option(ENABLE_Einsums ""Enables the Einsums tensor library"" OFF); option(ENABLE_erd ""Enables use of ERD instead of Libint (requires Fortran)"" OFF); option(ENABLE_simint ""Enables use of SIMINT two-electron integral library"" OFF); option(ENABLE_gdma ""Enables Stone's GDMA multipole code (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_PCMSolver ""Enables PCMSolver library (requires Fortran)"" OFF); option(ENABLE_snsmp2 ""Enables SNSMP2 plugin (can also be added at runtime)"" OFF); option(ENABLE_v2rdm_casscf ""Enables V2RDM_CASSCF plugin (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_psi4fockci ""Enables Psi4FockCI plugin (can also be added at runtime)"" OFF); option(ENABLE_cct3 ""Enables cct3 plugin (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_gpu_dfcc ""Enables GPU_DFCC plugin for gpu-accelerated df-cc (requires CUDA; can also be added at runtime)"" OFF); option(ENABLE_mdi ""Enables MolSSI driver interface"" OFF); option(ENABLE_BrianQC ""Enables the BrianQC GPU module (requires CUDA; requires separate installation and licensing of the BrianQC module)"" OFF); option(ENABLE_Libint1t ""Enables Libint1 in special _t variety"" OFF); # These options are relevant to pasture, expert only; option(ENABLE_ccsort ""Enables ccsort plugin installed from psi4pasture"" OFF); option(ENABLE_transqt2 ""Enables transqt2 plugin installed from psi4pasture"" OFF); option(psi4_SKIP_ENABLE_Fortran ""Suppress enabling Fortran language even when Fortran addons enabled.",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:7314,Modifiability,plugin,plugin,7314,"_adcc ""Enables adcc for algebraic-diagrammatic construction methods (requires libtensorlight; can also be added at runtime)"" OFF); option(ENABLE_ddx ""Enables ddx for domain-decomposition contiuum solvation models (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_dkh ""Enables DKH integrals (requires Fortran)"" OFF); option(ENABLE_ecpint ""Enables libecpint for effective core potentials (ECP)"" OFF); option(ENABLE_libefp ""Enables LIBEFP and PylibEFP for fragments"" OFF); option(ENABLE_Einsums ""Enables the Einsums tensor library"" OFF); option(ENABLE_erd ""Enables use of ERD instead of Libint (requires Fortran)"" OFF); option(ENABLE_simint ""Enables use of SIMINT two-electron integral library"" OFF); option(ENABLE_gdma ""Enables Stone's GDMA multipole code (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_PCMSolver ""Enables PCMSolver library (requires Fortran)"" OFF); option(ENABLE_snsmp2 ""Enables SNSMP2 plugin (can also be added at runtime)"" OFF); option(ENABLE_v2rdm_casscf ""Enables V2RDM_CASSCF plugin (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_psi4fockci ""Enables Psi4FockCI plugin (can also be added at runtime)"" OFF); option(ENABLE_cct3 ""Enables cct3 plugin (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_gpu_dfcc ""Enables GPU_DFCC plugin for gpu-accelerated df-cc (requires CUDA; can also be added at runtime)"" OFF); option(ENABLE_mdi ""Enables MolSSI driver interface"" OFF); option(ENABLE_BrianQC ""Enables the BrianQC GPU module (requires CUDA; requires separate installation and licensing of the BrianQC module)"" OFF); option(ENABLE_Libint1t ""Enables Libint1 in special _t variety"" OFF); # These options are relevant to pasture, expert only; option(ENABLE_ccsort ""Enables ccsort plugin installed from psi4pasture"" OFF); option(ENABLE_transqt2 ""Enables transqt2 plugin installed from psi4pasture"" OFF); option(psi4_SKIP_ENABLE_Fortran ""Suppress enabling Fortran language even when Fortran addons enabled.",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:7392,Modifiability,plugin,plugin,7392,"_adcc ""Enables adcc for algebraic-diagrammatic construction methods (requires libtensorlight; can also be added at runtime)"" OFF); option(ENABLE_ddx ""Enables ddx for domain-decomposition contiuum solvation models (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_dkh ""Enables DKH integrals (requires Fortran)"" OFF); option(ENABLE_ecpint ""Enables libecpint for effective core potentials (ECP)"" OFF); option(ENABLE_libefp ""Enables LIBEFP and PylibEFP for fragments"" OFF); option(ENABLE_Einsums ""Enables the Einsums tensor library"" OFF); option(ENABLE_erd ""Enables use of ERD instead of Libint (requires Fortran)"" OFF); option(ENABLE_simint ""Enables use of SIMINT two-electron integral library"" OFF); option(ENABLE_gdma ""Enables Stone's GDMA multipole code (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_PCMSolver ""Enables PCMSolver library (requires Fortran)"" OFF); option(ENABLE_snsmp2 ""Enables SNSMP2 plugin (can also be added at runtime)"" OFF); option(ENABLE_v2rdm_casscf ""Enables V2RDM_CASSCF plugin (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_psi4fockci ""Enables Psi4FockCI plugin (can also be added at runtime)"" OFF); option(ENABLE_cct3 ""Enables cct3 plugin (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_gpu_dfcc ""Enables GPU_DFCC plugin for gpu-accelerated df-cc (requires CUDA; can also be added at runtime)"" OFF); option(ENABLE_mdi ""Enables MolSSI driver interface"" OFF); option(ENABLE_BrianQC ""Enables the BrianQC GPU module (requires CUDA; requires separate installation and licensing of the BrianQC module)"" OFF); option(ENABLE_Libint1t ""Enables Libint1 in special _t variety"" OFF); # These options are relevant to pasture, expert only; option(ENABLE_ccsort ""Enables ccsort plugin installed from psi4pasture"" OFF); option(ENABLE_transqt2 ""Enables transqt2 plugin installed from psi4pasture"" OFF); option(psi4_SKIP_ENABLE_Fortran ""Suppress enabling Fortran language even when Fortran addons enabled.",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:7496,Modifiability,plugin,plugin,7496,"_adcc ""Enables adcc for algebraic-diagrammatic construction methods (requires libtensorlight; can also be added at runtime)"" OFF); option(ENABLE_ddx ""Enables ddx for domain-decomposition contiuum solvation models (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_dkh ""Enables DKH integrals (requires Fortran)"" OFF); option(ENABLE_ecpint ""Enables libecpint for effective core potentials (ECP)"" OFF); option(ENABLE_libefp ""Enables LIBEFP and PylibEFP for fragments"" OFF); option(ENABLE_Einsums ""Enables the Einsums tensor library"" OFF); option(ENABLE_erd ""Enables use of ERD instead of Libint (requires Fortran)"" OFF); option(ENABLE_simint ""Enables use of SIMINT two-electron integral library"" OFF); option(ENABLE_gdma ""Enables Stone's GDMA multipole code (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_PCMSolver ""Enables PCMSolver library (requires Fortran)"" OFF); option(ENABLE_snsmp2 ""Enables SNSMP2 plugin (can also be added at runtime)"" OFF); option(ENABLE_v2rdm_casscf ""Enables V2RDM_CASSCF plugin (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_psi4fockci ""Enables Psi4FockCI plugin (can also be added at runtime)"" OFF); option(ENABLE_cct3 ""Enables cct3 plugin (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_gpu_dfcc ""Enables GPU_DFCC plugin for gpu-accelerated df-cc (requires CUDA; can also be added at runtime)"" OFF); option(ENABLE_mdi ""Enables MolSSI driver interface"" OFF); option(ENABLE_BrianQC ""Enables the BrianQC GPU module (requires CUDA; requires separate installation and licensing of the BrianQC module)"" OFF); option(ENABLE_Libint1t ""Enables Libint1 in special _t variety"" OFF); # These options are relevant to pasture, expert only; option(ENABLE_ccsort ""Enables ccsort plugin installed from psi4pasture"" OFF); option(ENABLE_transqt2 ""Enables transqt2 plugin installed from psi4pasture"" OFF); option(psi4_SKIP_ENABLE_Fortran ""Suppress enabling Fortran language even when Fortran addons enabled.",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:7945,Modifiability,plugin,plugin,7945,"_adcc ""Enables adcc for algebraic-diagrammatic construction methods (requires libtensorlight; can also be added at runtime)"" OFF); option(ENABLE_ddx ""Enables ddx for domain-decomposition contiuum solvation models (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_dkh ""Enables DKH integrals (requires Fortran)"" OFF); option(ENABLE_ecpint ""Enables libecpint for effective core potentials (ECP)"" OFF); option(ENABLE_libefp ""Enables LIBEFP and PylibEFP for fragments"" OFF); option(ENABLE_Einsums ""Enables the Einsums tensor library"" OFF); option(ENABLE_erd ""Enables use of ERD instead of Libint (requires Fortran)"" OFF); option(ENABLE_simint ""Enables use of SIMINT two-electron integral library"" OFF); option(ENABLE_gdma ""Enables Stone's GDMA multipole code (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_PCMSolver ""Enables PCMSolver library (requires Fortran)"" OFF); option(ENABLE_snsmp2 ""Enables SNSMP2 plugin (can also be added at runtime)"" OFF); option(ENABLE_v2rdm_casscf ""Enables V2RDM_CASSCF plugin (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_psi4fockci ""Enables Psi4FockCI plugin (can also be added at runtime)"" OFF); option(ENABLE_cct3 ""Enables cct3 plugin (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_gpu_dfcc ""Enables GPU_DFCC plugin for gpu-accelerated df-cc (requires CUDA; can also be added at runtime)"" OFF); option(ENABLE_mdi ""Enables MolSSI driver interface"" OFF); option(ENABLE_BrianQC ""Enables the BrianQC GPU module (requires CUDA; requires separate installation and licensing of the BrianQC module)"" OFF); option(ENABLE_Libint1t ""Enables Libint1 in special _t variety"" OFF); # These options are relevant to pasture, expert only; option(ENABLE_ccsort ""Enables ccsort plugin installed from psi4pasture"" OFF); option(ENABLE_transqt2 ""Enables transqt2 plugin installed from psi4pasture"" OFF); option(psi4_SKIP_ENABLE_Fortran ""Suppress enabling Fortran language even when Fortran addons enabled.",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:8027,Modifiability,plugin,plugin,8027,"_adcc ""Enables adcc for algebraic-diagrammatic construction methods (requires libtensorlight; can also be added at runtime)"" OFF); option(ENABLE_ddx ""Enables ddx for domain-decomposition contiuum solvation models (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_dkh ""Enables DKH integrals (requires Fortran)"" OFF); option(ENABLE_ecpint ""Enables libecpint for effective core potentials (ECP)"" OFF); option(ENABLE_libefp ""Enables LIBEFP and PylibEFP for fragments"" OFF); option(ENABLE_Einsums ""Enables the Einsums tensor library"" OFF); option(ENABLE_erd ""Enables use of ERD instead of Libint (requires Fortran)"" OFF); option(ENABLE_simint ""Enables use of SIMINT two-electron integral library"" OFF); option(ENABLE_gdma ""Enables Stone's GDMA multipole code (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_PCMSolver ""Enables PCMSolver library (requires Fortran)"" OFF); option(ENABLE_snsmp2 ""Enables SNSMP2 plugin (can also be added at runtime)"" OFF); option(ENABLE_v2rdm_casscf ""Enables V2RDM_CASSCF plugin (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_psi4fockci ""Enables Psi4FockCI plugin (can also be added at runtime)"" OFF); option(ENABLE_cct3 ""Enables cct3 plugin (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_gpu_dfcc ""Enables GPU_DFCC plugin for gpu-accelerated df-cc (requires CUDA; can also be added at runtime)"" OFF); option(ENABLE_mdi ""Enables MolSSI driver interface"" OFF); option(ENABLE_BrianQC ""Enables the BrianQC GPU module (requires CUDA; requires separate installation and licensing of the BrianQC module)"" OFF); option(ENABLE_Libint1t ""Enables Libint1 in special _t variety"" OFF); # These options are relevant to pasture, expert only; option(ENABLE_ccsort ""Enables ccsort plugin installed from psi4pasture"" OFF); option(ENABLE_transqt2 ""Enables transqt2 plugin installed from psi4pasture"" OFF); option(psi4_SKIP_ENABLE_Fortran ""Suppress enabling Fortran language even when Fortran addons enabled.",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:8376,Modifiability,plugin,plugins,8376,"lugin (can also be added at runtime)"" OFF); option(ENABLE_cct3 ""Enables cct3 plugin (requires Fortran; can also be added at runtime)"" OFF); option(ENABLE_gpu_dfcc ""Enables GPU_DFCC plugin for gpu-accelerated df-cc (requires CUDA; can also be added at runtime)"" OFF); option(ENABLE_mdi ""Enables MolSSI driver interface"" OFF); option(ENABLE_BrianQC ""Enables the BrianQC GPU module (requires CUDA; requires separate installation and licensing of the BrianQC module)"" OFF); option(ENABLE_Libint1t ""Enables Libint1 in special _t variety"" OFF); # These options are relevant to pasture, expert only; option(ENABLE_ccsort ""Enables ccsort plugin installed from psi4pasture"" OFF); option(ENABLE_transqt2 ""Enables transqt2 plugin installed from psi4pasture"" OFF); option(psi4_SKIP_ENABLE_Fortran ""Suppress enabling Fortran language even when Fortran addons enabled. Use when only linking pre-built, not compiling addon code."" OFF). # Append modules added to pasture as needed; if(ENABLE_ccsort OR ENABLE_transqt2); set(ENABLE_pasture ON); message(STATUS ""Enabling pasture plugins""); endif(). if(ENABLE_gdma OR ENABLE_dkh OR ENABLE_erd OR ENABLE_PCMSolver); if(psi4_SKIP_ENABLE_Fortran); message(STATUS ""NOT Enabling Fortran""); else(); enable_language(Fortran); set(Fortran_ENABLED ON) # communicate required languages with psi4-core; message(STATUS ""Enabling Fortran""); endif(); endif(). if(ENABLE_erd); message(FATAL_ERROR ""The Psi4/ERD interface is broken, probably since spring 2017. It's toast (comment this line to try), but disabling for now.""); message(WARNING ""ERD will build, link, and run in Psi4 just fine. However, it has not been hooked into Psi4 in all roles, notably gradients, LRC DFT energies, and ESP. So upon activating through ``set integral_package erd``, known failures will be caught and halted, but perhaps other types not tested and identified will give *wrong* answers. Consider this your warning.""); endif(). ############################ Options: Build How? ##########################",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:9937,Modifiability,plugin,plugin,9937,"ified will give *wrong* answers. Consider this your warning.""); endif(). ############################ Options: Build How? #############################; include(psi4OptionsTools); option_with_print(BUILD_SHARED_LIBS ""Build internally built Psi4 add-on libraries as shared, not static"" OFF); option_with_default(CMAKE_BUILD_TYPE ""Build type (Release or Debug)"" Release); include(xhost) # defines: option(ENABLE_XHOST ""Enable processor-specific optimization"" ON); # below are uncommon to adjust; option_with_print(ENABLE_OPENMP ""Enables OpenMP parallelization"" ON); option_with_print(ENABLE_AUTO_BLAS ""Enables CMake to auto-detect BLAS"" ON); option_with_print(ENABLE_AUTO_LAPACK ""Enables CMake to auto-detect LAPACK"" ON); option_with_print(ENABLE_PLUGIN_TESTING ""Test the plugin templates build and run"" OFF); option_with_print(ENABLE_CYTHONIZE ""Compile each python file rather than plaintext (requires cython) !experimental!"" OFF); option_with_flags(ENABLE_CODE_COVERAGE ""Enables details on code coverage"" OFF; ""-ftest-coverage""); option_with_flags(ENABLE_BOUNDS_CHECK ""Enables bounds check in Fortran"" OFF; ""-ftrapuv -check all -fpstkchk"" ""-fcheck=all"" ""-fbounds-check -fcheck-array-temporaries""); option_with_flags(ENABLE_ASAN ""Enables address sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=address -fno-omit-frame-pointer""); option_with_flags(ENABLE_TSAN ""Enables thread sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=thread -fPIE -pie -fno-omit-frame-pointer""); option_with_flags(ENABLE_UBSAN ""Enables undefined behavior sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=undefined -fno-omit-frame-pointer""); option_with_flags(ENABLE_MSAN ""Enables memory sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=memory -fPIE -pie -fno-omit-frame-pointer""); option_with_default(MAX_AM_ERI ""Maximum angular momentum for integrals. The definition changed with Libint2 but still single integer. Default f",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:11640,Modifiability,config,config,11640,"quires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=address -fno-omit-frame-pointer""); option_with_flags(ENABLE_TSAN ""Enables thread sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=thread -fPIE -pie -fno-omit-frame-pointer""); option_with_flags(ENABLE_UBSAN ""Enables undefined behavior sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=undefined -fno-omit-frame-pointer""); option_with_flags(ENABLE_MSAN ""Enables memory sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=memory -fPIE -pie -fno-omit-frame-pointer""); option_with_default(MAX_AM_ERI ""Maximum angular momentum for integrals. The definition changed with Libint2 but still single integer. Default fine for production."" 5); option_with_default(FC_SYMBOL ""The type of Fortran name mangling"" 2); option_with_default(BUILD_FPIC ""Compile static libraries with position independent code"" ON); option_with_default(CMAKE_INSTALL_LIBDIR ""Directory to which libraries installed"" lib); option_with_default(PYMOD_INSTALL_LIBDIR ""Location within CMAKE_INSTALL_LIBDIR to which python modules are installed"" /); option_with_default(psi4_INSTALL_CMAKEDIR ""Directory to which psi4 CMake config files installed."" share/cmake/psi4); option_with_default(TargetLAPACK_INSTALL_CMAKEDIR ""Directory to which psi4 CMake config files installed."" share/cmake/TargetLAPACK); option_with_default(TargetHDF5_INSTALL_CMAKEDIR ""Directory to which psi4 CMake config files installed."" share/cmake/TargetHDF5); option_with_default(ENABLE_GENERIC ""Enables mostly static linking of language libraries for shared library"" OFF); option_with_default(CMAKE_INSTALL_MESSAGE ""Specify verbosity of installation messages"" LAZY); option_with_default(psi4_CXX_STANDARD ""Specify C++ standard for core Psi4"" 17); option_with_default(psi4_CXX_STANDARD_Libint2 ""Specify C++ standard for Psi4 files including Libint2 headers. Older (e.g., 2021.4) Intel compilers may need 14"" 17); option_with_default(SIMINT",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:11765,Modifiability,config,config,11765,"es undefined behavior sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=undefined -fno-omit-frame-pointer""); option_with_flags(ENABLE_MSAN ""Enables memory sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=memory -fPIE -pie -fno-omit-frame-pointer""); option_with_default(MAX_AM_ERI ""Maximum angular momentum for integrals. The definition changed with Libint2 but still single integer. Default fine for production."" 5); option_with_default(FC_SYMBOL ""The type of Fortran name mangling"" 2); option_with_default(BUILD_FPIC ""Compile static libraries with position independent code"" ON); option_with_default(CMAKE_INSTALL_LIBDIR ""Directory to which libraries installed"" lib); option_with_default(PYMOD_INSTALL_LIBDIR ""Location within CMAKE_INSTALL_LIBDIR to which python modules are installed"" /); option_with_default(psi4_INSTALL_CMAKEDIR ""Directory to which psi4 CMake config files installed."" share/cmake/psi4); option_with_default(TargetLAPACK_INSTALL_CMAKEDIR ""Directory to which psi4 CMake config files installed."" share/cmake/TargetLAPACK); option_with_default(TargetHDF5_INSTALL_CMAKEDIR ""Directory to which psi4 CMake config files installed."" share/cmake/TargetHDF5); option_with_default(ENABLE_GENERIC ""Enables mostly static linking of language libraries for shared library"" OFF); option_with_default(CMAKE_INSTALL_MESSAGE ""Specify verbosity of installation messages"" LAZY); option_with_default(psi4_CXX_STANDARD ""Specify C++ standard for core Psi4"" 17); option_with_default(psi4_CXX_STANDARD_Libint2 ""Specify C++ standard for Psi4 files including Libint2 headers. Older (e.g., 2021.4) Intel compilers may need 14"" 17); option_with_default(SIMINT_VECTOR ""Vectorization type to use for simint (scalar sse avx avxfma micavx512)"" avx); option_with_default(SPHINX_THEME ""Theme for Sphinx documentation and extensions"" sphinx_psi_theme); option_with_default(SPHINXMAN_STRICT ""Turn warnings into errors for docs target sphinxman"" OFF); option_with_defau",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:11896,Modifiability,config,config,11896,"er""); option_with_flags(ENABLE_MSAN ""Enables memory sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=memory -fPIE -pie -fno-omit-frame-pointer""); option_with_default(MAX_AM_ERI ""Maximum angular momentum for integrals. The definition changed with Libint2 but still single integer. Default fine for production."" 5); option_with_default(FC_SYMBOL ""The type of Fortran name mangling"" 2); option_with_default(BUILD_FPIC ""Compile static libraries with position independent code"" ON); option_with_default(CMAKE_INSTALL_LIBDIR ""Directory to which libraries installed"" lib); option_with_default(PYMOD_INSTALL_LIBDIR ""Location within CMAKE_INSTALL_LIBDIR to which python modules are installed"" /); option_with_default(psi4_INSTALL_CMAKEDIR ""Directory to which psi4 CMake config files installed."" share/cmake/psi4); option_with_default(TargetLAPACK_INSTALL_CMAKEDIR ""Directory to which psi4 CMake config files installed."" share/cmake/TargetLAPACK); option_with_default(TargetHDF5_INSTALL_CMAKEDIR ""Directory to which psi4 CMake config files installed."" share/cmake/TargetHDF5); option_with_default(ENABLE_GENERIC ""Enables mostly static linking of language libraries for shared library"" OFF); option_with_default(CMAKE_INSTALL_MESSAGE ""Specify verbosity of installation messages"" LAZY); option_with_default(psi4_CXX_STANDARD ""Specify C++ standard for core Psi4"" 17); option_with_default(psi4_CXX_STANDARD_Libint2 ""Specify C++ standard for Psi4 files including Libint2 headers. Older (e.g., 2021.4) Intel compilers may need 14"" 17); option_with_default(SIMINT_VECTOR ""Vectorization type to use for simint (scalar sse avx avxfma micavx512)"" avx); option_with_default(SPHINX_THEME ""Theme for Sphinx documentation and extensions"" sphinx_psi_theme); option_with_default(SPHINXMAN_STRICT ""Turn warnings into errors for docs target sphinxman"" OFF); option_with_default(BUILD_Libint2_GENERATOR ""If prebuilt not found, don't build Libint2 from source tarball but instead build and run generator (",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:9610,Performance,optimiz,optimization,9610,"ified will give *wrong* answers. Consider this your warning.""); endif(). ############################ Options: Build How? #############################; include(psi4OptionsTools); option_with_print(BUILD_SHARED_LIBS ""Build internally built Psi4 add-on libraries as shared, not static"" OFF); option_with_default(CMAKE_BUILD_TYPE ""Build type (Release or Debug)"" Release); include(xhost) # defines: option(ENABLE_XHOST ""Enable processor-specific optimization"" ON); # below are uncommon to adjust; option_with_print(ENABLE_OPENMP ""Enables OpenMP parallelization"" ON); option_with_print(ENABLE_AUTO_BLAS ""Enables CMake to auto-detect BLAS"" ON); option_with_print(ENABLE_AUTO_LAPACK ""Enables CMake to auto-detect LAPACK"" ON); option_with_print(ENABLE_PLUGIN_TESTING ""Test the plugin templates build and run"" OFF); option_with_print(ENABLE_CYTHONIZE ""Compile each python file rather than plaintext (requires cython) !experimental!"" OFF); option_with_flags(ENABLE_CODE_COVERAGE ""Enables details on code coverage"" OFF; ""-ftest-coverage""); option_with_flags(ENABLE_BOUNDS_CHECK ""Enables bounds check in Fortran"" OFF; ""-ftrapuv -check all -fpstkchk"" ""-fcheck=all"" ""-fbounds-check -fcheck-array-temporaries""); option_with_flags(ENABLE_ASAN ""Enables address sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=address -fno-omit-frame-pointer""); option_with_flags(ENABLE_TSAN ""Enables thread sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=thread -fPIE -pie -fno-omit-frame-pointer""); option_with_flags(ENABLE_UBSAN ""Enables undefined behavior sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=undefined -fno-omit-frame-pointer""); option_with_flags(ENABLE_MSAN ""Enables memory sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=memory -fPIE -pie -fno-omit-frame-pointer""); option_with_default(MAX_AM_ERI ""Maximum angular momentum for integrals. The definition changed with Libint2 but still single integer. Default f",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:1837,Safety,avoid,avoidable,1837,"CENSE ""GNU Lesser General Public License, version 3 (LGPL-3.0)""); set(psi4_DESCRIPTION ""Open-Source Quantum Chemistry""). list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake). message(STATUS ""Building using CMake ${CMAKE_VERSION} Generator ${CMAKE_GENERATOR}""). ################ Options: Overview and Not Otherwise Mentioned ###############. # <<< CMake build overview >>>; #; # >>> ls; # external/ COPYING psi4/ tests/ ...; # >>> cmake -S. -Bobjdir -DCMAKE_INSTALL_PREFIX=/path/to/install-psi4 ...; # ...; # -- Generating done; # -- Build files have been written to: /current/dir/objdir; # >>> cmake --build objdir --target install -j`getconf _NPROCESSORS_ONLN`. # <<< Required build dependencies that Psi4 can't build itself >>>; #; # - CMake (e.g., `conda install cmake`); # - C++ and C compilers (C++17 compliant); # - BLAS/LAPACK (also runtime; e.g., `conda install mkl-devel`); # - Python (also runtime; interpreter and headers; e.g., `conda install python`); # - NumPy (also runtime; avoidable at buildtime if gau2grid pre-built; e.g., `conda install numpy`); # - networkx >=2.4 (runtime only; e.g., `conda install networkx`); # - pint >=0.10 (runtime only; e.g., `conda install pint -c conda-forge`); # - pydantic >=1.0 (runtime only; e.g., `conda install pydantic -c conda-forge`); # - msgpack-python (runtime only; e.g., `conda install msgpack-python`); # - Eigen (for Libint2; e.g., `conda install eigen`); # - Boost (header-only libs for Libint2; e.g., `conda install boost-cpp`); # - SciPy (runtime only; avoidable through keyword setting; e.g., `conda install scipy`); # - py-cpuinfo (runtime only; e.g., `conda install py-cpuinfo`); # - psutil (runtime only; e.g., `conda install psutil`). # These three ""### Options ###"" sections contain useful CMake variables for build configuration. # <<< Compilers and flags >>>; #; # - CMAKE_C_COMPILER ""C compiler""; # - CMAKE_C_FLAGS ""Additional C flags""; # - CMAKE_CXX_COMPILER ""C++ compiler""; # - CMAKE_CXX_FLAGS ""Additional C++ fla",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:2364,Safety,avoid,avoidable,2364,"-- Generating done; # -- Build files have been written to: /current/dir/objdir; # >>> cmake --build objdir --target install -j`getconf _NPROCESSORS_ONLN`. # <<< Required build dependencies that Psi4 can't build itself >>>; #; # - CMake (e.g., `conda install cmake`); # - C++ and C compilers (C++17 compliant); # - BLAS/LAPACK (also runtime; e.g., `conda install mkl-devel`); # - Python (also runtime; interpreter and headers; e.g., `conda install python`); # - NumPy (also runtime; avoidable at buildtime if gau2grid pre-built; e.g., `conda install numpy`); # - networkx >=2.4 (runtime only; e.g., `conda install networkx`); # - pint >=0.10 (runtime only; e.g., `conda install pint -c conda-forge`); # - pydantic >=1.0 (runtime only; e.g., `conda install pydantic -c conda-forge`); # - msgpack-python (runtime only; e.g., `conda install msgpack-python`); # - Eigen (for Libint2; e.g., `conda install eigen`); # - Boost (header-only libs for Libint2; e.g., `conda install boost-cpp`); # - SciPy (runtime only; avoidable through keyword setting; e.g., `conda install scipy`); # - py-cpuinfo (runtime only; e.g., `conda install py-cpuinfo`); # - psutil (runtime only; e.g., `conda install psutil`). # These three ""### Options ###"" sections contain useful CMake variables for build configuration. # <<< Compilers and flags >>>; #; # - CMAKE_C_COMPILER ""C compiler""; # - CMAKE_C_FLAGS ""Additional C flags""; # - CMAKE_CXX_COMPILER ""C++ compiler""; # - CMAKE_CXX_FLAGS ""Additional C++ flags""; # - CMAKE_Fortran_COMPILER ""Fortran compiler (required for some add-ons)""; # - CMAKE_Fortran_FLAGS ""Additional Fortran flags"". # <<< Detecting dependencies and add-ons >>>; #; # - Python_EXECUTABLE ""Python interpreter to use (e.g., /path/to/bin/python3.7)""; # - Python_LIBRARY ""Python library that goes with the interpreter (e.g., /path/to/lib/python3.7.so)""; # - Python_INCLUDE_DIR ""Path to the python include files (e.g., /path/to/include/python3.7)""; # - SPHINX_ROOT ""Root directory for Sphinx: 'bin/sphinx-build",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:3884,Safety,detect,detection,3884,"s"". # <<< Detecting dependencies and add-ons >>>; #; # - Python_EXECUTABLE ""Python interpreter to use (e.g., /path/to/bin/python3.7)""; # - Python_LIBRARY ""Python library that goes with the interpreter (e.g., /path/to/lib/python3.7.so)""; # - Python_INCLUDE_DIR ""Path to the python include files (e.g., /path/to/include/python3.7)""; # - SPHINX_ROOT ""Root directory for Sphinx: 'bin/sphinx-build' (or similar) should be in this dir.""; #; # For any ${AddOn} of: ambit, CheMPS2, dkh, ecpint, libefp, Einsums, erd, gau2grid, gdma, Libint2, PCMSolver, pybind11, pylibefp,; # qcelemental, qcengine, optking, simint, Libxc; # - CMAKE_PREFIX_PATH ""Set to list of root directories to look for externally built add-ons and dependencies; # (e.g., /path/to/install-libint;/path/to/install-gdma where exists /path/to/install-libint/lib/libderiv.a)""; # - ${AddOn}_DIR ""Set to directory containing ${AddOn}Config.cmake file to facilitate detection of external build""; # - CMAKE_DISABLE_FIND_PACKAGE_${AddON} ""Set to ON to force internal build""; # - CMAKE_INSIST_FIND_PACKAGE_${AddON} ""Set to ON to force external detect"". # <<< Detecting BLAS/LAPACK >>>; #; # - ENV(MATH_ROOT) ""Root directory where BLAS/LAPACK libraries should be detected (e.g., ${MATH_ROOT}/lib/libblas.so)""; # - BLAS_TYPE ""Target BLAS distribution for math detection; # (default: search order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_TYPE ""Target LAPACK distribution for math detection; # (default: search order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_LIBRARIES ""Location of BLAS/LAPACK libraries as "";""-separated list of full paths, bypassing math detection""; # - LAPACK_INCLUDE_DIRS ""Location of BLAS/LAPACK headers (only needed for MKL), bypassing math detection""; # - OpenMP_LIBRARY_DIRS ""Location of OpenMP libraries (iomp5/gomp/omp) as "";""-separated list, hinting OpenMP detection"". # <<< Install >>>; #; # - CMAKE_I",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:4059,Safety,detect,detect,4059,"s"". # <<< Detecting dependencies and add-ons >>>; #; # - Python_EXECUTABLE ""Python interpreter to use (e.g., /path/to/bin/python3.7)""; # - Python_LIBRARY ""Python library that goes with the interpreter (e.g., /path/to/lib/python3.7.so)""; # - Python_INCLUDE_DIR ""Path to the python include files (e.g., /path/to/include/python3.7)""; # - SPHINX_ROOT ""Root directory for Sphinx: 'bin/sphinx-build' (or similar) should be in this dir.""; #; # For any ${AddOn} of: ambit, CheMPS2, dkh, ecpint, libefp, Einsums, erd, gau2grid, gdma, Libint2, PCMSolver, pybind11, pylibefp,; # qcelemental, qcengine, optking, simint, Libxc; # - CMAKE_PREFIX_PATH ""Set to list of root directories to look for externally built add-ons and dependencies; # (e.g., /path/to/install-libint;/path/to/install-gdma where exists /path/to/install-libint/lib/libderiv.a)""; # - ${AddOn}_DIR ""Set to directory containing ${AddOn}Config.cmake file to facilitate detection of external build""; # - CMAKE_DISABLE_FIND_PACKAGE_${AddON} ""Set to ON to force internal build""; # - CMAKE_INSIST_FIND_PACKAGE_${AddON} ""Set to ON to force external detect"". # <<< Detecting BLAS/LAPACK >>>; #; # - ENV(MATH_ROOT) ""Root directory where BLAS/LAPACK libraries should be detected (e.g., ${MATH_ROOT}/lib/libblas.so)""; # - BLAS_TYPE ""Target BLAS distribution for math detection; # (default: search order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_TYPE ""Target LAPACK distribution for math detection; # (default: search order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_LIBRARIES ""Location of BLAS/LAPACK libraries as "";""-separated list of full paths, bypassing math detection""; # - LAPACK_INCLUDE_DIRS ""Location of BLAS/LAPACK headers (only needed for MKL), bypassing math detection""; # - OpenMP_LIBRARY_DIRS ""Location of OpenMP libraries (iomp5/gomp/omp) as "";""-separated list, hinting OpenMP detection"". # <<< Install >>>; #; # - CMAKE_I",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:4177,Safety,detect,detected,4177,"rary that goes with the interpreter (e.g., /path/to/lib/python3.7.so)""; # - Python_INCLUDE_DIR ""Path to the python include files (e.g., /path/to/include/python3.7)""; # - SPHINX_ROOT ""Root directory for Sphinx: 'bin/sphinx-build' (or similar) should be in this dir.""; #; # For any ${AddOn} of: ambit, CheMPS2, dkh, ecpint, libefp, Einsums, erd, gau2grid, gdma, Libint2, PCMSolver, pybind11, pylibefp,; # qcelemental, qcengine, optking, simint, Libxc; # - CMAKE_PREFIX_PATH ""Set to list of root directories to look for externally built add-ons and dependencies; # (e.g., /path/to/install-libint;/path/to/install-gdma where exists /path/to/install-libint/lib/libderiv.a)""; # - ${AddOn}_DIR ""Set to directory containing ${AddOn}Config.cmake file to facilitate detection of external build""; # - CMAKE_DISABLE_FIND_PACKAGE_${AddON} ""Set to ON to force internal build""; # - CMAKE_INSIST_FIND_PACKAGE_${AddON} ""Set to ON to force external detect"". # <<< Detecting BLAS/LAPACK >>>; #; # - ENV(MATH_ROOT) ""Root directory where BLAS/LAPACK libraries should be detected (e.g., ${MATH_ROOT}/lib/libblas.so)""; # - BLAS_TYPE ""Target BLAS distribution for math detection; # (default: search order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_TYPE ""Target LAPACK distribution for math detection; # (default: search order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_LIBRARIES ""Location of BLAS/LAPACK libraries as "";""-separated list of full paths, bypassing math detection""; # - LAPACK_INCLUDE_DIRS ""Location of BLAS/LAPACK headers (only needed for MKL), bypassing math detection""; # - OpenMP_LIBRARY_DIRS ""Location of OpenMP libraries (iomp5/gomp/omp) as "";""-separated list, hinting OpenMP detection"". # <<< Install >>>; #; # - CMAKE_INSTALL_PREFIX ""Location to which Psi4 and internally built add-ons are installed (default: /usr/local/psi4)""; # - CMAKE_INSTALL_BINDIR ""Location within CMAKE_INSTALL",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:4273,Safety,detect,detection,4273,"X_ROOT ""Root directory for Sphinx: 'bin/sphinx-build' (or similar) should be in this dir.""; #; # For any ${AddOn} of: ambit, CheMPS2, dkh, ecpint, libefp, Einsums, erd, gau2grid, gdma, Libint2, PCMSolver, pybind11, pylibefp,; # qcelemental, qcengine, optking, simint, Libxc; # - CMAKE_PREFIX_PATH ""Set to list of root directories to look for externally built add-ons and dependencies; # (e.g., /path/to/install-libint;/path/to/install-gdma where exists /path/to/install-libint/lib/libderiv.a)""; # - ${AddOn}_DIR ""Set to directory containing ${AddOn}Config.cmake file to facilitate detection of external build""; # - CMAKE_DISABLE_FIND_PACKAGE_${AddON} ""Set to ON to force internal build""; # - CMAKE_INSIST_FIND_PACKAGE_${AddON} ""Set to ON to force external detect"". # <<< Detecting BLAS/LAPACK >>>; #; # - ENV(MATH_ROOT) ""Root directory where BLAS/LAPACK libraries should be detected (e.g., ${MATH_ROOT}/lib/libblas.so)""; # - BLAS_TYPE ""Target BLAS distribution for math detection; # (default: search order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_TYPE ""Target LAPACK distribution for math detection; # (default: search order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_LIBRARIES ""Location of BLAS/LAPACK libraries as "";""-separated list of full paths, bypassing math detection""; # - LAPACK_INCLUDE_DIRS ""Location of BLAS/LAPACK headers (only needed for MKL), bypassing math detection""; # - OpenMP_LIBRARY_DIRS ""Location of OpenMP libraries (iomp5/gomp/omp) as "";""-separated list, hinting OpenMP detection"". # <<< Install >>>; #; # - CMAKE_INSTALL_PREFIX ""Location to which Psi4 and internally built add-ons are installed (default: /usr/local/psi4)""; # - CMAKE_INSTALL_BINDIR ""Location within CMAKE_INSTALL_PREFIX to which executables are installed (default: bin)""; # - CMAKE_INSTALL_LIBDIR ""Location within CMAKE_INSTALL_PREFIX to which libraries are installed (default: lib)""; # ",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:4454,Safety,detect,detection,4454,"d, gdma, Libint2, PCMSolver, pybind11, pylibefp,; # qcelemental, qcengine, optking, simint, Libxc; # - CMAKE_PREFIX_PATH ""Set to list of root directories to look for externally built add-ons and dependencies; # (e.g., /path/to/install-libint;/path/to/install-gdma where exists /path/to/install-libint/lib/libderiv.a)""; # - ${AddOn}_DIR ""Set to directory containing ${AddOn}Config.cmake file to facilitate detection of external build""; # - CMAKE_DISABLE_FIND_PACKAGE_${AddON} ""Set to ON to force internal build""; # - CMAKE_INSIST_FIND_PACKAGE_${AddON} ""Set to ON to force external detect"". # <<< Detecting BLAS/LAPACK >>>; #; # - ENV(MATH_ROOT) ""Root directory where BLAS/LAPACK libraries should be detected (e.g., ${MATH_ROOT}/lib/libblas.so)""; # - BLAS_TYPE ""Target BLAS distribution for math detection; # (default: search order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_TYPE ""Target LAPACK distribution for math detection; # (default: search order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_LIBRARIES ""Location of BLAS/LAPACK libraries as "";""-separated list of full paths, bypassing math detection""; # - LAPACK_INCLUDE_DIRS ""Location of BLAS/LAPACK headers (only needed for MKL), bypassing math detection""; # - OpenMP_LIBRARY_DIRS ""Location of OpenMP libraries (iomp5/gomp/omp) as "";""-separated list, hinting OpenMP detection"". # <<< Install >>>; #; # - CMAKE_INSTALL_PREFIX ""Location to which Psi4 and internally built add-ons are installed (default: /usr/local/psi4)""; # - CMAKE_INSTALL_BINDIR ""Location within CMAKE_INSTALL_PREFIX to which executables are installed (default: bin)""; # - CMAKE_INSTALL_LIBDIR ""Location within CMAKE_INSTALL_PREFIX to which libraries are installed (default: lib)""; # - CMAKE_INSTALL_DATADIR ""Location within CMAKE_INSTALL_PREFIX to which resources are installed (default: share)""; # - CMAKE_INSTALL_INCLUDEDIR ""Location within CMAKE_INSTALL_PRE",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:4690,Safety,detect,detection,4690,"xists /path/to/install-libint/lib/libderiv.a)""; # - ${AddOn}_DIR ""Set to directory containing ${AddOn}Config.cmake file to facilitate detection of external build""; # - CMAKE_DISABLE_FIND_PACKAGE_${AddON} ""Set to ON to force internal build""; # - CMAKE_INSIST_FIND_PACKAGE_${AddON} ""Set to ON to force external detect"". # <<< Detecting BLAS/LAPACK >>>; #; # - ENV(MATH_ROOT) ""Root directory where BLAS/LAPACK libraries should be detected (e.g., ${MATH_ROOT}/lib/libblas.so)""; # - BLAS_TYPE ""Target BLAS distribution for math detection; # (default: search order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_TYPE ""Target LAPACK distribution for math detection; # (default: search order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_LIBRARIES ""Location of BLAS/LAPACK libraries as "";""-separated list of full paths, bypassing math detection""; # - LAPACK_INCLUDE_DIRS ""Location of BLAS/LAPACK headers (only needed for MKL), bypassing math detection""; # - OpenMP_LIBRARY_DIRS ""Location of OpenMP libraries (iomp5/gomp/omp) as "";""-separated list, hinting OpenMP detection"". # <<< Install >>>; #; # - CMAKE_INSTALL_PREFIX ""Location to which Psi4 and internally built add-ons are installed (default: /usr/local/psi4)""; # - CMAKE_INSTALL_BINDIR ""Location within CMAKE_INSTALL_PREFIX to which executables are installed (default: bin)""; # - CMAKE_INSTALL_LIBDIR ""Location within CMAKE_INSTALL_PREFIX to which libraries are installed (default: lib)""; # - CMAKE_INSTALL_DATADIR ""Location within CMAKE_INSTALL_PREFIX to which resources are installed (default: share)""; # - CMAKE_INSTALL_INCLUDEDIR ""Location within CMAKE_INSTALL_PREFIX to which headers are installed (default: include)""; # - PYMOD_INSTALL_LIBDIR ""Location within CMAKE_INSTALL_LIBDIR to which python modules are installed (default: /); # Must start with: / . Used to imitate python install: /python3.6/site-packages ."". ###############",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:4797,Safety,detect,detection,4797,"xists /path/to/install-libint/lib/libderiv.a)""; # - ${AddOn}_DIR ""Set to directory containing ${AddOn}Config.cmake file to facilitate detection of external build""; # - CMAKE_DISABLE_FIND_PACKAGE_${AddON} ""Set to ON to force internal build""; # - CMAKE_INSIST_FIND_PACKAGE_${AddON} ""Set to ON to force external detect"". # <<< Detecting BLAS/LAPACK >>>; #; # - ENV(MATH_ROOT) ""Root directory where BLAS/LAPACK libraries should be detected (e.g., ${MATH_ROOT}/lib/libblas.so)""; # - BLAS_TYPE ""Target BLAS distribution for math detection; # (default: search order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_TYPE ""Target LAPACK distribution for math detection; # (default: search order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_LIBRARIES ""Location of BLAS/LAPACK libraries as "";""-separated list of full paths, bypassing math detection""; # - LAPACK_INCLUDE_DIRS ""Location of BLAS/LAPACK headers (only needed for MKL), bypassing math detection""; # - OpenMP_LIBRARY_DIRS ""Location of OpenMP libraries (iomp5/gomp/omp) as "";""-separated list, hinting OpenMP detection"". # <<< Install >>>; #; # - CMAKE_INSTALL_PREFIX ""Location to which Psi4 and internally built add-ons are installed (default: /usr/local/psi4)""; # - CMAKE_INSTALL_BINDIR ""Location within CMAKE_INSTALL_PREFIX to which executables are installed (default: bin)""; # - CMAKE_INSTALL_LIBDIR ""Location within CMAKE_INSTALL_PREFIX to which libraries are installed (default: lib)""; # - CMAKE_INSTALL_DATADIR ""Location within CMAKE_INSTALL_PREFIX to which resources are installed (default: share)""; # - CMAKE_INSTALL_INCLUDEDIR ""Location within CMAKE_INSTALL_PREFIX to which headers are installed (default: include)""; # - PYMOD_INSTALL_LIBDIR ""Location within CMAKE_INSTALL_LIBDIR to which python modules are installed (default: /); # Must start with: / . Used to imitate python install: /python3.6/site-packages ."". ###############",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:4918,Safety,detect,detection,4918,"xists /path/to/install-libint/lib/libderiv.a)""; # - ${AddOn}_DIR ""Set to directory containing ${AddOn}Config.cmake file to facilitate detection of external build""; # - CMAKE_DISABLE_FIND_PACKAGE_${AddON} ""Set to ON to force internal build""; # - CMAKE_INSIST_FIND_PACKAGE_${AddON} ""Set to ON to force external detect"". # <<< Detecting BLAS/LAPACK >>>; #; # - ENV(MATH_ROOT) ""Root directory where BLAS/LAPACK libraries should be detected (e.g., ${MATH_ROOT}/lib/libblas.so)""; # - BLAS_TYPE ""Target BLAS distribution for math detection; # (default: search order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_TYPE ""Target LAPACK distribution for math detection; # (default: search order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_LIBRARIES ""Location of BLAS/LAPACK libraries as "";""-separated list of full paths, bypassing math detection""; # - LAPACK_INCLUDE_DIRS ""Location of BLAS/LAPACK headers (only needed for MKL), bypassing math detection""; # - OpenMP_LIBRARY_DIRS ""Location of OpenMP libraries (iomp5/gomp/omp) as "";""-separated list, hinting OpenMP detection"". # <<< Install >>>; #; # - CMAKE_INSTALL_PREFIX ""Location to which Psi4 and internally built add-ons are installed (default: /usr/local/psi4)""; # - CMAKE_INSTALL_BINDIR ""Location within CMAKE_INSTALL_PREFIX to which executables are installed (default: bin)""; # - CMAKE_INSTALL_LIBDIR ""Location within CMAKE_INSTALL_PREFIX to which libraries are installed (default: lib)""; # - CMAKE_INSTALL_DATADIR ""Location within CMAKE_INSTALL_PREFIX to which resources are installed (default: share)""; # - CMAKE_INSTALL_INCLUDEDIR ""Location within CMAKE_INSTALL_PREFIX to which headers are installed (default: include)""; # - PYMOD_INSTALL_LIBDIR ""Location within CMAKE_INSTALL_LIBDIR to which python modules are installed (default: /); # Must start with: / . Used to imitate python install: /python3.6/site-packages ."". ###############",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:9789,Safety,detect,detect,9789,"ified will give *wrong* answers. Consider this your warning.""); endif(). ############################ Options: Build How? #############################; include(psi4OptionsTools); option_with_print(BUILD_SHARED_LIBS ""Build internally built Psi4 add-on libraries as shared, not static"" OFF); option_with_default(CMAKE_BUILD_TYPE ""Build type (Release or Debug)"" Release); include(xhost) # defines: option(ENABLE_XHOST ""Enable processor-specific optimization"" ON); # below are uncommon to adjust; option_with_print(ENABLE_OPENMP ""Enables OpenMP parallelization"" ON); option_with_print(ENABLE_AUTO_BLAS ""Enables CMake to auto-detect BLAS"" ON); option_with_print(ENABLE_AUTO_LAPACK ""Enables CMake to auto-detect LAPACK"" ON); option_with_print(ENABLE_PLUGIN_TESTING ""Test the plugin templates build and run"" OFF); option_with_print(ENABLE_CYTHONIZE ""Compile each python file rather than plaintext (requires cython) !experimental!"" OFF); option_with_flags(ENABLE_CODE_COVERAGE ""Enables details on code coverage"" OFF; ""-ftest-coverage""); option_with_flags(ENABLE_BOUNDS_CHECK ""Enables bounds check in Fortran"" OFF; ""-ftrapuv -check all -fpstkchk"" ""-fcheck=all"" ""-fbounds-check -fcheck-array-temporaries""); option_with_flags(ENABLE_ASAN ""Enables address sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=address -fno-omit-frame-pointer""); option_with_flags(ENABLE_TSAN ""Enables thread sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=thread -fPIE -pie -fno-omit-frame-pointer""); option_with_flags(ENABLE_UBSAN ""Enables undefined behavior sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=undefined -fno-omit-frame-pointer""); option_with_flags(ENABLE_MSAN ""Enables memory sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=memory -fPIE -pie -fno-omit-frame-pointer""); option_with_default(MAX_AM_ERI ""Maximum angular momentum for integrals. The definition changed with Libint2 but still single integer. Default f",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:9867,Safety,detect,detect,9867,"ified will give *wrong* answers. Consider this your warning.""); endif(). ############################ Options: Build How? #############################; include(psi4OptionsTools); option_with_print(BUILD_SHARED_LIBS ""Build internally built Psi4 add-on libraries as shared, not static"" OFF); option_with_default(CMAKE_BUILD_TYPE ""Build type (Release or Debug)"" Release); include(xhost) # defines: option(ENABLE_XHOST ""Enable processor-specific optimization"" ON); # below are uncommon to adjust; option_with_print(ENABLE_OPENMP ""Enables OpenMP parallelization"" ON); option_with_print(ENABLE_AUTO_BLAS ""Enables CMake to auto-detect BLAS"" ON); option_with_print(ENABLE_AUTO_LAPACK ""Enables CMake to auto-detect LAPACK"" ON); option_with_print(ENABLE_PLUGIN_TESTING ""Test the plugin templates build and run"" OFF); option_with_print(ENABLE_CYTHONIZE ""Compile each python file rather than plaintext (requires cython) !experimental!"" OFF); option_with_flags(ENABLE_CODE_COVERAGE ""Enables details on code coverage"" OFF; ""-ftest-coverage""); option_with_flags(ENABLE_BOUNDS_CHECK ""Enables bounds check in Fortran"" OFF; ""-ftrapuv -check all -fpstkchk"" ""-fcheck=all"" ""-fbounds-check -fcheck-array-temporaries""); option_with_flags(ENABLE_ASAN ""Enables address sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=address -fno-omit-frame-pointer""); option_with_flags(ENABLE_TSAN ""Enables thread sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=thread -fPIE -pie -fno-omit-frame-pointer""); option_with_flags(ENABLE_UBSAN ""Enables undefined behavior sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=undefined -fno-omit-frame-pointer""); option_with_flags(ENABLE_MSAN ""Enables memory sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=memory -fPIE -pie -fno-omit-frame-pointer""); option_with_default(MAX_AM_ERI ""Maximum angular momentum for integrals. The definition changed with Libint2 but still single integer. Default f",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:10412,Security,sanitiz,sanitizer,10412,"ified will give *wrong* answers. Consider this your warning.""); endif(). ############################ Options: Build How? #############################; include(psi4OptionsTools); option_with_print(BUILD_SHARED_LIBS ""Build internally built Psi4 add-on libraries as shared, not static"" OFF); option_with_default(CMAKE_BUILD_TYPE ""Build type (Release or Debug)"" Release); include(xhost) # defines: option(ENABLE_XHOST ""Enable processor-specific optimization"" ON); # below are uncommon to adjust; option_with_print(ENABLE_OPENMP ""Enables OpenMP parallelization"" ON); option_with_print(ENABLE_AUTO_BLAS ""Enables CMake to auto-detect BLAS"" ON); option_with_print(ENABLE_AUTO_LAPACK ""Enables CMake to auto-detect LAPACK"" ON); option_with_print(ENABLE_PLUGIN_TESTING ""Test the plugin templates build and run"" OFF); option_with_print(ENABLE_CYTHONIZE ""Compile each python file rather than plaintext (requires cython) !experimental!"" OFF); option_with_flags(ENABLE_CODE_COVERAGE ""Enables details on code coverage"" OFF; ""-ftest-coverage""); option_with_flags(ENABLE_BOUNDS_CHECK ""Enables bounds check in Fortran"" OFF; ""-ftrapuv -check all -fpstkchk"" ""-fcheck=all"" ""-fbounds-check -fcheck-array-temporaries""); option_with_flags(ENABLE_ASAN ""Enables address sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=address -fno-omit-frame-pointer""); option_with_flags(ENABLE_TSAN ""Enables thread sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=thread -fPIE -pie -fno-omit-frame-pointer""); option_with_flags(ENABLE_UBSAN ""Enables undefined behavior sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=undefined -fno-omit-frame-pointer""); option_with_flags(ENABLE_MSAN ""Enables memory sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=memory -fPIE -pie -fno-omit-frame-pointer""); option_with_default(MAX_AM_ERI ""Maximum angular momentum for integrals. The definition changed with Libint2 but still single integer. Default f",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:10568,Security,sanitiz,sanitizer,10568,"ified will give *wrong* answers. Consider this your warning.""); endif(). ############################ Options: Build How? #############################; include(psi4OptionsTools); option_with_print(BUILD_SHARED_LIBS ""Build internally built Psi4 add-on libraries as shared, not static"" OFF); option_with_default(CMAKE_BUILD_TYPE ""Build type (Release or Debug)"" Release); include(xhost) # defines: option(ENABLE_XHOST ""Enable processor-specific optimization"" ON); # below are uncommon to adjust; option_with_print(ENABLE_OPENMP ""Enables OpenMP parallelization"" ON); option_with_print(ENABLE_AUTO_BLAS ""Enables CMake to auto-detect BLAS"" ON); option_with_print(ENABLE_AUTO_LAPACK ""Enables CMake to auto-detect LAPACK"" ON); option_with_print(ENABLE_PLUGIN_TESTING ""Test the plugin templates build and run"" OFF); option_with_print(ENABLE_CYTHONIZE ""Compile each python file rather than plaintext (requires cython) !experimental!"" OFF); option_with_flags(ENABLE_CODE_COVERAGE ""Enables details on code coverage"" OFF; ""-ftest-coverage""); option_with_flags(ENABLE_BOUNDS_CHECK ""Enables bounds check in Fortran"" OFF; ""-ftrapuv -check all -fpstkchk"" ""-fcheck=all"" ""-fbounds-check -fcheck-array-temporaries""); option_with_flags(ENABLE_ASAN ""Enables address sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=address -fno-omit-frame-pointer""); option_with_flags(ENABLE_TSAN ""Enables thread sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=thread -fPIE -pie -fno-omit-frame-pointer""); option_with_flags(ENABLE_UBSAN ""Enables undefined behavior sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=undefined -fno-omit-frame-pointer""); option_with_flags(ENABLE_MSAN ""Enables memory sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=memory -fPIE -pie -fno-omit-frame-pointer""); option_with_default(MAX_AM_ERI ""Maximum angular momentum for integrals. The definition changed with Libint2 but still single integer. Default f",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:10747,Security,sanitiz,sanitizer,10747,"ified will give *wrong* answers. Consider this your warning.""); endif(). ############################ Options: Build How? #############################; include(psi4OptionsTools); option_with_print(BUILD_SHARED_LIBS ""Build internally built Psi4 add-on libraries as shared, not static"" OFF); option_with_default(CMAKE_BUILD_TYPE ""Build type (Release or Debug)"" Release); include(xhost) # defines: option(ENABLE_XHOST ""Enable processor-specific optimization"" ON); # below are uncommon to adjust; option_with_print(ENABLE_OPENMP ""Enables OpenMP parallelization"" ON); option_with_print(ENABLE_AUTO_BLAS ""Enables CMake to auto-detect BLAS"" ON); option_with_print(ENABLE_AUTO_LAPACK ""Enables CMake to auto-detect LAPACK"" ON); option_with_print(ENABLE_PLUGIN_TESTING ""Test the plugin templates build and run"" OFF); option_with_print(ENABLE_CYTHONIZE ""Compile each python file rather than plaintext (requires cython) !experimental!"" OFF); option_with_flags(ENABLE_CODE_COVERAGE ""Enables details on code coverage"" OFF; ""-ftest-coverage""); option_with_flags(ENABLE_BOUNDS_CHECK ""Enables bounds check in Fortran"" OFF; ""-ftrapuv -check all -fpstkchk"" ""-fcheck=all"" ""-fbounds-check -fcheck-array-temporaries""); option_with_flags(ENABLE_ASAN ""Enables address sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=address -fno-omit-frame-pointer""); option_with_flags(ENABLE_TSAN ""Enables thread sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=thread -fPIE -pie -fno-omit-frame-pointer""); option_with_flags(ENABLE_UBSAN ""Enables undefined behavior sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=undefined -fno-omit-frame-pointer""); option_with_flags(ENABLE_MSAN ""Enables memory sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=memory -fPIE -pie -fno-omit-frame-pointer""); option_with_default(MAX_AM_ERI ""Maximum angular momentum for integrals. The definition changed with Libint2 but still single integer. Default f",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:10905,Security,sanitiz,sanitizer,10905,"ified will give *wrong* answers. Consider this your warning.""); endif(). ############################ Options: Build How? #############################; include(psi4OptionsTools); option_with_print(BUILD_SHARED_LIBS ""Build internally built Psi4 add-on libraries as shared, not static"" OFF); option_with_default(CMAKE_BUILD_TYPE ""Build type (Release or Debug)"" Release); include(xhost) # defines: option(ENABLE_XHOST ""Enable processor-specific optimization"" ON); # below are uncommon to adjust; option_with_print(ENABLE_OPENMP ""Enables OpenMP parallelization"" ON); option_with_print(ENABLE_AUTO_BLAS ""Enables CMake to auto-detect BLAS"" ON); option_with_print(ENABLE_AUTO_LAPACK ""Enables CMake to auto-detect LAPACK"" ON); option_with_print(ENABLE_PLUGIN_TESTING ""Test the plugin templates build and run"" OFF); option_with_print(ENABLE_CYTHONIZE ""Compile each python file rather than plaintext (requires cython) !experimental!"" OFF); option_with_flags(ENABLE_CODE_COVERAGE ""Enables details on code coverage"" OFF; ""-ftest-coverage""); option_with_flags(ENABLE_BOUNDS_CHECK ""Enables bounds check in Fortran"" OFF; ""-ftrapuv -check all -fpstkchk"" ""-fcheck=all"" ""-fbounds-check -fcheck-array-temporaries""); option_with_flags(ENABLE_ASAN ""Enables address sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=address -fno-omit-frame-pointer""); option_with_flags(ENABLE_TSAN ""Enables thread sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=thread -fPIE -pie -fno-omit-frame-pointer""); option_with_flags(ENABLE_UBSAN ""Enables undefined behavior sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=undefined -fno-omit-frame-pointer""); option_with_flags(ENABLE_MSAN ""Enables memory sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=memory -fPIE -pie -fno-omit-frame-pointer""); option_with_default(MAX_AM_ERI ""Maximum angular momentum for integrals. The definition changed with Libint2 but still single integer. Default f",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:1259,Testability,test,tests,1259," (CMAKE_VERSION VERSION_GREATER_EQUAL ""3.24.0""); # Avoid warning about DOWNLOAD_EXTRACT_TIMESTAMP in CMake 3.24:; cmake_policy(SET CMP0135 NEW); endif(); # 3.15: useable FindPython with NumPy component and LOCATION; # 3.8: CXX_STANDARD recognizes C++17; # 3.3: EP_add(DEPENDS interfacelib, CheckFortranCompilerFlag; # 3.2: continue(); # 3.1: CMAKE_CXX_STANDARD, BUILD_ALWAYS. set(CMAKE_BUILD_TYPE ""Release"" CACHE STRING ""Choose the type of build."") # foil Ninja Debug on Windows. project(psi4; LANGUAGES C CXX); set(psi4_URL ""http://www.psicode.org/""); set(psi4_EMAIL ""psi4aiqc+cmake@gmail.com""); set(psi4_LICENSE ""GNU Lesser General Public License, version 3 (LGPL-3.0)""); set(psi4_DESCRIPTION ""Open-Source Quantum Chemistry""). list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake). message(STATUS ""Building using CMake ${CMAKE_VERSION} Generator ${CMAKE_GENERATOR}""). ################ Options: Overview and Not Otherwise Mentioned ###############. # <<< CMake build overview >>>; #; # >>> ls; # external/ COPYING psi4/ tests/ ...; # >>> cmake -S. -Bobjdir -DCMAKE_INSTALL_PREFIX=/path/to/install-psi4 ...; # ...; # -- Generating done; # -- Build files have been written to: /current/dir/objdir; # >>> cmake --build objdir --target install -j`getconf _NPROCESSORS_ONLN`. # <<< Required build dependencies that Psi4 can't build itself >>>; #; # - CMake (e.g., `conda install cmake`); # - C++ and C compilers (C++17 compliant); # - BLAS/LAPACK (also runtime; e.g., `conda install mkl-devel`); # - Python (also runtime; interpreter and headers; e.g., `conda install python`); # - NumPy (also runtime; avoidable at buildtime if gau2grid pre-built; e.g., `conda install numpy`); # - networkx >=2.4 (runtime only; e.g., `conda install networkx`); # - pint >=0.10 (runtime only; e.g., `conda install pint -c conda-forge`); # - pydantic >=1.0 (runtime only; e.g., `conda install pydantic -c conda-forge`); # - msgpack-python (runtime only; e.g., `conda install msgpack-python`); # - Eigen (for Li",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:9151,Testability,test,tested,9151,"nabling Fortran language even when Fortran addons enabled. Use when only linking pre-built, not compiling addon code."" OFF). # Append modules added to pasture as needed; if(ENABLE_ccsort OR ENABLE_transqt2); set(ENABLE_pasture ON); message(STATUS ""Enabling pasture plugins""); endif(). if(ENABLE_gdma OR ENABLE_dkh OR ENABLE_erd OR ENABLE_PCMSolver); if(psi4_SKIP_ENABLE_Fortran); message(STATUS ""NOT Enabling Fortran""); else(); enable_language(Fortran); set(Fortran_ENABLED ON) # communicate required languages with psi4-core; message(STATUS ""Enabling Fortran""); endif(); endif(). if(ENABLE_erd); message(FATAL_ERROR ""The Psi4/ERD interface is broken, probably since spring 2017. It's toast (comment this line to try), but disabling for now.""); message(WARNING ""ERD will build, link, and run in Psi4 just fine. However, it has not been hooked into Psi4 in all roles, notably gradients, LRC DFT energies, and ESP. So upon activating through ``set integral_package erd``, known failures will be caught and halted, but perhaps other types not tested and identified will give *wrong* answers. Consider this your warning.""); endif(). ############################ Options: Build How? #############################; include(psi4OptionsTools); option_with_print(BUILD_SHARED_LIBS ""Build internally built Psi4 add-on libraries as shared, not static"" OFF); option_with_default(CMAKE_BUILD_TYPE ""Build type (Release or Debug)"" Release); include(xhost) # defines: option(ENABLE_XHOST ""Enable processor-specific optimization"" ON); # below are uncommon to adjust; option_with_print(ENABLE_OPENMP ""Enables OpenMP parallelization"" ON); option_with_print(ENABLE_AUTO_BLAS ""Enables CMake to auto-detect BLAS"" ON); option_with_print(ENABLE_AUTO_LAPACK ""Enables CMake to auto-detect LAPACK"" ON); option_with_print(ENABLE_PLUGIN_TESTING ""Test the plugin templates build and run"" OFF); option_with_print(ENABLE_CYTHONIZE ""Compile each python file rather than plaintext (requires cython) !experimental!"" OFF); option_with_f",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:13932,Testability,test,tests,13932,"rnal/upstream/libint2/CMakeLists.txt` (requires Ninja)."" OFF); option_with_default(psi4_SHGAUSS_ORDERING ""Ordering for shells of solid harmonic Gaussians: standard -- standard ordering (-l, -l+1 ... l) -or- gaussian -- the Gaussian ordering (0, 1, -1, 2, -2, ... l, -l). Changing this is experimental, expert only, and not a future plan. Internal calculations should be correct and fchk files should be correct, but other exports like Molden and QCSchema.Wavefunction won't be."" gaussian); include(custom_int_orderings). ######################## Process & Validate Options ##########################; include(GNUInstallDirs); include(autocmake_safeguards); include(custom_color_messages). if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT); set(CMAKE_INSTALL_PREFIX ""/usr/local/psi4"" CACHE PATH ""Install path"" FORCE); endif(); message(STATUS ""Psi4 install: ${CMAKE_INSTALL_PREFIX}""). # Python use in psi4 (not incl. external/); # * interpreter: run the versioner in psi4-core. run tests and build docs in psi4; # * headers: Python.h for pybind11 to build against in psi4-core; # * library: not at all. set(Python_ADDITIONAL_VERSIONS 3.12 3.11 3.10 3.9 3.8) # adjust with CMake minimum FindPythonInterp; find_package(Python 3.8 COMPONENTS Interpreter Development NumPy REQUIRED); message(STATUS ""${Cyan}Found Python ${Python_VERSION_MAJOR}.${Python_VERSION_MINOR}${ColourReset}: ${Python_EXECUTABLE} (found version ${Python_VERSION})""). set(STAGED_INSTALL_PREFIX ${CMAKE_BINARY_DIR}/stage); message(STATUS ""Psi4 staging: ${STAGED_INSTALL_PREFIX}""); message(STATUS ""CMAKE_CXX_FLAGS: ${CMAKE_CXX_FLAGS}""); add_subdirectory(external/common); add_subdirectory(external/upstream). # external projects manage their own OpenMP and c++YY flags, so only add to CXX_FLAGS for psi4-core; include(custom_cxxstandard); include(custom_static_library). ################################ Main Project ################################; include(ExternalProject); ExternalProject_Add(psi4-core; DEPENDS lapack_external; hdf5_",MatchSource.DOCS,CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:13048,Availability,error,error,13048," EXCLUDE; # below place extra files the ctests-run-as-pytests need; PATTERN ""adcc/formaldehyde-pe-adc1/fa_6w.pot""; PATTERN ""adcc/formaldehyde-pe-adc2/fa_6w.pot""; PATTERN ""ci-property/grid.dat""; PATTERN ""scf-property/grid.dat""; PATTERN ""mp2-property/grid.dat""; PATTERN ""cubeprop*/*cube.ref""; PATTERN ""fcidump/*INTDUMP.ref""; PATTERN ""psithon2/psiaux1/*""; PATTERN ""psithon2/psiaux1/myplugin1/*""; PATTERN ""psithon2/psiaux2/*""; PATTERN ""dftd3/psithon2/psiaux1/*""; PATTERN ""dftd3/psithon2/psiaux1/myplugin1/*""; PATTERN ""dftd3/psithon2/psiaux2/*""; PATTERN ""mints3/L*dat""; PATTERN ""mints3/P*dat""; ). # <<< install psi4 share/ & include/ >>>. install(DIRECTORY share/psi4/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4; MESSAGE_NEVER; PATTERN ""*.bin"" EXCLUDE; PATTERN ""*.pyc"" EXCLUDE). install(FILES share/psi4/quadratures/1_x/R_avail${_endian_ext}.bin; RENAME quadratures/1_x/R_avail.bin; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4). install(FILES share/psi4/quadratures/1_x/error${_endian_ext}.bin; RENAME quadratures/1_x/error.bin; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4). install(DIRECTORY include/psi4/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_INCLUDEDIR}/psi4). # <<< install external's share/ to psi4 share/ >>>. if(TARGET libefp::efp); # bring libefp's fraglib to PSIDATADIR's attention; set(_fraglib_in_psi4_dir ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4/efpfrag). add_custom_target(consolidate_psidatadir ALL; VERBATIM; COMMAND ${CMAKE_COMMAND} -E make_directory ${_fraglib_in_psi4_dir}; COMMENT ""Symlink external resources into PSIDATADIR""). file(GLOB _dotefps ""${libefp_FRAGLIB_DIRS}/*.efp""); foreach(_dotefp ${_dotefps}); get_filename_component(_efpfile ${_dotefp} NAME); add_custom_command(TARGET consolidate_psidatadir; POST_BUILD; COMMAND ${CMAKE_COMMAND} -E create_symlink ${_dotefp} ${_fraglib_in_psi4_dir}/${_efpfile}); endforeach(); endif(). # <<< Export Config >>>. configure_file(psi4PluginCac",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:13096,Availability,error,error,13096,"un-as-pytests need; PATTERN ""adcc/formaldehyde-pe-adc1/fa_6w.pot""; PATTERN ""adcc/formaldehyde-pe-adc2/fa_6w.pot""; PATTERN ""ci-property/grid.dat""; PATTERN ""scf-property/grid.dat""; PATTERN ""mp2-property/grid.dat""; PATTERN ""cubeprop*/*cube.ref""; PATTERN ""fcidump/*INTDUMP.ref""; PATTERN ""psithon2/psiaux1/*""; PATTERN ""psithon2/psiaux1/myplugin1/*""; PATTERN ""psithon2/psiaux2/*""; PATTERN ""dftd3/psithon2/psiaux1/*""; PATTERN ""dftd3/psithon2/psiaux1/myplugin1/*""; PATTERN ""dftd3/psithon2/psiaux2/*""; PATTERN ""mints3/L*dat""; PATTERN ""mints3/P*dat""; ). # <<< install psi4 share/ & include/ >>>. install(DIRECTORY share/psi4/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4; MESSAGE_NEVER; PATTERN ""*.bin"" EXCLUDE; PATTERN ""*.pyc"" EXCLUDE). install(FILES share/psi4/quadratures/1_x/R_avail${_endian_ext}.bin; RENAME quadratures/1_x/R_avail.bin; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4). install(FILES share/psi4/quadratures/1_x/error${_endian_ext}.bin; RENAME quadratures/1_x/error.bin; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4). install(DIRECTORY include/psi4/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_INCLUDEDIR}/psi4). # <<< install external's share/ to psi4 share/ >>>. if(TARGET libefp::efp); # bring libefp's fraglib to PSIDATADIR's attention; set(_fraglib_in_psi4_dir ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4/efpfrag). add_custom_target(consolidate_psidatadir ALL; VERBATIM; COMMAND ${CMAKE_COMMAND} -E make_directory ${_fraglib_in_psi4_dir}; COMMENT ""Symlink external resources into PSIDATADIR""). file(GLOB _dotefps ""${libefp_FRAGLIB_DIRS}/*.efp""); foreach(_dotefp ${_dotefps}); get_filename_component(_efpfile ${_dotefp} NAME); add_custom_command(TARGET consolidate_psidatadir; POST_BUILD; COMMAND ${CMAKE_COMMAND} -E create_symlink ${_dotefp} ${_fraglib_in_psi4_dir}/${_efpfile}); endforeach(); endif(). # <<< Export Config >>>. configure_file(psi4PluginCache.cmake.in psi4PluginCache.cmake @ONLY). instal",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:9702,Deployability,install,install,9702,"include <cmath> constants, unless _USE_MATH_DEFINES is defined.; # _CRT_* to squash some getenv, strdup, strncpy, ctime, fopen warnings; add_compile_definitions(; _USE_MATH_DEFINES; _CRT_NONSTDC_NO_DEPRECATE; _CRT_NONSTDC_NO_WARNINGS; _CRT_SECURE_NO_WARNINGS; ); # Set the exception handling model; add_compile_options(""/EHsc""); endif(). include_directories(include); include_directories(src); add_subdirectory(src); if(ENABLE_CYTHONIZE); add_subdirectory(driver); endif(). # <<< Version >>>; # * computes version from metadata.py and git info; # * calls cmake to run write_basic_package_version_file. add_custom_target(update_version ALL; COMMAND ${Python_EXECUTABLE} versioner.py --metaout ${CMAKE_CURRENT_BINARY_DIR}/metadata.py; --cmakeout ${CMAKE_CURRENT_BINARY_DIR}/metadata.cmake; COMMAND ${CMAKE_COMMAND} -DWTO=""${CMAKE_CURRENT_BINARY_DIR}/${CMAKECONFIG_INSTALL_DIR}""; -DPN=""psi4""; -P ${CMAKE_CURRENT_BINARY_DIR}/metadata.cmake; WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}; COMMENT ""Generating version info""); install(FILES ${CMAKE_CURRENT_BINARY_DIR}/metadata.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). # <<< Install >>>. # <<< install bin/ >>>; configure_file(run_psi4.py psi4 @ONLY); install(PROGRAMS ${CMAKE_BINARY_DIR}/psi4; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_BINDIR}). if(WIN32); # Generate a batch script, which wraps ""bin/psi4"" script to ""python bin/psi4""; configure_file(psi4.bat psi4.bat @ONLY); install(PROGRAMS ${CMAKE_BINARY_DIR}/psi4.bat; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_BINDIR}); endif(). # <<< install lib/ >>>; if(NOT ENABLE_CYTHONIZE); install(DIRECTORY driver; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4; FILES_MATCHING; PATTERN ""*.py""; PATTERN pytest EXCLUDE; ); endif(). install(FILES header.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). configure_file(__init__.py __init__.py @ONLY); conf",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:9872,Deployability,install,install,9872,"; _CRT_NONSTDC_NO_WARNINGS; _CRT_SECURE_NO_WARNINGS; ); # Set the exception handling model; add_compile_options(""/EHsc""); endif(). include_directories(include); include_directories(src); add_subdirectory(src); if(ENABLE_CYTHONIZE); add_subdirectory(driver); endif(). # <<< Version >>>; # * computes version from metadata.py and git info; # * calls cmake to run write_basic_package_version_file. add_custom_target(update_version ALL; COMMAND ${Python_EXECUTABLE} versioner.py --metaout ${CMAKE_CURRENT_BINARY_DIR}/metadata.py; --cmakeout ${CMAKE_CURRENT_BINARY_DIR}/metadata.cmake; COMMAND ${CMAKE_COMMAND} -DWTO=""${CMAKE_CURRENT_BINARY_DIR}/${CMAKECONFIG_INSTALL_DIR}""; -DPN=""psi4""; -P ${CMAKE_CURRENT_BINARY_DIR}/metadata.cmake; WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}; COMMENT ""Generating version info""); install(FILES ${CMAKE_CURRENT_BINARY_DIR}/metadata.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). # <<< Install >>>. # <<< install bin/ >>>; configure_file(run_psi4.py psi4 @ONLY); install(PROGRAMS ${CMAKE_BINARY_DIR}/psi4; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_BINDIR}). if(WIN32); # Generate a batch script, which wraps ""bin/psi4"" script to ""python bin/psi4""; configure_file(psi4.bat psi4.bat @ONLY); install(PROGRAMS ${CMAKE_BINARY_DIR}/psi4.bat; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_BINDIR}); endif(). # <<< install lib/ >>>; if(NOT ENABLE_CYTHONIZE); install(DIRECTORY driver; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4; FILES_MATCHING; PATTERN ""*.py""; PATTERN pytest EXCLUDE; ); endif(). install(FILES header.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). configure_file(__init__.py __init__.py @ONLY); configure_file(extras.py extras.py @ONLY); install(FILES ${CMAKE_BINARY_DIR}/__init__.py; ${CMAKE_BINARY_DIR}/extras.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). ",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:9930,Deployability,install,install,9930,"model; add_compile_options(""/EHsc""); endif(). include_directories(include); include_directories(src); add_subdirectory(src); if(ENABLE_CYTHONIZE); add_subdirectory(driver); endif(). # <<< Version >>>; # * computes version from metadata.py and git info; # * calls cmake to run write_basic_package_version_file. add_custom_target(update_version ALL; COMMAND ${Python_EXECUTABLE} versioner.py --metaout ${CMAKE_CURRENT_BINARY_DIR}/metadata.py; --cmakeout ${CMAKE_CURRENT_BINARY_DIR}/metadata.cmake; COMMAND ${CMAKE_COMMAND} -DWTO=""${CMAKE_CURRENT_BINARY_DIR}/${CMAKECONFIG_INSTALL_DIR}""; -DPN=""psi4""; -P ${CMAKE_CURRENT_BINARY_DIR}/metadata.cmake; WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}; COMMENT ""Generating version info""); install(FILES ${CMAKE_CURRENT_BINARY_DIR}/metadata.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). # <<< Install >>>. # <<< install bin/ >>>; configure_file(run_psi4.py psi4 @ONLY); install(PROGRAMS ${CMAKE_BINARY_DIR}/psi4; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_BINDIR}). if(WIN32); # Generate a batch script, which wraps ""bin/psi4"" script to ""python bin/psi4""; configure_file(psi4.bat psi4.bat @ONLY); install(PROGRAMS ${CMAKE_BINARY_DIR}/psi4.bat; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_BINDIR}); endif(). # <<< install lib/ >>>; if(NOT ENABLE_CYTHONIZE); install(DIRECTORY driver; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4; FILES_MATCHING; PATTERN ""*.py""; PATTERN pytest EXCLUDE; ); endif(). install(FILES header.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). configure_file(__init__.py __init__.py @ONLY); configure_file(extras.py extras.py @ONLY); install(FILES ${CMAKE_BINARY_DIR}/__init__.py; ${CMAKE_BINARY_DIR}/extras.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). install(; FILES ../pytest.ini; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_L",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:10166,Deployability,install,install,10166,"mputes version from metadata.py and git info; # * calls cmake to run write_basic_package_version_file. add_custom_target(update_version ALL; COMMAND ${Python_EXECUTABLE} versioner.py --metaout ${CMAKE_CURRENT_BINARY_DIR}/metadata.py; --cmakeout ${CMAKE_CURRENT_BINARY_DIR}/metadata.cmake; COMMAND ${CMAKE_COMMAND} -DWTO=""${CMAKE_CURRENT_BINARY_DIR}/${CMAKECONFIG_INSTALL_DIR}""; -DPN=""psi4""; -P ${CMAKE_CURRENT_BINARY_DIR}/metadata.cmake; WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}; COMMENT ""Generating version info""); install(FILES ${CMAKE_CURRENT_BINARY_DIR}/metadata.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). # <<< Install >>>. # <<< install bin/ >>>; configure_file(run_psi4.py psi4 @ONLY); install(PROGRAMS ${CMAKE_BINARY_DIR}/psi4; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_BINDIR}). if(WIN32); # Generate a batch script, which wraps ""bin/psi4"" script to ""python bin/psi4""; configure_file(psi4.bat psi4.bat @ONLY); install(PROGRAMS ${CMAKE_BINARY_DIR}/psi4.bat; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_BINDIR}); endif(). # <<< install lib/ >>>; if(NOT ENABLE_CYTHONIZE); install(DIRECTORY driver; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4; FILES_MATCHING; PATTERN ""*.py""; PATTERN pytest EXCLUDE; ); endif(). install(FILES header.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). configure_file(__init__.py __init__.py @ONLY); configure_file(extras.py extras.py @ONLY); install(FILES ${CMAKE_BINARY_DIR}/__init__.py; ${CMAKE_BINARY_DIR}/extras.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). install(; FILES ../pytest.ini; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4; ); install(; DIRECTORY; ../tests/pytests/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; FILES_MATCHING; PATTERN ""test_*.",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:10290,Deployability,install,install,10290,"KE_CURRENT_BINARY_DIR}/metadata.py; --cmakeout ${CMAKE_CURRENT_BINARY_DIR}/metadata.cmake; COMMAND ${CMAKE_COMMAND} -DWTO=""${CMAKE_CURRENT_BINARY_DIR}/${CMAKECONFIG_INSTALL_DIR}""; -DPN=""psi4""; -P ${CMAKE_CURRENT_BINARY_DIR}/metadata.cmake; WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}; COMMENT ""Generating version info""); install(FILES ${CMAKE_CURRENT_BINARY_DIR}/metadata.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). # <<< Install >>>. # <<< install bin/ >>>; configure_file(run_psi4.py psi4 @ONLY); install(PROGRAMS ${CMAKE_BINARY_DIR}/psi4; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_BINDIR}). if(WIN32); # Generate a batch script, which wraps ""bin/psi4"" script to ""python bin/psi4""; configure_file(psi4.bat psi4.bat @ONLY); install(PROGRAMS ${CMAKE_BINARY_DIR}/psi4.bat; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_BINDIR}); endif(). # <<< install lib/ >>>; if(NOT ENABLE_CYTHONIZE); install(DIRECTORY driver; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4; FILES_MATCHING; PATTERN ""*.py""; PATTERN pytest EXCLUDE; ); endif(). install(FILES header.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). configure_file(__init__.py __init__.py @ONLY); configure_file(extras.py extras.py @ONLY); install(FILES ${CMAKE_BINARY_DIR}/__init__.py; ${CMAKE_BINARY_DIR}/extras.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). install(; FILES ../pytest.ini; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4; ); install(; DIRECTORY; ../tests/pytests/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; FILES_MATCHING; PATTERN ""test_*.py""; PATTERN ""__init__.py""; PATTERN ""addons.py""; PATTERN ""conftest.py""; PATTERN ""standard_suite_runner.py""; PATTERN ""standard_suite_ref_local.py""; PATTERN ""adcc_reference_data.json""; PATTERN ""oei_ref",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:10334,Deployability,install,install,10334,"KE_CURRENT_BINARY_DIR}/metadata.py; --cmakeout ${CMAKE_CURRENT_BINARY_DIR}/metadata.cmake; COMMAND ${CMAKE_COMMAND} -DWTO=""${CMAKE_CURRENT_BINARY_DIR}/${CMAKECONFIG_INSTALL_DIR}""; -DPN=""psi4""; -P ${CMAKE_CURRENT_BINARY_DIR}/metadata.cmake; WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}; COMMENT ""Generating version info""); install(FILES ${CMAKE_CURRENT_BINARY_DIR}/metadata.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). # <<< Install >>>. # <<< install bin/ >>>; configure_file(run_psi4.py psi4 @ONLY); install(PROGRAMS ${CMAKE_BINARY_DIR}/psi4; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_BINDIR}). if(WIN32); # Generate a batch script, which wraps ""bin/psi4"" script to ""python bin/psi4""; configure_file(psi4.bat psi4.bat @ONLY); install(PROGRAMS ${CMAKE_BINARY_DIR}/psi4.bat; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_BINDIR}); endif(). # <<< install lib/ >>>; if(NOT ENABLE_CYTHONIZE); install(DIRECTORY driver; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4; FILES_MATCHING; PATTERN ""*.py""; PATTERN pytest EXCLUDE; ); endif(). install(FILES header.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). configure_file(__init__.py __init__.py @ONLY); configure_file(extras.py extras.py @ONLY); install(FILES ${CMAKE_BINARY_DIR}/__init__.py; ${CMAKE_BINARY_DIR}/extras.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). install(; FILES ../pytest.ini; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4; ); install(; DIRECTORY; ../tests/pytests/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; FILES_MATCHING; PATTERN ""test_*.py""; PATTERN ""__init__.py""; PATTERN ""addons.py""; PATTERN ""conftest.py""; PATTERN ""standard_suite_runner.py""; PATTERN ""standard_suite_ref_local.py""; PATTERN ""adcc_reference_data.json""; PATTERN ""oei_ref",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:10517,Deployability,install,install,10517,"R}/${CMAKECONFIG_INSTALL_DIR}""; -DPN=""psi4""; -P ${CMAKE_CURRENT_BINARY_DIR}/metadata.cmake; WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}; COMMENT ""Generating version info""); install(FILES ${CMAKE_CURRENT_BINARY_DIR}/metadata.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). # <<< Install >>>. # <<< install bin/ >>>; configure_file(run_psi4.py psi4 @ONLY); install(PROGRAMS ${CMAKE_BINARY_DIR}/psi4; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_BINDIR}). if(WIN32); # Generate a batch script, which wraps ""bin/psi4"" script to ""python bin/psi4""; configure_file(psi4.bat psi4.bat @ONLY); install(PROGRAMS ${CMAKE_BINARY_DIR}/psi4.bat; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_BINDIR}); endif(). # <<< install lib/ >>>; if(NOT ENABLE_CYTHONIZE); install(DIRECTORY driver; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4; FILES_MATCHING; PATTERN ""*.py""; PATTERN pytest EXCLUDE; ); endif(). install(FILES header.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). configure_file(__init__.py __init__.py @ONLY); configure_file(extras.py extras.py @ONLY); install(FILES ${CMAKE_BINARY_DIR}/__init__.py; ${CMAKE_BINARY_DIR}/extras.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). install(; FILES ../pytest.ini; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4; ); install(; DIRECTORY; ../tests/pytests/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; FILES_MATCHING; PATTERN ""test_*.py""; PATTERN ""__init__.py""; PATTERN ""addons.py""; PATTERN ""conftest.py""; PATTERN ""standard_suite_runner.py""; PATTERN ""standard_suite_ref_local.py""; PATTERN ""adcc_reference_data.json""; PATTERN ""oei_reference_data.json""; PATTERN ""f12_libint1.json""; PATTERN ""tdscf_reference_data.json""; PATTERN ""utils.py""; ); install(; DIRECTORY; ../tests/pytests/te",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:10722,Deployability,install,install,10722,"_DIR}/metadata.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). # <<< Install >>>. # <<< install bin/ >>>; configure_file(run_psi4.py psi4 @ONLY); install(PROGRAMS ${CMAKE_BINARY_DIR}/psi4; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_BINDIR}). if(WIN32); # Generate a batch script, which wraps ""bin/psi4"" script to ""python bin/psi4""; configure_file(psi4.bat psi4.bat @ONLY); install(PROGRAMS ${CMAKE_BINARY_DIR}/psi4.bat; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_BINDIR}); endif(). # <<< install lib/ >>>; if(NOT ENABLE_CYTHONIZE); install(DIRECTORY driver; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4; FILES_MATCHING; PATTERN ""*.py""; PATTERN pytest EXCLUDE; ); endif(). install(FILES header.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). configure_file(__init__.py __init__.py @ONLY); configure_file(extras.py extras.py @ONLY); install(FILES ${CMAKE_BINARY_DIR}/__init__.py; ${CMAKE_BINARY_DIR}/extras.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). install(; FILES ../pytest.ini; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4; ); install(; DIRECTORY; ../tests/pytests/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; FILES_MATCHING; PATTERN ""test_*.py""; PATTERN ""__init__.py""; PATTERN ""addons.py""; PATTERN ""conftest.py""; PATTERN ""standard_suite_runner.py""; PATTERN ""standard_suite_ref_local.py""; PATTERN ""adcc_reference_data.json""; PATTERN ""oei_reference_data.json""; PATTERN ""f12_libint1.json""; PATTERN ""tdscf_reference_data.json""; PATTERN ""utils.py""; ); install(; DIRECTORY; ../tests/pytests/test_fchk_writer; ../tests/pytests/test_molden_writer; ../tests/pytests/test_psi4_qcschema; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; ). install(; DIRECTORY; .",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:10890,Deployability,install,install,10890,"e_file(run_psi4.py psi4 @ONLY); install(PROGRAMS ${CMAKE_BINARY_DIR}/psi4; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_BINDIR}). if(WIN32); # Generate a batch script, which wraps ""bin/psi4"" script to ""python bin/psi4""; configure_file(psi4.bat psi4.bat @ONLY); install(PROGRAMS ${CMAKE_BINARY_DIR}/psi4.bat; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_BINDIR}); endif(). # <<< install lib/ >>>; if(NOT ENABLE_CYTHONIZE); install(DIRECTORY driver; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4; FILES_MATCHING; PATTERN ""*.py""; PATTERN pytest EXCLUDE; ); endif(). install(FILES header.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). configure_file(__init__.py __init__.py @ONLY); configure_file(extras.py extras.py @ONLY); install(FILES ${CMAKE_BINARY_DIR}/__init__.py; ${CMAKE_BINARY_DIR}/extras.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). install(; FILES ../pytest.ini; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4; ); install(; DIRECTORY; ../tests/pytests/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; FILES_MATCHING; PATTERN ""test_*.py""; PATTERN ""__init__.py""; PATTERN ""addons.py""; PATTERN ""conftest.py""; PATTERN ""standard_suite_runner.py""; PATTERN ""standard_suite_ref_local.py""; PATTERN ""adcc_reference_data.json""; PATTERN ""oei_reference_data.json""; PATTERN ""f12_libint1.json""; PATTERN ""tdscf_reference_data.json""; PATTERN ""utils.py""; ); install(; DIRECTORY; ../tests/pytests/test_fchk_writer; ../tests/pytests/test_molden_writer; ../tests/pytests/test_psi4_qcschema; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; ). install(; DIRECTORY; ../tests/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; FILES_MATCHING; PATTERN ../tests/pytests EXCLUDE; PATT",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:11013,Deployability,install,install,11013,"STINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_BINDIR}). if(WIN32); # Generate a batch script, which wraps ""bin/psi4"" script to ""python bin/psi4""; configure_file(psi4.bat psi4.bat @ONLY); install(PROGRAMS ${CMAKE_BINARY_DIR}/psi4.bat; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_BINDIR}); endif(). # <<< install lib/ >>>; if(NOT ENABLE_CYTHONIZE); install(DIRECTORY driver; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4; FILES_MATCHING; PATTERN ""*.py""; PATTERN pytest EXCLUDE; ); endif(). install(FILES header.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). configure_file(__init__.py __init__.py @ONLY); configure_file(extras.py extras.py @ONLY); install(FILES ${CMAKE_BINARY_DIR}/__init__.py; ${CMAKE_BINARY_DIR}/extras.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). install(; FILES ../pytest.ini; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4; ); install(; DIRECTORY; ../tests/pytests/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; FILES_MATCHING; PATTERN ""test_*.py""; PATTERN ""__init__.py""; PATTERN ""addons.py""; PATTERN ""conftest.py""; PATTERN ""standard_suite_runner.py""; PATTERN ""standard_suite_ref_local.py""; PATTERN ""adcc_reference_data.json""; PATTERN ""oei_reference_data.json""; PATTERN ""f12_libint1.json""; PATTERN ""tdscf_reference_data.json""; PATTERN ""utils.py""; ); install(; DIRECTORY; ../tests/pytests/test_fchk_writer; ../tests/pytests/test_molden_writer; ../tests/pytests/test_psi4_qcschema; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; ). install(; DIRECTORY; ../tests/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; FILES_MATCHING; PATTERN ../tests/pytests EXCLUDE; PATTERN ../tests/cfour EXCLUDE; PATTERN ""test_input.py""; PATTERN ""input.dat""; PATT",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:11487,Deployability,install,install,11487,"t EXCLUDE; ); endif(). install(FILES header.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). configure_file(__init__.py __init__.py @ONLY); configure_file(extras.py extras.py @ONLY); install(FILES ${CMAKE_BINARY_DIR}/__init__.py; ${CMAKE_BINARY_DIR}/extras.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). install(; FILES ../pytest.ini; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4; ); install(; DIRECTORY; ../tests/pytests/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; FILES_MATCHING; PATTERN ""test_*.py""; PATTERN ""__init__.py""; PATTERN ""addons.py""; PATTERN ""conftest.py""; PATTERN ""standard_suite_runner.py""; PATTERN ""standard_suite_ref_local.py""; PATTERN ""adcc_reference_data.json""; PATTERN ""oei_reference_data.json""; PATTERN ""f12_libint1.json""; PATTERN ""tdscf_reference_data.json""; PATTERN ""utils.py""; ); install(; DIRECTORY; ../tests/pytests/test_fchk_writer; ../tests/pytests/test_molden_writer; ../tests/pytests/test_psi4_qcschema; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; ). install(; DIRECTORY; ../tests/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; FILES_MATCHING; PATTERN ../tests/pytests EXCLUDE; PATTERN ../tests/cfour EXCLUDE; PATTERN ""test_input.py""; PATTERN ""input.dat""; PATTERN ""input.py""; PATTERN ""__pycache__"" EXCLUDE; PATTERN ""*pyc"" EXCLUDE; # below place extra files the ctests-run-as-pytests need; PATTERN ""adcc/formaldehyde-pe-adc1/fa_6w.pot""; PATTERN ""adcc/formaldehyde-pe-adc2/fa_6w.pot""; PATTERN ""ci-property/grid.dat""; PATTERN ""scf-property/grid.dat""; PATTERN ""mp2-property/grid.dat""; PATTERN ""cubeprop*/*cube.ref""; PATTERN ""fcidump/*INTDUMP.ref""; PATTERN ""psithon2/psiaux1/*""; PATTERN ""psithon2/psiaux1/myplugin1/*""; PATTERN ""psithon2/psiaux2/*""; PATTERN ""dftd3/psithon2/psiaux1/*""",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:11716,Deployability,install,install,11716,"all(FILES ${CMAKE_BINARY_DIR}/__init__.py; ${CMAKE_BINARY_DIR}/extras.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). install(; FILES ../pytest.ini; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4; ); install(; DIRECTORY; ../tests/pytests/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; FILES_MATCHING; PATTERN ""test_*.py""; PATTERN ""__init__.py""; PATTERN ""addons.py""; PATTERN ""conftest.py""; PATTERN ""standard_suite_runner.py""; PATTERN ""standard_suite_ref_local.py""; PATTERN ""adcc_reference_data.json""; PATTERN ""oei_reference_data.json""; PATTERN ""f12_libint1.json""; PATTERN ""tdscf_reference_data.json""; PATTERN ""utils.py""; ); install(; DIRECTORY; ../tests/pytests/test_fchk_writer; ../tests/pytests/test_molden_writer; ../tests/pytests/test_psi4_qcschema; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; ). install(; DIRECTORY; ../tests/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; FILES_MATCHING; PATTERN ../tests/pytests EXCLUDE; PATTERN ../tests/cfour EXCLUDE; PATTERN ""test_input.py""; PATTERN ""input.dat""; PATTERN ""input.py""; PATTERN ""__pycache__"" EXCLUDE; PATTERN ""*pyc"" EXCLUDE; # below place extra files the ctests-run-as-pytests need; PATTERN ""adcc/formaldehyde-pe-adc1/fa_6w.pot""; PATTERN ""adcc/formaldehyde-pe-adc2/fa_6w.pot""; PATTERN ""ci-property/grid.dat""; PATTERN ""scf-property/grid.dat""; PATTERN ""mp2-property/grid.dat""; PATTERN ""cubeprop*/*cube.ref""; PATTERN ""fcidump/*INTDUMP.ref""; PATTERN ""psithon2/psiaux1/*""; PATTERN ""psithon2/psiaux1/myplugin1/*""; PATTERN ""psithon2/psiaux2/*""; PATTERN ""dftd3/psithon2/psiaux1/*""; PATTERN ""dftd3/psithon2/psiaux1/myplugin1/*""; PATTERN ""dftd3/psithon2/psiaux2/*""; PATTERN ""mints3/L*dat""; PATTERN ""mints3/P*dat""; ). # <<< install psi4 share/ & include/ >>>. install(DIRECTORY share/psi4/; DESTINATION ${CMAKE_INSTA",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:12635,Deployability,install,install,12635,"IX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; ). install(; DIRECTORY; ../tests/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; FILES_MATCHING; PATTERN ../tests/pytests EXCLUDE; PATTERN ../tests/cfour EXCLUDE; PATTERN ""test_input.py""; PATTERN ""input.dat""; PATTERN ""input.py""; PATTERN ""__pycache__"" EXCLUDE; PATTERN ""*pyc"" EXCLUDE; # below place extra files the ctests-run-as-pytests need; PATTERN ""adcc/formaldehyde-pe-adc1/fa_6w.pot""; PATTERN ""adcc/formaldehyde-pe-adc2/fa_6w.pot""; PATTERN ""ci-property/grid.dat""; PATTERN ""scf-property/grid.dat""; PATTERN ""mp2-property/grid.dat""; PATTERN ""cubeprop*/*cube.ref""; PATTERN ""fcidump/*INTDUMP.ref""; PATTERN ""psithon2/psiaux1/*""; PATTERN ""psithon2/psiaux1/myplugin1/*""; PATTERN ""psithon2/psiaux2/*""; PATTERN ""dftd3/psithon2/psiaux1/*""; PATTERN ""dftd3/psithon2/psiaux1/myplugin1/*""; PATTERN ""dftd3/psithon2/psiaux2/*""; PATTERN ""mints3/L*dat""; PATTERN ""mints3/P*dat""; ). # <<< install psi4 share/ & include/ >>>. install(DIRECTORY share/psi4/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4; MESSAGE_NEVER; PATTERN ""*.bin"" EXCLUDE; PATTERN ""*.pyc"" EXCLUDE). install(FILES share/psi4/quadratures/1_x/R_avail${_endian_ext}.bin; RENAME quadratures/1_x/R_avail.bin; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4). install(FILES share/psi4/quadratures/1_x/error${_endian_ext}.bin; RENAME quadratures/1_x/error.bin; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4). install(DIRECTORY include/psi4/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_INCLUDEDIR}/psi4). # <<< install external's share/ to psi4 share/ >>>. if(TARGET libefp::efp); # bring libefp's fraglib to PSIDATADIR's attention; set(_fraglib_in_psi4_dir ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4/efpfrag). add_custom_target(consolidate_psidatadir ALL; VERBATIM; COMMAND ${CMAKE_COMMAND} -E make_directory ${_fraglib_in_psi4_dir}; COMMENT ""Symlink external res",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:12671,Deployability,install,install,12671,"ORY; ../tests/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; FILES_MATCHING; PATTERN ../tests/pytests EXCLUDE; PATTERN ../tests/cfour EXCLUDE; PATTERN ""test_input.py""; PATTERN ""input.dat""; PATTERN ""input.py""; PATTERN ""__pycache__"" EXCLUDE; PATTERN ""*pyc"" EXCLUDE; # below place extra files the ctests-run-as-pytests need; PATTERN ""adcc/formaldehyde-pe-adc1/fa_6w.pot""; PATTERN ""adcc/formaldehyde-pe-adc2/fa_6w.pot""; PATTERN ""ci-property/grid.dat""; PATTERN ""scf-property/grid.dat""; PATTERN ""mp2-property/grid.dat""; PATTERN ""cubeprop*/*cube.ref""; PATTERN ""fcidump/*INTDUMP.ref""; PATTERN ""psithon2/psiaux1/*""; PATTERN ""psithon2/psiaux1/myplugin1/*""; PATTERN ""psithon2/psiaux2/*""; PATTERN ""dftd3/psithon2/psiaux1/*""; PATTERN ""dftd3/psithon2/psiaux1/myplugin1/*""; PATTERN ""dftd3/psithon2/psiaux2/*""; PATTERN ""mints3/L*dat""; PATTERN ""mints3/P*dat""; ). # <<< install psi4 share/ & include/ >>>. install(DIRECTORY share/psi4/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4; MESSAGE_NEVER; PATTERN ""*.bin"" EXCLUDE; PATTERN ""*.pyc"" EXCLUDE). install(FILES share/psi4/quadratures/1_x/R_avail${_endian_ext}.bin; RENAME quadratures/1_x/R_avail.bin; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4). install(FILES share/psi4/quadratures/1_x/error${_endian_ext}.bin; RENAME quadratures/1_x/error.bin; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4). install(DIRECTORY include/psi4/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_INCLUDEDIR}/psi4). # <<< install external's share/ to psi4 share/ >>>. if(TARGET libefp::efp); # bring libefp's fraglib to PSIDATADIR's attention; set(_fraglib_in_psi4_dir ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4/efpfrag). add_custom_target(consolidate_psidatadir ALL; VERBATIM; COMMAND ${CMAKE_COMMAND} -E make_directory ${_fraglib_in_psi4_dir}; COMMENT ""Symlink external resources into PSIDATADIR""). file(GLOB _dotefps ""${libefp_FRAGLIB_DIRS}/*.efp""); foreac",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:12835,Deployability,install,install,12835,"N ../tests/pytests EXCLUDE; PATTERN ../tests/cfour EXCLUDE; PATTERN ""test_input.py""; PATTERN ""input.dat""; PATTERN ""input.py""; PATTERN ""__pycache__"" EXCLUDE; PATTERN ""*pyc"" EXCLUDE; # below place extra files the ctests-run-as-pytests need; PATTERN ""adcc/formaldehyde-pe-adc1/fa_6w.pot""; PATTERN ""adcc/formaldehyde-pe-adc2/fa_6w.pot""; PATTERN ""ci-property/grid.dat""; PATTERN ""scf-property/grid.dat""; PATTERN ""mp2-property/grid.dat""; PATTERN ""cubeprop*/*cube.ref""; PATTERN ""fcidump/*INTDUMP.ref""; PATTERN ""psithon2/psiaux1/*""; PATTERN ""psithon2/psiaux1/myplugin1/*""; PATTERN ""psithon2/psiaux2/*""; PATTERN ""dftd3/psithon2/psiaux1/*""; PATTERN ""dftd3/psithon2/psiaux1/myplugin1/*""; PATTERN ""dftd3/psithon2/psiaux2/*""; PATTERN ""mints3/L*dat""; PATTERN ""mints3/P*dat""; ). # <<< install psi4 share/ & include/ >>>. install(DIRECTORY share/psi4/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4; MESSAGE_NEVER; PATTERN ""*.bin"" EXCLUDE; PATTERN ""*.pyc"" EXCLUDE). install(FILES share/psi4/quadratures/1_x/R_avail${_endian_ext}.bin; RENAME quadratures/1_x/R_avail.bin; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4). install(FILES share/psi4/quadratures/1_x/error${_endian_ext}.bin; RENAME quadratures/1_x/error.bin; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4). install(DIRECTORY include/psi4/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_INCLUDEDIR}/psi4). # <<< install external's share/ to psi4 share/ >>>. if(TARGET libefp::efp); # bring libefp's fraglib to PSIDATADIR's attention; set(_fraglib_in_psi4_dir ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4/efpfrag). add_custom_target(consolidate_psidatadir ALL; VERBATIM; COMMAND ${CMAKE_COMMAND} -E make_directory ${_fraglib_in_psi4_dir}; COMMENT ""Symlink external resources into PSIDATADIR""). file(GLOB _dotefps ""${libefp_FRAGLIB_DIRS}/*.efp""); foreach(_dotefp ${_dotefps}); get_filename_component(_efpfile ${_dotefp} NAME); add_custom_command(TARGET consolidate_psidatadir; POST_BUIL",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:13007,Deployability,install,install,13007," EXCLUDE; # below place extra files the ctests-run-as-pytests need; PATTERN ""adcc/formaldehyde-pe-adc1/fa_6w.pot""; PATTERN ""adcc/formaldehyde-pe-adc2/fa_6w.pot""; PATTERN ""ci-property/grid.dat""; PATTERN ""scf-property/grid.dat""; PATTERN ""mp2-property/grid.dat""; PATTERN ""cubeprop*/*cube.ref""; PATTERN ""fcidump/*INTDUMP.ref""; PATTERN ""psithon2/psiaux1/*""; PATTERN ""psithon2/psiaux1/myplugin1/*""; PATTERN ""psithon2/psiaux2/*""; PATTERN ""dftd3/psithon2/psiaux1/*""; PATTERN ""dftd3/psithon2/psiaux1/myplugin1/*""; PATTERN ""dftd3/psithon2/psiaux2/*""; PATTERN ""mints3/L*dat""; PATTERN ""mints3/P*dat""; ). # <<< install psi4 share/ & include/ >>>. install(DIRECTORY share/psi4/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4; MESSAGE_NEVER; PATTERN ""*.bin"" EXCLUDE; PATTERN ""*.pyc"" EXCLUDE). install(FILES share/psi4/quadratures/1_x/R_avail${_endian_ext}.bin; RENAME quadratures/1_x/R_avail.bin; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4). install(FILES share/psi4/quadratures/1_x/error${_endian_ext}.bin; RENAME quadratures/1_x/error.bin; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4). install(DIRECTORY include/psi4/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_INCLUDEDIR}/psi4). # <<< install external's share/ to psi4 share/ >>>. if(TARGET libefp::efp); # bring libefp's fraglib to PSIDATADIR's attention; set(_fraglib_in_psi4_dir ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4/efpfrag). add_custom_target(consolidate_psidatadir ALL; VERBATIM; COMMAND ${CMAKE_COMMAND} -E make_directory ${_fraglib_in_psi4_dir}; COMMENT ""Symlink external resources into PSIDATADIR""). file(GLOB _dotefps ""${libefp_FRAGLIB_DIRS}/*.efp""); foreach(_dotefp ${_dotefps}); get_filename_component(_efpfile ${_dotefp} NAME); add_custom_command(TARGET consolidate_psidatadir; POST_BUILD; COMMAND ${CMAKE_COMMAND} -E create_symlink ${_dotefp} ${_fraglib_in_psi4_dir}/${_efpfile}); endforeach(); endif(). # <<< Export Config >>>. configure_file(psi4PluginCac",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:13175,Deployability,install,install,13175,"at""; PATTERN ""scf-property/grid.dat""; PATTERN ""mp2-property/grid.dat""; PATTERN ""cubeprop*/*cube.ref""; PATTERN ""fcidump/*INTDUMP.ref""; PATTERN ""psithon2/psiaux1/*""; PATTERN ""psithon2/psiaux1/myplugin1/*""; PATTERN ""psithon2/psiaux2/*""; PATTERN ""dftd3/psithon2/psiaux1/*""; PATTERN ""dftd3/psithon2/psiaux1/myplugin1/*""; PATTERN ""dftd3/psithon2/psiaux2/*""; PATTERN ""mints3/L*dat""; PATTERN ""mints3/P*dat""; ). # <<< install psi4 share/ & include/ >>>. install(DIRECTORY share/psi4/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4; MESSAGE_NEVER; PATTERN ""*.bin"" EXCLUDE; PATTERN ""*.pyc"" EXCLUDE). install(FILES share/psi4/quadratures/1_x/R_avail${_endian_ext}.bin; RENAME quadratures/1_x/R_avail.bin; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4). install(FILES share/psi4/quadratures/1_x/error${_endian_ext}.bin; RENAME quadratures/1_x/error.bin; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4). install(DIRECTORY include/psi4/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_INCLUDEDIR}/psi4). # <<< install external's share/ to psi4 share/ >>>. if(TARGET libefp::efp); # bring libefp's fraglib to PSIDATADIR's attention; set(_fraglib_in_psi4_dir ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4/efpfrag). add_custom_target(consolidate_psidatadir ALL; VERBATIM; COMMAND ${CMAKE_COMMAND} -E make_directory ${_fraglib_in_psi4_dir}; COMMENT ""Symlink external resources into PSIDATADIR""). file(GLOB _dotefps ""${libefp_FRAGLIB_DIRS}/*.efp""); foreach(_dotefp ${_dotefps}); get_filename_component(_efpfile ${_dotefp} NAME); add_custom_command(TARGET consolidate_psidatadir; POST_BUILD; COMMAND ${CMAKE_COMMAND} -E create_symlink ${_dotefp} ${_fraglib_in_psi4_dir}/${_efpfile}); endforeach(); endif(). # <<< Export Config >>>. configure_file(psi4PluginCache.cmake.in psi4PluginCache.cmake @ONLY). install(FILES ${CMAKE_BINARY_DIR}/psi4PluginCache.cmake; ${PSI4_ROOT}/cmake/psi4OptionsTools.cmake; ${PSI4_ROOT}/cmake/custom_static_library.cmake;",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:13285,Deployability,install,install,13285," ""cubeprop*/*cube.ref""; PATTERN ""fcidump/*INTDUMP.ref""; PATTERN ""psithon2/psiaux1/*""; PATTERN ""psithon2/psiaux1/myplugin1/*""; PATTERN ""psithon2/psiaux2/*""; PATTERN ""dftd3/psithon2/psiaux1/*""; PATTERN ""dftd3/psithon2/psiaux1/myplugin1/*""; PATTERN ""dftd3/psithon2/psiaux2/*""; PATTERN ""mints3/L*dat""; PATTERN ""mints3/P*dat""; ). # <<< install psi4 share/ & include/ >>>. install(DIRECTORY share/psi4/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4; MESSAGE_NEVER; PATTERN ""*.bin"" EXCLUDE; PATTERN ""*.pyc"" EXCLUDE). install(FILES share/psi4/quadratures/1_x/R_avail${_endian_ext}.bin; RENAME quadratures/1_x/R_avail.bin; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4). install(FILES share/psi4/quadratures/1_x/error${_endian_ext}.bin; RENAME quadratures/1_x/error.bin; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4). install(DIRECTORY include/psi4/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_INCLUDEDIR}/psi4). # <<< install external's share/ to psi4 share/ >>>. if(TARGET libefp::efp); # bring libefp's fraglib to PSIDATADIR's attention; set(_fraglib_in_psi4_dir ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4/efpfrag). add_custom_target(consolidate_psidatadir ALL; VERBATIM; COMMAND ${CMAKE_COMMAND} -E make_directory ${_fraglib_in_psi4_dir}; COMMENT ""Symlink external resources into PSIDATADIR""). file(GLOB _dotefps ""${libefp_FRAGLIB_DIRS}/*.efp""); foreach(_dotefp ${_dotefps}); get_filename_component(_efpfile ${_dotefp} NAME); add_custom_command(TARGET consolidate_psidatadir; POST_BUILD; COMMAND ${CMAKE_COMMAND} -E create_symlink ${_dotefp} ${_fraglib_in_psi4_dir}/${_efpfile}); endforeach(); endif(). # <<< Export Config >>>. configure_file(psi4PluginCache.cmake.in psi4PluginCache.cmake @ONLY). install(FILES ${CMAKE_BINARY_DIR}/psi4PluginCache.cmake; ${PSI4_ROOT}/cmake/psi4OptionsTools.cmake; ${PSI4_ROOT}/cmake/custom_static_library.cmake; ${PSI4_ROOT}/cmake/custom_cxxstandard.cmake; ${PSI4_ROOT}/cmake/xhost.cmake; ",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:14079,Deployability,install,install,14079,"install(FILES share/psi4/quadratures/1_x/error${_endian_ext}.bin; RENAME quadratures/1_x/error.bin; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4). install(DIRECTORY include/psi4/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_INCLUDEDIR}/psi4). # <<< install external's share/ to psi4 share/ >>>. if(TARGET libefp::efp); # bring libefp's fraglib to PSIDATADIR's attention; set(_fraglib_in_psi4_dir ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4/efpfrag). add_custom_target(consolidate_psidatadir ALL; VERBATIM; COMMAND ${CMAKE_COMMAND} -E make_directory ${_fraglib_in_psi4_dir}; COMMENT ""Symlink external resources into PSIDATADIR""). file(GLOB _dotefps ""${libefp_FRAGLIB_DIRS}/*.efp""); foreach(_dotefp ${_dotefps}); get_filename_component(_efpfile ${_dotefp} NAME); add_custom_command(TARGET consolidate_psidatadir; POST_BUILD; COMMAND ${CMAKE_COMMAND} -E create_symlink ${_dotefp} ${_fraglib_in_psi4_dir}/${_efpfile}); endforeach(); endif(). # <<< Export Config >>>. configure_file(psi4PluginCache.cmake.in psi4PluginCache.cmake @ONLY). install(FILES ${CMAKE_BINARY_DIR}/psi4PluginCache.cmake; ${PSI4_ROOT}/cmake/psi4OptionsTools.cmake; ${PSI4_ROOT}/cmake/custom_static_library.cmake; ${PSI4_ROOT}/cmake/custom_cxxstandard.cmake; ${PSI4_ROOT}/cmake/xhost.cmake; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKECONFIG_INSTALL_DIR}). # <<< Export Config for Plugins >>>; # Determine relative path from Psi4's include directory to PyBind11's; file(RELATIVE_PATH RELATIVE_PYBIND11_INCLUDE_DIR; ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_INCLUDEDIR}; ${pybind11_INCLUDE_DIR}); configure_package_config_file(; psi4Config.cmake.in; ${CMAKE_CURRENT_BINARY_DIR}/${psi4_INSTALL_CMAKEDIR}/psi4Config.cmake; INSTALL_DESTINATION ${CMAKECONFIG_INSTALL_DIR}); install(FILES ${CMAKE_CURRENT_BINARY_DIR}/${psi4_INSTALL_CMAKEDIR}/psi4Config.cmake; ${CMAKE_CURRENT_BINARY_DIR}/${psi4_INSTALL_CMAKEDIR}/psi4ConfigVersion.cmake; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKECONFIG_INSTALL_DIR}); ",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:14779,Deployability,install,install,14779,"install(FILES share/psi4/quadratures/1_x/error${_endian_ext}.bin; RENAME quadratures/1_x/error.bin; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4). install(DIRECTORY include/psi4/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_INCLUDEDIR}/psi4). # <<< install external's share/ to psi4 share/ >>>. if(TARGET libefp::efp); # bring libefp's fraglib to PSIDATADIR's attention; set(_fraglib_in_psi4_dir ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4/efpfrag). add_custom_target(consolidate_psidatadir ALL; VERBATIM; COMMAND ${CMAKE_COMMAND} -E make_directory ${_fraglib_in_psi4_dir}; COMMENT ""Symlink external resources into PSIDATADIR""). file(GLOB _dotefps ""${libefp_FRAGLIB_DIRS}/*.efp""); foreach(_dotefp ${_dotefps}); get_filename_component(_efpfile ${_dotefp} NAME); add_custom_command(TARGET consolidate_psidatadir; POST_BUILD; COMMAND ${CMAKE_COMMAND} -E create_symlink ${_dotefp} ${_fraglib_in_psi4_dir}/${_efpfile}); endforeach(); endif(). # <<< Export Config >>>. configure_file(psi4PluginCache.cmake.in psi4PluginCache.cmake @ONLY). install(FILES ${CMAKE_BINARY_DIR}/psi4PluginCache.cmake; ${PSI4_ROOT}/cmake/psi4OptionsTools.cmake; ${PSI4_ROOT}/cmake/custom_static_library.cmake; ${PSI4_ROOT}/cmake/custom_cxxstandard.cmake; ${PSI4_ROOT}/cmake/xhost.cmake; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKECONFIG_INSTALL_DIR}). # <<< Export Config for Plugins >>>; # Determine relative path from Psi4's include directory to PyBind11's; file(RELATIVE_PATH RELATIVE_PYBIND11_INCLUDE_DIR; ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_INCLUDEDIR}; ${pybind11_INCLUDE_DIR}); configure_package_config_file(; psi4Config.cmake.in; ${CMAKE_CURRENT_BINARY_DIR}/${psi4_INSTALL_CMAKEDIR}/psi4Config.cmake; INSTALL_DESTINATION ${CMAKECONFIG_INSTALL_DIR}); install(FILES ${CMAKE_CURRENT_BINARY_DIR}/${psi4_INSTALL_CMAKEDIR}/psi4Config.cmake; ${CMAKE_CURRENT_BINARY_DIR}/${psi4_INSTALL_CMAKEDIR}/psi4ConfigVersion.cmake; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKECONFIG_INSTALL_DIR}); ",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:1356,Integrability,message,message,1356,"needs to be declared; # for CMAKE_Fortran_IMPLICIT_LINK_LIBRARIES to be populated so; # static Fortran add-ons can be linked; if(${Fortran_ENABLED}); enable_language(Fortran); endif(). if (NOT MSVC); set(CMAKE_C_FLAGS_DEBUG ""-g -O0""); set(CMAKE_CXX_FLAGS_DEBUG ""-g -O0""); endif(). list(APPEND CMAKE_MODULE_PATH ${PSI4_ROOT}/cmake). include(psi4OptionsTools); include(TestRestrict); include(TestBigEndian); include(GNUInstallDirs); include(CMakePackageConfigHelpers); include(custom_color_messages); test_restrict(restrict); test_big_endian(endianness); if(${endianness}); set(_endian_ext "".big""); else(); set(_endian_ext "".little""); endif(); set(CMAKECONFIG_INSTALL_DIR ""${psi4_INSTALL_CMAKEDIR}""). # <<< Marshal Dependencies & Add-ons >>>. set(_addons); set(TargetOpenMP_FIND_COMPONENTS ""CXX""); find_package(TargetLAPACK CONFIG REQUIRED); get_property(_ill TARGET tgt::lapk PROPERTY INTERFACE_LINK_LIBRARIES); list(GET _ill 0 _ill0); get_property(_cd TARGET tgt::lapack PROPERTY INTERFACE_COMPILE_DEFINITIONS); if(${_cd} MATCHES ""USING_LAPACK_MKL""); set(_isMKL "" MKL""); endif(); get_property(_illb TARGET tgt::blas PROPERTY INTERFACE_LINK_LIBRARIES); list(APPEND _addons ${_ill} ${_illb}); message(STATUS ""${Cyan}Using LAPACK${_isMKL}${ColourReset}: ${_ill0};...""). if(ENABLE_ambit OR ENABLE_CheMPS2 OR ENABLE_Einsums); find_package(TargetHDF5 CONFIG REQUIRED); get_property(_ill TARGET tgt::hdf5 PROPERTY INTERFACE_LINK_LIBRARIES); list(GET _ill 0 _ill0); list(APPEND _addons ${_ill}); message(STATUS ""${Cyan}Using HDF5${ColourReset}: ${_ill0};... (found version ${${PN}_VERSION})""); else(); message(STATUS ""Disabled HDF5 ${TargetHDF5_DIR}""); endif(). # << Pybind11 & Python >>; find_package(Python 3.8 COMPONENTS Interpreter Development NumPy REQUIRED); find_package(pybind11 2.6.2 CONFIG REQUIRED); message(STATUS ""${Cyan}Using pybind11${ColourReset}: ${pybind11_INCLUDE_DIR} (version ${pybind11_VERSION} for Py${Python_VERSION} and ${CMAKE_CXX_STANDARD})""); message(STATUS ""${Cyan}Using Python ${",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:1653,Integrability,message,message,1653,"include(GNUInstallDirs); include(CMakePackageConfigHelpers); include(custom_color_messages); test_restrict(restrict); test_big_endian(endianness); if(${endianness}); set(_endian_ext "".big""); else(); set(_endian_ext "".little""); endif(); set(CMAKECONFIG_INSTALL_DIR ""${psi4_INSTALL_CMAKEDIR}""). # <<< Marshal Dependencies & Add-ons >>>. set(_addons); set(TargetOpenMP_FIND_COMPONENTS ""CXX""); find_package(TargetLAPACK CONFIG REQUIRED); get_property(_ill TARGET tgt::lapk PROPERTY INTERFACE_LINK_LIBRARIES); list(GET _ill 0 _ill0); get_property(_cd TARGET tgt::lapack PROPERTY INTERFACE_COMPILE_DEFINITIONS); if(${_cd} MATCHES ""USING_LAPACK_MKL""); set(_isMKL "" MKL""); endif(); get_property(_illb TARGET tgt::blas PROPERTY INTERFACE_LINK_LIBRARIES); list(APPEND _addons ${_ill} ${_illb}); message(STATUS ""${Cyan}Using LAPACK${_isMKL}${ColourReset}: ${_ill0};...""). if(ENABLE_ambit OR ENABLE_CheMPS2 OR ENABLE_Einsums); find_package(TargetHDF5 CONFIG REQUIRED); get_property(_ill TARGET tgt::hdf5 PROPERTY INTERFACE_LINK_LIBRARIES); list(GET _ill 0 _ill0); list(APPEND _addons ${_ill}); message(STATUS ""${Cyan}Using HDF5${ColourReset}: ${_ill0};... (found version ${${PN}_VERSION})""); else(); message(STATUS ""Disabled HDF5 ${TargetHDF5_DIR}""); endif(). # << Pybind11 & Python >>; find_package(Python 3.8 COMPONENTS Interpreter Development NumPy REQUIRED); find_package(pybind11 2.6.2 CONFIG REQUIRED); message(STATUS ""${Cyan}Using pybind11${ColourReset}: ${pybind11_INCLUDE_DIR} (version ${pybind11_VERSION} for Py${Python_VERSION} and ${CMAKE_CXX_STANDARD})""); message(STATUS ""${Cyan}Using Python ${Python_VERSION_MAJOR}.${Python_VERSION_MINOR}${ColourReset}: ${Python_EXECUTABLE}""). find_file(LIBDL_FOUND dlfcn.h); if(LIBDL_FOUND); message(STATUS ""Using DL: ${LIBDL_FOUND} ${CMAKE_DL_LIBS}""); # use ${CMAKE_DL_LIBS} if found to be explicitly needed; else(); message(STATUS ""Disabled DL ${LIBDL_FOUND}""); endif(). if(${ENABLE_ambit}); find_package(ambit 0.6 CONFIG REQUIRED); get_property(_loc TARGET ambi",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:1759,Integrability,message,message,1759,"(); set(_endian_ext "".little""); endif(); set(CMAKECONFIG_INSTALL_DIR ""${psi4_INSTALL_CMAKEDIR}""). # <<< Marshal Dependencies & Add-ons >>>. set(_addons); set(TargetOpenMP_FIND_COMPONENTS ""CXX""); find_package(TargetLAPACK CONFIG REQUIRED); get_property(_ill TARGET tgt::lapk PROPERTY INTERFACE_LINK_LIBRARIES); list(GET _ill 0 _ill0); get_property(_cd TARGET tgt::lapack PROPERTY INTERFACE_COMPILE_DEFINITIONS); if(${_cd} MATCHES ""USING_LAPACK_MKL""); set(_isMKL "" MKL""); endif(); get_property(_illb TARGET tgt::blas PROPERTY INTERFACE_LINK_LIBRARIES); list(APPEND _addons ${_ill} ${_illb}); message(STATUS ""${Cyan}Using LAPACK${_isMKL}${ColourReset}: ${_ill0};...""). if(ENABLE_ambit OR ENABLE_CheMPS2 OR ENABLE_Einsums); find_package(TargetHDF5 CONFIG REQUIRED); get_property(_ill TARGET tgt::hdf5 PROPERTY INTERFACE_LINK_LIBRARIES); list(GET _ill 0 _ill0); list(APPEND _addons ${_ill}); message(STATUS ""${Cyan}Using HDF5${ColourReset}: ${_ill0};... (found version ${${PN}_VERSION})""); else(); message(STATUS ""Disabled HDF5 ${TargetHDF5_DIR}""); endif(). # << Pybind11 & Python >>; find_package(Python 3.8 COMPONENTS Interpreter Development NumPy REQUIRED); find_package(pybind11 2.6.2 CONFIG REQUIRED); message(STATUS ""${Cyan}Using pybind11${ColourReset}: ${pybind11_INCLUDE_DIR} (version ${pybind11_VERSION} for Py${Python_VERSION} and ${CMAKE_CXX_STANDARD})""); message(STATUS ""${Cyan}Using Python ${Python_VERSION_MAJOR}.${Python_VERSION_MINOR}${ColourReset}: ${Python_EXECUTABLE}""). find_file(LIBDL_FOUND dlfcn.h); if(LIBDL_FOUND); message(STATUS ""Using DL: ${LIBDL_FOUND} ${CMAKE_DL_LIBS}""); # use ${CMAKE_DL_LIBS} if found to be explicitly needed; else(); message(STATUS ""Disabled DL ${LIBDL_FOUND}""); endif(). if(${ENABLE_ambit}); find_package(ambit 0.6 CONFIG REQUIRED); get_property(_loc TARGET ambit::ambit PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using ambit${ColourReset}: ${_loc} (version ${ambit_VERSION})""); else(); message(STATUS ""Disabled ambit ${ambit_",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:1968,Integrability,message,message,1968,"ARIES); list(GET _ill 0 _ill0); get_property(_cd TARGET tgt::lapack PROPERTY INTERFACE_COMPILE_DEFINITIONS); if(${_cd} MATCHES ""USING_LAPACK_MKL""); set(_isMKL "" MKL""); endif(); get_property(_illb TARGET tgt::blas PROPERTY INTERFACE_LINK_LIBRARIES); list(APPEND _addons ${_ill} ${_illb}); message(STATUS ""${Cyan}Using LAPACK${_isMKL}${ColourReset}: ${_ill0};...""). if(ENABLE_ambit OR ENABLE_CheMPS2 OR ENABLE_Einsums); find_package(TargetHDF5 CONFIG REQUIRED); get_property(_ill TARGET tgt::hdf5 PROPERTY INTERFACE_LINK_LIBRARIES); list(GET _ill 0 _ill0); list(APPEND _addons ${_ill}); message(STATUS ""${Cyan}Using HDF5${ColourReset}: ${_ill0};... (found version ${${PN}_VERSION})""); else(); message(STATUS ""Disabled HDF5 ${TargetHDF5_DIR}""); endif(). # << Pybind11 & Python >>; find_package(Python 3.8 COMPONENTS Interpreter Development NumPy REQUIRED); find_package(pybind11 2.6.2 CONFIG REQUIRED); message(STATUS ""${Cyan}Using pybind11${ColourReset}: ${pybind11_INCLUDE_DIR} (version ${pybind11_VERSION} for Py${Python_VERSION} and ${CMAKE_CXX_STANDARD})""); message(STATUS ""${Cyan}Using Python ${Python_VERSION_MAJOR}.${Python_VERSION_MINOR}${ColourReset}: ${Python_EXECUTABLE}""). find_file(LIBDL_FOUND dlfcn.h); if(LIBDL_FOUND); message(STATUS ""Using DL: ${LIBDL_FOUND} ${CMAKE_DL_LIBS}""); # use ${CMAKE_DL_LIBS} if found to be explicitly needed; else(); message(STATUS ""Disabled DL ${LIBDL_FOUND}""); endif(). if(${ENABLE_ambit}); find_package(ambit 0.6 CONFIG REQUIRED); get_property(_loc TARGET ambit::ambit PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using ambit${ColourReset}: ${_loc} (version ${ambit_VERSION})""); else(); message(STATUS ""Disabled ambit ${ambit_DIR}""); endif (). if(${ENABLE_CheMPS2}); find_package(CheMPS2 1.8.7 CONFIG REQUIRED); get_property(_loc TARGET CheMPS2::chemps2 PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using CheMPS2${ColourReset}: ${_loc} (version ${CheMPS2_VERSION})""); else(); message(STATUS ""Disabled",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:2128,Integrability,message,message,2128,"ARIES); list(GET _ill 0 _ill0); get_property(_cd TARGET tgt::lapack PROPERTY INTERFACE_COMPILE_DEFINITIONS); if(${_cd} MATCHES ""USING_LAPACK_MKL""); set(_isMKL "" MKL""); endif(); get_property(_illb TARGET tgt::blas PROPERTY INTERFACE_LINK_LIBRARIES); list(APPEND _addons ${_ill} ${_illb}); message(STATUS ""${Cyan}Using LAPACK${_isMKL}${ColourReset}: ${_ill0};...""). if(ENABLE_ambit OR ENABLE_CheMPS2 OR ENABLE_Einsums); find_package(TargetHDF5 CONFIG REQUIRED); get_property(_ill TARGET tgt::hdf5 PROPERTY INTERFACE_LINK_LIBRARIES); list(GET _ill 0 _ill0); list(APPEND _addons ${_ill}); message(STATUS ""${Cyan}Using HDF5${ColourReset}: ${_ill0};... (found version ${${PN}_VERSION})""); else(); message(STATUS ""Disabled HDF5 ${TargetHDF5_DIR}""); endif(). # << Pybind11 & Python >>; find_package(Python 3.8 COMPONENTS Interpreter Development NumPy REQUIRED); find_package(pybind11 2.6.2 CONFIG REQUIRED); message(STATUS ""${Cyan}Using pybind11${ColourReset}: ${pybind11_INCLUDE_DIR} (version ${pybind11_VERSION} for Py${Python_VERSION} and ${CMAKE_CXX_STANDARD})""); message(STATUS ""${Cyan}Using Python ${Python_VERSION_MAJOR}.${Python_VERSION_MINOR}${ColourReset}: ${Python_EXECUTABLE}""). find_file(LIBDL_FOUND dlfcn.h); if(LIBDL_FOUND); message(STATUS ""Using DL: ${LIBDL_FOUND} ${CMAKE_DL_LIBS}""); # use ${CMAKE_DL_LIBS} if found to be explicitly needed; else(); message(STATUS ""Disabled DL ${LIBDL_FOUND}""); endif(). if(${ENABLE_ambit}); find_package(ambit 0.6 CONFIG REQUIRED); get_property(_loc TARGET ambit::ambit PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using ambit${ColourReset}: ${_loc} (version ${ambit_VERSION})""); else(); message(STATUS ""Disabled ambit ${ambit_DIR}""); endif (). if(${ENABLE_CheMPS2}); find_package(CheMPS2 1.8.7 CONFIG REQUIRED); get_property(_loc TARGET CheMPS2::chemps2 PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using CheMPS2${ColourReset}: ${_loc} (version ${CheMPS2_VERSION})""); else(); message(STATUS ""Disabled",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:2300,Integrability,message,message,2300,"Using LAPACK${_isMKL}${ColourReset}: ${_ill0};...""). if(ENABLE_ambit OR ENABLE_CheMPS2 OR ENABLE_Einsums); find_package(TargetHDF5 CONFIG REQUIRED); get_property(_ill TARGET tgt::hdf5 PROPERTY INTERFACE_LINK_LIBRARIES); list(GET _ill 0 _ill0); list(APPEND _addons ${_ill}); message(STATUS ""${Cyan}Using HDF5${ColourReset}: ${_ill0};... (found version ${${PN}_VERSION})""); else(); message(STATUS ""Disabled HDF5 ${TargetHDF5_DIR}""); endif(). # << Pybind11 & Python >>; find_package(Python 3.8 COMPONENTS Interpreter Development NumPy REQUIRED); find_package(pybind11 2.6.2 CONFIG REQUIRED); message(STATUS ""${Cyan}Using pybind11${ColourReset}: ${pybind11_INCLUDE_DIR} (version ${pybind11_VERSION} for Py${Python_VERSION} and ${CMAKE_CXX_STANDARD})""); message(STATUS ""${Cyan}Using Python ${Python_VERSION_MAJOR}.${Python_VERSION_MINOR}${ColourReset}: ${Python_EXECUTABLE}""). find_file(LIBDL_FOUND dlfcn.h); if(LIBDL_FOUND); message(STATUS ""Using DL: ${LIBDL_FOUND} ${CMAKE_DL_LIBS}""); # use ${CMAKE_DL_LIBS} if found to be explicitly needed; else(); message(STATUS ""Disabled DL ${LIBDL_FOUND}""); endif(). if(${ENABLE_ambit}); find_package(ambit 0.6 CONFIG REQUIRED); get_property(_loc TARGET ambit::ambit PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using ambit${ColourReset}: ${_loc} (version ${ambit_VERSION})""); else(); message(STATUS ""Disabled ambit ${ambit_DIR}""); endif (). if(${ENABLE_CheMPS2}); find_package(CheMPS2 1.8.7 CONFIG REQUIRED); get_property(_loc TARGET CheMPS2::chemps2 PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using CheMPS2${ColourReset}: ${_loc} (version ${CheMPS2_VERSION})""); else(); message(STATUS ""Disabled CheMPS2 ${CheMPS2_DIR}""); endif (). if(${ENABLE_dkh}); find_package(dkh 1.2 CONFIG REQUIRED); get_property(_loc TARGET dkh::dkh PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using dkh${ColourReset}: ${_loc} (version ${dkh_VERSION})""); else(); message(STATUS ""Disabled dkh ${dkh_DIR}"")",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:2426,Integrability,message,message,2426,"Using LAPACK${_isMKL}${ColourReset}: ${_ill0};...""). if(ENABLE_ambit OR ENABLE_CheMPS2 OR ENABLE_Einsums); find_package(TargetHDF5 CONFIG REQUIRED); get_property(_ill TARGET tgt::hdf5 PROPERTY INTERFACE_LINK_LIBRARIES); list(GET _ill 0 _ill0); list(APPEND _addons ${_ill}); message(STATUS ""${Cyan}Using HDF5${ColourReset}: ${_ill0};... (found version ${${PN}_VERSION})""); else(); message(STATUS ""Disabled HDF5 ${TargetHDF5_DIR}""); endif(). # << Pybind11 & Python >>; find_package(Python 3.8 COMPONENTS Interpreter Development NumPy REQUIRED); find_package(pybind11 2.6.2 CONFIG REQUIRED); message(STATUS ""${Cyan}Using pybind11${ColourReset}: ${pybind11_INCLUDE_DIR} (version ${pybind11_VERSION} for Py${Python_VERSION} and ${CMAKE_CXX_STANDARD})""); message(STATUS ""${Cyan}Using Python ${Python_VERSION_MAJOR}.${Python_VERSION_MINOR}${ColourReset}: ${Python_EXECUTABLE}""). find_file(LIBDL_FOUND dlfcn.h); if(LIBDL_FOUND); message(STATUS ""Using DL: ${LIBDL_FOUND} ${CMAKE_DL_LIBS}""); # use ${CMAKE_DL_LIBS} if found to be explicitly needed; else(); message(STATUS ""Disabled DL ${LIBDL_FOUND}""); endif(). if(${ENABLE_ambit}); find_package(ambit 0.6 CONFIG REQUIRED); get_property(_loc TARGET ambit::ambit PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using ambit${ColourReset}: ${_loc} (version ${ambit_VERSION})""); else(); message(STATUS ""Disabled ambit ${ambit_DIR}""); endif (). if(${ENABLE_CheMPS2}); find_package(CheMPS2 1.8.7 CONFIG REQUIRED); get_property(_loc TARGET CheMPS2::chemps2 PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using CheMPS2${ColourReset}: ${_loc} (version ${CheMPS2_VERSION})""); else(); message(STATUS ""Disabled CheMPS2 ${CheMPS2_DIR}""); endif (). if(${ENABLE_dkh}); find_package(dkh 1.2 CONFIG REQUIRED); get_property(_loc TARGET dkh::dkh PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using dkh${ColourReset}: ${_loc} (version ${dkh_VERSION})""); else(); message(STATUS ""Disabled dkh ${dkh_DIR}"")",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:2631,Integrability,message,message,2631,"message(STATUS ""${Cyan}Using HDF5${ColourReset}: ${_ill0};... (found version ${${PN}_VERSION})""); else(); message(STATUS ""Disabled HDF5 ${TargetHDF5_DIR}""); endif(). # << Pybind11 & Python >>; find_package(Python 3.8 COMPONENTS Interpreter Development NumPy REQUIRED); find_package(pybind11 2.6.2 CONFIG REQUIRED); message(STATUS ""${Cyan}Using pybind11${ColourReset}: ${pybind11_INCLUDE_DIR} (version ${pybind11_VERSION} for Py${Python_VERSION} and ${CMAKE_CXX_STANDARD})""); message(STATUS ""${Cyan}Using Python ${Python_VERSION_MAJOR}.${Python_VERSION_MINOR}${ColourReset}: ${Python_EXECUTABLE}""). find_file(LIBDL_FOUND dlfcn.h); if(LIBDL_FOUND); message(STATUS ""Using DL: ${LIBDL_FOUND} ${CMAKE_DL_LIBS}""); # use ${CMAKE_DL_LIBS} if found to be explicitly needed; else(); message(STATUS ""Disabled DL ${LIBDL_FOUND}""); endif(). if(${ENABLE_ambit}); find_package(ambit 0.6 CONFIG REQUIRED); get_property(_loc TARGET ambit::ambit PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using ambit${ColourReset}: ${_loc} (version ${ambit_VERSION})""); else(); message(STATUS ""Disabled ambit ${ambit_DIR}""); endif (). if(${ENABLE_CheMPS2}); find_package(CheMPS2 1.8.7 CONFIG REQUIRED); get_property(_loc TARGET CheMPS2::chemps2 PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using CheMPS2${ColourReset}: ${_loc} (version ${CheMPS2_VERSION})""); else(); message(STATUS ""Disabled CheMPS2 ${CheMPS2_DIR}""); endif (). if(${ENABLE_dkh}); find_package(dkh 1.2 CONFIG REQUIRED); get_property(_loc TARGET dkh::dkh PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using dkh${ColourReset}: ${_loc} (version ${dkh_VERSION})""); else(); message(STATUS ""Disabled dkh ${dkh_DIR}""); endif(). if(${ENABLE_ecpint}); find_package(ecpint 1.0.7 CONFIG REQUIRED); get_property(_loc TARGET ECPINT::ecpint PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using ecpint${ColourReset}: ${_loc} (version ${ecpint_VERSION})""); else(); message(",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:2727,Integrability,message,message,2727,"message(STATUS ""${Cyan}Using HDF5${ColourReset}: ${_ill0};... (found version ${${PN}_VERSION})""); else(); message(STATUS ""Disabled HDF5 ${TargetHDF5_DIR}""); endif(). # << Pybind11 & Python >>; find_package(Python 3.8 COMPONENTS Interpreter Development NumPy REQUIRED); find_package(pybind11 2.6.2 CONFIG REQUIRED); message(STATUS ""${Cyan}Using pybind11${ColourReset}: ${pybind11_INCLUDE_DIR} (version ${pybind11_VERSION} for Py${Python_VERSION} and ${CMAKE_CXX_STANDARD})""); message(STATUS ""${Cyan}Using Python ${Python_VERSION_MAJOR}.${Python_VERSION_MINOR}${ColourReset}: ${Python_EXECUTABLE}""). find_file(LIBDL_FOUND dlfcn.h); if(LIBDL_FOUND); message(STATUS ""Using DL: ${LIBDL_FOUND} ${CMAKE_DL_LIBS}""); # use ${CMAKE_DL_LIBS} if found to be explicitly needed; else(); message(STATUS ""Disabled DL ${LIBDL_FOUND}""); endif(). if(${ENABLE_ambit}); find_package(ambit 0.6 CONFIG REQUIRED); get_property(_loc TARGET ambit::ambit PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using ambit${ColourReset}: ${_loc} (version ${ambit_VERSION})""); else(); message(STATUS ""Disabled ambit ${ambit_DIR}""); endif (). if(${ENABLE_CheMPS2}); find_package(CheMPS2 1.8.7 CONFIG REQUIRED); get_property(_loc TARGET CheMPS2::chemps2 PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using CheMPS2${ColourReset}: ${_loc} (version ${CheMPS2_VERSION})""); else(); message(STATUS ""Disabled CheMPS2 ${CheMPS2_DIR}""); endif (). if(${ENABLE_dkh}); find_package(dkh 1.2 CONFIG REQUIRED); get_property(_loc TARGET dkh::dkh PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using dkh${ColourReset}: ${_loc} (version ${dkh_VERSION})""); else(); message(STATUS ""Disabled dkh ${dkh_DIR}""); endif(). if(${ENABLE_ecpint}); find_package(ecpint 1.0.7 CONFIG REQUIRED); get_property(_loc TARGET ECPINT::ecpint PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using ecpint${ColourReset}: ${_loc} (version ${ecpint_VERSION})""); else(); message(",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:2944,Integrability,message,message,2944,"message(STATUS ""${Cyan}Using pybind11${ColourReset}: ${pybind11_INCLUDE_DIR} (version ${pybind11_VERSION} for Py${Python_VERSION} and ${CMAKE_CXX_STANDARD})""); message(STATUS ""${Cyan}Using Python ${Python_VERSION_MAJOR}.${Python_VERSION_MINOR}${ColourReset}: ${Python_EXECUTABLE}""). find_file(LIBDL_FOUND dlfcn.h); if(LIBDL_FOUND); message(STATUS ""Using DL: ${LIBDL_FOUND} ${CMAKE_DL_LIBS}""); # use ${CMAKE_DL_LIBS} if found to be explicitly needed; else(); message(STATUS ""Disabled DL ${LIBDL_FOUND}""); endif(). if(${ENABLE_ambit}); find_package(ambit 0.6 CONFIG REQUIRED); get_property(_loc TARGET ambit::ambit PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using ambit${ColourReset}: ${_loc} (version ${ambit_VERSION})""); else(); message(STATUS ""Disabled ambit ${ambit_DIR}""); endif (). if(${ENABLE_CheMPS2}); find_package(CheMPS2 1.8.7 CONFIG REQUIRED); get_property(_loc TARGET CheMPS2::chemps2 PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using CheMPS2${ColourReset}: ${_loc} (version ${CheMPS2_VERSION})""); else(); message(STATUS ""Disabled CheMPS2 ${CheMPS2_DIR}""); endif (). if(${ENABLE_dkh}); find_package(dkh 1.2 CONFIG REQUIRED); get_property(_loc TARGET dkh::dkh PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using dkh${ColourReset}: ${_loc} (version ${dkh_VERSION})""); else(); message(STATUS ""Disabled dkh ${dkh_DIR}""); endif(). if(${ENABLE_ecpint}); find_package(ecpint 1.0.7 CONFIG REQUIRED); get_property(_loc TARGET ECPINT::ecpint PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using ecpint${ColourReset}: ${_loc} (version ${ecpint_VERSION})""); else(); message(STATUS ""Disabled ecpint ${ecpint_DIR}""); endif(). if(${ENABLE_libefp}); # neither libefp nor pylibefp actually needed c-side; runtime detection would; # do just as well. included for completeness and so pylibefp_PYMOD can be; # hard-loaded into PYTHONPATH. also incl for finding efp frag files below.; find_package(",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:3044,Integrability,message,message,3044,"message(STATUS ""${Cyan}Using pybind11${ColourReset}: ${pybind11_INCLUDE_DIR} (version ${pybind11_VERSION} for Py${Python_VERSION} and ${CMAKE_CXX_STANDARD})""); message(STATUS ""${Cyan}Using Python ${Python_VERSION_MAJOR}.${Python_VERSION_MINOR}${ColourReset}: ${Python_EXECUTABLE}""). find_file(LIBDL_FOUND dlfcn.h); if(LIBDL_FOUND); message(STATUS ""Using DL: ${LIBDL_FOUND} ${CMAKE_DL_LIBS}""); # use ${CMAKE_DL_LIBS} if found to be explicitly needed; else(); message(STATUS ""Disabled DL ${LIBDL_FOUND}""); endif(). if(${ENABLE_ambit}); find_package(ambit 0.6 CONFIG REQUIRED); get_property(_loc TARGET ambit::ambit PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using ambit${ColourReset}: ${_loc} (version ${ambit_VERSION})""); else(); message(STATUS ""Disabled ambit ${ambit_DIR}""); endif (). if(${ENABLE_CheMPS2}); find_package(CheMPS2 1.8.7 CONFIG REQUIRED); get_property(_loc TARGET CheMPS2::chemps2 PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using CheMPS2${ColourReset}: ${_loc} (version ${CheMPS2_VERSION})""); else(); message(STATUS ""Disabled CheMPS2 ${CheMPS2_DIR}""); endif (). if(${ENABLE_dkh}); find_package(dkh 1.2 CONFIG REQUIRED); get_property(_loc TARGET dkh::dkh PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using dkh${ColourReset}: ${_loc} (version ${dkh_VERSION})""); else(); message(STATUS ""Disabled dkh ${dkh_DIR}""); endif(). if(${ENABLE_ecpint}); find_package(ecpint 1.0.7 CONFIG REQUIRED); get_property(_loc TARGET ECPINT::ecpint PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using ecpint${ColourReset}: ${_loc} (version ${ecpint_VERSION})""); else(); message(STATUS ""Disabled ecpint ${ecpint_DIR}""); endif(). if(${ENABLE_libefp}); # neither libefp nor pylibefp actually needed c-side; runtime detection would; # do just as well. included for completeness and so pylibefp_PYMOD can be; # hard-loaded into PYTHONPATH. also incl for finding efp frag files below.; find_package(",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:3247,Integrability,message,message,3247,"_FOUND dlfcn.h); if(LIBDL_FOUND); message(STATUS ""Using DL: ${LIBDL_FOUND} ${CMAKE_DL_LIBS}""); # use ${CMAKE_DL_LIBS} if found to be explicitly needed; else(); message(STATUS ""Disabled DL ${LIBDL_FOUND}""); endif(). if(${ENABLE_ambit}); find_package(ambit 0.6 CONFIG REQUIRED); get_property(_loc TARGET ambit::ambit PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using ambit${ColourReset}: ${_loc} (version ${ambit_VERSION})""); else(); message(STATUS ""Disabled ambit ${ambit_DIR}""); endif (). if(${ENABLE_CheMPS2}); find_package(CheMPS2 1.8.7 CONFIG REQUIRED); get_property(_loc TARGET CheMPS2::chemps2 PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using CheMPS2${ColourReset}: ${_loc} (version ${CheMPS2_VERSION})""); else(); message(STATUS ""Disabled CheMPS2 ${CheMPS2_DIR}""); endif (). if(${ENABLE_dkh}); find_package(dkh 1.2 CONFIG REQUIRED); get_property(_loc TARGET dkh::dkh PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using dkh${ColourReset}: ${_loc} (version ${dkh_VERSION})""); else(); message(STATUS ""Disabled dkh ${dkh_DIR}""); endif(). if(${ENABLE_ecpint}); find_package(ecpint 1.0.7 CONFIG REQUIRED); get_property(_loc TARGET ECPINT::ecpint PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using ecpint${ColourReset}: ${_loc} (version ${ecpint_VERSION})""); else(); message(STATUS ""Disabled ecpint ${ecpint_DIR}""); endif(). if(${ENABLE_libefp}); # neither libefp nor pylibefp actually needed c-side; runtime detection would; # do just as well. included for completeness and so pylibefp_PYMOD can be; # hard-loaded into PYTHONPATH. also incl for finding efp frag files below.; find_package(libefp 1.5.0 CONFIG REQUIRED COMPONENTS shallow); get_property(_loc TARGET libefp::efp PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using libefp${ColourReset}: ${_loc} (version ${libefp_VERSION})""). #find_package(pylibefp 0.6.1 CONFIG REQUIRED); #get_property(_loc TARGET",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:3339,Integrability,message,message,3339,"_FOUND dlfcn.h); if(LIBDL_FOUND); message(STATUS ""Using DL: ${LIBDL_FOUND} ${CMAKE_DL_LIBS}""); # use ${CMAKE_DL_LIBS} if found to be explicitly needed; else(); message(STATUS ""Disabled DL ${LIBDL_FOUND}""); endif(). if(${ENABLE_ambit}); find_package(ambit 0.6 CONFIG REQUIRED); get_property(_loc TARGET ambit::ambit PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using ambit${ColourReset}: ${_loc} (version ${ambit_VERSION})""); else(); message(STATUS ""Disabled ambit ${ambit_DIR}""); endif (). if(${ENABLE_CheMPS2}); find_package(CheMPS2 1.8.7 CONFIG REQUIRED); get_property(_loc TARGET CheMPS2::chemps2 PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using CheMPS2${ColourReset}: ${_loc} (version ${CheMPS2_VERSION})""); else(); message(STATUS ""Disabled CheMPS2 ${CheMPS2_DIR}""); endif (). if(${ENABLE_dkh}); find_package(dkh 1.2 CONFIG REQUIRED); get_property(_loc TARGET dkh::dkh PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using dkh${ColourReset}: ${_loc} (version ${dkh_VERSION})""); else(); message(STATUS ""Disabled dkh ${dkh_DIR}""); endif(). if(${ENABLE_ecpint}); find_package(ecpint 1.0.7 CONFIG REQUIRED); get_property(_loc TARGET ECPINT::ecpint PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using ecpint${ColourReset}: ${_loc} (version ${ecpint_VERSION})""); else(); message(STATUS ""Disabled ecpint ${ecpint_DIR}""); endif(). if(${ENABLE_libefp}); # neither libefp nor pylibefp actually needed c-side; runtime detection would; # do just as well. included for completeness and so pylibefp_PYMOD can be; # hard-loaded into PYTHONPATH. also incl for finding efp frag files below.; find_package(libefp 1.5.0 CONFIG REQUIRED COMPONENTS shallow); get_property(_loc TARGET libefp::efp PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using libefp${ColourReset}: ${_loc} (version ${libefp_VERSION})""). #find_package(pylibefp 0.6.1 CONFIG REQUIRED); #get_property(_loc TARGET",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:3547,Integrability,message,message,3547,"mbit::ambit PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using ambit${ColourReset}: ${_loc} (version ${ambit_VERSION})""); else(); message(STATUS ""Disabled ambit ${ambit_DIR}""); endif (). if(${ENABLE_CheMPS2}); find_package(CheMPS2 1.8.7 CONFIG REQUIRED); get_property(_loc TARGET CheMPS2::chemps2 PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using CheMPS2${ColourReset}: ${_loc} (version ${CheMPS2_VERSION})""); else(); message(STATUS ""Disabled CheMPS2 ${CheMPS2_DIR}""); endif (). if(${ENABLE_dkh}); find_package(dkh 1.2 CONFIG REQUIRED); get_property(_loc TARGET dkh::dkh PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using dkh${ColourReset}: ${_loc} (version ${dkh_VERSION})""); else(); message(STATUS ""Disabled dkh ${dkh_DIR}""); endif(). if(${ENABLE_ecpint}); find_package(ecpint 1.0.7 CONFIG REQUIRED); get_property(_loc TARGET ECPINT::ecpint PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using ecpint${ColourReset}: ${_loc} (version ${ecpint_VERSION})""); else(); message(STATUS ""Disabled ecpint ${ecpint_DIR}""); endif(). if(${ENABLE_libefp}); # neither libefp nor pylibefp actually needed c-side; runtime detection would; # do just as well. included for completeness and so pylibefp_PYMOD can be; # hard-loaded into PYTHONPATH. also incl for finding efp frag files below.; find_package(libefp 1.5.0 CONFIG REQUIRED COMPONENTS shallow); get_property(_loc TARGET libefp::efp PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using libefp${ColourReset}: ${_loc} (version ${libefp_VERSION})""). #find_package(pylibefp 0.6.1 CONFIG REQUIRED); #get_property(_loc TARGET pylibefp::core PROPERTY LOCATION); include(FindPythonModule); find_python_module(pylibefp QUIET REQUIRED); #list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using pylibefp${ColourReset}: ${_loc} (version ${pylibefp_VERSION})""); else(); message(STATUS ""Disabled libefp ${libefp_DIR} ${pylibefp_DIR}""",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:3645,Integrability,message,message,3645,"mbit::ambit PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using ambit${ColourReset}: ${_loc} (version ${ambit_VERSION})""); else(); message(STATUS ""Disabled ambit ${ambit_DIR}""); endif (). if(${ENABLE_CheMPS2}); find_package(CheMPS2 1.8.7 CONFIG REQUIRED); get_property(_loc TARGET CheMPS2::chemps2 PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using CheMPS2${ColourReset}: ${_loc} (version ${CheMPS2_VERSION})""); else(); message(STATUS ""Disabled CheMPS2 ${CheMPS2_DIR}""); endif (). if(${ENABLE_dkh}); find_package(dkh 1.2 CONFIG REQUIRED); get_property(_loc TARGET dkh::dkh PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using dkh${ColourReset}: ${_loc} (version ${dkh_VERSION})""); else(); message(STATUS ""Disabled dkh ${dkh_DIR}""); endif(). if(${ENABLE_ecpint}); find_package(ecpint 1.0.7 CONFIG REQUIRED); get_property(_loc TARGET ECPINT::ecpint PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using ecpint${ColourReset}: ${_loc} (version ${ecpint_VERSION})""); else(); message(STATUS ""Disabled ecpint ${ecpint_DIR}""); endif(). if(${ENABLE_libefp}); # neither libefp nor pylibefp actually needed c-side; runtime detection would; # do just as well. included for completeness and so pylibefp_PYMOD can be; # hard-loaded into PYTHONPATH. also incl for finding efp frag files below.; find_package(libefp 1.5.0 CONFIG REQUIRED COMPONENTS shallow); get_property(_loc TARGET libefp::efp PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using libefp${ColourReset}: ${_loc} (version ${libefp_VERSION})""). #find_package(pylibefp 0.6.1 CONFIG REQUIRED); #get_property(_loc TARGET pylibefp::core PROPERTY LOCATION); include(FindPythonModule); find_python_module(pylibefp QUIET REQUIRED); #list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using pylibefp${ColourReset}: ${_loc} (version ${pylibefp_VERSION})""); else(); message(STATUS ""Disabled libefp ${libefp_DIR} ${pylibefp_DIR}""",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:4105,Integrability,message,message,4105,"_DIR}""); endif (). if(${ENABLE_dkh}); find_package(dkh 1.2 CONFIG REQUIRED); get_property(_loc TARGET dkh::dkh PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using dkh${ColourReset}: ${_loc} (version ${dkh_VERSION})""); else(); message(STATUS ""Disabled dkh ${dkh_DIR}""); endif(). if(${ENABLE_ecpint}); find_package(ecpint 1.0.7 CONFIG REQUIRED); get_property(_loc TARGET ECPINT::ecpint PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using ecpint${ColourReset}: ${_loc} (version ${ecpint_VERSION})""); else(); message(STATUS ""Disabled ecpint ${ecpint_DIR}""); endif(). if(${ENABLE_libefp}); # neither libefp nor pylibefp actually needed c-side; runtime detection would; # do just as well. included for completeness and so pylibefp_PYMOD can be; # hard-loaded into PYTHONPATH. also incl for finding efp frag files below.; find_package(libefp 1.5.0 CONFIG REQUIRED COMPONENTS shallow); get_property(_loc TARGET libefp::efp PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using libefp${ColourReset}: ${_loc} (version ${libefp_VERSION})""). #find_package(pylibefp 0.6.1 CONFIG REQUIRED); #get_property(_loc TARGET pylibefp::core PROPERTY LOCATION); include(FindPythonModule); find_python_module(pylibefp QUIET REQUIRED); #list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using pylibefp${ColourReset}: ${_loc} (version ${pylibefp_VERSION})""); else(); message(STATUS ""Disabled libefp ${libefp_DIR} ${pylibefp_DIR}""); endif(). if(${ENABLE_Einsums}); find_package(Einsums 0.3 CONFIG REQUIRED); get_property(_loc TARGET Einsums::einsums PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using Einsums${ColourReset}: ${_loc} (version ${Einsums_VERSION})""); else(); message(STATUS ""Disabled Einsums ${Einsums_DIR}""); endif (). if(${ENABLE_erd}); find_package(erd 3.0.6 CONFIG REQUIRED); get_property(_loc TARGET erd::erd PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using erd${ColourRe",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:4406,Integrability,message,message,4406,"E_ecpint}); find_package(ecpint 1.0.7 CONFIG REQUIRED); get_property(_loc TARGET ECPINT::ecpint PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using ecpint${ColourReset}: ${_loc} (version ${ecpint_VERSION})""); else(); message(STATUS ""Disabled ecpint ${ecpint_DIR}""); endif(). if(${ENABLE_libefp}); # neither libefp nor pylibefp actually needed c-side; runtime detection would; # do just as well. included for completeness and so pylibefp_PYMOD can be; # hard-loaded into PYTHONPATH. also incl for finding efp frag files below.; find_package(libefp 1.5.0 CONFIG REQUIRED COMPONENTS shallow); get_property(_loc TARGET libefp::efp PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using libefp${ColourReset}: ${_loc} (version ${libefp_VERSION})""). #find_package(pylibefp 0.6.1 CONFIG REQUIRED); #get_property(_loc TARGET pylibefp::core PROPERTY LOCATION); include(FindPythonModule); find_python_module(pylibefp QUIET REQUIRED); #list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using pylibefp${ColourReset}: ${_loc} (version ${pylibefp_VERSION})""); else(); message(STATUS ""Disabled libefp ${libefp_DIR} ${pylibefp_DIR}""); endif(). if(${ENABLE_Einsums}); find_package(Einsums 0.3 CONFIG REQUIRED); get_property(_loc TARGET Einsums::einsums PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using Einsums${ColourReset}: ${_loc} (version ${Einsums_VERSION})""); else(); message(STATUS ""Disabled Einsums ${Einsums_DIR}""); endif (). if(${ENABLE_erd}); find_package(erd 3.0.6 CONFIG REQUIRED); get_property(_loc TARGET erd::erd PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using erd${ColourReset}: ${_loc} (version ${erd_VERSION})""); else(); message(STATUS ""Disabled erd ${erd_DIR}""); endif(). find_package(gau2grid 2.0 CONFIG REQUIRED); get_property(_loc TARGET gau2grid::gg PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using gau2grid${ColourReset}: ${_loc} (version ${gau2grid_",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:4508,Integrability,message,message,4508,"E_ecpint}); find_package(ecpint 1.0.7 CONFIG REQUIRED); get_property(_loc TARGET ECPINT::ecpint PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using ecpint${ColourReset}: ${_loc} (version ${ecpint_VERSION})""); else(); message(STATUS ""Disabled ecpint ${ecpint_DIR}""); endif(). if(${ENABLE_libefp}); # neither libefp nor pylibefp actually needed c-side; runtime detection would; # do just as well. included for completeness and so pylibefp_PYMOD can be; # hard-loaded into PYTHONPATH. also incl for finding efp frag files below.; find_package(libefp 1.5.0 CONFIG REQUIRED COMPONENTS shallow); get_property(_loc TARGET libefp::efp PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using libefp${ColourReset}: ${_loc} (version ${libefp_VERSION})""). #find_package(pylibefp 0.6.1 CONFIG REQUIRED); #get_property(_loc TARGET pylibefp::core PROPERTY LOCATION); include(FindPythonModule); find_python_module(pylibefp QUIET REQUIRED); #list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using pylibefp${ColourReset}: ${_loc} (version ${pylibefp_VERSION})""); else(); message(STATUS ""Disabled libefp ${libefp_DIR} ${pylibefp_DIR}""); endif(). if(${ENABLE_Einsums}); find_package(Einsums 0.3 CONFIG REQUIRED); get_property(_loc TARGET Einsums::einsums PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using Einsums${ColourReset}: ${_loc} (version ${Einsums_VERSION})""); else(); message(STATUS ""Disabled Einsums ${Einsums_DIR}""); endif (). if(${ENABLE_erd}); find_package(erd 3.0.6 CONFIG REQUIRED); get_property(_loc TARGET erd::erd PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using erd${ColourReset}: ${_loc} (version ${erd_VERSION})""); else(); message(STATUS ""Disabled erd ${erd_DIR}""); endif(). find_package(gau2grid 2.0 CONFIG REQUIRED); get_property(_loc TARGET gau2grid::gg PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using gau2grid${ColourReset}: ${_loc} (version ${gau2grid_",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:4740,Integrability,message,message,4740,"needed c-side; runtime detection would; # do just as well. included for completeness and so pylibefp_PYMOD can be; # hard-loaded into PYTHONPATH. also incl for finding efp frag files below.; find_package(libefp 1.5.0 CONFIG REQUIRED COMPONENTS shallow); get_property(_loc TARGET libefp::efp PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using libefp${ColourReset}: ${_loc} (version ${libefp_VERSION})""). #find_package(pylibefp 0.6.1 CONFIG REQUIRED); #get_property(_loc TARGET pylibefp::core PROPERTY LOCATION); include(FindPythonModule); find_python_module(pylibefp QUIET REQUIRED); #list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using pylibefp${ColourReset}: ${_loc} (version ${pylibefp_VERSION})""); else(); message(STATUS ""Disabled libefp ${libefp_DIR} ${pylibefp_DIR}""); endif(). if(${ENABLE_Einsums}); find_package(Einsums 0.3 CONFIG REQUIRED); get_property(_loc TARGET Einsums::einsums PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using Einsums${ColourReset}: ${_loc} (version ${Einsums_VERSION})""); else(); message(STATUS ""Disabled Einsums ${Einsums_DIR}""); endif (). if(${ENABLE_erd}); find_package(erd 3.0.6 CONFIG REQUIRED); get_property(_loc TARGET erd::erd PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using erd${ColourReset}: ${_loc} (version ${erd_VERSION})""); else(); message(STATUS ""Disabled erd ${erd_DIR}""); endif(). find_package(gau2grid 2.0 CONFIG REQUIRED); get_property(_loc TARGET gau2grid::gg PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using gau2grid${ColourReset}: ${_loc} (version ${gau2grid_VERSION})""). if(${ENABLE_gdma}); # neither gdma nor pygdma actually needed c-side; runtime detection would; # do just as well. included for completeness and so gdma_PYMOD can be; # hard-loaded into PYTHONPATH.; find_package(gdma 2.3.3 CONFIG REQUIRED COMPONENTS Python); get_property(_loc TARGET gdma::pygdma PROPERTY LOCATION); message(STATUS ""${Cyan}Found gdma",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:4840,Integrability,message,message,4840,"needed c-side; runtime detection would; # do just as well. included for completeness and so pylibefp_PYMOD can be; # hard-loaded into PYTHONPATH. also incl for finding efp frag files below.; find_package(libefp 1.5.0 CONFIG REQUIRED COMPONENTS shallow); get_property(_loc TARGET libefp::efp PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using libefp${ColourReset}: ${_loc} (version ${libefp_VERSION})""). #find_package(pylibefp 0.6.1 CONFIG REQUIRED); #get_property(_loc TARGET pylibefp::core PROPERTY LOCATION); include(FindPythonModule); find_python_module(pylibefp QUIET REQUIRED); #list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using pylibefp${ColourReset}: ${_loc} (version ${pylibefp_VERSION})""); else(); message(STATUS ""Disabled libefp ${libefp_DIR} ${pylibefp_DIR}""); endif(). if(${ENABLE_Einsums}); find_package(Einsums 0.3 CONFIG REQUIRED); get_property(_loc TARGET Einsums::einsums PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using Einsums${ColourReset}: ${_loc} (version ${Einsums_VERSION})""); else(); message(STATUS ""Disabled Einsums ${Einsums_DIR}""); endif (). if(${ENABLE_erd}); find_package(erd 3.0.6 CONFIG REQUIRED); get_property(_loc TARGET erd::erd PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using erd${ColourReset}: ${_loc} (version ${erd_VERSION})""); else(); message(STATUS ""Disabled erd ${erd_DIR}""); endif(). find_package(gau2grid 2.0 CONFIG REQUIRED); get_property(_loc TARGET gau2grid::gg PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using gau2grid${ColourReset}: ${_loc} (version ${gau2grid_VERSION})""). if(${ENABLE_gdma}); # neither gdma nor pygdma actually needed c-side; runtime detection would; # do just as well. included for completeness and so gdma_PYMOD can be; # hard-loaded into PYTHONPATH.; find_package(gdma 2.3.3 CONFIG REQUIRED COMPONENTS Python); get_property(_loc TARGET gdma::pygdma PROPERTY LOCATION); message(STATUS ""${Cyan}Found gdma",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:5045,Integrability,message,message,5045,"LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using libefp${ColourReset}: ${_loc} (version ${libefp_VERSION})""). #find_package(pylibefp 0.6.1 CONFIG REQUIRED); #get_property(_loc TARGET pylibefp::core PROPERTY LOCATION); include(FindPythonModule); find_python_module(pylibefp QUIET REQUIRED); #list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using pylibefp${ColourReset}: ${_loc} (version ${pylibefp_VERSION})""); else(); message(STATUS ""Disabled libefp ${libefp_DIR} ${pylibefp_DIR}""); endif(). if(${ENABLE_Einsums}); find_package(Einsums 0.3 CONFIG REQUIRED); get_property(_loc TARGET Einsums::einsums PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using Einsums${ColourReset}: ${_loc} (version ${Einsums_VERSION})""); else(); message(STATUS ""Disabled Einsums ${Einsums_DIR}""); endif (). if(${ENABLE_erd}); find_package(erd 3.0.6 CONFIG REQUIRED); get_property(_loc TARGET erd::erd PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using erd${ColourReset}: ${_loc} (version ${erd_VERSION})""); else(); message(STATUS ""Disabled erd ${erd_DIR}""); endif(). find_package(gau2grid 2.0 CONFIG REQUIRED); get_property(_loc TARGET gau2grid::gg PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using gau2grid${ColourReset}: ${_loc} (version ${gau2grid_VERSION})""). if(${ENABLE_gdma}); # neither gdma nor pygdma actually needed c-side; runtime detection would; # do just as well. included for completeness and so gdma_PYMOD can be; # hard-loaded into PYTHONPATH.; find_package(gdma 2.3.3 CONFIG REQUIRED COMPONENTS Python); get_property(_loc TARGET gdma::pygdma PROPERTY LOCATION); message(STATUS ""${Cyan}Found gdma${ColourReset}: ${_loc} (version ${gdma_VERSION})""); else(); message(STATUS ""Disabled gdma ${gdma_DIR}""); endif(). if(${ENABLE_Libint1t}); find_package(Libint 1.2.0 CONFIG REQUIRED COMPONENTS ${MAX_AM_ERI}); get_property(_loc TARGET Libint::int PROPERTY LOCATION); list(APPEND _addons ${_loc}); messag",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:5137,Integrability,message,message,5137,"LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using libefp${ColourReset}: ${_loc} (version ${libefp_VERSION})""). #find_package(pylibefp 0.6.1 CONFIG REQUIRED); #get_property(_loc TARGET pylibefp::core PROPERTY LOCATION); include(FindPythonModule); find_python_module(pylibefp QUIET REQUIRED); #list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using pylibefp${ColourReset}: ${_loc} (version ${pylibefp_VERSION})""); else(); message(STATUS ""Disabled libefp ${libefp_DIR} ${pylibefp_DIR}""); endif(). if(${ENABLE_Einsums}); find_package(Einsums 0.3 CONFIG REQUIRED); get_property(_loc TARGET Einsums::einsums PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using Einsums${ColourReset}: ${_loc} (version ${Einsums_VERSION})""); else(); message(STATUS ""Disabled Einsums ${Einsums_DIR}""); endif (). if(${ENABLE_erd}); find_package(erd 3.0.6 CONFIG REQUIRED); get_property(_loc TARGET erd::erd PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using erd${ColourReset}: ${_loc} (version ${erd_VERSION})""); else(); message(STATUS ""Disabled erd ${erd_DIR}""); endif(). find_package(gau2grid 2.0 CONFIG REQUIRED); get_property(_loc TARGET gau2grid::gg PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using gau2grid${ColourReset}: ${_loc} (version ${gau2grid_VERSION})""). if(${ENABLE_gdma}); # neither gdma nor pygdma actually needed c-side; runtime detection would; # do just as well. included for completeness and so gdma_PYMOD can be; # hard-loaded into PYTHONPATH.; find_package(gdma 2.3.3 CONFIG REQUIRED COMPONENTS Python); get_property(_loc TARGET gdma::pygdma PROPERTY LOCATION); message(STATUS ""${Cyan}Found gdma${ColourReset}: ${_loc} (version ${gdma_VERSION})""); else(); message(STATUS ""Disabled gdma ${gdma_DIR}""); endif(). if(${ENABLE_Libint1t}); find_package(Libint 1.2.0 CONFIG REQUIRED COMPONENTS ${MAX_AM_ERI}); get_property(_loc TARGET Libint::int PROPERTY LOCATION); list(APPEND _addons ${_loc}); messag",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:5321,Integrability,message,message,5321,"ndPythonModule); find_python_module(pylibefp QUIET REQUIRED); #list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using pylibefp${ColourReset}: ${_loc} (version ${pylibefp_VERSION})""); else(); message(STATUS ""Disabled libefp ${libefp_DIR} ${pylibefp_DIR}""); endif(). if(${ENABLE_Einsums}); find_package(Einsums 0.3 CONFIG REQUIRED); get_property(_loc TARGET Einsums::einsums PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using Einsums${ColourReset}: ${_loc} (version ${Einsums_VERSION})""); else(); message(STATUS ""Disabled Einsums ${Einsums_DIR}""); endif (). if(${ENABLE_erd}); find_package(erd 3.0.6 CONFIG REQUIRED); get_property(_loc TARGET erd::erd PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using erd${ColourReset}: ${_loc} (version ${erd_VERSION})""); else(); message(STATUS ""Disabled erd ${erd_DIR}""); endif(). find_package(gau2grid 2.0 CONFIG REQUIRED); get_property(_loc TARGET gau2grid::gg PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using gau2grid${ColourReset}: ${_loc} (version ${gau2grid_VERSION})""). if(${ENABLE_gdma}); # neither gdma nor pygdma actually needed c-side; runtime detection would; # do just as well. included for completeness and so gdma_PYMOD can be; # hard-loaded into PYTHONPATH.; find_package(gdma 2.3.3 CONFIG REQUIRED COMPONENTS Python); get_property(_loc TARGET gdma::pygdma PROPERTY LOCATION); message(STATUS ""${Cyan}Found gdma${ColourReset}: ${_loc} (version ${gdma_VERSION})""); else(); message(STATUS ""Disabled gdma ${gdma_DIR}""); endif(). if(${ENABLE_Libint1t}); find_package(Libint 1.2.0 CONFIG REQUIRED COMPONENTS ${MAX_AM_ERI}); get_property(_loc TARGET Libint::int PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using Libint ${Libint_MAX_AM_ERI}${ColourReset}: ${_loc} (version ${Libint_VERSION})""); endif(). find_package(; Libint2; 2.7.2; CONFIG; REQUIRED; COMPONENTS; sss; CXX_ho; impure_sh; ""eri_c4_d0_l${MAX_AM_ERI}"" eri_c3_d0_l4 eri_c2_d0_",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:5731,Integrability,message,message,5731,"${Cyan}Using Einsums${ColourReset}: ${_loc} (version ${Einsums_VERSION})""); else(); message(STATUS ""Disabled Einsums ${Einsums_DIR}""); endif (). if(${ENABLE_erd}); find_package(erd 3.0.6 CONFIG REQUIRED); get_property(_loc TARGET erd::erd PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using erd${ColourReset}: ${_loc} (version ${erd_VERSION})""); else(); message(STATUS ""Disabled erd ${erd_DIR}""); endif(). find_package(gau2grid 2.0 CONFIG REQUIRED); get_property(_loc TARGET gau2grid::gg PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using gau2grid${ColourReset}: ${_loc} (version ${gau2grid_VERSION})""). if(${ENABLE_gdma}); # neither gdma nor pygdma actually needed c-side; runtime detection would; # do just as well. included for completeness and so gdma_PYMOD can be; # hard-loaded into PYTHONPATH.; find_package(gdma 2.3.3 CONFIG REQUIRED COMPONENTS Python); get_property(_loc TARGET gdma::pygdma PROPERTY LOCATION); message(STATUS ""${Cyan}Found gdma${ColourReset}: ${_loc} (version ${gdma_VERSION})""); else(); message(STATUS ""Disabled gdma ${gdma_DIR}""); endif(). if(${ENABLE_Libint1t}); find_package(Libint 1.2.0 CONFIG REQUIRED COMPONENTS ${MAX_AM_ERI}); get_property(_loc TARGET Libint::int PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using Libint ${Libint_MAX_AM_ERI}${ColourReset}: ${_loc} (version ${Libint_VERSION})""); endif(). find_package(; Libint2; 2.7.2; CONFIG; REQUIRED; COMPONENTS; sss; CXX_ho; impure_sh; ""eri_c4_d0_l${MAX_AM_ERI}"" eri_c3_d0_l4 eri_c2_d0_l4 onebody_d0_l4; eri_c4_d1_l2 eri_c3_d1_l3 eri_c2_d1_l3 onebody_d1_l3; onebody_d2_l3; OPTIONAL_COMPONENTS; eri_c4_d2_l2 eri_c3_d2_l3 eri_c2_d2_l3; ); get_property(_loc TARGET Libint2::int2 PROPERTY LOCATION); # defer until upstream provides full-dress targets get_property(Libint2_VERSION TARGET Libint2::int2 PROPERTY Libint2_VERSION); # defer until upstream provides full-dress targets get_property(Libint2_MAX_AM_ERI TARGET Libint2::int2 P",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:5825,Integrability,message,message,5825,"${Cyan}Using Einsums${ColourReset}: ${_loc} (version ${Einsums_VERSION})""); else(); message(STATUS ""Disabled Einsums ${Einsums_DIR}""); endif (). if(${ENABLE_erd}); find_package(erd 3.0.6 CONFIG REQUIRED); get_property(_loc TARGET erd::erd PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using erd${ColourReset}: ${_loc} (version ${erd_VERSION})""); else(); message(STATUS ""Disabled erd ${erd_DIR}""); endif(). find_package(gau2grid 2.0 CONFIG REQUIRED); get_property(_loc TARGET gau2grid::gg PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using gau2grid${ColourReset}: ${_loc} (version ${gau2grid_VERSION})""). if(${ENABLE_gdma}); # neither gdma nor pygdma actually needed c-side; runtime detection would; # do just as well. included for completeness and so gdma_PYMOD can be; # hard-loaded into PYTHONPATH.; find_package(gdma 2.3.3 CONFIG REQUIRED COMPONENTS Python); get_property(_loc TARGET gdma::pygdma PROPERTY LOCATION); message(STATUS ""${Cyan}Found gdma${ColourReset}: ${_loc} (version ${gdma_VERSION})""); else(); message(STATUS ""Disabled gdma ${gdma_DIR}""); endif(). if(${ENABLE_Libint1t}); find_package(Libint 1.2.0 CONFIG REQUIRED COMPONENTS ${MAX_AM_ERI}); get_property(_loc TARGET Libint::int PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using Libint ${Libint_MAX_AM_ERI}${ColourReset}: ${_loc} (version ${Libint_VERSION})""); endif(). find_package(; Libint2; 2.7.2; CONFIG; REQUIRED; COMPONENTS; sss; CXX_ho; impure_sh; ""eri_c4_d0_l${MAX_AM_ERI}"" eri_c3_d0_l4 eri_c2_d0_l4 onebody_d0_l4; eri_c4_d1_l2 eri_c3_d1_l3 eri_c2_d1_l3 onebody_d1_l3; onebody_d2_l3; OPTIONAL_COMPONENTS; eri_c4_d2_l2 eri_c3_d2_l3 eri_c2_d2_l3; ); get_property(_loc TARGET Libint2::int2 PROPERTY LOCATION); # defer until upstream provides full-dress targets get_property(Libint2_VERSION TARGET Libint2::int2 PROPERTY Libint2_VERSION); # defer until upstream provides full-dress targets get_property(Libint2_MAX_AM_ERI TARGET Libint2::int2 P",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:6059,Integrability,message,message,6059,"(STATUS ""${Cyan}Using erd${ColourReset}: ${_loc} (version ${erd_VERSION})""); else(); message(STATUS ""Disabled erd ${erd_DIR}""); endif(). find_package(gau2grid 2.0 CONFIG REQUIRED); get_property(_loc TARGET gau2grid::gg PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using gau2grid${ColourReset}: ${_loc} (version ${gau2grid_VERSION})""). if(${ENABLE_gdma}); # neither gdma nor pygdma actually needed c-side; runtime detection would; # do just as well. included for completeness and so gdma_PYMOD can be; # hard-loaded into PYTHONPATH.; find_package(gdma 2.3.3 CONFIG REQUIRED COMPONENTS Python); get_property(_loc TARGET gdma::pygdma PROPERTY LOCATION); message(STATUS ""${Cyan}Found gdma${ColourReset}: ${_loc} (version ${gdma_VERSION})""); else(); message(STATUS ""Disabled gdma ${gdma_DIR}""); endif(). if(${ENABLE_Libint1t}); find_package(Libint 1.2.0 CONFIG REQUIRED COMPONENTS ${MAX_AM_ERI}); get_property(_loc TARGET Libint::int PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using Libint ${Libint_MAX_AM_ERI}${ColourReset}: ${_loc} (version ${Libint_VERSION})""); endif(). find_package(; Libint2; 2.7.2; CONFIG; REQUIRED; COMPONENTS; sss; CXX_ho; impure_sh; ""eri_c4_d0_l${MAX_AM_ERI}"" eri_c3_d0_l4 eri_c2_d0_l4 onebody_d0_l4; eri_c4_d1_l2 eri_c3_d1_l3 eri_c2_d1_l3 onebody_d1_l3; onebody_d2_l3; OPTIONAL_COMPONENTS; eri_c4_d2_l2 eri_c3_d2_l3 eri_c2_d2_l3; ); get_property(_loc TARGET Libint2::int2 PROPERTY LOCATION); # defer until upstream provides full-dress targets get_property(Libint2_VERSION TARGET Libint2::int2 PROPERTY Libint2_VERSION); # defer until upstream provides full-dress targets get_property(Libint2_MAX_AM_ERI TARGET Libint2::int2 PROPERTY Libint2_MAX_AM_ERI); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using Libint2 ${Libint2_MAX_AM_ERI}${ColourReset}: ${_loc} (version ${Libint2_VERSION})""). if(${ENABLE_mdi}); find_package(mdi 1.2.3 CONFIG REQUIRED); get_property(_loc TARGET mdi::mdi PROPERTY LOCATION); list(APPE",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:6816,Integrability,message,message,6816,"YMOD can be; # hard-loaded into PYTHONPATH.; find_package(gdma 2.3.3 CONFIG REQUIRED COMPONENTS Python); get_property(_loc TARGET gdma::pygdma PROPERTY LOCATION); message(STATUS ""${Cyan}Found gdma${ColourReset}: ${_loc} (version ${gdma_VERSION})""); else(); message(STATUS ""Disabled gdma ${gdma_DIR}""); endif(). if(${ENABLE_Libint1t}); find_package(Libint 1.2.0 CONFIG REQUIRED COMPONENTS ${MAX_AM_ERI}); get_property(_loc TARGET Libint::int PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using Libint ${Libint_MAX_AM_ERI}${ColourReset}: ${_loc} (version ${Libint_VERSION})""); endif(). find_package(; Libint2; 2.7.2; CONFIG; REQUIRED; COMPONENTS; sss; CXX_ho; impure_sh; ""eri_c4_d0_l${MAX_AM_ERI}"" eri_c3_d0_l4 eri_c2_d0_l4 onebody_d0_l4; eri_c4_d1_l2 eri_c3_d1_l3 eri_c2_d1_l3 onebody_d1_l3; onebody_d2_l3; OPTIONAL_COMPONENTS; eri_c4_d2_l2 eri_c3_d2_l3 eri_c2_d2_l3; ); get_property(_loc TARGET Libint2::int2 PROPERTY LOCATION); # defer until upstream provides full-dress targets get_property(Libint2_VERSION TARGET Libint2::int2 PROPERTY Libint2_VERSION); # defer until upstream provides full-dress targets get_property(Libint2_MAX_AM_ERI TARGET Libint2::int2 PROPERTY Libint2_MAX_AM_ERI); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using Libint2 ${Libint2_MAX_AM_ERI}${ColourReset}: ${_loc} (version ${Libint2_VERSION})""). if(${ENABLE_mdi}); find_package(mdi 1.2.3 CONFIG REQUIRED); get_property(_loc TARGET mdi::mdi PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using mdi${ColourReset}: ${_loc} (version ${mdi_VERSION})""); else(); message(STATUS ""Disabled MDI ${mdi_DIR}""); endif (). if(${ENABLE_PCMSolver}); find_package(PCMSolver 1.2.1 CONFIG REQUIRED); get_property(_loc TARGET PCMSolver::pcm PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using PCMSolver${ColourReset}: ${_loc} (version ${PCMSolver_VERSION})""); else(); message(STATUS ""Disabled PCMSolver ${PCMSolver_DIR}""); endif (). if(${ENABLE_simint",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:7074,Integrability,message,message,7074," ${Libint_MAX_AM_ERI}${ColourReset}: ${_loc} (version ${Libint_VERSION})""); endif(). find_package(; Libint2; 2.7.2; CONFIG; REQUIRED; COMPONENTS; sss; CXX_ho; impure_sh; ""eri_c4_d0_l${MAX_AM_ERI}"" eri_c3_d0_l4 eri_c2_d0_l4 onebody_d0_l4; eri_c4_d1_l2 eri_c3_d1_l3 eri_c2_d1_l3 onebody_d1_l3; onebody_d2_l3; OPTIONAL_COMPONENTS; eri_c4_d2_l2 eri_c3_d2_l3 eri_c2_d2_l3; ); get_property(_loc TARGET Libint2::int2 PROPERTY LOCATION); # defer until upstream provides full-dress targets get_property(Libint2_VERSION TARGET Libint2::int2 PROPERTY Libint2_VERSION); # defer until upstream provides full-dress targets get_property(Libint2_MAX_AM_ERI TARGET Libint2::int2 PROPERTY Libint2_MAX_AM_ERI); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using Libint2 ${Libint2_MAX_AM_ERI}${ColourReset}: ${_loc} (version ${Libint2_VERSION})""). if(${ENABLE_mdi}); find_package(mdi 1.2.3 CONFIG REQUIRED); get_property(_loc TARGET mdi::mdi PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using mdi${ColourReset}: ${_loc} (version ${mdi_VERSION})""); else(); message(STATUS ""Disabled MDI ${mdi_DIR}""); endif (). if(${ENABLE_PCMSolver}); find_package(PCMSolver 1.2.1 CONFIG REQUIRED); get_property(_loc TARGET PCMSolver::pcm PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using PCMSolver${ColourReset}: ${_loc} (version ${PCMSolver_VERSION})""); else(); message(STATUS ""Disabled PCMSolver ${PCMSolver_DIR}""); endif (). if(${ENABLE_simint}); find_package(simint 0.7 CONFIG REQUIRED COMPONENTS am${MAX_AM_ERI} der0); get_property(_loc TARGET simint::simint PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using simint ${simint_MAXAM}${ColourReset}: ${_loc} (version ${simint_VERSION}; vectorization ${simint_VECTOR})""); else(); message(STATUS ""Disabled simint ${simint_DIR}""); endif(). if(${ENABLE_BrianQC}); find_package(BrianQC 1.1 CONFIG REQUIRED); get_property(_loc TARGET BrianQC::static_wrapper PROPERTY LOCATION); list(APPEND _addons",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:7166,Integrability,message,message,7166," ${Libint_MAX_AM_ERI}${ColourReset}: ${_loc} (version ${Libint_VERSION})""); endif(). find_package(; Libint2; 2.7.2; CONFIG; REQUIRED; COMPONENTS; sss; CXX_ho; impure_sh; ""eri_c4_d0_l${MAX_AM_ERI}"" eri_c3_d0_l4 eri_c2_d0_l4 onebody_d0_l4; eri_c4_d1_l2 eri_c3_d1_l3 eri_c2_d1_l3 onebody_d1_l3; onebody_d2_l3; OPTIONAL_COMPONENTS; eri_c4_d2_l2 eri_c3_d2_l3 eri_c2_d2_l3; ); get_property(_loc TARGET Libint2::int2 PROPERTY LOCATION); # defer until upstream provides full-dress targets get_property(Libint2_VERSION TARGET Libint2::int2 PROPERTY Libint2_VERSION); # defer until upstream provides full-dress targets get_property(Libint2_MAX_AM_ERI TARGET Libint2::int2 PROPERTY Libint2_MAX_AM_ERI); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using Libint2 ${Libint2_MAX_AM_ERI}${ColourReset}: ${_loc} (version ${Libint2_VERSION})""). if(${ENABLE_mdi}); find_package(mdi 1.2.3 CONFIG REQUIRED); get_property(_loc TARGET mdi::mdi PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using mdi${ColourReset}: ${_loc} (version ${mdi_VERSION})""); else(); message(STATUS ""Disabled MDI ${mdi_DIR}""); endif (). if(${ENABLE_PCMSolver}); find_package(PCMSolver 1.2.1 CONFIG REQUIRED); get_property(_loc TARGET PCMSolver::pcm PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using PCMSolver${ColourReset}: ${_loc} (version ${PCMSolver_VERSION})""); else(); message(STATUS ""Disabled PCMSolver ${PCMSolver_DIR}""); endif (). if(${ENABLE_simint}); find_package(simint 0.7 CONFIG REQUIRED COMPONENTS am${MAX_AM_ERI} der0); get_property(_loc TARGET simint::simint PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using simint ${simint_MAXAM}${ColourReset}: ${_loc} (version ${simint_VERSION}; vectorization ${simint_VECTOR})""); else(); message(STATUS ""Disabled simint ${simint_DIR}""); endif(). if(${ENABLE_BrianQC}); find_package(BrianQC 1.1 CONFIG REQUIRED); get_property(_loc TARGET BrianQC::static_wrapper PROPERTY LOCATION); list(APPEND _addons",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:7381,Integrability,message,message,7381,"COMPONENTS; eri_c4_d2_l2 eri_c3_d2_l3 eri_c2_d2_l3; ); get_property(_loc TARGET Libint2::int2 PROPERTY LOCATION); # defer until upstream provides full-dress targets get_property(Libint2_VERSION TARGET Libint2::int2 PROPERTY Libint2_VERSION); # defer until upstream provides full-dress targets get_property(Libint2_MAX_AM_ERI TARGET Libint2::int2 PROPERTY Libint2_MAX_AM_ERI); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using Libint2 ${Libint2_MAX_AM_ERI}${ColourReset}: ${_loc} (version ${Libint2_VERSION})""). if(${ENABLE_mdi}); find_package(mdi 1.2.3 CONFIG REQUIRED); get_property(_loc TARGET mdi::mdi PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using mdi${ColourReset}: ${_loc} (version ${mdi_VERSION})""); else(); message(STATUS ""Disabled MDI ${mdi_DIR}""); endif (). if(${ENABLE_PCMSolver}); find_package(PCMSolver 1.2.1 CONFIG REQUIRED); get_property(_loc TARGET PCMSolver::pcm PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using PCMSolver${ColourReset}: ${_loc} (version ${PCMSolver_VERSION})""); else(); message(STATUS ""Disabled PCMSolver ${PCMSolver_DIR}""); endif (). if(${ENABLE_simint}); find_package(simint 0.7 CONFIG REQUIRED COMPONENTS am${MAX_AM_ERI} der0); get_property(_loc TARGET simint::simint PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using simint ${simint_MAXAM}${ColourReset}: ${_loc} (version ${simint_VERSION}; vectorization ${simint_VECTOR})""); else(); message(STATUS ""Disabled simint ${simint_DIR}""); endif(). if(${ENABLE_BrianQC}); find_package(BrianQC 1.1 CONFIG REQUIRED); get_property(_loc TARGET BrianQC::static_wrapper PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using BrianQC${ColourReset}: ${BrianQC_DIR}""); else(); message(STATUS ""Disabled BrianQC ${BrianQC_DIR}""); endif(). find_package(Libxc 6.1.0 CONFIG REQUIRED COMPONENTS C); get_property(_loc TARGET Libxc::xc PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Usi",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:7485,Integrability,message,message,7485,"COMPONENTS; eri_c4_d2_l2 eri_c3_d2_l3 eri_c2_d2_l3; ); get_property(_loc TARGET Libint2::int2 PROPERTY LOCATION); # defer until upstream provides full-dress targets get_property(Libint2_VERSION TARGET Libint2::int2 PROPERTY Libint2_VERSION); # defer until upstream provides full-dress targets get_property(Libint2_MAX_AM_ERI TARGET Libint2::int2 PROPERTY Libint2_MAX_AM_ERI); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using Libint2 ${Libint2_MAX_AM_ERI}${ColourReset}: ${_loc} (version ${Libint2_VERSION})""). if(${ENABLE_mdi}); find_package(mdi 1.2.3 CONFIG REQUIRED); get_property(_loc TARGET mdi::mdi PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using mdi${ColourReset}: ${_loc} (version ${mdi_VERSION})""); else(); message(STATUS ""Disabled MDI ${mdi_DIR}""); endif (). if(${ENABLE_PCMSolver}); find_package(PCMSolver 1.2.1 CONFIG REQUIRED); get_property(_loc TARGET PCMSolver::pcm PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using PCMSolver${ColourReset}: ${_loc} (version ${PCMSolver_VERSION})""); else(); message(STATUS ""Disabled PCMSolver ${PCMSolver_DIR}""); endif (). if(${ENABLE_simint}); find_package(simint 0.7 CONFIG REQUIRED COMPONENTS am${MAX_AM_ERI} der0); get_property(_loc TARGET simint::simint PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using simint ${simint_MAXAM}${ColourReset}: ${_loc} (version ${simint_VERSION}; vectorization ${simint_VECTOR})""); else(); message(STATUS ""Disabled simint ${simint_DIR}""); endif(). if(${ENABLE_BrianQC}); find_package(BrianQC 1.1 CONFIG REQUIRED); get_property(_loc TARGET BrianQC::static_wrapper PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using BrianQC${ColourReset}: ${BrianQC_DIR}""); else(); message(STATUS ""Disabled BrianQC ${BrianQC_DIR}""); endif(). find_package(Libxc 6.1.0 CONFIG REQUIRED COMPONENTS C); get_property(_loc TARGET Libxc::xc PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Usi",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:7736,Integrability,message,message,7736,"ibint2_MAX_AM_ERI); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using Libint2 ${Libint2_MAX_AM_ERI}${ColourReset}: ${_loc} (version ${Libint2_VERSION})""). if(${ENABLE_mdi}); find_package(mdi 1.2.3 CONFIG REQUIRED); get_property(_loc TARGET mdi::mdi PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using mdi${ColourReset}: ${_loc} (version ${mdi_VERSION})""); else(); message(STATUS ""Disabled MDI ${mdi_DIR}""); endif (). if(${ENABLE_PCMSolver}); find_package(PCMSolver 1.2.1 CONFIG REQUIRED); get_property(_loc TARGET PCMSolver::pcm PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using PCMSolver${ColourReset}: ${_loc} (version ${PCMSolver_VERSION})""); else(); message(STATUS ""Disabled PCMSolver ${PCMSolver_DIR}""); endif (). if(${ENABLE_simint}); find_package(simint 0.7 CONFIG REQUIRED COMPONENTS am${MAX_AM_ERI} der0); get_property(_loc TARGET simint::simint PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using simint ${simint_MAXAM}${ColourReset}: ${_loc} (version ${simint_VERSION}; vectorization ${simint_VECTOR})""); else(); message(STATUS ""Disabled simint ${simint_DIR}""); endif(). if(${ENABLE_BrianQC}); find_package(BrianQC 1.1 CONFIG REQUIRED); get_property(_loc TARGET BrianQC::static_wrapper PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using BrianQC${ColourReset}: ${BrianQC_DIR}""); else(); message(STATUS ""Disabled BrianQC ${BrianQC_DIR}""); endif(). find_package(Libxc 6.1.0 CONFIG REQUIRED COMPONENTS C); get_property(_loc TARGET Libxc::xc PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using Libxc${ColourReset}: ${_loc} (version ${Libxc_VERSION})""). if(APPLE); set(PRE_LIBRARY_OPTION -Wl,-all_load); elseif(UNIX); set(PRE_LIBRARY_OPTION -Wl,--whole-archive); set(POST_LIBRARY_OPTION -Wl,--no-whole-archive); endif(). # <<< Build >>>. if(MSVC); # MSVC does not include <cmath> constants, unless _USE_MATH_DEFINES is defined.; # _CRT_* to squash s",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:7882,Integrability,message,message,7882,"ibint2_MAX_AM_ERI); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using Libint2 ${Libint2_MAX_AM_ERI}${ColourReset}: ${_loc} (version ${Libint2_VERSION})""). if(${ENABLE_mdi}); find_package(mdi 1.2.3 CONFIG REQUIRED); get_property(_loc TARGET mdi::mdi PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using mdi${ColourReset}: ${_loc} (version ${mdi_VERSION})""); else(); message(STATUS ""Disabled MDI ${mdi_DIR}""); endif (). if(${ENABLE_PCMSolver}); find_package(PCMSolver 1.2.1 CONFIG REQUIRED); get_property(_loc TARGET PCMSolver::pcm PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using PCMSolver${ColourReset}: ${_loc} (version ${PCMSolver_VERSION})""); else(); message(STATUS ""Disabled PCMSolver ${PCMSolver_DIR}""); endif (). if(${ENABLE_simint}); find_package(simint 0.7 CONFIG REQUIRED COMPONENTS am${MAX_AM_ERI} der0); get_property(_loc TARGET simint::simint PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using simint ${simint_MAXAM}${ColourReset}: ${_loc} (version ${simint_VERSION}; vectorization ${simint_VECTOR})""); else(); message(STATUS ""Disabled simint ${simint_DIR}""); endif(). if(${ENABLE_BrianQC}); find_package(BrianQC 1.1 CONFIG REQUIRED); get_property(_loc TARGET BrianQC::static_wrapper PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using BrianQC${ColourReset}: ${BrianQC_DIR}""); else(); message(STATUS ""Disabled BrianQC ${BrianQC_DIR}""); endif(). find_package(Libxc 6.1.0 CONFIG REQUIRED COMPONENTS C); get_property(_loc TARGET Libxc::xc PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using Libxc${ColourReset}: ${_loc} (version ${Libxc_VERSION})""). if(APPLE); set(PRE_LIBRARY_OPTION -Wl,-all_load); elseif(UNIX); set(PRE_LIBRARY_OPTION -Wl,--whole-archive); set(POST_LIBRARY_OPTION -Wl,--no-whole-archive); endif(). # <<< Build >>>. if(MSVC); # MSVC does not include <cmath> constants, unless _USE_MATH_DEFINES is defined.; # _CRT_* to squash s",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:8105,Integrability,message,message,8105,"Reset}: ${_loc} (version ${mdi_VERSION})""); else(); message(STATUS ""Disabled MDI ${mdi_DIR}""); endif (). if(${ENABLE_PCMSolver}); find_package(PCMSolver 1.2.1 CONFIG REQUIRED); get_property(_loc TARGET PCMSolver::pcm PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using PCMSolver${ColourReset}: ${_loc} (version ${PCMSolver_VERSION})""); else(); message(STATUS ""Disabled PCMSolver ${PCMSolver_DIR}""); endif (). if(${ENABLE_simint}); find_package(simint 0.7 CONFIG REQUIRED COMPONENTS am${MAX_AM_ERI} der0); get_property(_loc TARGET simint::simint PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using simint ${simint_MAXAM}${ColourReset}: ${_loc} (version ${simint_VERSION}; vectorization ${simint_VECTOR})""); else(); message(STATUS ""Disabled simint ${simint_DIR}""); endif(). if(${ENABLE_BrianQC}); find_package(BrianQC 1.1 CONFIG REQUIRED); get_property(_loc TARGET BrianQC::static_wrapper PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using BrianQC${ColourReset}: ${BrianQC_DIR}""); else(); message(STATUS ""Disabled BrianQC ${BrianQC_DIR}""); endif(). find_package(Libxc 6.1.0 CONFIG REQUIRED COMPONENTS C); get_property(_loc TARGET Libxc::xc PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using Libxc${ColourReset}: ${_loc} (version ${Libxc_VERSION})""). if(APPLE); set(PRE_LIBRARY_OPTION -Wl,-all_load); elseif(UNIX); set(PRE_LIBRARY_OPTION -Wl,--whole-archive); set(POST_LIBRARY_OPTION -Wl,--no-whole-archive); endif(). # <<< Build >>>. if(MSVC); # MSVC does not include <cmath> constants, unless _USE_MATH_DEFINES is defined.; # _CRT_* to squash some getenv, strdup, strncpy, ctime, fopen warnings; add_compile_definitions(; _USE_MATH_DEFINES; _CRT_NONSTDC_NO_DEPRECATE; _CRT_NONSTDC_NO_WARNINGS; _CRT_SECURE_NO_WARNINGS; ); # Set the exception handling model; add_compile_options(""/EHsc""); endif(). include_directories(include); include_directories(src); add_subdirectory(src); if(ENABLE_CYTHO",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:8183,Integrability,message,message,8183,"Reset}: ${_loc} (version ${mdi_VERSION})""); else(); message(STATUS ""Disabled MDI ${mdi_DIR}""); endif (). if(${ENABLE_PCMSolver}); find_package(PCMSolver 1.2.1 CONFIG REQUIRED); get_property(_loc TARGET PCMSolver::pcm PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using PCMSolver${ColourReset}: ${_loc} (version ${PCMSolver_VERSION})""); else(); message(STATUS ""Disabled PCMSolver ${PCMSolver_DIR}""); endif (). if(${ENABLE_simint}); find_package(simint 0.7 CONFIG REQUIRED COMPONENTS am${MAX_AM_ERI} der0); get_property(_loc TARGET simint::simint PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using simint ${simint_MAXAM}${ColourReset}: ${_loc} (version ${simint_VERSION}; vectorization ${simint_VECTOR})""); else(); message(STATUS ""Disabled simint ${simint_DIR}""); endif(). if(${ENABLE_BrianQC}); find_package(BrianQC 1.1 CONFIG REQUIRED); get_property(_loc TARGET BrianQC::static_wrapper PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using BrianQC${ColourReset}: ${BrianQC_DIR}""); else(); message(STATUS ""Disabled BrianQC ${BrianQC_DIR}""); endif(). find_package(Libxc 6.1.0 CONFIG REQUIRED COMPONENTS C); get_property(_loc TARGET Libxc::xc PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using Libxc${ColourReset}: ${_loc} (version ${Libxc_VERSION})""). if(APPLE); set(PRE_LIBRARY_OPTION -Wl,-all_load); elseif(UNIX); set(PRE_LIBRARY_OPTION -Wl,--whole-archive); set(POST_LIBRARY_OPTION -Wl,--no-whole-archive); endif(). # <<< Build >>>. if(MSVC); # MSVC does not include <cmath> constants, unless _USE_MATH_DEFINES is defined.; # _CRT_* to squash some getenv, strdup, strncpy, ctime, fopen warnings; add_compile_definitions(; _USE_MATH_DEFINES; _CRT_NONSTDC_NO_DEPRECATE; _CRT_NONSTDC_NO_WARNINGS; _CRT_SECURE_NO_WARNINGS; ); # Set the exception handling model; add_compile_options(""/EHsc""); endif(). include_directories(include); include_directories(src); add_subdirectory(src); if(ENABLE_CYTHO",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:8384,Integrability,message,message,8384,"ns ${_loc}); message(STATUS ""${Cyan}Using PCMSolver${ColourReset}: ${_loc} (version ${PCMSolver_VERSION})""); else(); message(STATUS ""Disabled PCMSolver ${PCMSolver_DIR}""); endif (). if(${ENABLE_simint}); find_package(simint 0.7 CONFIG REQUIRED COMPONENTS am${MAX_AM_ERI} der0); get_property(_loc TARGET simint::simint PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using simint ${simint_MAXAM}${ColourReset}: ${_loc} (version ${simint_VERSION}; vectorization ${simint_VECTOR})""); else(); message(STATUS ""Disabled simint ${simint_DIR}""); endif(). if(${ENABLE_BrianQC}); find_package(BrianQC 1.1 CONFIG REQUIRED); get_property(_loc TARGET BrianQC::static_wrapper PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using BrianQC${ColourReset}: ${BrianQC_DIR}""); else(); message(STATUS ""Disabled BrianQC ${BrianQC_DIR}""); endif(). find_package(Libxc 6.1.0 CONFIG REQUIRED COMPONENTS C); get_property(_loc TARGET Libxc::xc PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using Libxc${ColourReset}: ${_loc} (version ${Libxc_VERSION})""). if(APPLE); set(PRE_LIBRARY_OPTION -Wl,-all_load); elseif(UNIX); set(PRE_LIBRARY_OPTION -Wl,--whole-archive); set(POST_LIBRARY_OPTION -Wl,--no-whole-archive); endif(). # <<< Build >>>. if(MSVC); # MSVC does not include <cmath> constants, unless _USE_MATH_DEFINES is defined.; # _CRT_* to squash some getenv, strdup, strncpy, ctime, fopen warnings; add_compile_definitions(; _USE_MATH_DEFINES; _CRT_NONSTDC_NO_DEPRECATE; _CRT_NONSTDC_NO_WARNINGS; _CRT_SECURE_NO_WARNINGS; ); # Set the exception handling model; add_compile_options(""/EHsc""); endif(). include_directories(include); include_directories(src); add_subdirectory(src); if(ENABLE_CYTHONIZE); add_subdirectory(driver); endif(). # <<< Version >>>; # * computes version from metadata.py and git info; # * calls cmake to run write_basic_package_version_file. add_custom_target(update_version ALL; COMMAND ${Python_EXECUTABLE} versioner.py --met",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:10079,Integrability,wrap,wraps,10079,"ory(src); if(ENABLE_CYTHONIZE); add_subdirectory(driver); endif(). # <<< Version >>>; # * computes version from metadata.py and git info; # * calls cmake to run write_basic_package_version_file. add_custom_target(update_version ALL; COMMAND ${Python_EXECUTABLE} versioner.py --metaout ${CMAKE_CURRENT_BINARY_DIR}/metadata.py; --cmakeout ${CMAKE_CURRENT_BINARY_DIR}/metadata.cmake; COMMAND ${CMAKE_COMMAND} -DWTO=""${CMAKE_CURRENT_BINARY_DIR}/${CMAKECONFIG_INSTALL_DIR}""; -DPN=""psi4""; -P ${CMAKE_CURRENT_BINARY_DIR}/metadata.cmake; WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}; COMMENT ""Generating version info""); install(FILES ${CMAKE_CURRENT_BINARY_DIR}/metadata.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). # <<< Install >>>. # <<< install bin/ >>>; configure_file(run_psi4.py psi4 @ONLY); install(PROGRAMS ${CMAKE_BINARY_DIR}/psi4; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_BINDIR}). if(WIN32); # Generate a batch script, which wraps ""bin/psi4"" script to ""python bin/psi4""; configure_file(psi4.bat psi4.bat @ONLY); install(PROGRAMS ${CMAKE_BINARY_DIR}/psi4.bat; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_BINDIR}); endif(). # <<< install lib/ >>>; if(NOT ENABLE_CYTHONIZE); install(DIRECTORY driver; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4; FILES_MATCHING; PATTERN ""*.py""; PATTERN pytest EXCLUDE; ); endif(). install(FILES header.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). configure_file(__init__.py __init__.py @ONLY); configure_file(extras.py extras.py @ONLY); install(FILES ${CMAKE_BINARY_DIR}/__init__.py; ${CMAKE_BINARY_DIR}/extras.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). install(; FILES ../pytest.ini; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4; ); install(; DIRECTORY; ../tests/pytests/; DESTINATION ${CMAKE_INSTALL_PREFIX}/$",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:3886,Performance,load,loaded,3886,"_loc TARGET CheMPS2::chemps2 PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using CheMPS2${ColourReset}: ${_loc} (version ${CheMPS2_VERSION})""); else(); message(STATUS ""Disabled CheMPS2 ${CheMPS2_DIR}""); endif (). if(${ENABLE_dkh}); find_package(dkh 1.2 CONFIG REQUIRED); get_property(_loc TARGET dkh::dkh PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using dkh${ColourReset}: ${_loc} (version ${dkh_VERSION})""); else(); message(STATUS ""Disabled dkh ${dkh_DIR}""); endif(). if(${ENABLE_ecpint}); find_package(ecpint 1.0.7 CONFIG REQUIRED); get_property(_loc TARGET ECPINT::ecpint PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using ecpint${ColourReset}: ${_loc} (version ${ecpint_VERSION})""); else(); message(STATUS ""Disabled ecpint ${ecpint_DIR}""); endif(). if(${ENABLE_libefp}); # neither libefp nor pylibefp actually needed c-side; runtime detection would; # do just as well. included for completeness and so pylibefp_PYMOD can be; # hard-loaded into PYTHONPATH. also incl for finding efp frag files below.; find_package(libefp 1.5.0 CONFIG REQUIRED COMPONENTS shallow); get_property(_loc TARGET libefp::efp PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using libefp${ColourReset}: ${_loc} (version ${libefp_VERSION})""). #find_package(pylibefp 0.6.1 CONFIG REQUIRED); #get_property(_loc TARGET pylibefp::core PROPERTY LOCATION); include(FindPythonModule); find_python_module(pylibefp QUIET REQUIRED); #list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using pylibefp${ColourReset}: ${_loc} (version ${pylibefp_VERSION})""); else(); message(STATUS ""Disabled libefp ${libefp_DIR} ${pylibefp_DIR}""); endif(). if(${ENABLE_Einsums}); find_package(Einsums 0.3 CONFIG REQUIRED); get_property(_loc TARGET Einsums::einsums PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using Einsums${ColourReset}: ${_loc} (version ${Einsums_VERSION})""); else(); message(STATUS ""Disabled E",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:5588,Performance,load,loaded,5588,"""); endif(). if(${ENABLE_Einsums}); find_package(Einsums 0.3 CONFIG REQUIRED); get_property(_loc TARGET Einsums::einsums PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using Einsums${ColourReset}: ${_loc} (version ${Einsums_VERSION})""); else(); message(STATUS ""Disabled Einsums ${Einsums_DIR}""); endif (). if(${ENABLE_erd}); find_package(erd 3.0.6 CONFIG REQUIRED); get_property(_loc TARGET erd::erd PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using erd${ColourReset}: ${_loc} (version ${erd_VERSION})""); else(); message(STATUS ""Disabled erd ${erd_DIR}""); endif(). find_package(gau2grid 2.0 CONFIG REQUIRED); get_property(_loc TARGET gau2grid::gg PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using gau2grid${ColourReset}: ${_loc} (version ${gau2grid_VERSION})""). if(${ENABLE_gdma}); # neither gdma nor pygdma actually needed c-side; runtime detection would; # do just as well. included for completeness and so gdma_PYMOD can be; # hard-loaded into PYTHONPATH.; find_package(gdma 2.3.3 CONFIG REQUIRED COMPONENTS Python); get_property(_loc TARGET gdma::pygdma PROPERTY LOCATION); message(STATUS ""${Cyan}Found gdma${ColourReset}: ${_loc} (version ${gdma_VERSION})""); else(); message(STATUS ""Disabled gdma ${gdma_DIR}""); endif(). if(${ENABLE_Libint1t}); find_package(Libint 1.2.0 CONFIG REQUIRED COMPONENTS ${MAX_AM_ERI}); get_property(_loc TARGET Libint::int PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using Libint ${Libint_MAX_AM_ERI}${ColourReset}: ${_loc} (version ${Libint_VERSION})""); endif(). find_package(; Libint2; 2.7.2; CONFIG; REQUIRED; COMPONENTS; sss; CXX_ho; impure_sh; ""eri_c4_d0_l${MAX_AM_ERI}"" eri_c3_d0_l4 eri_c2_d0_l4 onebody_d0_l4; eri_c4_d1_l2 eri_c3_d1_l3 eri_c2_d1_l3 onebody_d1_l3; onebody_d2_l3; OPTIONAL_COMPONENTS; eri_c4_d2_l2 eri_c3_d2_l3 eri_c2_d2_l3; ); get_property(_loc TARGET Libint2::int2 PROPERTY LOCATION); # defer until upstream provides full-dress tar",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:3787,Safety,detect,detection,3787,"bit_DIR}""); endif (). if(${ENABLE_CheMPS2}); find_package(CheMPS2 1.8.7 CONFIG REQUIRED); get_property(_loc TARGET CheMPS2::chemps2 PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using CheMPS2${ColourReset}: ${_loc} (version ${CheMPS2_VERSION})""); else(); message(STATUS ""Disabled CheMPS2 ${CheMPS2_DIR}""); endif (). if(${ENABLE_dkh}); find_package(dkh 1.2 CONFIG REQUIRED); get_property(_loc TARGET dkh::dkh PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using dkh${ColourReset}: ${_loc} (version ${dkh_VERSION})""); else(); message(STATUS ""Disabled dkh ${dkh_DIR}""); endif(). if(${ENABLE_ecpint}); find_package(ecpint 1.0.7 CONFIG REQUIRED); get_property(_loc TARGET ECPINT::ecpint PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using ecpint${ColourReset}: ${_loc} (version ${ecpint_VERSION})""); else(); message(STATUS ""Disabled ecpint ${ecpint_DIR}""); endif(). if(${ENABLE_libefp}); # neither libefp nor pylibefp actually needed c-side; runtime detection would; # do just as well. included for completeness and so pylibefp_PYMOD can be; # hard-loaded into PYTHONPATH. also incl for finding efp frag files below.; find_package(libefp 1.5.0 CONFIG REQUIRED COMPONENTS shallow); get_property(_loc TARGET libefp::efp PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using libefp${ColourReset}: ${_loc} (version ${libefp_VERSION})""). #find_package(pylibefp 0.6.1 CONFIG REQUIRED); #get_property(_loc TARGET pylibefp::core PROPERTY LOCATION); include(FindPythonModule); find_python_module(pylibefp QUIET REQUIRED); #list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using pylibefp${ColourReset}: ${_loc} (version ${pylibefp_VERSION})""); else(); message(STATUS ""Disabled libefp ${libefp_DIR} ${pylibefp_DIR}""); endif(). if(${ENABLE_Einsums}); find_package(Einsums 0.3 CONFIG REQUIRED); get_property(_loc TARGET Einsums::einsums PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:5493,Safety,detect,detection,5493,"sion ${pylibefp_VERSION})""); else(); message(STATUS ""Disabled libefp ${libefp_DIR} ${pylibefp_DIR}""); endif(). if(${ENABLE_Einsums}); find_package(Einsums 0.3 CONFIG REQUIRED); get_property(_loc TARGET Einsums::einsums PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using Einsums${ColourReset}: ${_loc} (version ${Einsums_VERSION})""); else(); message(STATUS ""Disabled Einsums ${Einsums_DIR}""); endif (). if(${ENABLE_erd}); find_package(erd 3.0.6 CONFIG REQUIRED); get_property(_loc TARGET erd::erd PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using erd${ColourReset}: ${_loc} (version ${erd_VERSION})""); else(); message(STATUS ""Disabled erd ${erd_DIR}""); endif(). find_package(gau2grid 2.0 CONFIG REQUIRED); get_property(_loc TARGET gau2grid::gg PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using gau2grid${ColourReset}: ${_loc} (version ${gau2grid_VERSION})""). if(${ENABLE_gdma}); # neither gdma nor pygdma actually needed c-side; runtime detection would; # do just as well. included for completeness and so gdma_PYMOD can be; # hard-loaded into PYTHONPATH.; find_package(gdma 2.3.3 CONFIG REQUIRED COMPONENTS Python); get_property(_loc TARGET gdma::pygdma PROPERTY LOCATION); message(STATUS ""${Cyan}Found gdma${ColourReset}: ${_loc} (version ${gdma_VERSION})""); else(); message(STATUS ""Disabled gdma ${gdma_DIR}""); endif(). if(${ENABLE_Libint1t}); find_package(Libint 1.2.0 CONFIG REQUIRED COMPONENTS ${MAX_AM_ERI}); get_property(_loc TARGET Libint::int PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using Libint ${Libint_MAX_AM_ERI}${ColourReset}: ${_loc} (version ${Libint_VERSION})""); endif(). find_package(; Libint2; 2.7.2; CONFIG; REQUIRED; COMPONENTS; sss; CXX_ho; impure_sh; ""eri_c4_d0_l${MAX_AM_ERI}"" eri_c3_d0_l4 eri_c2_d0_l4 onebody_d0_l4; eri_c4_d1_l2 eri_c3_d1_l3 eri_c2_d1_l3 onebody_d1_l3; onebody_d2_l3; OPTIONAL_COMPONENTS; eri_c4_d2_l2 eri_c3_d2_l3 eri_c2_d2_l3; ); get_pr",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:11037,Testability,test,tests,11037,"ython bin/psi4""; configure_file(psi4.bat psi4.bat @ONLY); install(PROGRAMS ${CMAKE_BINARY_DIR}/psi4.bat; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_BINDIR}); endif(). # <<< install lib/ >>>; if(NOT ENABLE_CYTHONIZE); install(DIRECTORY driver; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4; FILES_MATCHING; PATTERN ""*.py""; PATTERN pytest EXCLUDE; ); endif(). install(FILES header.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). configure_file(__init__.py __init__.py @ONLY); configure_file(extras.py extras.py @ONLY); install(FILES ${CMAKE_BINARY_DIR}/__init__.py; ${CMAKE_BINARY_DIR}/extras.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). install(; FILES ../pytest.ini; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4; ); install(; DIRECTORY; ../tests/pytests/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; FILES_MATCHING; PATTERN ""test_*.py""; PATTERN ""__init__.py""; PATTERN ""addons.py""; PATTERN ""conftest.py""; PATTERN ""standard_suite_runner.py""; PATTERN ""standard_suite_ref_local.py""; PATTERN ""adcc_reference_data.json""; PATTERN ""oei_reference_data.json""; PATTERN ""f12_libint1.json""; PATTERN ""tdscf_reference_data.json""; PATTERN ""utils.py""; ); install(; DIRECTORY; ../tests/pytests/test_fchk_writer; ../tests/pytests/test_molden_writer; ../tests/pytests/test_psi4_qcschema; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; ). install(; DIRECTORY; ../tests/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; FILES_MATCHING; PATTERN ../tests/pytests EXCLUDE; PATTERN ../tests/cfour EXCLUDE; PATTERN ""test_input.py""; PATTERN ""input.dat""; PATTERN ""input.py""; PATTERN ""__pycache__"" EXCLUDE; PATTERN ""*pyc"" EXCLUDE; # below place extra files the ctests-run-as-pytests need; PATT",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:11141,Testability,test,tests,11141,"ython bin/psi4""; configure_file(psi4.bat psi4.bat @ONLY); install(PROGRAMS ${CMAKE_BINARY_DIR}/psi4.bat; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_BINDIR}); endif(). # <<< install lib/ >>>; if(NOT ENABLE_CYTHONIZE); install(DIRECTORY driver; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4; FILES_MATCHING; PATTERN ""*.py""; PATTERN pytest EXCLUDE; ); endif(). install(FILES header.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). configure_file(__init__.py __init__.py @ONLY); configure_file(extras.py extras.py @ONLY); install(FILES ${CMAKE_BINARY_DIR}/__init__.py; ${CMAKE_BINARY_DIR}/extras.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). install(; FILES ../pytest.ini; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4; ); install(; DIRECTORY; ../tests/pytests/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; FILES_MATCHING; PATTERN ""test_*.py""; PATTERN ""__init__.py""; PATTERN ""addons.py""; PATTERN ""conftest.py""; PATTERN ""standard_suite_runner.py""; PATTERN ""standard_suite_ref_local.py""; PATTERN ""adcc_reference_data.json""; PATTERN ""oei_reference_data.json""; PATTERN ""f12_libint1.json""; PATTERN ""tdscf_reference_data.json""; PATTERN ""utils.py""; ); install(; DIRECTORY; ../tests/pytests/test_fchk_writer; ../tests/pytests/test_molden_writer; ../tests/pytests/test_psi4_qcschema; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; ). install(; DIRECTORY; ../tests/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; FILES_MATCHING; PATTERN ../tests/pytests EXCLUDE; PATTERN ../tests/cfour EXCLUDE; PATTERN ""test_input.py""; PATTERN ""input.dat""; PATTERN ""input.py""; PATTERN ""__pycache__"" EXCLUDE; PATTERN ""*pyc"" EXCLUDE; # below place extra files the ctests-run-as-pytests need; PATT",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:11511,Testability,test,tests,11511,"LES header.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). configure_file(__init__.py __init__.py @ONLY); configure_file(extras.py extras.py @ONLY); install(FILES ${CMAKE_BINARY_DIR}/__init__.py; ${CMAKE_BINARY_DIR}/extras.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). install(; FILES ../pytest.ini; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4; ); install(; DIRECTORY; ../tests/pytests/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; FILES_MATCHING; PATTERN ""test_*.py""; PATTERN ""__init__.py""; PATTERN ""addons.py""; PATTERN ""conftest.py""; PATTERN ""standard_suite_runner.py""; PATTERN ""standard_suite_ref_local.py""; PATTERN ""adcc_reference_data.json""; PATTERN ""oei_reference_data.json""; PATTERN ""f12_libint1.json""; PATTERN ""tdscf_reference_data.json""; PATTERN ""utils.py""; ); install(; DIRECTORY; ../tests/pytests/test_fchk_writer; ../tests/pytests/test_molden_writer; ../tests/pytests/test_psi4_qcschema; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; ). install(; DIRECTORY; ../tests/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; FILES_MATCHING; PATTERN ../tests/pytests EXCLUDE; PATTERN ../tests/cfour EXCLUDE; PATTERN ""test_input.py""; PATTERN ""input.dat""; PATTERN ""input.py""; PATTERN ""__pycache__"" EXCLUDE; PATTERN ""*pyc"" EXCLUDE; # below place extra files the ctests-run-as-pytests need; PATTERN ""adcc/formaldehyde-pe-adc1/fa_6w.pot""; PATTERN ""adcc/formaldehyde-pe-adc2/fa_6w.pot""; PATTERN ""ci-property/grid.dat""; PATTERN ""scf-property/grid.dat""; PATTERN ""mp2-property/grid.dat""; PATTERN ""cubeprop*/*cube.ref""; PATTERN ""fcidump/*INTDUMP.ref""; PATTERN ""psithon2/psiaux1/*""; PATTERN ""psithon2/psiaux1/myplugin1/*""; PATTERN ""psithon2/psiaux2/*""; PATTERN ""dftd3/psithon2/psiaux1/*""; PATTERN ""dftd3/psithon2/psiaux1",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:11546,Testability,test,tests,11546,"NSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). configure_file(__init__.py __init__.py @ONLY); configure_file(extras.py extras.py @ONLY); install(FILES ${CMAKE_BINARY_DIR}/__init__.py; ${CMAKE_BINARY_DIR}/extras.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). install(; FILES ../pytest.ini; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4; ); install(; DIRECTORY; ../tests/pytests/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; FILES_MATCHING; PATTERN ""test_*.py""; PATTERN ""__init__.py""; PATTERN ""addons.py""; PATTERN ""conftest.py""; PATTERN ""standard_suite_runner.py""; PATTERN ""standard_suite_ref_local.py""; PATTERN ""adcc_reference_data.json""; PATTERN ""oei_reference_data.json""; PATTERN ""f12_libint1.json""; PATTERN ""tdscf_reference_data.json""; PATTERN ""utils.py""; ); install(; DIRECTORY; ../tests/pytests/test_fchk_writer; ../tests/pytests/test_molden_writer; ../tests/pytests/test_psi4_qcschema; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; ). install(; DIRECTORY; ../tests/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; FILES_MATCHING; PATTERN ../tests/pytests EXCLUDE; PATTERN ../tests/cfour EXCLUDE; PATTERN ""test_input.py""; PATTERN ""input.dat""; PATTERN ""input.py""; PATTERN ""__pycache__"" EXCLUDE; PATTERN ""*pyc"" EXCLUDE; # below place extra files the ctests-run-as-pytests need; PATTERN ""adcc/formaldehyde-pe-adc1/fa_6w.pot""; PATTERN ""adcc/formaldehyde-pe-adc2/fa_6w.pot""; PATTERN ""ci-property/grid.dat""; PATTERN ""scf-property/grid.dat""; PATTERN ""mp2-property/grid.dat""; PATTERN ""cubeprop*/*cube.ref""; PATTERN ""fcidump/*INTDUMP.ref""; PATTERN ""psithon2/psiaux1/*""; PATTERN ""psithon2/psiaux1/myplugin1/*""; PATTERN ""psithon2/psiaux2/*""; PATTERN ""dftd3/psithon2/psiaux1/*""; PATTERN ""dftd3/psithon2/psiaux1/myplugin1/*""; PATTERN ""dftd3/psitho",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:11583,Testability,test,tests,11583,"_init__.py __init__.py @ONLY); configure_file(extras.py extras.py @ONLY); install(FILES ${CMAKE_BINARY_DIR}/__init__.py; ${CMAKE_BINARY_DIR}/extras.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). install(; FILES ../pytest.ini; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4; ); install(; DIRECTORY; ../tests/pytests/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; FILES_MATCHING; PATTERN ""test_*.py""; PATTERN ""__init__.py""; PATTERN ""addons.py""; PATTERN ""conftest.py""; PATTERN ""standard_suite_runner.py""; PATTERN ""standard_suite_ref_local.py""; PATTERN ""adcc_reference_data.json""; PATTERN ""oei_reference_data.json""; PATTERN ""f12_libint1.json""; PATTERN ""tdscf_reference_data.json""; PATTERN ""utils.py""; ); install(; DIRECTORY; ../tests/pytests/test_fchk_writer; ../tests/pytests/test_molden_writer; ../tests/pytests/test_psi4_qcschema; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; ). install(; DIRECTORY; ../tests/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; FILES_MATCHING; PATTERN ../tests/pytests EXCLUDE; PATTERN ../tests/cfour EXCLUDE; PATTERN ""test_input.py""; PATTERN ""input.dat""; PATTERN ""input.py""; PATTERN ""__pycache__"" EXCLUDE; PATTERN ""*pyc"" EXCLUDE; # below place extra files the ctests-run-as-pytests need; PATTERN ""adcc/formaldehyde-pe-adc1/fa_6w.pot""; PATTERN ""adcc/formaldehyde-pe-adc2/fa_6w.pot""; PATTERN ""ci-property/grid.dat""; PATTERN ""scf-property/grid.dat""; PATTERN ""mp2-property/grid.dat""; PATTERN ""cubeprop*/*cube.ref""; PATTERN ""fcidump/*INTDUMP.ref""; PATTERN ""psithon2/psiaux1/*""; PATTERN ""psithon2/psiaux1/myplugin1/*""; PATTERN ""psithon2/psiaux2/*""; PATTERN ""dftd3/psithon2/psiaux1/*""; PATTERN ""dftd3/psithon2/psiaux1/myplugin1/*""; PATTERN ""dftd3/psithon2/psiaux2/*""; PATTERN ""mints3/L*dat""; PATTERN ""mints3/P*dat""; ). # <<< install psi4 s",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:11705,Testability,test,tests,11705,"_init__.py __init__.py @ONLY); configure_file(extras.py extras.py @ONLY); install(FILES ${CMAKE_BINARY_DIR}/__init__.py; ${CMAKE_BINARY_DIR}/extras.py; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). install(; FILES ../pytest.ini; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4; ); install(; DIRECTORY; ../tests/pytests/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; FILES_MATCHING; PATTERN ""test_*.py""; PATTERN ""__init__.py""; PATTERN ""addons.py""; PATTERN ""conftest.py""; PATTERN ""standard_suite_runner.py""; PATTERN ""standard_suite_ref_local.py""; PATTERN ""adcc_reference_data.json""; PATTERN ""oei_reference_data.json""; PATTERN ""f12_libint1.json""; PATTERN ""tdscf_reference_data.json""; PATTERN ""utils.py""; ); install(; DIRECTORY; ../tests/pytests/test_fchk_writer; ../tests/pytests/test_molden_writer; ../tests/pytests/test_psi4_qcschema; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; ). install(; DIRECTORY; ../tests/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; FILES_MATCHING; PATTERN ../tests/pytests EXCLUDE; PATTERN ../tests/cfour EXCLUDE; PATTERN ""test_input.py""; PATTERN ""input.dat""; PATTERN ""input.py""; PATTERN ""__pycache__"" EXCLUDE; PATTERN ""*pyc"" EXCLUDE; # below place extra files the ctests-run-as-pytests need; PATTERN ""adcc/formaldehyde-pe-adc1/fa_6w.pot""; PATTERN ""adcc/formaldehyde-pe-adc2/fa_6w.pot""; PATTERN ""ci-property/grid.dat""; PATTERN ""scf-property/grid.dat""; PATTERN ""mp2-property/grid.dat""; PATTERN ""cubeprop*/*cube.ref""; PATTERN ""fcidump/*INTDUMP.ref""; PATTERN ""psithon2/psiaux1/*""; PATTERN ""psithon2/psiaux1/myplugin1/*""; PATTERN ""psithon2/psiaux2/*""; PATTERN ""dftd3/psithon2/psiaux1/*""; PATTERN ""dftd3/psithon2/psiaux1/myplugin1/*""; PATTERN ""dftd3/psithon2/psiaux2/*""; PATTERN ""mints3/L*dat""; PATTERN ""mints3/P*dat""; ). # <<< install psi4 s",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:11740,Testability,test,tests,11740,"INATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). install(; FILES ../pytest.ini; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4; ); install(; DIRECTORY; ../tests/pytests/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; FILES_MATCHING; PATTERN ""test_*.py""; PATTERN ""__init__.py""; PATTERN ""addons.py""; PATTERN ""conftest.py""; PATTERN ""standard_suite_runner.py""; PATTERN ""standard_suite_ref_local.py""; PATTERN ""adcc_reference_data.json""; PATTERN ""oei_reference_data.json""; PATTERN ""f12_libint1.json""; PATTERN ""tdscf_reference_data.json""; PATTERN ""utils.py""; ); install(; DIRECTORY; ../tests/pytests/test_fchk_writer; ../tests/pytests/test_molden_writer; ../tests/pytests/test_psi4_qcschema; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; ). install(; DIRECTORY; ../tests/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; FILES_MATCHING; PATTERN ../tests/pytests EXCLUDE; PATTERN ../tests/cfour EXCLUDE; PATTERN ""test_input.py""; PATTERN ""input.dat""; PATTERN ""input.py""; PATTERN ""__pycache__"" EXCLUDE; PATTERN ""*pyc"" EXCLUDE; # below place extra files the ctests-run-as-pytests need; PATTERN ""adcc/formaldehyde-pe-adc1/fa_6w.pot""; PATTERN ""adcc/formaldehyde-pe-adc2/fa_6w.pot""; PATTERN ""ci-property/grid.dat""; PATTERN ""scf-property/grid.dat""; PATTERN ""mp2-property/grid.dat""; PATTERN ""cubeprop*/*cube.ref""; PATTERN ""fcidump/*INTDUMP.ref""; PATTERN ""psithon2/psiaux1/*""; PATTERN ""psithon2/psiaux1/myplugin1/*""; PATTERN ""psithon2/psiaux2/*""; PATTERN ""dftd3/psithon2/psiaux1/*""; PATTERN ""dftd3/psithon2/psiaux1/myplugin1/*""; PATTERN ""dftd3/psithon2/psiaux2/*""; PATTERN ""mints3/L*dat""; PATTERN ""mints3/P*dat""; ). # <<< install psi4 share/ & include/ >>>. install(DIRECTORY share/psi4/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4; MESSAGE_NEVER; PATTERN ""*.bin"" EXCL",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:11836,Testability,test,tests,11836,"INATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4). install(; FILES ../pytest.ini; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4; ); install(; DIRECTORY; ../tests/pytests/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; FILES_MATCHING; PATTERN ""test_*.py""; PATTERN ""__init__.py""; PATTERN ""addons.py""; PATTERN ""conftest.py""; PATTERN ""standard_suite_runner.py""; PATTERN ""standard_suite_ref_local.py""; PATTERN ""adcc_reference_data.json""; PATTERN ""oei_reference_data.json""; PATTERN ""f12_libint1.json""; PATTERN ""tdscf_reference_data.json""; PATTERN ""utils.py""; ); install(; DIRECTORY; ../tests/pytests/test_fchk_writer; ../tests/pytests/test_molden_writer; ../tests/pytests/test_psi4_qcschema; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; ). install(; DIRECTORY; ../tests/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; FILES_MATCHING; PATTERN ../tests/pytests EXCLUDE; PATTERN ../tests/cfour EXCLUDE; PATTERN ""test_input.py""; PATTERN ""input.dat""; PATTERN ""input.py""; PATTERN ""__pycache__"" EXCLUDE; PATTERN ""*pyc"" EXCLUDE; # below place extra files the ctests-run-as-pytests need; PATTERN ""adcc/formaldehyde-pe-adc1/fa_6w.pot""; PATTERN ""adcc/formaldehyde-pe-adc2/fa_6w.pot""; PATTERN ""ci-property/grid.dat""; PATTERN ""scf-property/grid.dat""; PATTERN ""mp2-property/grid.dat""; PATTERN ""cubeprop*/*cube.ref""; PATTERN ""fcidump/*INTDUMP.ref""; PATTERN ""psithon2/psiaux1/*""; PATTERN ""psithon2/psiaux1/myplugin1/*""; PATTERN ""psithon2/psiaux2/*""; PATTERN ""dftd3/psithon2/psiaux1/*""; PATTERN ""dftd3/psithon2/psiaux1/myplugin1/*""; PATTERN ""dftd3/psithon2/psiaux2/*""; PATTERN ""mints3/L*dat""; PATTERN ""mints3/P*dat""; ). # <<< install psi4 share/ & include/ >>>. install(DIRECTORY share/psi4/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4; MESSAGE_NEVER; PATTERN ""*.bin"" EXCL",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:11871,Testability,test,tests,11871,"4). install(; FILES ../pytest.ini; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4; ); install(; DIRECTORY; ../tests/pytests/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; FILES_MATCHING; PATTERN ""test_*.py""; PATTERN ""__init__.py""; PATTERN ""addons.py""; PATTERN ""conftest.py""; PATTERN ""standard_suite_runner.py""; PATTERN ""standard_suite_ref_local.py""; PATTERN ""adcc_reference_data.json""; PATTERN ""oei_reference_data.json""; PATTERN ""f12_libint1.json""; PATTERN ""tdscf_reference_data.json""; PATTERN ""utils.py""; ); install(; DIRECTORY; ../tests/pytests/test_fchk_writer; ../tests/pytests/test_molden_writer; ../tests/pytests/test_psi4_qcschema; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; ). install(; DIRECTORY; ../tests/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; FILES_MATCHING; PATTERN ../tests/pytests EXCLUDE; PATTERN ../tests/cfour EXCLUDE; PATTERN ""test_input.py""; PATTERN ""input.dat""; PATTERN ""input.py""; PATTERN ""__pycache__"" EXCLUDE; PATTERN ""*pyc"" EXCLUDE; # below place extra files the ctests-run-as-pytests need; PATTERN ""adcc/formaldehyde-pe-adc1/fa_6w.pot""; PATTERN ""adcc/formaldehyde-pe-adc2/fa_6w.pot""; PATTERN ""ci-property/grid.dat""; PATTERN ""scf-property/grid.dat""; PATTERN ""mp2-property/grid.dat""; PATTERN ""cubeprop*/*cube.ref""; PATTERN ""fcidump/*INTDUMP.ref""; PATTERN ""psithon2/psiaux1/*""; PATTERN ""psithon2/psiaux1/myplugin1/*""; PATTERN ""psithon2/psiaux2/*""; PATTERN ""dftd3/psithon2/psiaux1/*""; PATTERN ""dftd3/psithon2/psiaux1/myplugin1/*""; PATTERN ""dftd3/psithon2/psiaux2/*""; PATTERN ""mints3/L*dat""; PATTERN ""mints3/P*dat""; ). # <<< install psi4 share/ & include/ >>>. install(DIRECTORY share/psi4/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4; MESSAGE_NEVER; PATTERN ""*.bin"" EXCLUDE; PATTERN ""*.pyc"" EXCLUDE). install(FILES share/psi4/quadratures/1_x/R_avail${_e",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:11905,Testability,test,tests,11905,"INATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4; ); install(; DIRECTORY; ../tests/pytests/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; FILES_MATCHING; PATTERN ""test_*.py""; PATTERN ""__init__.py""; PATTERN ""addons.py""; PATTERN ""conftest.py""; PATTERN ""standard_suite_runner.py""; PATTERN ""standard_suite_ref_local.py""; PATTERN ""adcc_reference_data.json""; PATTERN ""oei_reference_data.json""; PATTERN ""f12_libint1.json""; PATTERN ""tdscf_reference_data.json""; PATTERN ""utils.py""; ); install(; DIRECTORY; ../tests/pytests/test_fchk_writer; ../tests/pytests/test_molden_writer; ../tests/pytests/test_psi4_qcschema; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; ). install(; DIRECTORY; ../tests/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4/tests/; FILES_MATCHING; PATTERN ../tests/pytests EXCLUDE; PATTERN ../tests/cfour EXCLUDE; PATTERN ""test_input.py""; PATTERN ""input.dat""; PATTERN ""input.py""; PATTERN ""__pycache__"" EXCLUDE; PATTERN ""*pyc"" EXCLUDE; # below place extra files the ctests-run-as-pytests need; PATTERN ""adcc/formaldehyde-pe-adc1/fa_6w.pot""; PATTERN ""adcc/formaldehyde-pe-adc2/fa_6w.pot""; PATTERN ""ci-property/grid.dat""; PATTERN ""scf-property/grid.dat""; PATTERN ""mp2-property/grid.dat""; PATTERN ""cubeprop*/*cube.ref""; PATTERN ""fcidump/*INTDUMP.ref""; PATTERN ""psithon2/psiaux1/*""; PATTERN ""psithon2/psiaux1/myplugin1/*""; PATTERN ""psithon2/psiaux2/*""; PATTERN ""dftd3/psithon2/psiaux1/*""; PATTERN ""dftd3/psithon2/psiaux1/myplugin1/*""; PATTERN ""dftd3/psithon2/psiaux2/*""; PATTERN ""mints3/L*dat""; PATTERN ""mints3/P*dat""; ). # <<< install psi4 share/ & include/ >>>. install(DIRECTORY share/psi4/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4; MESSAGE_NEVER; PATTERN ""*.bin"" EXCLUDE; PATTERN ""*.pyc"" EXCLUDE). install(FILES share/psi4/quadratures/1_x/R_avail${_endian_ext}.bin; RENAME quadratures/1_x",MatchSource.DOCS,psi4/CMakeLists.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:5379,Availability,error,error,5379,", 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'modul",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:5611,Availability,error,error,5611,"s': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:5845,Availability,error,error,5845,"si4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:6070,Availability,error,error,6070,"nergy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'drive",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:6302,Availability,error,error,6302,"cae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimizati",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:6536,Availability,error,error,6536,"e': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'metho",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:6760,Availability,error,error,6760,"f', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:7206,Availability,error,error,7206,"erence': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:7654,Availability,error,error,7654,"d(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'm",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:8060,Availability,error,error,8060,"4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:8506,Availability,error,error,8506,"4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:8954,Availability,error,error,8954,"d(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 's",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:9355,Availability,error,error,9355," 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:9571,Availability,error,error,9571," dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module':",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:10717,Availability,error,error,10717,"'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:10933,Availability,error,error,10933,"orl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module':",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:12080,Availability,error,error,12080,"fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:12291,Availability,error,error,12291,", 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc':",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:12504,Availability,error,error,12504,"nv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 's",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:12715,Availability,error,error,12715," 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:12926,Availability,error,error,12926,"odule': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 's",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:13139,Availability,error,error,13139,"ule': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd',",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:13349,Availability,error,error,13349,"dule': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd',",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:13559,Availability,error,error,13559,"'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:13771,Availability,error,error,13771,"module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc':",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:13981,Availability,error,error,13981,"'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:14191,Availability,error,error,14191,"; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'c",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:14403,Availability,error,error,14403,"{'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:14613,Availability,error,error,14613,"{'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:14829,Availability,error,error,14829,"dule': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module':",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:15975,Availability,error,error,15975,"'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:16191,Availability,error,error,16191,"orl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module':",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:17338,Availability,error,error,17338,"fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:17549,Availability,error,error,17549,", 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc':",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:17762,Availability,error,error,17762,"nv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 's",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:17973,Availability,error,error,17973," 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:18184,Availability,error,error,18184,"odule': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 's",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:18397,Availability,error,error,18397,"ule': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd',",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:18607,Availability,error,error,18607,"dule': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd',",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:18817,Availability,error,error,18817,"'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:19029,Availability,error,error,19029,"module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_typ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:19239,Availability,error,error,19239,"'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'no",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:19449,Availability,error,error,19449,"; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:19661,Availability,error,error,19661,"{'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:23886,Availability,error,error,23886,"f', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'n",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:24083,Availability,error,error,24083," 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:24280,Availability,error,error,24280,"'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:24477,Availability,error,error,24477,"_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:24674,Availability,error,error,24674,"l_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:24871,Availability,error,error,24871," 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:31080,Availability,error,error,31080,"', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:31276,Availability,error,error,31276,"'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:31474,Availability,error,error,31474,"sc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:33847,Availability,error,error,33847,"ce': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'gradient', ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:36814,Availability,error,error,36814,"'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradien",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:37012,Availability,error,error,37012,"'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'modul",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:37210,Availability,error,error,37210,"cf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:37410,Availability,error,error,37410,"', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient',",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:37782,Availability,error,error,37782,"corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'gradient', ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:40745,Availability,error,error,40745,"e': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'no",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:40961,Availability,error,error,40961,"'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:42116,Availability,error,error,42116,"sc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'no",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:42332,Availability,error,error,42332,": 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:43488,Availability,error,error,43488,"c': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:43705,Availability,error,error,43705,"'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:44866,Availability,error,error,44866,"'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:45083,Availability,error,error,45083,"nv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:46243,Availability,error,error,46243," 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'no",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:46459,Availability,error,error,46459,"conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:47614,Availability,error,error,47614,"sc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'no",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:47830,Availability,error,error,47830,": 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:48988,Availability,error,error,48988,": 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'statu",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:49207,Availability,error,error,49207,"v', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defa",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:50380,Availability,error,error,50380,"_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'statu",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:50599,Availability,error,error,50599,"us': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defa",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:51773,Availability,error,error,51773,"type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:51993,Availability,error,error,51993,"': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:53172,Availability,error,error,53172,"': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:53392,Availability,error,error,53392,"'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:54570,Availability,error,error,54570,"e': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'statu",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:54789,Availability,error,error,54789,": 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defa",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:55962,Availability,error,error,55962,"_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'statu",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:56181,Availability,error,error,56181,"us': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defa",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:57350,Availability,error,error,57350,"'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'ps",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:57552,Availability,error,error,57552,"_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:58688,Availability,error,error,58688,", 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'ps",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:58890,Availability,error,error,58890," 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:60027,Availability,error,error,60027," 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:60230,Availability,error,error,60230,"pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'ps",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:61372,Availability,error,error,61372,"sc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:61575,Availability,error,error,61575,", 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'ps",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:62716,Availability,error,error,62716,"dsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'ps",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:62918,Availability,error,error,62918,"k', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:64054,Availability,error,error,64054,", 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'ps",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:64256,Availability,error,error,64256," 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:65394,Availability,error,error,65394,"'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:65598,Availability,error,error,65598,"', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'dr",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:67497,Availability,error,error,67497,"type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'no",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:67701,Availability,error,error,67701,"corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:68271,Availability,error,error,68271,"', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'd",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:68489,Availability,error,error,68489,"s': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'statu",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:69084,Availability,error,error,69084," 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:69289,Availability,error,error,69289," no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:69862,Availability,error,error,69862,"'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:70097,Availability,error,error,70097,"'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_typ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:70710,Availability,error,error,70710,"': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:70915,Availability,error,error,70915," ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:71488,Availability,error,error,71488,"'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:71723,Availability,error,error,71723,"'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type':",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:72335,Availability,error,error,72335,"e': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'statu",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:72539,Availability,error,error,72539,"by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:73109,Availability,error,error,73109,"pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'sc",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:73343,Availability,error,error,73343,"te': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:73953,Availability,error,error,73953,"odule': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'statu",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:74157,Availability,error,error,74157,"c2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:74727,Availability,error,error,74727,"pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_ty",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:74961,Availability,error,error,74961,"te': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv',",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:75569,Availability,error,error,75569,"'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'ps",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:75771,Availability,error,error,75771,"or cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:76907,Availability,error,error,76907,", 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'ps",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:77109,Availability,error,error,77109," 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:78246,Availability,error,error,78246," 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:78449,Availability,error,error,78449,"pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'ps",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:79591,Availability,error,error,79591,"sc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:79794,Availability,error,error,79794,", 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'ps",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:80935,Availability,error,error,80935,"dsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'ps",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:81137,Availability,error,error,81137,"k', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:82273,Availability,error,error,82273,", 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'ps",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:82475,Availability,error,error,82475," 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-',",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:84677,Availability,error,error,84677,"od': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:85940,Availability,error,error,85940,"od': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv for ccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:86143,Availability,error,error,86143,"hf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv for ccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:86344,Availability,error,error,86344,"dsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv for ccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:86570,Availability,error,error,86570,"status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv for ccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:86798,Availability,error,error,86798,"4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv for ccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_t",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:86996,Availability,error,error,86996,"i4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv for ccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:87222,Availability,error,error,87222,"gy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'd",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:87450,Availability,error,error,87450,"', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:88713,Availability,error,error,88713,"od': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:89976,Availability,error,error,89976,"od': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:90348,Availability,error,error,90348,"erence': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:91629,Availability,error,error,91629,"ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:92001,Availability,error,error,92001,"hf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:93282,Availability,error,error,93282,"ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:93482,Availability,error,error,93482,"fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'me",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:93710,Availability,error,error,93710,"_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:93940,Availability,error,error,93940,"module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'co",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:94140,Availability,error,error,94140,", 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:94368,Availability,error,error,94368,"thod': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:94598,Availability,error,error,94598,"od': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:94970,Availability,error,error,94970," by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:96251,Availability,error,error,96251,"ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:96623,Availability,error,error,96623,"hf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:97904,Availability,error,error,97904,"ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'r",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:99896,Availability,error,error,99896,"csd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-c",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:101419,Availability,error,error,101419,"'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:103610,Availability,error,error,103610,"csd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-c",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:105133,Availability,error,error,105133,"'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'co",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:105531,Availability,error,error,105531,", 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'con",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:105758,Availability,error,error,105758,"ss', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:107114,Availability,error,error,107114,"cf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'con",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:107341,Availability,error,error,107341," 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:113952,Availability,error,error,113952,"f', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method':",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:117120,Availability,error,error,117120," 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method':",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:118778,Availability,error,error,118778," 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:118997,Availability,error,error,118997," 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:119595,Availability,error,error,119595,"e': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'statu",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:119824,Availability,error,error,119824,"'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:121766,Availability,error,error,121766,"', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:121995,Availability,error,error,121995,"', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'p",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:122594,Availability,error,error,122594,"ltdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'n",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:122814,Availability,error,error,122814,")/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:123587,Availability,error,error,123587,"': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'cc",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:126751,Availability,error,error,126751," 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'cc",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:128405,Availability,error,error,128405," 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pas",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:128624,Availability,error,error,128624," 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'p",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:131046,Availability,error,error,131046,"e': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'m",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:132593,Availability,error,error,132593,"', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'dr",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:134820,Availability,error,error,134820,"e': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'m",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:136367,Availability,error,error,136367,"', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_t",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:136771,Availability,error,error,136771,"'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'c",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:137001,Availability,error,error,137001,"efaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:138190,Availability,error,error,138190,"': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'c",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:138420,Availability,error,error,138420,"ote': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:139608,Availability,error,error,139608,"e': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:140050,Availability,error,error,140050,"; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 's",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:141626,Availability,error,error,141626,"type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:142068,Availability,error,error,142068,"ote': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 's",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:143823,Availability,error,error,143823,"', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradi",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:145508,Availability,error,error,145508," 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=ccenergy for conv rhf/uhf gradients for ccsd(t) by ccenergy until scaling reworked'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'ccsd(t)', 'referenc",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:146386,Availability,error,error,146386,"'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=ccenergy for conv rhf/uhf gradients for ccsd(t) by ccenergy until scaling reworked'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradi",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:148071,Availability,error,error,148071," 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=ccenergy for conv rhf/uhf gradients for ccsd(t) by ccenergy until scaling reworked'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'modu",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:148388,Availability,error,error,148388,"t', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=ccenergy for conv rhf/uhf gradients for ccsd(t) by ccenergy until scaling reworked'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae':",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:148995,Availability,error,error,148995,"': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=ccenergy for conv rhf/uhf gradients for ccsd(t) by ccenergy until scaling reworked'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv rohf gradients for ccsd(t) by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf',",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:149227,Availability,error,error,149227,"'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv rohf gradients for ccsd(t) by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_typ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:149835,Availability,error,error,149835,"module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv rohf gradients for ccsd(t) by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'refere",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:150463,Availability,error,error,150463," 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv rohf gradients for ccsd(t) by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv rohf gradients for ccsd(t) by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf',",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:150695,Availability,error,error,150695,"er': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv rohf gradients for ccsd(t) by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv rohf gradients for ccsd(t) by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_typ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:151303,Availability,error,error,151303,"module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv rohf gradients for ccsd(t) by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'modu",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:151930,Availability,error,error,151930,", 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv rohf gradients for ccsd(t) by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=ccenergy for conv rhf/uhf gradients for",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:152194,Availability,error,error,152194,"d(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv rohf gradients for ccsd(t) by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=ccenergy for conv rhf/uhf gradients for ccsd(t) by ccenergy until scaling reworked'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccener",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:152832,Availability,error,error,152832,"reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=ccenergy for conv rhf/uhf gradients for ccsd(t) by ccenergy until scaling reworked'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t)",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:153533,Availability,error,error,153533,"(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=ccenergy for conv rhf/uhf gradients for ccsd(t) by ccenergy until scaling reworked'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=ccenergy for conv rhf/uhf gradients for",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:153797,Availability,error,error,153797,"'corl_type': 'conv', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=ccenergy for conv rhf/uhf gradients for ccsd(t) by ccenergy until scaling reworked'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=ccenergy for conv rhf/uhf gradients for ccsd(t) by ccenergy until scaling reworked'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenerg",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:154435,Availability,error,error,154435,"reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=ccenergy for conv rhf/uhf gradients for ccsd(t) by ccenergy until scaling reworked'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:154752,Availability,error,error,154752,"ype': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=ccenergy for conv rhf/uhf gradients for ccsd(t) by ccenergy until scaling reworked'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_typ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:155356,Availability,error,error,155356,"cae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=ccenergy for conv rhf/uhf gradients for ccsd(t) by ccenergy until scaling reworked'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'p",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:155575,Availability,error,error,155575,"d'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefaul",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:156739,Availability,error,error,156739,"sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'p",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:156958,Availability,error,error,156958,"v', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefaul",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:158123,Availability,error,error,158123,"d', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae':",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:158337,Availability,error,error,158337,"'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:158553,Availability,error,error,158553,"'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:158767,Availability,error,error,158767,"module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'a",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:158981,Availability,error,error,158981," 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:159197,Availability,error,error,159197,"driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:159410,Availability,error,error,159410,"'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:159623,Availability,error,error,159623,"', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'a",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:159838,Availability,error,error,159838,", 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:160051,Availability,error,error,160051,"', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf',",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:160264,Availability,error,error,160264,"si4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:160479,Availability,error,error,160479,"4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'cor",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:160692,Availability,error,error,160692,"4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'p",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:160911,Availability,error,error,160911,"'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefaul",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:162075,Availability,error,error,162075,"sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'p",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:162294,Availability,error,error,162294,"v', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefaul",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:163459,Availability,error,error,163459,"d', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae':",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:163673,Availability,error,error,163673,"'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:163889,Availability,error,error,163889,"'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:164103,Availability,error,error,164103,"module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'a",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:164317,Availability,error,error,164317," 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:164533,Availability,error,error,164533,"driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:164746,Availability,error,error,164746,"'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:164959,Availability,error,error,164959,"', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae',",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:165174,Availability,error,error,165174,", 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 's",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:165387,Availability,error,error,165387,"', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:165600,Availability,error,error,165600,"si4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pas",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:165815,Availability,error,error,165815,"4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'m",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:166025,Availability,error,error,166025,"psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:166223,Availability,error,error,166223,"c'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:167532,Availability,error,error,167532," 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:167730,Availability,error,error,167730,"dsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:169040,Availability,error,error,169040,"'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-det",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:169239,Availability,error,error,169239,"c': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'dri",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:170373,Availability,error,error,170373," 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-det",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:170572,Availability,error,error,170572,"pe': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'dri",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:171705,Availability,error,error,171705,", 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:171903,Availability,error,error,171903,"type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:172103,Availability,error,error,172103,"': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:172301,Availability,error,error,172301,"ype': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaul",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:172499,Availability,error,error,172499,"nv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdef",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:172699,Availability,error,error,172699,": 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:184512,Availability,error,error,184512,"thod': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no cd scf gradients to underlie post-scf'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'g",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:187619,Availability,error,error,187619,"od': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no cd scf gradients to underlie post-scf'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:190739,Availability,error,error,190739,"': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no cd scf gradients to underlie post-scf'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'g",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:196548,Availability,error,error,196548,"'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'hessian', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf hessians for hf'}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'hessian', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf hessians for hf'}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:197293,Availability,error,error,197293,"ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'hessian', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf hessians for hf'}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'hessian', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf hessians for hf'}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'h",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:205616,Availability,error,error,205616,"'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:205831,Availability,error,error,205831," 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:206048,Availability,error,error,206048," 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:206263,Availability,error,error,206263,"cae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'f",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:206478,Availability,error,error,206478,": 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:206695,Availability,error,error,206695,"r', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:212135,Availability,error,error,212135,"ence': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lc",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:215278,Availability,error,error,215278,": 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lc",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:216932,Availability,error,error,216932,"', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:217538,Availability,error,error,217538,"', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:217756,Availability,error,error,217756,"', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:217973,Availability,error,error,217973,", 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:218192,Availability,error,error,218192,"': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradien",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:218409,Availability,error,error,218409,"'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:218626,Availability,error,error,218626,"': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:218845,Availability,error,error,218845,"': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'co",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:219235,Availability,error,error,219235,,MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:222374,Availability,error,error,222374,": 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lc",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:224028,Availability,error,error,224028," 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:224251,Availability,error,error,224251,"f_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'co",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:224846,Availability,error,error,224846,"': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'not",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:225063,Availability,error,error,225063,"ents for lccd by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'mod",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:226215,Availability,error,error,226215," 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'not",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:226432,Availability,error,error,226432,"ype': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'mod",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:227585,Availability,error,error,227585,"'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sd",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:227797,Availability,error,error,227797,"rl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 's",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:228011,Availability,error,error,228011,"'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:228223,Availability,error,error,228223,"ault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:228435,Availability,error,error,228435,"': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:228649,Availability,error,error,228649," 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:228860,Availability,error,error,228860,": 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:229071,Availability,error,error,229071,"le': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc':",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:229284,Availability,error,error,229284,"e': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type':",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:229495,Availability,error,error,229495,"le': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'd",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:229706,Availability,error,error,229706,"odule': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:229919,Availability,error,error,229919,"ule': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 're",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:249327,Availability,error,error,249327,"hod': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaa",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:249541,Availability,error,error,249541,"ae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'grad",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:252851,Availability,error,error,252851,"'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaa",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:253065,Availability,error,error,253065,"'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'grad",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:255475,Availability,error,error,255475,"e': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'st",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:255696,Availability,error,error,255696,"cf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status':",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:256271,Availability,error,error,256271,"_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf g",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:256486,Availability,error,error,256486,": 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:257243,Availability,error,error,257243,"_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df open-shell gradients for mp2 by dfmp2'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df rohf gradients for mp2 by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_typ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:257462,Availability,error,error,257462,"e': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df open-shell gradients for mp2 by dfmp2'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df rohf gradients for mp2 by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'er",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:258069,Availability,error,error,258069,"faultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df open-shell gradients for mp2 by dfmp2'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df rohf gradients for mp2 by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:258463,Availability,error,error,258463,"r', 'note': 'nyi: no df open-shell gradients for mp2 by dfmp2'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df rohf gradients for mp2 by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:258682,Availability,error,error,258682,"tus': 'fd', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df rohf gradients for mp2 by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:259255,Availability,error,error,259255,"orl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf g",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:259470,Availability,error,error,259470,"ote': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:260227,Availability,error,error,260227,"_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df open-shell gradients for mp2 by dfmp2'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df rohf gradients for mp2 by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_typ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:260446,Availability,error,error,260446,"e': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df open-shell gradients for mp2 by dfmp2'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df rohf gradients for mp2 by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'er",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:261053,Availability,error,error,261053,"faultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df open-shell gradients for mp2 by dfmp2'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df rohf gradients for mp2 by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd',",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:261447,Availability,error,error,261447,"r', 'note': 'nyi: no df open-shell gradients for mp2 by dfmp2'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df rohf gradients for mp2 by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:261666,Availability,error,error,261666,"tus': 'fd', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df rohf gradients for mp2 by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'f",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:262240,Availability,error,error,262240,"rl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaa",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:262454,Availability,error,error,262454,"ote': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'grad",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:263577,Availability,error,error,263577,"ce': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df open-shell gradients for mp2 by dfmp2'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:265809,Availability,error,error,265809,"'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaa",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:266023,Availability,error,error,266023,"'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'grad",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:267146,Availability,error,error,267146,"ce': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df open-shell gradients for mp2 by dfmp2'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:268478,Availability,error,error,268478,"', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:268699,Availability,error,error,268699,"'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:269104,Availability,error,error,269104,"us': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:269485,Availability,error,error,269485,"ote': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:269705,Availability,error,error,269705,"note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:270087,Availability,error,error,270087,"', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_ty",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:270292,Availability,error,error,270292,", 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'erro",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:270688,Availability,error,error,270688,"', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'ny",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:270909,Availability,error,error,270909,", 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:271291,Availability,error,error,271291,"ssian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:271672,Availability,error,error,271672,"ssian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:271892,Availability,error,error,271892,"ssian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:277339,Availability,error,error,277339,", 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:277555,Availability,error,error,277555,"'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:277773,Availability,error,error,277773,"sc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:277989,Availability,error,error,277989,"pe': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:278205,Availability,error,error,278205,"'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'st",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:278423,Availability,error,error,278423,"d by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aa",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:283885,Availability,error,error,283885,", 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradi",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:287033,Availability,error,error,287033,": 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradi",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:289271,Availability,error,error,289271,", 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2.5 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2.5 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'ref",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:289496,Availability,error,error,289496,"', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2.5 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2.5 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'referenc",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:289903,Availability,error,error,289903,"', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2.5 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2.5 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gr",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:290121,Availability,error,error,290121,"atus': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2.5 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2.5 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:290341,Availability,error,error,290341,"adients for mp2.5 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2.5 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:290559,Availability,error,error,290559,"onv gradients for mp2.5 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:290777,Availability,error,error,290777,"}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:290997,Availability,error,error,290997,"; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'not",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:291389,Availability,error,error,291389,"y occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradi",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:294537,Availability,error,error,294537,": 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradi",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:296775,Availability,error,error,296775,", 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2.5 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2.5 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'statu",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:297000,Availability,error,error,297000,"', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2.5 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2.5 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:303137,Availability,error,error,303137,"aultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:303351,Availability,error,error,303351,"si4-fnocc', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'modu",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:303567,Availability,error,error,303567,"od': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'meth",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:303781,Availability,error,error,303781,"': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae':",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:303995,Availability,error,error,303995,"ype': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:304211,Availability,error,error,304211,"error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:309613,Availability,error,error,309613,"hod': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'me",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:312727,Availability,error,error,312727,"'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'me",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:314941,Availability,error,error,314941,"d', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp3 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp3 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:315162,Availability,error,error,315162,"d', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp3 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp3 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:315563,Availability,error,error,315563,"d', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp3 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp3 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:315779,Availability,error,error,315779,"dsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp3 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp3 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:315997,Availability,error,error,315997,"'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp3 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp3 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:316213,Availability,error,error,316213,"e': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp3 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:316429,Availability,error,error,316429,"l_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'a",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:316647,Availability,error,error,316647,"note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_ty",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:317035,Availability,error,error,317035,,MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:320149,Availability,error,error,320149,"'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'me",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:322363,Availability,error,error,322363,"', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp3 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp3 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae',",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:322584,Availability,error,error,322584,"'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp3 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp3 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:322982,Availability,error,error,322982,", 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp3 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp3 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:323205,Availability,error,error,323205,"'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp3 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp3 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnoc",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:324533,Availability,error,error,324533,"'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:324756,Availability,error,error,324756,"': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnoc",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:326085,Availability,error,error,326085,"fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:326309,Availability,error,error,326309," 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'dr",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:326535,Availability,error,error,326535,"'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'drive",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:326764,Availability,error,error,326764,"ver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'e",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:326988,Availability,error,error,326988,"ference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'drive",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:327214,Availability,error,error,327214,"rence': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver':",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:327442,Availability,error,error,327442,"e': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'ene",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:327665,Availability,error,error,327665,"reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:327890,Availability,error,error,327890,"eference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'e",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:328118,Availability,error,error,328118,"ence': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy',",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:328341,Availability,error,error,328341,", 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:328566,Availability,error,error,328566,"'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:328799,Availability,error,error,328799,"': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:329019,Availability,error,error,329019,"'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultd",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:330189,Availability,error,error,330189,"'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:330409,Availability,error,error,330409,"status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultd",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:331580,Availability,error,error,331580,"scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'f",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:331795,Availability,error,error,331795,"', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:332012,Availability,error,error,332012,"', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fca",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:332227,Availability,error,error,332227,"e': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:332442,Availability,error,error,332442,"ver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fca",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:332659,Availability,error,error,332659,"r': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae':",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:332873,Availability,error,error,332873,"er': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae':",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:333087,Availability,error,error,333087,"river': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae':",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:333303,Availability,error,error,333303,"iver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd',",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:333517,Availability,error,error,333517,"river': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:333731,Availability,error,error,333731," 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:333947,Availability,error,error,333947,"driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'o",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:337241,Availability,error,error,337241,", 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:337449,Availability,error,error,337449,"'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:340752,Availability,error,error,340752,"erence': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:340961,Availability,error,error,340961," 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'r",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:344246,Availability,error,error,344246,", 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:344454,Availability,error,error,344454,"'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradi",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:344833,Availability,error,error,344833," 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:347989,Availability,error,error,347989,"', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:349284,Availability,error,error,349284,"erence': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:349494,Availability,error,error,349494,"': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:349875,Availability,error,error,349875,"pe': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'me",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:353048,Availability,error,error,353048,"dsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'me",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:354350,Availability,error,error,354350,"': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'mod",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:354561,Availability,error,error,354561,"c', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradi",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:354940,Availability,error,error,354940,"e': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:358096,Availability,error,error,358096,"', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:359391,Availability,error,error,359391,"erence': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:359601,Availability,error,error,359601,"': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:363243,Availability,error,error,363243,"rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'ener",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:363450,Availability,error,error,363450," 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:367112,Availability,error,error,367112," 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:367320,Availability,error,error,367320,"_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:370962,Availability,error,error,370962,"uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'a",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:371169,Availability,error,error,371169," 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'g",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:371546,Availability,error,error,371546,"e': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:374677,Availability,error,error,374677,"rence': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:376727,Availability,error,error,376727,"c', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'modul",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:376936,Availability,error,error,376936,"pe': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:377315,Availability,error,error,377315,", 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'grad",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:380463,Availability,error,error,380463,": 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'grad",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:382524,Availability,error,error,382524,"sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module':",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:382734,Availability,error,error,382734,"'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'g",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:383111,Availability,error,error,383111," 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:386242,Availability,error,error,386242,"rence': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:388292,Availability,error,error,388292,"l_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:388501,Availability,error,error,388501,"l_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:391804,Availability,error,error,391804,"eference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'd",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:392013,Availability,error,error,392013,"', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method':",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:395334,Availability,error,error,395334,"ce': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'dri",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:395544,Availability,error,error,395544,"sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:398847,Availability,error,error,398847,"eference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'m",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:399056,Availability,error,error,399056,", 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:399437,Availability,error,error,399437,"type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'meth",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:402610,Availability,error,error,402610,"sc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'meth",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:403912,Availability,error,error,403912,"e': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:404123,Availability,error,error,404123,"sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driv",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:404506,Availability,error,error,404506,"df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient',",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:407696,Availability,error,error,407696,"'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient',",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:409005,Availability,error,error,409005,"ohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:409217,Availability,error,error,409217," 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:409598,Availability,error,error,409598,"f', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'meth",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:412771,Availability,error,error,412771,"sc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'meth",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:414073,Availability,error,error,414073,"e': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'en",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:414284,Availability,error,error,414284,,MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:417551,Availability,error,error,417551,"omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'e",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:417758,Availability,error,error,417758,"ae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 're",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:421043,Availability,error,error,421043," 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'ener",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:421251,Availability,error,error,421251,"'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'referen",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:424518,Availability,error,error,424518,"omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'a",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:424725,Availability,error,error,424725,"ae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient',",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:425102,Availability,error,error,425102,"'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'om",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:428241,Availability,error,error,428241,": 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'om",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:429529,Availability,error,error,429529," 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'modul",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:429738,Availability,error,error,429738,"'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradi",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:430117,Availability,error,error,430117,"cf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:433273,Availability,error,error,433273,"', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:434568,Availability,error,error,434568,"rence': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module':",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:434778,Availability,error,error,434778,"': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient',",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:435155,Availability,error,error,435155,"f_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'om",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:438294,Availability,error,error,438294,": 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'om",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:439582,Availability,error,error,439582," 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'drive",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:439791,Availability,error,error,439791,"'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:443094,Availability,error,error,443094,"ference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'd",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:443303,Availability,error,error,443303," 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:446624,Availability,error,error,446624,"e': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driv",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:446834,Availability,error,error,446834,"c': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:450137,Availability,error,error,450137,"ference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'m",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:450346,Availability,error,error,450346," 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:450727,Availability,error,error,450727,"_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'me",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:453900,Availability,error,error,453900,"dsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'me",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:455202,Availability,error,error,455202,"e': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:455413,Availability,error,error,455413,"d', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'drive",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:455796,Availability,error,error,455796,"'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:458986,Availability,error,error,458986," 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:460295,Availability,error,error,460295,"ohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:460507,Availability,error,error,460507,"scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:460888,Availability,error,error,460888,"df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'me",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:464061,Availability,error,error,464061,"dsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'me",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:465363,Availability,error,error,465363,"e': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy',",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:465574,Availability,error,error,465574,"d', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 're",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:467754,Availability,error,error,467754,"nce': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:467948,Availability,error,error,467948,", 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'ref",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:468144,Availability,error,error,468144," 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:470491,Availability,error,error,470491,", 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:473426,Availability,error,error,473426,"ference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'mo",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:473622,Availability,error,error,473622,"e': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:473818,Availability,error,error,473818,": 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:474016,Availability,error,error,474016,"type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method':",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:474384,Availability,error,error,474384,"': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:477318,Availability,error,error,477318,"eference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fno",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:477517,Availability,error,error,477517,": 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'dri",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:478651,Availability,error,error,478651," 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fno",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:478850,Availability,error,error,478850,"pe': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'dri",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:479985,Availability,error,error,479985,"'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:480185,Availability,error,error,480185,"': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:480387,Availability,error,error,480387,"', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_typ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:480599,Availability,error,error,480599,"s': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:480799,Availability,error,error,480799," 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_typ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:481001,Availability,error,error,481001,"i: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type':",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:481212,Availability,error,error,481212," ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'st",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:481411,Availability,error,error,481411,"en-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_t",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:481612,Availability,error,error,481612,"'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:481823,Availability,error,error,481823,"/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:482022,Availability,error,error,482022," open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'p",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:482223,Availability,error,error,482223,": 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pas",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:482437,Availability,error,error,482437,"d ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'mod",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:482639,Availability,error,error,482639,"shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:483791,Availability,error,error,483791,"'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'mod",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:483993,Availability,error,error,483993,"l_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:485146,Availability,error,error,485146,"scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'cor",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:485349,Availability,error,error,485349,"type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:485554,Availability,error,error,485554," 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:485769,Availability,error,error,485769,"te': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_t",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:485972,Availability,error,error,485972,"ltdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:486177,Availability,error,error,486177,"by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:486391,Availability,error,error,486391,"{'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_typ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:486593,Availability,error,error,486593,"es in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:486797,Availability,error,error,486797,"ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'sta",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:487011,Availability,error,error,487011,"}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:487213,Availability,error,error,487213,"rgies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'drive",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:487417,Availability,error,error,487417,"d ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'r",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:491639,Availability,error,error,491639,"cc', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:491855,Availability,error,error,491855," 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:492073,Availability,error,error,492073,"'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:492289,Availability,error,error,492289,"cf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uh",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:492505,Availability,error,error,492505,"'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 's",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:492723,Availability,error,error,492723,"note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'sta",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:498938,Availability,error,error,498938," 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'ener",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:499133,Availability,error,error,499133,"ae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:499330,Availability,error,error,499330,", 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'ref",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:501690,Availability,error,error,501690,"ference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd scf gradients to underlie post-scf'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'd",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:504666,Availability,error,error,504666,"ce': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd scf gradients to underlie post-scf'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note':",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:504888,Availability,error,error,504888,"ype': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd scf gradients to underlie post-scf'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd scf gradients to underlie post-scf'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note':",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:505085,Availability,error,error,505085,"l_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd scf gradients to underlie post-scf'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd scf gradients to underlie post-scf'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module':",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:505284,Availability,error,error,505284,"v', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd scf gradients to underlie post-scf'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd scf gradients to underlie post-scf'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:505654,Availability,error,error,505654,"tatus': 'error', 'note': 'nyi: no cd scf gradients to underlie post-scf'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd scf gradients to underlie post-scf'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'd",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:511185,Availability,error,error,511185,"ference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'hessian', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'hessian', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'hessia",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:511383,Availability,error,error,511383,": 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'hessian', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'hessian', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:514134,Availability,error,error,514134,"eference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:515798,Availability,error,error,515798,"', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'mo",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:515994,Availability,error,error,515994,"'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf',",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:516192,Availability,error,error,516192,"sc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'e",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:516387,Availability,error,error,516387,"_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy'",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:518052,Availability,error,error,518052,", 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driv",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:518254,Availability,error,error,518254,"sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:521036,Availability,error,error,521036,"'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:521234,Availability,error,error,521234,"'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'no",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:521432,Availability,error,error,521432,"cf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'};",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:521632,Availability,error,error,521632,"', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'd",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:521829,Availability,error,error,521829," 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driv",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:522031,Availability,error,error,522031," 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:524810,Availability,error,error,524810,"': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error',",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:525007,Availability,error,error,525007,"e', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:525206,Availability,error,error,525206," 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:525410,Availability,error,error,525410,", 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pas",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:525607,Availability,error,error,525607,"'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaul",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:525806,Availability,error,error,525806,"'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'mo",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:526011,Availability,error,error,526011," 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-de",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:526209,Availability,error,error,526209,", 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:527347,Availability,error,error,527347,"c': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-de",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:527545,Availability,error,error,527545,": 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', '",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:528682,Availability,error,error,528682,"sc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:528877,Availability,error,error,528877,"ype': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf by detci'}; ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:529074,Availability,error,error,529074,"ype': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf by detci'}; ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:529269,Availability,error,error,529269,"ype': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf by detci'}; ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:529464,Availability,error,error,529464,"ype': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf by detci'}; ",MatchSource.DOCS,samples/stdsuite_psi4.txt,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt
