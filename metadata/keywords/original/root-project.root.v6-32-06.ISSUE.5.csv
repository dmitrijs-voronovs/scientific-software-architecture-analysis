id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/7136:274,Testability,test,test,274,"@oshadura @Axel-Naumann ; Dear Mentors,; Here's my pull request for the issue https://github.com/root-project/root/issues/6635.; Can you please review this. Please excuse any instances where the timeout parameter has been added unnecessarily as it wasn't clear to me how to test this. Since the desired interval for `TIMEOUT` hadn't been mentioned, I have added it as 600 s.; I'll fix any incorrect changes as soon as review comments and suggestions are added. I will squash the commits after the review. Thanks in advance !",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7136
https://github.com/root-project/root/pull/7136:255,Usability,clear,clear,255,"@oshadura @Axel-Naumann ; Dear Mentors,; Here's my pull request for the issue https://github.com/root-project/root/issues/6635.; Can you please review this. Please excuse any instances where the timeout parameter has been added unnecessarily as it wasn't clear to me how to test this. Since the desired interval for `TIMEOUT` hadn't been mentioned, I have added it as 600 s.; I'll fix any incorrect changes as soon as review comments and suggestions are added. I will squash the commits after the review. Thanks in advance !",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7136
https://github.com/root-project/root/pull/7137:175,Deployability,release,release,175,"While investigating performance issues with performing many fits in a RooFit analysis workflow, I discovered this memory leak in my valgrind logs. Getting this fix in as many release streams as possible would be good.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7137
https://github.com/root-project/root/pull/7137:20,Performance,perform,performance,20,"While investigating performance issues with performing many fits in a RooFit analysis workflow, I discovered this memory leak in my valgrind logs. Getting this fix in as many release streams as possible would be good.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7137
https://github.com/root-project/root/pull/7137:44,Performance,perform,performing,44,"While investigating performance issues with performing many fits in a RooFit analysis workflow, I discovered this memory leak in my valgrind logs. Getting this fix in as many release streams as possible would be good.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7137
https://github.com/root-project/root/pull/7137:141,Testability,log,logs,141,"While investigating performance issues with performing many fits in a RooFit analysis workflow, I discovered this memory leak in my valgrind logs. Getting this fix in as many release streams as possible would be good.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7137
https://github.com/root-project/root/pull/7138:66,Usability,guid,guide,66,"Many changes to make the webgui doc visible in the ROOT reference guide.; May be the doc could me make a bit more verbose in some places, but at least the structure is there now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7138
https://github.com/root-project/root/pull/7139:1387,Availability,avail,available,1387,"This commit introduces a new layer on top of RDataFrame to enable distributed computations. It is a port of the previously known PyRDF python package, that includes all changes discussed recently in the team. The python package, inside bindings/experimental/distrdf, is dynamically injected into the ROOT.RDF namespace. TODO:; 1. Figure out a better approach to injection, currently the following happens:; ```; >>> import ROOT # ok; >>> import ROOT.RDF # ok; >>> from ROOT import RDF # ok; >>> from ROOT.RDF import Distributed # ok; >>> Distributed; <module 'DistRDF' from '/home/vpadulan/Programs/rootproject/rootinstall/branchdev/lib/DistRDF/__init__.py'>; >>> import ROOT.RDF.Distributed; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/Programs/rootproject/rootinstall/branchdev/lib/ROOT/_facade.py"", line 121, in _importhook; return _orig_ihook(name, *args, **kwds); ModuleNotFoundError: No module named 'ROOT.RDF'; 'ROOT' is not a package; >>> from ROOT.RDF.Distributed import Spark; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/Programs/rootproject/rootinstall/branchdev/lib/ROOT/_facade.py"", line 121, in _importhook; return _orig_ihook(name, *args, **kwds); ModuleNotFoundError: No module named 'ROOT.RDF.Distributed'; 'ROOT.RDF' is not a package; ```; 2. Remove `DistRDF` from the available modules in a python session, e.g. this should not be possible (I believe); ```; >>> import DistRDF; >>> DistRDF; <module 'DistRDF' from '/home/vpadulan/Programs/rootproject/rootinstall/branchdev/lib/DistRDF/__init__.py'>; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7139
https://github.com/root-project/root/pull/7139:282,Integrability,inject,injected,282,"This commit introduces a new layer on top of RDataFrame to enable distributed computations. It is a port of the previously known PyRDF python package, that includes all changes discussed recently in the team. The python package, inside bindings/experimental/distrdf, is dynamically injected into the ROOT.RDF namespace. TODO:; 1. Figure out a better approach to injection, currently the following happens:; ```; >>> import ROOT # ok; >>> import ROOT.RDF # ok; >>> from ROOT import RDF # ok; >>> from ROOT.RDF import Distributed # ok; >>> Distributed; <module 'DistRDF' from '/home/vpadulan/Programs/rootproject/rootinstall/branchdev/lib/DistRDF/__init__.py'>; >>> import ROOT.RDF.Distributed; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/Programs/rootproject/rootinstall/branchdev/lib/ROOT/_facade.py"", line 121, in _importhook; return _orig_ihook(name, *args, **kwds); ModuleNotFoundError: No module named 'ROOT.RDF'; 'ROOT' is not a package; >>> from ROOT.RDF.Distributed import Spark; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/Programs/rootproject/rootinstall/branchdev/lib/ROOT/_facade.py"", line 121, in _importhook; return _orig_ihook(name, *args, **kwds); ModuleNotFoundError: No module named 'ROOT.RDF.Distributed'; 'ROOT.RDF' is not a package; ```; 2. Remove `DistRDF` from the available modules in a python session, e.g. this should not be possible (I believe); ```; >>> import DistRDF; >>> DistRDF; <module 'DistRDF' from '/home/vpadulan/Programs/rootproject/rootinstall/branchdev/lib/DistRDF/__init__.py'>; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7139
https://github.com/root-project/root/pull/7139:362,Integrability,inject,injection,362,"This commit introduces a new layer on top of RDataFrame to enable distributed computations. It is a port of the previously known PyRDF python package, that includes all changes discussed recently in the team. The python package, inside bindings/experimental/distrdf, is dynamically injected into the ROOT.RDF namespace. TODO:; 1. Figure out a better approach to injection, currently the following happens:; ```; >>> import ROOT # ok; >>> import ROOT.RDF # ok; >>> from ROOT import RDF # ok; >>> from ROOT.RDF import Distributed # ok; >>> Distributed; <module 'DistRDF' from '/home/vpadulan/Programs/rootproject/rootinstall/branchdev/lib/DistRDF/__init__.py'>; >>> import ROOT.RDF.Distributed; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/Programs/rootproject/rootinstall/branchdev/lib/ROOT/_facade.py"", line 121, in _importhook; return _orig_ihook(name, *args, **kwds); ModuleNotFoundError: No module named 'ROOT.RDF'; 'ROOT' is not a package; >>> from ROOT.RDF.Distributed import Spark; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/Programs/rootproject/rootinstall/branchdev/lib/ROOT/_facade.py"", line 121, in _importhook; return _orig_ihook(name, *args, **kwds); ModuleNotFoundError: No module named 'ROOT.RDF.Distributed'; 'ROOT.RDF' is not a package; ```; 2. Remove `DistRDF` from the available modules in a python session, e.g. this should not be possible (I believe); ```; >>> import DistRDF; >>> DistRDF; <module 'DistRDF' from '/home/vpadulan/Programs/rootproject/rootinstall/branchdev/lib/DistRDF/__init__.py'>; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7139
https://github.com/root-project/root/pull/7139:282,Security,inject,injected,282,"This commit introduces a new layer on top of RDataFrame to enable distributed computations. It is a port of the previously known PyRDF python package, that includes all changes discussed recently in the team. The python package, inside bindings/experimental/distrdf, is dynamically injected into the ROOT.RDF namespace. TODO:; 1. Figure out a better approach to injection, currently the following happens:; ```; >>> import ROOT # ok; >>> import ROOT.RDF # ok; >>> from ROOT import RDF # ok; >>> from ROOT.RDF import Distributed # ok; >>> Distributed; <module 'DistRDF' from '/home/vpadulan/Programs/rootproject/rootinstall/branchdev/lib/DistRDF/__init__.py'>; >>> import ROOT.RDF.Distributed; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/Programs/rootproject/rootinstall/branchdev/lib/ROOT/_facade.py"", line 121, in _importhook; return _orig_ihook(name, *args, **kwds); ModuleNotFoundError: No module named 'ROOT.RDF'; 'ROOT' is not a package; >>> from ROOT.RDF.Distributed import Spark; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/Programs/rootproject/rootinstall/branchdev/lib/ROOT/_facade.py"", line 121, in _importhook; return _orig_ihook(name, *args, **kwds); ModuleNotFoundError: No module named 'ROOT.RDF.Distributed'; 'ROOT.RDF' is not a package; ```; 2. Remove `DistRDF` from the available modules in a python session, e.g. this should not be possible (I believe); ```; >>> import DistRDF; >>> DistRDF; <module 'DistRDF' from '/home/vpadulan/Programs/rootproject/rootinstall/branchdev/lib/DistRDF/__init__.py'>; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7139
https://github.com/root-project/root/pull/7139:362,Security,inject,injection,362,"This commit introduces a new layer on top of RDataFrame to enable distributed computations. It is a port of the previously known PyRDF python package, that includes all changes discussed recently in the team. The python package, inside bindings/experimental/distrdf, is dynamically injected into the ROOT.RDF namespace. TODO:; 1. Figure out a better approach to injection, currently the following happens:; ```; >>> import ROOT # ok; >>> import ROOT.RDF # ok; >>> from ROOT import RDF # ok; >>> from ROOT.RDF import Distributed # ok; >>> Distributed; <module 'DistRDF' from '/home/vpadulan/Programs/rootproject/rootinstall/branchdev/lib/DistRDF/__init__.py'>; >>> import ROOT.RDF.Distributed; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/Programs/rootproject/rootinstall/branchdev/lib/ROOT/_facade.py"", line 121, in _importhook; return _orig_ihook(name, *args, **kwds); ModuleNotFoundError: No module named 'ROOT.RDF'; 'ROOT' is not a package; >>> from ROOT.RDF.Distributed import Spark; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/Programs/rootproject/rootinstall/branchdev/lib/ROOT/_facade.py"", line 121, in _importhook; return _orig_ihook(name, *args, **kwds); ModuleNotFoundError: No module named 'ROOT.RDF.Distributed'; 'ROOT.RDF' is not a package; ```; 2. Remove `DistRDF` from the available modules in a python session, e.g. this should not be possible (I believe); ```; >>> import DistRDF; >>> DistRDF; <module 'DistRDF' from '/home/vpadulan/Programs/rootproject/rootinstall/branchdev/lib/DistRDF/__init__.py'>; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7139
https://github.com/root-project/root/pull/7140:292,Testability,log,log-likelihood,292,"For clang, this facilitates auto vectorisation by disabling the side effects of `std::` math functions. This was recommended by @hageboeck in this issue thread:; https://github.com/root-project/root/issues/7032#issuecomment-773951513. In particular, this will benefit the [computation of the log-likelihood](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooAbsPdf.cxx#L736) if `vdt` is not used. One can try this little example to see that it works:; ```C++; // compile with:; // clang++ -march=native -o test test.cc -Rpass-analysis=loop-vectorize -Rpass=loop-vectorize -Rpass-missed=loop-vectorize -O3; // or with no-math-errno to disable the side effects of std:: math functions:; // clang++ -march=native -o test test.cc -Rpass-analysis=loop-vectorize -Rpass=loop-vectorize -Rpass-missed=loop-vectorize -O3 -fno-math-errno. #include <vector>; #include <iostream>; #include <cmath>. int main() {. std::vector<double> vals(1000, 1.1);. for(std::size_t i = 0; i < vals.size(); ++i) {; vals[i] = std::log(vals[i]);; }. std::cout << vals[0] << std::endl;. return 0;; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7140
https://github.com/root-project/root/pull/7140:530,Testability,test,test,530,"For clang, this facilitates auto vectorisation by disabling the side effects of `std::` math functions. This was recommended by @hageboeck in this issue thread:; https://github.com/root-project/root/issues/7032#issuecomment-773951513. In particular, this will benefit the [computation of the log-likelihood](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooAbsPdf.cxx#L736) if `vdt` is not used. One can try this little example to see that it works:; ```C++; // compile with:; // clang++ -march=native -o test test.cc -Rpass-analysis=loop-vectorize -Rpass=loop-vectorize -Rpass-missed=loop-vectorize -O3; // or with no-math-errno to disable the side effects of std:: math functions:; // clang++ -march=native -o test test.cc -Rpass-analysis=loop-vectorize -Rpass=loop-vectorize -Rpass-missed=loop-vectorize -O3 -fno-math-errno. #include <vector>; #include <iostream>; #include <cmath>. int main() {. std::vector<double> vals(1000, 1.1);. for(std::size_t i = 0; i < vals.size(); ++i) {; vals[i] = std::log(vals[i]);; }. std::cout << vals[0] << std::endl;. return 0;; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7140
https://github.com/root-project/root/pull/7140:535,Testability,test,test,535,"For clang, this facilitates auto vectorisation by disabling the side effects of `std::` math functions. This was recommended by @hageboeck in this issue thread:; https://github.com/root-project/root/issues/7032#issuecomment-773951513. In particular, this will benefit the [computation of the log-likelihood](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooAbsPdf.cxx#L736) if `vdt` is not used. One can try this little example to see that it works:; ```C++; // compile with:; // clang++ -march=native -o test test.cc -Rpass-analysis=loop-vectorize -Rpass=loop-vectorize -Rpass-missed=loop-vectorize -O3; // or with no-math-errno to disable the side effects of std:: math functions:; // clang++ -march=native -o test test.cc -Rpass-analysis=loop-vectorize -Rpass=loop-vectorize -Rpass-missed=loop-vectorize -O3 -fno-math-errno. #include <vector>; #include <iostream>; #include <cmath>. int main() {. std::vector<double> vals(1000, 1.1);. for(std::size_t i = 0; i < vals.size(); ++i) {; vals[i] = std::log(vals[i]);; }. std::cout << vals[0] << std::endl;. return 0;; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7140
https://github.com/root-project/root/pull/7140:737,Testability,test,test,737,"For clang, this facilitates auto vectorisation by disabling the side effects of `std::` math functions. This was recommended by @hageboeck in this issue thread:; https://github.com/root-project/root/issues/7032#issuecomment-773951513. In particular, this will benefit the [computation of the log-likelihood](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooAbsPdf.cxx#L736) if `vdt` is not used. One can try this little example to see that it works:; ```C++; // compile with:; // clang++ -march=native -o test test.cc -Rpass-analysis=loop-vectorize -Rpass=loop-vectorize -Rpass-missed=loop-vectorize -O3; // or with no-math-errno to disable the side effects of std:: math functions:; // clang++ -march=native -o test test.cc -Rpass-analysis=loop-vectorize -Rpass=loop-vectorize -Rpass-missed=loop-vectorize -O3 -fno-math-errno. #include <vector>; #include <iostream>; #include <cmath>. int main() {. std::vector<double> vals(1000, 1.1);. for(std::size_t i = 0; i < vals.size(); ++i) {; vals[i] = std::log(vals[i]);; }. std::cout << vals[0] << std::endl;. return 0;; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7140
https://github.com/root-project/root/pull/7140:742,Testability,test,test,742,"For clang, this facilitates auto vectorisation by disabling the side effects of `std::` math functions. This was recommended by @hageboeck in this issue thread:; https://github.com/root-project/root/issues/7032#issuecomment-773951513. In particular, this will benefit the [computation of the log-likelihood](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooAbsPdf.cxx#L736) if `vdt` is not used. One can try this little example to see that it works:; ```C++; // compile with:; // clang++ -march=native -o test test.cc -Rpass-analysis=loop-vectorize -Rpass=loop-vectorize -Rpass-missed=loop-vectorize -O3; // or with no-math-errno to disable the side effects of std:: math functions:; // clang++ -march=native -o test test.cc -Rpass-analysis=loop-vectorize -Rpass=loop-vectorize -Rpass-missed=loop-vectorize -O3 -fno-math-errno. #include <vector>; #include <iostream>; #include <cmath>. int main() {. std::vector<double> vals(1000, 1.1);. for(std::size_t i = 0; i < vals.size(); ++i) {; vals[i] = std::log(vals[i]);; }. std::cout << vals[0] << std::endl;. return 0;; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7140
https://github.com/root-project/root/pull/7140:1026,Testability,log,log,1026,"For clang, this facilitates auto vectorisation by disabling the side effects of `std::` math functions. This was recommended by @hageboeck in this issue thread:; https://github.com/root-project/root/issues/7032#issuecomment-773951513. In particular, this will benefit the [computation of the log-likelihood](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooAbsPdf.cxx#L736) if `vdt` is not used. One can try this little example to see that it works:; ```C++; // compile with:; // clang++ -march=native -o test test.cc -Rpass-analysis=loop-vectorize -Rpass=loop-vectorize -Rpass-missed=loop-vectorize -O3; // or with no-math-errno to disable the side effects of std:: math functions:; // clang++ -march=native -o test test.cc -Rpass-analysis=loop-vectorize -Rpass=loop-vectorize -Rpass-missed=loop-vectorize -O3 -fno-math-errno. #include <vector>; #include <iostream>; #include <cmath>. int main() {. std::vector<double> vals(1000, 1.1);. for(std::size_t i = 0; i < vals.size(); ++i) {; vals[i] = std::log(vals[i]);; }. std::cout << vals[0] << std::endl;. return 0;; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7140
https://github.com/root-project/root/issues/7143:713,Availability,Error,Error,713,"Hi, . Some time ago, I have had issues when invoking an `RDataFrame` analysis on a `TChain` that consisted of trees with **different names** in the **same file** (the canonical thing is just the other way around...). I first described the problem [here in the ROOT forum, rather long read, not absolutely necessary to understand this issue](https://root-forum.cern.ch/t/really-solved-rdataframe-for-tchain-loaded-with-ttrees-with-different-names/41756). Unluckily only my entire analysis chain was able to trigger the bug; i.e. I was not able to produce a condensed reproducer of the problem. The clearest indicator of the occurring mismatch was the following line repeatedly being printed on the terminal:; ```; Error in <TTreeReader::SetEntriesRange()>: first entry out of range 0..946274; ```. I also found a work-around, but the problem was still bothering me, which is why I invested some time in debugging it:. * The number of the error statement is identical to the number of entries in the *first* tree, which has fewer entries than its partner. It only occurs once `EntryClusters` from the second tree are being processed. I.e. the tree-switch is insufficient.; * The error seems to be caused by the following line:; https://github.com/root-project/root/blob/312dacbfdb2b76bfb1fa7af9532a01b3b08d03f1/tree/treeplayer/src/TTreeProcessorMT.cxx#L143; * Changing it as shown in this diff here seems to solve the problem:; ```; --- a/tree/treeplayer/src/TTreeProcessorMT.cxx	2021-02-07 20:22:19.290883093 +0000; +++ b/tree/treeplayer/src/TTreeProcessorMT.cxx	2021-02-07 20:32:00.000483321 +0000; @@ -140,8 +140,12 @@; const std::vector<Long64_t> &nEntries, const std::vector<std::vector<Long64_t>> &friendEntries); {; const bool usingLocalEntries = friendInfo.fFriendNames.empty() && entryList.GetN() == 0;; - if (fChain == nullptr || (usingLocalEntries && fileNames[0] != fChain->GetListOfFiles()->At(0)->GetTitle())); + if (fChain == nullptr || ( usingLocalEntries && (; +			 (fileNames[0] != fCh",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7143
https://github.com/root-project/root/issues/7143:937,Availability,error,error,937,"Hi, . Some time ago, I have had issues when invoking an `RDataFrame` analysis on a `TChain` that consisted of trees with **different names** in the **same file** (the canonical thing is just the other way around...). I first described the problem [here in the ROOT forum, rather long read, not absolutely necessary to understand this issue](https://root-forum.cern.ch/t/really-solved-rdataframe-for-tchain-loaded-with-ttrees-with-different-names/41756). Unluckily only my entire analysis chain was able to trigger the bug; i.e. I was not able to produce a condensed reproducer of the problem. The clearest indicator of the occurring mismatch was the following line repeatedly being printed on the terminal:; ```; Error in <TTreeReader::SetEntriesRange()>: first entry out of range 0..946274; ```. I also found a work-around, but the problem was still bothering me, which is why I invested some time in debugging it:. * The number of the error statement is identical to the number of entries in the *first* tree, which has fewer entries than its partner. It only occurs once `EntryClusters` from the second tree are being processed. I.e. the tree-switch is insufficient.; * The error seems to be caused by the following line:; https://github.com/root-project/root/blob/312dacbfdb2b76bfb1fa7af9532a01b3b08d03f1/tree/treeplayer/src/TTreeProcessorMT.cxx#L143; * Changing it as shown in this diff here seems to solve the problem:; ```; --- a/tree/treeplayer/src/TTreeProcessorMT.cxx	2021-02-07 20:22:19.290883093 +0000; +++ b/tree/treeplayer/src/TTreeProcessorMT.cxx	2021-02-07 20:32:00.000483321 +0000; @@ -140,8 +140,12 @@; const std::vector<Long64_t> &nEntries, const std::vector<std::vector<Long64_t>> &friendEntries); {; const bool usingLocalEntries = friendInfo.fFriendNames.empty() && entryList.GetN() == 0;; - if (fChain == nullptr || (usingLocalEntries && fileNames[0] != fChain->GetListOfFiles()->At(0)->GetTitle())); + if (fChain == nullptr || ( usingLocalEntries && (; +			 (fileNames[0] != fCh",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7143
https://github.com/root-project/root/issues/7143:1177,Availability,error,error,1177,"around...). I first described the problem [here in the ROOT forum, rather long read, not absolutely necessary to understand this issue](https://root-forum.cern.ch/t/really-solved-rdataframe-for-tchain-loaded-with-ttrees-with-different-names/41756). Unluckily only my entire analysis chain was able to trigger the bug; i.e. I was not able to produce a condensed reproducer of the problem. The clearest indicator of the occurring mismatch was the following line repeatedly being printed on the terminal:; ```; Error in <TTreeReader::SetEntriesRange()>: first entry out of range 0..946274; ```. I also found a work-around, but the problem was still bothering me, which is why I invested some time in debugging it:. * The number of the error statement is identical to the number of entries in the *first* tree, which has fewer entries than its partner. It only occurs once `EntryClusters` from the second tree are being processed. I.e. the tree-switch is insufficient.; * The error seems to be caused by the following line:; https://github.com/root-project/root/blob/312dacbfdb2b76bfb1fa7af9532a01b3b08d03f1/tree/treeplayer/src/TTreeProcessorMT.cxx#L143; * Changing it as shown in this diff here seems to solve the problem:; ```; --- a/tree/treeplayer/src/TTreeProcessorMT.cxx	2021-02-07 20:22:19.290883093 +0000; +++ b/tree/treeplayer/src/TTreeProcessorMT.cxx	2021-02-07 20:32:00.000483321 +0000; @@ -140,8 +140,12 @@; const std::vector<Long64_t> &nEntries, const std::vector<std::vector<Long64_t>> &friendEntries); {; const bool usingLocalEntries = friendInfo.fFriendNames.empty() && entryList.GetN() == 0;; - if (fChain == nullptr || (usingLocalEntries && fileNames[0] != fChain->GetListOfFiles()->At(0)->GetTitle())); + if (fChain == nullptr || ( usingLocalEntries && (; +			 (fileNames[0] != fChain->GetListOfFiles()->At(0)->GetTitle()) ||; +			 (treeNames[0] != fChain->GetListOfFiles()->At(0)->GetName()) )); + ) {; MakeChain(treeNames, fileNames, friendInfo, nEntries, friendEntries);; + }; ; std",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7143
https://github.com/root-project/root/issues/7143:406,Performance,load,loaded-with-ttrees-with-different-names,406,"Hi, . Some time ago, I have had issues when invoking an `RDataFrame` analysis on a `TChain` that consisted of trees with **different names** in the **same file** (the canonical thing is just the other way around...). I first described the problem [here in the ROOT forum, rather long read, not absolutely necessary to understand this issue](https://root-forum.cern.ch/t/really-solved-rdataframe-for-tchain-loaded-with-ttrees-with-different-names/41756). Unluckily only my entire analysis chain was able to trigger the bug; i.e. I was not able to produce a condensed reproducer of the problem. The clearest indicator of the occurring mismatch was the following line repeatedly being printed on the terminal:; ```; Error in <TTreeReader::SetEntriesRange()>: first entry out of range 0..946274; ```. I also found a work-around, but the problem was still bothering me, which is why I invested some time in debugging it:. * The number of the error statement is identical to the number of entries in the *first* tree, which has fewer entries than its partner. It only occurs once `EntryClusters` from the second tree are being processed. I.e. the tree-switch is insufficient.; * The error seems to be caused by the following line:; https://github.com/root-project/root/blob/312dacbfdb2b76bfb1fa7af9532a01b3b08d03f1/tree/treeplayer/src/TTreeProcessorMT.cxx#L143; * Changing it as shown in this diff here seems to solve the problem:; ```; --- a/tree/treeplayer/src/TTreeProcessorMT.cxx	2021-02-07 20:22:19.290883093 +0000; +++ b/tree/treeplayer/src/TTreeProcessorMT.cxx	2021-02-07 20:32:00.000483321 +0000; @@ -140,8 +140,12 @@; const std::vector<Long64_t> &nEntries, const std::vector<std::vector<Long64_t>> &friendEntries); {; const bool usingLocalEntries = friendInfo.fFriendNames.empty() && entryList.GetN() == 0;; - if (fChain == nullptr || (usingLocalEntries && fileNames[0] != fChain->GetListOfFiles()->At(0)->GetTitle())); + if (fChain == nullptr || ( usingLocalEntries && (; +			 (fileNames[0] != fCh",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7143
https://github.com/root-project/root/issues/7143:597,Usability,clear,clearest,597,"Hi, . Some time ago, I have had issues when invoking an `RDataFrame` analysis on a `TChain` that consisted of trees with **different names** in the **same file** (the canonical thing is just the other way around...). I first described the problem [here in the ROOT forum, rather long read, not absolutely necessary to understand this issue](https://root-forum.cern.ch/t/really-solved-rdataframe-for-tchain-loaded-with-ttrees-with-different-names/41756). Unluckily only my entire analysis chain was able to trigger the bug; i.e. I was not able to produce a condensed reproducer of the problem. The clearest indicator of the occurring mismatch was the following line repeatedly being printed on the terminal:; ```; Error in <TTreeReader::SetEntriesRange()>: first entry out of range 0..946274; ```. I also found a work-around, but the problem was still bothering me, which is why I invested some time in debugging it:. * The number of the error statement is identical to the number of entries in the *first* tree, which has fewer entries than its partner. It only occurs once `EntryClusters` from the second tree are being processed. I.e. the tree-switch is insufficient.; * The error seems to be caused by the following line:; https://github.com/root-project/root/blob/312dacbfdb2b76bfb1fa7af9532a01b3b08d03f1/tree/treeplayer/src/TTreeProcessorMT.cxx#L143; * Changing it as shown in this diff here seems to solve the problem:; ```; --- a/tree/treeplayer/src/TTreeProcessorMT.cxx	2021-02-07 20:22:19.290883093 +0000; +++ b/tree/treeplayer/src/TTreeProcessorMT.cxx	2021-02-07 20:32:00.000483321 +0000; @@ -140,8 +140,12 @@; const std::vector<Long64_t> &nEntries, const std::vector<std::vector<Long64_t>> &friendEntries); {; const bool usingLocalEntries = friendInfo.fFriendNames.empty() && entryList.GetN() == 0;; - if (fChain == nullptr || (usingLocalEntries && fileNames[0] != fChain->GetListOfFiles()->At(0)->GetTitle())); + if (fChain == nullptr || ( usingLocalEntries && (; +			 (fileNames[0] != fCh",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7143
https://github.com/root-project/root/pull/7145:11,Availability,error,error,11,I get this error in one of my builds. Maybe a typo?; ```; /home/vpadulan/Programs/rootproject/root/hist/hist/src/TKDE.cxx:538:21: error: suggest parentheses around assignment used as truth value [-Werror=parentheses]; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7145
https://github.com/root-project/root/pull/7145:130,Availability,error,error,130,I get this error in one of my builds. Maybe a typo?; ```; /home/vpadulan/Programs/rootproject/root/hist/hist/src/TKDE.cxx:538:21: error: suggest parentheses around assignment used as truth value [-Werror=parentheses]; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7145
https://github.com/root-project/root/pull/7148:59,Usability,Guid,Guide,59,Johannes pointed out that the links to the Old Math User's Guide should be changed to like to the manual.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7148
https://github.com/root-project/root/pull/7149:13,Testability,log,logic,13,The previous logic assumed that different samples would belong to; files with different names.; This could potentially result in wrong data being silently read in; case subsequent samples had same or fewer entries than the first; sample processed by a given thread. This fixes #7143 . @phi-mah please let me know if this looks reasonable/if this fixes your usecase.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7149
https://github.com/root-project/root/pull/7152:493,Deployability,patch,patch,493,"Before this commit, when using TTreeReader to loop over a dataset with; a friend TTree with more entries than the main TTree, TTreeReader would; run the event loop until the last entry _of the friend_, beyond the end; of the main TTree. This is inconsistent with the behavior of e.g. TTree::Draw, as well as; the behavior of TTreeReader itself when fTree is a TChain rather than a; TTree.; This issue is described in more detail at; https://github.com/root-project/root/issues/6518. With this patch, we quit the event loop as soon as the entries of the; main tree are over. This fixes #6518.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7152
https://github.com/root-project/root/issues/7157:1536,Deployability,hotfix,hotfix,1536,"h"". int main() {. // x variable with bins for convolution; RooRealVar x(""x"",""x"", -2000, 3000.);; x.setBins(1000, ""cache"");. // let's try to convolute two Gaussians; RooRealVar zero(""zero"", ""zero"", 0.0);; RooRealVar sigma(""sima"", ""sigma"", 100.);. RooRealVar mass(""mass"", ""mass"", 1000);; RooRealVar width(""width"", ""width"", 100.);. RooGaussian gaus1(""gaus1"", ""gaus1"", x, zero, sigma);; RooGaussian gaus2(""gaus2"", ""gaus2"", x, mass, width);. // multiply one Gaussian with unity to get a RooProdPdf; RooUniform uni(""uni"", ""uni"", RooArgList(x));; RooProdPdf prod(""prod"", ""prod"", RooArgList(gaus1, uni));. // add zero trick to ""convert"" the RooProdPdf into a RealSumPdf; RooUniform dummy_for_sum_pdf{""dummy_for_sum_pdf"", ""dummy_for_sum_pdf"", x};; RooRealVar unity_for_sum_pdf(""unity_for_sum_pdf"", ""unity_for_sum_pdf"", 1);; RooRealSumPdf prod_fixed( ""prod_fixed"", ""prod_fixed"",; RooArgList(prod, dummy_for_sum_pdf),; RooArgList(unity_for_sum_pdf) );. // convolute pdf (replace prod with prod_fixed to enable hotfix); RooFFTConvPdf conv(""conv"", ""conv"", x, prod, gaus2);. // make plot; TCanvas c(""convolution"", ""convolution"");; auto xframe = x.frame(RooFit::Title(""With RooProdPdf""));. gaus1.plotOn(xframe);; gaus2.plotOn(xframe);; prod.plotOn(xframe);; conv.plotOn(xframe);. xframe->Draw();; c.SaveAs(""convolution.png"");. // the result of the convolution is expected to be a wider Gaussian around 1000,; // but without the hotfix it is just a non-zero constant!; }; ```. The executable can be compiled with:; ```bash; g++ $(root-config --cflags) -o convolution convolution.cc $(root-config --libs) -lRooFitCore -lRooFit; ```. An interesting observation is that by turning the `RooProdPdf` into a `RooRealSumPdf` by adding another `RooUniform` with coefficient zero, the problem is gone. So the problem is really in the interaction between `RooProdPdf` and `RooFFTConvPdf`. <img src=""https://user-images.githubusercontent.com/6578603/107349328-5eb73300-6ac8-11eb-953b-b21e90db8abc.png"" width=""400"" alt=""convoluti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7157
https://github.com/root-project/root/issues/7157:1950,Deployability,hotfix,hotfix,1950,"oGaussian gaus2(""gaus2"", ""gaus2"", x, mass, width);. // multiply one Gaussian with unity to get a RooProdPdf; RooUniform uni(""uni"", ""uni"", RooArgList(x));; RooProdPdf prod(""prod"", ""prod"", RooArgList(gaus1, uni));. // add zero trick to ""convert"" the RooProdPdf into a RealSumPdf; RooUniform dummy_for_sum_pdf{""dummy_for_sum_pdf"", ""dummy_for_sum_pdf"", x};; RooRealVar unity_for_sum_pdf(""unity_for_sum_pdf"", ""unity_for_sum_pdf"", 1);; RooRealSumPdf prod_fixed( ""prod_fixed"", ""prod_fixed"",; RooArgList(prod, dummy_for_sum_pdf),; RooArgList(unity_for_sum_pdf) );. // convolute pdf (replace prod with prod_fixed to enable hotfix); RooFFTConvPdf conv(""conv"", ""conv"", x, prod, gaus2);. // make plot; TCanvas c(""convolution"", ""convolution"");; auto xframe = x.frame(RooFit::Title(""With RooProdPdf""));. gaus1.plotOn(xframe);; gaus2.plotOn(xframe);; prod.plotOn(xframe);; conv.plotOn(xframe);. xframe->Draw();; c.SaveAs(""convolution.png"");. // the result of the convolution is expected to be a wider Gaussian around 1000,; // but without the hotfix it is just a non-zero constant!; }; ```. The executable can be compiled with:; ```bash; g++ $(root-config --cflags) -o convolution convolution.cc $(root-config --libs) -lRooFitCore -lRooFit; ```. An interesting observation is that by turning the `RooProdPdf` into a `RooRealSumPdf` by adding another `RooUniform` with coefficient zero, the problem is gone. So the problem is really in the interaction between `RooProdPdf` and `RooFFTConvPdf`. <img src=""https://user-images.githubusercontent.com/6578603/107349328-5eb73300-6ac8-11eb-953b-b21e90db8abc.png"" width=""400"" alt=""convolution""/> <img src=""https://user-images.githubusercontent.com/6578603/107349528-9de58400-6ac8-11eb-997a-ea938868de60.png"" width=""400"" alt=""convolution_hotfix""/>. ### Setup. Current ROOT master built on CentOS 7. ### Additional context. * Originally reported in the [ROOT forum](https://root-forum.cern.ch/t/roofftconvpdf-gives-constant-zero/43443); * In the forum it was reported that this",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7157
https://github.com/root-project/root/issues/7157:560,Modifiability,variab,variable,560,"### Describe the bug. The `RooFFTConvPdf` gives wrong results if one of the input PDFs is a `RooProdPdf`. ### To Reproduce. The issue can be reproduced by computing the convolution of two Gaussians, where one of the Gaussians is turned into a `RooFFTConvPdf` by multiplication with unity (`RooUniform`). ```C++; #include ""RooGaussian.h""; #include ""RooPlot.h""; #include ""RooRealSumPdf.h""; #include ""RooRealVar.h""; #include ""RooRealSumPdf.h""; #include ""RooUniform.h""; #include ""RooProdPdf.h""; #include ""RooFFTConvPdf.h""; #include ""TCanvas.h"". int main() {. // x variable with bins for convolution; RooRealVar x(""x"",""x"", -2000, 3000.);; x.setBins(1000, ""cache"");. // let's try to convolute two Gaussians; RooRealVar zero(""zero"", ""zero"", 0.0);; RooRealVar sigma(""sima"", ""sigma"", 100.);. RooRealVar mass(""mass"", ""mass"", 1000);; RooRealVar width(""width"", ""width"", 100.);. RooGaussian gaus1(""gaus1"", ""gaus1"", x, zero, sigma);; RooGaussian gaus2(""gaus2"", ""gaus2"", x, mass, width);. // multiply one Gaussian with unity to get a RooProdPdf; RooUniform uni(""uni"", ""uni"", RooArgList(x));; RooProdPdf prod(""prod"", ""prod"", RooArgList(gaus1, uni));. // add zero trick to ""convert"" the RooProdPdf into a RealSumPdf; RooUniform dummy_for_sum_pdf{""dummy_for_sum_pdf"", ""dummy_for_sum_pdf"", x};; RooRealVar unity_for_sum_pdf(""unity_for_sum_pdf"", ""unity_for_sum_pdf"", 1);; RooRealSumPdf prod_fixed( ""prod_fixed"", ""prod_fixed"",; RooArgList(prod, dummy_for_sum_pdf),; RooArgList(unity_for_sum_pdf) );. // convolute pdf (replace prod with prod_fixed to enable hotfix); RooFFTConvPdf conv(""conv"", ""conv"", x, prod, gaus2);. // make plot; TCanvas c(""convolution"", ""convolution"");; auto xframe = x.frame(RooFit::Title(""With RooProdPdf""));. gaus1.plotOn(xframe);; gaus2.plotOn(xframe);; prod.plotOn(xframe);; conv.plotOn(xframe);. xframe->Draw();; c.SaveAs(""convolution.png"");. // the result of the convolution is expected to be a wider Gaussian around 1000,; // but without the hotfix it is just a non-zero constant!; }; ```. The",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7157
https://github.com/root-project/root/issues/7157:2056,Modifiability,config,config,2056,"ni"", ""uni"", RooArgList(x));; RooProdPdf prod(""prod"", ""prod"", RooArgList(gaus1, uni));. // add zero trick to ""convert"" the RooProdPdf into a RealSumPdf; RooUniform dummy_for_sum_pdf{""dummy_for_sum_pdf"", ""dummy_for_sum_pdf"", x};; RooRealVar unity_for_sum_pdf(""unity_for_sum_pdf"", ""unity_for_sum_pdf"", 1);; RooRealSumPdf prod_fixed( ""prod_fixed"", ""prod_fixed"",; RooArgList(prod, dummy_for_sum_pdf),; RooArgList(unity_for_sum_pdf) );. // convolute pdf (replace prod with prod_fixed to enable hotfix); RooFFTConvPdf conv(""conv"", ""conv"", x, prod, gaus2);. // make plot; TCanvas c(""convolution"", ""convolution"");; auto xframe = x.frame(RooFit::Title(""With RooProdPdf""));. gaus1.plotOn(xframe);; gaus2.plotOn(xframe);; prod.plotOn(xframe);; conv.plotOn(xframe);. xframe->Draw();; c.SaveAs(""convolution.png"");. // the result of the convolution is expected to be a wider Gaussian around 1000,; // but without the hotfix it is just a non-zero constant!; }; ```. The executable can be compiled with:; ```bash; g++ $(root-config --cflags) -o convolution convolution.cc $(root-config --libs) -lRooFitCore -lRooFit; ```. An interesting observation is that by turning the `RooProdPdf` into a `RooRealSumPdf` by adding another `RooUniform` with coefficient zero, the problem is gone. So the problem is really in the interaction between `RooProdPdf` and `RooFFTConvPdf`. <img src=""https://user-images.githubusercontent.com/6578603/107349328-5eb73300-6ac8-11eb-953b-b21e90db8abc.png"" width=""400"" alt=""convolution""/> <img src=""https://user-images.githubusercontent.com/6578603/107349528-9de58400-6ac8-11eb-997a-ea938868de60.png"" width=""400"" alt=""convolution_hotfix""/>. ### Setup. Current ROOT master built on CentOS 7. ### Additional context. * Originally reported in the [ROOT forum](https://root-forum.cern.ch/t/roofftconvpdf-gives-constant-zero/43443); * In the forum it was reported that this problem also arises with the numerical convolution `RooNumConvPdf`, **however**, the example in **this issue works fine** wit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7157
https://github.com/root-project/root/issues/7157:2110,Modifiability,config,config,2110," uni));. // add zero trick to ""convert"" the RooProdPdf into a RealSumPdf; RooUniform dummy_for_sum_pdf{""dummy_for_sum_pdf"", ""dummy_for_sum_pdf"", x};; RooRealVar unity_for_sum_pdf(""unity_for_sum_pdf"", ""unity_for_sum_pdf"", 1);; RooRealSumPdf prod_fixed( ""prod_fixed"", ""prod_fixed"",; RooArgList(prod, dummy_for_sum_pdf),; RooArgList(unity_for_sum_pdf) );. // convolute pdf (replace prod with prod_fixed to enable hotfix); RooFFTConvPdf conv(""conv"", ""conv"", x, prod, gaus2);. // make plot; TCanvas c(""convolution"", ""convolution"");; auto xframe = x.frame(RooFit::Title(""With RooProdPdf""));. gaus1.plotOn(xframe);; gaus2.plotOn(xframe);; prod.plotOn(xframe);; conv.plotOn(xframe);. xframe->Draw();; c.SaveAs(""convolution.png"");. // the result of the convolution is expected to be a wider Gaussian around 1000,; // but without the hotfix it is just a non-zero constant!; }; ```. The executable can be compiled with:; ```bash; g++ $(root-config --cflags) -o convolution convolution.cc $(root-config --libs) -lRooFitCore -lRooFit; ```. An interesting observation is that by turning the `RooProdPdf` into a `RooRealSumPdf` by adding another `RooUniform` with coefficient zero, the problem is gone. So the problem is really in the interaction between `RooProdPdf` and `RooFFTConvPdf`. <img src=""https://user-images.githubusercontent.com/6578603/107349328-5eb73300-6ac8-11eb-953b-b21e90db8abc.png"" width=""400"" alt=""convolution""/> <img src=""https://user-images.githubusercontent.com/6578603/107349528-9de58400-6ac8-11eb-997a-ea938868de60.png"" width=""400"" alt=""convolution_hotfix""/>. ### Setup. Current ROOT master built on CentOS 7. ### Additional context. * Originally reported in the [ROOT forum](https://root-forum.cern.ch/t/roofftconvpdf-gives-constant-zero/43443); * In the forum it was reported that this problem also arises with the numerical convolution `RooNumConvPdf`, **however**, the example in **this issue works fine** with `RooNumConvPdf`!; * Two Jira issues appear to be connected to this issue: [",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7157
https://github.com/root-project/root/issues/7157:651,Performance,cache,cache,651,"### Describe the bug. The `RooFFTConvPdf` gives wrong results if one of the input PDFs is a `RooProdPdf`. ### To Reproduce. The issue can be reproduced by computing the convolution of two Gaussians, where one of the Gaussians is turned into a `RooFFTConvPdf` by multiplication with unity (`RooUniform`). ```C++; #include ""RooGaussian.h""; #include ""RooPlot.h""; #include ""RooRealSumPdf.h""; #include ""RooRealVar.h""; #include ""RooRealSumPdf.h""; #include ""RooUniform.h""; #include ""RooProdPdf.h""; #include ""RooFFTConvPdf.h""; #include ""TCanvas.h"". int main() {. // x variable with bins for convolution; RooRealVar x(""x"",""x"", -2000, 3000.);; x.setBins(1000, ""cache"");. // let's try to convolute two Gaussians; RooRealVar zero(""zero"", ""zero"", 0.0);; RooRealVar sigma(""sima"", ""sigma"", 100.);. RooRealVar mass(""mass"", ""mass"", 1000);; RooRealVar width(""width"", ""width"", 100.);. RooGaussian gaus1(""gaus1"", ""gaus1"", x, zero, sigma);; RooGaussian gaus2(""gaus2"", ""gaus2"", x, mass, width);. // multiply one Gaussian with unity to get a RooProdPdf; RooUniform uni(""uni"", ""uni"", RooArgList(x));; RooProdPdf prod(""prod"", ""prod"", RooArgList(gaus1, uni));. // add zero trick to ""convert"" the RooProdPdf into a RealSumPdf; RooUniform dummy_for_sum_pdf{""dummy_for_sum_pdf"", ""dummy_for_sum_pdf"", x};; RooRealVar unity_for_sum_pdf(""unity_for_sum_pdf"", ""unity_for_sum_pdf"", 1);; RooRealSumPdf prod_fixed( ""prod_fixed"", ""prod_fixed"",; RooArgList(prod, dummy_for_sum_pdf),; RooArgList(unity_for_sum_pdf) );. // convolute pdf (replace prod with prod_fixed to enable hotfix); RooFFTConvPdf conv(""conv"", ""conv"", x, prod, gaus2);. // make plot; TCanvas c(""convolution"", ""convolution"");; auto xframe = x.frame(RooFit::Title(""With RooProdPdf""));. gaus1.plotOn(xframe);; gaus2.plotOn(xframe);; prod.plotOn(xframe);; conv.plotOn(xframe);. xframe->Draw();; c.SaveAs(""convolution.png"");. // the result of the convolution is expected to be a wider Gaussian around 1000,; // but without the hotfix it is just a non-zero constant!; }; ```. The",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7157
https://github.com/root-project/root/issues/7159:259,Availability,error,error-prone,259,"### Describe the bug; When passing a path containing a double slash (```//```) to ```TChain```, the last characters are trimmed. The bug has been described [here](https://root-forum.cern.ch/t/tnetxngfile-open-fails-with-double-slash-in-path-2/43416). This is error-prone. ### Expected behavior; Even if ones does not want to automatically convert the double slash into a single slash in some scenarios, a warning should be expected. The behavior also goes against what any Linux user would expect. ### To Reproduce. I took the example from the [original bug report](https://root-forum.cern.ch/t/tnetxngfile-open-fails-with-double-slash-in-path/37564):. ```bash; TChain* mychain = new TChain(""DecayTree"");; mychain->AddFile(""root://eoslhcb.cern.ch//eos/lhcb/user/<letter>/<username>/test2//mytestfile.root""); (int) 1; mychain->GetEntries(); Error in <TNetXNGFile::Open>: [ERROR] Server responded with an error: [3011] Unable to open file /eos/lhcb/user/<letter>/<usern>; No such file or directory; ```. ### Setup; 1. ROOT Version: 6.20/02; 2. OS: Linux, SLC7; 3. How you obtained ROOT: binary install",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7159
https://github.com/root-project/root/issues/7159:840,Availability,Error,Error,840,"### Describe the bug; When passing a path containing a double slash (```//```) to ```TChain```, the last characters are trimmed. The bug has been described [here](https://root-forum.cern.ch/t/tnetxngfile-open-fails-with-double-slash-in-path-2/43416). This is error-prone. ### Expected behavior; Even if ones does not want to automatically convert the double slash into a single slash in some scenarios, a warning should be expected. The behavior also goes against what any Linux user would expect. ### To Reproduce. I took the example from the [original bug report](https://root-forum.cern.ch/t/tnetxngfile-open-fails-with-double-slash-in-path/37564):. ```bash; TChain* mychain = new TChain(""DecayTree"");; mychain->AddFile(""root://eoslhcb.cern.ch//eos/lhcb/user/<letter>/<username>/test2//mytestfile.root""); (int) 1; mychain->GetEntries(); Error in <TNetXNGFile::Open>: [ERROR] Server responded with an error: [3011] Unable to open file /eos/lhcb/user/<letter>/<usern>; No such file or directory; ```. ### Setup; 1. ROOT Version: 6.20/02; 2. OS: Linux, SLC7; 3. How you obtained ROOT: binary install",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7159
https://github.com/root-project/root/issues/7159:871,Availability,ERROR,ERROR,871,"### Describe the bug; When passing a path containing a double slash (```//```) to ```TChain```, the last characters are trimmed. The bug has been described [here](https://root-forum.cern.ch/t/tnetxngfile-open-fails-with-double-slash-in-path-2/43416). This is error-prone. ### Expected behavior; Even if ones does not want to automatically convert the double slash into a single slash in some scenarios, a warning should be expected. The behavior also goes against what any Linux user would expect. ### To Reproduce. I took the example from the [original bug report](https://root-forum.cern.ch/t/tnetxngfile-open-fails-with-double-slash-in-path/37564):. ```bash; TChain* mychain = new TChain(""DecayTree"");; mychain->AddFile(""root://eoslhcb.cern.ch//eos/lhcb/user/<letter>/<username>/test2//mytestfile.root""); (int) 1; mychain->GetEntries(); Error in <TNetXNGFile::Open>: [ERROR] Server responded with an error: [3011] Unable to open file /eos/lhcb/user/<letter>/<usern>; No such file or directory; ```. ### Setup; 1. ROOT Version: 6.20/02; 2. OS: Linux, SLC7; 3. How you obtained ROOT: binary install",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7159
https://github.com/root-project/root/issues/7159:903,Availability,error,error,903,"### Describe the bug; When passing a path containing a double slash (```//```) to ```TChain```, the last characters are trimmed. The bug has been described [here](https://root-forum.cern.ch/t/tnetxngfile-open-fails-with-double-slash-in-path-2/43416). This is error-prone. ### Expected behavior; Even if ones does not want to automatically convert the double slash into a single slash in some scenarios, a warning should be expected. The behavior also goes against what any Linux user would expect. ### To Reproduce. I took the example from the [original bug report](https://root-forum.cern.ch/t/tnetxngfile-open-fails-with-double-slash-in-path/37564):. ```bash; TChain* mychain = new TChain(""DecayTree"");; mychain->AddFile(""root://eoslhcb.cern.ch//eos/lhcb/user/<letter>/<username>/test2//mytestfile.root""); (int) 1; mychain->GetEntries(); Error in <TNetXNGFile::Open>: [ERROR] Server responded with an error: [3011] Unable to open file /eos/lhcb/user/<letter>/<usern>; No such file or directory; ```. ### Setup; 1. ROOT Version: 6.20/02; 2. OS: Linux, SLC7; 3. How you obtained ROOT: binary install",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7159
https://github.com/root-project/root/issues/7159:1092,Deployability,install,install,1092,"### Describe the bug; When passing a path containing a double slash (```//```) to ```TChain```, the last characters are trimmed. The bug has been described [here](https://root-forum.cern.ch/t/tnetxngfile-open-fails-with-double-slash-in-path-2/43416). This is error-prone. ### Expected behavior; Even if ones does not want to automatically convert the double slash into a single slash in some scenarios, a warning should be expected. The behavior also goes against what any Linux user would expect. ### To Reproduce. I took the example from the [original bug report](https://root-forum.cern.ch/t/tnetxngfile-open-fails-with-double-slash-in-path/37564):. ```bash; TChain* mychain = new TChain(""DecayTree"");; mychain->AddFile(""root://eoslhcb.cern.ch//eos/lhcb/user/<letter>/<username>/test2//mytestfile.root""); (int) 1; mychain->GetEntries(); Error in <TNetXNGFile::Open>: [ERROR] Server responded with an error: [3011] Unable to open file /eos/lhcb/user/<letter>/<usern>; No such file or directory; ```. ### Setup; 1. ROOT Version: 6.20/02; 2. OS: Linux, SLC7; 3. How you obtained ROOT: binary install",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7159
https://github.com/root-project/root/issues/7160:153,Availability,error,error,153,"On MacOS passing to cmake:. `-Dcocoa=ON -Dopengl=OFF`. leads to. ```; /Users/pcanal/root_working/code/rootcling/graf2d/cocoa/src/TGCocoa.mm:20:10: fatal error: 'TGLIncludes.h' file not found; #include ""TGLIncludes.h""; ^~~~~~~~~~~~~~~; 1 error generated.; ```; In `graf2d/cocoa/CMakeLists.txt` the code:; ```; if(opengl) # special case when cocoa is enabled but not opengl (i.e. gminimal=ON); target_include_directories(GCocoa PRIVATE ${OPENGL_INCLUDE_DIR}); else(); target_include_directories(GCocoa PRIVATE; ${CMAKE_SOURCE_DIR}/graf3d/gl/inc; ); endif(opengl); ```; acknowledge the challenge but fail to address it. And indeed in `TGCocoa.mm` the file `TGLIncludes.h` is always included. Maybe this should fail at configuration time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7160
https://github.com/root-project/root/issues/7160:237,Availability,error,error,237,"On MacOS passing to cmake:. `-Dcocoa=ON -Dopengl=OFF`. leads to. ```; /Users/pcanal/root_working/code/rootcling/graf2d/cocoa/src/TGCocoa.mm:20:10: fatal error: 'TGLIncludes.h' file not found; #include ""TGLIncludes.h""; ^~~~~~~~~~~~~~~; 1 error generated.; ```; In `graf2d/cocoa/CMakeLists.txt` the code:; ```; if(opengl) # special case when cocoa is enabled but not opengl (i.e. gminimal=ON); target_include_directories(GCocoa PRIVATE ${OPENGL_INCLUDE_DIR}); else(); target_include_directories(GCocoa PRIVATE; ${CMAKE_SOURCE_DIR}/graf3d/gl/inc; ); endif(opengl); ```; acknowledge the challenge but fail to address it. And indeed in `TGCocoa.mm` the file `TGLIncludes.h` is always included. Maybe this should fail at configuration time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7160
https://github.com/root-project/root/issues/7160:715,Deployability,configurat,configuration,715,"On MacOS passing to cmake:. `-Dcocoa=ON -Dopengl=OFF`. leads to. ```; /Users/pcanal/root_working/code/rootcling/graf2d/cocoa/src/TGCocoa.mm:20:10: fatal error: 'TGLIncludes.h' file not found; #include ""TGLIncludes.h""; ^~~~~~~~~~~~~~~; 1 error generated.; ```; In `graf2d/cocoa/CMakeLists.txt` the code:; ```; if(opengl) # special case when cocoa is enabled but not opengl (i.e. gminimal=ON); target_include_directories(GCocoa PRIVATE ${OPENGL_INCLUDE_DIR}); else(); target_include_directories(GCocoa PRIVATE; ${CMAKE_SOURCE_DIR}/graf3d/gl/inc; ); endif(opengl); ```; acknowledge the challenge but fail to address it. And indeed in `TGCocoa.mm` the file `TGLIncludes.h` is always included. Maybe this should fail at configuration time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7160
https://github.com/root-project/root/issues/7160:715,Modifiability,config,configuration,715,"On MacOS passing to cmake:. `-Dcocoa=ON -Dopengl=OFF`. leads to. ```; /Users/pcanal/root_working/code/rootcling/graf2d/cocoa/src/TGCocoa.mm:20:10: fatal error: 'TGLIncludes.h' file not found; #include ""TGLIncludes.h""; ^~~~~~~~~~~~~~~; 1 error generated.; ```; In `graf2d/cocoa/CMakeLists.txt` the code:; ```; if(opengl) # special case when cocoa is enabled but not opengl (i.e. gminimal=ON); target_include_directories(GCocoa PRIVATE ${OPENGL_INCLUDE_DIR}); else(); target_include_directories(GCocoa PRIVATE; ${CMAKE_SOURCE_DIR}/graf3d/gl/inc; ); endif(opengl); ```; acknowledge the challenge but fail to address it. And indeed in `TGCocoa.mm` the file `TGLIncludes.h` is always included. Maybe this should fail at configuration time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7160
https://github.com/root-project/root/issues/7161:82,Deployability,install,install,82,"### Version; ROOT version: 6.18/04; OS: Linux, SLC7; How you obtained ROOT: conda install; ### Describe the bug. When using pyROOT (might not necessarily be due to using pyROOT) with '-h' or '--help' in sys.argv, if a ROOT method is called, a root CLI help message will be wrongly printed out. In a lot of cases when designing a python package that uses ROOT with CLI support, this bug will make the CLI print out the root help instead of the intended help message from the python package. ### To reproduce the issue (e.g. using python interpreter):; ```; import sys; sys.argv.append('-h'); import ROOT; ROOT.Double(); ```; This will print out the following message:. """"""; usage: root [-b B] [-x X] [-e E] [-n N] [-t T] [-q Q] [-l L] [-config CONFIG]; [-memstat MEMSTAT] [-h HELP] [--version VERSION]; [--notebook NOTEBOOK] [--web WEB] [--web=<browser> WEB=<BROWSER>]; [dir] [file:data.root] [file1.C...fileN.C]. OPTIONS:; -b Run in batch mode without graphics; -x Exit on exceptions; -e Execute the command passed between single quotes; -n Do not execute logon and logoff macros as specified in .rootrc; -t Enable thread-safety and implicit multi-threading (IMT); -q Exit after processing command line macro files; -l Do not show splash screen; -config print ./configure options; -memstat run with memory usage monitoring; -h, -?, --help Show summary of options; --version Show the ROOT version; --notebook Execute ROOT notebook; --web Display graphics in a default web browser; --web=<browser> Display graphics in specified web browser; [dir] if dir is a valid directory cd to it before executing; [file:data.root] Open the ROOT file data.root; [file1.C...fileN.C] Execute the the ROOT macro file1.C ... fileN.C; """"""; And the program will terminate. ### Expected behaviour. No root CLI help message should be printed out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7161
https://github.com/root-project/root/issues/7161:1312,Energy Efficiency,monitor,monitoring,1312,"### Version; ROOT version: 6.18/04; OS: Linux, SLC7; How you obtained ROOT: conda install; ### Describe the bug. When using pyROOT (might not necessarily be due to using pyROOT) with '-h' or '--help' in sys.argv, if a ROOT method is called, a root CLI help message will be wrongly printed out. In a lot of cases when designing a python package that uses ROOT with CLI support, this bug will make the CLI print out the root help instead of the intended help message from the python package. ### To reproduce the issue (e.g. using python interpreter):; ```; import sys; sys.argv.append('-h'); import ROOT; ROOT.Double(); ```; This will print out the following message:. """"""; usage: root [-b B] [-x X] [-e E] [-n N] [-t T] [-q Q] [-l L] [-config CONFIG]; [-memstat MEMSTAT] [-h HELP] [--version VERSION]; [--notebook NOTEBOOK] [--web WEB] [--web=<browser> WEB=<BROWSER>]; [dir] [file:data.root] [file1.C...fileN.C]. OPTIONS:; -b Run in batch mode without graphics; -x Exit on exceptions; -e Execute the command passed between single quotes; -n Do not execute logon and logoff macros as specified in .rootrc; -t Enable thread-safety and implicit multi-threading (IMT); -q Exit after processing command line macro files; -l Do not show splash screen; -config print ./configure options; -memstat run with memory usage monitoring; -h, -?, --help Show summary of options; --version Show the ROOT version; --notebook Execute ROOT notebook; --web Display graphics in a default web browser; --web=<browser> Display graphics in specified web browser; [dir] if dir is a valid directory cd to it before executing; [file:data.root] Open the ROOT file data.root; [file1.C...fileN.C] Execute the the ROOT macro file1.C ... fileN.C; """"""; And the program will terminate. ### Expected behaviour. No root CLI help message should be printed out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7161
https://github.com/root-project/root/issues/7161:257,Integrability,message,message,257,"### Version; ROOT version: 6.18/04; OS: Linux, SLC7; How you obtained ROOT: conda install; ### Describe the bug. When using pyROOT (might not necessarily be due to using pyROOT) with '-h' or '--help' in sys.argv, if a ROOT method is called, a root CLI help message will be wrongly printed out. In a lot of cases when designing a python package that uses ROOT with CLI support, this bug will make the CLI print out the root help instead of the intended help message from the python package. ### To reproduce the issue (e.g. using python interpreter):; ```; import sys; sys.argv.append('-h'); import ROOT; ROOT.Double(); ```; This will print out the following message:. """"""; usage: root [-b B] [-x X] [-e E] [-n N] [-t T] [-q Q] [-l L] [-config CONFIG]; [-memstat MEMSTAT] [-h HELP] [--version VERSION]; [--notebook NOTEBOOK] [--web WEB] [--web=<browser> WEB=<BROWSER>]; [dir] [file:data.root] [file1.C...fileN.C]. OPTIONS:; -b Run in batch mode without graphics; -x Exit on exceptions; -e Execute the command passed between single quotes; -n Do not execute logon and logoff macros as specified in .rootrc; -t Enable thread-safety and implicit multi-threading (IMT); -q Exit after processing command line macro files; -l Do not show splash screen; -config print ./configure options; -memstat run with memory usage monitoring; -h, -?, --help Show summary of options; --version Show the ROOT version; --notebook Execute ROOT notebook; --web Display graphics in a default web browser; --web=<browser> Display graphics in specified web browser; [dir] if dir is a valid directory cd to it before executing; [file:data.root] Open the ROOT file data.root; [file1.C...fileN.C] Execute the the ROOT macro file1.C ... fileN.C; """"""; And the program will terminate. ### Expected behaviour. No root CLI help message should be printed out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7161
https://github.com/root-project/root/issues/7161:457,Integrability,message,message,457,"### Version; ROOT version: 6.18/04; OS: Linux, SLC7; How you obtained ROOT: conda install; ### Describe the bug. When using pyROOT (might not necessarily be due to using pyROOT) with '-h' or '--help' in sys.argv, if a ROOT method is called, a root CLI help message will be wrongly printed out. In a lot of cases when designing a python package that uses ROOT with CLI support, this bug will make the CLI print out the root help instead of the intended help message from the python package. ### To reproduce the issue (e.g. using python interpreter):; ```; import sys; sys.argv.append('-h'); import ROOT; ROOT.Double(); ```; This will print out the following message:. """"""; usage: root [-b B] [-x X] [-e E] [-n N] [-t T] [-q Q] [-l L] [-config CONFIG]; [-memstat MEMSTAT] [-h HELP] [--version VERSION]; [--notebook NOTEBOOK] [--web WEB] [--web=<browser> WEB=<BROWSER>]; [dir] [file:data.root] [file1.C...fileN.C]. OPTIONS:; -b Run in batch mode without graphics; -x Exit on exceptions; -e Execute the command passed between single quotes; -n Do not execute logon and logoff macros as specified in .rootrc; -t Enable thread-safety and implicit multi-threading (IMT); -q Exit after processing command line macro files; -l Do not show splash screen; -config print ./configure options; -memstat run with memory usage monitoring; -h, -?, --help Show summary of options; --version Show the ROOT version; --notebook Execute ROOT notebook; --web Display graphics in a default web browser; --web=<browser> Display graphics in specified web browser; [dir] if dir is a valid directory cd to it before executing; [file:data.root] Open the ROOT file data.root; [file1.C...fileN.C] Execute the the ROOT macro file1.C ... fileN.C; """"""; And the program will terminate. ### Expected behaviour. No root CLI help message should be printed out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7161
https://github.com/root-project/root/issues/7161:658,Integrability,message,message,658,"### Version; ROOT version: 6.18/04; OS: Linux, SLC7; How you obtained ROOT: conda install; ### Describe the bug. When using pyROOT (might not necessarily be due to using pyROOT) with '-h' or '--help' in sys.argv, if a ROOT method is called, a root CLI help message will be wrongly printed out. In a lot of cases when designing a python package that uses ROOT with CLI support, this bug will make the CLI print out the root help instead of the intended help message from the python package. ### To reproduce the issue (e.g. using python interpreter):; ```; import sys; sys.argv.append('-h'); import ROOT; ROOT.Double(); ```; This will print out the following message:. """"""; usage: root [-b B] [-x X] [-e E] [-n N] [-t T] [-q Q] [-l L] [-config CONFIG]; [-memstat MEMSTAT] [-h HELP] [--version VERSION]; [--notebook NOTEBOOK] [--web WEB] [--web=<browser> WEB=<BROWSER>]; [dir] [file:data.root] [file1.C...fileN.C]. OPTIONS:; -b Run in batch mode without graphics; -x Exit on exceptions; -e Execute the command passed between single quotes; -n Do not execute logon and logoff macros as specified in .rootrc; -t Enable thread-safety and implicit multi-threading (IMT); -q Exit after processing command line macro files; -l Do not show splash screen; -config print ./configure options; -memstat run with memory usage monitoring; -h, -?, --help Show summary of options; --version Show the ROOT version; --notebook Execute ROOT notebook; --web Display graphics in a default web browser; --web=<browser> Display graphics in specified web browser; [dir] if dir is a valid directory cd to it before executing; [file:data.root] Open the ROOT file data.root; [file1.C...fileN.C] Execute the the ROOT macro file1.C ... fileN.C; """"""; And the program will terminate. ### Expected behaviour. No root CLI help message should be printed out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7161
https://github.com/root-project/root/issues/7161:1793,Integrability,message,message,1793,"### Version; ROOT version: 6.18/04; OS: Linux, SLC7; How you obtained ROOT: conda install; ### Describe the bug. When using pyROOT (might not necessarily be due to using pyROOT) with '-h' or '--help' in sys.argv, if a ROOT method is called, a root CLI help message will be wrongly printed out. In a lot of cases when designing a python package that uses ROOT with CLI support, this bug will make the CLI print out the root help instead of the intended help message from the python package. ### To reproduce the issue (e.g. using python interpreter):; ```; import sys; sys.argv.append('-h'); import ROOT; ROOT.Double(); ```; This will print out the following message:. """"""; usage: root [-b B] [-x X] [-e E] [-n N] [-t T] [-q Q] [-l L] [-config CONFIG]; [-memstat MEMSTAT] [-h HELP] [--version VERSION]; [--notebook NOTEBOOK] [--web WEB] [--web=<browser> WEB=<BROWSER>]; [dir] [file:data.root] [file1.C...fileN.C]. OPTIONS:; -b Run in batch mode without graphics; -x Exit on exceptions; -e Execute the command passed between single quotes; -n Do not execute logon and logoff macros as specified in .rootrc; -t Enable thread-safety and implicit multi-threading (IMT); -q Exit after processing command line macro files; -l Do not show splash screen; -config print ./configure options; -memstat run with memory usage monitoring; -h, -?, --help Show summary of options; --version Show the ROOT version; --notebook Execute ROOT notebook; --web Display graphics in a default web browser; --web=<browser> Display graphics in specified web browser; [dir] if dir is a valid directory cd to it before executing; [file:data.root] Open the ROOT file data.root; [file1.C...fileN.C] Execute the the ROOT macro file1.C ... fileN.C; """"""; And the program will terminate. ### Expected behaviour. No root CLI help message should be printed out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7161
https://github.com/root-project/root/issues/7161:736,Modifiability,config,config,736,"### Version; ROOT version: 6.18/04; OS: Linux, SLC7; How you obtained ROOT: conda install; ### Describe the bug. When using pyROOT (might not necessarily be due to using pyROOT) with '-h' or '--help' in sys.argv, if a ROOT method is called, a root CLI help message will be wrongly printed out. In a lot of cases when designing a python package that uses ROOT with CLI support, this bug will make the CLI print out the root help instead of the intended help message from the python package. ### To reproduce the issue (e.g. using python interpreter):; ```; import sys; sys.argv.append('-h'); import ROOT; ROOT.Double(); ```; This will print out the following message:. """"""; usage: root [-b B] [-x X] [-e E] [-n N] [-t T] [-q Q] [-l L] [-config CONFIG]; [-memstat MEMSTAT] [-h HELP] [--version VERSION]; [--notebook NOTEBOOK] [--web WEB] [--web=<browser> WEB=<BROWSER>]; [dir] [file:data.root] [file1.C...fileN.C]. OPTIONS:; -b Run in batch mode without graphics; -x Exit on exceptions; -e Execute the command passed between single quotes; -n Do not execute logon and logoff macros as specified in .rootrc; -t Enable thread-safety and implicit multi-threading (IMT); -q Exit after processing command line macro files; -l Do not show splash screen; -config print ./configure options; -memstat run with memory usage monitoring; -h, -?, --help Show summary of options; --version Show the ROOT version; --notebook Execute ROOT notebook; --web Display graphics in a default web browser; --web=<browser> Display graphics in specified web browser; [dir] if dir is a valid directory cd to it before executing; [file:data.root] Open the ROOT file data.root; [file1.C...fileN.C] Execute the the ROOT macro file1.C ... fileN.C; """"""; And the program will terminate. ### Expected behaviour. No root CLI help message should be printed out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7161
https://github.com/root-project/root/issues/7161:743,Modifiability,CONFIG,CONFIG,743,"### Version; ROOT version: 6.18/04; OS: Linux, SLC7; How you obtained ROOT: conda install; ### Describe the bug. When using pyROOT (might not necessarily be due to using pyROOT) with '-h' or '--help' in sys.argv, if a ROOT method is called, a root CLI help message will be wrongly printed out. In a lot of cases when designing a python package that uses ROOT with CLI support, this bug will make the CLI print out the root help instead of the intended help message from the python package. ### To reproduce the issue (e.g. using python interpreter):; ```; import sys; sys.argv.append('-h'); import ROOT; ROOT.Double(); ```; This will print out the following message:. """"""; usage: root [-b B] [-x X] [-e E] [-n N] [-t T] [-q Q] [-l L] [-config CONFIG]; [-memstat MEMSTAT] [-h HELP] [--version VERSION]; [--notebook NOTEBOOK] [--web WEB] [--web=<browser> WEB=<BROWSER>]; [dir] [file:data.root] [file1.C...fileN.C]. OPTIONS:; -b Run in batch mode without graphics; -x Exit on exceptions; -e Execute the command passed between single quotes; -n Do not execute logon and logoff macros as specified in .rootrc; -t Enable thread-safety and implicit multi-threading (IMT); -q Exit after processing command line macro files; -l Do not show splash screen; -config print ./configure options; -memstat run with memory usage monitoring; -h, -?, --help Show summary of options; --version Show the ROOT version; --notebook Execute ROOT notebook; --web Display graphics in a default web browser; --web=<browser> Display graphics in specified web browser; [dir] if dir is a valid directory cd to it before executing; [file:data.root] Open the ROOT file data.root; [file1.C...fileN.C] Execute the the ROOT macro file1.C ... fileN.C; """"""; And the program will terminate. ### Expected behaviour. No root CLI help message should be printed out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7161
https://github.com/root-project/root/issues/7161:1247,Modifiability,config,config,1247,"### Version; ROOT version: 6.18/04; OS: Linux, SLC7; How you obtained ROOT: conda install; ### Describe the bug. When using pyROOT (might not necessarily be due to using pyROOT) with '-h' or '--help' in sys.argv, if a ROOT method is called, a root CLI help message will be wrongly printed out. In a lot of cases when designing a python package that uses ROOT with CLI support, this bug will make the CLI print out the root help instead of the intended help message from the python package. ### To reproduce the issue (e.g. using python interpreter):; ```; import sys; sys.argv.append('-h'); import ROOT; ROOT.Double(); ```; This will print out the following message:. """"""; usage: root [-b B] [-x X] [-e E] [-n N] [-t T] [-q Q] [-l L] [-config CONFIG]; [-memstat MEMSTAT] [-h HELP] [--version VERSION]; [--notebook NOTEBOOK] [--web WEB] [--web=<browser> WEB=<BROWSER>]; [dir] [file:data.root] [file1.C...fileN.C]. OPTIONS:; -b Run in batch mode without graphics; -x Exit on exceptions; -e Execute the command passed between single quotes; -n Do not execute logon and logoff macros as specified in .rootrc; -t Enable thread-safety and implicit multi-threading (IMT); -q Exit after processing command line macro files; -l Do not show splash screen; -config print ./configure options; -memstat run with memory usage monitoring; -h, -?, --help Show summary of options; --version Show the ROOT version; --notebook Execute ROOT notebook; --web Display graphics in a default web browser; --web=<browser> Display graphics in specified web browser; [dir] if dir is a valid directory cd to it before executing; [file:data.root] Open the ROOT file data.root; [file1.C...fileN.C] Execute the the ROOT macro file1.C ... fileN.C; """"""; And the program will terminate. ### Expected behaviour. No root CLI help message should be printed out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7161
https://github.com/root-project/root/issues/7161:1262,Modifiability,config,configure,1262,"### Version; ROOT version: 6.18/04; OS: Linux, SLC7; How you obtained ROOT: conda install; ### Describe the bug. When using pyROOT (might not necessarily be due to using pyROOT) with '-h' or '--help' in sys.argv, if a ROOT method is called, a root CLI help message will be wrongly printed out. In a lot of cases when designing a python package that uses ROOT with CLI support, this bug will make the CLI print out the root help instead of the intended help message from the python package. ### To reproduce the issue (e.g. using python interpreter):; ```; import sys; sys.argv.append('-h'); import ROOT; ROOT.Double(); ```; This will print out the following message:. """"""; usage: root [-b B] [-x X] [-e E] [-n N] [-t T] [-q Q] [-l L] [-config CONFIG]; [-memstat MEMSTAT] [-h HELP] [--version VERSION]; [--notebook NOTEBOOK] [--web WEB] [--web=<browser> WEB=<BROWSER>]; [dir] [file:data.root] [file1.C...fileN.C]. OPTIONS:; -b Run in batch mode without graphics; -x Exit on exceptions; -e Execute the command passed between single quotes; -n Do not execute logon and logoff macros as specified in .rootrc; -t Enable thread-safety and implicit multi-threading (IMT); -q Exit after processing command line macro files; -l Do not show splash screen; -config print ./configure options; -memstat run with memory usage monitoring; -h, -?, --help Show summary of options; --version Show the ROOT version; --notebook Execute ROOT notebook; --web Display graphics in a default web browser; --web=<browser> Display graphics in specified web browser; [dir] if dir is a valid directory cd to it before executing; [file:data.root] Open the ROOT file data.root; [file1.C...fileN.C] Execute the the ROOT macro file1.C ... fileN.C; """"""; And the program will terminate. ### Expected behaviour. No root CLI help message should be printed out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7161
https://github.com/root-project/root/issues/7161:1142,Performance,multi-thread,multi-threading,1142,"### Version; ROOT version: 6.18/04; OS: Linux, SLC7; How you obtained ROOT: conda install; ### Describe the bug. When using pyROOT (might not necessarily be due to using pyROOT) with '-h' or '--help' in sys.argv, if a ROOT method is called, a root CLI help message will be wrongly printed out. In a lot of cases when designing a python package that uses ROOT with CLI support, this bug will make the CLI print out the root help instead of the intended help message from the python package. ### To reproduce the issue (e.g. using python interpreter):; ```; import sys; sys.argv.append('-h'); import ROOT; ROOT.Double(); ```; This will print out the following message:. """"""; usage: root [-b B] [-x X] [-e E] [-n N] [-t T] [-q Q] [-l L] [-config CONFIG]; [-memstat MEMSTAT] [-h HELP] [--version VERSION]; [--notebook NOTEBOOK] [--web WEB] [--web=<browser> WEB=<BROWSER>]; [dir] [file:data.root] [file1.C...fileN.C]. OPTIONS:; -b Run in batch mode without graphics; -x Exit on exceptions; -e Execute the command passed between single quotes; -n Do not execute logon and logoff macros as specified in .rootrc; -t Enable thread-safety and implicit multi-threading (IMT); -q Exit after processing command line macro files; -l Do not show splash screen; -config print ./configure options; -memstat run with memory usage monitoring; -h, -?, --help Show summary of options; --version Show the ROOT version; --notebook Execute ROOT notebook; --web Display graphics in a default web browser; --web=<browser> Display graphics in specified web browser; [dir] if dir is a valid directory cd to it before executing; [file:data.root] Open the ROOT file data.root; [file1.C...fileN.C] Execute the the ROOT macro file1.C ... fileN.C; """"""; And the program will terminate. ### Expected behaviour. No root CLI help message should be printed out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7161
https://github.com/root-project/root/issues/7161:1122,Safety,safe,safety,1122,"### Version; ROOT version: 6.18/04; OS: Linux, SLC7; How you obtained ROOT: conda install; ### Describe the bug. When using pyROOT (might not necessarily be due to using pyROOT) with '-h' or '--help' in sys.argv, if a ROOT method is called, a root CLI help message will be wrongly printed out. In a lot of cases when designing a python package that uses ROOT with CLI support, this bug will make the CLI print out the root help instead of the intended help message from the python package. ### To reproduce the issue (e.g. using python interpreter):; ```; import sys; sys.argv.append('-h'); import ROOT; ROOT.Double(); ```; This will print out the following message:. """"""; usage: root [-b B] [-x X] [-e E] [-n N] [-t T] [-q Q] [-l L] [-config CONFIG]; [-memstat MEMSTAT] [-h HELP] [--version VERSION]; [--notebook NOTEBOOK] [--web WEB] [--web=<browser> WEB=<BROWSER>]; [dir] [file:data.root] [file1.C...fileN.C]. OPTIONS:; -b Run in batch mode without graphics; -x Exit on exceptions; -e Execute the command passed between single quotes; -n Do not execute logon and logoff macros as specified in .rootrc; -t Enable thread-safety and implicit multi-threading (IMT); -q Exit after processing command line macro files; -l Do not show splash screen; -config print ./configure options; -memstat run with memory usage monitoring; -h, -?, --help Show summary of options; --version Show the ROOT version; --notebook Execute ROOT notebook; --web Display graphics in a default web browser; --web=<browser> Display graphics in specified web browser; [dir] if dir is a valid directory cd to it before executing; [file:data.root] Open the ROOT file data.root; [file1.C...fileN.C] Execute the the ROOT macro file1.C ... fileN.C; """"""; And the program will terminate. ### Expected behaviour. No root CLI help message should be printed out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7161
https://github.com/root-project/root/issues/7161:1056,Testability,log,logon,1056,"### Version; ROOT version: 6.18/04; OS: Linux, SLC7; How you obtained ROOT: conda install; ### Describe the bug. When using pyROOT (might not necessarily be due to using pyROOT) with '-h' or '--help' in sys.argv, if a ROOT method is called, a root CLI help message will be wrongly printed out. In a lot of cases when designing a python package that uses ROOT with CLI support, this bug will make the CLI print out the root help instead of the intended help message from the python package. ### To reproduce the issue (e.g. using python interpreter):; ```; import sys; sys.argv.append('-h'); import ROOT; ROOT.Double(); ```; This will print out the following message:. """"""; usage: root [-b B] [-x X] [-e E] [-n N] [-t T] [-q Q] [-l L] [-config CONFIG]; [-memstat MEMSTAT] [-h HELP] [--version VERSION]; [--notebook NOTEBOOK] [--web WEB] [--web=<browser> WEB=<BROWSER>]; [dir] [file:data.root] [file1.C...fileN.C]. OPTIONS:; -b Run in batch mode without graphics; -x Exit on exceptions; -e Execute the command passed between single quotes; -n Do not execute logon and logoff macros as specified in .rootrc; -t Enable thread-safety and implicit multi-threading (IMT); -q Exit after processing command line macro files; -l Do not show splash screen; -config print ./configure options; -memstat run with memory usage monitoring; -h, -?, --help Show summary of options; --version Show the ROOT version; --notebook Execute ROOT notebook; --web Display graphics in a default web browser; --web=<browser> Display graphics in specified web browser; [dir] if dir is a valid directory cd to it before executing; [file:data.root] Open the ROOT file data.root; [file1.C...fileN.C] Execute the the ROOT macro file1.C ... fileN.C; """"""; And the program will terminate. ### Expected behaviour. No root CLI help message should be printed out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7161
https://github.com/root-project/root/issues/7161:1066,Testability,log,logoff,1066,"### Version; ROOT version: 6.18/04; OS: Linux, SLC7; How you obtained ROOT: conda install; ### Describe the bug. When using pyROOT (might not necessarily be due to using pyROOT) with '-h' or '--help' in sys.argv, if a ROOT method is called, a root CLI help message will be wrongly printed out. In a lot of cases when designing a python package that uses ROOT with CLI support, this bug will make the CLI print out the root help instead of the intended help message from the python package. ### To reproduce the issue (e.g. using python interpreter):; ```; import sys; sys.argv.append('-h'); import ROOT; ROOT.Double(); ```; This will print out the following message:. """"""; usage: root [-b B] [-x X] [-e E] [-n N] [-t T] [-q Q] [-l L] [-config CONFIG]; [-memstat MEMSTAT] [-h HELP] [--version VERSION]; [--notebook NOTEBOOK] [--web WEB] [--web=<browser> WEB=<BROWSER>]; [dir] [file:data.root] [file1.C...fileN.C]. OPTIONS:; -b Run in batch mode without graphics; -x Exit on exceptions; -e Execute the command passed between single quotes; -n Do not execute logon and logoff macros as specified in .rootrc; -t Enable thread-safety and implicit multi-threading (IMT); -q Exit after processing command line macro files; -l Do not show splash screen; -config print ./configure options; -memstat run with memory usage monitoring; -h, -?, --help Show summary of options; --version Show the ROOT version; --notebook Execute ROOT notebook; --web Display graphics in a default web browser; --web=<browser> Display graphics in specified web browser; [dir] if dir is a valid directory cd to it before executing; [file:data.root] Open the ROOT file data.root; [file1.C...fileN.C] Execute the the ROOT macro file1.C ... fileN.C; """"""; And the program will terminate. ### Expected behaviour. No root CLI help message should be printed out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7161
https://github.com/root-project/root/issues/7162:355,Availability,Error,Error,355,"Reproducer:. ```; [eguiraud@lxplus727 ~]$ source /cvmfs/sft.cern.ch/lcg/views/LCG_98python3/x86_64-centos7-gcc8-opt/setup.sh; [eguiraud@lxplus727 ~]$ python; Python 3.7.6 (default, Aug 12 2020, 09:46:40) ; [GCC 8.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from ROOT import TMVA; >>> from ROOT import TFile; Error in <RootX11ErrorHandler>: BadAccess (attempt to access private resource denied) (XID: 418, XREQ: 18); ```. This error is not printed with other LCG releases, e.g. LCG_99.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7162
https://github.com/root-project/root/issues/7162:473,Availability,error,error,473,"Reproducer:. ```; [eguiraud@lxplus727 ~]$ source /cvmfs/sft.cern.ch/lcg/views/LCG_98python3/x86_64-centos7-gcc8-opt/setup.sh; [eguiraud@lxplus727 ~]$ python; Python 3.7.6 (default, Aug 12 2020, 09:46:40) ; [GCC 8.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from ROOT import TMVA; >>> from ROOT import TFile; Error in <RootX11ErrorHandler>: BadAccess (attempt to access private resource denied) (XID: 418, XREQ: 18); ```. This error is not printed with other LCG releases, e.g. LCG_99.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7162
https://github.com/root-project/root/issues/7162:509,Deployability,release,releases,509,"Reproducer:. ```; [eguiraud@lxplus727 ~]$ source /cvmfs/sft.cern.ch/lcg/views/LCG_98python3/x86_64-centos7-gcc8-opt/setup.sh; [eguiraud@lxplus727 ~]$ python; Python 3.7.6 (default, Aug 12 2020, 09:46:40) ; [GCC 8.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from ROOT import TMVA; >>> from ROOT import TFile; Error in <RootX11ErrorHandler>: BadAccess (attempt to access private resource denied) (XID: 418, XREQ: 18); ```. This error is not printed with other LCG releases, e.g. LCG_99.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7162
https://github.com/root-project/root/issues/7162:409,Security,access,access,409,"Reproducer:. ```; [eguiraud@lxplus727 ~]$ source /cvmfs/sft.cern.ch/lcg/views/LCG_98python3/x86_64-centos7-gcc8-opt/setup.sh; [eguiraud@lxplus727 ~]$ python; Python 3.7.6 (default, Aug 12 2020, 09:46:40) ; [GCC 8.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from ROOT import TMVA; >>> from ROOT import TFile; Error in <RootX11ErrorHandler>: BadAccess (attempt to access private resource denied) (XID: 418, XREQ: 18); ```. This error is not printed with other LCG releases, e.g. LCG_99.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7162
https://github.com/root-project/root/pull/7163:34,Modifiability,variab,variable,34,"For example, imagine you define a variable int x = 3;. Then, you could type 'x' and press ENTER so that the command line shows its value.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7163
https://github.com/root-project/root/issues/7164:225,Deployability,update,update,225,"### Explain what you would like to see improved; TGSpeedo class is quite helpful, but it lacks the ability of auto-calculating the mean value (a mean mark is there, but is up to the user to put a senseful value there on each update). ### Optional: share how it could be improved; I would propose to let the user define a circular buffer size, so that the TGSpeedo class autocalculates the mean value of the last N entries. The default value would be N=0 to keep old behaviour and save memory, but the user could call for example SetMeanBufferSize(10) to do an average of the last 10 entries. Could be implemented for example using https://root.cern/doc/master/circular_8C.html; or just with this simple header class: https://github.com/jnk0le/Ring-Buffer/blob/master/ringbuffer.hpp. And then the average just as `std::sum(begin(...), end(...), 0)/N`. ### To Reproduce; 1. EnableMeanMark in TGSpeedo; 2. The Mean value is not calculated automatically. ### Setup; 1. ROOT 6.23/01; 2. Linux; 3. Self-built",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7164
https://github.com/root-project/root/issues/7164:696,Usability,simpl,simple,696,"### Explain what you would like to see improved; TGSpeedo class is quite helpful, but it lacks the ability of auto-calculating the mean value (a mean mark is there, but is up to the user to put a senseful value there on each update). ### Optional: share how it could be improved; I would propose to let the user define a circular buffer size, so that the TGSpeedo class autocalculates the mean value of the last N entries. The default value would be N=0 to keep old behaviour and save memory, but the user could call for example SetMeanBufferSize(10) to do an average of the last 10 entries. Could be implemented for example using https://root.cern/doc/master/circular_8C.html; or just with this simple header class: https://github.com/jnk0le/Ring-Buffer/blob/master/ringbuffer.hpp. And then the average just as `std::sum(begin(...), end(...), 0)/N`. ### To Reproduce; 1. EnableMeanMark in TGSpeedo; 2. The Mean value is not calculated automatically. ### Setup; 1. ROOT 6.23/01; 2. Linux; 3. Self-built",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7164
https://github.com/root-project/root/pull/7165:177,Energy Efficiency,Adapt,Adapt,177,- Allow to steer the unit switching between Geant4 units and ROOT units with an unlock mechanism. The (un)lock mechanism can be enabled by a static member of the TGeoManager; - Adapt the GDML parser and writer accordingly to output the correct units.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7165
https://github.com/root-project/root/pull/7165:177,Modifiability,Adapt,Adapt,177,- Allow to steer the unit switching between Geant4 units and ROOT units with an unlock mechanism. The (un)lock mechanism can be enabled by a static member of the TGeoManager; - Adapt the GDML parser and writer accordingly to output the correct units.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7165
https://github.com/root-project/root/pull/7166:59,Usability,Guid,Guide,59,Johannes pointed out that the links to the Old Math User's Guide should be changed to like to the manual.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7166
https://github.com/root-project/root/issues/7167:15,Performance,multi-thread,multi-thread,15,"`fork()`-ing a multi-thread program typically ends up badly. In ROOT, TBB spawns threads when RTaskArena is constructed, and Cocoa spawns threads, on Mac, when graphics are activated. We would like to employ a similar mechanism to what is used to loop over threads to print their stacktraces on a crash in order to detect whether `TTreeProcessorMP::Process` is called from a multi-thread program, and warn users if so.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7167
https://github.com/root-project/root/issues/7167:375,Performance,multi-thread,multi-thread,375,"`fork()`-ing a multi-thread program typically ends up badly. In ROOT, TBB spawns threads when RTaskArena is constructed, and Cocoa spawns threads, on Mac, when graphics are activated. We would like to employ a similar mechanism to what is used to loop over threads to print their stacktraces on a crash in order to detect whether `TTreeProcessorMP::Process` is called from a multi-thread program, and warn users if so.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7167
https://github.com/root-project/root/issues/7167:315,Safety,detect,detect,315,"`fork()`-ing a multi-thread program typically ends up badly. In ROOT, TBB spawns threads when RTaskArena is constructed, and Cocoa spawns threads, on Mac, when graphics are activated. We would like to employ a similar mechanism to what is used to loop over threads to print their stacktraces on a crash in order to detect whether `TTreeProcessorMP::Process` is called from a multi-thread program, and warn users if so.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7167
https://github.com/root-project/root/issues/7169:1630,Availability,error,error-for-selection-on-string-branch-in-filter-method,1630,"licitMT(). infileName = ""Zee_Sh221-0.root"" ; treeName = ""Nominal"" ; cutString = ""sample==\""Zbl\"""" ; distName = ""MET"" ; #weightName = ""EventWeight"" ; binning = [25,0,500]. histName = ""h_{}"".format(distName). print(""infileName = {}"".format(infileName)); print(""treeName = {}"".format(treeName)); print(""cutString = {}"".format(cutString)) . infile = RT.TFile.Open(infileName); dataframe = RT.RDataFrame(treeName, infile). histmodel = RT.RDF.TH1DModel(histName, histName, binning[0], binning[1], binning[2]). hist = dataframe.Filter(cutString).Histo1D(histmodel, distName) ; print(""-----""); print(""hist.GetEntries() = {}"".format(hist.GetEntries())); print(""hist.GetSumOfWeights()= {}"".format(hist.GetSumOfWeights())); print(""-----""); ```; I attached the test file on the ROOT forum (which only contains 3 entries on purpose); Please read the following strange observations that we made about it which to us do not make sense ; https://root-forum.cern.ch/t/rdataframe-and-createpoxy-ttreereadervalue-error-for-selection-on-string-branch-in-filter-method/43488. But I get the error; ```; Error in <TTreeReaderValueBase::CreateProxy()>: The branch sample contains data of type string. It cannot be accessed by a TTreeReaderValue<string>; ```; With bigger files I get many times this error and the number of entries and integral of the histogram hist is 0 while it should not be . Since for the current file doing a scan of the tree I have:; ```; root -l Zee_Sh221-0.root ; root [0] ; Attaching file Zee_Sh221-0.root as _file0...; (TFile *) 0x4418460; root [1] Nominal->Scan(""sample:MET""); ************************************; * Row * sample * MET *; ************************************; * 0 * Zl * 158.14303 *; * 1 * Zbl * 180.14964 *; * 2 * Zbl * 253.89321 *; ************************************; ```; This error only occurs when the selection in Filter function includes a branch of type string.; If I have a selection only on double, float and so on without string branch everything is fine. Would you ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7169
https://github.com/root-project/root/issues/7169:1705,Availability,error,error,1705,""" ; #weightName = ""EventWeight"" ; binning = [25,0,500]. histName = ""h_{}"".format(distName). print(""infileName = {}"".format(infileName)); print(""treeName = {}"".format(treeName)); print(""cutString = {}"".format(cutString)) . infile = RT.TFile.Open(infileName); dataframe = RT.RDataFrame(treeName, infile). histmodel = RT.RDF.TH1DModel(histName, histName, binning[0], binning[1], binning[2]). hist = dataframe.Filter(cutString).Histo1D(histmodel, distName) ; print(""-----""); print(""hist.GetEntries() = {}"".format(hist.GetEntries())); print(""hist.GetSumOfWeights()= {}"".format(hist.GetSumOfWeights())); print(""-----""); ```; I attached the test file on the ROOT forum (which only contains 3 entries on purpose); Please read the following strange observations that we made about it which to us do not make sense ; https://root-forum.cern.ch/t/rdataframe-and-createpoxy-ttreereadervalue-error-for-selection-on-string-branch-in-filter-method/43488. But I get the error; ```; Error in <TTreeReaderValueBase::CreateProxy()>: The branch sample contains data of type string. It cannot be accessed by a TTreeReaderValue<string>; ```; With bigger files I get many times this error and the number of entries and integral of the histogram hist is 0 while it should not be . Since for the current file doing a scan of the tree I have:; ```; root -l Zee_Sh221-0.root ; root [0] ; Attaching file Zee_Sh221-0.root as _file0...; (TFile *) 0x4418460; root [1] Nominal->Scan(""sample:MET""); ************************************; * Row * sample * MET *; ************************************; * 0 * Zl * 158.14303 *; * 1 * Zbl * 180.14964 *; * 2 * Zbl * 253.89321 *; ************************************; ```; This error only occurs when the selection in Filter function includes a branch of type string.; If I have a selection only on double, float and so on without string branch everything is fine. Would you know how to solve that ?; I also tried using python3 but same error occurs.; And using the corresponding TTree comm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7169
https://github.com/root-project/root/issues/7169:1717,Availability,Error,Error,1717,""" ; #weightName = ""EventWeight"" ; binning = [25,0,500]. histName = ""h_{}"".format(distName). print(""infileName = {}"".format(infileName)); print(""treeName = {}"".format(treeName)); print(""cutString = {}"".format(cutString)) . infile = RT.TFile.Open(infileName); dataframe = RT.RDataFrame(treeName, infile). histmodel = RT.RDF.TH1DModel(histName, histName, binning[0], binning[1], binning[2]). hist = dataframe.Filter(cutString).Histo1D(histmodel, distName) ; print(""-----""); print(""hist.GetEntries() = {}"".format(hist.GetEntries())); print(""hist.GetSumOfWeights()= {}"".format(hist.GetSumOfWeights())); print(""-----""); ```; I attached the test file on the ROOT forum (which only contains 3 entries on purpose); Please read the following strange observations that we made about it which to us do not make sense ; https://root-forum.cern.ch/t/rdataframe-and-createpoxy-ttreereadervalue-error-for-selection-on-string-branch-in-filter-method/43488. But I get the error; ```; Error in <TTreeReaderValueBase::CreateProxy()>: The branch sample contains data of type string. It cannot be accessed by a TTreeReaderValue<string>; ```; With bigger files I get many times this error and the number of entries and integral of the histogram hist is 0 while it should not be . Since for the current file doing a scan of the tree I have:; ```; root -l Zee_Sh221-0.root ; root [0] ; Attaching file Zee_Sh221-0.root as _file0...; (TFile *) 0x4418460; root [1] Nominal->Scan(""sample:MET""); ************************************; * Row * sample * MET *; ************************************; * 0 * Zl * 158.14303 *; * 1 * Zbl * 180.14964 *; * 2 * Zbl * 253.89321 *; ************************************; ```; This error only occurs when the selection in Filter function includes a branch of type string.; If I have a selection only on double, float and so on without string branch everything is fine. Would you know how to solve that ?; I also tried using python3 but same error occurs.; And using the corresponding TTree comm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7169
https://github.com/root-project/root/issues/7169:1911,Availability,error,error,1911,".format(treeName)); print(""cutString = {}"".format(cutString)) . infile = RT.TFile.Open(infileName); dataframe = RT.RDataFrame(treeName, infile). histmodel = RT.RDF.TH1DModel(histName, histName, binning[0], binning[1], binning[2]). hist = dataframe.Filter(cutString).Histo1D(histmodel, distName) ; print(""-----""); print(""hist.GetEntries() = {}"".format(hist.GetEntries())); print(""hist.GetSumOfWeights()= {}"".format(hist.GetSumOfWeights())); print(""-----""); ```; I attached the test file on the ROOT forum (which only contains 3 entries on purpose); Please read the following strange observations that we made about it which to us do not make sense ; https://root-forum.cern.ch/t/rdataframe-and-createpoxy-ttreereadervalue-error-for-selection-on-string-branch-in-filter-method/43488. But I get the error; ```; Error in <TTreeReaderValueBase::CreateProxy()>: The branch sample contains data of type string. It cannot be accessed by a TTreeReaderValue<string>; ```; With bigger files I get many times this error and the number of entries and integral of the histogram hist is 0 while it should not be . Since for the current file doing a scan of the tree I have:; ```; root -l Zee_Sh221-0.root ; root [0] ; Attaching file Zee_Sh221-0.root as _file0...; (TFile *) 0x4418460; root [1] Nominal->Scan(""sample:MET""); ************************************; * Row * sample * MET *; ************************************; * 0 * Zl * 158.14303 *; * 1 * Zbl * 180.14964 *; * 2 * Zbl * 253.89321 *; ************************************; ```; This error only occurs when the selection in Filter function includes a branch of type string.; If I have a selection only on double, float and so on without string branch everything is fine. Would you know how to solve that ?; I also tried using python3 but same error occurs.; And using the corresponding TTree command works so it does not comes from the root file:; ```; root -l Zee_Sh221-0.root; root [0] ; Attaching file Zee_Sh221-0.root as _file0...; root [1] TTree *tre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7169
https://github.com/root-project/root/issues/7169:2439,Availability,error,error,2439," binning[0], binning[1], binning[2]). hist = dataframe.Filter(cutString).Histo1D(histmodel, distName) ; print(""-----""); print(""hist.GetEntries() = {}"".format(hist.GetEntries())); print(""hist.GetSumOfWeights()= {}"".format(hist.GetSumOfWeights())); print(""-----""); ```; I attached the test file on the ROOT forum (which only contains 3 entries on purpose); Please read the following strange observations that we made about it which to us do not make sense ; https://root-forum.cern.ch/t/rdataframe-and-createpoxy-ttreereadervalue-error-for-selection-on-string-branch-in-filter-method/43488. But I get the error; ```; Error in <TTreeReaderValueBase::CreateProxy()>: The branch sample contains data of type string. It cannot be accessed by a TTreeReaderValue<string>; ```; With bigger files I get many times this error and the number of entries and integral of the histogram hist is 0 while it should not be . Since for the current file doing a scan of the tree I have:; ```; root -l Zee_Sh221-0.root ; root [0] ; Attaching file Zee_Sh221-0.root as _file0...; (TFile *) 0x4418460; root [1] Nominal->Scan(""sample:MET""); ************************************; * Row * sample * MET *; ************************************; * 0 * Zl * 158.14303 *; * 1 * Zbl * 180.14964 *; * 2 * Zbl * 253.89321 *; ************************************; ```; This error only occurs when the selection in Filter function includes a branch of type string.; If I have a selection only on double, float and so on without string branch everything is fine. Would you know how to solve that ?; I also tried using python3 but same error occurs.; And using the corresponding TTree command works so it does not comes from the root file:; ```; root -l Zee_Sh221-0.root; root [0] ; Attaching file Zee_Sh221-0.root as _file0...; root [1] TTree *tree = (TTree*) _file0->Get(""Nominal"") ; root [2] tree->Draw(""MET>>h_MET(25,0,500)"", ""sample==\""Zbl\""""); Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1; (long long) 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7169
https://github.com/root-project/root/issues/7169:2698,Availability,error,error,2698," binning[0], binning[1], binning[2]). hist = dataframe.Filter(cutString).Histo1D(histmodel, distName) ; print(""-----""); print(""hist.GetEntries() = {}"".format(hist.GetEntries())); print(""hist.GetSumOfWeights()= {}"".format(hist.GetSumOfWeights())); print(""-----""); ```; I attached the test file on the ROOT forum (which only contains 3 entries on purpose); Please read the following strange observations that we made about it which to us do not make sense ; https://root-forum.cern.ch/t/rdataframe-and-createpoxy-ttreereadervalue-error-for-selection-on-string-branch-in-filter-method/43488. But I get the error; ```; Error in <TTreeReaderValueBase::CreateProxy()>: The branch sample contains data of type string. It cannot be accessed by a TTreeReaderValue<string>; ```; With bigger files I get many times this error and the number of entries and integral of the histogram hist is 0 while it should not be . Since for the current file doing a scan of the tree I have:; ```; root -l Zee_Sh221-0.root ; root [0] ; Attaching file Zee_Sh221-0.root as _file0...; (TFile *) 0x4418460; root [1] Nominal->Scan(""sample:MET""); ************************************; * Row * sample * MET *; ************************************; * 0 * Zl * 158.14303 *; * 1 * Zbl * 180.14964 *; * 2 * Zbl * 253.89321 *; ************************************; ```; This error only occurs when the selection in Filter function includes a branch of type string.; If I have a selection only on double, float and so on without string branch everything is fine. Would you know how to solve that ?; I also tried using python3 but same error occurs.; And using the corresponding TTree command works so it does not comes from the root file:; ```; root -l Zee_Sh221-0.root; root [0] ; Attaching file Zee_Sh221-0.root as _file0...; root [1] TTree *tree = (TTree*) _file0->Get(""Nominal"") ; root [2] tree->Draw(""MET>>h_MET(25,0,500)"", ""sample==\""Zbl\""""); Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1; (long long) 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7169
https://github.com/root-project/root/issues/7169:474,Deployability,release,releases,474,"Hi, ; I create this issue to report a bug, that was also observed by @eguiraud, ; with ROOT version 6.22.06. I am trying to use the RDataFrame to produce histograms running on root files.; With the following code; ```python; import ROOT as RT ; """"""; # setupATLAS and ROOT 6.22.06 ; export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase; alias setupATLAS='source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh'; setupATLAS; . /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.22.06/x86_64-centos7-gcc48-opt/bin/thisroot.sh. # Execute python script; python2 dataframe_vs_tree.py; """"""; RT.gROOT.SetBatch(True) ; RT.EnableImplicitMT(). infileName = ""Zee_Sh221-0.root"" ; treeName = ""Nominal"" ; cutString = ""sample==\""Zbl\"""" ; distName = ""MET"" ; #weightName = ""EventWeight"" ; binning = [25,0,500]. histName = ""h_{}"".format(distName). print(""infileName = {}"".format(infileName)); print(""treeName = {}"".format(treeName)); print(""cutString = {}"".format(cutString)) . infile = RT.TFile.Open(infileName); dataframe = RT.RDataFrame(treeName, infile). histmodel = RT.RDF.TH1DModel(histName, histName, binning[0], binning[1], binning[2]). hist = dataframe.Filter(cutString).Histo1D(histmodel, distName) ; print(""-----""); print(""hist.GetEntries() = {}"".format(hist.GetEntries())); print(""hist.GetSumOfWeights()= {}"".format(hist.GetSumOfWeights())); print(""-----""); ```; I attached the test file on the ROOT forum (which only contains 3 entries on purpose); Please read the following strange observations that we made about it which to us do not make sense ; https://root-forum.cern.ch/t/rdataframe-and-createpoxy-ttreereadervalue-error-for-selection-on-string-branch-in-filter-method/43488. But I get the error; ```; Error in <TTreeReaderValueBase::CreateProxy()>: The branch sample contains data of type string. It cannot be accessed by a TTreeReaderValue<string>; ```; With bigger files I get many times this error and the number of entries and integral of the histogram hist is 0 while it should no",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7169
https://github.com/root-project/root/issues/7169:1826,Security,access,accessed,1826,".format(treeName)); print(""cutString = {}"".format(cutString)) . infile = RT.TFile.Open(infileName); dataframe = RT.RDataFrame(treeName, infile). histmodel = RT.RDF.TH1DModel(histName, histName, binning[0], binning[1], binning[2]). hist = dataframe.Filter(cutString).Histo1D(histmodel, distName) ; print(""-----""); print(""hist.GetEntries() = {}"".format(hist.GetEntries())); print(""hist.GetSumOfWeights()= {}"".format(hist.GetSumOfWeights())); print(""-----""); ```; I attached the test file on the ROOT forum (which only contains 3 entries on purpose); Please read the following strange observations that we made about it which to us do not make sense ; https://root-forum.cern.ch/t/rdataframe-and-createpoxy-ttreereadervalue-error-for-selection-on-string-branch-in-filter-method/43488. But I get the error; ```; Error in <TTreeReaderValueBase::CreateProxy()>: The branch sample contains data of type string. It cannot be accessed by a TTreeReaderValue<string>; ```; With bigger files I get many times this error and the number of entries and integral of the histogram hist is 0 while it should not be . Since for the current file doing a scan of the tree I have:; ```; root -l Zee_Sh221-0.root ; root [0] ; Attaching file Zee_Sh221-0.root as _file0...; (TFile *) 0x4418460; root [1] Nominal->Scan(""sample:MET""); ************************************; * Row * sample * MET *; ************************************; * 0 * Zl * 158.14303 *; * 1 * Zbl * 180.14964 *; * 2 * Zbl * 253.89321 *; ************************************; ```; This error only occurs when the selection in Filter function includes a branch of type string.; If I have a selection only on double, float and so on without string branch everything is fine. Would you know how to solve that ?; I also tried using python3 but same error occurs.; And using the corresponding TTree command works so it does not comes from the root file:; ```; root -l Zee_Sh221-0.root; root [0] ; Attaching file Zee_Sh221-0.root as _file0...; root [1] TTree *tre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7169
https://github.com/root-project/root/issues/7169:1385,Testability,test,test,1385,"s/sft.cern.ch/lcg/app/releases/ROOT/6.22.06/x86_64-centos7-gcc48-opt/bin/thisroot.sh. # Execute python script; python2 dataframe_vs_tree.py; """"""; RT.gROOT.SetBatch(True) ; RT.EnableImplicitMT(). infileName = ""Zee_Sh221-0.root"" ; treeName = ""Nominal"" ; cutString = ""sample==\""Zbl\"""" ; distName = ""MET"" ; #weightName = ""EventWeight"" ; binning = [25,0,500]. histName = ""h_{}"".format(distName). print(""infileName = {}"".format(infileName)); print(""treeName = {}"".format(treeName)); print(""cutString = {}"".format(cutString)) . infile = RT.TFile.Open(infileName); dataframe = RT.RDataFrame(treeName, infile). histmodel = RT.RDF.TH1DModel(histName, histName, binning[0], binning[1], binning[2]). hist = dataframe.Filter(cutString).Histo1D(histmodel, distName) ; print(""-----""); print(""hist.GetEntries() = {}"".format(hist.GetEntries())); print(""hist.GetSumOfWeights()= {}"".format(hist.GetSumOfWeights())); print(""-----""); ```; I attached the test file on the ROOT forum (which only contains 3 entries on purpose); Please read the following strange observations that we made about it which to us do not make sense ; https://root-forum.cern.ch/t/rdataframe-and-createpoxy-ttreereadervalue-error-for-selection-on-string-branch-in-filter-method/43488. But I get the error; ```; Error in <TTreeReaderValueBase::CreateProxy()>: The branch sample contains data of type string. It cannot be accessed by a TTreeReaderValue<string>; ```; With bigger files I get many times this error and the number of entries and integral of the histogram hist is 0 while it should not be . Since for the current file doing a scan of the tree I have:; ```; root -l Zee_Sh221-0.root ; root [0] ; Attaching file Zee_Sh221-0.root as _file0...; (TFile *) 0x4418460; root [1] Nominal->Scan(""sample:MET""); ************************************; * Row * sample * MET *; ************************************; * 0 * Zl * 158.14303 *; * 1 * Zbl * 180.14964 *; * 2 * Zbl * 253.89321 *; ************************************; ```; This error only occ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7169
https://github.com/root-project/root/pull/7170:11,Usability,simpl,simple,11,Add a very simple circular buffer allowing to automatically compute and display the mean of last N values when enabling the mean mark with `EnableMeanMark()`. The size of the buffer can be changed with `SetBufferSize()`. Thanks to @ferdymercury for the suggestion,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7170
https://github.com/root-project/root/pull/7173:36,Modifiability,plugin,plugins,36,"Provide TBrowserImp, register it in plugins; To enable one should add following entry in rootrc file:. Browser.Name: ROOT::Experimental::RWebBrowserImp. Modernize TBrowserImp sources",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7173
https://github.com/root-project/root/issues/7176:176,Deployability,patch,patch,176,When testing #6385 I've had issues with the linking order of the LLVM libs due to CMake not knowing about their dependencies. I don't have a log or reproducer to hand but this patch was enough to fix it:. https://github.com/chrisburr/root-feedstock/blob/4dff10152d66bd0e873b60150e72cf0f9bfa8c19/recipe/patches/0001-Use-find_package-for-llvm-clang.patch. The `get_directory_property` call was also an issue. That patch contains the values copied from a build with `builtin_llvm=ON`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7176
https://github.com/root-project/root/issues/7176:302,Deployability,patch,patches,302,When testing #6385 I've had issues with the linking order of the LLVM libs due to CMake not knowing about their dependencies. I don't have a log or reproducer to hand but this patch was enough to fix it:. https://github.com/chrisburr/root-feedstock/blob/4dff10152d66bd0e873b60150e72cf0f9bfa8c19/recipe/patches/0001-Use-find_package-for-llvm-clang.patch. The `get_directory_property` call was also an issue. That patch contains the values copied from a build with `builtin_llvm=ON`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7176
https://github.com/root-project/root/issues/7176:347,Deployability,patch,patch,347,When testing #6385 I've had issues with the linking order of the LLVM libs due to CMake not knowing about their dependencies. I don't have a log or reproducer to hand but this patch was enough to fix it:. https://github.com/chrisburr/root-feedstock/blob/4dff10152d66bd0e873b60150e72cf0f9bfa8c19/recipe/patches/0001-Use-find_package-for-llvm-clang.patch. The `get_directory_property` call was also an issue. That patch contains the values copied from a build with `builtin_llvm=ON`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7176
https://github.com/root-project/root/issues/7176:412,Deployability,patch,patch,412,When testing #6385 I've had issues with the linking order of the LLVM libs due to CMake not knowing about their dependencies. I don't have a log or reproducer to hand but this patch was enough to fix it:. https://github.com/chrisburr/root-feedstock/blob/4dff10152d66bd0e873b60150e72cf0f9bfa8c19/recipe/patches/0001-Use-find_package-for-llvm-clang.patch. The `get_directory_property` call was also an issue. That patch contains the values copied from a build with `builtin_llvm=ON`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7176
https://github.com/root-project/root/issues/7176:112,Integrability,depend,dependencies,112,When testing #6385 I've had issues with the linking order of the LLVM libs due to CMake not knowing about their dependencies. I don't have a log or reproducer to hand but this patch was enough to fix it:. https://github.com/chrisburr/root-feedstock/blob/4dff10152d66bd0e873b60150e72cf0f9bfa8c19/recipe/patches/0001-Use-find_package-for-llvm-clang.patch. The `get_directory_property` call was also an issue. That patch contains the values copied from a build with `builtin_llvm=ON`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7176
https://github.com/root-project/root/issues/7176:5,Testability,test,testing,5,When testing #6385 I've had issues with the linking order of the LLVM libs due to CMake not knowing about their dependencies. I don't have a log or reproducer to hand but this patch was enough to fix it:. https://github.com/chrisburr/root-feedstock/blob/4dff10152d66bd0e873b60150e72cf0f9bfa8c19/recipe/patches/0001-Use-find_package-for-llvm-clang.patch. The `get_directory_property` call was also an issue. That patch contains the values copied from a build with `builtin_llvm=ON`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7176
https://github.com/root-project/root/issues/7176:141,Testability,log,log,141,When testing #6385 I've had issues with the linking order of the LLVM libs due to CMake not knowing about their dependencies. I don't have a log or reproducer to hand but this patch was enough to fix it:. https://github.com/chrisburr/root-feedstock/blob/4dff10152d66bd0e873b60150e72cf0f9bfa8c19/recipe/patches/0001-Use-find_package-for-llvm-clang.patch. The `get_directory_property` call was also an issue. That patch contains the values copied from a build with `builtin_llvm=ON`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7176
https://github.com/root-project/root/pull/7178:250,Modifiability,variab,variables,250,"Do not skip the condition to avoid to build a normalization ratio integrals for the composite terms of the conditional RooProdPdf. The code which was avoid to create the ratio of integrals when the provided range is equal to the default range of the variables was skipped. Not clear why, it is now re-added. This seems to fix the performance issue observed in ; https://root-forum.cern.ch/t/bug-range-command-enforces-numerical-integral/43350.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7178
https://github.com/root-project/root/pull/7178:330,Performance,perform,performance,330,"Do not skip the condition to avoid to build a normalization ratio integrals for the composite terms of the conditional RooProdPdf. The code which was avoid to create the ratio of integrals when the provided range is equal to the default range of the variables was skipped. Not clear why, it is now re-added. This seems to fix the performance issue observed in ; https://root-forum.cern.ch/t/bug-range-command-enforces-numerical-integral/43350.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7178
https://github.com/root-project/root/pull/7178:29,Safety,avoid,avoid,29,"Do not skip the condition to avoid to build a normalization ratio integrals for the composite terms of the conditional RooProdPdf. The code which was avoid to create the ratio of integrals when the provided range is equal to the default range of the variables was skipped. Not clear why, it is now re-added. This seems to fix the performance issue observed in ; https://root-forum.cern.ch/t/bug-range-command-enforces-numerical-integral/43350.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7178
https://github.com/root-project/root/pull/7178:150,Safety,avoid,avoid,150,"Do not skip the condition to avoid to build a normalization ratio integrals for the composite terms of the conditional RooProdPdf. The code which was avoid to create the ratio of integrals when the provided range is equal to the default range of the variables was skipped. Not clear why, it is now re-added. This seems to fix the performance issue observed in ; https://root-forum.cern.ch/t/bug-range-command-enforces-numerical-integral/43350.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7178
https://github.com/root-project/root/pull/7178:277,Usability,clear,clear,277,"Do not skip the condition to avoid to build a normalization ratio integrals for the composite terms of the conditional RooProdPdf. The code which was avoid to create the ratio of integrals when the provided range is equal to the default range of the variables was skipped. Not clear why, it is now re-added. This seems to fix the performance issue observed in ; https://root-forum.cern.ch/t/bug-range-command-enforces-numerical-integral/43350.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7178
https://github.com/root-project/root/issues/7179:1601,Modifiability,inherit,inheritance,1601,"Apologies for making this an annoying bug report :cry:, ; but I unfortunately, so far, wasn't able to create a small self-contained reproducer that triggers the bug. . But with LCG_99 and the following snippet I can at least show the problem. ; ```py; import cppyy; cppyy.cppdef(r""""""; using vec = SmartRefVector<DataObject>;; using ref = SmartRef<DataObject>;; """"""). vec = cppyy.gbl.vec(); ref = cppyy.gbl.ref(); vec.push_back(ref); vec.size(); print(vec[0]); print(vec.at(0)); ```. Running:; ```shell; source /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc10-opt/setup.sh; python test.py; ```; will print: ; ```; <cppyy.gbl.SmartRefVector<DataObject> object at 0x83e0f00>; <cppyy.gbl.SmartRef<DataObject> object at 0xcf6b7c0>; ```. If you try the same on an older ROOT version e.g. with LCG_97a (`source /cvmfs/sft.cern.ch/lcg/views/LCG_97a/x86_64-centos7-gcc9-opt/setup.sh`), this will print:; ```; <ROOT.SmartRef<DataObject> object at 0xaac7ac0>; <ROOT.SmartRef<DataObject> object at 0xaac7ac0>; ```. So in ROOT 6.22 the `operator[]` in python somehow doesn't work correctly for this class.; Now as I said, I wish I could have provided an easier reproducer, and I'll have another go at it tomorrow, but for now this is the best I could come up with. ; The `SmartRefVector` is part of the `Gaudi` project and can be found [here](https://gitlab.cern.ch/gaudi/Gaudi/-/blob/master/GaudiKernel/include/GaudiKernel/SmartRefVector.h). ; I've tried creating a simplified version of the `SmartRefVector`, but that didn't exhibit the same problem so it's apparently not as simple as blaming it on the inheritance on `std::vector` which of course isn't ideal... :see_no_evil:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7179
https://github.com/root-project/root/issues/7179:588,Testability,test,test,588,"Apologies for making this an annoying bug report :cry:, ; but I unfortunately, so far, wasn't able to create a small self-contained reproducer that triggers the bug. . But with LCG_99 and the following snippet I can at least show the problem. ; ```py; import cppyy; cppyy.cppdef(r""""""; using vec = SmartRefVector<DataObject>;; using ref = SmartRef<DataObject>;; """"""). vec = cppyy.gbl.vec(); ref = cppyy.gbl.ref(); vec.push_back(ref); vec.size(); print(vec[0]); print(vec.at(0)); ```. Running:; ```shell; source /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc10-opt/setup.sh; python test.py; ```; will print: ; ```; <cppyy.gbl.SmartRefVector<DataObject> object at 0x83e0f00>; <cppyy.gbl.SmartRef<DataObject> object at 0xcf6b7c0>; ```. If you try the same on an older ROOT version e.g. with LCG_97a (`source /cvmfs/sft.cern.ch/lcg/views/LCG_97a/x86_64-centos7-gcc9-opt/setup.sh`), this will print:; ```; <ROOT.SmartRef<DataObject> object at 0xaac7ac0>; <ROOT.SmartRef<DataObject> object at 0xaac7ac0>; ```. So in ROOT 6.22 the `operator[]` in python somehow doesn't work correctly for this class.; Now as I said, I wish I could have provided an easier reproducer, and I'll have another go at it tomorrow, but for now this is the best I could come up with. ; The `SmartRefVector` is part of the `Gaudi` project and can be found [here](https://gitlab.cern.ch/gaudi/Gaudi/-/blob/master/GaudiKernel/include/GaudiKernel/SmartRefVector.h). ; I've tried creating a simplified version of the `SmartRefVector`, but that didn't exhibit the same problem so it's apparently not as simple as blaming it on the inheritance on `std::vector` which of course isn't ideal... :see_no_evil:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7179
https://github.com/root-project/root/issues/7179:1462,Usability,simpl,simplified,1462,"Apologies for making this an annoying bug report :cry:, ; but I unfortunately, so far, wasn't able to create a small self-contained reproducer that triggers the bug. . But with LCG_99 and the following snippet I can at least show the problem. ; ```py; import cppyy; cppyy.cppdef(r""""""; using vec = SmartRefVector<DataObject>;; using ref = SmartRef<DataObject>;; """"""). vec = cppyy.gbl.vec(); ref = cppyy.gbl.ref(); vec.push_back(ref); vec.size(); print(vec[0]); print(vec.at(0)); ```. Running:; ```shell; source /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc10-opt/setup.sh; python test.py; ```; will print: ; ```; <cppyy.gbl.SmartRefVector<DataObject> object at 0x83e0f00>; <cppyy.gbl.SmartRef<DataObject> object at 0xcf6b7c0>; ```. If you try the same on an older ROOT version e.g. with LCG_97a (`source /cvmfs/sft.cern.ch/lcg/views/LCG_97a/x86_64-centos7-gcc9-opt/setup.sh`), this will print:; ```; <ROOT.SmartRef<DataObject> object at 0xaac7ac0>; <ROOT.SmartRef<DataObject> object at 0xaac7ac0>; ```. So in ROOT 6.22 the `operator[]` in python somehow doesn't work correctly for this class.; Now as I said, I wish I could have provided an easier reproducer, and I'll have another go at it tomorrow, but for now this is the best I could come up with. ; The `SmartRefVector` is part of the `Gaudi` project and can be found [here](https://gitlab.cern.ch/gaudi/Gaudi/-/blob/master/GaudiKernel/include/GaudiKernel/SmartRefVector.h). ; I've tried creating a simplified version of the `SmartRefVector`, but that didn't exhibit the same problem so it's apparently not as simple as blaming it on the inheritance on `std::vector` which of course isn't ideal... :see_no_evil:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7179
https://github.com/root-project/root/issues/7179:1573,Usability,simpl,simple,1573,"Apologies for making this an annoying bug report :cry:, ; but I unfortunately, so far, wasn't able to create a small self-contained reproducer that triggers the bug. . But with LCG_99 and the following snippet I can at least show the problem. ; ```py; import cppyy; cppyy.cppdef(r""""""; using vec = SmartRefVector<DataObject>;; using ref = SmartRef<DataObject>;; """"""). vec = cppyy.gbl.vec(); ref = cppyy.gbl.ref(); vec.push_back(ref); vec.size(); print(vec[0]); print(vec.at(0)); ```. Running:; ```shell; source /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc10-opt/setup.sh; python test.py; ```; will print: ; ```; <cppyy.gbl.SmartRefVector<DataObject> object at 0x83e0f00>; <cppyy.gbl.SmartRef<DataObject> object at 0xcf6b7c0>; ```. If you try the same on an older ROOT version e.g. with LCG_97a (`source /cvmfs/sft.cern.ch/lcg/views/LCG_97a/x86_64-centos7-gcc9-opt/setup.sh`), this will print:; ```; <ROOT.SmartRef<DataObject> object at 0xaac7ac0>; <ROOT.SmartRef<DataObject> object at 0xaac7ac0>; ```. So in ROOT 6.22 the `operator[]` in python somehow doesn't work correctly for this class.; Now as I said, I wish I could have provided an easier reproducer, and I'll have another go at it tomorrow, but for now this is the best I could come up with. ; The `SmartRefVector` is part of the `Gaudi` project and can be found [here](https://gitlab.cern.ch/gaudi/Gaudi/-/blob/master/GaudiKernel/include/GaudiKernel/SmartRefVector.h). ; I've tried creating a simplified version of the `SmartRefVector`, but that didn't exhibit the same problem so it's apparently not as simple as blaming it on the inheritance on `std::vector` which of course isn't ideal... :see_no_evil:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7179
https://github.com/root-project/root/issues/7180:365,Availability,Down,Down,365,"### Explain what you would like to see improved; The TGCommandLinePlugin is great for external CMake/C++ applications that use some ROOT classes / TApplication and GUI classes TGFrame, where you want to have some interactive debugging options via Cling. To make it even more user-friendly, it would be nice if the following things were improved:; - Pressing Up and Down Arrow Keys changes the selected command in the ComboBox.; - Pressing Tab Key propagates to the command line to give command suggestions / autocompletion, as it happens in the real ROOT terminal; - Typed commands are added to the ROOT history file, so that the next time . ### Optional: share how it could be improved; Changes in TGTextEntry:; ```; virtual void UpDownArrowsPressed(Int_t); //*SIGNAL*. case kKey_Down:; CursorOutDown();; UpDownArrowsPressed(1);; break;; case kKey_Up:; CursorOutUp();; UpDownArrowsPressed(0);; break;; ```. Changes in TGCommandLinePlugin; ```; fCommand->Connect(""TabPressed()"", ""TGCommandPlugin"", this,; ""HandleTab()"");; fCommand->Connect(""UpDownArrowsPressed()"", ""TGCommandPlugin"", this,; ""HandleArrows()"");. void TGCommandPlugin::HandleTab(); {; //redirect CLI suggestions back to terminal; }. void TGCommandPlugin::HandleArrows(); {; //Scroll one up or down in combobox; }. if (app->InheritsFrom(""TRint"") || fForceFlag ) // accept also if a user set an fForceFlat explicitly?; Gl_histadd((char *)string);; ```. ### To Reproduce; - Open tutorials/gui/guiWithCINT.C; - Try to use up and down arrow keys to scroll between line commands. ### Setup; 1. ROOT 6.23/01; 2. Linux; 3. Self-built",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7180
https://github.com/root-project/root/issues/7180:1257,Availability,down,down,1257,"### Explain what you would like to see improved; The TGCommandLinePlugin is great for external CMake/C++ applications that use some ROOT classes / TApplication and GUI classes TGFrame, where you want to have some interactive debugging options via Cling. To make it even more user-friendly, it would be nice if the following things were improved:; - Pressing Up and Down Arrow Keys changes the selected command in the ComboBox.; - Pressing Tab Key propagates to the command line to give command suggestions / autocompletion, as it happens in the real ROOT terminal; - Typed commands are added to the ROOT history file, so that the next time . ### Optional: share how it could be improved; Changes in TGTextEntry:; ```; virtual void UpDownArrowsPressed(Int_t); //*SIGNAL*. case kKey_Down:; CursorOutDown();; UpDownArrowsPressed(1);; break;; case kKey_Up:; CursorOutUp();; UpDownArrowsPressed(0);; break;; ```. Changes in TGCommandLinePlugin; ```; fCommand->Connect(""TabPressed()"", ""TGCommandPlugin"", this,; ""HandleTab()"");; fCommand->Connect(""UpDownArrowsPressed()"", ""TGCommandPlugin"", this,; ""HandleArrows()"");. void TGCommandPlugin::HandleTab(); {; //redirect CLI suggestions back to terminal; }. void TGCommandPlugin::HandleArrows(); {; //Scroll one up or down in combobox; }. if (app->InheritsFrom(""TRint"") || fForceFlag ) // accept also if a user set an fForceFlat explicitly?; Gl_histadd((char *)string);; ```. ### To Reproduce; - Open tutorials/gui/guiWithCINT.C; - Try to use up and down arrow keys to scroll between line commands. ### Setup; 1. ROOT 6.23/01; 2. Linux; 3. Self-built",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7180
https://github.com/root-project/root/issues/7180:1489,Availability,down,down,1489,"### Explain what you would like to see improved; The TGCommandLinePlugin is great for external CMake/C++ applications that use some ROOT classes / TApplication and GUI classes TGFrame, where you want to have some interactive debugging options via Cling. To make it even more user-friendly, it would be nice if the following things were improved:; - Pressing Up and Down Arrow Keys changes the selected command in the ComboBox.; - Pressing Tab Key propagates to the command line to give command suggestions / autocompletion, as it happens in the real ROOT terminal; - Typed commands are added to the ROOT history file, so that the next time . ### Optional: share how it could be improved; Changes in TGTextEntry:; ```; virtual void UpDownArrowsPressed(Int_t); //*SIGNAL*. case kKey_Down:; CursorOutDown();; UpDownArrowsPressed(1);; break;; case kKey_Up:; CursorOutUp();; UpDownArrowsPressed(0);; break;; ```. Changes in TGCommandLinePlugin; ```; fCommand->Connect(""TabPressed()"", ""TGCommandPlugin"", this,; ""HandleTab()"");; fCommand->Connect(""UpDownArrowsPressed()"", ""TGCommandPlugin"", this,; ""HandleArrows()"");. void TGCommandPlugin::HandleTab(); {; //redirect CLI suggestions back to terminal; }. void TGCommandPlugin::HandleArrows(); {; //Scroll one up or down in combobox; }. if (app->InheritsFrom(""TRint"") || fForceFlag ) // accept also if a user set an fForceFlat explicitly?; Gl_histadd((char *)string);; ```. ### To Reproduce; - Open tutorials/gui/guiWithCINT.C; - Try to use up and down arrow keys to scroll between line commands. ### Setup; 1. ROOT 6.23/01; 2. Linux; 3. Self-built",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7180
https://github.com/root-project/root/issues/7180:1287,Modifiability,Inherit,InheritsFrom,1287,"### Explain what you would like to see improved; The TGCommandLinePlugin is great for external CMake/C++ applications that use some ROOT classes / TApplication and GUI classes TGFrame, where you want to have some interactive debugging options via Cling. To make it even more user-friendly, it would be nice if the following things were improved:; - Pressing Up and Down Arrow Keys changes the selected command in the ComboBox.; - Pressing Tab Key propagates to the command line to give command suggestions / autocompletion, as it happens in the real ROOT terminal; - Typed commands are added to the ROOT history file, so that the next time . ### Optional: share how it could be improved; Changes in TGTextEntry:; ```; virtual void UpDownArrowsPressed(Int_t); //*SIGNAL*. case kKey_Down:; CursorOutDown();; UpDownArrowsPressed(1);; break;; case kKey_Up:; CursorOutUp();; UpDownArrowsPressed(0);; break;; ```. Changes in TGCommandLinePlugin; ```; fCommand->Connect(""TabPressed()"", ""TGCommandPlugin"", this,; ""HandleTab()"");; fCommand->Connect(""UpDownArrowsPressed()"", ""TGCommandPlugin"", this,; ""HandleArrows()"");. void TGCommandPlugin::HandleTab(); {; //redirect CLI suggestions back to terminal; }. void TGCommandPlugin::HandleArrows(); {; //Scroll one up or down in combobox; }. if (app->InheritsFrom(""TRint"") || fForceFlag ) // accept also if a user set an fForceFlat explicitly?; Gl_histadd((char *)string);; ```. ### To Reproduce; - Open tutorials/gui/guiWithCINT.C; - Try to use up and down arrow keys to scroll between line commands. ### Setup; 1. ROOT 6.23/01; 2. Linux; 3. Self-built",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7180
https://github.com/root-project/root/issues/7180:275,Usability,user-friendly,user-friendly,275,"### Explain what you would like to see improved; The TGCommandLinePlugin is great for external CMake/C++ applications that use some ROOT classes / TApplication and GUI classes TGFrame, where you want to have some interactive debugging options via Cling. To make it even more user-friendly, it would be nice if the following things were improved:; - Pressing Up and Down Arrow Keys changes the selected command in the ComboBox.; - Pressing Tab Key propagates to the command line to give command suggestions / autocompletion, as it happens in the real ROOT terminal; - Typed commands are added to the ROOT history file, so that the next time . ### Optional: share how it could be improved; Changes in TGTextEntry:; ```; virtual void UpDownArrowsPressed(Int_t); //*SIGNAL*. case kKey_Down:; CursorOutDown();; UpDownArrowsPressed(1);; break;; case kKey_Up:; CursorOutUp();; UpDownArrowsPressed(0);; break;; ```. Changes in TGCommandLinePlugin; ```; fCommand->Connect(""TabPressed()"", ""TGCommandPlugin"", this,; ""HandleTab()"");; fCommand->Connect(""UpDownArrowsPressed()"", ""TGCommandPlugin"", this,; ""HandleArrows()"");. void TGCommandPlugin::HandleTab(); {; //redirect CLI suggestions back to terminal; }. void TGCommandPlugin::HandleArrows(); {; //Scroll one up or down in combobox; }. if (app->InheritsFrom(""TRint"") || fForceFlag ) // accept also if a user set an fForceFlat explicitly?; Gl_histadd((char *)string);; ```. ### To Reproduce; - Open tutorials/gui/guiWithCINT.C; - Try to use up and down arrow keys to scroll between line commands. ### Setup; 1. ROOT 6.23/01; 2. Linux; 3. Self-built",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7180
https://github.com/root-project/root/issues/7181:85,Modifiability,variab,variables,85,### Encountered problem; Snapshoting the RDataFrame with friend trees does not store variables of the friends.; This is very unfortunate for skimming multiple friend trees if the skimming time consuming and running it only once and storing results would help. ### Feature that could help; Automatically store friend trees / variables into the output file. ### Current workaround; Defining all branches explicitly in the Snapshot argument is very clumsy. ### Additional context; This was briefly discussed on the forum [here](https://root-forum.cern.ch/t/snapshot-friend-trees-after-filtering/43507),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7181
https://github.com/root-project/root/issues/7181:324,Modifiability,variab,variables,324,### Encountered problem; Snapshoting the RDataFrame with friend trees does not store variables of the friends.; This is very unfortunate for skimming multiple friend trees if the skimming time consuming and running it only once and storing results would help. ### Feature that could help; Automatically store friend trees / variables into the output file. ### Current workaround; Defining all branches explicitly in the Snapshot argument is very clumsy. ### Additional context; This was briefly discussed on the forum [here](https://root-forum.cern.ch/t/snapshot-friend-trees-after-filtering/43507),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7181
https://github.com/root-project/root/issues/7182:266,Testability,test,testParamHistFunc,266,"The range is not used in RooParamHIstFunc::analyticalIntegralWN, see https://root.cern/doc/master/RooParamHistFunc_8cxx_source.html#l00247; as reported in https://root-forum.cern.ch/t/createintegral-giving-wrong-results/43508. . Simple code to reproduce:; ```; void testParamHistFunc() { ; ; RooRealVar x(""x"",""x"",0,10); ; TH1D h1(""h1"",""h1"",20,0,10); ; TF1 f1(""f1"",""gaus""); f1.SetParameters(1,5,1); ; h1.FillRandom(""f1"",1000); ; ; RooDataHist dh(""dh"",""dh"",x,&h1); ; RooParamHistFunc phf(""phf"","""",x,dh); ; phf.Print(""t""); ; x.setRange(""R1"",0,5); ; ; auto ig1n = phf.createIntegral(x,x); ; std::cout << ig1n->getVal() << std::endl; ; auto igr1 = phf.createIntegral(x,x,""R1""); ; std::cout << igr1->getVal() << std::endl; ; ; }",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7182
https://github.com/root-project/root/issues/7182:229,Usability,Simpl,Simple,229,"The range is not used in RooParamHIstFunc::analyticalIntegralWN, see https://root.cern/doc/master/RooParamHistFunc_8cxx_source.html#l00247; as reported in https://root-forum.cern.ch/t/createintegral-giving-wrong-results/43508. . Simple code to reproduce:; ```; void testParamHistFunc() { ; ; RooRealVar x(""x"",""x"",0,10); ; TH1D h1(""h1"",""h1"",20,0,10); ; TF1 f1(""f1"",""gaus""); f1.SetParameters(1,5,1); ; h1.FillRandom(""f1"",1000); ; ; RooDataHist dh(""dh"",""dh"",x,&h1); ; RooParamHistFunc phf(""phf"","""",x,dh); ; phf.Print(""t""); ; x.setRange(""R1"",0,5); ; ; auto ig1n = phf.createIntegral(x,x); ; std::cout << ig1n->getVal() << std::endl; ; auto igr1 = phf.createIntegral(x,x,""R1""); ; std::cout << igr1->getVal() << std::endl; ; ; }",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7182
https://github.com/root-project/root/pull/7183:67,Modifiability,variab,variable,67,Fixes issue #7115. Some characters need to be escaped before using variable names in std::regex; expressions formed in RooFormula::processForumla. Both [ and ] were already considered; this commit adds { and } to the list.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7183
https://github.com/root-project/root/pull/7185:24,Performance,queue,queue,24,"Picking, lights, render-queue/multi-pass rendering, support for most EveElements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7185
https://github.com/root-project/root/issues/7187:2,Deployability,Update,Update,2,"**Update:** See the `TInterpreter::ToString` reproducer at the bottom. As Wim reported privately, the pretty printing feature in PyROOT seems to leak memory. Take the following example. ```python; # reproducer.py; import ROOT; v = ROOT.vector[int](range(10)); while 1:; _ = str(v); ```. And here the output of `valgrind --tool=massif python reproducer.py`:. ```; MB; 389.3^ #; | @@@@@#; | :@@@@@@@@@#; | @@@@@@@@@@@@@@#; | :@@@@@@@@@@@@@@@@@@#; | @::::@@@ @@@@@@@@@@@@@@#; | @@@@@:: :@@@ @@@@@@@@@@@@@@#; | @@:@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@:::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | ::@:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@@@@ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@@@@@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @:@@:@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @::@@@:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | :@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; |::::@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; |:: :@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; |:: :@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; 0 +----------------------------------------------------------------------->Gi; 0 146.4; ```. Here the logfile of the last snapshot:. [massif.log](https://github.com/root-project/root/files/5970579/massif.log). However, the issue can also be reproduced using a compiled program calling into `TInterpreter::ToString`:. ```cpp; #include ""TInterpreter.h""; #include <vector>; #include <string>. #include <iostream>. void rep() {; std::vector<int> x = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};; while (true) {; auto s = gInterpreter->ToString(""vector<int>"", &x);; // std::cout << s << std::endl;; }; }. int main() {; rep();; }; ```. ```bash; g++ rep.cxx $(root-config --libs --cflags) # take care that you don't optimize away the call;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7187
https://github.com/root-project/root/issues/7187:1927,Modifiability,config,config,1927,"xample. ```python; # reproducer.py; import ROOT; v = ROOT.vector[int](range(10)); while 1:; _ = str(v); ```. And here the output of `valgrind --tool=massif python reproducer.py`:. ```; MB; 389.3^ #; | @@@@@#; | :@@@@@@@@@#; | @@@@@@@@@@@@@@#; | :@@@@@@@@@@@@@@@@@@#; | @::::@@@ @@@@@@@@@@@@@@#; | @@@@@:: :@@@ @@@@@@@@@@@@@@#; | @@:@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@:::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | ::@:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@@@@ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@@@@@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @:@@:@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @::@@@:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | :@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; |::::@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; |:: :@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; |:: :@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; 0 +----------------------------------------------------------------------->Gi; 0 146.4; ```. Here the logfile of the last snapshot:. [massif.log](https://github.com/root-project/root/files/5970579/massif.log). However, the issue can also be reproduced using a compiled program calling into `TInterpreter::ToString`:. ```cpp; #include ""TInterpreter.h""; #include <vector>; #include <string>. #include <iostream>. void rep() {; std::vector<int> x = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};; while (true) {; auto s = gInterpreter->ToString(""vector<int>"", &x);; // std::cout << s << std::endl;; }; }. int main() {; rep();; }; ```. ```bash; g++ rep.cxx $(root-config --libs --cflags) # take care that you don't optimize away the call; valgrind --tool=massif ./a.out; ```. Here the massif log from this run:. [massif_clingToString.log](https://github.com/root-project/root/files/5970887/massif_clingToString.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7187
https://github.com/root-project/root/issues/7187:1978,Performance,optimiz,optimize,1978,"xample. ```python; # reproducer.py; import ROOT; v = ROOT.vector[int](range(10)); while 1:; _ = str(v); ```. And here the output of `valgrind --tool=massif python reproducer.py`:. ```; MB; 389.3^ #; | @@@@@#; | :@@@@@@@@@#; | @@@@@@@@@@@@@@#; | :@@@@@@@@@@@@@@@@@@#; | @::::@@@ @@@@@@@@@@@@@@#; | @@@@@:: :@@@ @@@@@@@@@@@@@@#; | @@:@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@:::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | ::@:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@@@@ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@@@@@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @:@@:@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @::@@@:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | :@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; |::::@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; |:: :@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; |:: :@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; 0 +----------------------------------------------------------------------->Gi; 0 146.4; ```. Here the logfile of the last snapshot:. [massif.log](https://github.com/root-project/root/files/5970579/massif.log). However, the issue can also be reproduced using a compiled program calling into `TInterpreter::ToString`:. ```cpp; #include ""TInterpreter.h""; #include <vector>; #include <string>. #include <iostream>. void rep() {; std::vector<int> x = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};; while (true) {; auto s = gInterpreter->ToString(""vector<int>"", &x);; // std::cout << s << std::endl;; }; }. int main() {; rep();; }; ```. ```bash; g++ rep.cxx $(root-config --libs --cflags) # take care that you don't optimize away the call; valgrind --tool=massif ./a.out; ```. Here the massif log from this run:. [massif_clingToString.log](https://github.com/root-project/root/files/5970887/massif_clingToString.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7187
https://github.com/root-project/root/issues/7187:1384,Testability,log,logfile,1384,"xample. ```python; # reproducer.py; import ROOT; v = ROOT.vector[int](range(10)); while 1:; _ = str(v); ```. And here the output of `valgrind --tool=massif python reproducer.py`:. ```; MB; 389.3^ #; | @@@@@#; | :@@@@@@@@@#; | @@@@@@@@@@@@@@#; | :@@@@@@@@@@@@@@@@@@#; | @::::@@@ @@@@@@@@@@@@@@#; | @@@@@:: :@@@ @@@@@@@@@@@@@@#; | @@:@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@:::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | ::@:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@@@@ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@@@@@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @:@@:@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @::@@@:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | :@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; |::::@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; |:: :@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; |:: :@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; 0 +----------------------------------------------------------------------->Gi; 0 146.4; ```. Here the logfile of the last snapshot:. [massif.log](https://github.com/root-project/root/files/5970579/massif.log). However, the issue can also be reproduced using a compiled program calling into `TInterpreter::ToString`:. ```cpp; #include ""TInterpreter.h""; #include <vector>; #include <string>. #include <iostream>. void rep() {; std::vector<int> x = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};; while (true) {; auto s = gInterpreter->ToString(""vector<int>"", &x);; // std::cout << s << std::endl;; }; }. int main() {; rep();; }; ```. ```bash; g++ rep.cxx $(root-config --libs --cflags) # take care that you don't optimize away the call; valgrind --tool=massif ./a.out; ```. Here the massif log from this run:. [massif_clingToString.log](https://github.com/root-project/root/files/5970887/massif_clingToString.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7187
https://github.com/root-project/root/issues/7187:1423,Testability,log,log,1423,"xample. ```python; # reproducer.py; import ROOT; v = ROOT.vector[int](range(10)); while 1:; _ = str(v); ```. And here the output of `valgrind --tool=massif python reproducer.py`:. ```; MB; 389.3^ #; | @@@@@#; | :@@@@@@@@@#; | @@@@@@@@@@@@@@#; | :@@@@@@@@@@@@@@@@@@#; | @::::@@@ @@@@@@@@@@@@@@#; | @@@@@:: :@@@ @@@@@@@@@@@@@@#; | @@:@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@:::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | ::@:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@@@@ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@@@@@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @:@@:@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @::@@@:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | :@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; |::::@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; |:: :@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; |:: :@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; 0 +----------------------------------------------------------------------->Gi; 0 146.4; ```. Here the logfile of the last snapshot:. [massif.log](https://github.com/root-project/root/files/5970579/massif.log). However, the issue can also be reproduced using a compiled program calling into `TInterpreter::ToString`:. ```cpp; #include ""TInterpreter.h""; #include <vector>; #include <string>. #include <iostream>. void rep() {; std::vector<int> x = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};; while (true) {; auto s = gInterpreter->ToString(""vector<int>"", &x);; // std::cout << s << std::endl;; }; }. int main() {; rep();; }; ```. ```bash; g++ rep.cxx $(root-config --libs --cflags) # take care that you don't optimize away the call; valgrind --tool=massif ./a.out; ```. Here the massif log from this run:. [massif_clingToString.log](https://github.com/root-project/root/files/5970887/massif_clingToString.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7187
https://github.com/root-project/root/issues/7187:1486,Testability,log,log,1486,"xample. ```python; # reproducer.py; import ROOT; v = ROOT.vector[int](range(10)); while 1:; _ = str(v); ```. And here the output of `valgrind --tool=massif python reproducer.py`:. ```; MB; 389.3^ #; | @@@@@#; | :@@@@@@@@@#; | @@@@@@@@@@@@@@#; | :@@@@@@@@@@@@@@@@@@#; | @::::@@@ @@@@@@@@@@@@@@#; | @@@@@:: :@@@ @@@@@@@@@@@@@@#; | @@:@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@:::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | ::@:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@@@@ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@@@@@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @:@@:@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @::@@@:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | :@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; |::::@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; |:: :@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; |:: :@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; 0 +----------------------------------------------------------------------->Gi; 0 146.4; ```. Here the logfile of the last snapshot:. [massif.log](https://github.com/root-project/root/files/5970579/massif.log). However, the issue can also be reproduced using a compiled program calling into `TInterpreter::ToString`:. ```cpp; #include ""TInterpreter.h""; #include <vector>; #include <string>. #include <iostream>. void rep() {; std::vector<int> x = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};; while (true) {; auto s = gInterpreter->ToString(""vector<int>"", &x);; // std::cout << s << std::endl;; }; }. int main() {; rep();; }; ```. ```bash; g++ rep.cxx $(root-config --libs --cflags) # take care that you don't optimize away the call; valgrind --tool=massif ./a.out; ```. Here the massif log from this run:. [massif_clingToString.log](https://github.com/root-project/root/files/5970887/massif_clingToString.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7187
https://github.com/root-project/root/issues/7187:2055,Testability,log,log,2055,"xample. ```python; # reproducer.py; import ROOT; v = ROOT.vector[int](range(10)); while 1:; _ = str(v); ```. And here the output of `valgrind --tool=massif python reproducer.py`:. ```; MB; 389.3^ #; | @@@@@#; | :@@@@@@@@@#; | @@@@@@@@@@@@@@#; | :@@@@@@@@@@@@@@@@@@#; | @::::@@@ @@@@@@@@@@@@@@#; | @@@@@:: :@@@ @@@@@@@@@@@@@@#; | @@:@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@:::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | ::@:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@@@@ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@@@@@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @:@@:@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @::@@@:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | :@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; |::::@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; |:: :@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; |:: :@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; 0 +----------------------------------------------------------------------->Gi; 0 146.4; ```. Here the logfile of the last snapshot:. [massif.log](https://github.com/root-project/root/files/5970579/massif.log). However, the issue can also be reproduced using a compiled program calling into `TInterpreter::ToString`:. ```cpp; #include ""TInterpreter.h""; #include <vector>; #include <string>. #include <iostream>. void rep() {; std::vector<int> x = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};; while (true) {; auto s = gInterpreter->ToString(""vector<int>"", &x);; // std::cout << s << std::endl;; }; }. int main() {; rep();; }; ```. ```bash; g++ rep.cxx $(root-config --libs --cflags) # take care that you don't optimize away the call; valgrind --tool=massif ./a.out; ```. Here the massif log from this run:. [massif_clingToString.log](https://github.com/root-project/root/files/5970887/massif_clingToString.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7187
https://github.com/root-project/root/issues/7187:2097,Testability,log,log,2097,"xample. ```python; # reproducer.py; import ROOT; v = ROOT.vector[int](range(10)); while 1:; _ = str(v); ```. And here the output of `valgrind --tool=massif python reproducer.py`:. ```; MB; 389.3^ #; | @@@@@#; | :@@@@@@@@@#; | @@@@@@@@@@@@@@#; | :@@@@@@@@@@@@@@@@@@#; | @::::@@@ @@@@@@@@@@@@@@#; | @@@@@:: :@@@ @@@@@@@@@@@@@@#; | @@:@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@:::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | ::@:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@@@@ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@@@@@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @:@@:@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @::@@@:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | :@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; |::::@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; |:: :@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; |:: :@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; 0 +----------------------------------------------------------------------->Gi; 0 146.4; ```. Here the logfile of the last snapshot:. [massif.log](https://github.com/root-project/root/files/5970579/massif.log). However, the issue can also be reproduced using a compiled program calling into `TInterpreter::ToString`:. ```cpp; #include ""TInterpreter.h""; #include <vector>; #include <string>. #include <iostream>. void rep() {; std::vector<int> x = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};; while (true) {; auto s = gInterpreter->ToString(""vector<int>"", &x);; // std::cout << s << std::endl;; }; }. int main() {; rep();; }; ```. ```bash; g++ rep.cxx $(root-config --libs --cflags) # take care that you don't optimize away the call; valgrind --tool=massif ./a.out; ```. Here the massif log from this run:. [massif_clingToString.log](https://github.com/root-project/root/files/5970887/massif_clingToString.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7187
https://github.com/root-project/root/issues/7187:2174,Testability,log,log,2174,"xample. ```python; # reproducer.py; import ROOT; v = ROOT.vector[int](range(10)); while 1:; _ = str(v); ```. And here the output of `valgrind --tool=massif python reproducer.py`:. ```; MB; 389.3^ #; | @@@@@#; | :@@@@@@@@@#; | @@@@@@@@@@@@@@#; | :@@@@@@@@@@@@@@@@@@#; | @::::@@@ @@@@@@@@@@@@@@#; | @@@@@:: :@@@ @@@@@@@@@@@@@@#; | @@:@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@:::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | ::@:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@@@@ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@@@@@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @:@@:@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @::@@@:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | :@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; |::::@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; |:: :@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; |:: :@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; 0 +----------------------------------------------------------------------->Gi; 0 146.4; ```. Here the logfile of the last snapshot:. [massif.log](https://github.com/root-project/root/files/5970579/massif.log). However, the issue can also be reproduced using a compiled program calling into `TInterpreter::ToString`:. ```cpp; #include ""TInterpreter.h""; #include <vector>; #include <string>. #include <iostream>. void rep() {; std::vector<int> x = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};; while (true) {; auto s = gInterpreter->ToString(""vector<int>"", &x);; // std::cout << s << std::endl;; }; }. int main() {; rep();; }; ```. ```bash; g++ rep.cxx $(root-config --libs --cflags) # take care that you don't optimize away the call; valgrind --tool=massif ./a.out; ```. Here the massif log from this run:. [massif_clingToString.log](https://github.com/root-project/root/files/5970887/massif_clingToString.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7187
https://github.com/root-project/root/pull/7188:67,Modifiability,variab,variable,67,Fixes issue #7115. Some characters need to be escaped before using variable names in std::regex; expressions formed in RooFormula::processForumla. Both [ and ] were already considered; this commit adds { and } to the list. Backport of https://github.com/root-project/root/pull/7183.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7188
https://github.com/root-project/root/pull/7189:67,Modifiability,variab,variable,67,Fixes issue #7115. Some characters need to be escaped before using variable names in std::regex; expressions formed in RooFormula::processForumla. Both [ and ] were already considered; this commit adds { and } to the list. Backport of https://github.com/root-project/root/pull/7183.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7189
https://github.com/root-project/root/pull/7190:167,Integrability,depend,depends,167,"- the CUDA sm level can be set via CLING_TEST_CUDA_SM_LEVEL environment variable (e.g. ""35""), before running the tests; - this necessary, because the minimum sm level depends on the use CUDA SDK; - for example, CUDA 8.0 supports sm level 2.0, which is not support from CUDA 10.1 anymore",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7190
https://github.com/root-project/root/pull/7190:72,Modifiability,variab,variable,72,"- the CUDA sm level can be set via CLING_TEST_CUDA_SM_LEVEL environment variable (e.g. ""35""), before running the tests; - this necessary, because the minimum sm level depends on the use CUDA SDK; - for example, CUDA 8.0 supports sm level 2.0, which is not support from CUDA 10.1 anymore",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7190
https://github.com/root-project/root/pull/7190:113,Testability,test,tests,113,"- the CUDA sm level can be set via CLING_TEST_CUDA_SM_LEVEL environment variable (e.g. ""35""), before running the tests; - this necessary, because the minimum sm level depends on the use CUDA SDK; - for example, CUDA 8.0 supports sm level 2.0, which is not support from CUDA 10.1 anymore",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7190
https://github.com/root-project/root/pull/7191:4,Security,access,access,4,The access to the static class member TGeoManager::fgDefaultUnits in an inline function causes problem.; This PR moves the access to this class member to the compiled code.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7191
https://github.com/root-project/root/pull/7191:123,Security,access,access,123,The access to the static class member TGeoManager::fgDefaultUnits in an inline function causes problem.; This PR moves the access to this class member to the compiled code.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7191
https://github.com/root-project/root/pull/7192:4,Security,access,access,4,The access to the static class member TGeoManager::fgDefaultUnits in an inline function causes problem.; This PR moves the access to this class member to the compiled code.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7192
https://github.com/root-project/root/pull/7192:123,Security,access,access,123,The access to the static class member TGeoManager::fgDefaultUnits in an inline function causes problem.; This PR moves the access to this class member to the compiled code.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7192
https://github.com/root-project/root/pull/7193:90,Deployability,patch,patches,90,"This is a request for backport of https://github.com/root-project/root/pull/7035; to 6-22 patches because of this ClassDef change:; ` ClassDef(TF1, 11) // The Parametric 1-D function` (previous was 10); which we are checking in this test:; https://github.com/cms-sw/cmssw/blob/master/DQMServices/Components/test/testSchemaEvolution.cpp#L44; and should have one or the other version, and we better use this fix in 6-22 anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:233,Testability,test,test,233,"This is a request for backport of https://github.com/root-project/root/pull/7035; to 6-22 patches because of this ClassDef change:; ` ClassDef(TF1, 11) // The Parametric 1-D function` (previous was 10); which we are checking in this test:; https://github.com/cms-sw/cmssw/blob/master/DQMServices/Components/test/testSchemaEvolution.cpp#L44; and should have one or the other version, and we better use this fix in 6-22 anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:307,Testability,test,test,307,"This is a request for backport of https://github.com/root-project/root/pull/7035; to 6-22 patches because of this ClassDef change:; ` ClassDef(TF1, 11) // The Parametric 1-D function` (previous was 10); which we are checking in this test:; https://github.com/cms-sw/cmssw/blob/master/DQMServices/Components/test/testSchemaEvolution.cpp#L44; and should have one or the other version, and we better use this fix in 6-22 anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:312,Testability,test,testSchemaEvolution,312,"This is a request for backport of https://github.com/root-project/root/pull/7035; to 6-22 patches because of this ClassDef change:; ` ClassDef(TF1, 11) // The Parametric 1-D function` (previous was 10); which we are checking in this test:; https://github.com/cms-sw/cmssw/blob/master/DQMServices/Components/test/testSchemaEvolution.cpp#L44; and should have one or the other version, and we better use this fix in 6-22 anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7194:80,Energy Efficiency,schedul,scheduler,80,The RNTupleReader should destruct its page source before it destructs; the task scheduler. In particular it must never set the page source's; task scheduler to nullptr because the page source might still use the; task scheduler for decompression. Fixes #7076,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7194
https://github.com/root-project/root/pull/7194:147,Energy Efficiency,schedul,scheduler,147,The RNTupleReader should destruct its page source before it destructs; the task scheduler. In particular it must never set the page source's; task scheduler to nullptr because the page source might still use the; task scheduler for decompression. Fixes #7076,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7194
https://github.com/root-project/root/pull/7194:218,Energy Efficiency,schedul,scheduler,218,The RNTupleReader should destruct its page source before it destructs; the task scheduler. In particular it must never set the page source's; task scheduler to nullptr because the page source might still use the; task scheduler for decompression. Fixes #7076,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7194
https://github.com/root-project/root/issues/7195:877,Performance,optimiz,optimized,877,"### Describe the bug; According to https://root.cern.ch/root/htmldoc/guides/users-guide/WritingGUI.html#event-processing-signals-and-slots one can pass parameters by value to your slots. `Connect(myButton, ""Pressed()"",""TH1"",hist, ""Draw(=\""LEGO\"")"");`. For example, I was trying:; `myTGCheckBox->Connect(""Clicked()"",""TGTextButton"", myButton, ""SetText(=\""LEGOlegoemoryABCDEF\"")"");`. But when I click on my checkbox, ROOT crashes then with:; ```; *** Break *** segmentation violation; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f7c3b4d0457 in __GI___waitpid (pid=14103, stat_loc=stat_loc; entry=0x7ffcd65f6a98, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30; #1 0x00007f7c3b43b177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149; #2 0x00007f7c3c078960 in TUnixSystem::StackTrace() () from /opt/root_bld/lib/libCore.so; #3 0x00007f7c3c07b4d5 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root_bld/lib/libCore.so; #4 <signal handler called>; #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65; #6 0x00007f7c3bf806be in StrDup(char const*) () from /opt/root_bld/lib/libCore.so; #7 0x00007f7c3c7c10ea in TGHotString::TGHotString(char const*) () from /opt/root_bld/lib/libGui.so; #8 0x00007f7c3c6967ad in TGTextButton::SetText(TString const&) () from /opt/root_bld/lib/libGui.so; #9 0x00007f7c2b3b903c in ?? (); #10 0x0000563f9e2c0f30 in ?? (); #11 0x0000563f9da66200 in ?? (); #12 0x0000000000000000 in ?? (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:69,Usability,guid,guides,69,"### Describe the bug; According to https://root.cern.ch/root/htmldoc/guides/users-guide/WritingGUI.html#event-processing-signals-and-slots one can pass parameters by value to your slots. `Connect(myButton, ""Pressed()"",""TH1"",hist, ""Draw(=\""LEGO\"")"");`. For example, I was trying:; `myTGCheckBox->Connect(""Clicked()"",""TGTextButton"", myButton, ""SetText(=\""LEGOlegoemoryABCDEF\"")"");`. But when I click on my checkbox, ROOT crashes then with:; ```; *** Break *** segmentation violation; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f7c3b4d0457 in __GI___waitpid (pid=14103, stat_loc=stat_loc; entry=0x7ffcd65f6a98, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30; #1 0x00007f7c3b43b177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149; #2 0x00007f7c3c078960 in TUnixSystem::StackTrace() () from /opt/root_bld/lib/libCore.so; #3 0x00007f7c3c07b4d5 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root_bld/lib/libCore.so; #4 <signal handler called>; #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65; #6 0x00007f7c3bf806be in StrDup(char const*) () from /opt/root_bld/lib/libCore.so; #7 0x00007f7c3c7c10ea in TGHotString::TGHotString(char const*) () from /opt/root_bld/lib/libGui.so; #8 0x00007f7c3c6967ad in TGTextButton::SetText(TString const&) () from /opt/root_bld/lib/libGui.so; #9 0x00007f7c2b3b903c in ?? (); #10 0x0000563f9e2c0f30 in ?? (); #11 0x0000563f9da66200 in ?? (); #12 0x0000000000000000 in ?? (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:82,Usability,guid,guide,82,"### Describe the bug; According to https://root.cern.ch/root/htmldoc/guides/users-guide/WritingGUI.html#event-processing-signals-and-slots one can pass parameters by value to your slots. `Connect(myButton, ""Pressed()"",""TH1"",hist, ""Draw(=\""LEGO\"")"");`. For example, I was trying:; `myTGCheckBox->Connect(""Clicked()"",""TGTextButton"", myButton, ""SetText(=\""LEGOlegoemoryABCDEF\"")"");`. But when I click on my checkbox, ROOT crashes then with:; ```; *** Break *** segmentation violation; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f7c3b4d0457 in __GI___waitpid (pid=14103, stat_loc=stat_loc; entry=0x7ffcd65f6a98, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30; #1 0x00007f7c3b43b177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149; #2 0x00007f7c3c078960 in TUnixSystem::StackTrace() () from /opt/root_bld/lib/libCore.so; #3 0x00007f7c3c07b4d5 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root_bld/lib/libCore.so; #4 <signal handler called>; #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65; #6 0x00007f7c3bf806be in StrDup(char const*) () from /opt/root_bld/lib/libCore.so; #7 0x00007f7c3c7c10ea in TGHotString::TGHotString(char const*) () from /opt/root_bld/lib/libGui.so; #8 0x00007f7c3c6967ad in TGTextButton::SetText(TString const&) () from /opt/root_bld/lib/libGui.so; #9 0x00007f7c2b3b903c in ?? (); #10 0x0000563f9e2c0f30 in ?? (); #11 0x0000563f9da66200 in ?? (); #12 0x0000000000000000 in ?? (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7196:195,Availability,avail,available,195,"### Describe the bug; On Linux, ROOT reports most of the RAM is full, even if it is free. Probably because it reports:. `used = total - free`; instead of; `used = total - free - cached = total - available`. See: https://github.com/root-project/root/blob/4d2a8650ed0f47fbffed33488426aaa6b6dfc73b/core/unix/src/TUnixSystem.cxx#L5153. ```; /opt/root_bld/tutorials/gui $ root -l; root [0] MemInfo_t memInfo; gSystem->GetMemInfo(&memInfo);; root [1] cout << memInfo.fMemTotal << "" "" << memInfo.fMemUsed << "" "" << memInfo.fMemFree << endl;; 15933 15381 552; root [2] .q; /opt/root_bld/tutorials/gui $ free -h; total used free shared buff/cache available; Mem: 15G 5.6G 658M 439M 9.3G 9.2G; Swap: 1.0G 135M 888M; ```. ### Expected behavior; It should report the actual free memory, or add a new variable inside the MemInfo_t struct that specifies the 9.3 'cached' memory, which is actually free to use. ### To Reproduce; ```; MemInfo_t memInfo; gSystem->GetMemInfo(&memInfo);; cout << memInfo.fMemTotal << "" "" << memInfo.fMemUsed << "" "" << memInfo.fMemFree << endl;; ```; or; `/opt/root_bld/tutorials/gui $ root -l CPUMeter.C`. ### Setup; 1. ROOT version: 6.23/01; 2. Operating system: Ubuntu 18; 3. Self-built. ### Additional context; https://www.thegeekdiary.com/understanding-proc-meminfo-file-analyzing-memory-utilization-in-linux/. My suggestion to solve this would be to do:. if (s.BeginsWith(""MemAvailable"")) {; TPRegexp(""^.+: *([^ ]+).*"").Substitute(s, ""$1"");; meminfo->fMemAvailable = (s.Atoi() / 1024);; }. `meminfo->fMemUsed = meminfo->fMemTotal - meminfo->fMemAvailable; `. and then in https://root.cern/doc/master/structMemInfo__t.html#a62b63e5e24efd2e2b5d0f60456e239d6:. ` Int_t fMemAvailable; // available RAM in MB`. For the SWAP it's probably not necessary. Not sure if the same issue happens for other OS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:638,Availability,avail,available,638,"### Describe the bug; On Linux, ROOT reports most of the RAM is full, even if it is free. Probably because it reports:. `used = total - free`; instead of; `used = total - free - cached = total - available`. See: https://github.com/root-project/root/blob/4d2a8650ed0f47fbffed33488426aaa6b6dfc73b/core/unix/src/TUnixSystem.cxx#L5153. ```; /opt/root_bld/tutorials/gui $ root -l; root [0] MemInfo_t memInfo; gSystem->GetMemInfo(&memInfo);; root [1] cout << memInfo.fMemTotal << "" "" << memInfo.fMemUsed << "" "" << memInfo.fMemFree << endl;; 15933 15381 552; root [2] .q; /opt/root_bld/tutorials/gui $ free -h; total used free shared buff/cache available; Mem: 15G 5.6G 658M 439M 9.3G 9.2G; Swap: 1.0G 135M 888M; ```. ### Expected behavior; It should report the actual free memory, or add a new variable inside the MemInfo_t struct that specifies the 9.3 'cached' memory, which is actually free to use. ### To Reproduce; ```; MemInfo_t memInfo; gSystem->GetMemInfo(&memInfo);; cout << memInfo.fMemTotal << "" "" << memInfo.fMemUsed << "" "" << memInfo.fMemFree << endl;; ```; or; `/opt/root_bld/tutorials/gui $ root -l CPUMeter.C`. ### Setup; 1. ROOT version: 6.23/01; 2. Operating system: Ubuntu 18; 3. Self-built. ### Additional context; https://www.thegeekdiary.com/understanding-proc-meminfo-file-analyzing-memory-utilization-in-linux/. My suggestion to solve this would be to do:. if (s.BeginsWith(""MemAvailable"")) {; TPRegexp(""^.+: *([^ ]+).*"").Substitute(s, ""$1"");; meminfo->fMemAvailable = (s.Atoi() / 1024);; }. `meminfo->fMemUsed = meminfo->fMemTotal - meminfo->fMemAvailable; `. and then in https://root.cern/doc/master/structMemInfo__t.html#a62b63e5e24efd2e2b5d0f60456e239d6:. ` Int_t fMemAvailable; // available RAM in MB`. For the SWAP it's probably not necessary. Not sure if the same issue happens for other OS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:1704,Availability,avail,available,1704,"### Describe the bug; On Linux, ROOT reports most of the RAM is full, even if it is free. Probably because it reports:. `used = total - free`; instead of; `used = total - free - cached = total - available`. See: https://github.com/root-project/root/blob/4d2a8650ed0f47fbffed33488426aaa6b6dfc73b/core/unix/src/TUnixSystem.cxx#L5153. ```; /opt/root_bld/tutorials/gui $ root -l; root [0] MemInfo_t memInfo; gSystem->GetMemInfo(&memInfo);; root [1] cout << memInfo.fMemTotal << "" "" << memInfo.fMemUsed << "" "" << memInfo.fMemFree << endl;; 15933 15381 552; root [2] .q; /opt/root_bld/tutorials/gui $ free -h; total used free shared buff/cache available; Mem: 15G 5.6G 658M 439M 9.3G 9.2G; Swap: 1.0G 135M 888M; ```. ### Expected behavior; It should report the actual free memory, or add a new variable inside the MemInfo_t struct that specifies the 9.3 'cached' memory, which is actually free to use. ### To Reproduce; ```; MemInfo_t memInfo; gSystem->GetMemInfo(&memInfo);; cout << memInfo.fMemTotal << "" "" << memInfo.fMemUsed << "" "" << memInfo.fMemFree << endl;; ```; or; `/opt/root_bld/tutorials/gui $ root -l CPUMeter.C`. ### Setup; 1. ROOT version: 6.23/01; 2. Operating system: Ubuntu 18; 3. Self-built. ### Additional context; https://www.thegeekdiary.com/understanding-proc-meminfo-file-analyzing-memory-utilization-in-linux/. My suggestion to solve this would be to do:. if (s.BeginsWith(""MemAvailable"")) {; TPRegexp(""^.+: *([^ ]+).*"").Substitute(s, ""$1"");; meminfo->fMemAvailable = (s.Atoi() / 1024);; }. `meminfo->fMemUsed = meminfo->fMemTotal - meminfo->fMemAvailable; `. and then in https://root.cern/doc/master/structMemInfo__t.html#a62b63e5e24efd2e2b5d0f60456e239d6:. ` Int_t fMemAvailable; // available RAM in MB`. For the SWAP it's probably not necessary. Not sure if the same issue happens for other OS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:788,Modifiability,variab,variable,788,"### Describe the bug; On Linux, ROOT reports most of the RAM is full, even if it is free. Probably because it reports:. `used = total - free`; instead of; `used = total - free - cached = total - available`. See: https://github.com/root-project/root/blob/4d2a8650ed0f47fbffed33488426aaa6b6dfc73b/core/unix/src/TUnixSystem.cxx#L5153. ```; /opt/root_bld/tutorials/gui $ root -l; root [0] MemInfo_t memInfo; gSystem->GetMemInfo(&memInfo);; root [1] cout << memInfo.fMemTotal << "" "" << memInfo.fMemUsed << "" "" << memInfo.fMemFree << endl;; 15933 15381 552; root [2] .q; /opt/root_bld/tutorials/gui $ free -h; total used free shared buff/cache available; Mem: 15G 5.6G 658M 439M 9.3G 9.2G; Swap: 1.0G 135M 888M; ```. ### Expected behavior; It should report the actual free memory, or add a new variable inside the MemInfo_t struct that specifies the 9.3 'cached' memory, which is actually free to use. ### To Reproduce; ```; MemInfo_t memInfo; gSystem->GetMemInfo(&memInfo);; cout << memInfo.fMemTotal << "" "" << memInfo.fMemUsed << "" "" << memInfo.fMemFree << endl;; ```; or; `/opt/root_bld/tutorials/gui $ root -l CPUMeter.C`. ### Setup; 1. ROOT version: 6.23/01; 2. Operating system: Ubuntu 18; 3. Self-built. ### Additional context; https://www.thegeekdiary.com/understanding-proc-meminfo-file-analyzing-memory-utilization-in-linux/. My suggestion to solve this would be to do:. if (s.BeginsWith(""MemAvailable"")) {; TPRegexp(""^.+: *([^ ]+).*"").Substitute(s, ""$1"");; meminfo->fMemAvailable = (s.Atoi() / 1024);; }. `meminfo->fMemUsed = meminfo->fMemTotal - meminfo->fMemAvailable; `. and then in https://root.cern/doc/master/structMemInfo__t.html#a62b63e5e24efd2e2b5d0f60456e239d6:. ` Int_t fMemAvailable; // available RAM in MB`. For the SWAP it's probably not necessary. Not sure if the same issue happens for other OS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:178,Performance,cache,cached,178,"### Describe the bug; On Linux, ROOT reports most of the RAM is full, even if it is free. Probably because it reports:. `used = total - free`; instead of; `used = total - free - cached = total - available`. See: https://github.com/root-project/root/blob/4d2a8650ed0f47fbffed33488426aaa6b6dfc73b/core/unix/src/TUnixSystem.cxx#L5153. ```; /opt/root_bld/tutorials/gui $ root -l; root [0] MemInfo_t memInfo; gSystem->GetMemInfo(&memInfo);; root [1] cout << memInfo.fMemTotal << "" "" << memInfo.fMemUsed << "" "" << memInfo.fMemFree << endl;; 15933 15381 552; root [2] .q; /opt/root_bld/tutorials/gui $ free -h; total used free shared buff/cache available; Mem: 15G 5.6G 658M 439M 9.3G 9.2G; Swap: 1.0G 135M 888M; ```. ### Expected behavior; It should report the actual free memory, or add a new variable inside the MemInfo_t struct that specifies the 9.3 'cached' memory, which is actually free to use. ### To Reproduce; ```; MemInfo_t memInfo; gSystem->GetMemInfo(&memInfo);; cout << memInfo.fMemTotal << "" "" << memInfo.fMemUsed << "" "" << memInfo.fMemFree << endl;; ```; or; `/opt/root_bld/tutorials/gui $ root -l CPUMeter.C`. ### Setup; 1. ROOT version: 6.23/01; 2. Operating system: Ubuntu 18; 3. Self-built. ### Additional context; https://www.thegeekdiary.com/understanding-proc-meminfo-file-analyzing-memory-utilization-in-linux/. My suggestion to solve this would be to do:. if (s.BeginsWith(""MemAvailable"")) {; TPRegexp(""^.+: *([^ ]+).*"").Substitute(s, ""$1"");; meminfo->fMemAvailable = (s.Atoi() / 1024);; }. `meminfo->fMemUsed = meminfo->fMemTotal - meminfo->fMemAvailable; `. and then in https://root.cern/doc/master/structMemInfo__t.html#a62b63e5e24efd2e2b5d0f60456e239d6:. ` Int_t fMemAvailable; // available RAM in MB`. For the SWAP it's probably not necessary. Not sure if the same issue happens for other OS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:632,Performance,cache,cache,632,"### Describe the bug; On Linux, ROOT reports most of the RAM is full, even if it is free. Probably because it reports:. `used = total - free`; instead of; `used = total - free - cached = total - available`. See: https://github.com/root-project/root/blob/4d2a8650ed0f47fbffed33488426aaa6b6dfc73b/core/unix/src/TUnixSystem.cxx#L5153. ```; /opt/root_bld/tutorials/gui $ root -l; root [0] MemInfo_t memInfo; gSystem->GetMemInfo(&memInfo);; root [1] cout << memInfo.fMemTotal << "" "" << memInfo.fMemUsed << "" "" << memInfo.fMemFree << endl;; 15933 15381 552; root [2] .q; /opt/root_bld/tutorials/gui $ free -h; total used free shared buff/cache available; Mem: 15G 5.6G 658M 439M 9.3G 9.2G; Swap: 1.0G 135M 888M; ```. ### Expected behavior; It should report the actual free memory, or add a new variable inside the MemInfo_t struct that specifies the 9.3 'cached' memory, which is actually free to use. ### To Reproduce; ```; MemInfo_t memInfo; gSystem->GetMemInfo(&memInfo);; cout << memInfo.fMemTotal << "" "" << memInfo.fMemUsed << "" "" << memInfo.fMemFree << endl;; ```; or; `/opt/root_bld/tutorials/gui $ root -l CPUMeter.C`. ### Setup; 1. ROOT version: 6.23/01; 2. Operating system: Ubuntu 18; 3. Self-built. ### Additional context; https://www.thegeekdiary.com/understanding-proc-meminfo-file-analyzing-memory-utilization-in-linux/. My suggestion to solve this would be to do:. if (s.BeginsWith(""MemAvailable"")) {; TPRegexp(""^.+: *([^ ]+).*"").Substitute(s, ""$1"");; meminfo->fMemAvailable = (s.Atoi() / 1024);; }. `meminfo->fMemUsed = meminfo->fMemTotal - meminfo->fMemAvailable; `. and then in https://root.cern/doc/master/structMemInfo__t.html#a62b63e5e24efd2e2b5d0f60456e239d6:. ` Int_t fMemAvailable; // available RAM in MB`. For the SWAP it's probably not necessary. Not sure if the same issue happens for other OS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:849,Performance,cache,cached,849,"### Describe the bug; On Linux, ROOT reports most of the RAM is full, even if it is free. Probably because it reports:. `used = total - free`; instead of; `used = total - free - cached = total - available`. See: https://github.com/root-project/root/blob/4d2a8650ed0f47fbffed33488426aaa6b6dfc73b/core/unix/src/TUnixSystem.cxx#L5153. ```; /opt/root_bld/tutorials/gui $ root -l; root [0] MemInfo_t memInfo; gSystem->GetMemInfo(&memInfo);; root [1] cout << memInfo.fMemTotal << "" "" << memInfo.fMemUsed << "" "" << memInfo.fMemFree << endl;; 15933 15381 552; root [2] .q; /opt/root_bld/tutorials/gui $ free -h; total used free shared buff/cache available; Mem: 15G 5.6G 658M 439M 9.3G 9.2G; Swap: 1.0G 135M 888M; ```. ### Expected behavior; It should report the actual free memory, or add a new variable inside the MemInfo_t struct that specifies the 9.3 'cached' memory, which is actually free to use. ### To Reproduce; ```; MemInfo_t memInfo; gSystem->GetMemInfo(&memInfo);; cout << memInfo.fMemTotal << "" "" << memInfo.fMemUsed << "" "" << memInfo.fMemFree << endl;; ```; or; `/opt/root_bld/tutorials/gui $ root -l CPUMeter.C`. ### Setup; 1. ROOT version: 6.23/01; 2. Operating system: Ubuntu 18; 3. Self-built. ### Additional context; https://www.thegeekdiary.com/understanding-proc-meminfo-file-analyzing-memory-utilization-in-linux/. My suggestion to solve this would be to do:. if (s.BeginsWith(""MemAvailable"")) {; TPRegexp(""^.+: *([^ ]+).*"").Substitute(s, ""$1"");; meminfo->fMemAvailable = (s.Atoi() / 1024);; }. `meminfo->fMemUsed = meminfo->fMemTotal - meminfo->fMemAvailable; `. and then in https://root.cern/doc/master/structMemInfo__t.html#a62b63e5e24efd2e2b5d0f60456e239d6:. ` Int_t fMemAvailable; // available RAM in MB`. For the SWAP it's probably not necessary. Not sure if the same issue happens for other OS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/pull/7197:27,Deployability,release,releases,27,https://github.com/lz4/lz4/releases/tag/v1.9.3,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7197
https://github.com/root-project/root/pull/7198:292,Integrability,interface,interface,292,The logic for summing over histogram bins in different ranges used in; RooHistPdf is also implemented in RooParamHistFunc. This means the; range is now considered when computing integrals of RooParamHistFunc. RooParamHistFunc allows you to scale the counts in each bin with a; parameter. The interface of RooDataHist::sum was extended with a; function parameter to inject the logic of scaling the bin weight; depending on the bin index. This commit partly fixes issue #7182. We still need to implement the; range feature in RooHistFunc.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7198
https://github.com/root-project/root/pull/7198:365,Integrability,inject,inject,365,The logic for summing over histogram bins in different ranges used in; RooHistPdf is also implemented in RooParamHistFunc. This means the; range is now considered when computing integrals of RooParamHistFunc. RooParamHistFunc allows you to scale the counts in each bin with a; parameter. The interface of RooDataHist::sum was extended with a; function parameter to inject the logic of scaling the bin weight; depending on the bin index. This commit partly fixes issue #7182. We still need to implement the; range feature in RooHistFunc.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7198
https://github.com/root-project/root/pull/7198:409,Integrability,depend,depending,409,The logic for summing over histogram bins in different ranges used in; RooHistPdf is also implemented in RooParamHistFunc. This means the; range is now considered when computing integrals of RooParamHistFunc. RooParamHistFunc allows you to scale the counts in each bin with a; parameter. The interface of RooDataHist::sum was extended with a; function parameter to inject the logic of scaling the bin weight; depending on the bin index. This commit partly fixes issue #7182. We still need to implement the; range feature in RooHistFunc.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7198
https://github.com/root-project/root/pull/7198:326,Modifiability,extend,extended,326,The logic for summing over histogram bins in different ranges used in; RooHistPdf is also implemented in RooParamHistFunc. This means the; range is now considered when computing integrals of RooParamHistFunc. RooParamHistFunc allows you to scale the counts in each bin with a; parameter. The interface of RooDataHist::sum was extended with a; function parameter to inject the logic of scaling the bin weight; depending on the bin index. This commit partly fixes issue #7182. We still need to implement the; range feature in RooHistFunc.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7198
https://github.com/root-project/root/pull/7198:365,Security,inject,inject,365,The logic for summing over histogram bins in different ranges used in; RooHistPdf is also implemented in RooParamHistFunc. This means the; range is now considered when computing integrals of RooParamHistFunc. RooParamHistFunc allows you to scale the counts in each bin with a; parameter. The interface of RooDataHist::sum was extended with a; function parameter to inject the logic of scaling the bin weight; depending on the bin index. This commit partly fixes issue #7182. We still need to implement the; range feature in RooHistFunc.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7198
https://github.com/root-project/root/pull/7198:4,Testability,log,logic,4,The logic for summing over histogram bins in different ranges used in; RooHistPdf is also implemented in RooParamHistFunc. This means the; range is now considered when computing integrals of RooParamHistFunc. RooParamHistFunc allows you to scale the counts in each bin with a; parameter. The interface of RooDataHist::sum was extended with a; function parameter to inject the logic of scaling the bin weight; depending on the bin index. This commit partly fixes issue #7182. We still need to implement the; range feature in RooHistFunc.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7198
https://github.com/root-project/root/pull/7198:376,Testability,log,logic,376,The logic for summing over histogram bins in different ranges used in; RooHistPdf is also implemented in RooParamHistFunc. This means the; range is now considered when computing integrals of RooParamHistFunc. RooParamHistFunc allows you to scale the counts in each bin with a; parameter. The interface of RooDataHist::sum was extended with a; function parameter to inject the logic of scaling the bin weight; depending on the bin index. This commit partly fixes issue #7182. We still need to implement the; range feature in RooHistFunc.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7198
https://github.com/root-project/root/issues/7199:1197,Availability,error,error,1197,"ratedcode.cpp""). d = ROOT.RDataFrame(10); r = ROOT.Foo(ROOT.RDF.AsRNode(d)). print(""second CompileMacro""); with open(""generatedcode.cpp"", ""w"") as f:; f.write(code); ROOT.gSystem.CompileMacro(""generatedcode.cpp"") # crashes. if __name__ == ""__main__"":; main(); ```. results in:. ```; ~/S/d/optimized_template_helper python repro_crash_compilemacro.py (cern-root) ; first CompileMacro; Info in <TUnixSystem::ACLiC>: creating shared library /home/blue/Scratchpad/df/optimized_template_helper/generatedcode_cpp.so; second CompileMacro; Info in <ACLiC>: modified script has already been compiled and loaded; Info in <ACLiC>: it will be regenerated and reloaded!; Info in <TUnixSystem::ACLiC>: creating shared library /home/blue/Scratchpad/df/optimized_template_helper/generatedcode_cpp.so; In module 'ROOTDataFrame':; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:99:73: error: no member named 'value' in 'ROOT::TypeTraits::HasBeginAndEnd<int>'; template <typename V, bool hasBeginEnd = TTraits::HasBeginAndEnd<V>::value>; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:180:13: note: in instantiation of default argument for 'RIterationHelper<int>' required here; typename RIterationHelper<T>::Iterator_t begin(); ^~~~~~~~~~~~~~~~~~~; ./generatedcode.cpp:5:29: note: in instantiation of template class 'ROOT::RDF::RResultPtr<int>' requested here; ROOT::RDF::RResultPtr<int> ptr;; ^; In module 'ROOTDataFrame':; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:99:73: error: no member named 'value' in 'ROOT::TypeTraits::HasBeginAndEnd<int>'; template <typename V, bool hasBeginEnd = TTraits::HasBeginAndEnd<V>::value>; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:189:13: note: in instantiation of default argument for 'RIterationHelper<int>' required here; typename RIterationHelper<T>::Iterator_t end(); ^~~~~~~~~~~~~~~~~~~; ./generatedcode.cpp:5:29: note: in instantiat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7199
https://github.com/root-project/root/issues/7199:1858,Availability,error,error,1858,"already been compiled and loaded; Info in <ACLiC>: it will be regenerated and reloaded!; Info in <TUnixSystem::ACLiC>: creating shared library /home/blue/Scratchpad/df/optimized_template_helper/generatedcode_cpp.so; In module 'ROOTDataFrame':; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:99:73: error: no member named 'value' in 'ROOT::TypeTraits::HasBeginAndEnd<int>'; template <typename V, bool hasBeginEnd = TTraits::HasBeginAndEnd<V>::value>; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:180:13: note: in instantiation of default argument for 'RIterationHelper<int>' required here; typename RIterationHelper<T>::Iterator_t begin(); ^~~~~~~~~~~~~~~~~~~; ./generatedcode.cpp:5:29: note: in instantiation of template class 'ROOT::RDF::RResultPtr<int>' requested here; ROOT::RDF::RResultPtr<int> ptr;; ^; In module 'ROOTDataFrame':; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:99:73: error: no member named 'value' in 'ROOT::TypeTraits::HasBeginAndEnd<int>'; template <typename V, bool hasBeginEnd = TTraits::HasBeginAndEnd<V>::value>; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:189:13: note: in instantiation of default argument for 'RIterationHelper<int>' required here; typename RIterationHelper<T>::Iterator_t end(); ^~~~~~~~~~~~~~~~~~~; ./generatedcode.cpp:5:29: note: in instantiation of template class 'ROOT::RDF::RResultPtr<int>' requested here; ROOT::RDF::RResultPtr<int> ptr;; ^; TInterpreter::TCling::RegisterModule:0: RuntimeWarning: Problems declaring payload for module generatedcode_cpp_ACLiC_dict.; ```. I could not reduce the repro further. I am not sure whether this is a scenario that is supposed to work, but I _think_ so because making minor, apparently harmless changes to the repro fixes it (e.g. removing the parameter of `Foo` or deleting the first line of its body). Feel free to close if such a usecase is simply not supported.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7199
https://github.com/root-project/root/issues/7199:2559,Energy Efficiency,reduce,reduce,2559,"already been compiled and loaded; Info in <ACLiC>: it will be regenerated and reloaded!; Info in <TUnixSystem::ACLiC>: creating shared library /home/blue/Scratchpad/df/optimized_template_helper/generatedcode_cpp.so; In module 'ROOTDataFrame':; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:99:73: error: no member named 'value' in 'ROOT::TypeTraits::HasBeginAndEnd<int>'; template <typename V, bool hasBeginEnd = TTraits::HasBeginAndEnd<V>::value>; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:180:13: note: in instantiation of default argument for 'RIterationHelper<int>' required here; typename RIterationHelper<T>::Iterator_t begin(); ^~~~~~~~~~~~~~~~~~~; ./generatedcode.cpp:5:29: note: in instantiation of template class 'ROOT::RDF::RResultPtr<int>' requested here; ROOT::RDF::RResultPtr<int> ptr;; ^; In module 'ROOTDataFrame':; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:99:73: error: no member named 'value' in 'ROOT::TypeTraits::HasBeginAndEnd<int>'; template <typename V, bool hasBeginEnd = TTraits::HasBeginAndEnd<V>::value>; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:189:13: note: in instantiation of default argument for 'RIterationHelper<int>' required here; typename RIterationHelper<T>::Iterator_t end(); ^~~~~~~~~~~~~~~~~~~; ./generatedcode.cpp:5:29: note: in instantiation of template class 'ROOT::RDF::RResultPtr<int>' requested here; ROOT::RDF::RResultPtr<int> ptr;; ^; TInterpreter::TCling::RegisterModule:0: RuntimeWarning: Problems declaring payload for module generatedcode_cpp_ACLiC_dict.; ```. I could not reduce the repro further. I am not sure whether this is a scenario that is supposed to work, but I _think_ so because making minor, apparently harmless changes to the repro fixes it (e.g. removing the parameter of `Foo` or deleting the first line of its body). Feel free to close if such a usecase is simply not supported.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7199
https://github.com/root-project/root/issues/7199:907,Performance,load,loaded,907,"A self-contained reproducer:. ```python; import ROOT. code = """"""; #include <ROOT/RDataFrame.hxx>. int Foo(ROOT::RDF::RNode d) {; ROOT::RDF::RResultPtr<int> ptr;; return 42;; }; """""". def main():; print(""first CompileMacro""); with open(""generatedcode.cpp"", ""w"") as f:; f.write(code); ROOT.gSystem.CompileMacro(""generatedcode.cpp""). d = ROOT.RDataFrame(10); r = ROOT.Foo(ROOT.RDF.AsRNode(d)). print(""second CompileMacro""); with open(""generatedcode.cpp"", ""w"") as f:; f.write(code); ROOT.gSystem.CompileMacro(""generatedcode.cpp"") # crashes. if __name__ == ""__main__"":; main(); ```. results in:. ```; ~/S/d/optimized_template_helper python repro_crash_compilemacro.py (cern-root) ; first CompileMacro; Info in <TUnixSystem::ACLiC>: creating shared library /home/blue/Scratchpad/df/optimized_template_helper/generatedcode_cpp.so; second CompileMacro; Info in <ACLiC>: modified script has already been compiled and loaded; Info in <ACLiC>: it will be regenerated and reloaded!; Info in <TUnixSystem::ACLiC>: creating shared library /home/blue/Scratchpad/df/optimized_template_helper/generatedcode_cpp.so; In module 'ROOTDataFrame':; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:99:73: error: no member named 'value' in 'ROOT::TypeTraits::HasBeginAndEnd<int>'; template <typename V, bool hasBeginEnd = TTraits::HasBeginAndEnd<V>::value>; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:180:13: note: in instantiation of default argument for 'RIterationHelper<int>' required here; typename RIterationHelper<T>::Iterator_t begin(); ^~~~~~~~~~~~~~~~~~~; ./generatedcode.cpp:5:29: note: in instantiation of template class 'ROOT::RDF::RResultPtr<int>' requested here; ROOT::RDF::RResultPtr<int> ptr;; ^; In module 'ROOTDataFrame':; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:99:73: error: no member named 'value' in 'ROOT::TypeTraits::HasBeginAndEnd<int>'; template <typename V, bool hasBeginEnd = TTraits::HasBeginAndEnd<V>:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7199
https://github.com/root-project/root/issues/7199:2860,Usability,simpl,simply,2860,"already been compiled and loaded; Info in <ACLiC>: it will be regenerated and reloaded!; Info in <TUnixSystem::ACLiC>: creating shared library /home/blue/Scratchpad/df/optimized_template_helper/generatedcode_cpp.so; In module 'ROOTDataFrame':; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:99:73: error: no member named 'value' in 'ROOT::TypeTraits::HasBeginAndEnd<int>'; template <typename V, bool hasBeginEnd = TTraits::HasBeginAndEnd<V>::value>; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:180:13: note: in instantiation of default argument for 'RIterationHelper<int>' required here; typename RIterationHelper<T>::Iterator_t begin(); ^~~~~~~~~~~~~~~~~~~; ./generatedcode.cpp:5:29: note: in instantiation of template class 'ROOT::RDF::RResultPtr<int>' requested here; ROOT::RDF::RResultPtr<int> ptr;; ^; In module 'ROOTDataFrame':; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:99:73: error: no member named 'value' in 'ROOT::TypeTraits::HasBeginAndEnd<int>'; template <typename V, bool hasBeginEnd = TTraits::HasBeginAndEnd<V>::value>; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:189:13: note: in instantiation of default argument for 'RIterationHelper<int>' required here; typename RIterationHelper<T>::Iterator_t end(); ^~~~~~~~~~~~~~~~~~~; ./generatedcode.cpp:5:29: note: in instantiation of template class 'ROOT::RDF::RResultPtr<int>' requested here; ROOT::RDF::RResultPtr<int> ptr;; ^; TInterpreter::TCling::RegisterModule:0: RuntimeWarning: Problems declaring payload for module generatedcode_cpp_ACLiC_dict.; ```. I could not reduce the repro further. I am not sure whether this is a scenario that is supposed to work, but I _think_ so because making minor, apparently harmless changes to the repro fixes it (e.g. removing the parameter of `Foo` or deleting the first line of its body). Feel free to close if such a usecase is simply not supported.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7199
https://github.com/root-project/root/issues/7201:2258,Availability,down,down,2258,"of C++ code, they are in fact not insulated one-offs of evaluating the code in some context. They introduce code and leak (they even leak beyond the basic introduction of more code). There also does not appear any alternative that does provide the one-off behavior that the name `Calc` suggests. Start on the ROOT side, with `TCling::Calc` (and `ProcessLine` etc.). If the Cling evaluation returns something non-void, a `cling::Value` is stored in `fTemporaries`, which is destroyed on application shutdown. This behavior means that a developer using these functions will see their code leak (and application crash if it runs out of memory), but leak checkers will report nothing. Pretty bad in itself, in particular since the developer can't do anything about it (there is no reset or access to `pop_back` on `fTemporaries`). A better implementation would transfer ownership responsibilities to the caller, if so desired. Also, the code only checks for `valRef.isVoid()`, whereas integer types with sizes smaller than that of `long` can be returned without a need to store the `cling::Value`. (Aside, the final cast to `long` rather than to e.g. `intptr_t` means that this code breaks many applications on Win64.). Next, `cling::evaluate` leaves a transaction behind. This is a good chunk of the leak, albeit not all. Using `unload(1)` one can get rid of the transaction, but there appears to be no way to indicate that the transaction should not be committed in the first place. The code also does not work with transaction RAIIs and there is no way to tell `evaluate` that the caller-side wants to take over the transaction. Finally, beyond temporaries and left-behind leaks, there is still another leak (in fact, the major part) unaccounted for that I've been unable to determine. It's another one, like above, that gets cleaned out on application shutdown, so hard to track down. Heap checker suggests it is in the `MachineFunctionPass`, but I could not pinpoint it. Presumably more saved state.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:1165,Security,access,access,1165,"of `cling::evaluate` (underlying) seems to proliferate b/c of RDataFrame, it is also directly relevant to ROOT usage. The issue is that although names such as `TCling::Calc()` and `cling::evaluate` suggest these can be used for dynamic evaluation of C++ code, they are in fact not insulated one-offs of evaluating the code in some context. They introduce code and leak (they even leak beyond the basic introduction of more code). There also does not appear any alternative that does provide the one-off behavior that the name `Calc` suggests. Start on the ROOT side, with `TCling::Calc` (and `ProcessLine` etc.). If the Cling evaluation returns something non-void, a `cling::Value` is stored in `fTemporaries`, which is destroyed on application shutdown. This behavior means that a developer using these functions will see their code leak (and application crash if it runs out of memory), but leak checkers will report nothing. Pretty bad in itself, in particular since the developer can't do anything about it (there is no reset or access to `pop_back` on `fTemporaries`). A better implementation would transfer ownership responsibilities to the caller, if so desired. Also, the code only checks for `valRef.isVoid()`, whereas integer types with sizes smaller than that of `long` can be returned without a need to store the `cling::Value`. (Aside, the final cast to `long` rather than to e.g. `intptr_t` means that this code breaks many applications on Win64.). Next, `cling::evaluate` leaves a transaction behind. This is a good chunk of the leak, albeit not all. Using `unload(1)` one can get rid of the transaction, but there appears to be no way to indicate that the transaction should not be committed in the first place. The code also does not work with transaction RAIIs and there is no way to tell `evaluate` that the caller-side wants to take over the transaction. Finally, beyond temporaries and left-behind leaks, there is still another leak (in fact, the major part) unaccounted for that",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7202:622,Deployability,configurat,configuration,622,"### Describe the bug; Cmake is not able to configure a project with ROOT.; Usage of ROOT from master requires ""nlohmann_json"".; cmake fails if ""nlohmann_json"" is not found. Even if this package is not used in any way.; . ### Expected behavior; Cmake is able to configure a project with ROOT. ### To Reproduce. Call `find_package(ROOT)`, e.g. `find_package(ROOT REQUIRED COMPONENTS Core RIO Tree TreePlayer Net Hist Gui Gpad Graf EG Thread Imt Html)`. in cmake. ### Setup; ROOT from ; /cvmfs/sft.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc8-opt/bin/thisroot.sh; CentOS7 x86_64 . ### Additional context; The configuration worked well in the past.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7202
https://github.com/root-project/root/issues/7202:43,Modifiability,config,configure,43,"### Describe the bug; Cmake is not able to configure a project with ROOT.; Usage of ROOT from master requires ""nlohmann_json"".; cmake fails if ""nlohmann_json"" is not found. Even if this package is not used in any way.; . ### Expected behavior; Cmake is able to configure a project with ROOT. ### To Reproduce. Call `find_package(ROOT)`, e.g. `find_package(ROOT REQUIRED COMPONENTS Core RIO Tree TreePlayer Net Hist Gui Gpad Graf EG Thread Imt Html)`. in cmake. ### Setup; ROOT from ; /cvmfs/sft.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc8-opt/bin/thisroot.sh; CentOS7 x86_64 . ### Additional context; The configuration worked well in the past.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7202
https://github.com/root-project/root/issues/7202:261,Modifiability,config,configure,261,"### Describe the bug; Cmake is not able to configure a project with ROOT.; Usage of ROOT from master requires ""nlohmann_json"".; cmake fails if ""nlohmann_json"" is not found. Even if this package is not used in any way.; . ### Expected behavior; Cmake is able to configure a project with ROOT. ### To Reproduce. Call `find_package(ROOT)`, e.g. `find_package(ROOT REQUIRED COMPONENTS Core RIO Tree TreePlayer Net Hist Gui Gpad Graf EG Thread Imt Html)`. in cmake. ### Setup; ROOT from ; /cvmfs/sft.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc8-opt/bin/thisroot.sh; CentOS7 x86_64 . ### Additional context; The configuration worked well in the past.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7202
https://github.com/root-project/root/issues/7202:622,Modifiability,config,configuration,622,"### Describe the bug; Cmake is not able to configure a project with ROOT.; Usage of ROOT from master requires ""nlohmann_json"".; cmake fails if ""nlohmann_json"" is not found. Even if this package is not used in any way.; . ### Expected behavior; Cmake is able to configure a project with ROOT. ### To Reproduce. Call `find_package(ROOT)`, e.g. `find_package(ROOT REQUIRED COMPONENTS Core RIO Tree TreePlayer Net Hist Gui Gpad Graf EG Thread Imt Html)`. in cmake. ### Setup; ROOT from ; /cvmfs/sft.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc8-opt/bin/thisroot.sh; CentOS7 x86_64 . ### Additional context; The configuration worked well in the past.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7202
https://github.com/root-project/root/pull/7203:0,Performance,Load,Loading,0,Loading same macro twice with changed definition does not work.; Therefore just split macro and load main macro once library; compiled and loaded. Also add generated includes - otherwise; CLING does not like to work. Solving issue from forum: https://root-forum.cern.ch/t/43535,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7203
https://github.com/root-project/root/pull/7203:96,Performance,load,load,96,Loading same macro twice with changed definition does not work.; Therefore just split macro and load main macro once library; compiled and loaded. Also add generated includes - otherwise; CLING does not like to work. Solving issue from forum: https://root-forum.cern.ch/t/43535,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7203
https://github.com/root-project/root/pull/7203:139,Performance,load,loaded,139,Loading same macro twice with changed definition does not work.; Therefore just split macro and load main macro once library; compiled and loaded. Also add generated includes - otherwise; CLING does not like to work. Solving issue from forum: https://root-forum.cern.ch/t/43535,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7203
https://github.com/root-project/root/issues/7205:659,Availability,down,download,659,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->; When there are many columns in a `ROOT::RDataFrame`, `df.Display(many_columns)->Print()` is truncated and doesn't include all the columns requested. I can understand this truncating without any parameter, but when I pass the columns explicitly, no truncating should occur. The Pandas approach to truncation is better and should be adopted as well - it shows first and last columns with `...` in the middle, clearly indicating the truncation. ### Setup; 1. ROOT version: 6.22.06; 2. Operating system: Ubuntu 18.04; 3. How you obtained ROOT: `binary download`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7205
https://github.com/root-project/root/issues/7205:518,Usability,clear,clearly,518,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->; When there are many columns in a `ROOT::RDataFrame`, `df.Display(many_columns)->Print()` is truncated and doesn't include all the columns requested. I can understand this truncating without any parameter, but when I pass the columns explicitly, no truncating should occur. The Pandas approach to truncation is better and should be adopted as well - it shows first and last columns with `...` in the middle, clearly indicating the truncation. ### Setup; 1. ROOT version: 6.22.06; 2. Operating system: Ubuntu 18.04; 3. How you obtained ROOT: `binary download`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7205
https://github.com/root-project/root/issues/7206:45,Availability,error,error,45,"When building with #6385 I get the following error when building with `builtin_cling=OFF`. I haven't investigated in detail so it could be something wrong on my part:. ```log; [ 96%] Generating G__Core.cxx, ../lib/Core.pcm; cd /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir/core && /home/conda/feedstock_root/build_artifacts/debug_1613296575343/_build_env/bin/cmake -E env LD_LIBRARY_PATH=/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir/lib: /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir/lib/libCore.so -excludePath /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source -excludePath /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir/ginclude -excludePath /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir/externals -excludePath /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir/include -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir/ginclude -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/base/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/foundation/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/cont/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/gui/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7206
https://github.com/root-project/root/issues/7206:5894,Availability,error,error,5894,ser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/base/inc/LinkDef.h; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; <<< cling interactive line includer >>>: fatal error: could not build module '_Builtin_intrinsics'; Error: Module '_Builtin_intrinsics' failed to load.; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedst,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7206
https://github.com/root-project/root/issues/7206:6037,Availability,error,error,6037,jectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/base/inc/LinkDef.h; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; <<< cling interactive line includer >>>: fatal error: could not build module '_Builtin_intrinsics'; Error: Module '_Builtin_intrinsics' failed to load.; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; Error: Error loading the default rootcl,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7206
https://github.com/root-project/root/issues/7206:6180,Availability,error,error,6180,eMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/base/inc/LinkDef.h; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; <<< cling interactive line includer >>>: fatal error: could not build module '_Builtin_intrinsics'; Error: Module '_Builtin_intrinsics' failed to load.; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; Error: Error loading the default rootcling header files.; make[3]: *** [core/CMakeFiles/G__Core.dir/build.make:481: core/G__Core.cxx] Error 1; make[3]: Leaving directory '/home/conda,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7206
https://github.com/root-project/root/issues/7206:6364,Availability,error,error,6364, TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/base/inc/LinkDef.h; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; <<< cling interactive line includer >>>: fatal error: could not build module '_Builtin_intrinsics'; Error: Module '_Builtin_intrinsics' failed to load.; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; Error: Error loading the default rootcling header files.; make[3]: *** [core/CMakeFiles/G__Core.dir/build.make:481: core/G__Core.cxx] Error 1; make[3]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[2]: *** [CMakeFiles/Makefile2:6505: core/CMakeFiles/G__Core.dir/all] Error 2; make[2,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7206
https://github.com/root-project/root/issues/7206:6417,Availability,Error,Error,6417, TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/base/inc/LinkDef.h; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; <<< cling interactive line includer >>>: fatal error: could not build module '_Builtin_intrinsics'; Error: Module '_Builtin_intrinsics' failed to load.; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; Error: Error loading the default rootcling header files.; make[3]: *** [core/CMakeFiles/G__Core.dir/build.make:481: core/G__Core.cxx] Error 1; make[3]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[2]: *** [CMakeFiles/Makefile2:6505: core/CMakeFiles/G__Core.dir/all] Error 2; make[2,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7206
https://github.com/root-project/root/issues/7206:6476,Availability,error,error,6476, TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/base/inc/LinkDef.h; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; <<< cling interactive line includer >>>: fatal error: could not build module '_Builtin_intrinsics'; Error: Module '_Builtin_intrinsics' failed to load.; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; Error: Error loading the default rootcling header files.; make[3]: *** [core/CMakeFiles/G__Core.dir/build.make:481: core/G__Core.cxx] Error 1; make[3]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[2]: *** [CMakeFiles/Makefile2:6505: core/CMakeFiles/G__Core.dir/all] Error 2; make[2]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[1]: *** [CMakeFiles/Makefile2:6484: core/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7206
https://github.com/root-project/root/issues/7206:6619,Availability,error,error,6619,nt.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/base/inc/LinkDef.h; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; <<< cling interactive line includer >>>: fatal error: could not build module '_Builtin_intrinsics'; Error: Module '_Builtin_intrinsics' failed to load.; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; Error: Error loading the default rootcling header files.; make[3]: *** [core/CMakeFiles/G__Core.dir/build.make:481: core/G__Core.cxx] Error 1; make[3]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[2]: *** [CMakeFiles/Makefile2:6505: core/CMakeFiles/G__Core.dir/all] Error 2; make[2]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[1]: *** [CMakeFiles/Makefile2:6484: core/CMakeFiles/Core.dir/rule] Error 2; make[1]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/bu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7206
https://github.com/root-project/root/issues/7206:6762,Availability,error,error,6762,root/build_artifacts/debug_1613296575343/work/root-source/core/base/inc/LinkDef.h; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; <<< cling interactive line includer >>>: fatal error: could not build module '_Builtin_intrinsics'; Error: Module '_Builtin_intrinsics' failed to load.; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; Error: Error loading the default rootcling header files.; make[3]: *** [core/CMakeFiles/G__Core.dir/build.make:481: core/G__Core.cxx] Error 1; make[3]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[2]: *** [CMakeFiles/Makefile2:6505: core/CMakeFiles/G__Core.dir/all] Error 2; make[2]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[1]: *** [CMakeFiles/Makefile2:6484: core/CMakeFiles/Core.dir/rule] Error 2; make[1]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make: *** [Makefile:762: Core] Error 2; ```. ## How cling was built. Cling is being built from https://github.com/vgvassilev/cling/tr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7206
https://github.com/root-project/root/issues/7206:6905,Availability,error,error,6905,ld_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; <<< cling interactive line includer >>>: fatal error: could not build module '_Builtin_intrinsics'; Error: Module '_Builtin_intrinsics' failed to load.; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; Error: Error loading the default rootcling header files.; make[3]: *** [core/CMakeFiles/G__Core.dir/build.make:481: core/G__Core.cxx] Error 1; make[3]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[2]: *** [CMakeFiles/Makefile2:6505: core/CMakeFiles/G__Core.dir/all] Error 2; make[2]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[1]: *** [CMakeFiles/Makefile2:6484: core/CMakeFiles/Core.dir/rule] Error 2; make[1]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make: *** [Makefile:762: Core] Error 2; ```. ## How cling was built. Cling is being built from https://github.com/vgvassilev/cling/tree/upgrade_llvm90 with two patches added:. * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2caeae93600449d439/recipe/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7206
https://github.com/root-project/root/issues/7206:7042,Availability,Error,Error,7042, '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; <<< cling interactive line includer >>>: fatal error: could not build module '_Builtin_intrinsics'; Error: Module '_Builtin_intrinsics' failed to load.; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; Error: Error loading the default rootcling header files.; make[3]: *** [core/CMakeFiles/G__Core.dir/build.make:481: core/G__Core.cxx] Error 1; make[3]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[2]: *** [CMakeFiles/Makefile2:6505: core/CMakeFiles/G__Core.dir/all] Error 2; make[2]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[1]: *** [CMakeFiles/Makefile2:6484: core/CMakeFiles/Core.dir/rule] Error 2; make[1]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make: *** [Makefile:762: Core] Error 2; ```. ## How cling was built. Cling is being built from https://github.com/vgvassilev/cling/tree/upgrade_llvm90 with two patches added:. * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2caeae93600449d439/recipe/use-findpackage.patch (see #7176); * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7206
https://github.com/root-project/root/issues/7206:7049,Availability,Error,Error,7049, '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; <<< cling interactive line includer >>>: fatal error: could not build module '_Builtin_intrinsics'; Error: Module '_Builtin_intrinsics' failed to load.; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; Error: Error loading the default rootcling header files.; make[3]: *** [core/CMakeFiles/G__Core.dir/build.make:481: core/G__Core.cxx] Error 1; make[3]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[2]: *** [CMakeFiles/Makefile2:6505: core/CMakeFiles/G__Core.dir/all] Error 2; make[2]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[1]: *** [CMakeFiles/Makefile2:6484: core/CMakeFiles/Core.dir/rule] Error 2; make[1]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make: *** [Makefile:762: Core] Error 2; ```. ## How cling was built. Cling is being built from https://github.com/vgvassilev/cling/tree/upgrade_llvm90 with two patches added:. * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2caeae93600449d439/recipe/use-findpackage.patch (see #7176); * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7206
https://github.com/root-project/root/issues/7206:7176,Availability,Error,Error,7176,43/_h_env/include/cling/module.modulemap' not found; <<< cling interactive line includer >>>: fatal error: could not build module '_Builtin_intrinsics'; Error: Module '_Builtin_intrinsics' failed to load.; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; Error: Error loading the default rootcling header files.; make[3]: *** [core/CMakeFiles/G__Core.dir/build.make:481: core/G__Core.cxx] Error 1; make[3]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[2]: *** [CMakeFiles/Makefile2:6505: core/CMakeFiles/G__Core.dir/all] Error 2; make[2]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[1]: *** [CMakeFiles/Makefile2:6484: core/CMakeFiles/Core.dir/rule] Error 2; make[1]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make: *** [Makefile:762: Core] Error 2; ```. ## How cling was built. Cling is being built from https://github.com/vgvassilev/cling/tree/upgrade_llvm90 with two patches added:. * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2caeae93600449d439/recipe/use-findpackage.patch (see #7176); * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2caeae93600449d439/recipe/Always-install-ClingTargets.patch. ## Reproducer. This should work on any machine with docker installed:. ```bash; git clone https://github.com/chrisburr/root-feedstock.git -b llvm9,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7206
https://github.com/root-project/root/issues/7206:7367,Availability,Error,Error,7367, failed to load.; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; Error: Error loading the default rootcling header files.; make[3]: *** [core/CMakeFiles/G__Core.dir/build.make:481: core/G__Core.cxx] Error 1; make[3]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[2]: *** [CMakeFiles/Makefile2:6505: core/CMakeFiles/G__Core.dir/all] Error 2; make[2]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[1]: *** [CMakeFiles/Makefile2:6484: core/CMakeFiles/Core.dir/rule] Error 2; make[1]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make: *** [Makefile:762: Core] Error 2; ```. ## How cling was built. Cling is being built from https://github.com/vgvassilev/cling/tree/upgrade_llvm90 with two patches added:. * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2caeae93600449d439/recipe/use-findpackage.patch (see #7176); * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2caeae93600449d439/recipe/Always-install-ClingTargets.patch. ## Reproducer. This should work on any machine with docker installed:. ```bash; git clone https://github.com/chrisburr/root-feedstock.git -b llvm90-install-error; cd root-feedstock; export CPU_COUNT=$(nproc); ./build-locally.py --debug linux_64_numpy1.16python3.8.____cpython; # Run the line printed which will be similar to; cd xxxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7206
https://github.com/root-project/root/issues/7206:7556,Availability,Error,Error,7556,acts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; Error: Error loading the default rootcling header files.; make[3]: *** [core/CMakeFiles/G__Core.dir/build.make:481: core/G__Core.cxx] Error 1; make[3]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[2]: *** [CMakeFiles/Makefile2:6505: core/CMakeFiles/G__Core.dir/all] Error 2; make[2]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[1]: *** [CMakeFiles/Makefile2:6484: core/CMakeFiles/Core.dir/rule] Error 2; make[1]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make: *** [Makefile:762: Core] Error 2; ```. ## How cling was built. Cling is being built from https://github.com/vgvassilev/cling/tree/upgrade_llvm90 with two patches added:. * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2caeae93600449d439/recipe/use-findpackage.patch (see #7176); * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2caeae93600449d439/recipe/Always-install-ClingTargets.patch. ## Reproducer. This should work on any machine with docker installed:. ```bash; git clone https://github.com/chrisburr/root-feedstock.git -b llvm90-install-error; cd root-feedstock; export CPU_COUNT=$(nproc); ./build-locally.py --debug linux_64_numpy1.16python3.8.____cpython; # Run the line printed which will be similar to; cd xxxx && source xxxx; source /home/conda/recipe_root/build.sh; make Core VERBOSE=1 -j1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7206
https://github.com/root-project/root/issues/7206:7704,Availability,Error,Error,7704,acts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; Error: Error loading the default rootcling header files.; make[3]: *** [core/CMakeFiles/G__Core.dir/build.make:481: core/G__Core.cxx] Error 1; make[3]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[2]: *** [CMakeFiles/Makefile2:6505: core/CMakeFiles/G__Core.dir/all] Error 2; make[2]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[1]: *** [CMakeFiles/Makefile2:6484: core/CMakeFiles/Core.dir/rule] Error 2; make[1]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make: *** [Makefile:762: Core] Error 2; ```. ## How cling was built. Cling is being built from https://github.com/vgvassilev/cling/tree/upgrade_llvm90 with two patches added:. * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2caeae93600449d439/recipe/use-findpackage.patch (see #7176); * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2caeae93600449d439/recipe/Always-install-ClingTargets.patch. ## Reproducer. This should work on any machine with docker installed:. ```bash; git clone https://github.com/chrisburr/root-feedstock.git -b llvm90-install-error; cd root-feedstock; export CPU_COUNT=$(nproc); ./build-locally.py --debug linux_64_numpy1.16python3.8.____cpython; # Run the line printed which will be similar to; cd xxxx && source xxxx; source /home/conda/recipe_root/build.sh; make Core VERBOSE=1 -j1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7206
https://github.com/root-project/root/issues/7206:8275,Availability,error,error,8275,acts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; Error: Error loading the default rootcling header files.; make[3]: *** [core/CMakeFiles/G__Core.dir/build.make:481: core/G__Core.cxx] Error 1; make[3]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[2]: *** [CMakeFiles/Makefile2:6505: core/CMakeFiles/G__Core.dir/all] Error 2; make[2]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[1]: *** [CMakeFiles/Makefile2:6484: core/CMakeFiles/Core.dir/rule] Error 2; make[1]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make: *** [Makefile:762: Core] Error 2; ```. ## How cling was built. Cling is being built from https://github.com/vgvassilev/cling/tree/upgrade_llvm90 with two patches added:. * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2caeae93600449d439/recipe/use-findpackage.patch (see #7176); * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2caeae93600449d439/recipe/Always-install-ClingTargets.patch. ## Reproducer. This should work on any machine with docker installed:. ```bash; git clone https://github.com/chrisburr/root-feedstock.git -b llvm90-install-error; cd root-feedstock; export CPU_COUNT=$(nproc); ./build-locally.py --debug linux_64_numpy1.16python3.8.____cpython; # Run the line printed which will be similar to; cd xxxx && source xxxx; source /home/conda/recipe_root/build.sh; make Core VERBOSE=1 -j1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7206
https://github.com/root-project/root/issues/7206:7833,Deployability,patch,patches,7833,acts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; Error: Error loading the default rootcling header files.; make[3]: *** [core/CMakeFiles/G__Core.dir/build.make:481: core/G__Core.cxx] Error 1; make[3]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[2]: *** [CMakeFiles/Makefile2:6505: core/CMakeFiles/G__Core.dir/all] Error 2; make[2]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[1]: *** [CMakeFiles/Makefile2:6484: core/CMakeFiles/Core.dir/rule] Error 2; make[1]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make: *** [Makefile:762: Core] Error 2; ```. ## How cling was built. Cling is being built from https://github.com/vgvassilev/cling/tree/upgrade_llvm90 with two patches added:. * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2caeae93600449d439/recipe/use-findpackage.patch (see #7176); * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2caeae93600449d439/recipe/Always-install-ClingTargets.patch. ## Reproducer. This should work on any machine with docker installed:. ```bash; git clone https://github.com/chrisburr/root-feedstock.git -b llvm90-install-error; cd root-feedstock; export CPU_COUNT=$(nproc); ./build-locally.py --debug linux_64_numpy1.16python3.8.____cpython; # Run the line printed which will be similar to; cd xxxx && source xxxx; source /home/conda/recipe_root/build.sh; make Core VERBOSE=1 -j1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7206
https://github.com/root-project/root/issues/7206:7965,Deployability,patch,patch,7965,acts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; Error: Error loading the default rootcling header files.; make[3]: *** [core/CMakeFiles/G__Core.dir/build.make:481: core/G__Core.cxx] Error 1; make[3]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[2]: *** [CMakeFiles/Makefile2:6505: core/CMakeFiles/G__Core.dir/all] Error 2; make[2]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[1]: *** [CMakeFiles/Makefile2:6484: core/CMakeFiles/Core.dir/rule] Error 2; make[1]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make: *** [Makefile:762: Core] Error 2; ```. ## How cling was built. Cling is being built from https://github.com/vgvassilev/cling/tree/upgrade_llvm90 with two patches added:. * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2caeae93600449d439/recipe/use-findpackage.patch (see #7176); * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2caeae93600449d439/recipe/Always-install-ClingTargets.patch. ## Reproducer. This should work on any machine with docker installed:. ```bash; git clone https://github.com/chrisburr/root-feedstock.git -b llvm90-install-error; cd root-feedstock; export CPU_COUNT=$(nproc); ./build-locally.py --debug linux_64_numpy1.16python3.8.____cpython; # Run the line printed which will be similar to; cd xxxx && source xxxx; source /home/conda/recipe_root/build.sh; make Core VERBOSE=1 -j1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7206
https://github.com/root-project/root/issues/7206:8091,Deployability,install,install-ClingTargets,8091,acts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; Error: Error loading the default rootcling header files.; make[3]: *** [core/CMakeFiles/G__Core.dir/build.make:481: core/G__Core.cxx] Error 1; make[3]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[2]: *** [CMakeFiles/Makefile2:6505: core/CMakeFiles/G__Core.dir/all] Error 2; make[2]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[1]: *** [CMakeFiles/Makefile2:6484: core/CMakeFiles/Core.dir/rule] Error 2; make[1]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make: *** [Makefile:762: Core] Error 2; ```. ## How cling was built. Cling is being built from https://github.com/vgvassilev/cling/tree/upgrade_llvm90 with two patches added:. * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2caeae93600449d439/recipe/use-findpackage.patch (see #7176); * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2caeae93600449d439/recipe/Always-install-ClingTargets.patch. ## Reproducer. This should work on any machine with docker installed:. ```bash; git clone https://github.com/chrisburr/root-feedstock.git -b llvm90-install-error; cd root-feedstock; export CPU_COUNT=$(nproc); ./build-locally.py --debug linux_64_numpy1.16python3.8.____cpython; # Run the line printed which will be similar to; cd xxxx && source xxxx; source /home/conda/recipe_root/build.sh; make Core VERBOSE=1 -j1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7206
https://github.com/root-project/root/issues/7206:8112,Deployability,patch,patch,8112,acts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; Error: Error loading the default rootcling header files.; make[3]: *** [core/CMakeFiles/G__Core.dir/build.make:481: core/G__Core.cxx] Error 1; make[3]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[2]: *** [CMakeFiles/Makefile2:6505: core/CMakeFiles/G__Core.dir/all] Error 2; make[2]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[1]: *** [CMakeFiles/Makefile2:6484: core/CMakeFiles/Core.dir/rule] Error 2; make[1]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make: *** [Makefile:762: Core] Error 2; ```. ## How cling was built. Cling is being built from https://github.com/vgvassilev/cling/tree/upgrade_llvm90 with two patches added:. * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2caeae93600449d439/recipe/use-findpackage.patch (see #7176); * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2caeae93600449d439/recipe/Always-install-ClingTargets.patch. ## Reproducer. This should work on any machine with docker installed:. ```bash; git clone https://github.com/chrisburr/root-feedstock.git -b llvm90-install-error; cd root-feedstock; export CPU_COUNT=$(nproc); ./build-locally.py --debug linux_64_numpy1.16python3.8.____cpython; # Run the line printed which will be similar to; cd xxxx && source xxxx; source /home/conda/recipe_root/build.sh; make Core VERBOSE=1 -j1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7206
https://github.com/root-project/root/issues/7206:8178,Deployability,install,installed,8178,acts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; Error: Error loading the default rootcling header files.; make[3]: *** [core/CMakeFiles/G__Core.dir/build.make:481: core/G__Core.cxx] Error 1; make[3]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[2]: *** [CMakeFiles/Makefile2:6505: core/CMakeFiles/G__Core.dir/all] Error 2; make[2]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[1]: *** [CMakeFiles/Makefile2:6484: core/CMakeFiles/Core.dir/rule] Error 2; make[1]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make: *** [Makefile:762: Core] Error 2; ```. ## How cling was built. Cling is being built from https://github.com/vgvassilev/cling/tree/upgrade_llvm90 with two patches added:. * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2caeae93600449d439/recipe/use-findpackage.patch (see #7176); * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2caeae93600449d439/recipe/Always-install-ClingTargets.patch. ## Reproducer. This should work on any machine with docker installed:. ```bash; git clone https://github.com/chrisburr/root-feedstock.git -b llvm90-install-error; cd root-feedstock; export CPU_COUNT=$(nproc); ./build-locally.py --debug linux_64_numpy1.16python3.8.____cpython; # Run the line printed which will be similar to; cd xxxx && source xxxx; source /home/conda/recipe_root/build.sh; make Core VERBOSE=1 -j1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7206
https://github.com/root-project/root/issues/7206:8267,Deployability,install,install-error,8267,acts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; Error: Error loading the default rootcling header files.; make[3]: *** [core/CMakeFiles/G__Core.dir/build.make:481: core/G__Core.cxx] Error 1; make[3]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[2]: *** [CMakeFiles/Makefile2:6505: core/CMakeFiles/G__Core.dir/all] Error 2; make[2]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[1]: *** [CMakeFiles/Makefile2:6484: core/CMakeFiles/Core.dir/rule] Error 2; make[1]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make: *** [Makefile:762: Core] Error 2; ```. ## How cling was built. Cling is being built from https://github.com/vgvassilev/cling/tree/upgrade_llvm90 with two patches added:. * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2caeae93600449d439/recipe/use-findpackage.patch (see #7176); * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2caeae93600449d439/recipe/Always-install-ClingTargets.patch. ## Reproducer. This should work on any machine with docker installed:. ```bash; git clone https://github.com/chrisburr/root-feedstock.git -b llvm90-install-error; cd root-feedstock; export CPU_COUNT=$(nproc); ./build-locally.py --debug linux_64_numpy1.16python3.8.____cpython; # Run the line printed which will be similar to; cd xxxx && source xxxx; source /home/conda/recipe_root/build.sh; make Core VERBOSE=1 -j1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7206
https://github.com/root-project/root/issues/7206:3103,Integrability,Message,MessageTypes,3103,c -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/rint/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/zip/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/thread/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/textinput/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/clingutils/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/base/v7/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/foundation/v7/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/unix/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad.h TVirtualPadPain,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7206
https://github.com/root-project/root/issues/7206:6463,Performance,load,load,6463, TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/base/inc/LinkDef.h; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; <<< cling interactive line includer >>>: fatal error: could not build module '_Builtin_intrinsics'; Error: Module '_Builtin_intrinsics' failed to load.; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; Error: Error loading the default rootcling header files.; make[3]: *** [core/CMakeFiles/G__Core.dir/build.make:481: core/G__Core.cxx] Error 1; make[3]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[2]: *** [CMakeFiles/Makefile2:6505: core/CMakeFiles/G__Core.dir/all] Error 2; make[2,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7206
https://github.com/root-project/root/issues/7206:7055,Performance,load,loading,7055, '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; <<< cling interactive line includer >>>: fatal error: could not build module '_Builtin_intrinsics'; Error: Module '_Builtin_intrinsics' failed to load.; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; Error: Error loading the default rootcling header files.; make[3]: *** [core/CMakeFiles/G__Core.dir/build.make:481: core/G__Core.cxx] Error 1; make[3]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[2]: *** [CMakeFiles/Makefile2:6505: core/CMakeFiles/G__Core.dir/all] Error 2; make[2]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[1]: *** [CMakeFiles/Makefile2:6484: core/CMakeFiles/Core.dir/rule] Error 2; make[1]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make: *** [Makefile:762: Core] Error 2; ```. ## How cling was built. Cling is being built from https://github.com/vgvassilev/cling/tree/upgrade_llvm90 with two patches added:. * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2caeae93600449d439/recipe/use-findpackage.patch (see #7176); * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7206
https://github.com/root-project/root/issues/7206:171,Testability,log,log,171,"When building with #6385 I get the following error when building with `builtin_cling=OFF`. I haven't investigated in detail so it could be something wrong on my part:. ```log; [ 96%] Generating G__Core.cxx, ../lib/Core.pcm; cd /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir/core && /home/conda/feedstock_root/build_artifacts/debug_1613296575343/_build_env/bin/cmake -E env LD_LIBRARY_PATH=/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir/lib: /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir/lib/libCore.so -excludePath /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source -excludePath /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir/ginclude -excludePath /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir/externals -excludePath /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir/include -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir/ginclude -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/base/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/foundation/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/cont/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/gui/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7206
https://github.com/root-project/root/issues/7207:153,Testability,log,log,153,"### Describe the bug; Valgrind reports memory leak when opening and closing ROOT, even when using the ROOT-suppression file. See attachment. ; [valgrind.log](https://github.com/root-project/root/files/5977813/valgrind.log). Definitely lost:; ```; ==25553== 16 bytes in 1 blocks are definitely lost in loss record 287 of 4,056; ==25553== at 0x4C3217F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so); ==25553== by 0x88D9187: cling::Interpreter::ShutDown() (in /opt/root_bld/lib/libCling.so); ==25553== by 0x88D942D: cling::Interpreter::~Interpreter() (in /opt/root_bld/lib/libCling.so); ==25553== by 0x88D98C8: cling::Interpreter::~Interpreter() (in /opt/root_bld/lib/libCling.so); ==25553== by 0x880DD95: TCling::~TCling() (in /opt/root_bld/lib/libCling.so); ==25553== by 0x880E048: TCling::~TCling() (in /opt/root_bld/lib/libCling.so); ==25553== by 0x52078FD: TROOT::~TROOT() (in /opt/root_bld/lib/libCore.so); ==25553== by 0x5D82160: __run_exit_handlers (exit.c:108); ==25553== by 0x5D82259: exit (exit.c:139); ==25553== by 0x5360A9A: TUnixSystem::Exit(int, bool) (in /opt/root_bld/lib/libCore.so); ==25553== by 0x521759C: TApplication::Terminate(int) (in /opt/root_bld/lib/libCore.so); ==25553== by 0x4E50BEB: TRint::Run(bool) (in /opt/root_bld/lib/libRint.so); ```; Possibly lost --> about 4000 lines of output, which make it quite challenging to find your 'own memory leaks' in your code. ### Expected behavior; No leaks are reported if the ROOT suppression file is used.; Thanks for the attention!. ### To Reproduce; valgrind --suppressions=$ROOTSYS/etc/valgrind-root.supp --leak-check=full --log-file=valgrind.log root.exe -n -l -b -q. ### Setup; 1. ROOT 6.23/01; 2. Ubuntu 18; 3. Self-built",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:218,Testability,log,log,218,"### Describe the bug; Valgrind reports memory leak when opening and closing ROOT, even when using the ROOT-suppression file. See attachment. ; [valgrind.log](https://github.com/root-project/root/files/5977813/valgrind.log). Definitely lost:; ```; ==25553== 16 bytes in 1 blocks are definitely lost in loss record 287 of 4,056; ==25553== at 0x4C3217F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so); ==25553== by 0x88D9187: cling::Interpreter::ShutDown() (in /opt/root_bld/lib/libCling.so); ==25553== by 0x88D942D: cling::Interpreter::~Interpreter() (in /opt/root_bld/lib/libCling.so); ==25553== by 0x88D98C8: cling::Interpreter::~Interpreter() (in /opt/root_bld/lib/libCling.so); ==25553== by 0x880DD95: TCling::~TCling() (in /opt/root_bld/lib/libCling.so); ==25553== by 0x880E048: TCling::~TCling() (in /opt/root_bld/lib/libCling.so); ==25553== by 0x52078FD: TROOT::~TROOT() (in /opt/root_bld/lib/libCore.so); ==25553== by 0x5D82160: __run_exit_handlers (exit.c:108); ==25553== by 0x5D82259: exit (exit.c:139); ==25553== by 0x5360A9A: TUnixSystem::Exit(int, bool) (in /opt/root_bld/lib/libCore.so); ==25553== by 0x521759C: TApplication::Terminate(int) (in /opt/root_bld/lib/libCore.so); ==25553== by 0x4E50BEB: TRint::Run(bool) (in /opt/root_bld/lib/libRint.so); ```; Possibly lost --> about 4000 lines of output, which make it quite challenging to find your 'own memory leaks' in your code. ### Expected behavior; No leaks are reported if the ROOT suppression file is used.; Thanks for the attention!. ### To Reproduce; valgrind --suppressions=$ROOTSYS/etc/valgrind-root.supp --leak-check=full --log-file=valgrind.log root.exe -n -l -b -q. ### Setup; 1. ROOT 6.23/01; 2. Ubuntu 18; 3. Self-built",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:1636,Testability,log,log-file,1636,"### Describe the bug; Valgrind reports memory leak when opening and closing ROOT, even when using the ROOT-suppression file. See attachment. ; [valgrind.log](https://github.com/root-project/root/files/5977813/valgrind.log). Definitely lost:; ```; ==25553== 16 bytes in 1 blocks are definitely lost in loss record 287 of 4,056; ==25553== at 0x4C3217F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so); ==25553== by 0x88D9187: cling::Interpreter::ShutDown() (in /opt/root_bld/lib/libCling.so); ==25553== by 0x88D942D: cling::Interpreter::~Interpreter() (in /opt/root_bld/lib/libCling.so); ==25553== by 0x88D98C8: cling::Interpreter::~Interpreter() (in /opt/root_bld/lib/libCling.so); ==25553== by 0x880DD95: TCling::~TCling() (in /opt/root_bld/lib/libCling.so); ==25553== by 0x880E048: TCling::~TCling() (in /opt/root_bld/lib/libCling.so); ==25553== by 0x52078FD: TROOT::~TROOT() (in /opt/root_bld/lib/libCore.so); ==25553== by 0x5D82160: __run_exit_handlers (exit.c:108); ==25553== by 0x5D82259: exit (exit.c:139); ==25553== by 0x5360A9A: TUnixSystem::Exit(int, bool) (in /opt/root_bld/lib/libCore.so); ==25553== by 0x521759C: TApplication::Terminate(int) (in /opt/root_bld/lib/libCore.so); ==25553== by 0x4E50BEB: TRint::Run(bool) (in /opt/root_bld/lib/libRint.so); ```; Possibly lost --> about 4000 lines of output, which make it quite challenging to find your 'own memory leaks' in your code. ### Expected behavior; No leaks are reported if the ROOT suppression file is used.; Thanks for the attention!. ### To Reproduce; valgrind --suppressions=$ROOTSYS/etc/valgrind-root.supp --leak-check=full --log-file=valgrind.log root.exe -n -l -b -q. ### Setup; 1. ROOT 6.23/01; 2. Ubuntu 18; 3. Self-built",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:1654,Testability,log,log,1654,"### Describe the bug; Valgrind reports memory leak when opening and closing ROOT, even when using the ROOT-suppression file. See attachment. ; [valgrind.log](https://github.com/root-project/root/files/5977813/valgrind.log). Definitely lost:; ```; ==25553== 16 bytes in 1 blocks are definitely lost in loss record 287 of 4,056; ==25553== at 0x4C3217F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so); ==25553== by 0x88D9187: cling::Interpreter::ShutDown() (in /opt/root_bld/lib/libCling.so); ==25553== by 0x88D942D: cling::Interpreter::~Interpreter() (in /opt/root_bld/lib/libCling.so); ==25553== by 0x88D98C8: cling::Interpreter::~Interpreter() (in /opt/root_bld/lib/libCling.so); ==25553== by 0x880DD95: TCling::~TCling() (in /opt/root_bld/lib/libCling.so); ==25553== by 0x880E048: TCling::~TCling() (in /opt/root_bld/lib/libCling.so); ==25553== by 0x52078FD: TROOT::~TROOT() (in /opt/root_bld/lib/libCore.so); ==25553== by 0x5D82160: __run_exit_handlers (exit.c:108); ==25553== by 0x5D82259: exit (exit.c:139); ==25553== by 0x5360A9A: TUnixSystem::Exit(int, bool) (in /opt/root_bld/lib/libCore.so); ==25553== by 0x521759C: TApplication::Terminate(int) (in /opt/root_bld/lib/libCore.so); ==25553== by 0x4E50BEB: TRint::Run(bool) (in /opt/root_bld/lib/libRint.so); ```; Possibly lost --> about 4000 lines of output, which make it quite challenging to find your 'own memory leaks' in your code. ### Expected behavior; No leaks are reported if the ROOT suppression file is used.; Thanks for the attention!. ### To Reproduce; valgrind --suppressions=$ROOTSYS/etc/valgrind-root.supp --leak-check=full --log-file=valgrind.log root.exe -n -l -b -q. ### Setup; 1. ROOT 6.23/01; 2. Ubuntu 18; 3. Self-built",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7213:2480,Availability,down,download,2480,"n.; -->; `TBrowser` is opened smoothly without being overwhelmed by the upstream folders. Possible solutions include:; * Provide an option not to follow the symlink; * Provide an option to specify the number of super-directory to show. These solution would require changes of User Interface or even the TBrowser API, but it might be useful when moving the files to somewhere with thinner directory tree is inconvenient/impossible. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Easy:. 1. `cd` into a temporary directory (`/dev/shm` would be convenient); 2. ```bash; mkdir testdir; cd testdir; for i in {1..100000}; do mkdir $i; done; cd 50000; cp /path/to/root/tutorial/hsimple.root .; root; ```; 3. Inside the ROOT interpreter,; ```ROOT; TBrowser tb; ```. Practical:; 1. Install [Nix package manager](https://nixos.org/) by executing the installation script, by setting up a NixOS, or by using the docker image.; 2. Fill `/nix/store` with packages by installing packages, `nix-shell` or `nix-build`; 2. Install ROOT by `nix-env -iA root`; 3. ```bash; cd ~/.nix-profile/tutorials; root; ```; 4. Inside the ROOT interpreter; ```ROOT; TBrowser tb; ```; 5. Since the `tutorials` is a symlink to `/nix/store/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-root-6.18.04/tutorials`, `TBrowser` will follow the symlink, try to expand `/nix/store` (where all the packages are stored), and get stuck there.; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT Version: 6.18/04; Built for linuxx8664gcc on Sep 11 2019, 15:38:23; From tags/v6-18-04@v6-18-04. Installed using nix package manager on NixOS. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7213
https://github.com/root-project/root/issues/7213:1756,Deployability,Install,Install,1756,"n.; -->; `TBrowser` is opened smoothly without being overwhelmed by the upstream folders. Possible solutions include:; * Provide an option not to follow the symlink; * Provide an option to specify the number of super-directory to show. These solution would require changes of User Interface or even the TBrowser API, but it might be useful when moving the files to somewhere with thinner directory tree is inconvenient/impossible. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Easy:. 1. `cd` into a temporary directory (`/dev/shm` would be convenient); 2. ```bash; mkdir testdir; cd testdir; for i in {1..100000}; do mkdir $i; done; cd 50000; cp /path/to/root/tutorial/hsimple.root .; root; ```; 3. Inside the ROOT interpreter,; ```ROOT; TBrowser tb; ```. Practical:; 1. Install [Nix package manager](https://nixos.org/) by executing the installation script, by setting up a NixOS, or by using the docker image.; 2. Fill `/nix/store` with packages by installing packages, `nix-shell` or `nix-build`; 2. Install ROOT by `nix-env -iA root`; 3. ```bash; cd ~/.nix-profile/tutorials; root; ```; 4. Inside the ROOT interpreter; ```ROOT; TBrowser tb; ```; 5. Since the `tutorials` is a symlink to `/nix/store/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-root-6.18.04/tutorials`, `TBrowser` will follow the symlink, try to expand `/nix/store` (where all the packages are stored), and get stuck there.; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT Version: 6.18/04; Built for linuxx8664gcc on Sep 11 2019, 15:38:23; From tags/v6-18-04@v6-18-04. Installed using nix package manager on NixOS. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7213
https://github.com/root-project/root/issues/7213:1823,Deployability,install,installation,1823,"n.; -->; `TBrowser` is opened smoothly without being overwhelmed by the upstream folders. Possible solutions include:; * Provide an option not to follow the symlink; * Provide an option to specify the number of super-directory to show. These solution would require changes of User Interface or even the TBrowser API, but it might be useful when moving the files to somewhere with thinner directory tree is inconvenient/impossible. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Easy:. 1. `cd` into a temporary directory (`/dev/shm` would be convenient); 2. ```bash; mkdir testdir; cd testdir; for i in {1..100000}; do mkdir $i; done; cd 50000; cp /path/to/root/tutorial/hsimple.root .; root; ```; 3. Inside the ROOT interpreter,; ```ROOT; TBrowser tb; ```. Practical:; 1. Install [Nix package manager](https://nixos.org/) by executing the installation script, by setting up a NixOS, or by using the docker image.; 2. Fill `/nix/store` with packages by installing packages, `nix-shell` or `nix-build`; 2. Install ROOT by `nix-env -iA root`; 3. ```bash; cd ~/.nix-profile/tutorials; root; ```; 4. Inside the ROOT interpreter; ```ROOT; TBrowser tb; ```; 5. Since the `tutorials` is a symlink to `/nix/store/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-root-6.18.04/tutorials`, `TBrowser` will follow the symlink, try to expand `/nix/store` (where all the packages are stored), and get stuck there.; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT Version: 6.18/04; Built for linuxx8664gcc on Sep 11 2019, 15:38:23; From tags/v6-18-04@v6-18-04. Installed using nix package manager on NixOS. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7213
https://github.com/root-project/root/issues/7213:1936,Deployability,install,installing,1936,"n.; -->; `TBrowser` is opened smoothly without being overwhelmed by the upstream folders. Possible solutions include:; * Provide an option not to follow the symlink; * Provide an option to specify the number of super-directory to show. These solution would require changes of User Interface or even the TBrowser API, but it might be useful when moving the files to somewhere with thinner directory tree is inconvenient/impossible. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Easy:. 1. `cd` into a temporary directory (`/dev/shm` would be convenient); 2. ```bash; mkdir testdir; cd testdir; for i in {1..100000}; do mkdir $i; done; cd 50000; cp /path/to/root/tutorial/hsimple.root .; root; ```; 3. Inside the ROOT interpreter,; ```ROOT; TBrowser tb; ```. Practical:; 1. Install [Nix package manager](https://nixos.org/) by executing the installation script, by setting up a NixOS, or by using the docker image.; 2. Fill `/nix/store` with packages by installing packages, `nix-shell` or `nix-build`; 2. Install ROOT by `nix-env -iA root`; 3. ```bash; cd ~/.nix-profile/tutorials; root; ```; 4. Inside the ROOT interpreter; ```ROOT; TBrowser tb; ```; 5. Since the `tutorials` is a symlink to `/nix/store/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-root-6.18.04/tutorials`, `TBrowser` will follow the symlink, try to expand `/nix/store` (where all the packages are stored), and get stuck there.; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT Version: 6.18/04; Built for linuxx8664gcc on Sep 11 2019, 15:38:23; From tags/v6-18-04@v6-18-04. Installed using nix package manager on NixOS. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7213
https://github.com/root-project/root/issues/7213:1988,Deployability,Install,Install,1988,"n.; -->; `TBrowser` is opened smoothly without being overwhelmed by the upstream folders. Possible solutions include:; * Provide an option not to follow the symlink; * Provide an option to specify the number of super-directory to show. These solution would require changes of User Interface or even the TBrowser API, but it might be useful when moving the files to somewhere with thinner directory tree is inconvenient/impossible. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Easy:. 1. `cd` into a temporary directory (`/dev/shm` would be convenient); 2. ```bash; mkdir testdir; cd testdir; for i in {1..100000}; do mkdir $i; done; cd 50000; cp /path/to/root/tutorial/hsimple.root .; root; ```; 3. Inside the ROOT interpreter,; ```ROOT; TBrowser tb; ```. Practical:; 1. Install [Nix package manager](https://nixos.org/) by executing the installation script, by setting up a NixOS, or by using the docker image.; 2. Fill `/nix/store` with packages by installing packages, `nix-shell` or `nix-build`; 2. Install ROOT by `nix-env -iA root`; 3. ```bash; cd ~/.nix-profile/tutorials; root; ```; 4. Inside the ROOT interpreter; ```ROOT; TBrowser tb; ```; 5. Since the `tutorials` is a symlink to `/nix/store/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-root-6.18.04/tutorials`, `TBrowser` will follow the symlink, try to expand `/nix/store` (where all the packages are stored), and get stuck there.; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT Version: 6.18/04; Built for linuxx8664gcc on Sep 11 2019, 15:38:23; From tags/v6-18-04@v6-18-04. Installed using nix package manager on NixOS. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7213
https://github.com/root-project/root/issues/7213:2462,Deployability,install,install,2462,"n.; -->; `TBrowser` is opened smoothly without being overwhelmed by the upstream folders. Possible solutions include:; * Provide an option not to follow the symlink; * Provide an option to specify the number of super-directory to show. These solution would require changes of User Interface or even the TBrowser API, but it might be useful when moving the files to somewhere with thinner directory tree is inconvenient/impossible. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Easy:. 1. `cd` into a temporary directory (`/dev/shm` would be convenient); 2. ```bash; mkdir testdir; cd testdir; for i in {1..100000}; do mkdir $i; done; cd 50000; cp /path/to/root/tutorial/hsimple.root .; root; ```; 3. Inside the ROOT interpreter,; ```ROOT; TBrowser tb; ```. Practical:; 1. Install [Nix package manager](https://nixos.org/) by executing the installation script, by setting up a NixOS, or by using the docker image.; 2. Fill `/nix/store` with packages by installing packages, `nix-shell` or `nix-build`; 2. Install ROOT by `nix-env -iA root`; 3. ```bash; cd ~/.nix-profile/tutorials; root; ```; 4. Inside the ROOT interpreter; ```ROOT; TBrowser tb; ```; 5. Since the `tutorials` is a symlink to `/nix/store/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-root-6.18.04/tutorials`, `TBrowser` will follow the symlink, try to expand `/nix/store` (where all the packages are stored), and get stuck there.; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT Version: 6.18/04; Built for linuxx8664gcc on Sep 11 2019, 15:38:23; From tags/v6-18-04@v6-18-04. Installed using nix package manager on NixOS. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7213
https://github.com/root-project/root/issues/7213:2622,Deployability,Install,Installed,2622,"n.; -->; `TBrowser` is opened smoothly without being overwhelmed by the upstream folders. Possible solutions include:; * Provide an option not to follow the symlink; * Provide an option to specify the number of super-directory to show. These solution would require changes of User Interface or even the TBrowser API, but it might be useful when moving the files to somewhere with thinner directory tree is inconvenient/impossible. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Easy:. 1. `cd` into a temporary directory (`/dev/shm` would be convenient); 2. ```bash; mkdir testdir; cd testdir; for i in {1..100000}; do mkdir $i; done; cd 50000; cp /path/to/root/tutorial/hsimple.root .; root; ```; 3. Inside the ROOT interpreter,; ```ROOT; TBrowser tb; ```. Practical:; 1. Install [Nix package manager](https://nixos.org/) by executing the installation script, by setting up a NixOS, or by using the docker image.; 2. Fill `/nix/store` with packages by installing packages, `nix-shell` or `nix-build`; 2. Install ROOT by `nix-env -iA root`; 3. ```bash; cd ~/.nix-profile/tutorials; root; ```; 4. Inside the ROOT interpreter; ```ROOT; TBrowser tb; ```; 5. Since the `tutorials` is a symlink to `/nix/store/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-root-6.18.04/tutorials`, `TBrowser` will follow the symlink, try to expand `/nix/store` (where all the packages are stored), and get stuck there.; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT Version: 6.18/04; Built for linuxx8664gcc on Sep 11 2019, 15:38:23; From tags/v6-18-04@v6-18-04. Installed using nix package manager on NixOS. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7213
https://github.com/root-project/root/issues/7213:1029,Integrability,Interface,Interface,1029,"com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When `TBrowser` is opened, all the child items (files and folders) of the super-directories will be shown. This cause it to get stuck when one of them contains a huge amount of files and directories. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `TBrowser` is opened smoothly without being overwhelmed by the upstream folders. Possible solutions include:; * Provide an option not to follow the symlink; * Provide an option to specify the number of super-directory to show. These solution would require changes of User Interface or even the TBrowser API, but it might be useful when moving the files to somewhere with thinner directory tree is inconvenient/impossible. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Easy:. 1. `cd` into a temporary directory (`/dev/shm` would be convenient); 2. ```bash; mkdir testdir; cd testdir; for i in {1..100000}; do mkdir $i; done; cd 50000; cp /path/to/root/tutorial/hsimple.root .; root; ```; 3. Inside the ROOT interpreter,; ```ROOT; TBrowser tb; ```. Practical:; 1. Install [Nix package manager](https://nixos.org/) by executing the installation script, by setting up a NixOS, or by using the docker image.; 2. Fill `/nix/store` with packages by installing packages, `nix-shell` or `nix-build`; 2. Install ROOT by `nix-env -iA root`; 3. ```bash; cd ~/.nix-profile/tutorials; root; ```; 4. In",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7213
https://github.com/root-project/root/issues/7213:1556,Testability,test,testdir,1556," This cause it to get stuck when one of them contains a huge amount of files and directories. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `TBrowser` is opened smoothly without being overwhelmed by the upstream folders. Possible solutions include:; * Provide an option not to follow the symlink; * Provide an option to specify the number of super-directory to show. These solution would require changes of User Interface or even the TBrowser API, but it might be useful when moving the files to somewhere with thinner directory tree is inconvenient/impossible. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Easy:. 1. `cd` into a temporary directory (`/dev/shm` would be convenient); 2. ```bash; mkdir testdir; cd testdir; for i in {1..100000}; do mkdir $i; done; cd 50000; cp /path/to/root/tutorial/hsimple.root .; root; ```; 3. Inside the ROOT interpreter,; ```ROOT; TBrowser tb; ```. Practical:; 1. Install [Nix package manager](https://nixos.org/) by executing the installation script, by setting up a NixOS, or by using the docker image.; 2. Fill `/nix/store` with packages by installing packages, `nix-shell` or `nix-build`; 2. Install ROOT by `nix-env -iA root`; 3. ```bash; cd ~/.nix-profile/tutorials; root; ```; 4. Inside the ROOT interpreter; ```ROOT; TBrowser tb; ```; 5. Since the `tutorials` is a symlink to `/nix/store/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-root-6.18.04/tutorials`, `TBrowser` will follow the symlink, try to expand `/nix/store` (where all the packages are stored), and get stuck there.; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT Version: 6.18/04; Built for linuxx8664gc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7213
https://github.com/root-project/root/issues/7213:1568,Testability,test,testdir,1568," This cause it to get stuck when one of them contains a huge amount of files and directories. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `TBrowser` is opened smoothly without being overwhelmed by the upstream folders. Possible solutions include:; * Provide an option not to follow the symlink; * Provide an option to specify the number of super-directory to show. These solution would require changes of User Interface or even the TBrowser API, but it might be useful when moving the files to somewhere with thinner directory tree is inconvenient/impossible. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Easy:. 1. `cd` into a temporary directory (`/dev/shm` would be convenient); 2. ```bash; mkdir testdir; cd testdir; for i in {1..100000}; do mkdir $i; done; cd 50000; cp /path/to/root/tutorial/hsimple.root .; root; ```; 3. Inside the ROOT interpreter,; ```ROOT; TBrowser tb; ```. Practical:; 1. Install [Nix package manager](https://nixos.org/) by executing the installation script, by setting up a NixOS, or by using the docker image.; 2. Fill `/nix/store` with packages by installing packages, `nix-shell` or `nix-build`; 2. Install ROOT by `nix-env -iA root`; 3. ```bash; cd ~/.nix-profile/tutorials; root; ```; 4. Inside the ROOT interpreter; ```ROOT; TBrowser tb; ```; 5. Since the `tutorials` is a symlink to `/nix/store/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-root-6.18.04/tutorials`, `TBrowser` will follow the symlink, try to expand `/nix/store` (where all the packages are stored), and get stuck there.; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT Version: 6.18/04; Built for linuxx8664gc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7213
https://github.com/root-project/root/issues/7213:391,Usability,clear,clear,391,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When `TBrowser` is opened, all the child items (files and folders) of the super-directories will be shown. This cause it to get stuck when one of them contains a huge amount of files and directories. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `TBrowser` is opened smoothly without being overwhelmed by the upstream folders. Possible solutions include:; * Provide an option not to follow the symlink; * Provide an option to specify the number of super-directory to show. These solution would require changes of User Interface or even the TBrowser API, but it might be useful when moving the files to somewhere with thinner directory tree is inconvenient/impossible. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Easy:. 1. `cd` into a temporary directory (`/dev/shm` would be convenient); 2. ```bash; mkdir testdir; cd testdir; for i in {1..100000}; do mkdir $i; done; cd 50000; cp /path/to/root/tutorial/hsimple.root .; root; ```; 3. Inside the ROOT interpreter,; ```ROOT; TBrowser tb; ```. Practical:; 1. Install [Nix package manager](https://nixos.org/) by executing the installation script, by setting up a NixOS, or by using the docker image.; 2. Fill `/nix/store` with packages by installing packages, `nix-shell` or `nix-build`; 2. Install ROOT ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7213
https://github.com/root-project/root/issues/7213:689,Usability,clear,clear,689,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When `TBrowser` is opened, all the child items (files and folders) of the super-directories will be shown. This cause it to get stuck when one of them contains a huge amount of files and directories. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `TBrowser` is opened smoothly without being overwhelmed by the upstream folders. Possible solutions include:; * Provide an option not to follow the symlink; * Provide an option to specify the number of super-directory to show. These solution would require changes of User Interface or even the TBrowser API, but it might be useful when moving the files to somewhere with thinner directory tree is inconvenient/impossible. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Easy:. 1. `cd` into a temporary directory (`/dev/shm` would be convenient); 2. ```bash; mkdir testdir; cd testdir; for i in {1..100000}; do mkdir $i; done; cd 50000; cp /path/to/root/tutorial/hsimple.root .; root; ```; 3. Inside the ROOT interpreter,; ```ROOT; TBrowser tb; ```. Practical:; 1. Install [Nix package manager](https://nixos.org/) by executing the installation script, by setting up a NixOS, or by using the docker image.; 2. Fill `/nix/store` with packages by installing packages, `nix-shell` or `nix-build`; 2. Install ROOT ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7213
https://github.com/root-project/root/pull/7214:67,Deployability,release,releases,67,A lot of interesting improvements https://github.com/facebook/zstd/releases/tag/v1.4.7; (bugfix release: https://github.com/facebook/zstd/releases/tag/v1.4.8),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7214
https://github.com/root-project/root/pull/7214:96,Deployability,release,release,96,A lot of interesting improvements https://github.com/facebook/zstd/releases/tag/v1.4.7; (bugfix release: https://github.com/facebook/zstd/releases/tag/v1.4.8),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7214
https://github.com/root-project/root/pull/7214:138,Deployability,release,releases,138,A lot of interesting improvements https://github.com/facebook/zstd/releases/tag/v1.4.7; (bugfix release: https://github.com/facebook/zstd/releases/tag/v1.4.8),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7214
https://github.com/root-project/root/issues/7216:497,Deployability,Install,Installation,497,"### Explain what you would like to see improved; The TThread HTML documentation speaks about having to compile with special ./configure flags, see. https://github.com/root-project/root/blob/f8efb11a51cbe5b5152ebef19a4f7b78744ca2fa/documentation/users-guide/Threads.md. ### Optional: share how it could be improved; Change it to the corresponding CMake flags, or clarify if it is still needed. ### To Reproduce; Open https://root.cern.ch/root/htmldoc/guides/users-guide/Threads.html and check the ""Installation section""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:126,Modifiability,config,configure,126,"### Explain what you would like to see improved; The TThread HTML documentation speaks about having to compile with special ./configure flags, see. https://github.com/root-project/root/blob/f8efb11a51cbe5b5152ebef19a4f7b78744ca2fa/documentation/users-guide/Threads.md. ### Optional: share how it could be improved; Change it to the corresponding CMake flags, or clarify if it is still needed. ### To Reproduce; Open https://root.cern.ch/root/htmldoc/guides/users-guide/Threads.html and check the ""Installation section""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:251,Usability,guid,guide,251,"### Explain what you would like to see improved; The TThread HTML documentation speaks about having to compile with special ./configure flags, see. https://github.com/root-project/root/blob/f8efb11a51cbe5b5152ebef19a4f7b78744ca2fa/documentation/users-guide/Threads.md. ### Optional: share how it could be improved; Change it to the corresponding CMake flags, or clarify if it is still needed. ### To Reproduce; Open https://root.cern.ch/root/htmldoc/guides/users-guide/Threads.html and check the ""Installation section""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:450,Usability,guid,guides,450,"### Explain what you would like to see improved; The TThread HTML documentation speaks about having to compile with special ./configure flags, see. https://github.com/root-project/root/blob/f8efb11a51cbe5b5152ebef19a4f7b78744ca2fa/documentation/users-guide/Threads.md. ### Optional: share how it could be improved; Change it to the corresponding CMake flags, or clarify if it is still needed. ### To Reproduce; Open https://root.cern.ch/root/htmldoc/guides/users-guide/Threads.html and check the ""Installation section""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:463,Usability,guid,guide,463,"### Explain what you would like to see improved; The TThread HTML documentation speaks about having to compile with special ./configure flags, see. https://github.com/root-project/root/blob/f8efb11a51cbe5b5152ebef19a4f7b78744ca2fa/documentation/users-guide/Threads.md. ### Optional: share how it could be improved; Change it to the corresponding CMake flags, or clarify if it is still needed. ### To Reproduce; Open https://root.cern.ch/root/htmldoc/guides/users-guide/Threads.html and check the ""Installation section""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/pull/7218:7,Performance,load,load,7,Simply load MultiView.C macro and does not try to compile it; It only defines some simple service GUI structures,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7218
https://github.com/root-project/root/pull/7218:0,Usability,Simpl,Simply,0,Simply load MultiView.C macro and does not try to compile it; It only defines some simple service GUI structures,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7218
https://github.com/root-project/root/pull/7218:83,Usability,simpl,simple,83,Simply load MultiView.C macro and does not try to compile it; It only defines some simple service GUI structures,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7218
https://github.com/root-project/root/pull/7219:63,Availability,error,error,63,"Include two new status values, may cause problem when; showing error messages for such value",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7219
https://github.com/root-project/root/pull/7219:69,Integrability,message,messages,69,"Include two new status values, may cause problem when; showing error messages for such value",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7219
https://github.com/root-project/root/pull/7222:376,Integrability,interface,interface,376,"Due to some planned major improvements to RVec (namely the addition of; a small buffer optimization) the layout of RVec objects will change in; a backward-incompatible way between v6.24 and v6.26. Because of this, we now print a warning if an application is reading or; writing a ROOT::RVec object from/to a ROOT file. We assume this is an; exceedingly rare case, as the ROOT interface typically used to; manipulate RVecs is RDataFrame, and RDataFrame performs an on-the-fly; RVec <-> std::vector conversion rather than writing RVecs to disk. Note that, currently, RVecs written e.g. in a TTree cannot be read back; using certain ROOT interfaces (e.g. TTreeReaderArray and RDataFrame).; These limitations will also be lifted in v6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7222
https://github.com/root-project/root/pull/7222:635,Integrability,interface,interfaces,635,"Due to some planned major improvements to RVec (namely the addition of; a small buffer optimization) the layout of RVec objects will change in; a backward-incompatible way between v6.24 and v6.26. Because of this, we now print a warning if an application is reading or; writing a ROOT::RVec object from/to a ROOT file. We assume this is an; exceedingly rare case, as the ROOT interface typically used to; manipulate RVecs is RDataFrame, and RDataFrame performs an on-the-fly; RVec <-> std::vector conversion rather than writing RVecs to disk. Note that, currently, RVecs written e.g. in a TTree cannot be read back; using certain ROOT interfaces (e.g. TTreeReaderArray and RDataFrame).; These limitations will also be lifted in v6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7222
https://github.com/root-project/root/pull/7222:87,Performance,optimiz,optimization,87,"Due to some planned major improvements to RVec (namely the addition of; a small buffer optimization) the layout of RVec objects will change in; a backward-incompatible way between v6.24 and v6.26. Because of this, we now print a warning if an application is reading or; writing a ROOT::RVec object from/to a ROOT file. We assume this is an; exceedingly rare case, as the ROOT interface typically used to; manipulate RVecs is RDataFrame, and RDataFrame performs an on-the-fly; RVec <-> std::vector conversion rather than writing RVecs to disk. Note that, currently, RVecs written e.g. in a TTree cannot be read back; using certain ROOT interfaces (e.g. TTreeReaderArray and RDataFrame).; These limitations will also be lifted in v6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7222
https://github.com/root-project/root/pull/7222:452,Performance,perform,performs,452,"Due to some planned major improvements to RVec (namely the addition of; a small buffer optimization) the layout of RVec objects will change in; a backward-incompatible way between v6.24 and v6.26. Because of this, we now print a warning if an application is reading or; writing a ROOT::RVec object from/to a ROOT file. We assume this is an; exceedingly rare case, as the ROOT interface typically used to; manipulate RVecs is RDataFrame, and RDataFrame performs an on-the-fly; RVec <-> std::vector conversion rather than writing RVecs to disk. Note that, currently, RVecs written e.g. in a TTree cannot be read back; using certain ROOT interfaces (e.g. TTreeReaderArray and RDataFrame).; These limitations will also be lifted in v6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7222
https://github.com/root-project/root/issues/7223:1119,Usability,clear,clear,1119,"## Is your feature request related to a problem? Please describe.; You could call it a ""problem"", yes. What we want basically is to drop out an RooDataSet directly from RDataFrame. There's two ways to do it:; #### Easy way:; - Create a loopable collection of events that drops out of RDF. Could be a std::vector, a snapshot, etc; - One by one, fill those events into RooDataSet à la https://root.cern/doc/master/rf402__datahandling_8C.html; ```c++; // Fill d with dummy values; Int_t i;; for (i = 0; i < 1000; i++) {; x = i / 50 - 10;; y = sqrt(1.0 * i);; c.setLabel((i % 2) ? ""Plus"" : ""Minus"");; ; // We must explicitly refer to x,y,c here to pass the values because; // d is not linked to them (as explained above); d.add(RooArgSet(x, y, c));; }; ```. This is going to be slow, and not so elegant. #### Requires more development, but better:; - RooDataSet should accept collections when you construct it; - Since data is stored in a `std::vector` internally, it could even `std::swap` with an external vector!; - RDataFrame should directly spit out such a collection or it should be easy to connect the two.; - It is clear that MT runs are not trivial, but maybe not a priority.; - @eguiraud what is the easiest to spit out from RDF, which is loopable, maybe even adopt the memory?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7223
https://github.com/root-project/root/pull/7226:178,Performance,optimiz,optimization,178,"It returns the `std::vector<T, RAdoptAllocator<T>>` data member by; reference, but in the near future we want to remove the data member; (in the context of adding a small buffer optimization to RVec).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7226
https://github.com/root-project/root/issues/7227:49,Deployability,Update,Update,49,"### Explain what you would like to see improved. Update the copyright years from 2020 to 2021; <!--; Explain what isn't as good as it could be and why; -->. ### Optional: share how it could be improved. Someone just needs to go to each file that has Copyright (C) 2020 and change it 2021. ; <!--; If you already have an idea what we could improve, then please tell us.; -->. ### Additional context. Add the Good-first-issue label so newcomers have something to do.; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7227
https://github.com/root-project/root/pull/7229:131,Deployability,install,installed,131,"LLVM has dropped it's svn instance, so cpt was unable to retrieve LLVM from svn (and Cling CI was failing). Also, lit is not being installed as an independent package on MacOS when being installed using Python2's pip (used to work earlier). Therefore we decided to drop Python 2 (also Python 2 has reached end of life). @Axel-Naumann This should also solve the sudo issue when running tests, that you mentioned to me around a year ago ;). Linked issue - https://github.com/root-project/cling/issues/385",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7229
https://github.com/root-project/root/pull/7229:187,Deployability,install,installed,187,"LLVM has dropped it's svn instance, so cpt was unable to retrieve LLVM from svn (and Cling CI was failing). Also, lit is not being installed as an independent package on MacOS when being installed using Python2's pip (used to work earlier). Therefore we decided to drop Python 2 (also Python 2 has reached end of life). @Axel-Naumann This should also solve the sudo issue when running tests, that you mentioned to me around a year ago ;). Linked issue - https://github.com/root-project/cling/issues/385",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7229
https://github.com/root-project/root/pull/7229:385,Testability,test,tests,385,"LLVM has dropped it's svn instance, so cpt was unable to retrieve LLVM from svn (and Cling CI was failing). Also, lit is not being installed as an independent package on MacOS when being installed using Python2's pip (used to work earlier). Therefore we decided to drop Python 2 (also Python 2 has reached end of life). @Axel-Naumann This should also solve the sudo issue when running tests, that you mentioned to me around a year ago ;). Linked issue - https://github.com/root-project/cling/issues/385",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7229
https://github.com/root-project/root/pull/7231:90,Energy Efficiency,Reduce,Reduce,90,"1. Use `=delete` specifier for non-implemented methods; 2. Use `nullptr` instead of 0; 3. Reduce some includes; 4. Fix `TGTextBuffer` - copy/assign operators were wrong, just delete them; 5. Merge LinkDef files together",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7231
https://github.com/root-project/root/pull/7234:256,Deployability,update,update,256,"I don't know if this is desirable or not, but I figured I would raise the issue. `TStreamerElement::ESTLtype` duplicates `ROOT::ESTLType` exactly, but with a lower-case `t` in `type`. It confused me when I found this out (and it turns out that I forgot to update `TStreamerElement::ESTLtype` when I updated `ROOT::ESTLType`). I could not find any usage of `TStreamerElement::ESTLType` in ROOT, and ROOT compiles just fine without the enum, but just in case someone out there is using it, I'm proposing to deprecate it in 6.24 and remove it in 6.26. Feel free to close this PR if you don't think this makes sense. UPDATE:. after discussion with @pcanal we decided that deprecation/removal is the right thing to do, and I extended the patch to `TDictionary` and `TClassEdit`. `TBufferJSON` had some usage of `TClassEdit::ESTLType` which has now been substituted with `ROOT::ESTLType`. UPDATE 2:. Since gcc 5 (the system compiler on Ubuntu 16) [does not support deprecation of enumerators](https://godbolt.org/z/1TEo5M), I'm proposing to disable `R__DEPRECATED` for that gcc version (it was already disabled for gcc 5.1 and 5.2 due to a different issue).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7234
https://github.com/root-project/root/pull/7234:299,Deployability,update,updated,299,"I don't know if this is desirable or not, but I figured I would raise the issue. `TStreamerElement::ESTLtype` duplicates `ROOT::ESTLType` exactly, but with a lower-case `t` in `type`. It confused me when I found this out (and it turns out that I forgot to update `TStreamerElement::ESTLtype` when I updated `ROOT::ESTLType`). I could not find any usage of `TStreamerElement::ESTLType` in ROOT, and ROOT compiles just fine without the enum, but just in case someone out there is using it, I'm proposing to deprecate it in 6.24 and remove it in 6.26. Feel free to close this PR if you don't think this makes sense. UPDATE:. after discussion with @pcanal we decided that deprecation/removal is the right thing to do, and I extended the patch to `TDictionary` and `TClassEdit`. `TBufferJSON` had some usage of `TClassEdit::ESTLType` which has now been substituted with `ROOT::ESTLType`. UPDATE 2:. Since gcc 5 (the system compiler on Ubuntu 16) [does not support deprecation of enumerators](https://godbolt.org/z/1TEo5M), I'm proposing to disable `R__DEPRECATED` for that gcc version (it was already disabled for gcc 5.1 and 5.2 due to a different issue).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7234
https://github.com/root-project/root/pull/7234:613,Deployability,UPDATE,UPDATE,613,"I don't know if this is desirable or not, but I figured I would raise the issue. `TStreamerElement::ESTLtype` duplicates `ROOT::ESTLType` exactly, but with a lower-case `t` in `type`. It confused me when I found this out (and it turns out that I forgot to update `TStreamerElement::ESTLtype` when I updated `ROOT::ESTLType`). I could not find any usage of `TStreamerElement::ESTLType` in ROOT, and ROOT compiles just fine without the enum, but just in case someone out there is using it, I'm proposing to deprecate it in 6.24 and remove it in 6.26. Feel free to close this PR if you don't think this makes sense. UPDATE:. after discussion with @pcanal we decided that deprecation/removal is the right thing to do, and I extended the patch to `TDictionary` and `TClassEdit`. `TBufferJSON` had some usage of `TClassEdit::ESTLType` which has now been substituted with `ROOT::ESTLType`. UPDATE 2:. Since gcc 5 (the system compiler on Ubuntu 16) [does not support deprecation of enumerators](https://godbolt.org/z/1TEo5M), I'm proposing to disable `R__DEPRECATED` for that gcc version (it was already disabled for gcc 5.1 and 5.2 due to a different issue).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7234
https://github.com/root-project/root/pull/7234:733,Deployability,patch,patch,733,"I don't know if this is desirable or not, but I figured I would raise the issue. `TStreamerElement::ESTLtype` duplicates `ROOT::ESTLType` exactly, but with a lower-case `t` in `type`. It confused me when I found this out (and it turns out that I forgot to update `TStreamerElement::ESTLtype` when I updated `ROOT::ESTLType`). I could not find any usage of `TStreamerElement::ESTLType` in ROOT, and ROOT compiles just fine without the enum, but just in case someone out there is using it, I'm proposing to deprecate it in 6.24 and remove it in 6.26. Feel free to close this PR if you don't think this makes sense. UPDATE:. after discussion with @pcanal we decided that deprecation/removal is the right thing to do, and I extended the patch to `TDictionary` and `TClassEdit`. `TBufferJSON` had some usage of `TClassEdit::ESTLType` which has now been substituted with `ROOT::ESTLType`. UPDATE 2:. Since gcc 5 (the system compiler on Ubuntu 16) [does not support deprecation of enumerators](https://godbolt.org/z/1TEo5M), I'm proposing to disable `R__DEPRECATED` for that gcc version (it was already disabled for gcc 5.1 and 5.2 due to a different issue).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7234
https://github.com/root-project/root/pull/7234:883,Deployability,UPDATE,UPDATE,883,"I don't know if this is desirable or not, but I figured I would raise the issue. `TStreamerElement::ESTLtype` duplicates `ROOT::ESTLType` exactly, but with a lower-case `t` in `type`. It confused me when I found this out (and it turns out that I forgot to update `TStreamerElement::ESTLtype` when I updated `ROOT::ESTLType`). I could not find any usage of `TStreamerElement::ESTLType` in ROOT, and ROOT compiles just fine without the enum, but just in case someone out there is using it, I'm proposing to deprecate it in 6.24 and remove it in 6.26. Feel free to close this PR if you don't think this makes sense. UPDATE:. after discussion with @pcanal we decided that deprecation/removal is the right thing to do, and I extended the patch to `TDictionary` and `TClassEdit`. `TBufferJSON` had some usage of `TClassEdit::ESTLType` which has now been substituted with `ROOT::ESTLType`. UPDATE 2:. Since gcc 5 (the system compiler on Ubuntu 16) [does not support deprecation of enumerators](https://godbolt.org/z/1TEo5M), I'm proposing to disable `R__DEPRECATED` for that gcc version (it was already disabled for gcc 5.1 and 5.2 due to a different issue).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7234
https://github.com/root-project/root/pull/7234:720,Modifiability,extend,extended,720,"I don't know if this is desirable or not, but I figured I would raise the issue. `TStreamerElement::ESTLtype` duplicates `ROOT::ESTLType` exactly, but with a lower-case `t` in `type`. It confused me when I found this out (and it turns out that I forgot to update `TStreamerElement::ESTLtype` when I updated `ROOT::ESTLType`). I could not find any usage of `TStreamerElement::ESTLType` in ROOT, and ROOT compiles just fine without the enum, but just in case someone out there is using it, I'm proposing to deprecate it in 6.24 and remove it in 6.26. Feel free to close this PR if you don't think this makes sense. UPDATE:. after discussion with @pcanal we decided that deprecation/removal is the right thing to do, and I extended the patch to `TDictionary` and `TClassEdit`. `TBufferJSON` had some usage of `TClassEdit::ESTLType` which has now been substituted with `ROOT::ESTLType`. UPDATE 2:. Since gcc 5 (the system compiler on Ubuntu 16) [does not support deprecation of enumerators](https://godbolt.org/z/1TEo5M), I'm proposing to disable `R__DEPRECATED` for that gcc version (it was already disabled for gcc 5.1 and 5.2 due to a different issue).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7234
https://github.com/root-project/root/pull/7235:165,Modifiability,refactor,refactored,165,This PR adds a simple metric (`nPagesCommitted`) to `RPageSinkFile` which is newly accessible through `RNTupleWriter`. The implementation mirrors `RNTupleReader`. I refactored the `RPageSinkFile` constructors to delegate metrics initialization to a new private constructor as in `RNTupleReader`. There are definitely many other metrics to be added.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7235
https://github.com/root-project/root/pull/7235:83,Security,access,accessible,83,This PR adds a simple metric (`nPagesCommitted`) to `RPageSinkFile` which is newly accessible through `RNTupleWriter`. The implementation mirrors `RNTupleReader`. I refactored the `RPageSinkFile` constructors to delegate metrics initialization to a new private constructor as in `RNTupleReader`. There are definitely many other metrics to be added.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7235
https://github.com/root-project/root/pull/7235:15,Usability,simpl,simple,15,This PR adds a simple metric (`nPagesCommitted`) to `RPageSinkFile` which is newly accessible through `RNTupleWriter`. The implementation mirrors `RNTupleReader`. I refactored the `RPageSinkFile` constructors to delegate metrics initialization to a new private constructor as in `RNTupleReader`. There are definitely many other metrics to be added.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7235
https://github.com/root-project/root/issues/7236:455,Testability,test,test,455,"Hello,. I observe a constant (16MB) memory increase when writing to ``TFile`` or ``TMemFile`` with ``WriteObjectAny`` a ``std::vector`` of chars (also have seen this with TArrayC). Strangely, this does not happen when writing ``vector<float>``. ; This is with ROOT 6.20/08.; Attached [demoMem.C.gz](https://github.com/root-project/root/files/5999433/demoMem.C.gz) reproduces the problem:; ````; root -b -q demoMem.C+; Memory at start of memory-based file test : write vector<unsigned char>(100000000); RSS: 429.33(delta = 429.33) VMEM: 481.59(delta = 481.59) MB; Iter: 0 Memory after writing vector<unsigned char>(100000000) : RSS: 445.76(delta = 16.43) VMEM: 577.27(delta = 95.68) MB; Iter: 1 Memory after writing vector<unsigned char>(100000000) : RSS: 461.64(delta = 15.88) VMEM: 672.46(delta = 95.18) MB; Iter: 2 Memory after writing vector<unsigned char>(100000000) : RSS: 477.64(delta = 16.00) VMEM: 767.83(delta = 95.37) MB; Iter: 3 Memory after writing vector<unsigned char>(100000000) : RSS: 493.64(delta = 16.00) VMEM: 863.20(delta = 95.37) MB; Iter: 4 Memory after writing vector<unsigned char>(100000000) : RSS: 509.65(delta = 16.00) VMEM: 958.57(delta = 95.37) MB; Iter: 5 Memory after writing vector<unsigned char>(100000000) : RSS: 525.65(delta = 16.00) VMEM: 1053.94(delta = 95.37) MB; Iter: 6 Memory after writing vector<unsigned char>(100000000) : RSS: 541.66(delta = 16.00) VMEM: 1149.31(delta = 95.37) MB; Iter: 7 Memory after writing vector<unsigned char>(100000000) : RSS: 557.66(delta = 16.00) VMEM: 1244.68(delta = 95.37) MB; Iter: 8 Memory after writing vector<unsigned char>(100000000) : RSS: 573.66(delta = 16.00) VMEM: 1340.05(delta = 95.37) MB; Iter: 9 Memory after writing vector<unsigned char>(100000000) : RSS: 589.67(delta = 16.00) VMEM: 1435.43(delta = 95.37) MB; Memory at start of memory-based file test : write vector<float>(25000000); RSS: 684.80(delta = 95.13) VMEM: 1530.80(delta = 95.37) MB; Iter: 0 Memory after writing vector<float>(25000000) : RSS: 685.59(d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:1835,Testability,test,test,1835,g vector<unsigned char>(100000000) : RSS: 477.64(delta = 16.00) VMEM: 767.83(delta = 95.37) MB; Iter: 3 Memory after writing vector<unsigned char>(100000000) : RSS: 493.64(delta = 16.00) VMEM: 863.20(delta = 95.37) MB; Iter: 4 Memory after writing vector<unsigned char>(100000000) : RSS: 509.65(delta = 16.00) VMEM: 958.57(delta = 95.37) MB; Iter: 5 Memory after writing vector<unsigned char>(100000000) : RSS: 525.65(delta = 16.00) VMEM: 1053.94(delta = 95.37) MB; Iter: 6 Memory after writing vector<unsigned char>(100000000) : RSS: 541.66(delta = 16.00) VMEM: 1149.31(delta = 95.37) MB; Iter: 7 Memory after writing vector<unsigned char>(100000000) : RSS: 557.66(delta = 16.00) VMEM: 1244.68(delta = 95.37) MB; Iter: 8 Memory after writing vector<unsigned char>(100000000) : RSS: 573.66(delta = 16.00) VMEM: 1340.05(delta = 95.37) MB; Iter: 9 Memory after writing vector<unsigned char>(100000000) : RSS: 589.67(delta = 16.00) VMEM: 1435.43(delta = 95.37) MB; Memory at start of memory-based file test : write vector<float>(25000000); RSS: 684.80(delta = 95.13) VMEM: 1530.80(delta = 95.37) MB; Iter: 0 Memory after writing vector<float>(25000000) : RSS: 685.59(delta = 0.79) VMEM: 1532.98(delta = 2.19) MB; Iter: 1 Memory after writing vector<float>(25000000) : RSS: 685.59(delta = 0.00) VMEM: 1532.98(delta = 0.00) MB; Iter: 2 Memory after writing vector<float>(25000000) : RSS: 685.59(delta = 0.00) VMEM: 1532.98(delta = 0.00) MB; Iter: 3 Memory after writing vector<float>(25000000) : RSS: 685.59(delta = 0.00) VMEM: 1532.98(delta = 0.00) MB; Iter: 4 Memory after writing vector<float>(25000000) : RSS: 685.59(delta = 0.00) VMEM: 1532.98(delta = 0.00) MB; Iter: 5 Memory after writing vector<float>(25000000) : RSS: 685.59(delta = 0.00) VMEM: 1532.98(delta = 0.00) MB; Iter: 6 Memory after writing vector<float>(25000000) : RSS: 685.59(delta = 0.00) VMEM: 1532.98(delta = 0.00) MB; Iter: 7 Memory after writing vector<float>(25000000) : RSS: 685.59(delta = 0.00) VMEM: 1532.98(delta = 0.00) MB;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/pull/7238:59,Usability,guid,guide,59,Change the comments format to make them visible in the ref guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7238
https://github.com/root-project/root/issues/7239:860,Availability,error,errors,860,"## Explain what you would like to see improved; When using [pullHist](https://root.cern.ch/doc/master/classRooPlot.html#a0d3911db1f4e0ba5cfcf9e182eea3ed0), don't take curve at bin centre, but integrate curve over the bin. That should fix the following pull plot:; | Wrong | Correct |; | ---- | ---- |; | ![oneToy_old](https://user-images.githubusercontent.com/16205615/108328256-acb8ee80-71cc-11eb-9eb1-f3edb2a3b855.png) | ![oneToy_new](https://user-images.githubusercontent.com/16205615/108328286-b5112980-71cc-11eb-9fa0-67ccba717d9b.png) |. ### Optional: share how it could be improved; - Alter this part of the function:; https://github.com/root-project/root/blob/478d84e4035c74d55511a01372e2bd0b7c8b60a7/roofit/roofitcore/src/RooHist.cxx#L777-L787; - Instead of interpolating the curve to the middle of the bin, find the bin edges from RooHist using the x errors. (Note that RooHist inherits from [TGraphAsymErrors](https://root.cern.ch/doc/master/classTGraphAsymmErrors.html)).; - Then, find the corresponding points on the PDF curve.; - Then, [integrate](https://root.cern.ch/doc/master/classTGraph.html#a06b6dfc69d4fe9336ade71a47864f974) the PDF curve from the first to the last point from above step. ### Code to produce such a plot; From [here](https://github.com/hageboeck/rootNotebooks/blob/master/BinSamplingPdf.ipynb); ```c++; RooRealVar x(""x"", ""x"", -10, 10);; x.setBins(20);; RooRealVar m(""m"", ""mean"", 1.5, -10, 10);; RooRealVar s(""s"", ""sigma"", 0.5, -10, 10);; RooGaussian gaus(""gaus"", ""Gaussian distribution"", x, m, s);. RooDataSet* dataset = gaus.generate(x, 10000);; RooDataHist binnedDataset(""binnedData"", ""BinnedData"", x, *dataset);. TCanvas c(""c"", ""Pull demo"", 1200, 800);; c.Divide(2,2);. c.cd(1);; auto frame = x.frame();; dataset->plotOn(frame);; gaus.plotOn(frame);; frame->Draw();. c.cd(3);; auto pulls = frame->pullHist();; pulls->Draw(""P"");; c.Draw();; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7239
https://github.com/root-project/root/issues/7239:192,Deployability,integrat,integrate,192,"## Explain what you would like to see improved; When using [pullHist](https://root.cern.ch/doc/master/classRooPlot.html#a0d3911db1f4e0ba5cfcf9e182eea3ed0), don't take curve at bin centre, but integrate curve over the bin. That should fix the following pull plot:; | Wrong | Correct |; | ---- | ---- |; | ![oneToy_old](https://user-images.githubusercontent.com/16205615/108328256-acb8ee80-71cc-11eb-9eb1-f3edb2a3b855.png) | ![oneToy_new](https://user-images.githubusercontent.com/16205615/108328286-b5112980-71cc-11eb-9fa0-67ccba717d9b.png) |. ### Optional: share how it could be improved; - Alter this part of the function:; https://github.com/root-project/root/blob/478d84e4035c74d55511a01372e2bd0b7c8b60a7/roofit/roofitcore/src/RooHist.cxx#L777-L787; - Instead of interpolating the curve to the middle of the bin, find the bin edges from RooHist using the x errors. (Note that RooHist inherits from [TGraphAsymErrors](https://root.cern.ch/doc/master/classTGraphAsymmErrors.html)).; - Then, find the corresponding points on the PDF curve.; - Then, [integrate](https://root.cern.ch/doc/master/classTGraph.html#a06b6dfc69d4fe9336ade71a47864f974) the PDF curve from the first to the last point from above step. ### Code to produce such a plot; From [here](https://github.com/hageboeck/rootNotebooks/blob/master/BinSamplingPdf.ipynb); ```c++; RooRealVar x(""x"", ""x"", -10, 10);; x.setBins(20);; RooRealVar m(""m"", ""mean"", 1.5, -10, 10);; RooRealVar s(""s"", ""sigma"", 0.5, -10, 10);; RooGaussian gaus(""gaus"", ""Gaussian distribution"", x, m, s);. RooDataSet* dataset = gaus.generate(x, 10000);; RooDataHist binnedDataset(""binnedData"", ""BinnedData"", x, *dataset);. TCanvas c(""c"", ""Pull demo"", 1200, 800);; c.Divide(2,2);. c.cd(1);; auto frame = x.frame();; dataset->plotOn(frame);; gaus.plotOn(frame);; frame->Draw();. c.cd(3);; auto pulls = frame->pullHist();; pulls->Draw(""P"");; c.Draw();; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7239
https://github.com/root-project/root/issues/7239:1050,Deployability,integrat,integrate,1050,"## Explain what you would like to see improved; When using [pullHist](https://root.cern.ch/doc/master/classRooPlot.html#a0d3911db1f4e0ba5cfcf9e182eea3ed0), don't take curve at bin centre, but integrate curve over the bin. That should fix the following pull plot:; | Wrong | Correct |; | ---- | ---- |; | ![oneToy_old](https://user-images.githubusercontent.com/16205615/108328256-acb8ee80-71cc-11eb-9eb1-f3edb2a3b855.png) | ![oneToy_new](https://user-images.githubusercontent.com/16205615/108328286-b5112980-71cc-11eb-9fa0-67ccba717d9b.png) |. ### Optional: share how it could be improved; - Alter this part of the function:; https://github.com/root-project/root/blob/478d84e4035c74d55511a01372e2bd0b7c8b60a7/roofit/roofitcore/src/RooHist.cxx#L777-L787; - Instead of interpolating the curve to the middle of the bin, find the bin edges from RooHist using the x errors. (Note that RooHist inherits from [TGraphAsymErrors](https://root.cern.ch/doc/master/classTGraphAsymmErrors.html)).; - Then, find the corresponding points on the PDF curve.; - Then, [integrate](https://root.cern.ch/doc/master/classTGraph.html#a06b6dfc69d4fe9336ade71a47864f974) the PDF curve from the first to the last point from above step. ### Code to produce such a plot; From [here](https://github.com/hageboeck/rootNotebooks/blob/master/BinSamplingPdf.ipynb); ```c++; RooRealVar x(""x"", ""x"", -10, 10);; x.setBins(20);; RooRealVar m(""m"", ""mean"", 1.5, -10, 10);; RooRealVar s(""s"", ""sigma"", 0.5, -10, 10);; RooGaussian gaus(""gaus"", ""Gaussian distribution"", x, m, s);. RooDataSet* dataset = gaus.generate(x, 10000);; RooDataHist binnedDataset(""binnedData"", ""BinnedData"", x, *dataset);. TCanvas c(""c"", ""Pull demo"", 1200, 800);; c.Divide(2,2);. c.cd(1);; auto frame = x.frame();; dataset->plotOn(frame);; gaus.plotOn(frame);; frame->Draw();. c.cd(3);; auto pulls = frame->pullHist();; pulls->Draw(""P"");; c.Draw();; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7239
https://github.com/root-project/root/issues/7239:192,Integrability,integrat,integrate,192,"## Explain what you would like to see improved; When using [pullHist](https://root.cern.ch/doc/master/classRooPlot.html#a0d3911db1f4e0ba5cfcf9e182eea3ed0), don't take curve at bin centre, but integrate curve over the bin. That should fix the following pull plot:; | Wrong | Correct |; | ---- | ---- |; | ![oneToy_old](https://user-images.githubusercontent.com/16205615/108328256-acb8ee80-71cc-11eb-9eb1-f3edb2a3b855.png) | ![oneToy_new](https://user-images.githubusercontent.com/16205615/108328286-b5112980-71cc-11eb-9fa0-67ccba717d9b.png) |. ### Optional: share how it could be improved; - Alter this part of the function:; https://github.com/root-project/root/blob/478d84e4035c74d55511a01372e2bd0b7c8b60a7/roofit/roofitcore/src/RooHist.cxx#L777-L787; - Instead of interpolating the curve to the middle of the bin, find the bin edges from RooHist using the x errors. (Note that RooHist inherits from [TGraphAsymErrors](https://root.cern.ch/doc/master/classTGraphAsymmErrors.html)).; - Then, find the corresponding points on the PDF curve.; - Then, [integrate](https://root.cern.ch/doc/master/classTGraph.html#a06b6dfc69d4fe9336ade71a47864f974) the PDF curve from the first to the last point from above step. ### Code to produce such a plot; From [here](https://github.com/hageboeck/rootNotebooks/blob/master/BinSamplingPdf.ipynb); ```c++; RooRealVar x(""x"", ""x"", -10, 10);; x.setBins(20);; RooRealVar m(""m"", ""mean"", 1.5, -10, 10);; RooRealVar s(""s"", ""sigma"", 0.5, -10, 10);; RooGaussian gaus(""gaus"", ""Gaussian distribution"", x, m, s);. RooDataSet* dataset = gaus.generate(x, 10000);; RooDataHist binnedDataset(""binnedData"", ""BinnedData"", x, *dataset);. TCanvas c(""c"", ""Pull demo"", 1200, 800);; c.Divide(2,2);. c.cd(1);; auto frame = x.frame();; dataset->plotOn(frame);; gaus.plotOn(frame);; frame->Draw();. c.cd(3);; auto pulls = frame->pullHist();; pulls->Draw(""P"");; c.Draw();; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7239
https://github.com/root-project/root/issues/7239:1050,Integrability,integrat,integrate,1050,"## Explain what you would like to see improved; When using [pullHist](https://root.cern.ch/doc/master/classRooPlot.html#a0d3911db1f4e0ba5cfcf9e182eea3ed0), don't take curve at bin centre, but integrate curve over the bin. That should fix the following pull plot:; | Wrong | Correct |; | ---- | ---- |; | ![oneToy_old](https://user-images.githubusercontent.com/16205615/108328256-acb8ee80-71cc-11eb-9eb1-f3edb2a3b855.png) | ![oneToy_new](https://user-images.githubusercontent.com/16205615/108328286-b5112980-71cc-11eb-9fa0-67ccba717d9b.png) |. ### Optional: share how it could be improved; - Alter this part of the function:; https://github.com/root-project/root/blob/478d84e4035c74d55511a01372e2bd0b7c8b60a7/roofit/roofitcore/src/RooHist.cxx#L777-L787; - Instead of interpolating the curve to the middle of the bin, find the bin edges from RooHist using the x errors. (Note that RooHist inherits from [TGraphAsymErrors](https://root.cern.ch/doc/master/classTGraphAsymmErrors.html)).; - Then, find the corresponding points on the PDF curve.; - Then, [integrate](https://root.cern.ch/doc/master/classTGraph.html#a06b6dfc69d4fe9336ade71a47864f974) the PDF curve from the first to the last point from above step. ### Code to produce such a plot; From [here](https://github.com/hageboeck/rootNotebooks/blob/master/BinSamplingPdf.ipynb); ```c++; RooRealVar x(""x"", ""x"", -10, 10);; x.setBins(20);; RooRealVar m(""m"", ""mean"", 1.5, -10, 10);; RooRealVar s(""s"", ""sigma"", 0.5, -10, 10);; RooGaussian gaus(""gaus"", ""Gaussian distribution"", x, m, s);. RooDataSet* dataset = gaus.generate(x, 10000);; RooDataHist binnedDataset(""binnedData"", ""BinnedData"", x, *dataset);. TCanvas c(""c"", ""Pull demo"", 1200, 800);; c.Divide(2,2);. c.cd(1);; auto frame = x.frame();; dataset->plotOn(frame);; gaus.plotOn(frame);; frame->Draw();. c.cd(3);; auto pulls = frame->pullHist();; pulls->Draw(""P"");; c.Draw();; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7239
https://github.com/root-project/root/issues/7239:887,Modifiability,inherit,inherits,887,"## Explain what you would like to see improved; When using [pullHist](https://root.cern.ch/doc/master/classRooPlot.html#a0d3911db1f4e0ba5cfcf9e182eea3ed0), don't take curve at bin centre, but integrate curve over the bin. That should fix the following pull plot:; | Wrong | Correct |; | ---- | ---- |; | ![oneToy_old](https://user-images.githubusercontent.com/16205615/108328256-acb8ee80-71cc-11eb-9eb1-f3edb2a3b855.png) | ![oneToy_new](https://user-images.githubusercontent.com/16205615/108328286-b5112980-71cc-11eb-9fa0-67ccba717d9b.png) |. ### Optional: share how it could be improved; - Alter this part of the function:; https://github.com/root-project/root/blob/478d84e4035c74d55511a01372e2bd0b7c8b60a7/roofit/roofitcore/src/RooHist.cxx#L777-L787; - Instead of interpolating the curve to the middle of the bin, find the bin edges from RooHist using the x errors. (Note that RooHist inherits from [TGraphAsymErrors](https://root.cern.ch/doc/master/classTGraphAsymmErrors.html)).; - Then, find the corresponding points on the PDF curve.; - Then, [integrate](https://root.cern.ch/doc/master/classTGraph.html#a06b6dfc69d4fe9336ade71a47864f974) the PDF curve from the first to the last point from above step. ### Code to produce such a plot; From [here](https://github.com/hageboeck/rootNotebooks/blob/master/BinSamplingPdf.ipynb); ```c++; RooRealVar x(""x"", ""x"", -10, 10);; x.setBins(20);; RooRealVar m(""m"", ""mean"", 1.5, -10, 10);; RooRealVar s(""s"", ""sigma"", 0.5, -10, 10);; RooGaussian gaus(""gaus"", ""Gaussian distribution"", x, m, s);. RooDataSet* dataset = gaus.generate(x, 10000);; RooDataHist binnedDataset(""binnedData"", ""BinnedData"", x, *dataset);. TCanvas c(""c"", ""Pull demo"", 1200, 800);; c.Divide(2,2);. c.cd(1);; auto frame = x.frame();; dataset->plotOn(frame);; gaus.plotOn(frame);; frame->Draw();. c.cd(3);; auto pulls = frame->pullHist();; pulls->Draw(""P"");; c.Draw();; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7239
https://github.com/root-project/root/pull/7241:26,Deployability,patch,patches,26,Backport of #7133 in 6.22 patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7241
https://github.com/root-project/root/pull/7242:158,Performance,cache,cached,158,"Uncomment line setting operation mode of partInt components of RooPro…dPdf using current operation mode. This seems to be needed in order to propagate to the cached intergal component s of the RooProdPdf is operation mode.; It fixes issue #7157 where RooProdPdf is used from a RooFFTConv. In this case; the RooFFTConv sets AlwaysDirty as operation mode its components, and then the ROoProdPdf needs to propage to its owned parts, otherwise during the FFT computation the RooProdPdf returns always its first evaluation. To fix the example in #7157 it is sufficient to uncomment line RooProdPdf.cxx:1622, since it is case IVa in code. ; But a similar issue is present when using case IIIa and IIb.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7242
https://github.com/root-project/root/issues/7249:3064,Availability,Down,Downloads,3064,"alifornia & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. (RooSDSCBShape) An instance of RooSDSCBShape.; [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(ws) importing code of class RooSDSCBShape from /<path/to>/RooSDSCBShape.cxx and /<path/to>/RooSDSCBShape.h; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws to extract coded embedded in workspace; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape.h; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape.cxx; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape; Info in <TMacOSXSystem::ACLiC>: creating shared library /<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so; ld: library not found for -lCheckFix; clang-11: error: linker command failed with exit code 1 (use -v to see invocation); Error in <ACLiC>: Executing 'cd ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/<path/to>/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/<path/to>/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:3192,Availability,error,error,3192,"ath/to>/RooSDSCBShape.cxx and /<path/to>/RooSDSCBShape.h; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws to extract coded embedded in workspace; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape.h; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape.cxx; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape; Info in <TMacOSXSystem::ACLiC>: creating shared library /<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so; ld: library not found for -lCheckFix; clang-11: error: linker command failed with exit code 1 (use -v to see invocation); Error in <ACLiC>: Executing 'cd ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/<path/to>/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/<path/to>/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/etc/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:3266,Availability,Error,Error,3266,"ath/to>/RooSDSCBShape.cxx and /<path/to>/RooSDSCBShape.h; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws to extract coded embedded in workspace; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape.h; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape.cxx; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape; Info in <TMacOSXSystem::ACLiC>: creating shared library /<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so; ld: library not found for -lCheckFix; clang-11: error: linker command failed with exit code 1 (use -v to see invocation); Error in <ACLiC>: Executing 'cd ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/<path/to>/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/<path/to>/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/etc/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:3310,Availability,Down,Downloads,3310,"ath/to>/RooSDSCBShape.cxx and /<path/to>/RooSDSCBShape.h; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws to extract coded embedded in workspace; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape.h; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape.cxx; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape; Info in <TMacOSXSystem::ACLiC>: creating shared library /<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so; ld: library not found for -lCheckFix; clang-11: error: linker command failed with exit code 1 (use -v to see invocation); Error in <ACLiC>: Executing 'cd ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/<path/to>/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/<path/to>/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/etc/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:4491,Availability,Down,Downloads,4491,"IC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/<path/to>/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/<path/to>/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/etc/"" -I""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/etc//cling"" -I""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/include/"" -I""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/include"" -I""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/include/python3.9"" -D__ACLIC__ ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" ; x86_64-apple-darwin13.4.0-clang++ -O3 -DNDEBUG ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.o"" -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup ""-lfakelink"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libz.1.2.11.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/liblzma.5.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libcrypto.1.1.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libsqlite3.0.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libssl.1.1.dylib"" ""-lnetwork"" ""-lpcap.A"" ""-ldns_services"" ""-lz.1"" ""-lcoretls_cfhelpers"" ""-lapple_nghttp2"" ""-lenergytrace"" ""-lsqlite3"" ""-lMobileGestalt"" ""-lcoretls"" ""-lxar.1"" ""-lcompression"" ""-larchive.2"" ""-lxml2.2"" ""-llzma.5"" ""-lbz2.1.0"" ""-liconv.2"" ""-lcharset.1"" ""-lCheckFix"" ""-lmecabra"" ""-lmecab"" ""-lger",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:4644,Availability,Down,Downloads,4644,"a/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/<path/to>/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/etc/"" -I""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/etc//cling"" -I""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/include/"" -I""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/include"" -I""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/include/python3.9"" -D__ACLIC__ ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" ; x86_64-apple-darwin13.4.0-clang++ -O3 -DNDEBUG ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.o"" -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup ""-lfakelink"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libz.1.2.11.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/liblzma.5.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libcrypto.1.1.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libsqlite3.0.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libssl.1.1.dylib"" ""-lnetwork"" ""-lpcap.A"" ""-ldns_services"" ""-lz.1"" ""-lcoretls_cfhelpers"" ""-lapple_nghttp2"" ""-lenergytrace"" ""-lsqlite3"" ""-lMobileGestalt"" ""-lcoretls"" ""-lxar.1"" ""-lcompression"" ""-larchive.2"" ""-lxml2.2"" ""-llzma.5"" ""-lbz2.1.0"" ""-liconv.2"" ""-lcharset.1"" ""-lCheckFix"" ""-lmecabra"" ""-lmecab"" ""-lgermantok"" ""-lThaiTokenizer"" ""-lChineseTokenizer"" ""-lcmph"" ""-lutil"" ""-lapp_launch_measurement"" ""-lxslt.1"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:7434,Availability,Down,Downloads,7434,"Run2_ana/lib/libCling.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libffi.7.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" ""-lsandbox.1"" ""-lCoreStorage"" ""-lcsfde"" ""-lMatch.1"" -o ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed!; [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: ; 1) Fix extracted source code files in directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/; 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/ClassName.cxx+'; 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class; Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used.; 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file; 5) Reopen file in clean ROOT session to confirm that problems are fixed; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:7529,Availability,ERROR,ERROR,7529,"<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" ""-lsandbox.1"" ""-lCoreStorage"" ""-lcsfde"" ""-lMatch.1"" -o ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed!; [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: ; 1) Fix extracted source code files in directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/; 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/ClassName.cxx+'; 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class; Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used.; 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file; 5) Reopen file in clean ROOT session to confirm that problems are fixed; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version 6.22/06 on macOS, obtained from conda-forge. ### Additional context; <!--; Add any other context about t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:7594,Availability,ERROR,ERROR,7594,"<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" ""-lsandbox.1"" ""-lCoreStorage"" ""-lcsfde"" ""-lMatch.1"" -o ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed!; [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: ; 1) Fix extracted source code files in directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/; 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/ClassName.cxx+'; 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class; Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used.; 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file; 5) Reopen file in clean ROOT session to confirm that problems are fixed; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version 6.22/06 on macOS, obtained from conda-forge. ### Additional context; <!--; Add any other context about t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:8458,Availability,down,download,8458,"6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" ""-lsandbox.1"" ""-lCoreStorage"" ""-lcsfde"" ""-lMatch.1"" -o ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed!; [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: ; 1) Fix extracted source code files in directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/; 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/ClassName.cxx+'; 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class; Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used.; 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file; 5) Reopen file in clean ROOT session to confirm that problems are fixed; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version 6.22/06 on macOS, obtained from conda-forge. ### Additional context; <!--; Add any other context about the problem here.; -->; See the forum post [here](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). In my view, `importClassCode` ought to be sufficient on its own, but in any case, once this is resolved, the required sequence of `RooWorkspace::addClassDeclImportDir`, `RooWorkspace::addClassImplImportDir`, `RooWorkspace::importClassCode`, `TClass::SetDeclFile`, and `TClass::SetImplFileName` ought to appear in the documentation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:7960,Deployability,UPDATE,UPDATE,7960,"itCore.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" ""-lsandbox.1"" ""-lCoreStorage"" ""-lcsfde"" ""-lMatch.1"" -o ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed!; [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: ; 1) Fix extracted source code files in directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/; 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/ClassName.cxx+'; 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class; Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used.; 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file; 5) Reopen file in clean ROOT session to confirm that problems are fixed; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version 6.22/06 on macOS, obtained from conda-forge. ### Additional context; <!--; Add any other context about the problem here.; -->; See the forum post [here](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). In my view, `importClassCode` ought to be sufficient on its own, but in any case, once this is resolved, the required sequence of `RooWorkspace::addClassDeclImportDir`, `RooWorkspace::add",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:8226,Deployability,update,updated,8226,"6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" ""-lsandbox.1"" ""-lCoreStorage"" ""-lcsfde"" ""-lMatch.1"" -o ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed!; [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: ; 1) Fix extracted source code files in directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/; 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/ClassName.cxx+'; 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class; Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used.; 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file; 5) Reopen file in clean ROOT session to confirm that problems are fixed; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version 6.22/06 on macOS, obtained from conda-forge. ### Additional context; <!--; Add any other context about the problem here.; -->; See the forum post [here](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). In my view, `importClassCode` ought to be sufficient on its own, but in any case, once this is resolved, the required sequence of `RooWorkspace::addClassDeclImportDir`, `RooWorkspace::addClassImplImportDir`, `RooWorkspace::importClassCode`, `TClass::SetDeclFile`, and `TClass::SetImplFileName` ought to appear in the documentation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:8440,Deployability,install,install,8440,"6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" ""-lsandbox.1"" ""-lCoreStorage"" ""-lcsfde"" ""-lMatch.1"" -o ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed!; [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: ; 1) Fix extracted source code files in directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/; 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/ClassName.cxx+'; 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class; Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used.; 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file; 5) Reopen file in clean ROOT session to confirm that problems are fixed; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version 6.22/06 on macOS, obtained from conda-forge. ### Additional context; <!--; Add any other context about the problem here.; -->; See the forum post [here](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). In my view, `importClassCode` ought to be sufficient on its own, but in any case, once this is resolved, the required sequence of `RooWorkspace::addClassDeclImportDir`, `RooWorkspace::addClassImplImportDir`, `RooWorkspace::importClassCode`, `TClass::SetDeclFile`, and `TClass::SetImplFileName` ought to appear in the documentation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:8002,Performance,load,loading,8002,"envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" ""-lsandbox.1"" ""-lCoreStorage"" ""-lcsfde"" ""-lMatch.1"" -o ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed!; [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: ; 1) Fix extracted source code files in directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/; 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/ClassName.cxx+'; 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class; Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used.; 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file; 5) Reopen file in clean ROOT session to confirm that problems are fixed; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version 6.22/06 on macOS, obtained from conda-forge. ### Additional context; <!--; Add any other context about the problem here.; -->; See the forum post [here](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). In my view, `importClassCode` ought to be sufficient on its own, but in any case, once this is resolved, the required sequence of `RooWorkspace::addClassDeclImportDir`, `RooWorkspace::addClassImplImportDir`, `RooWorkspace::importClassCode`, `TClass::SetDeclFile`, and `TClass::SetImplFileName` ought to",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:7973,Security,Access,Access,7973,"envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" ""-lsandbox.1"" ""-lCoreStorage"" ""-lcsfde"" ""-lMatch.1"" -o ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed!; [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: ; 1) Fix extracted source code files in directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/; 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/ClassName.cxx+'; 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class; Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used.; 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file; 5) Reopen file in clean ROOT session to confirm that problems are fixed; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version 6.22/06 on macOS, obtained from conda-forge. ### Additional context; <!--; Add any other context about the problem here.; -->; See the forum post [here](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). In my view, `importClassCode` ought to be sufficient on its own, but in any case, once this is resolved, the required sequence of `RooWorkspace::addClassDeclImportDir`, `RooWorkspace::addClassImplImportDir`, `RooWorkspace::importClassCode`, `TClass::SetDeclFile`, and `TClass::SetImplFileName` ought to",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:1732,Testability,test,test,1732,"ted to happen.; -->; Ideally, just; ```python; ws.importClassCode(""RooSDSCBShape.cxx""); ```; should be sufficient. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; The `.cxx` and `.h` files can be found on the [forum](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins).; ```python; import os. import ROOT as r. # declare PDF; r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). # manually set Decl and Impl files; cls = r.TClass.GetClass(""RooSDSCBShape""); cls.SetDeclFile(f""{os.getcwd()}/RooSDSCBShape.h"", 0); cls.SetImplFileName(f""{os.getcwd()}/RooSDSCBShape.cxx""). # store the class in a workspace; ws = r.RooWorkspace(""ws""); ws.addClassDeclImportDir(os.getcwd()); ws.addClassImplImportDir(os.getcwd()); ws.importClassCode(cls); ws.writeToFile(""test.root""). # extract the class from the workspace; f = r.TFile.Open(""test.root""); inws = f.Get(""ws""); ```. Output:; ```; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. (RooSDSCBShape) An instance of RooSDSCBShape.; [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(ws) importing code of class RooSDSCBShape from /<path/to>/RooSDSCBShape.cxx and /<path/to>/RooSDSCBShape.h; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws to extract coded embedded in workspace; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape.h; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileCl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:1803,Testability,test,test,1803,"BShape.cxx""); ```; should be sufficient. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; The `.cxx` and `.h` files can be found on the [forum](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins).; ```python; import os. import ROOT as r. # declare PDF; r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). # manually set Decl and Impl files; cls = r.TClass.GetClass(""RooSDSCBShape""); cls.SetDeclFile(f""{os.getcwd()}/RooSDSCBShape.h"", 0); cls.SetImplFileName(f""{os.getcwd()}/RooSDSCBShape.cxx""). # store the class in a workspace; ws = r.RooWorkspace(""ws""); ws.addClassDeclImportDir(os.getcwd()); ws.addClassImplImportDir(os.getcwd()); ws.importClassCode(cls); ws.writeToFile(""test.root""). # extract the class from the workspace; f = r.TFile.Open(""test.root""); inws = f.Get(""ws""); ```. Output:; ```; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. (RooSDSCBShape) An instance of RooSDSCBShape.; [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(ws) importing code of class RooSDSCBShape from /<path/to>/RooSDSCBShape.cxx and /<path/to>/RooSDSCBShape.h; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws to extract coded embedded in workspace; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape.h; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:391,Usability,clear,clear,391,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `RooWorkspace` is supposed to be able to store custom PDFs using `importClassCode`, but, even after setting `Impl` and `Decl` directories, a workspace with a custom PDF will crash on opening. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Ideally, just; ```python; ws.importClassCode(""RooSDSCBShape.cxx""); ```; should be sufficient. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; The `.cxx` and `.h` files can be found on the [forum](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins).; ```python; import os. import ROOT as r. # declare PDF; r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). # manually set Decl and Impl files; cls = r.TClass.GetClass(""RooSDSCBShape""); cls.SetDeclFile(f""{os.getcwd()}/RooSDSCBShape.h"", 0); cls.SetImplFileName(f""{os.getcwd()}/RooSDSCBShape.cxx""). # store the class in a workspace; ws = r.RooWorkspace(""ws""); ws.addClassDeclImportDir(os.getcwd()); ws.addClassImplImportDir(os.getcwd()); ws.importClassCode(cls); ws.writeToFile(""test.root""). # extract the class from the workspace; f = r.TFile.Open(""test.root""); inws = f.Get(""ws""); ```. Output:; ```; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; Al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:681,Usability,clear,clear,681,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `RooWorkspace` is supposed to be able to store custom PDFs using `importClassCode`, but, even after setting `Impl` and `Decl` directories, a workspace with a custom PDF will crash on opening. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Ideally, just; ```python; ws.importClassCode(""RooSDSCBShape.cxx""); ```; should be sufficient. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; The `.cxx` and `.h` files can be found on the [forum](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins).; ```python; import os. import ROOT as r. # declare PDF; r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). # manually set Decl and Impl files; cls = r.TClass.GetClass(""RooSDSCBShape""); cls.SetDeclFile(f""{os.getcwd()}/RooSDSCBShape.h"", 0); cls.SetImplFileName(f""{os.getcwd()}/RooSDSCBShape.cxx""). # store the class in a workspace; ws = r.RooWorkspace(""ws""); ws.addClassDeclImportDir(os.getcwd()); ws.addClassImplImportDir(os.getcwd()); ws.importClassCode(cls); ws.writeToFile(""test.root""). # extract the class from the workspace; f = r.TFile.Open(""test.root""); inws = f.Get(""ws""); ```. Output:; ```; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; Al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/pull/7250:0,Safety,Avoid,Avoid,0,Avoid warnings in Windows compilation,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7250
https://github.com/root-project/root/pull/7251:54,Testability,log,logging,54,In the same way that you can retrieve peak value. For logging purposes in parallel to the GUI.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7251
https://github.com/root-project/root/issues/7252:451,Testability,test,test,451,"I ran into the issue that a RooAddPdf cannot generate pdfs with a negative coefficient for one component (also when the total pdf is positive defined). This caused a severe bias in my pseudo experiments, where one of the coefficients of my Pdf is needed to be negative (outcome of a fit with a RooAddPdf to data). That caused me a lot of head scratching because it never mentioned any warning. In my opinion this is bug.; With this behaviour I cannot test my model, because it handles generation and fitting differently.; One solution to circumvent this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). ; A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't.; I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class.; Thank you!. ```python; import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7); linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4); mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300); width = R.RooRealVar(""width"",""width"",50, 20, 80); gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)); integralBkg = linear.getNorm(R.RooArgSet(mass)); print(""Unnormalised PDFs yield:"", integralSig, integralBkg) ; normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig); normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg); sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)); bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)); pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.Roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/pull/7253:60,Performance,perform,performance-from-,60,See https://root-forum.cern.ch/t/serious-degradation-of-i-o-performance-from-6-20-04-to-6-22-06/43584/10,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7253
https://github.com/root-project/root/issues/7254:488,Energy Efficiency,adapt,adapted,488,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. ; The version copied and adapted of the function is somehow linked to an old version. ; The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. ; In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:488,Modifiability,adapt,adapted,488,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. ; The version copied and adapted of the function is somehow linked to an old version. ; The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. ; In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/pull/7257:1498,Deployability,integrat,integration,1498,"RooFit currently includes the `RooCBShape` and `RooDSCBShape` to; represent the family of crystal ball distributions. The `RooCBShape`; only has a left tail, and `RooDSCBShape` has two independently; parametrized tails. Some users also want a crystal ball where the width of the Gaussian; core is different on the left and the right side (see e.g. Jira ticket; [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case; of an asymmetric Gaussian core, this commit implements a new; `RooCrystalBall` class that should cover all classes of crystal ball; shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not; necessary anymore. The new features of the `RooCrystalBall` class that make it different; from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian; core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core; (to replace `RooDSCBShape`), only left tail (to replace; `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values; with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare; values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration; ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1542,Deployability,integrat,integration,1542,"RooFit currently includes the `RooCBShape` and `RooDSCBShape` to; represent the family of crystal ball distributions. The `RooCBShape`; only has a left tail, and `RooDSCBShape` has two independently; parametrized tails. Some users also want a crystal ball where the width of the Gaussian; core is different on the left and the right side (see e.g. Jira ticket; [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case; of an asymmetric Gaussian core, this commit implements a new; `RooCrystalBall` class that should cover all classes of crystal ball; shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not; necessary anymore. The new features of the `RooCrystalBall` class that make it different; from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian; core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core; (to replace `RooDSCBShape`), only left tail (to replace; `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values; with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare; values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration; ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1587,Deployability,integrat,integration,1587,"RooFit currently includes the `RooCBShape` and `RooDSCBShape` to; represent the family of crystal ball distributions. The `RooCBShape`; only has a left tail, and `RooDSCBShape` has two independently; parametrized tails. Some users also want a crystal ball where the width of the Gaussian; core is different on the left and the right side (see e.g. Jira ticket; [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case; of an asymmetric Gaussian core, this commit implements a new; `RooCrystalBall` class that should cover all classes of crystal ball; shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not; necessary anymore. The new features of the `RooCrystalBall` class that make it different; from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian; core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core; (to replace `RooDSCBShape`), only left tail (to replace; `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values; with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare; values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration; ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1498,Integrability,integrat,integration,1498,"RooFit currently includes the `RooCBShape` and `RooDSCBShape` to; represent the family of crystal ball distributions. The `RooCBShape`; only has a left tail, and `RooDSCBShape` has two independently; parametrized tails. Some users also want a crystal ball where the width of the Gaussian; core is different on the left and the right side (see e.g. Jira ticket; [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case; of an asymmetric Gaussian core, this commit implements a new; `RooCrystalBall` class that should cover all classes of crystal ball; shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not; necessary anymore. The new features of the `RooCrystalBall` class that make it different; from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian; core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core; (to replace `RooDSCBShape`), only left tail (to replace; `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values; with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare; values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration; ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1542,Integrability,integrat,integration,1542,"RooFit currently includes the `RooCBShape` and `RooDSCBShape` to; represent the family of crystal ball distributions. The `RooCBShape`; only has a left tail, and `RooDSCBShape` has two independently; parametrized tails. Some users also want a crystal ball where the width of the Gaussian; core is different on the left and the right side (see e.g. Jira ticket; [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case; of an asymmetric Gaussian core, this commit implements a new; `RooCrystalBall` class that should cover all classes of crystal ball; shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not; necessary anymore. The new features of the `RooCrystalBall` class that make it different; from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian; core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core; (to replace `RooDSCBShape`), only left tail (to replace; `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values; with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare; values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration; ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1587,Integrability,integrat,integration,1587,"RooFit currently includes the `RooCBShape` and `RooDSCBShape` to; represent the family of crystal ball distributions. The `RooCBShape`; only has a left tail, and `RooDSCBShape` has two independently; parametrized tails. Some users also want a crystal ball where the width of the Gaussian; core is different on the left and the right side (see e.g. Jira ticket; [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case; of an asymmetric Gaussian core, this commit implements a new; `RooCrystalBall` class that should cover all classes of crystal ball; shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not; necessary anymore. The new features of the `RooCrystalBall` class that make it different; from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian; core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core; (to replace `RooDSCBShape`), only left tail (to replace; `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values; with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare; values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration; ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:453,Modifiability,maintainab,maintainable,453,"RooFit currently includes the `RooCBShape` and `RooDSCBShape` to; represent the family of crystal ball distributions. The `RooCBShape`; only has a left tail, and `RooDSCBShape` has two independently; parametrized tails. Some users also want a crystal ball where the width of the Gaussian; core is different on the left and the right side (see e.g. Jira ticket; [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case; of an asymmetric Gaussian core, this commit implements a new; `RooCrystalBall` class that should cover all classes of crystal ball; shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not; necessary anymore. The new features of the `RooCrystalBall` class that make it different; from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian; core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core; (to replace `RooDSCBShape`), only left tail (to replace; `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values; with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare; values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration; ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1228,Modifiability,parameteriz,parameterized,1228,"RooFit currently includes the `RooCBShape` and `RooDSCBShape` to; represent the family of crystal ball distributions. The `RooCBShape`; only has a left tail, and `RooDSCBShape` has two independently; parametrized tails. Some users also want a crystal ball where the width of the Gaussian; core is different on the left and the right side (see e.g. Jira ticket; [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case; of an asymmetric Gaussian core, this commit implements a new; `RooCrystalBall` class that should cover all classes of crystal ball; shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not; necessary anymore. The new features of the `RooCrystalBall` class that make it different; from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian; core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core; (to replace `RooDSCBShape`), only left tail (to replace; `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values; with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare; values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration; ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1134,Safety,avoid,avoid,1134,"RooFit currently includes the `RooCBShape` and `RooDSCBShape` to; represent the family of crystal ball distributions. The `RooCBShape`; only has a left tail, and `RooDSCBShape` has two independently; parametrized tails. Some users also want a crystal ball where the width of the Gaussian; core is different on the left and the right side (see e.g. Jira ticket; [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case; of an asymmetric Gaussian core, this commit implements a new; `RooCrystalBall` class that should cover all classes of crystal ball; shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not; necessary anymore. The new features of the `RooCrystalBall` class that make it different; from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian; core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core; (to replace `RooDSCBShape`), only left tail (to replace; `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values; with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare; values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration; ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1179,Testability,test,tested,1179,"RooFit currently includes the `RooCBShape` and `RooDSCBShape` to; represent the family of crystal ball distributions. The `RooCBShape`; only has a left tail, and `RooDSCBShape` has two independently; parametrized tails. Some users also want a crystal ball where the width of the Gaussian; core is different on the left and the right side (see e.g. Jira ticket; [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case; of an asymmetric Gaussian core, this commit implements a new; `RooCrystalBall` class that should cover all classes of crystal ball; shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not; necessary anymore. The new features of the `RooCrystalBall` class that make it different; from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian; core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core; (to replace `RooDSCBShape`), only left tail (to replace; `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values; with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare; values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration; ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1190,Testability,test,testRooCrystalBal,1190,"RooFit currently includes the `RooCBShape` and `RooDSCBShape` to; represent the family of crystal ball distributions. The `RooCBShape`; only has a left tail, and `RooDSCBShape` has two independently; parametrized tails. Some users also want a crystal ball where the width of the Gaussian; core is different on the left and the right side (see e.g. Jira ticket; [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case; of an asymmetric Gaussian core, this commit implements a new; `RooCrystalBall` class that should cover all classes of crystal ball; shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not; necessary anymore. The new features of the `RooCrystalBall` class that make it different; from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian; core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core; (to replace `RooDSCBShape`), only left tail (to replace; `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values; with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare; values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration; ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1213,Testability,test,test,1213,"RooFit currently includes the `RooCBShape` and `RooDSCBShape` to; represent the family of crystal ball distributions. The `RooCBShape`; only has a left tail, and `RooDSCBShape` has two independently; parametrized tails. Some users also want a crystal ball where the width of the Gaussian; core is different on the left and the right side (see e.g. Jira ticket; [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case; of an asymmetric Gaussian core, this commit implements a new; `RooCrystalBall` class that should cover all classes of crystal ball; shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not; necessary anymore. The new features of the `RooCrystalBall` class that make it different; from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian; core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core; (to replace `RooDSCBShape`), only left tail (to replace; `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values; with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare; values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration; ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1250,Testability,test,test,1250,"RooFit currently includes the `RooCBShape` and `RooDSCBShape` to; represent the family of crystal ball distributions. The `RooCBShape`; only has a left tail, and `RooDSCBShape` has two independently; parametrized tails. Some users also want a crystal ball where the width of the Gaussian; core is different on the left and the right side (see e.g. Jira ticket; [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case; of an asymmetric Gaussian core, this commit implements a new; `RooCrystalBall` class that should cover all classes of crystal ball; shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not; necessary anymore. The new features of the `RooCrystalBall` class that make it different; from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian; core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core; (to replace `RooDSCBShape`), only left tail (to replace; `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values; with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare; values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration; ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1336,Testability,test,test,1336,"RooFit currently includes the `RooCBShape` and `RooDSCBShape` to; represent the family of crystal ball distributions. The `RooCBShape`; only has a left tail, and `RooDSCBShape` has two independently; parametrized tails. Some users also want a crystal ball where the width of the Gaussian; core is different on the left and the right side (see e.g. Jira ticket; [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case; of an asymmetric Gaussian core, this commit implements a new; `RooCrystalBall` class that should cover all classes of crystal ball; shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not; necessary anymore. The new features of the `RooCrystalBall` class that make it different; from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian; core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core; (to replace `RooDSCBShape`), only left tail (to replace; `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values; with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare; values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration; ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1429,Testability,test,test,1429,"RooFit currently includes the `RooCBShape` and `RooDSCBShape` to; represent the family of crystal ball distributions. The `RooCBShape`; only has a left tail, and `RooDSCBShape` has two independently; parametrized tails. Some users also want a crystal ball where the width of the Gaussian; core is different on the left and the right side (see e.g. Jira ticket; [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case; of an asymmetric Gaussian core, this commit implements a new; `RooCrystalBall` class that should cover all classes of crystal ball; shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not; necessary anymore. The new features of the `RooCrystalBall` class that make it different; from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian; core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core; (to replace `RooDSCBShape`), only left tail (to replace; `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values; with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare; values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration; ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1493,Testability,test,test,1493,"RooFit currently includes the `RooCBShape` and `RooDSCBShape` to; represent the family of crystal ball distributions. The `RooCBShape`; only has a left tail, and `RooDSCBShape` has two independently; parametrized tails. Some users also want a crystal ball where the width of the Gaussian; core is different on the left and the right side (see e.g. Jira ticket; [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case; of an asymmetric Gaussian core, this commit implements a new; `RooCrystalBall` class that should cover all classes of crystal ball; shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not; necessary anymore. The new features of the `RooCrystalBall` class that make it different; from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian; core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core; (to replace `RooDSCBShape`), only left tail (to replace; `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values; with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare; values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration; ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/issues/7258:2575,Deployability,release,release,2575," of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation.; * Implement batch computation interface.; * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:; * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h); * [RooDoubleCBFast.cc](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/src/RooDoubleCBFast.cc). More things to consider:; * The RooDSCB shape was **only merged last summer in https://github.com/root-project/root/pull/6172 and it has not made it into any release so far!** So we have the opportunity to safely change it/replace it for 6.24 without disturbing users of previous ROOT versions.; * Some people also use a custom [RooSDSCBShape](https://github.com/root-project/root/issues/7249). It presumably stands for ""single double sided crystal ball"" and it has just a non-Gaussian tail on the **right** (compared to RooCBShape which has it on the left). So the single-tail constructor of the new RooCrystalBall also takes an additional flag to indicate where the tail is, with the left side as default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:1822,Integrability,interface,interface,1822,"blob/master/roofit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation.; * Implement batch computation interface.; * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:; * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h); * [RooDoubleCBFast.cc](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/src/RooDoubleCBFast.cc). More things to consider:; * The RooDSCB shape was **only merged last summer in https://github.com/root-project/root/pull/6172 and it has not made it into any release so far!** So we have the opportunity to safely change it/replace it for 6.24 without disturbing users of previous ROOT versions.; * Some people also use a custom [RooSDSCBShape](https://github.com/root-project/root/issues/7249).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:2269,Integrability,interface,interface,2269," of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation.; * Implement batch computation interface.; * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:; * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h); * [RooDoubleCBFast.cc](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/src/RooDoubleCBFast.cc). More things to consider:; * The RooDSCB shape was **only merged last summer in https://github.com/root-project/root/pull/6172 and it has not made it into any release so far!** So we have the opportunity to safely change it/replace it for 6.24 without disturbing users of previous ROOT versions.; * Some people also use a custom [RooSDSCBShape](https://github.com/root-project/root/issues/7249). It presumably stands for ""single double sided crystal ball"" and it has just a non-Gaussian tail on the **right** (compared to RooCBShape which has it on the left). So the single-tail constructor of the new RooCrystalBall also takes an additional flag to indicate where the tail is, with the left side as default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:115,Modifiability,extend,extend,115,"In the still relevant Jira issue [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388), it was requested to extend the RooFit crystal ball shape with the possibility to set different standard deviations for the left side and and the right side of the Gaussian core. An example implementation that didn't implement the analytical integral was linked:; * [RooDoubleCB.h](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.h); * [RooDoubleCB.C](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.C). This suggestion can be taken as an opportunity to improve the crystal ball shapes in RooFit in general. Right now there is the [RooCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation.; * Implement batch computation interface.; * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:2623,Safety,safe,safely,2623," of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation.; * Implement batch computation interface.; * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:; * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h); * [RooDoubleCBFast.cc](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/src/RooDoubleCBFast.cc). More things to consider:; * The RooDSCB shape was **only merged last summer in https://github.com/root-project/root/pull/6172 and it has not made it into any release so far!** So we have the opportunity to safely change it/replace it for 6.24 without disturbing users of previous ROOT versions.; * Some people also use a custom [RooSDSCBShape](https://github.com/root-project/root/issues/7249). It presumably stands for ""single double sided crystal ball"" and it has just a non-Gaussian tail on the **right** (compared to RooCBShape which has it on the left). So the single-tail constructor of the new RooCrystalBall also takes an additional flag to indicate where the tail is, with the left side as default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:1503,Testability,test,test,1503,"eCB.C](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.C). This suggestion can be taken as an opportunity to improve the crystal ball shapes in RooFit in general. Right now there is the [RooCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation.; * Implement batch computation interface.; * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:; * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h); * [RooDoubleCBFast.cc](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/src/RooDoubleCBFast.cc). More things to consider:; * The RooDSCB shape was **only merged last summer in https://gith",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:1207,Usability,clear,clear,1207,"tegral was linked:; * [RooDoubleCB.h](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.h); * [RooDoubleCB.C](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.C). This suggestion can be taken as an opportunity to improve the crystal ball shapes in RooFit in general. Right now there is the [RooCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation.; * Implement batch computation interface.; * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:; * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h); * [RooDoubleCBFast.cc](https://github.co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:1301,Usability,clear,clear,1301,"tegral was linked:; * [RooDoubleCB.h](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.h); * [RooDoubleCB.C](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.C). This suggestion can be taken as an opportunity to improve the crystal ball shapes in RooFit in general. Right now there is the [RooCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation.; * Implement batch computation interface.; * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:; * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h); * [RooDoubleCBFast.cc](https://github.co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/pull/7260:92,Availability,avail,available,92,Adds TBB-based counter types for global read-write locks and use one by default when TBB is available. This gives a 7% speedup in a medium sized test filling histograms from CMS NanoAOD with RDF and 256 threads. This implements the last part of the improvements originally discussed in https://github.com/root-project/root/pull/6919,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:145,Testability,test,test,145,Adds TBB-based counter types for global read-write locks and use one by default when TBB is available. This gives a 7% speedup in a medium sized test filling histograms from CMS NanoAOD with RDF and 256 threads. This implements the last part of the improvements originally discussed in https://github.com/root-project/root/pull/6919,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7262:174,Availability,avail,available,174,"The goal is to connect to other slots passing arguments by value, for example TGButton, ChangeText(=""Value was modified""), independently on the specific value set. The other available signals have arguments, so they can not be reused for this purpose.; Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7262
https://github.com/root-project/root/pull/7264:661,Deployability,release,release,661,"The fill pattern sector made a crash on Mac with Cocoa.; The problem was mentioned here: https://root-forum.cern.ch/t/fillcolor-bug-in-root-6-22/43599/2; The fix was found by Timur:; «Filling with patterns is based on callbacks, and those callbacks need an extra information from ROOT, which; is passed as a parameter. Previously, we had this information as a stack-allocated object whose address we were passing. Starting from macOS 11/SDK 10.16, the rendering callback may be triggered when stack-allocated object had already exited its scope and finished its lifetime. Another change we need now — PatternContext also has to care about ‘fImage’ — retain and release then needed, simple non-owning reference is not working anymore.»",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7264
https://github.com/root-project/root/pull/7264:366,Energy Efficiency,allocate,allocated,366,"The fill pattern sector made a crash on Mac with Cocoa.; The problem was mentioned here: https://root-forum.cern.ch/t/fillcolor-bug-in-root-6-22/43599/2; The fix was found by Timur:; «Filling with patterns is based on callbacks, and those callbacks need an extra information from ROOT, which; is passed as a parameter. Previously, we had this information as a stack-allocated object whose address we were passing. Starting from macOS 11/SDK 10.16, the rendering callback may be triggered when stack-allocated object had already exited its scope and finished its lifetime. Another change we need now — PatternContext also has to care about ‘fImage’ — retain and release then needed, simple non-owning reference is not working anymore.»",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7264
https://github.com/root-project/root/pull/7264:499,Energy Efficiency,allocate,allocated,499,"The fill pattern sector made a crash on Mac with Cocoa.; The problem was mentioned here: https://root-forum.cern.ch/t/fillcolor-bug-in-root-6-22/43599/2; The fix was found by Timur:; «Filling with patterns is based on callbacks, and those callbacks need an extra information from ROOT, which; is passed as a parameter. Previously, we had this information as a stack-allocated object whose address we were passing. Starting from macOS 11/SDK 10.16, the rendering callback may be triggered when stack-allocated object had already exited its scope and finished its lifetime. Another change we need now — PatternContext also has to care about ‘fImage’ — retain and release then needed, simple non-owning reference is not working anymore.»",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7264
https://github.com/root-project/root/pull/7264:682,Usability,simpl,simple,682,"The fill pattern sector made a crash on Mac with Cocoa.; The problem was mentioned here: https://root-forum.cern.ch/t/fillcolor-bug-in-root-6-22/43599/2; The fix was found by Timur:; «Filling with patterns is based on callbacks, and those callbacks need an extra information from ROOT, which; is passed as a parameter. Previously, we had this information as a stack-allocated object whose address we were passing. Starting from macOS 11/SDK 10.16, the rendering callback may be triggered when stack-allocated object had already exited its scope and finished its lifetime. Another change we need now — PatternContext also has to care about ‘fImage’ — retain and release then needed, simple non-owning reference is not working anymore.»",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7264
https://github.com/root-project/root/pull/7265:25,Availability,error,error,25,"Thsi fixes the following error:; ```; MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll) [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7265
https://github.com/root-project/root/pull/7265:66,Availability,error,error,66,"Thsi fixes the following error:; ```; MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll) [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7265
https://github.com/root-project/root/pull/7265:283,Testability,test,test,283,"Thsi fixes the following error:; ```; MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll) [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7265
https://github.com/root-project/root/pull/7266:151,Availability,recover,recovery,151,"I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode.; Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick; also in batch mode.; This allows for propagating information about evaluation errors to the; minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7266
https://github.com/root-project/root/pull/7266:210,Availability,recover,recovery,210,"I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode.; Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick; also in batch mode.; This allows for propagating information about evaluation errors to the; minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7266
https://github.com/root-project/root/pull/7266:421,Availability,error,errors,421,"I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode.; Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick; also in batch mode.; This allows for propagating information about evaluation errors to the; minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7266
https://github.com/root-project/root/pull/7266:151,Safety,recover,recovery,151,"I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode.; Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick; also in batch mode.; This allows for propagating information about evaluation errors to the; minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7266
https://github.com/root-project/root/pull/7266:210,Safety,recover,recovery,210,"I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode.; Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick; also in batch mode.; This allows for propagating information about evaluation errors to the; minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7266
https://github.com/root-project/root/pull/7268:13,Testability,test,test,13,"...and add a test. This fixes ROOT-10321. This is also the proper fix for ROOT-9785 (basically the same; issue/feature request), which was supposed to be fixed by; 78fca0b but unfortunately that commit enabled the conversion; based on the wrong condition: `is_convertible<T, TO>` rather; than `is_convertible<T*, TO*>`.; In order to fully delegate the decision on convertibility to; `shared_ptr`, we now use `is_constructible<shared_ptr<TO>, shared_ptr<T>>`; as the condition instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7268
https://github.com/root-project/root/pull/7270:15,Integrability,message,message,15,This PR adds a message viewing accessible through top left menu.; At the moment the view content is browser console messages and a checkbox to enable/disable debug mode. There are also minor changes in log messages and additional try/catch blocks.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7270
https://github.com/root-project/root/pull/7270:116,Integrability,message,messages,116,This PR adds a message viewing accessible through top left menu.; At the moment the view content is browser console messages and a checkbox to enable/disable debug mode. There are also minor changes in log messages and additional try/catch blocks.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7270
https://github.com/root-project/root/pull/7270:206,Integrability,message,messages,206,This PR adds a message viewing accessible through top left menu.; At the moment the view content is browser console messages and a checkbox to enable/disable debug mode. There are also minor changes in log messages and additional try/catch blocks.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7270
https://github.com/root-project/root/pull/7270:31,Security,access,accessible,31,This PR adds a message viewing accessible through top left menu.; At the moment the view content is browser console messages and a checkbox to enable/disable debug mode. There are also minor changes in log messages and additional try/catch blocks.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7270
https://github.com/root-project/root/pull/7270:202,Testability,log,log,202,This PR adds a message viewing accessible through top left menu.; At the moment the view content is browser console messages and a checkbox to enable/disable debug mode. There are also minor changes in log messages and additional try/catch blocks.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7270
https://github.com/root-project/root/issues/7273:1127,Availability,Down,Download,1127,"assigning bin numbers to events in a dataset of 10000 events and printing the number of events in each bin. One is C++ using `RDataFrame`, the other is Python using Pandas. The Pandas one is 3x faster; see the output from `hyperfine`. ```; Benchmark #1: ./mwe ../data/D0_sample_5.root; Time (mean ± σ): 1.338 s ± 0.010 s [User: 1.233 s, System: 0.093 s]; Range (min … max): 1.321 s … 1.349 s 10 runs; ```; ```; Benchmark #1: python3 mwe.py ../data/D0_sample_5.root; Time (mean ± σ): 431.3 ms ± 4.6 ms [User: 469.8 ms, System: 153.6 ms]; Range (min … max): 423.9 ms … 436.5 ms 10 runs; ```. This is the first time I attempted to use `RDataFrame` and I might very well be doing it wrong. Advice would be appreciated. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->; 1. Download [D0_sample_5.root](http://ipnp.cz/~cervenkov/data/D0_sample_5.root) (1.6MB); 2. Compile `RDataFrame` MWE using `g++ mwe.cc $(root-config --cflags) $(root-config --glibs) -o mwe`; 3. Run `./mwe D0_sample_5.root` and `python3 mwe.py D0_sample_5.root`. #### `mwe.cc`:; ```cpp; #include <iostream>; #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {; const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,; 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,; 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};; int bin = -1;; for (int i = 0; i < 9; i++) {; if (time < bin_edges[i]); return bin;; bin++;; }; return bin;; }. int main(int argc, char *argv[]) {; ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);; auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;; ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];; std::string cut;; for (int time_bin = 0; time_bin < time_bins; time_bin++) {; cut = ""time_bin == "";; cut += std::to_string(t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:2803,Availability,down,download,2803," Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->; 1. Download [D0_sample_5.root](http://ipnp.cz/~cervenkov/data/D0_sample_5.root) (1.6MB); 2. Compile `RDataFrame` MWE using `g++ mwe.cc $(root-config --cflags) $(root-config --glibs) -o mwe`; 3. Run `./mwe D0_sample_5.root` and `python3 mwe.py D0_sample_5.root`. #### `mwe.cc`:; ```cpp; #include <iostream>; #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {; const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,; 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,; 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};; int bin = -1;; for (int i = 0; i < 9; i++) {; if (time < bin_edges[i]); return bin;; bin++;; }; return bin;; }. int main(int argc, char *argv[]) {; ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);; auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;; ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];; std::string cut;; for (int time_bin = 0; time_bin < time_bins; time_bin++) {; cut = ""time_bin == "";; cut += std::to_string(time_bin);; counts[time_bin] = df.Filter(cut).Count();; }. for (int time_bin = 0; time_bin < time_bins; time_bin++) {; std::cout << *counts[time_bin] << std::endl;; }. return 0;; }; ```. #### `mwe.py`:; ```python; import uproot; import pandas as pd; import sys. df = uproot.open(sys.argv[1])[""DalitzEventList""].arrays(library=""pd""); time_bin_edges = [0.00025 * i for i in range(9)]; df[""time_bin""] = pd.cut(; df[""D_decayTime""],; time_bin_edges,; include_lowest=True,; labels=range(len(time_bin_edges) - 1),; ); print(df.groupby(""time_bin"").size()); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.22.06; Linux 5.4.0, Ubuntu 18.04-like; Binary download of ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:2896,Availability,down,download,2896," Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->; 1. Download [D0_sample_5.root](http://ipnp.cz/~cervenkov/data/D0_sample_5.root) (1.6MB); 2. Compile `RDataFrame` MWE using `g++ mwe.cc $(root-config --cflags) $(root-config --glibs) -o mwe`; 3. Run `./mwe D0_sample_5.root` and `python3 mwe.py D0_sample_5.root`. #### `mwe.cc`:; ```cpp; #include <iostream>; #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {; const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,; 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,; 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};; int bin = -1;; for (int i = 0; i < 9; i++) {; if (time < bin_edges[i]); return bin;; bin++;; }; return bin;; }. int main(int argc, char *argv[]) {; ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);; auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;; ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];; std::string cut;; for (int time_bin = 0; time_bin < time_bins; time_bin++) {; cut = ""time_bin == "";; cut += std::to_string(time_bin);; counts[time_bin] = df.Filter(cut).Count();; }. for (int time_bin = 0; time_bin < time_bins; time_bin++) {; std::cout << *counts[time_bin] << std::endl;; }. return 0;; }; ```. #### `mwe.py`:; ```python; import uproot; import pandas as pd; import sys. df = uproot.open(sys.argv[1])[""DalitzEventList""].arrays(library=""pd""); time_bin_edges = [0.00025 * i for i in range(9)]; df[""time_bin""] = pd.cut(; df[""D_decayTime""],; time_bin_edges,; include_lowest=True,; labels=range(len(time_bin_edges) - 1),; ); print(df.groupby(""time_bin"").size()); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.22.06; Linux 5.4.0, Ubuntu 18.04-like; Binary download of ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:2785,Deployability,install,install,2785," Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->; 1. Download [D0_sample_5.root](http://ipnp.cz/~cervenkov/data/D0_sample_5.root) (1.6MB); 2. Compile `RDataFrame` MWE using `g++ mwe.cc $(root-config --cflags) $(root-config --glibs) -o mwe`; 3. Run `./mwe D0_sample_5.root` and `python3 mwe.py D0_sample_5.root`. #### `mwe.cc`:; ```cpp; #include <iostream>; #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {; const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,; 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,; 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};; int bin = -1;; for (int i = 0; i < 9; i++) {; if (time < bin_edges[i]); return bin;; bin++;; }; return bin;; }. int main(int argc, char *argv[]) {; ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);; auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;; ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];; std::string cut;; for (int time_bin = 0; time_bin < time_bins; time_bin++) {; cut = ""time_bin == "";; cut += std::to_string(time_bin);; counts[time_bin] = df.Filter(cut).Count();; }. for (int time_bin = 0; time_bin < time_bins; time_bin++) {; std::cout << *counts[time_bin] << std::endl;; }. return 0;; }; ```. #### `mwe.py`:; ```python; import uproot; import pandas as pd; import sys. df = uproot.open(sys.argv[1])[""DalitzEventList""].arrays(library=""pd""); time_bin_edges = [0.00025 * i for i in range(9)]; df[""time_bin""] = pd.cut(; df[""D_decayTime""],; time_bin_edges,; include_lowest=True,; labels=range(len(time_bin_edges) - 1),; ); print(df.groupby(""time_bin"").size()); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.22.06; Linux 5.4.0, Ubuntu 18.04-like; Binary download of ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:1266,Modifiability,config,config,1266,"is Python using Pandas. The Pandas one is 3x faster; see the output from `hyperfine`. ```; Benchmark #1: ./mwe ../data/D0_sample_5.root; Time (mean ± σ): 1.338 s ± 0.010 s [User: 1.233 s, System: 0.093 s]; Range (min … max): 1.321 s … 1.349 s 10 runs; ```; ```; Benchmark #1: python3 mwe.py ../data/D0_sample_5.root; Time (mean ± σ): 431.3 ms ± 4.6 ms [User: 469.8 ms, System: 153.6 ms]; Range (min … max): 423.9 ms … 436.5 ms 10 runs; ```. This is the first time I attempted to use `RDataFrame` and I might very well be doing it wrong. Advice would be appreciated. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->; 1. Download [D0_sample_5.root](http://ipnp.cz/~cervenkov/data/D0_sample_5.root) (1.6MB); 2. Compile `RDataFrame` MWE using `g++ mwe.cc $(root-config --cflags) $(root-config --glibs) -o mwe`; 3. Run `./mwe D0_sample_5.root` and `python3 mwe.py D0_sample_5.root`. #### `mwe.cc`:; ```cpp; #include <iostream>; #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {; const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,; 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,; 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};; int bin = -1;; for (int i = 0; i < 9; i++) {; if (time < bin_edges[i]); return bin;; bin++;; }; return bin;; }. int main(int argc, char *argv[]) {; ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);; auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;; ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];; std::string cut;; for (int time_bin = 0; time_bin < time_bins; time_bin++) {; cut = ""time_bin == "";; cut += std::to_string(time_bin);; counts[time_bin] = df.Filter(cut).Count();; }. for (int time_bin = 0; time_bin < time_bins; time_bin++) {; std::cout << *counts[time_bin] ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:1290,Modifiability,config,config,1290,"is Python using Pandas. The Pandas one is 3x faster; see the output from `hyperfine`. ```; Benchmark #1: ./mwe ../data/D0_sample_5.root; Time (mean ± σ): 1.338 s ± 0.010 s [User: 1.233 s, System: 0.093 s]; Range (min … max): 1.321 s … 1.349 s 10 runs; ```; ```; Benchmark #1: python3 mwe.py ../data/D0_sample_5.root; Time (mean ± σ): 431.3 ms ± 4.6 ms [User: 469.8 ms, System: 153.6 ms]; Range (min … max): 423.9 ms … 436.5 ms 10 runs; ```. This is the first time I attempted to use `RDataFrame` and I might very well be doing it wrong. Advice would be appreciated. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->; 1. Download [D0_sample_5.root](http://ipnp.cz/~cervenkov/data/D0_sample_5.root) (1.6MB); 2. Compile `RDataFrame` MWE using `g++ mwe.cc $(root-config --cflags) $(root-config --glibs) -o mwe`; 3. Run `./mwe D0_sample_5.root` and `python3 mwe.py D0_sample_5.root`. #### `mwe.cc`:; ```cpp; #include <iostream>; #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {; const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,; 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,; 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};; int bin = -1;; for (int i = 0; i < 9; i++) {; if (time < bin_edges[i]); return bin;; bin++;; }; return bin;; }. int main(int argc, char *argv[]) {; ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);; auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;; ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];; std::string cut;; for (int time_bin = 0; time_bin < time_bins; time_bin++) {; cut = ""time_bin == "";; cut += std::to_string(time_bin);; counts[time_bin] = df.Filter(cut).Count();; }. for (int time_bin = 0; time_bin < time_bins; time_bin++) {; std::cout << *counts[time_bin] ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:377,Testability,Benchmark,Benchmark,377,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->; I prepared two short MWEs assigning bin numbers to events in a dataset of 10000 events and printing the number of events in each bin. One is C++ using `RDataFrame`, the other is Python using Pandas. The Pandas one is 3x faster; see the output from `hyperfine`. ```; Benchmark #1: ./mwe ../data/D0_sample_5.root; Time (mean ± σ): 1.338 s ± 0.010 s [User: 1.233 s, System: 0.093 s]; Range (min … max): 1.321 s … 1.349 s 10 runs; ```; ```; Benchmark #1: python3 mwe.py ../data/D0_sample_5.root; Time (mean ± σ): 431.3 ms ± 4.6 ms [User: 469.8 ms, System: 153.6 ms]; Range (min … max): 423.9 ms … 436.5 ms 10 runs; ```. This is the first time I attempted to use `RDataFrame` and I might very well be doing it wrong. Advice would be appreciated. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->; 1. Download [D0_sample_5.root](http://ipnp.cz/~cervenkov/data/D0_sample_5.root) (1.6MB); 2. Compile `RDataFrame` MWE using `g++ mwe.cc $(root-config --cflags) $(root-config --glibs) -o mwe`; 3. Run `./mwe D0_sample_5.root` and `python3 mwe.py D0_sample_5.root`. #### `mwe.cc`:; ```cpp; #include <iostream>; #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {; const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,; 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,; 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};; int bin = -1;; for (int i = 0; i < 9; i++) {; if (time < bin_edges[i]); return bin;; bin++;; }; return bin;; }. int main(int argc, char *argv[]) {; ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);; auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;; ROOT::RDF::RResultPtr<ULong64_t> counts[",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:548,Testability,Benchmark,Benchmark,548,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->; I prepared two short MWEs assigning bin numbers to events in a dataset of 10000 events and printing the number of events in each bin. One is C++ using `RDataFrame`, the other is Python using Pandas. The Pandas one is 3x faster; see the output from `hyperfine`. ```; Benchmark #1: ./mwe ../data/D0_sample_5.root; Time (mean ± σ): 1.338 s ± 0.010 s [User: 1.233 s, System: 0.093 s]; Range (min … max): 1.321 s … 1.349 s 10 runs; ```; ```; Benchmark #1: python3 mwe.py ../data/D0_sample_5.root; Time (mean ± σ): 431.3 ms ± 4.6 ms [User: 469.8 ms, System: 153.6 ms]; Range (min … max): 423.9 ms … 436.5 ms 10 runs; ```. This is the first time I attempted to use `RDataFrame` and I might very well be doing it wrong. Advice would be appreciated. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->; 1. Download [D0_sample_5.root](http://ipnp.cz/~cervenkov/data/D0_sample_5.root) (1.6MB); 2. Compile `RDataFrame` MWE using `g++ mwe.cc $(root-config --cflags) $(root-config --glibs) -o mwe`; 3. Run `./mwe D0_sample_5.root` and `python3 mwe.py D0_sample_5.root`. #### `mwe.cc`:; ```cpp; #include <iostream>; #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {; const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,; 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,; 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};; int bin = -1;; for (int i = 0; i < 9; i++) {; if (time < bin_edges[i]); return bin;; bin++;; }; return bin;; }. int main(int argc, char *argv[]) {; ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);; auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;; ROOT::RDF::RResultPtr<ULong64_t> counts[",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/pull/7274:23,Availability,failure,failure,23,a. Fix the test/stress failure when using the built-in zlib; b. disable new test that uses RDataFrame when it is not available. Tweak TF1 backward compatibility mechanism (switch from using stale data member to using an I/O rule).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7274
https://github.com/root-project/root/pull/7274:117,Availability,avail,available,117,a. Fix the test/stress failure when using the built-in zlib; b. disable new test that uses RDataFrame when it is not available. Tweak TF1 backward compatibility mechanism (switch from using stale data member to using an I/O rule).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7274
https://github.com/root-project/root/pull/7274:11,Testability,test,test,11,a. Fix the test/stress failure when using the built-in zlib; b. disable new test that uses RDataFrame when it is not available. Tweak TF1 backward compatibility mechanism (switch from using stale data member to using an I/O rule).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7274
https://github.com/root-project/root/pull/7274:76,Testability,test,test,76,a. Fix the test/stress failure when using the built-in zlib; b. disable new test that uses RDataFrame when it is not available. Tweak TF1 backward compatibility mechanism (switch from using stale data member to using an I/O rule).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7274
https://github.com/root-project/root/issues/7276:1730,Deployability,release,releases,1730,"ot -b; ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc); root [0] RooWorkspace w(""w"");; root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");; root [4] w.writeToFile(""simplest-53432.root"");; ```; * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:; * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12); * Setup ROOT 6.22/06 and load the file:; ```; % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg; % root -b; root [0] TFile::Open(""simplest-53432.root""); *** Break *** segmentation violation; ...; #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713; #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590; #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367; #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563; #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586; #15 0x00007f7919c76b47 in (anonymous namespace):",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:1929,Deployability,release,releases,1929,"iteToFile(""simplest-53432.root"");; ```; * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:; * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12); * Setup ROOT 6.22/06 and load the file:; ```; % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg; % root -b; root [0] TFile::Open(""simplest-53432.root""); *** Break *** segmentation violation; ...; #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713; #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590; #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367; #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563; #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586; #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690; #16 0x00007",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:2143,Deployability,release,releases,2143,"5.root` (created with ROOT 5.34/25); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12); * Setup ROOT 6.22/06 and load the file:; ```; % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg; % root -b; root [0] TFile::Open(""simplest-53432.root""); *** Break *** segmentation violation; ...; #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713; #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590; #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367; #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563; #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586; #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690; #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:1409,Performance,load,load,1409," a RooWorkspace from a file written with ROOT 5.34. ### Expected behavior; The RooWorkspace should be read from the file, as it did when read with ROOT 6.22/00.; ROOT 6.22/06 also successfully reads files created with ROOT 6.02/12 and later. ### To Reproduce; * Create any workspace file with ROOT 5.34, eg.; ```; % root -b; ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc); root [0] RooWorkspace w(""w"");; root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");; root [4] w.writeToFile(""simplest-53432.root"");; ```; * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:; * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12); * Setup ROOT 6.22/06 and load the file:; ```; % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg; % root -b; root [0] TFile::Open(""simplest-53432.root""); *** Break *** segmentation violation; ...; #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713; #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590; #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367; #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:1655,Performance,load,load,1655,"To Reproduce; * Create any workspace file with ROOT 5.34, eg.; ```; % root -b; ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc); root [0] RooWorkspace w(""w"");; root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");; root [4] w.writeToFile(""simplest-53432.root"");; ```; * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:; * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12); * Setup ROOT 6.22/06 and load the file:; ```; % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg; % root -b; root [0] TFile::Open(""simplest-53432.root""); *** Break *** segmentation violation; ...; #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713; #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590; #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367; #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563; #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:3278,Performance,load,load,3278,", version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563; #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586; #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690; #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058; #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, load=true) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1139; #18 0x00007f7919c2d155 in TFile::ReadStreamerInfo (this=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:3557; #19 0x00007f7919c20f28 in TFile::Init (this=0x2e19f80, create=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:823; #20 0x00007f7919c1f0ae in TFile::TFile (this=0x2e19f80, fname1=0x2a29630 ""simplest-53432.root"", option=0x7ffe32cac239 """", ftitle=0x7f791cfb8014 """", compress=101) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:483; #21 0x00007f7919c2f8f4 in TFile::Open (url=0x7f791cfb8000 ""simplest-53432.root"", options=0x7f791cfb8014 """", ftitle=0x7f791cfb8014 """", compress=101, netopt=0) at /build/jenkins/workspace/lcg_r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:944,Usability,simpl,simplest-,944,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; ROOT 6.22/06 crashes when reading a RooWorkspace from a file written with ROOT 5.34. ### Expected behavior; The RooWorkspace should be read from the file, as it did when read with ROOT 6.22/00.; ROOT 6.22/06 also successfully reads files created with ROOT 6.02/12 and later. ### To Reproduce; * Create any workspace file with ROOT 5.34, eg.; ```; % root -b; ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc); root [0] RooWorkspace w(""w"");; root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");; root [4] w.writeToFile(""simplest-53432.root"");; ```; * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:; * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12); * Setup ROOT 6.22/06 and load the file:; ```; % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg; % root -b; root [0] TFile::Open(""simplest-53432.root""); *** Break *** segmentation violation; ...; #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713; #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_ba",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:1134,Usability,simpl,simplest-,1134," * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; ROOT 6.22/06 crashes when reading a RooWorkspace from a file written with ROOT 5.34. ### Expected behavior; The RooWorkspace should be read from the file, as it did when read with ROOT 6.22/00.; ROOT 6.22/06 also successfully reads files created with ROOT 6.02/12 and later. ### To Reproduce; * Create any workspace file with ROOT 5.34, eg.; ```; % root -b; ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc); root [0] RooWorkspace w(""w"");; root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");; root [4] w.writeToFile(""simplest-53432.root"");; ```; * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:; * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12); * Setup ROOT 6.22/06 and load the file:; ```; % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg; % root -b; root [0] TFile::Open(""simplest-53432.root""); *** Break *** segmentation violation; ...; #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713; #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590; #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:1234,Usability,simpl,simplest-,1234,"ur issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; ROOT 6.22/06 crashes when reading a RooWorkspace from a file written with ROOT 5.34. ### Expected behavior; The RooWorkspace should be read from the file, as it did when read with ROOT 6.22/00.; ROOT 6.22/06 also successfully reads files created with ROOT 6.02/12 and later. ### To Reproduce; * Create any workspace file with ROOT 5.34, eg.; ```; % root -b; ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc); root [0] RooWorkspace w(""w"");; root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");; root [4] w.writeToFile(""simplest-53432.root"");; ```; * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:; * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12); * Setup ROOT 6.22/06 and load the file:; ```; % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg; % root -b; root [0] TFile::Open(""simplest-53432.root""); *** Break *** segmentation violation; ...; #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713; #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590; #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367; #13 0x0000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:1334,Usability,simpl,simplest-,1334,"till exists in today's master"".; -->. ### Describe the bug; ROOT 6.22/06 crashes when reading a RooWorkspace from a file written with ROOT 5.34. ### Expected behavior; The RooWorkspace should be read from the file, as it did when read with ROOT 6.22/00.; ROOT 6.22/06 also successfully reads files created with ROOT 6.02/12 and later. ### To Reproduce; * Create any workspace file with ROOT 5.34, eg.; ```; % root -b; ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc); root [0] RooWorkspace w(""w"");; root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");; root [4] w.writeToFile(""simplest-53432.root"");; ```; * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:; * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12); * Setup ROOT 6.22/06 and load the file:; ```; % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg; % root -b; root [0] TFile::Open(""simplest-53432.root""); *** Break *** segmentation violation; ...; #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713; #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590; #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367; #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:1542,Usability,simpl,simplest-,1542,"be read from the file, as it did when read with ROOT 6.22/00.; ROOT 6.22/06 also successfully reads files created with ROOT 6.02/12 and later. ### To Reproduce; * Create any workspace file with ROOT 5.34, eg.; ```; % root -b; ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc); root [0] RooWorkspace w(""w"");; root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");; root [4] w.writeToFile(""simplest-53432.root"");; ```; * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:; * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12); * Setup ROOT 6.22/06 and load the file:; ```; % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg; % root -b; root [0] TFile::Open(""simplest-53432.root""); *** Break *** segmentation violation; ...; #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713; #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590; #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367; #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563; #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:3872,Usability,simpl,simplest-,3872,"ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586; #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690; #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058; #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, load=true) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1139; #18 0x00007f7919c2d155 in TFile::ReadStreamerInfo (this=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:3557; #19 0x00007f7919c20f28 in TFile::Init (this=0x2e19f80, create=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:823; #20 0x00007f7919c1f0ae in TFile::TFile (this=0x2e19f80, fname1=0x2a29630 ""simplest-53432.root"", option=0x7ffe32cac239 """", ftitle=0x7f791cfb8014 """", compress=101) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:483; #21 0x00007f7919c2f8f4 in TFile::Open (url=0x7f791cfb8000 ""simplest-53432.root"", options=0x7f791cfb8014 """", ftitle=0x7f791cfb8014 """", compress=101, netopt=0) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06; ```; * perhaps there is a problem with the `FixCollectionV5`. ### Setup; 1. ROOT 6.22/06 (crashes) vs ROOT 6.22/00 (reads OK); 2. CentOS7 x86_64 (lxplus); 3. `/cvmfs/sft.cern.ch/lcg/views/LCG_99` (tried different arches, same crash) vs `/cvmfs/sft.cern.ch/lcg/views/LCG_98` (reads OK)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:4140,Usability,simpl,simplest-,4140,"ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586; #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690; #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058; #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, load=true) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1139; #18 0x00007f7919c2d155 in TFile::ReadStreamerInfo (this=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:3557; #19 0x00007f7919c20f28 in TFile::Init (this=0x2e19f80, create=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:823; #20 0x00007f7919c1f0ae in TFile::TFile (this=0x2e19f80, fname1=0x2a29630 ""simplest-53432.root"", option=0x7ffe32cac239 """", ftitle=0x7f791cfb8014 """", compress=101) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:483; #21 0x00007f7919c2f8f4 in TFile::Open (url=0x7f791cfb8000 ""simplest-53432.root"", options=0x7f791cfb8014 """", ftitle=0x7f791cfb8014 """", compress=101, netopt=0) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06; ```; * perhaps there is a problem with the `FixCollectionV5`. ### Setup; 1. ROOT 6.22/06 (crashes) vs ROOT 6.22/00 (reads OK); 2. CentOS7 x86_64 (lxplus); 3. `/cvmfs/sft.cern.ch/lcg/views/LCG_99` (tried different arches, same crash) vs `/cvmfs/sft.cern.ch/lcg/views/LCG_98` (reads OK)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/pull/7278:145,Deployability,release,release,145,"It's a problem of old gccs. New compilers consider naming a variable the; same as a function not a shadow. This was fixed in gcc5, although the; release notes of gcc 4.8 claim that it was in 4.8. That's not the case,; as the warning that popped up in the nightlies showed. This commit silences these warnings by renaming the relevant variables.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7278
https://github.com/root-project/root/pull/7278:60,Modifiability,variab,variable,60,"It's a problem of old gccs. New compilers consider naming a variable the; same as a function not a shadow. This was fixed in gcc5, although the; release notes of gcc 4.8 claim that it was in 4.8. That's not the case,; as the warning that popped up in the nightlies showed. This commit silences these warnings by renaming the relevant variables.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7278
https://github.com/root-project/root/pull/7278:334,Modifiability,variab,variables,334,"It's a problem of old gccs. New compilers consider naming a variable the; same as a function not a shadow. This was fixed in gcc5, although the; release notes of gcc 4.8 claim that it was in 4.8. That's not the case,; as the warning that popped up in the nightlies showed. This commit silences these warnings by renaming the relevant variables.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7278
https://github.com/root-project/root/issues/7279:46,Availability,down,downloaded,46,"### Describe the bug; PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior; PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:40,Usability,Guid,Guide,40,"### Describe the bug; PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior; PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:82,Usability,guid,guides,82,"### Describe the bug; PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior; PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:95,Usability,guid,guide,95,"### Describe the bug; PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior; PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:204,Usability,Guid,Guide,204,"### Describe the bug; PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior; PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:386,Usability,Guid,Guide,386,"### Describe the bug; PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior; PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/pull/7280:24,Performance,optimiz,optimizeCacheMode,24,"When calling RooAbsArg::optimizeCacheMode look for already processNodes by pointer using RooLinkedList::FindObject instead of RooLinkedList::findArg which looks by name.; This makes sure that nodes in the computational graph with the same name are not skipped and for example propagation of operMode (e.g. ADIRTY) is done. ; This happens for the case of RooFFTConvPdf (RooAbsCachedPdf) where 2 caches exist, one for normalized and one for the unnormalized pdf. In that case the ADIRTY flag was not propagated for the normalized cache and when computing likelihood (and fit) was done only suing dirst data point! (see ROOT-8497). This fixes ROOT-5380 and ROOT-8497 (RooProdPdf which includes a RooFFT). The PR includes also a commit making different names for cached pdf of RooAbsCachedPdf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7280
https://github.com/root-project/root/pull/7280:394,Performance,cache,caches,394,"When calling RooAbsArg::optimizeCacheMode look for already processNodes by pointer using RooLinkedList::FindObject instead of RooLinkedList::findArg which looks by name.; This makes sure that nodes in the computational graph with the same name are not skipped and for example propagation of operMode (e.g. ADIRTY) is done. ; This happens for the case of RooFFTConvPdf (RooAbsCachedPdf) where 2 caches exist, one for normalized and one for the unnormalized pdf. In that case the ADIRTY flag was not propagated for the normalized cache and when computing likelihood (and fit) was done only suing dirst data point! (see ROOT-8497). This fixes ROOT-5380 and ROOT-8497 (RooProdPdf which includes a RooFFT). The PR includes also a commit making different names for cached pdf of RooAbsCachedPdf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7280
https://github.com/root-project/root/pull/7280:528,Performance,cache,cache,528,"When calling RooAbsArg::optimizeCacheMode look for already processNodes by pointer using RooLinkedList::FindObject instead of RooLinkedList::findArg which looks by name.; This makes sure that nodes in the computational graph with the same name are not skipped and for example propagation of operMode (e.g. ADIRTY) is done. ; This happens for the case of RooFFTConvPdf (RooAbsCachedPdf) where 2 caches exist, one for normalized and one for the unnormalized pdf. In that case the ADIRTY flag was not propagated for the normalized cache and when computing likelihood (and fit) was done only suing dirst data point! (see ROOT-8497). This fixes ROOT-5380 and ROOT-8497 (RooProdPdf which includes a RooFFT). The PR includes also a commit making different names for cached pdf of RooAbsCachedPdf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7280
https://github.com/root-project/root/pull/7280:759,Performance,cache,cached,759,"When calling RooAbsArg::optimizeCacheMode look for already processNodes by pointer using RooLinkedList::FindObject instead of RooLinkedList::findArg which looks by name.; This makes sure that nodes in the computational graph with the same name are not skipped and for example propagation of operMode (e.g. ADIRTY) is done. ; This happens for the case of RooFFTConvPdf (RooAbsCachedPdf) where 2 caches exist, one for normalized and one for the unnormalized pdf. In that case the ADIRTY flag was not propagated for the normalized cache and when computing likelihood (and fit) was done only suing dirst data point! (see ROOT-8497). This fixes ROOT-5380 and ROOT-8497 (RooProdPdf which includes a RooFFT). The PR includes also a commit making different names for cached pdf of RooAbsCachedPdf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7280
https://github.com/root-project/root/issues/7282:2310,Modifiability,refactor,refactor,2310,"ne canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html ; should ideally become just ; https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like; https://root.cern/doc/; In that case the manual (and other docs) should also be in that directory, not at; https://root.cern/manual/. 3a) User Guide is located at; https://root.cern/d/guides/users-guide.html; On parent path; https://root.cern/d/guides/; there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for; https://root.cern/doc/; (automatic list). 4\) As I understand, the main page for documentation is; https://root.cern.ch/d/documentation.html; There is also; https://root.cern/doc/master/; these two pages should probably be one page. 5\) Rearrange ""Provide your feedback""; I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to; https://root.cern/get_started/; which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible?. 7\) On the page https://root.cern/about/; there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,; https://root.cern/d/root-user-guides-and-manuals.html; I think this is a very good reference page for documentation. Could you link this from the main documentation overview page? (or just use this page instead of that)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:28,Usability,guid,guide,28,"Today I searched for User's guide on the site, and wanted to share several ideas for improvement. 1\) Remove duplicate links.; In modern Web Development it's appreciated that same content has only one link on the site, and a link is meaningful in itself (see Django guidelines).; For example: from the main page I can see a link to the documentation,; https://root.cern/d/documentation.html; If I delete the last part, I get; https://root.cern/d/; which is a) meaningless b) same as the main page. ; The third link to that same page is ; https://root.cern/d/index.html. Surprisingly, the link; https://root.cern/index.html; has different contents!. Probably there is little surprise that there exists the 2nd version of the site,; https://root.cern.ch/ (with its own index.html, and all these links).; I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html ; should ideally become just ; https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like; https://root.cern/doc/; In that case the manual (and other docs) should also be in that directory, not at; https://root.cern/manual/. 3a) User Guide is located at; https://root.cern/d/guides/users-guide.html; On parent path; https://root.cern/d/guides/; there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for; https://root.cern/doc/; (automatic list). 4\) As I understand, the main page for documentation is; https://root.cern.ch/d/documentation.html; There is also; https://root.cern/doc/master/; these two pages should probably be one page. 5\) Rearrange ""Provide your feedback""; I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:266,Usability,guid,guidelines,266,"Today I searched for User's guide on the site, and wanted to share several ideas for improvement. 1\) Remove duplicate links.; In modern Web Development it's appreciated that same content has only one link on the site, and a link is meaningful in itself (see Django guidelines).; For example: from the main page I can see a link to the documentation,; https://root.cern/d/documentation.html; If I delete the last part, I get; https://root.cern/d/; which is a) meaningless b) same as the main page. ; The third link to that same page is ; https://root.cern/d/index.html. Surprisingly, the link; https://root.cern/index.html; has different contents!. Probably there is little surprise that there exists the 2nd version of the site,; https://root.cern.ch/ (with its own index.html, and all these links).; I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html ; should ideally become just ; https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like; https://root.cern/doc/; In that case the manual (and other docs) should also be in that directory, not at; https://root.cern/manual/. 3a) User Guide is located at; https://root.cern/d/guides/users-guide.html; On parent path; https://root.cern/d/guides/; there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for; https://root.cern/doc/; (automatic list). 4\) As I understand, the main page for documentation is; https://root.cern.ch/d/documentation.html; There is also; https://root.cern/doc/master/; these two pages should probably be one page. 5\) Rearrange ""Provide your feedback""; I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:1061,Usability,clear,clearer,1061,"e, and wanted to share several ideas for improvement. 1\) Remove duplicate links.; In modern Web Development it's appreciated that same content has only one link on the site, and a link is meaningful in itself (see Django guidelines).; For example: from the main page I can see a link to the documentation,; https://root.cern/d/documentation.html; If I delete the last part, I get; https://root.cern/d/; which is a) meaningless b) same as the main page. ; The third link to that same page is ; https://root.cern/d/index.html. Surprisingly, the link; https://root.cern/index.html; has different contents!. Probably there is little surprise that there exists the 2nd version of the site,; https://root.cern.ch/ (with its own index.html, and all these links).; I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html ; should ideally become just ; https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like; https://root.cern/doc/; In that case the manual (and other docs) should also be in that directory, not at; https://root.cern/manual/. 3a) User Guide is located at; https://root.cern/d/guides/users-guide.html; On parent path; https://root.cern/d/guides/; there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for; https://root.cern/doc/; (automatic list). 4\) As I understand, the main page for documentation is; https://root.cern.ch/d/documentation.html; There is also; https://root.cern/doc/master/; these two pages should probably be one page. 5\) Rearrange ""Provide your feedback""; I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or clos",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:1224,Usability,Guid,Guide,1224,"ningful in itself (see Django guidelines).; For example: from the main page I can see a link to the documentation,; https://root.cern/d/documentation.html; If I delete the last part, I get; https://root.cern/d/; which is a) meaningless b) same as the main page. ; The third link to that same page is ; https://root.cern/d/index.html. Surprisingly, the link; https://root.cern/index.html; has different contents!. Probably there is little surprise that there exists the 2nd version of the site,; https://root.cern.ch/ (with its own index.html, and all these links).; I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html ; should ideally become just ; https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like; https://root.cern/doc/; In that case the manual (and other docs) should also be in that directory, not at; https://root.cern/manual/. 3a) User Guide is located at; https://root.cern/d/guides/users-guide.html; On parent path; https://root.cern/d/guides/; there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for; https://root.cern/doc/; (automatic list). 4\) As I understand, the main page for documentation is; https://root.cern.ch/d/documentation.html; There is also; https://root.cern/doc/master/; these two pages should probably be one page. 5\) Rearrange ""Provide your feedback""; I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to; https://root.cern/get_started/; which, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:1265,Usability,guid,guides,1265,"lines).; For example: from the main page I can see a link to the documentation,; https://root.cern/d/documentation.html; If I delete the last part, I get; https://root.cern/d/; which is a) meaningless b) same as the main page. ; The third link to that same page is ; https://root.cern/d/index.html. Surprisingly, the link; https://root.cern/index.html; has different contents!. Probably there is little surprise that there exists the 2nd version of the site,; https://root.cern.ch/ (with its own index.html, and all these links).; I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html ; should ideally become just ; https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like; https://root.cern/doc/; In that case the manual (and other docs) should also be in that directory, not at; https://root.cern/manual/. 3a) User Guide is located at; https://root.cern/d/guides/users-guide.html; On parent path; https://root.cern/d/guides/; there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for; https://root.cern/doc/; (automatic list). 4\) As I understand, the main page for documentation is; https://root.cern.ch/d/documentation.html; There is also; https://root.cern/doc/master/; these two pages should probably be one page. 5\) Rearrange ""Provide your feedback""; I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to; https://root.cern/get_started/; which, in turn, repeats description of som",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:1278,Usability,guid,guide,1278,"lines).; For example: from the main page I can see a link to the documentation,; https://root.cern/d/documentation.html; If I delete the last part, I get; https://root.cern/d/; which is a) meaningless b) same as the main page. ; The third link to that same page is ; https://root.cern/d/index.html. Surprisingly, the link; https://root.cern/index.html; has different contents!. Probably there is little surprise that there exists the 2nd version of the site,; https://root.cern.ch/ (with its own index.html, and all these links).; I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html ; should ideally become just ; https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like; https://root.cern/doc/; In that case the manual (and other docs) should also be in that directory, not at; https://root.cern/manual/. 3a) User Guide is located at; https://root.cern/d/guides/users-guide.html; On parent path; https://root.cern/d/guides/; there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for; https://root.cern/doc/; (automatic list). 4\) As I understand, the main page for documentation is; https://root.cern.ch/d/documentation.html; There is also; https://root.cern/doc/master/; these two pages should probably be one page. 5\) Rearrange ""Provide your feedback""; I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to; https://root.cern/get_started/; which, in turn, repeats description of som",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:1326,Usability,guid,guides,1326,"st part, I get; https://root.cern/d/; which is a) meaningless b) same as the main page. ; The third link to that same page is ; https://root.cern/d/index.html. Surprisingly, the link; https://root.cern/index.html; has different contents!. Probably there is little surprise that there exists the 2nd version of the site,; https://root.cern.ch/ (with its own index.html, and all these links).; I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html ; should ideally become just ; https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like; https://root.cern/doc/; In that case the manual (and other docs) should also be in that directory, not at; https://root.cern/manual/. 3a) User Guide is located at; https://root.cern/d/guides/users-guide.html; On parent path; https://root.cern/d/guides/; there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for; https://root.cern/doc/; (automatic list). 4\) As I understand, the main page for documentation is; https://root.cern.ch/d/documentation.html; There is also; https://root.cern/doc/master/; these two pages should probably be one page. 5\) Rearrange ""Provide your feedback""; I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to; https://root.cern/get_started/; which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible?. 7\) On the p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:1365,Usability,guid,guides,1365,"st part, I get; https://root.cern/d/; which is a) meaningless b) same as the main page. ; The third link to that same page is ; https://root.cern/d/index.html. Surprisingly, the link; https://root.cern/index.html; has different contents!. Probably there is little surprise that there exists the 2nd version of the site,; https://root.cern.ch/ (with its own index.html, and all these links).; I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html ; should ideally become just ; https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like; https://root.cern/doc/; In that case the manual (and other docs) should also be in that directory, not at; https://root.cern/manual/. 3a) User Guide is located at; https://root.cern/d/guides/users-guide.html; On parent path; https://root.cern/d/guides/; there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for; https://root.cern/doc/; (automatic list). 4\) As I understand, the main page for documentation is; https://root.cern.ch/d/documentation.html; There is also; https://root.cern/doc/master/; these two pages should probably be one page. 5\) Rearrange ""Provide your feedback""; I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to; https://root.cern/get_started/; which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible?. 7\) On the p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:1781,Usability,feedback,feedback,1781,"ne canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html ; should ideally become just ; https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like; https://root.cern/doc/; In that case the manual (and other docs) should also be in that directory, not at; https://root.cern/manual/. 3a) User Guide is located at; https://root.cern/d/guides/users-guide.html; On parent path; https://root.cern/d/guides/; there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for; https://root.cern/doc/; (automatic list). 4\) As I understand, the main page for documentation is; https://root.cern.ch/d/documentation.html; There is also; https://root.cern/doc/master/; these two pages should probably be one page. 5\) Rearrange ""Provide your feedback""; I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to; https://root.cern/get_started/; which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible?. 7\) On the page https://root.cern/about/; there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,; https://root.cern/d/root-user-guides-and-manuals.html; I think this is a very good reference page for documentation. Could you link this from the main documentation overview page? (or just use this page instead of that)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:2010,Usability,clear,clear,2010,"ne canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html ; should ideally become just ; https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like; https://root.cern/doc/; In that case the manual (and other docs) should also be in that directory, not at; https://root.cern/manual/. 3a) User Guide is located at; https://root.cern/d/guides/users-guide.html; On parent path; https://root.cern/d/guides/; there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for; https://root.cern/doc/; (automatic list). 4\) As I understand, the main page for documentation is; https://root.cern.ch/d/documentation.html; There is also; https://root.cern/doc/master/; these two pages should probably be one page. 5\) Rearrange ""Provide your feedback""; I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to; https://root.cern/get_started/; which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible?. 7\) On the page https://root.cern/about/; there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,; https://root.cern/d/root-user-guides-and-manuals.html; I think this is a very good reference page for documentation. Could you link this from the main documentation overview page? (or just use this page instead of that)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:2129,Usability,Guid,Guides,2129,"ne canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html ; should ideally become just ; https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like; https://root.cern/doc/; In that case the manual (and other docs) should also be in that directory, not at; https://root.cern/manual/. 3a) User Guide is located at; https://root.cern/d/guides/users-guide.html; On parent path; https://root.cern/d/guides/; there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for; https://root.cern/doc/; (automatic list). 4\) As I understand, the main page for documentation is; https://root.cern.ch/d/documentation.html; There is also; https://root.cern/doc/master/; these two pages should probably be one page. 5\) Rearrange ""Provide your feedback""; I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to; https://root.cern/get_started/; which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible?. 7\) On the page https://root.cern/about/; there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,; https://root.cern/d/root-user-guides-and-manuals.html; I think this is a very good reference page for documentation. Could you link this from the main documentation overview page? (or just use this page instead of that)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:2638,Usability,guid,guides-and-manuals,2638,"ne canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html ; should ideally become just ; https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like; https://root.cern/doc/; In that case the manual (and other docs) should also be in that directory, not at; https://root.cern/manual/. 3a) User Guide is located at; https://root.cern/d/guides/users-guide.html; On parent path; https://root.cern/d/guides/; there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for; https://root.cern/doc/; (automatic list). 4\) As I understand, the main page for documentation is; https://root.cern.ch/d/documentation.html; There is also; https://root.cern/doc/master/; these two pages should probably be one page. 5\) Rearrange ""Provide your feedback""; I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to; https://root.cern/get_started/; which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible?. 7\) On the page https://root.cern/about/; there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,; https://root.cern/d/root-user-guides-and-manuals.html; I think this is a very good reference page for documentation. Could you link this from the main documentation overview page? (or just use this page instead of that)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/pull/7283:16,Performance,optimiz,optimization,16,"Set the default optimization level for ROOT's cling to O1, and allow cling users to pass `-O...`. If perf results tell us that O1 is too slow, we can switch back to O0 for ""non-Linux or tty attached"" (i.e. interactive ROOT) in a subsequent PR. This will get merged *after* https://github.com/root-project/root/pull/6385",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7283
https://github.com/root-project/root/issues/7284:1029,Availability,redundant,redundant,1029,"Today I read User's Guide and spotted many mistakes I noticed when reading it for the first time 15 years ago. I thought that now is the time for me to act and to finally fix them.; I'm not a native speaker, so I don't insist on all of them (I still doubt the usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:; https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3; is the use the TTree::Show method; \- to use; 14.4; the branches and the leaves, is TTree::Print.; \- no need for a comma; 14.6; boxes"".; \- no need for the quote.; witch is marked; \- which is marked; exposed expression; \- I think that would sound better as ""set expression"" or another adjective.; Below them there are two text widgets; \- possible, but I think 'there' is redundant here.; for specifying; \- to specify; \-\- I think this text should be checked by a native speaker for articles and other issues.; When the “Rec” box is checked, the Draw and Scan commands; \- no need for quotes around Rec (or add them around Draw and Scan); 14.7; This picture shows the TTree class:; \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line!; 14.7.3; save all branch buffers every n byte.; \- bytes.; 14.7.4; When a TTree is memory resident, you set it up so that it retains retain only the last few entries.; \- retains; For example, this can be very useful for monitoring purpose.; \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase.; 14.7.6; The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number.; \- allows to add to the tree any user\-defined object that doesn't depend on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:381,Deployability,release,release,381,"Today I read User's Guide and spotted many mistakes I noticed when reading it for the first time 15 years ago. I thought that now is the time for me to act and to finally fix them.; I'm not a native speaker, so I don't insist on all of them (I still doubt the usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:; https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3; is the use the TTree::Show method; \- to use; 14.4; the branches and the leaves, is TTree::Print.; \- no need for a comma; 14.6; boxes"".; \- no need for the quote.; witch is marked; \- which is marked; exposed expression; \- I think that would sound better as ""set expression"" or another adjective.; Below them there are two text widgets; \- possible, but I think 'there' is redundant here.; for specifying; \- to specify; \-\- I think this text should be checked by a native speaker for articles and other issues.; When the “Rec” box is checked, the Draw and Scan commands; \- no need for quotes around Rec (or add them around Draw and Scan); 14.7; This picture shows the TTree class:; \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line!; 14.7.3; save all branch buffers every n byte.; \- bytes.; 14.7.4; When a TTree is memory resident, you set it up so that it retains retain only the last few entries.; \- retains; For example, this can be very useful for monitoring purpose.; \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase.; 14.7.6; The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number.; \- allows to add to the tree any user\-defined object that doesn't depend on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1692,Energy Efficiency,monitor,monitoring,1692,"les when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:; https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3; is the use the TTree::Show method; \- to use; 14.4; the branches and the leaves, is TTree::Print.; \- no need for a comma; 14.6; boxes"".; \- no need for the quote.; witch is marked; \- which is marked; exposed expression; \- I think that would sound better as ""set expression"" or another adjective.; Below them there are two text widgets; \- possible, but I think 'there' is redundant here.; for specifying; \- to specify; \-\- I think this text should be checked by a native speaker for articles and other issues.; When the “Rec” box is checked, the Draw and Scan commands; \- no need for quotes around Rec (or add them around Draw and Scan); 14.7; This picture shows the TTree class:; \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line!; 14.7.3; save all branch buffers every n byte.; \- bytes.; 14.7.4; When a TTree is memory resident, you set it up so that it retains retain only the last few entries.; \- retains; For example, this can be very useful for monitoring purpose.; \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase.; 14.7.6; The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number.; \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23; The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.).; \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1725,Energy Efficiency,monitor,monitoring,1725,"les when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:; https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3; is the use the TTree::Show method; \- to use; 14.4; the branches and the leaves, is TTree::Print.; \- no need for a comma; 14.6; boxes"".; \- no need for the quote.; witch is marked; \- which is marked; exposed expression; \- I think that would sound better as ""set expression"" or another adjective.; Below them there are two text widgets; \- possible, but I think 'there' is redundant here.; for specifying; \- to specify; \-\- I think this text should be checked by a native speaker for articles and other issues.; When the “Rec” box is checked, the Draw and Scan commands; \- no need for quotes around Rec (or add them around Draw and Scan); 14.7; This picture shows the TTree class:; \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line!; 14.7.3; save all branch buffers every n byte.; \- bytes.; 14.7.4; When a TTree is memory resident, you set it up so that it retains retain only the last few entries.; \- retains; For example, this can be very useful for monitoring purpose.; \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase.; 14.7.6; The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number.; \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23; The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.).; \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1892,Integrability,depend,depending,1892,"les when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:; https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3; is the use the TTree::Show method; \- to use; 14.4; the branches and the leaves, is TTree::Print.; \- no need for a comma; 14.6; boxes"".; \- no need for the quote.; witch is marked; \- which is marked; exposed expression; \- I think that would sound better as ""set expression"" or another adjective.; Below them there are two text widgets; \- possible, but I think 'there' is redundant here.; for specifying; \- to specify; \-\- I think this text should be checked by a native speaker for articles and other issues.; When the “Rec” box is checked, the Draw and Scan commands; \- no need for quotes around Rec (or add them around Draw and Scan); 14.7; This picture shows the TTree class:; \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line!; 14.7.3; save all branch buffers every n byte.; \- bytes.; 14.7.4; When a TTree is memory resident, you set it up so that it retains retain only the last few entries.; \- retains; For example, this can be very useful for monitoring purpose.; \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase.; 14.7.6; The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number.; \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23; The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.).; \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1991,Integrability,depend,depend,1991,"les when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:; https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3; is the use the TTree::Show method; \- to use; 14.4; the branches and the leaves, is TTree::Print.; \- no need for a comma; 14.6; boxes"".; \- no need for the quote.; witch is marked; \- which is marked; exposed expression; \- I think that would sound better as ""set expression"" or another adjective.; Below them there are two text widgets; \- possible, but I think 'there' is redundant here.; for specifying; \- to specify; \-\- I think this text should be checked by a native speaker for articles and other issues.; When the “Rec” box is checked, the Draw and Scan commands; \- no need for quotes around Rec (or add them around Draw and Scan); 14.7; This picture shows the TTree class:; \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line!; 14.7.3; save all branch buffers every n byte.; \- bytes.; 14.7.4; When a TTree is memory resident, you set it up so that it retains retain only the last few entries.; \- retains; For example, this can be very useful for monitoring purpose.; \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase.; 14.7.6; The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number.; \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23; The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.).; \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:2072,Integrability,depend,depends,2072,"les when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:; https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3; is the use the TTree::Show method; \- to use; 14.4; the branches and the leaves, is TTree::Print.; \- no need for a comma; 14.6; boxes"".; \- no need for the quote.; witch is marked; \- which is marked; exposed expression; \- I think that would sound better as ""set expression"" or another adjective.; Below them there are two text widgets; \- possible, but I think 'there' is redundant here.; for specifying; \- to specify; \-\- I think this text should be checked by a native speaker for articles and other issues.; When the “Rec” box is checked, the Draw and Scan commands; \- no need for quotes around Rec (or add them around Draw and Scan); 14.7; This picture shows the TTree class:; \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line!; 14.7.3; save all branch buffers every n byte.; \- bytes.; 14.7.4; When a TTree is memory resident, you set it up so that it retains retain only the last few entries.; \- retains; For example, this can be very useful for monitoring purpose.; \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase.; 14.7.6; The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number.; \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23; The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.).; \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:2182,Integrability,depend,depends,2182,"les when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:; https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3; is the use the TTree::Show method; \- to use; 14.4; the branches and the leaves, is TTree::Print.; \- no need for a comma; 14.6; boxes"".; \- no need for the quote.; witch is marked; \- which is marked; exposed expression; \- I think that would sound better as ""set expression"" or another adjective.; Below them there are two text widgets; \- possible, but I think 'there' is redundant here.; for specifying; \- to specify; \-\- I think this text should be checked by a native speaker for articles and other issues.; When the “Rec” box is checked, the Draw and Scan commands; \- no need for quotes around Rec (or add them around Draw and Scan); 14.7; This picture shows the TTree class:; \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line!; 14.7.3; save all branch buffers every n byte.; \- bytes.; 14.7.4; When a TTree is memory resident, you set it up so that it retains retain only the last few entries.; \- retains; For example, this can be very useful for monitoring purpose.; \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase.; 14.7.6; The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number.; \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23; The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.).; \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1761,Modifiability,rewrite,rewrite,1761,"les when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:; https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3; is the use the TTree::Show method; \- to use; 14.4; the branches and the leaves, is TTree::Print.; \- no need for a comma; 14.6; boxes"".; \- no need for the quote.; witch is marked; \- which is marked; exposed expression; \- I think that would sound better as ""set expression"" or another adjective.; Below them there are two text widgets; \- possible, but I think 'there' is redundant here.; for specifying; \- to specify; \-\- I think this text should be checked by a native speaker for articles and other issues.; When the “Rec” box is checked, the Draw and Scan commands; \- no need for quotes around Rec (or add them around Draw and Scan); 14.7; This picture shows the TTree class:; \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line!; 14.7.3; save all branch buffers every n byte.; \- bytes.; 14.7.4; When a TTree is memory resident, you set it up so that it retains retain only the last few entries.; \- retains; For example, this can be very useful for monitoring purpose.; \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase.; 14.7.6; The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number.; \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23; The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.).; \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:2060,Performance,perform,performance,2060,"les when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:; https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3; is the use the TTree::Show method; \- to use; 14.4; the branches and the leaves, is TTree::Print.; \- no need for a comma; 14.6; boxes"".; \- no need for the quote.; witch is marked; \- which is marked; exposed expression; \- I think that would sound better as ""set expression"" or another adjective.; Below them there are two text widgets; \- possible, but I think 'there' is redundant here.; for specifying; \- to specify; \-\- I think this text should be checked by a native speaker for articles and other issues.; When the “Rec” box is checked, the Draw and Scan commands; \- no need for quotes around Rec (or add them around Draw and Scan); 14.7; This picture shows the TTree class:; \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line!; 14.7.3; save all branch buffers every n byte.; \- bytes.; 14.7.4; When a TTree is memory resident, you set it up so that it retains retain only the last few entries.; \- retains; For example, this can be very useful for monitoring purpose.; \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase.; 14.7.6; The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number.; \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23; The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.).; \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:2170,Performance,Perform,Performance,2170,"les when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:; https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3; is the use the TTree::Show method; \- to use; 14.4; the branches and the leaves, is TTree::Print.; \- no need for a comma; 14.6; boxes"".; \- no need for the quote.; witch is marked; \- which is marked; exposed expression; \- I think that would sound better as ""set expression"" or another adjective.; Below them there are two text widgets; \- possible, but I think 'there' is redundant here.; for specifying; \- to specify; \-\- I think this text should be checked by a native speaker for articles and other issues.; When the “Rec” box is checked, the Draw and Scan commands; \- no need for quotes around Rec (or add them around Draw and Scan); 14.7; This picture shows the TTree class:; \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line!; 14.7.3; save all branch buffers every n byte.; \- bytes.; 14.7.4; When a TTree is memory resident, you set it up so that it retains retain only the last few entries.; \- retains; For example, this can be very useful for monitoring purpose.; \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase.; 14.7.6; The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number.; \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23; The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.).; \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1029,Safety,redund,redundant,1029,"Today I read User's Guide and spotted many mistakes I noticed when reading it for the first time 15 years ago. I thought that now is the time for me to act and to finally fix them.; I'm not a native speaker, so I don't insist on all of them (I still doubt the usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:; https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3; is the use the TTree::Show method; \- to use; 14.4; the branches and the leaves, is TTree::Print.; \- no need for a comma; 14.6; boxes"".; \- no need for the quote.; witch is marked; \- which is marked; exposed expression; \- I think that would sound better as ""set expression"" or another adjective.; Below them there are two text widgets; \- possible, but I think 'there' is redundant here.; for specifying; \- to specify; \-\- I think this text should be checked by a native speaker for articles and other issues.; When the “Rec” box is checked, the Draw and Scan commands; \- no need for quotes around Rec (or add them around Draw and Scan); 14.7; This picture shows the TTree class:; \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line!; 14.7.3; save all branch buffers every n byte.; \- bytes.; 14.7.4; When a TTree is memory resident, you set it up so that it retains retain only the last few entries.; \- retains; For example, this can be very useful for monitoring purpose.; \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase.; 14.7.6; The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number.; \- allows to add to the tree any user\-defined object that doesn't depend on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:856,Security,expose,exposed,856,"Today I read User's Guide and spotted many mistakes I noticed when reading it for the first time 15 years ago. I thought that now is the time for me to act and to finally fix them.; I'm not a native speaker, so I don't insist on all of them (I still doubt the usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:; https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3; is the use the TTree::Show method; \- to use; 14.4; the branches and the leaves, is TTree::Print.; \- no need for a comma; 14.6; boxes"".; \- no need for the quote.; witch is marked; \- which is marked; exposed expression; \- I think that would sound better as ""set expression"" or another adjective.; Below them there are two text widgets; \- possible, but I think 'there' is redundant here.; for specifying; \- to specify; \-\- I think this text should be checked by a native speaker for articles and other issues.; When the “Rec” box is checked, the Draw and Scan commands; \- no need for quotes around Rec (or add them around Draw and Scan); 14.7; This picture shows the TTree class:; \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line!; 14.7.3; save all branch buffers every n byte.; \- bytes.; 14.7.4; When a TTree is memory resident, you set it up so that it retains retain only the last few entries.; \- retains; For example, this can be very useful for monitoring purpose.; \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase.; 14.7.6; The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number.; \- allows to add to the tree any user\-defined object that doesn't depend on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:20,Usability,Guid,Guide,20,"Today I read User's Guide and spotted many mistakes I noticed when reading it for the first time 15 years ago. I thought that now is the time for me to act and to finally fix them.; I'm not a native speaker, so I don't insist on all of them (I still doubt the usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:; https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3; is the use the TTree::Show method; \- to use; 14.4; the branches and the leaves, is TTree::Print.; \- no need for a comma; 14.6; boxes"".; \- no need for the quote.; witch is marked; \- which is marked; exposed expression; \- I think that would sound better as ""set expression"" or another adjective.; Below them there are two text widgets; \- possible, but I think 'there' is redundant here.; for specifying; \- to specify; \-\- I think this text should be checked by a native speaker for articles and other issues.; When the “Rec” box is checked, the Draw and Scan commands; \- no need for quotes around Rec (or add them around Draw and Scan); 14.7; This picture shows the TTree class:; \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line!; 14.7.3; save all branch buffers every n byte.; \- bytes.; 14.7.4; When a TTree is memory resident, you set it up so that it retains retain only the last few entries.; \- retains; For example, this can be very useful for monitoring purpose.; \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase.; 14.7.6; The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number.; \- allows to add to the tree any user\-defined object that doesn't depend on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:520,Usability,Guid,Guide,520,"Today I read User's Guide and spotted many mistakes I noticed when reading it for the first time 15 years ago. I thought that now is the time for me to act and to finally fix them.; I'm not a native speaker, so I don't insist on all of them (I still doubt the usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:; https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3; is the use the TTree::Show method; \- to use; 14.4; the branches and the leaves, is TTree::Print.; \- no need for a comma; 14.6; boxes"".; \- no need for the quote.; witch is marked; \- which is marked; exposed expression; \- I think that would sound better as ""set expression"" or another adjective.; Below them there are two text widgets; \- possible, but I think 'there' is redundant here.; for specifying; \- to specify; \-\- I think this text should be checked by a native speaker for articles and other issues.; When the “Rec” box is checked, the Draw and Scan commands; \- no need for quotes around Rec (or add them around Draw and Scan); 14.7; This picture shows the TTree class:; \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line!; 14.7.3; save all branch buffers every n byte.; \- bytes.; 14.7.4; When a TTree is memory resident, you set it up so that it retains retain only the last few entries.; \- retains; For example, this can be very useful for monitoring purpose.; \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase.; 14.7.6; The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number.; \- allows to add to the tree any user\-defined object that doesn't depend on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:617,Usability,guid,guides,617,"Today I read User's Guide and spotted many mistakes I noticed when reading it for the first time 15 years ago. I thought that now is the time for me to act and to finally fix them.; I'm not a native speaker, so I don't insist on all of them (I still doubt the usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:; https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3; is the use the TTree::Show method; \- to use; 14.4; the branches and the leaves, is TTree::Print.; \- no need for a comma; 14.6; boxes"".; \- no need for the quote.; witch is marked; \- which is marked; exposed expression; \- I think that would sound better as ""set expression"" or another adjective.; Below them there are two text widgets; \- possible, but I think 'there' is redundant here.; for specifying; \- to specify; \-\- I think this text should be checked by a native speaker for articles and other issues.; When the “Rec” box is checked, the Draw and Scan commands; \- no need for quotes around Rec (or add them around Draw and Scan); 14.7; This picture shows the TTree class:; \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line!; 14.7.3; save all branch buffers every n byte.; \- bytes.; 14.7.4; When a TTree is memory resident, you set it up so that it retains retain only the last few entries.; \- retains; For example, this can be very useful for monitoring purpose.; \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase.; 14.7.6; The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number.; \- allows to add to the tree any user\-defined object that doesn't depend on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:630,Usability,guid,guide,630,"Today I read User's Guide and spotted many mistakes I noticed when reading it for the first time 15 years ago. I thought that now is the time for me to act and to finally fix them.; I'm not a native speaker, so I don't insist on all of them (I still doubt the usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:; https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3; is the use the TTree::Show method; \- to use; 14.4; the branches and the leaves, is TTree::Print.; \- no need for a comma; 14.6; boxes"".; \- no need for the quote.; witch is marked; \- which is marked; exposed expression; \- I think that would sound better as ""set expression"" or another adjective.; Below them there are two text widgets; \- possible, but I think 'there' is redundant here.; for specifying; \- to specify; \-\- I think this text should be checked by a native speaker for articles and other issues.; When the “Rec” box is checked, the Draw and Scan commands; \- no need for quotes around Rec (or add them around Draw and Scan); 14.7; This picture shows the TTree class:; \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line!; 14.7.3; save all branch buffers every n byte.; \- bytes.; 14.7.4; When a TTree is memory resident, you set it up so that it retains retain only the last few entries.; \- retains; For example, this can be very useful for monitoring purpose.; \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase.; 14.7.6; The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number.; \- allows to add to the tree any user\-defined object that doesn't depend on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/pull/7286:669,Availability,avail,available,669,"This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:1683,Energy Efficiency,reduce,reduced,1683,"This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:82,Performance,perform,performance,82,"This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:1228,Performance,Optimiz,Optimization,1228,"This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:1571,Performance,queue,queue,1571,"This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:1489,Safety,safe,safe,1489,"This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7287:98,Deployability,update,updates,98,"This fixes an issue with the compilation of GEANT3 on M1. GEANT3 cmake includes ROOT_USE_FILE and updates CMAKE_Fortran_FLAGS, so -m64 was propagated to the compiler and not recognised.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7287
https://github.com/root-project/root/pull/7288:122,Modifiability,config,config,122,"This fixes re-running tests on Windows. According to [the documentation](https://github.com/root-project/root/blob/master/config/rootrc.in#L384-L390), this is already the default for the other platforms, while the default is 3 for Windows.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7288
https://github.com/root-project/root/pull/7288:22,Testability,test,tests,22,"This fixes re-running tests on Windows. According to [the documentation](https://github.com/root-project/root/blob/master/config/rootrc.in#L384-L390), this is already the default for the other platforms, while the default is 3 for Windows.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7288
https://github.com/root-project/root/issues/7289:166,Availability,error,error,166,"### Is your feature request related to a problem? Please describe.; When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths!; Invoking:; ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'; Results was:; With exit code 0; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>; import cppyy; File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>; import libPyROOT as _backend; ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3.; People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like; The solution could be:; - to make bindings work both for Python 2 and 3, or; - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:175,Availability,ERROR,ERROR,175,"### Is your feature request related to a problem? Please describe.; When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths!; Invoking:; ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'; Results was:; With exit code 0; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>; import cppyy; File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>; import libPyROOT as _backend; ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3.; People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like; The solution could be:; - to make bindings work both for Python 2 and 3, or; - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:954,Availability,error,error-pyinit-libpyroot,954,"### Is your feature request related to a problem? Please describe.; When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths!; Invoking:; ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'; Results was:; With exit code 0; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>; import cppyy; File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>; import libPyROOT as _backend; ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3.; People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like; The solution could be:; - to make bindings work both for Python 2 and 3, or; - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:1166,Deployability,install,installation,1166,"### Is your feature request related to a problem? Please describe.; When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths!; Invoking:; ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'; Results was:; With exit code 0; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>; import cppyy; File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>; import libPyROOT as _backend; ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3.; People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like; The solution could be:; - to make bindings work both for Python 2 and 3, or; - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:1221,Deployability,install,installation,1221,"### Is your feature request related to a problem? Please describe.; When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths!; Invoking:; ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'; Results was:; With exit code 0; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>; import cppyy; File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>; import libPyROOT as _backend; ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3.; People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like; The solution could be:; - to make bindings work both for Python 2 and 3, or; - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7292:243,Availability,Error,Error,243,"### Describe the bug; I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):; Command failed: 2; '/usr/bin/make'; See also; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log; make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 ; make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO; [I] src/XrdVersion.hh successfully generated; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope; 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));; | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope; 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope; 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/Xr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:577,Availability,Error,Error,577,"### Describe the bug; I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):; Command failed: 2; '/usr/bin/make'; See also; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log; make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 ; make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO; [I] src/XrdVersion.hh successfully generated; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope; 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));; | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope; 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope; 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/Xr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:655,Availability,Error,Error,655,"### Describe the bug; I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):; Command failed: 2; '/usr/bin/make'; See also; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log; make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 ; make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO; [I] src/XrdVersion.hh successfully generated; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope; 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));; | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope; 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope; 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/Xr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:1075,Availability,error,error,1075,"t progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):; Command failed: 2; '/usr/bin/make'; See also; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log; make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 ; make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO; [I] src/XrdVersion.hh successfully generated; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope; 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));; | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope; 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope; 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1; make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:1427,Availability,error,error,1427,"stamp/XROOTD-build-*.log; make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 ; make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO; [I] src/XrdVersion.hh successfully generated; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope; 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));; | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope; 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope; 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1; make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2; make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior; `xrootd` should compile or, if it's not needed, be optional (not default). I",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:1774,Availability,error,error,1774,"VERSION_INFO; [I] src/XrdVersion.hh successfully generated; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope; 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));; | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope; 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope; 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1; make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2; make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior; `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce; 1. Download and unpack a source .tar.gz, create and cd the build directory.; 2. cmake --build . --target install -- -j15. ### Setup; 1. 6.22.06; 2. Arch Linux.; 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context; There exist reports on xrootd, but not connected to ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:2023,Availability,Error,Error,2023,"rc/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope; 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));; | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope; 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope; 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1; make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2; make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior; `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce; 1. Download and unpack a source .tar.gz, create and cd the build directory.; 2. cmake --build . --target install -- -j15. ### Setup; 1. 6.22.06; 2. Arch Linux.; 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context; There exist reports on xrootd, but not connected to this variable.; I have to say that I failed to compile without xrootd, but it is probably another issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:2113,Availability,Error,Error,2113,"rc/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope; 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));; | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope; 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope; 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1; make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2; make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior; `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce; 1. Download and unpack a source .tar.gz, create and cd the build directory.; 2. cmake --build . --target install -- -j15. ### Setup; 1. 6.22.06; 2. Arch Linux.; 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context; There exist reports on xrootd, but not connected to this variable.; I have to say that I failed to compile without xrootd, but it is probably another issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:2155,Availability,Error,Error,2155,"rc/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope; 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));; | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope; 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope; 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1; make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2; make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior; `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce; 1. Download and unpack a source .tar.gz, create and cd the build directory.; 2. cmake --build . --target install -- -j15. ### Setup; 1. 6.22.06; 2. Arch Linux.; 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context; There exist reports on xrootd, but not connected to this variable.; I have to say that I failed to compile without xrootd, but it is probably another issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:2508,Availability,Down,Download,2508,"rc/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope; 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));; | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope; 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope; 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1; make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2; make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior; `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce; 1. Download and unpack a source .tar.gz, create and cd the build directory.; 2. cmake --build . --target install -- -j15. ### Setup; 1. 6.22.06; 2. Arch Linux.; 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context; There exist reports on xrootd, but not connected to this variable.; I have to say that I failed to compile without xrootd, but it is probably another issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:26,Deployability,install,installing,26,"### Describe the bug; I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):; Command failed: 2; '/usr/bin/make'; See also; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log; make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 ; make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO; [I] src/XrdVersion.hh successfully generated; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope; 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));; | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope; 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope; 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/Xr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:325,Deployability,Release,Release,325,"### Describe the bug; I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):; Command failed: 2; '/usr/bin/make'; See also; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log; make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 ; make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO; [I] src/XrdVersion.hh successfully generated; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope; 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));; | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope; 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope; 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/Xr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:2610,Deployability,install,install,2610,"rc/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope; 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));; | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope; 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope; 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1; make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2; make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior; `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce; 1. Download and unpack a source .tar.gz, create and cd the build directory.; 2. cmake --build . --target install -- -j15. ### Setup; 1. 6.22.06; 2. Arch Linux.; 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context; There exist reports on xrootd, but not connected to this variable.; I have to say that I failed to compile without xrootd, but it is probably another issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:343,Integrability,message,message,343,"### Describe the bug; I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):; Command failed: 2; '/usr/bin/make'; See also; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log; make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 ; make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO; [I] src/XrdVersion.hh successfully generated; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope; 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));; | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope; 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope; 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/Xr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:2806,Modifiability,variab,variable,2806,"rc/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope; 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));; | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope; 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope; 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1; make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2; make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior; `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce; 1. Download and unpack a source .tar.gz, create and cd the build directory.; 2. cmake --build . --target install -- -j15. ### Setup; 1. 6.22.06; 2. Arch Linux.; 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context; There exist reports on xrootd, but not connected to this variable.; I have to say that I failed to compile without xrootd, but it is probably another issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:230,Testability,log,log,230,"### Describe the bug; I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):; Command failed: 2; '/usr/bin/make'; See also; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log; make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 ; make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO; [I] src/XrdVersion.hh successfully generated; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope; 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));; | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope; 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope; 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/Xr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:475,Testability,log,log,475,"### Describe the bug; I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):; Command failed: 2; '/usr/bin/make'; See also; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log; make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 ; make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO; [I] src/XrdVersion.hh successfully generated; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope; 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));; | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope; 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope; 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/Xr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7293:176,Availability,Error,Error,176,"### Describe the bug; I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):; file INSTALL cannot find; ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or; directory.; Call Stack (most recent call first):; core/cmake_install.cmake:75 (include); cmake_install.cmake:200 (include); make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior; `cmake` should not delete this file. ### To Reproduce; 1. Download and unpack a source .tar.gz, create and cd the build directory.; 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)).; 3. cmake --build . --target install -- -j15. ### Setup; 1. 6.22.06; 2. Arch Linux.; 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context; There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search).; 1. https://root-forum.cern.ch/t/installation-is",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:487,Availability,Error,Error,487,"### Describe the bug; I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):; file INSTALL cannot find; ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or; directory.; Call Stack (most recent call first):; core/cmake_install.cmake:75 (include); cmake_install.cmake:200 (include); make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior; `cmake` should not delete this file. ### To Reproduce; 1. Download and unpack a source .tar.gz, create and cd the build directory.; 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)).; 3. cmake --build . --target install -- -j15. ### Setup; 1. 6.22.06; 2. Arch Linux.; 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context; There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search).; 1. https://root-forum.cern.ch/t/installation-is",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:815,Availability,error,error,815,"### Describe the bug; I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):; file INSTALL cannot find; ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or; directory.; Call Stack (most recent call first):; core/cmake_install.cmake:75 (include); cmake_install.cmake:200 (include); make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior; `cmake` should not delete this file. ### To Reproduce; 1. Download and unpack a source .tar.gz, create and cd the build directory.; 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)).; 3. cmake --build . --target install -- -j15. ### Setup; 1. 6.22.06; 2. Arch Linux.; 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context; There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search).; 1. https://root-forum.cern.ch/t/installation-is",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:963,Availability,error,error-cannot-find-libvectordict-so,963,"### Describe the bug; I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):; file INSTALL cannot find; ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or; directory.; Call Stack (most recent call first):; core/cmake_install.cmake:75 (include); cmake_install.cmake:200 (include); make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior; `cmake` should not delete this file. ### To Reproduce; 1. Download and unpack a source .tar.gz, create and cd the build directory.; 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)).; 3. cmake --build . --target install -- -j15. ### Setup; 1. 6.22.06; 2. Arch Linux.; 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context; There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search).; 1. https://root-forum.cern.ch/t/installation-is",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:1368,Availability,Down,Download,1368,"t-6.22.06/lib/libvectorDict.so"": No such file or; directory.; Call Stack (most recent call first):; core/cmake_install.cmake:75 (include); cmake_install.cmake:200 (include); make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior; `cmake` should not delete this file. ### To Reproduce; 1. Download and unpack a source .tar.gz, create and cd the build directory.; 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)).; 3. cmake --build . --target install -- -j15. ### Setup; 1. 6.22.06; 2. Arch Linux.; 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context; There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search).; 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8; 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552; 3. https://root-forum.cern.ch/t/error-with-libvectordict-so/39097; 4. https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:2075,Availability,error,error-file-install-can-not-find,2075,"t-6.22.06/lib/libvectorDict.so"": No such file or; directory.; Call Stack (most recent call first):; core/cmake_install.cmake:75 (include); cmake_install.cmake:200 (include); make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior; `cmake` should not delete this file. ### To Reproduce; 1. Download and unpack a source .tar.gz, create and cd the build directory.; 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)).; 3. cmake --build . --target install -- -j15. ### Setup; 1. 6.22.06; 2. Arch Linux.; 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context; There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search).; 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8; 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552; 3. https://root-forum.cern.ch/t/error-with-libvectordict-so/39097; 4. https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:2146,Availability,error,error-with-libvectordict-so,2146,"t-6.22.06/lib/libvectorDict.so"": No such file or; directory.; Call Stack (most recent call first):; core/cmake_install.cmake:75 (include); cmake_install.cmake:200 (include); make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior; `cmake` should not delete this file. ### To Reproduce; 1. Download and unpack a source .tar.gz, create and cd the build directory.; 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)).; 3. cmake --build . --target install -- -j15. ### Setup; 1. 6.22.06; 2. Arch Linux.; 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context; There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search).; 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8; 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552; 3. https://root-forum.cern.ch/t/error-with-libvectordict-so/39097; 4. https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:2239,Availability,error,error-cannot-find-libvectordict-so,2239,"t-6.22.06/lib/libvectorDict.so"": No such file or; directory.; Call Stack (most recent call first):; core/cmake_install.cmake:75 (include); cmake_install.cmake:200 (include); make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior; `cmake` should not delete this file. ### To Reproduce; 1. Download and unpack a source .tar.gz, create and cd the build directory.; 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)).; 3. cmake --build . --target install -- -j15. ### Setup; 1. 6.22.06; 2. Arch Linux.; 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context; There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search).; 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8; 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552; 3. https://root-forum.cern.ch/t/error-with-libvectordict-so/39097; 4. https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:26,Deployability,install,installing,26,"### Describe the bug; I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):; file INSTALL cannot find; ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or; directory.; Call Stack (most recent call first):; core/cmake_install.cmake:75 (include); cmake_install.cmake:200 (include); make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior; `cmake` should not delete this file. ### To Reproduce; 1. Download and unpack a source .tar.gz, create and cd the build directory.; 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)).; 3. cmake --build . --target install -- -j15. ### Setup; 1. 6.22.06; 2. Arch Linux.; 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context; There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search).; 1. https://root-forum.cern.ch/t/installation-is",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:110,Deployability,install,install,110,"### Describe the bug; I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):; file INSTALL cannot find; ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or; directory.; Call Stack (most recent call first):; core/cmake_install.cmake:75 (include); cmake_install.cmake:200 (include); make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior; `cmake` should not delete this file. ### To Reproduce; 1. Download and unpack a source .tar.gz, create and cd the build directory.; 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)).; 3. cmake --build . --target install -- -j15. ### Setup; 1. 6.22.06; 2. Arch Linux.; 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context; There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search).; 1. https://root-forum.cern.ch/t/installation-is",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:238,Deployability,INSTALL,INSTALL,238,"### Describe the bug; I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):; file INSTALL cannot find; ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or; directory.; Call Stack (most recent call first):; core/cmake_install.cmake:75 (include); cmake_install.cmake:200 (include); make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior; `cmake` should not delete this file. ### To Reproduce; 1. Download and unpack a source .tar.gz, create and cd the build directory.; 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)).; 3. cmake --build . --target install -- -j15. ### Setup; 1. 6.22.06; 2. Arch Linux.; 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context; There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search).; 1. https://root-forum.cern.ch/t/installation-is",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:478,Deployability,install,install,478,"### Describe the bug; I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):; file INSTALL cannot find; ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or; directory.; Call Stack (most recent call first):; core/cmake_install.cmake:75 (include); cmake_install.cmake:200 (include); make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior; `cmake` should not delete this file. ### To Reproduce; 1. Download and unpack a source .tar.gz, create and cd the build directory.; 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)).; 3. cmake --build . --target install -- -j15. ### Setup; 1. 6.22.06; 2. Arch Linux.; 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context; There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search).; 1. https://root-forum.cern.ch/t/installation-is",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:539,Deployability,install,installation,539,"### Describe the bug; I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):; file INSTALL cannot find; ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or; directory.; Call Stack (most recent call first):; core/cmake_install.cmake:75 (include); cmake_install.cmake:200 (include); make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior; `cmake` should not delete this file. ### To Reproduce; 1. Download and unpack a source .tar.gz, create and cd the build directory.; 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)).; 3. cmake --build . --target install -- -j15. ### Setup; 1. 6.22.06; 2. Arch Linux.; 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context; There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search).; 1. https://root-forum.cern.ch/t/installation-is",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:950,Deployability,install,installation-error-cannot-find-libvectordict-so,950,"### Describe the bug; I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):; file INSTALL cannot find; ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or; directory.; Call Stack (most recent call first):; core/cmake_install.cmake:75 (include); cmake_install.cmake:200 (include); make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior; `cmake` should not delete this file. ### To Reproduce; 1. Download and unpack a source .tar.gz, create and cd the build directory.; 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)).; 3. cmake --build . --target install -- -j15. ### Setup; 1. 6.22.06; 2. Arch Linux.; 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context; There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search).; 1. https://root-forum.cern.ch/t/installation-is",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:1096,Deployability,install,installation,1096," Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):; file INSTALL cannot find; ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or; directory.; Call Stack (most recent call first):; core/cmake_install.cmake:75 (include); cmake_install.cmake:200 (include); make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior; `cmake` should not delete this file. ### To Reproduce; 1. Download and unpack a source .tar.gz, create and cd the build directory.; 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)).; 3. cmake --build . --target install -- -j15. ### Setup; 1. 6.22.06; 2. Arch Linux.; 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context; There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search).; 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8; 2. https://root-forum.cern.ch/t/error-file-insta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:1147,Deployability,install,install,1147,"ke Error at core/clingutils/cmake_install.cmake:56 (file):; file INSTALL cannot find; ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or; directory.; Call Stack (most recent call first):; core/cmake_install.cmake:75 (include); cmake_install.cmake:200 (include); make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior; `cmake` should not delete this file. ### To Reproduce; 1. Download and unpack a source .tar.gz, create and cd the build directory.; 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)).; 3. cmake --build . --target install -- -j15. ### Setup; 1. 6.22.06; 2. Arch Linux.; 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context; There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search).; 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8; 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552; 3. https://root-forum.cern.ch/t/error-with-libvectordict-so",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:1639,Deployability,install,install,1639,"t-6.22.06/lib/libvectorDict.so"": No such file or; directory.; Call Stack (most recent call first):; core/cmake_install.cmake:75 (include); cmake_install.cmake:200 (include); make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior; `cmake` should not delete this file. ### To Reproduce; 1. Download and unpack a source .tar.gz, create and cd the build directory.; 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)).; 3. cmake --build . --target install -- -j15. ### Setup; 1. 6.22.06; 2. Arch Linux.; 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context; There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search).; 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8; 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552; 3. https://root-forum.cern.ch/t/error-with-libvectordict-so/39097; 4. https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:1986,Deployability,install,installation-issues-of-new-version-root-,1986,"t-6.22.06/lib/libvectorDict.so"": No such file or; directory.; Call Stack (most recent call first):; core/cmake_install.cmake:75 (include); cmake_install.cmake:200 (include); make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior; `cmake` should not delete this file. ### To Reproduce; 1. Download and unpack a source .tar.gz, create and cd the build directory.; 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)).; 3. cmake --build . --target install -- -j15. ### Setup; 1. 6.22.06; 2. Arch Linux.; 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context; There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search).; 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8; 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552; 3. https://root-forum.cern.ch/t/error-with-libvectordict-so/39097; 4. https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:2086,Deployability,install,install-can-not-find,2086,"t-6.22.06/lib/libvectorDict.so"": No such file or; directory.; Call Stack (most recent call first):; core/cmake_install.cmake:75 (include); cmake_install.cmake:200 (include); make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior; `cmake` should not delete this file. ### To Reproduce; 1. Download and unpack a source .tar.gz, create and cd the build directory.; 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)).; 3. cmake --build . --target install -- -j15. ### Setup; 1. 6.22.06; 2. Arch Linux.; 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context; There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search).; 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8; 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552; 3. https://root-forum.cern.ch/t/error-with-libvectordict-so/39097; 4. https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:2226,Deployability,install,installation-error-cannot-find-libvectordict-so,2226,"t-6.22.06/lib/libvectorDict.so"": No such file or; directory.; Call Stack (most recent call first):; core/cmake_install.cmake:75 (include); cmake_install.cmake:200 (include); make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior; `cmake` should not delete this file. ### To Reproduce; 1. Download and unpack a source .tar.gz, create and cd the build directory.; 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)).; 3. cmake --build . --target install -- -j15. ### Setup; 1. 6.22.06; 2. Arch Linux.; 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context; There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search).; 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8; 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552; 3. https://root-forum.cern.ch/t/error-with-libvectordict-so/39097; 4. https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7295:794,Availability,Error,Error,794,"- [x ] Checked for duplicates. ### Describe the bug; I'm trying to generate html documentation for ROOT. Most files are created, but it reports several issues:. > Warning in <THtml::CreateListOfClasses>: Cannot find the header for the following classes [reason]:; Warning in <THtml::CreateListOfClasses>: TVirtualPaveStats [header TVirtualPaveStats.h not found]; Warning in <THtml::CreateListOfClasses>: THtml cannot find all headers and sources. ; Warning in <THtml::CreateListOfClasses>: You might need to adjust the input path (currently ./:src/:include/:/opt/root/cur) by calling THtml::SetInputDir(); Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html; Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681); dot: compound.c:78: boxIntersectf: Assertion `0' failed.; Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot!. Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");; root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE.; Error in <THtml::MakeClass>: Unknown class 'TTree'!. root [6] TTree t;. works fine. ### Expected behavior; Should report no errors, should create TTree documentation. ### To Reproduce; My ~/.rootrc is. > \# THtml specific settings.; Root.Html.OutputDir: htmldoc/; Root.Html.SourcePrefix:; Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (MakeAll) and https://root.cern.ch/root/roottalk/root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:942,Availability,Error,Error,942,"d for duplicates. ### Describe the bug; I'm trying to generate html documentation for ROOT. Most files are created, but it reports several issues:. > Warning in <THtml::CreateListOfClasses>: Cannot find the header for the following classes [reason]:; Warning in <THtml::CreateListOfClasses>: TVirtualPaveStats [header TVirtualPaveStats.h not found]; Warning in <THtml::CreateListOfClasses>: THtml cannot find all headers and sources. ; Warning in <THtml::CreateListOfClasses>: You might need to adjust the input path (currently ./:src/:include/:/opt/root/cur) by calling THtml::SetInputDir(); Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html; Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681); dot: compound.c:78: boxIntersectf: Assertion `0' failed.; Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot!. Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");; root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE.; Error in <THtml::MakeClass>: Unknown class 'TTree'!. root [6] TTree t;. works fine. ### Expected behavior; Should report no errors, should create TTree documentation. ### To Reproduce; My ~/.rootrc is. > \# THtml specific settings.; Root.Html.OutputDir: htmldoc/; Root.Html.SourcePrefix:; Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (MakeAll) and https://root.cern.ch/root/roottalk/roottalk01/0059.h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:978,Availability,Error,Error,978,"d for duplicates. ### Describe the bug; I'm trying to generate html documentation for ROOT. Most files are created, but it reports several issues:. > Warning in <THtml::CreateListOfClasses>: Cannot find the header for the following classes [reason]:; Warning in <THtml::CreateListOfClasses>: TVirtualPaveStats [header TVirtualPaveStats.h not found]; Warning in <THtml::CreateListOfClasses>: THtml cannot find all headers and sources. ; Warning in <THtml::CreateListOfClasses>: You might need to adjust the input path (currently ./:src/:include/:/opt/root/cur) by calling THtml::SetInputDir(); Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html; Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681); dot: compound.c:78: boxIntersectf: Assertion `0' failed.; Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot!. Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");; root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE.; Error in <THtml::MakeClass>: Unknown class 'TTree'!. root [6] TTree t;. works fine. ### Expected behavior; Should report no errors, should create TTree documentation. ### To Reproduce; My ~/.rootrc is. > \# THtml specific settings.; Root.Html.OutputDir: htmldoc/; Root.Html.SourcePrefix:; Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (MakeAll) and https://root.cern.ch/root/roottalk/roottalk01/0059.h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:1533,Availability,Error,Error,1533,"/opt/root/cur) by calling THtml::SetInputDir(); Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html; Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681); dot: compound.c:78: boxIntersectf: Assertion `0' failed.; Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot!. Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");; root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE.; Error in <THtml::MakeClass>: Unknown class 'TTree'!. root [6] TTree t;. works fine. ### Expected behavior; Should report no errors, should create TTree documentation. ### To Reproduce; My ~/.rootrc is. > \# THtml specific settings.; Root.Html.OutputDir: htmldoc/; Root.Html.SourcePrefix:; Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (MakeAll) and https://root.cern.ch/root/roottalk/roottalk01/0059.html). I run these commands from root interpreter:. > {; THtml html;; html.CreateHierarchy();; html.MakeAll();; }. It produces the output I mentioned. . ### Setup; 1. ROOT 6.22/06 compiled from source. However, I produced html with ROOT 6.20.02 earlier, and *TTree* was missing there as well (that's why I tried to regenerate docs with the most recent version).; 2. Arch Linux.; 3. Built from .tar.gz package. ### Additional context; TTree documentation exists on the site, but I very much want to have offline documentation.; First I wanted to ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:1657,Availability,error,errors,1657,"t set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html; Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681); dot: compound.c:78: boxIntersectf: Assertion `0' failed.; Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot!. Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");; root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE.; Error in <THtml::MakeClass>: Unknown class 'TTree'!. root [6] TTree t;. works fine. ### Expected behavior; Should report no errors, should create TTree documentation. ### To Reproduce; My ~/.rootrc is. > \# THtml specific settings.; Root.Html.OutputDir: htmldoc/; Root.Html.SourcePrefix:; Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (MakeAll) and https://root.cern.ch/root/roottalk/roottalk01/0059.html). I run these commands from root interpreter:. > {; THtml html;; html.CreateHierarchy();; html.MakeAll();; }. It produces the output I mentioned. . ### Setup; 1. ROOT 6.22/06 compiled from source. However, I produced html with ROOT 6.20.02 earlier, and *TTree* was missing there as well (that's why I tried to regenerate docs with the most recent version).; 2. Arch Linux.; 3. Built from .tar.gz package. ### Additional context; TTree documentation exists on the site, but I very much want to have offline documentation.; First I wanted to post this on ROOT Forum, but during post creation the system wrote that bugs should be reported to t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:919,Testability,Assert,Assertion,919,"- [x ] Checked for duplicates. ### Describe the bug; I'm trying to generate html documentation for ROOT. Most files are created, but it reports several issues:. > Warning in <THtml::CreateListOfClasses>: Cannot find the header for the following classes [reason]:; Warning in <THtml::CreateListOfClasses>: TVirtualPaveStats [header TVirtualPaveStats.h not found]; Warning in <THtml::CreateListOfClasses>: THtml cannot find all headers and sources. ; Warning in <THtml::CreateListOfClasses>: You might need to adjust the input path (currently ./:src/:include/:/opt/root/cur) by calling THtml::SetInputDir(); Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html; Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681); dot: compound.c:78: boxIntersectf: Assertion `0' failed.; Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot!. Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");; root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE.; Error in <THtml::MakeClass>: Unknown class 'TTree'!. root [6] TTree t;. works fine. ### Expected behavior; Should report no errors, should create TTree documentation. ### To Reproduce; My ~/.rootrc is. > \# THtml specific settings.; Root.Html.OutputDir: htmldoc/; Root.Html.SourcePrefix:; Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (MakeAll) and https://root.cern.ch/root/roottalk/root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/pull/7297:50,Testability,Assert,Assertion,50,"Try to print some hints about why there is this: `Assertion failed: content[posOpenCurly] == '{' && ""No curly at claimed position of opening curly!""`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7297
https://github.com/root-project/root/pull/7298:234,Availability,failure,failures,234,When looking up a ctor the modules infrasturcture deserializes more ctor; candidates in the body of the function causing the internal vector implementation; to rellocate and invalidate the pointers. This workaround should address the failures reported by LCG. The real fix is being processed here https://reviews.llvm.org/D91524 and we; after being merged we should be able to backport it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7298
https://github.com/root-project/root/pull/7299:0,Deployability,Update,Update,0,"Update JSROOT, where TRatioPlot now supported. Make use of functionality: https://jsroot.gsi.de/dev/examples.htm#tratioplot_r6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7299
https://github.com/root-project/root/pull/7303:145,Deployability,patch,patch,145,"This allows us to use a single modulemap file across multiple libstdc++; versions and gives us a way forward to deal with deprecated files. This patch will be submitted for a review upstream. It fixes our; gcc 4.8 builds where codecvt, cuchar and string_view header files do not exist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7303
https://github.com/root-project/root/issues/7304:82,Usability,guid,guide,82,### Describe the bug; `ROOT::Experimental::RFitPanel` is missing in the reference guide. ### Expected behavior. https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RFitPanel.html links to the doc page,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7304
https://github.com/root-project/root/issues/7308:601,Deployability,patch,patch,601,"### Explain what you would like to see improved; There is a [TTree constructor](https://root.cern/doc/master/classTTree.html#a072dbaea957b66fe33f136e7319ed724),. TTree::TTree (const char *name, const char * title, Int_t splitlevel = 99, TDirectory *dir = gDirectory). (it's easy to learn that a TDirectory object can be a TFile, which is used very often). There is a [TTree:Write](https://root.cern/doc/master/classTTree.html#af6f2d9ae4048ad85fcae5d2afa05100f) method (actually there are two of them; when I read the code I found that the non-const just calls a const method, so it looks like an ugly patch; but anyway). In the documentation it's said that it writes to the current directory (which is correct). I found an explanation by pcanal, that [TObject::Write semantically is explicitly to store the current object in the current TFile](https://root-forum.cern.ch/t/writing-trees-to-different-files/5640/3?u=ynikitenko). Why I was looking for that: I remembered from the old good User's Guide that there is a 'global directory' and many other global variables in ROOT. I wanted to have two trees written to two different files in one session from Python. But the trees (as now is clear) were written to the most recently opened file, not to those with which they were initialized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory.; // FIXME: This is very annoying behaviour, we should; // be able to choose to not do this like we; // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved; I see several ways how it could be improved:. 1) ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:2752,Integrability,interface,interfaces,2752,"zed. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory.; // FIXME: This is very annoying behaviour, we should; // be able to choose to not do this like we; // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved; I see several ways how it could be improved:. 1) make Write use TTree's file if that was set in the constructor. This is natural and doesn't contradict inheritance from TObject, because a) not all ROOT objects belong to the global directory b) virtual functions can be reimplemented in daughter classes; this is fine when the general behaviour is the same.; 2) add to TTree:Write documentation the way to write to a given file instead of the current file (this might be easier to find and understand than in the vast docs of TTree).; 3) maybe create a method Write(file) of TTree with an argument TFile/(its parent). In the [program of work for 2020](https://indico.cern.ch/event/875784/contributions/3690258/attachments/1975740/3288395/ROOT-PoW2020-EP-SFT.pdf) on page 10 Axel Naumann proposes: ""Keep interfaces readable for current ROOT users. canv->cd(); hist->Draw(); becomes canv->Draw(hist)."" I think this is very much in line with this suggestion, and it's just a good design. ### Setup; 1. ROOT 6.22/06. ### Additional context; I found a question [TTree.Write() vs. TFile.Write()](https://root-forum.cern.ch/t/ttree-write-vs-tfile-write/82) on the Forum, so it may be better to explain (or implement) it more explicitly in docs. There are really many questions about how to write one/two trees to one/several different files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:1057,Modifiability,variab,variables,1057,"## Explain what you would like to see improved; There is a [TTree constructor](https://root.cern/doc/master/classTTree.html#a072dbaea957b66fe33f136e7319ed724),. TTree::TTree (const char *name, const char * title, Int_t splitlevel = 99, TDirectory *dir = gDirectory). (it's easy to learn that a TDirectory object can be a TFile, which is used very often). There is a [TTree:Write](https://root.cern/doc/master/classTTree.html#af6f2d9ae4048ad85fcae5d2afa05100f) method (actually there are two of them; when I read the code I found that the non-const just calls a const method, so it looks like an ugly patch; but anyway). In the documentation it's said that it writes to the current directory (which is correct). I found an explanation by pcanal, that [TObject::Write semantically is explicitly to store the current object in the current TFile](https://root-forum.cern.ch/t/writing-trees-to-different-files/5640/3?u=ynikitenko). Why I was looking for that: I remembered from the old good User's Guide that there is a 'global directory' and many other global variables in ROOT. I wanted to have two trees written to two different files in one session from Python. But the trees (as now is clear) were written to the most recently opened file, not to those with which they were initialized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory.; // FIXME: This is very annoying behaviour, we should; // be able to choose to not do this like we; // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved; I see several ways how it could be improved:. 1) ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:2102,Modifiability,inherit,inheritance,2102,"is clear) were written to the most recently opened file, not to those with which they were initialized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory.; // FIXME: This is very annoying behaviour, we should; // be able to choose to not do this like we; // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved; I see several ways how it could be improved:. 1) make Write use TTree's file if that was set in the constructor. This is natural and doesn't contradict inheritance from TObject, because a) not all ROOT objects belong to the global directory b) virtual functions can be reimplemented in daughter classes; this is fine when the general behaviour is the same.; 2) add to TTree:Write documentation the way to write to a given file instead of the current file (this might be easier to find and understand than in the vast docs of TTree).; 3) maybe create a method Write(file) of TTree with an argument TFile/(its parent). In the [program of work for 2020](https://indico.cern.ch/event/875784/contributions/3690258/attachments/1975740/3288395/ROOT-PoW2020-EP-SFT.pdf) on page 10 Axel Naumann proposes: ""Keep interfaces readable for current ROOT users. canv->cd(); hist->Draw(); becomes canv->Draw(hist)."" I think this is very much in line with this suggestion, and it's just a good design. ### Setup; 1. ROOT 6.22/06. ### Additional context; I found a question [TTree.Write() vs. TFile.Write()](https://root-forum.cern.ch/t/ttree-write-vs-tfile-write/82) on the Forum, so it may be better to explain (or implement) it more explicitly in doc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:282,Usability,learn,learn,282,"### Explain what you would like to see improved; There is a [TTree constructor](https://root.cern/doc/master/classTTree.html#a072dbaea957b66fe33f136e7319ed724),. TTree::TTree (const char *name, const char * title, Int_t splitlevel = 99, TDirectory *dir = gDirectory). (it's easy to learn that a TDirectory object can be a TFile, which is used very often). There is a [TTree:Write](https://root.cern/doc/master/classTTree.html#af6f2d9ae4048ad85fcae5d2afa05100f) method (actually there are two of them; when I read the code I found that the non-const just calls a const method, so it looks like an ugly patch; but anyway). In the documentation it's said that it writes to the current directory (which is correct). I found an explanation by pcanal, that [TObject::Write semantically is explicitly to store the current object in the current TFile](https://root-forum.cern.ch/t/writing-trees-to-different-files/5640/3?u=ynikitenko). Why I was looking for that: I remembered from the old good User's Guide that there is a 'global directory' and many other global variables in ROOT. I wanted to have two trees written to two different files in one session from Python. But the trees (as now is clear) were written to the most recently opened file, not to those with which they were initialized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory.; // FIXME: This is very annoying behaviour, we should; // be able to choose to not do this like we; // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved; I see several ways how it could be improved:. 1) ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:994,Usability,Guid,Guide,994,"## Explain what you would like to see improved; There is a [TTree constructor](https://root.cern/doc/master/classTTree.html#a072dbaea957b66fe33f136e7319ed724),. TTree::TTree (const char *name, const char * title, Int_t splitlevel = 99, TDirectory *dir = gDirectory). (it's easy to learn that a TDirectory object can be a TFile, which is used very often). There is a [TTree:Write](https://root.cern/doc/master/classTTree.html#af6f2d9ae4048ad85fcae5d2afa05100f) method (actually there are two of them; when I read the code I found that the non-const just calls a const method, so it looks like an ugly patch; but anyway). In the documentation it's said that it writes to the current directory (which is correct). I found an explanation by pcanal, that [TObject::Write semantically is explicitly to store the current object in the current TFile](https://root-forum.cern.ch/t/writing-trees-to-different-files/5640/3?u=ynikitenko). Why I was looking for that: I remembered from the old good User's Guide that there is a 'global directory' and many other global variables in ROOT. I wanted to have two trees written to two different files in one session from Python. But the trees (as now is clear) were written to the most recently opened file, not to those with which they were initialized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory.; // FIXME: This is very annoying behaviour, we should; // be able to choose to not do this like we; // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved; I see several ways how it could be improved:. 1) ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:1187,Usability,clear,clear,1187,"tlevel = 99, TDirectory *dir = gDirectory). (it's easy to learn that a TDirectory object can be a TFile, which is used very often). There is a [TTree:Write](https://root.cern/doc/master/classTTree.html#af6f2d9ae4048ad85fcae5d2afa05100f) method (actually there are two of them; when I read the code I found that the non-const just calls a const method, so it looks like an ugly patch; but anyway). In the documentation it's said that it writes to the current directory (which is correct). I found an explanation by pcanal, that [TObject::Write semantically is explicitly to store the current object in the current TFile](https://root-forum.cern.ch/t/writing-trees-to-different-files/5640/3?u=ynikitenko). Why I was looking for that: I remembered from the old good User's Guide that there is a 'global directory' and many other global variables in ROOT. I wanted to have two trees written to two different files in one session from Python. But the trees (as now is clear) were written to the most recently opened file, not to those with which they were initialized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory.; // FIXME: This is very annoying behaviour, we should; // be able to choose to not do this like we; // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved; I see several ways how it could be improved:. 1) make Write use TTree's file if that was set in the constructor. This is natural and doesn't contradict inheritance from TObject, because a) not all ROOT objects belong to the global directory b) virtual functions can be reimp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7311:568,Deployability,install,installing-root-w-,568,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The problem and steps to reproduce it are described [in this forum post](https://root-forum.cern.ch/t/trouble-installing-root-w-python3/43694/11).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:391,Usability,clear,clear,391,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The problem and steps to reproduce it are described [in this forum post](https://root-forum.cern.ch/t/trouble-installing-root-w-python3/43694/11).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/pull/7314:602,Energy Efficiency,adapt,adapted,602,"My try to add some pythonization to `fitTo`. For reference see [#7217](https://github.com/root-project/root/issues/7217#issuecomment-785392761). Instead of passing, for example, ; ```; pdf.fitTo(data, ROOT.RooFit.Range(""sideband"")); ```; one could now also do ; ```; pdf.fitTo(data, Range=""sideband""); ```; etc. The code takes the kwargs and turns them into `RooFit` `CmdArg`s. Currently this requires the keyword to be equal to the `CmdArg` (cf. [here](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8)). ; However, the `__cast` function in `_rooabspdf.py` can be adapted such that other variants may be accepted, like e.g. `range` instead of `Range`. I am not sure about some details of the implementation:; - Should the `__cast` function be kept although it is not doing anything for the moment?; - Are the test appropriate?; - I tested the features locally with a different version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:602,Modifiability,adapt,adapted,602,"My try to add some pythonization to `fitTo`. For reference see [#7217](https://github.com/root-project/root/issues/7217#issuecomment-785392761). Instead of passing, for example, ; ```; pdf.fitTo(data, ROOT.RooFit.Range(""sideband"")); ```; one could now also do ; ```; pdf.fitTo(data, Range=""sideband""); ```; etc. The code takes the kwargs and turns them into `RooFit` `CmdArg`s. Currently this requires the keyword to be equal to the `CmdArg` (cf. [here](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8)). ; However, the `__cast` function in `_rooabspdf.py` can be adapted such that other variants may be accepted, like e.g. `range` instead of `Range`. I am not sure about some details of the implementation:; - Should the `__cast` function be kept although it is not doing anything for the moment?; - Are the test appropriate?; - I tested the features locally with a different version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:847,Testability,test,test,847,"My try to add some pythonization to `fitTo`. For reference see [#7217](https://github.com/root-project/root/issues/7217#issuecomment-785392761). Instead of passing, for example, ; ```; pdf.fitTo(data, ROOT.RooFit.Range(""sideband"")); ```; one could now also do ; ```; pdf.fitTo(data, Range=""sideband""); ```; etc. The code takes the kwargs and turns them into `RooFit` `CmdArg`s. Currently this requires the keyword to be equal to the `CmdArg` (cf. [here](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8)). ; However, the `__cast` function in `_rooabspdf.py` can be adapted such that other variants may be accepted, like e.g. `range` instead of `Range`. I am not sure about some details of the implementation:; - Should the `__cast` function be kept although it is not doing anything for the moment?; - Are the test appropriate?; - I tested the features locally with a different version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:870,Testability,test,tested,870,"My try to add some pythonization to `fitTo`. For reference see [#7217](https://github.com/root-project/root/issues/7217#issuecomment-785392761). Instead of passing, for example, ; ```; pdf.fitTo(data, ROOT.RooFit.Range(""sideband"")); ```; one could now also do ; ```; pdf.fitTo(data, Range=""sideband""); ```; etc. The code takes the kwargs and turns them into `RooFit` `CmdArg`s. Currently this requires the keyword to be equal to the `CmdArg` (cf. [here](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8)). ; However, the `__cast` function in `_rooabspdf.py` can be adapted such that other variants may be accepted, like e.g. `range` instead of `Range`. I am not sure about some details of the implementation:; - Should the `__cast` function be kept although it is not doing anything for the moment?; - Are the test appropriate?; - I tested the features locally with a different version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7316:13,Deployability,patch,patch,13,"Without this patch, CMake was always re-generating G__Imt.cxx, the re-buildding Core, and re-generating all the dictionaries, extending the build time from around two minutes to more than 30 minutes when nothing changed in the code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7316
https://github.com/root-project/root/pull/7316:126,Modifiability,extend,extending,126,"Without this patch, CMake was always re-generating G__Imt.cxx, the re-buildding Core, and re-generating all the dictionaries, extending the build time from around two minutes to more than 30 minutes when nothing changed in the code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7316
https://github.com/root-project/root/pull/7317:146,Integrability,depend,depends,146,"To facilitate the creation of RooFit datasets from RDataFrame, an; ActionHelper is added to RooFit.; It lives in its own mini library, because it depends on RDF, which RooFit is not. This adresses #7223, but weighted filling is missing, so I'm not closing that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7317
https://github.com/root-project/root/pull/7318:236,Performance,optimiz,optimizer-parameters,236,"With this PR one can setup the options for the ADAM minimizer,; ADAM_beta1, ADAM_beta2 and ADAM_eps.; Example is provided in the TMVA_Higgs_Classification.C tutorial. This has been requested in https://root-forum.cern.ch/t/setting-adam-optimizer-parameters/43450",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7318
https://github.com/root-project/root/issues/7319:747,Testability,test,test,747,"As reported in https://root-forum.cern.ch/t/th3-covariance-computation-issue/43724; sumw should be used instead of sumw2 in the computation of the diagonal elements of the covariance. ; ```; if (axis1 == 1 && axis2 == 1) {; return TMath::Abs(sumwx2/sumw - sumwx*sumwx/sumw2);; }; ```; should be : ; ```; if (axis1 == 1 && axis2 == 1) {; return TMath::Abs(sumwx2/sumw - sumwx*sumwx/(sumw*sumw));; }; ```; The computation of the off-diagonal element is correct!. To reproduce just do: ; ```; {; TH3D h1(""h1"",""h1"",10,0,10,10,0,10,10,0,10);; h1.Fill(1,1,1,2);; h1.Fill(3,3,3,4);; R__ASSERT( h1.GetCovariance(1,1) == h1.GetCovariance(1,2));; R__ASSERT ( TMath::AreEqualAbs( h1.GetCovariance(1,1), h1.GetStdDev(1)*h1.GetStdDev(1), 1.E-10) ); ; cout << ""test passed"" << endl;; }",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7319
https://github.com/root-project/root/pull/7321:213,Deployability,Update,Update,213,"When drawing different projections via View -> Browse to menu; command, one have to cleanup previousely shown views.; Implement for plain three.js and JSROOT-based views,; to be implemented for `RCore` renderer.; Update JSROOT with correspondent fixes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7321
https://github.com/root-project/root/pull/7322:202,Deployability,integrat,integration,202,"Follow-up on https://github.com/root-project/root/pull/7198 as promised in https://github.com/root-project/root/pull/7198#issuecomment-782401337. A new testRooParamHistFunc was introduced. The analytic integration of a; RooParamHistFunc is tested both for trivial and non-trivial parameters,; since the integration over subranges was problematic (as reported in; issue #7182).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7322
https://github.com/root-project/root/pull/7322:303,Deployability,integrat,integration,303,"Follow-up on https://github.com/root-project/root/pull/7198 as promised in https://github.com/root-project/root/pull/7198#issuecomment-782401337. A new testRooParamHistFunc was introduced. The analytic integration of a; RooParamHistFunc is tested both for trivial and non-trivial parameters,; since the integration over subranges was problematic (as reported in; issue #7182).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7322
https://github.com/root-project/root/pull/7322:202,Integrability,integrat,integration,202,"Follow-up on https://github.com/root-project/root/pull/7198 as promised in https://github.com/root-project/root/pull/7198#issuecomment-782401337. A new testRooParamHistFunc was introduced. The analytic integration of a; RooParamHistFunc is tested both for trivial and non-trivial parameters,; since the integration over subranges was problematic (as reported in; issue #7182).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7322
https://github.com/root-project/root/pull/7322:303,Integrability,integrat,integration,303,"Follow-up on https://github.com/root-project/root/pull/7198 as promised in https://github.com/root-project/root/pull/7198#issuecomment-782401337. A new testRooParamHistFunc was introduced. The analytic integration of a; RooParamHistFunc is tested both for trivial and non-trivial parameters,; since the integration over subranges was problematic (as reported in; issue #7182).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7322
https://github.com/root-project/root/pull/7322:152,Testability,test,testRooParamHistFunc,152,"Follow-up on https://github.com/root-project/root/pull/7198 as promised in https://github.com/root-project/root/pull/7198#issuecomment-782401337. A new testRooParamHistFunc was introduced. The analytic integration of a; RooParamHistFunc is tested both for trivial and non-trivial parameters,; since the integration over subranges was problematic (as reported in; issue #7182).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7322
https://github.com/root-project/root/pull/7322:240,Testability,test,tested,240,"Follow-up on https://github.com/root-project/root/pull/7198 as promised in https://github.com/root-project/root/pull/7198#issuecomment-782401337. A new testRooParamHistFunc was introduced. The analytic integration of a; RooParamHistFunc is tested both for trivial and non-trivial parameters,; since the integration over subranges was problematic (as reported in; issue #7182).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7322
https://github.com/root-project/root/pull/7325:181,Availability,down,down,181,"Some RooFit classes used the RooRealVar or RooAbsRealLValue types for; some of their parameters in the constructor, which is not as flexible as; RooRealVar because they are further down in the dependency hierachy. This commit sustitutes `RooRealVar` in for some of these cases that were; encountered when investigating RooFit problems reported in the forum.; More precisely, I wanted to use a `RooFormulaVar` in a `RooDecay` which; was not possible before but now it is.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7325
https://github.com/root-project/root/pull/7325:193,Integrability,depend,dependency,193,"Some RooFit classes used the RooRealVar or RooAbsRealLValue types for; some of their parameters in the constructor, which is not as flexible as; RooRealVar because they are further down in the dependency hierachy. This commit sustitutes `RooRealVar` in for some of these cases that were; encountered when investigating RooFit problems reported in the forum.; More precisely, I wanted to use a `RooFormulaVar` in a `RooDecay` which; was not possible before but now it is.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7325
https://github.com/root-project/root/pull/7325:132,Modifiability,flexible,flexible,132,"Some RooFit classes used the RooRealVar or RooAbsRealLValue types for; some of their parameters in the constructor, which is not as flexible as; RooRealVar because they are further down in the dependency hierachy. This commit sustitutes `RooRealVar` in for some of these cases that were; encountered when investigating RooFit problems reported in the forum.; More precisely, I wanted to use a `RooFormulaVar` in a `RooDecay` which; was not possible before but now it is.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7325
https://github.com/root-project/root/pull/7326:20,Availability,error,error,20,"Fixes the following error on Windows with macros containing Windows line endings (CR/LF):; ```; Assertion failed: content[posOpenCurly] == '{' && ""No curly at claimed position of opening curly!"",; file C:\Users\bellenot\git\master\interpreter\cling\lib\MetaProcessor\MetaProcessor.cpp, line 431; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7326
https://github.com/root-project/root/pull/7326:96,Testability,Assert,Assertion,96,"Fixes the following error on Windows with macros containing Windows line endings (CR/LF):; ```; Assertion failed: content[posOpenCurly] == '{' && ""No curly at claimed position of opening curly!"",; file C:\Users\bellenot\git\master\interpreter\cling\lib\MetaProcessor\MetaProcessor.cpp, line 431; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7326
https://github.com/root-project/root/pull/7336:6,Deployability,patch,patch,6,Apply patch to interpreter/llvm/src/tools/clang/lib/AST/TemplateBase.cpp as suggested here:; https://reviews.llvm.org/D36368. This patch has been in use for some time on the CMS fork of ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:131,Deployability,patch,patch,131,Apply patch to interpreter/llvm/src/tools/clang/lib/AST/TemplateBase.cpp as suggested here:; https://reviews.llvm.org/D36368. This patch has been in use for some time on the CMS fork of ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7337:182,Safety,avoid,avoid,182,"Initial problem - static array `gLbc`, filled every time file dialog created new with entries with `StrDup`.; Was fixed with first commit. Then replace `char *` by `std::string` and avoid `StrDup`. And finally replace static array by `std::vector` - cleanup automatically when file dialog closed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7337
https://github.com/root-project/root/pull/7339:735,Availability,avail,available,735,"See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:1747,Energy Efficiency,reduce,reduced,1747,"See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:148,Performance,perform,performance,148,"See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:1292,Performance,Optimiz,Optimization,1292,"See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:1635,Performance,queue,queue,1635,"See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:1553,Safety,safe,safe,1553,"See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/issues/7340:64,Availability,error,errors-when-trying-to-fit-a-histogram,64,### Describe the bug. https://root-forum.cern.ch/t/bugs-in-tfit-errors-when-trying-to-fit-a-histogram/43789. ### To Reproduce. Open the fit Panel on a TH1 and move the range slider. ### Setup. On Mac,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7340
https://github.com/root-project/root/pull/7341:113,Availability,avail,available,113,"Along the way, this PR removes the `RFieldFuse` helper class. Instead, the RField class knows its field ID where available. This simplifies connecting fields to a page storage and gives the process more flexibility. The PR also adds an `RRecordField` for untyped `struct`s. @mxxo That should fix the problem you saw with NanoAOD printing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7341
https://github.com/root-project/root/pull/7341:129,Usability,simpl,simplifies,129,"Along the way, this PR removes the `RFieldFuse` helper class. Instead, the RField class knows its field ID where available. This simplifies connecting fields to a page storage and gives the process more flexibility. The PR also adds an `RRecordField` for untyped `struct`s. @mxxo That should fix the problem you saw with NanoAOD printing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7341
https://github.com/root-project/root/pull/7342:103,Availability,error,error,103,"Don't export (expose) the '?__type_info_root_node@@3U__type_info_node@@A', this leads to the following error in some cases:; ```; MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7342
https://github.com/root-project/root/pull/7342:158,Availability,error,error,158,"Don't export (expose) the '?__type_info_root_node@@3U__type_info_node@@A', this leads to the following error in some cases:; ```; MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7342
https://github.com/root-project/root/pull/7342:14,Security,expose,expose,14,"Don't export (expose) the '?__type_info_root_node@@3U__type_info_node@@A', this leads to the following error in some cases:; ```; MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7342
https://github.com/root-project/root/pull/7343:198,Availability,alive,alive,198,A function-static does not guarantee the lifetime to be sufficiently; extended - at least on CentOS7. Use a unique_ptr which guarantees the; reference to stay valid for as long as the referencee is alive. Fixes crash at exit on CentOS7.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7343
https://github.com/root-project/root/pull/7343:70,Modifiability,extend,extended,70,A function-static does not guarantee the lifetime to be sufficiently; extended - at least on CentOS7. Use a unique_ptr which guarantees the; reference to stay valid for as long as the referencee is alive. Fixes crash at exit on CentOS7.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7343
https://github.com/root-project/root/pull/7344:59,Performance,cache,cached,59,"In the batched evaluation mode, the RunContext object that cached the values of nodes in the computation graph has so far been completely cleared after each NLL evaluation. In this PR, a new class `RunContextTracker` is introduced. It makes use of the `RooChangeTracker` class to determine whether a cached result for a given node needs to be recomputed after the change of a given fundamental parameter or not. This should speed up likelihood fits, as often only one fundamental parameter is changed at the time for the numeric gradient determination. For the example [rf303_conditional.C](https://root.cern.ch/doc/master/rf303__conditional_8C.html), a reproducible 10 % speedup was observed in batch mode after this PR. The speedup is expected to be more significant for wider computational graphs where more intermediate node results can be kept in the RunContext after each evaluation. This PR implements one of the ideas suggested in https://github.com/root-project/root/issues/6557, namely the bullet point of ""Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed."". This might be interesting for @lmoneta, @hageboeck and @manolismih.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:300,Performance,cache,cached,300,"In the batched evaluation mode, the RunContext object that cached the values of nodes in the computation graph has so far been completely cleared after each NLL evaluation. In this PR, a new class `RunContextTracker` is introduced. It makes use of the `RooChangeTracker` class to determine whether a cached result for a given node needs to be recomputed after the change of a given fundamental parameter or not. This should speed up likelihood fits, as often only one fundamental parameter is changed at the time for the numeric gradient determination. For the example [rf303_conditional.C](https://root.cern.ch/doc/master/rf303__conditional_8C.html), a reproducible 10 % speedup was observed in batch mode after this PR. The speedup is expected to be more significant for wider computational graphs where more intermediate node results can be kept in the RunContext after each evaluation. This PR implements one of the ideas suggested in https://github.com/root-project/root/issues/6557, namely the bullet point of ""Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed."". This might be interesting for @lmoneta, @hageboeck and @manolismih.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:138,Usability,clear,cleared,138,"In the batched evaluation mode, the RunContext object that cached the values of nodes in the computation graph has so far been completely cleared after each NLL evaluation. In this PR, a new class `RunContextTracker` is introduced. It makes use of the `RooChangeTracker` class to determine whether a cached result for a given node needs to be recomputed after the change of a given fundamental parameter or not. This should speed up likelihood fits, as often only one fundamental parameter is changed at the time for the numeric gradient determination. For the example [rf303_conditional.C](https://root.cern.ch/doc/master/rf303__conditional_8C.html), a reproducible 10 % speedup was observed in batch mode after this PR. The speedup is expected to be more significant for wider computational graphs where more intermediate node results can be kept in the RunContext after each evaluation. This PR implements one of the ideas suggested in https://github.com/root-project/root/issues/6557, namely the bullet point of ""Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed."". This might be interesting for @lmoneta, @hageboeck and @manolismih.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:1023,Usability,clear,clear,1023,"In the batched evaluation mode, the RunContext object that cached the values of nodes in the computation graph has so far been completely cleared after each NLL evaluation. In this PR, a new class `RunContextTracker` is introduced. It makes use of the `RooChangeTracker` class to determine whether a cached result for a given node needs to be recomputed after the change of a given fundamental parameter or not. This should speed up likelihood fits, as often only one fundamental parameter is changed at the time for the numeric gradient determination. For the example [rf303_conditional.C](https://root.cern.ch/doc/master/rf303__conditional_8C.html), a reproducible 10 % speedup was observed in batch mode after this PR. The speedup is expected to be more significant for wider computational graphs where more intermediate node results can be kept in the RunContext after each evaluation. This PR implements one of the ideas suggested in https://github.com/root-project/root/issues/6557, namely the bullet point of ""Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed."". This might be interesting for @lmoneta, @hageboeck and @manolismih.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/issues/7345:553,Availability,error,errors,553,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; gmake[3]: m: No such file or directory; /bin/sh: line 2: -m: command not found; gmake[3]: *** [Makefile:145: install.static] Error 127; ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1676,Availability,Error,Error,1676," When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; gmake[3]: m: No such file or directory; /bin/sh: line 2: -m: command not found; gmake[3]: *** [Makefile:145: install.static] Error 127; ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context; <!--; Add any other context about the problem here.; -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1696,Availability,error,error,1696," When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; gmake[3]: m: No such file or directory; /bin/sh: line 2: -m: command not found; gmake[3]: *** [Makefile:145: install.static] Error 127; ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context; <!--; Add any other context about the problem here.; -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1850,Availability,avail,available,1850," When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; gmake[3]: m: No such file or directory; /bin/sh: line 2: -m: command not found; gmake[3]: *** [Makefile:145: install.static] Error 127; ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context; <!--; Add any other context about the problem here.; -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1660,Deployability,install,install,1660,"3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; gmake[3]: m: No such file or directory; /bin/sh: line 2: -m: command not found; gmake[3]: *** [Makefile:145: install.static] Error 127; ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input file",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1740,Deployability,INSTALL,INSTALL,1740," When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; gmake[3]: m: No such file or directory; /bin/sh: line 2: -m: command not found; gmake[3]: *** [Makefile:145: install.static] Error 127; ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context; <!--; Add any other context about the problem here.; -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1803,Deployability,install,install,1803," When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; gmake[3]: m: No such file or directory; /bin/sh: line 2: -m: command not found; gmake[3]: *** [Makefile:145: install.static] Error 127; ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context; <!--; Add any other context about the problem here.; -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1841,Deployability,install,install,1841," When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; gmake[3]: m: No such file or directory; /bin/sh: line 2: -m: command not found; gmake[3]: *** [Makefile:145: install.static] Error 127; ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context; <!--; Add any other context about the problem here.; -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:2389,Deployability,Install,Installing,2389," When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; gmake[3]: m: No such file or directory; /bin/sh: line 2: -m: command not found; gmake[3]: *** [Makefile:145: install.static] Error 127; ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context; <!--; Add any other context about the problem here.; -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1702,Integrability,message,message,1702," When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; gmake[3]: m: No such file or directory; /bin/sh: line 2: -m: command not found; gmake[3]: *** [Makefile:145: install.static] Error 127; ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context; <!--; Add any other context about the problem here.; -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:463,Modifiability,config,configuring,463,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; gmake[3]: m: No such file or directory; /bin/sh: line 2: -m: command not found; gmake[3]: *** [Makefile:145: install.static] Error 127; ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1759,Modifiability,variab,variable,1759," When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; gmake[3]: m: No such file or directory; /bin/sh: line 2: -m: command not found; gmake[3]: *** [Makefile:145: install.static] Error 127; ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context; <!--; Add any other context about the problem here.; -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:391,Usability,clear,clear,391,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; gmake[3]: m: No such file or directory; /bin/sh: line 2: -m: command not found; gmake[3]: *** [Makefile:145: install.static] Error 127; ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/pull/7346:108,Availability,error,error,108,"Remove ""l"" from ""ar clq"" command while there is no extra library; linked to libAfterImage.a. ; Fixing build error on latest OpenSUSE.; Most probably caused by latest `ar`:; ```; % ar --version; GNU ar (GNU Binutils; openSUSE Tumbleweed) 2.36.0.20210204-1; Copyright (C) 2021 Free Software Foundation, Inc.; This program is free software; you may redistribute it under the terms of; the GNU General Public License version 3 or (at your option) any later version.; This program has absolutely no warranty.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7346
https://github.com/root-project/root/pull/7347:376,Availability,error,error,376,"When importing data from a TTree in a RooDataSet, if some of the branches are not existing in the Tree ; do not import any data and make an empty dataset. ; This avoid importing the variables using the current values, which will be identical for every event.; This fixes ROOT-5112. After https://github.com/root-project/root/commit/b5c2fb7909fbd1e483a3e17b21d24093409d67c1 an error message was printed, but this can pass easly unnoticed. . If one needs to add ad-hoc some column to the dataset, it is also very easy to add branches to a TTree, using RDataFrame.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7347
https://github.com/root-project/root/pull/7347:382,Integrability,message,message,382,"When importing data from a TTree in a RooDataSet, if some of the branches are not existing in the Tree ; do not import any data and make an empty dataset. ; This avoid importing the variables using the current values, which will be identical for every event.; This fixes ROOT-5112. After https://github.com/root-project/root/commit/b5c2fb7909fbd1e483a3e17b21d24093409d67c1 an error message was printed, but this can pass easly unnoticed. . If one needs to add ad-hoc some column to the dataset, it is also very easy to add branches to a TTree, using RDataFrame.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7347
https://github.com/root-project/root/pull/7347:182,Modifiability,variab,variables,182,"When importing data from a TTree in a RooDataSet, if some of the branches are not existing in the Tree ; do not import any data and make an empty dataset. ; This avoid importing the variables using the current values, which will be identical for every event.; This fixes ROOT-5112. After https://github.com/root-project/root/commit/b5c2fb7909fbd1e483a3e17b21d24093409d67c1 an error message was printed, but this can pass easly unnoticed. . If one needs to add ad-hoc some column to the dataset, it is also very easy to add branches to a TTree, using RDataFrame.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7347
https://github.com/root-project/root/pull/7347:162,Safety,avoid,avoid,162,"When importing data from a TTree in a RooDataSet, if some of the branches are not existing in the Tree ; do not import any data and make an empty dataset. ; This avoid importing the variables using the current values, which will be identical for every event.; This fixes ROOT-5112. After https://github.com/root-project/root/commit/b5c2fb7909fbd1e483a3e17b21d24093409d67c1 an error message was printed, but this can pass easly unnoticed. . If one needs to add ad-hoc some column to the dataset, it is also very easy to add branches to a TTree, using RDataFrame.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7347
https://github.com/root-project/root/pull/7348:13,Deployability,install,install,13,"Some systems install Vc under /usr/include which makes it reachable from within rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where we also added a module for Vc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7348
https://github.com/root-project/root/pull/7348:401,Deployability,patch,patch,401,"Some systems install Vc under /usr/include which makes it reachable from within rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where we also added a module for Vc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7348
https://github.com/root-project/root/pull/7348:459,Deployability,upgrade,upgrade,459,"Some systems install Vc under /usr/include which makes it reachable from within rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where we also added a module for Vc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7348
https://github.com/root-project/root/pull/7349:198,Availability,alive,alive,198,A function-static does not guarantee the lifetime to be sufficiently; extended - at least on CentOS7. Use a unique_ptr which guarantees the; reference to stay valid for as long as the referencee is alive. Fixes crash at exit on CentOS7. (cherry picked from commit 80c14bb948df53d54596cbbabe725e6ef0acc8e8),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7349
https://github.com/root-project/root/pull/7349:70,Modifiability,extend,extended,70,A function-static does not guarantee the lifetime to be sufficiently; extended - at least on CentOS7. Use a unique_ptr which guarantees the; reference to stay valid for as long as the referencee is alive. Fixes crash at exit on CentOS7. (cherry picked from commit 80c14bb948df53d54596cbbabe725e6ef0acc8e8),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7349
https://github.com/root-project/root/pull/7350:311,Availability,failure,failures,311,Original commit message:. The Sema::LookupConstructor is not iteration safe. When looking up a ctor the modules infrasturcture deserializes more ctor; candidates in the body of the function causing the internal vector implementation; to rellocate and invalidate the pointers. This workaround should address the failures reported by LCG. The real fix is being processed here https://reviews.llvm.org/D91524 and we; after being merged we should be able to backport it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7350
https://github.com/root-project/root/pull/7350:16,Integrability,message,message,16,Original commit message:. The Sema::LookupConstructor is not iteration safe. When looking up a ctor the modules infrasturcture deserializes more ctor; candidates in the body of the function causing the internal vector implementation; to rellocate and invalidate the pointers. This workaround should address the failures reported by LCG. The real fix is being processed here https://reviews.llvm.org/D91524 and we; after being merged we should be able to backport it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7350
https://github.com/root-project/root/pull/7350:71,Safety,safe,safe,71,Original commit message:. The Sema::LookupConstructor is not iteration safe. When looking up a ctor the modules infrasturcture deserializes more ctor; candidates in the body of the function causing the internal vector implementation; to rellocate and invalidate the pointers. This workaround should address the failures reported by LCG. The real fix is being processed here https://reviews.llvm.org/D91524 and we; after being merged we should be able to backport it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7350
https://github.com/root-project/root/pull/7354:267,Availability,error,error,267,"Data sources such as RNTuple that have efficient ways to get the; size of a collection can recognize the `__rdf_sizeof_` prefix and; connect that variable to the column representing the size of `var`. To do:; - [x] test interaction of `#var` and `Alias`; - [x] nicer error handling in case of column name that is just `""#""` (Jakob's comment); - [x] do not expand `#define`, `#pragma` and other preprocessor directives; - [x] do not return `__rdf_sizeof_XXX` columns from `GetColumnNames` (RNTupleDS can, but RDF should filter them out); - [x] ignore `__rdf_sizeof_XXX` columns in `Snapshot` (~~printing a warning~~ throwing if passed explicitly by the user); - [x] same for `Cache`; - [x] document interaction of `Snapshot` and `Cache` with the `#var` columns; - [x] test interaction of `Cache` and `#var`; - [x] RNTuple's `#var` columns should probably be `std::size_t` instead of `unsigned int`s? that would be the less surprising. Also I got _some_ numbers out rather than an exception when I used the wrong type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7354
https://github.com/root-project/root/pull/7354:39,Energy Efficiency,efficient,efficient,39,"Data sources such as RNTuple that have efficient ways to get the; size of a collection can recognize the `__rdf_sizeof_` prefix and; connect that variable to the column representing the size of `var`. To do:; - [x] test interaction of `#var` and `Alias`; - [x] nicer error handling in case of column name that is just `""#""` (Jakob's comment); - [x] do not expand `#define`, `#pragma` and other preprocessor directives; - [x] do not return `__rdf_sizeof_XXX` columns from `GetColumnNames` (RNTupleDS can, but RDF should filter them out); - [x] ignore `__rdf_sizeof_XXX` columns in `Snapshot` (~~printing a warning~~ throwing if passed explicitly by the user); - [x] same for `Cache`; - [x] document interaction of `Snapshot` and `Cache` with the `#var` columns; - [x] test interaction of `Cache` and `#var`; - [x] RNTuple's `#var` columns should probably be `std::size_t` instead of `unsigned int`s? that would be the less surprising. Also I got _some_ numbers out rather than an exception when I used the wrong type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7354
https://github.com/root-project/root/pull/7354:146,Modifiability,variab,variable,146,"Data sources such as RNTuple that have efficient ways to get the; size of a collection can recognize the `__rdf_sizeof_` prefix and; connect that variable to the column representing the size of `var`. To do:; - [x] test interaction of `#var` and `Alias`; - [x] nicer error handling in case of column name that is just `""#""` (Jakob's comment); - [x] do not expand `#define`, `#pragma` and other preprocessor directives; - [x] do not return `__rdf_sizeof_XXX` columns from `GetColumnNames` (RNTupleDS can, but RDF should filter them out); - [x] ignore `__rdf_sizeof_XXX` columns in `Snapshot` (~~printing a warning~~ throwing if passed explicitly by the user); - [x] same for `Cache`; - [x] document interaction of `Snapshot` and `Cache` with the `#var` columns; - [x] test interaction of `Cache` and `#var`; - [x] RNTuple's `#var` columns should probably be `std::size_t` instead of `unsigned int`s? that would be the less surprising. Also I got _some_ numbers out rather than an exception when I used the wrong type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7354
https://github.com/root-project/root/pull/7354:675,Performance,Cache,Cache,675,"Data sources such as RNTuple that have efficient ways to get the; size of a collection can recognize the `__rdf_sizeof_` prefix and; connect that variable to the column representing the size of `var`. To do:; - [x] test interaction of `#var` and `Alias`; - [x] nicer error handling in case of column name that is just `""#""` (Jakob's comment); - [x] do not expand `#define`, `#pragma` and other preprocessor directives; - [x] do not return `__rdf_sizeof_XXX` columns from `GetColumnNames` (RNTupleDS can, but RDF should filter them out); - [x] ignore `__rdf_sizeof_XXX` columns in `Snapshot` (~~printing a warning~~ throwing if passed explicitly by the user); - [x] same for `Cache`; - [x] document interaction of `Snapshot` and `Cache` with the `#var` columns; - [x] test interaction of `Cache` and `#var`; - [x] RNTuple's `#var` columns should probably be `std::size_t` instead of `unsigned int`s? that would be the less surprising. Also I got _some_ numbers out rather than an exception when I used the wrong type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7354
https://github.com/root-project/root/pull/7354:729,Performance,Cache,Cache,729,"Data sources such as RNTuple that have efficient ways to get the; size of a collection can recognize the `__rdf_sizeof_` prefix and; connect that variable to the column representing the size of `var`. To do:; - [x] test interaction of `#var` and `Alias`; - [x] nicer error handling in case of column name that is just `""#""` (Jakob's comment); - [x] do not expand `#define`, `#pragma` and other preprocessor directives; - [x] do not return `__rdf_sizeof_XXX` columns from `GetColumnNames` (RNTupleDS can, but RDF should filter them out); - [x] ignore `__rdf_sizeof_XXX` columns in `Snapshot` (~~printing a warning~~ throwing if passed explicitly by the user); - [x] same for `Cache`; - [x] document interaction of `Snapshot` and `Cache` with the `#var` columns; - [x] test interaction of `Cache` and `#var`; - [x] RNTuple's `#var` columns should probably be `std::size_t` instead of `unsigned int`s? that would be the less surprising. Also I got _some_ numbers out rather than an exception when I used the wrong type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7354
https://github.com/root-project/root/pull/7354:788,Performance,Cache,Cache,788,"Data sources such as RNTuple that have efficient ways to get the; size of a collection can recognize the `__rdf_sizeof_` prefix and; connect that variable to the column representing the size of `var`. To do:; - [x] test interaction of `#var` and `Alias`; - [x] nicer error handling in case of column name that is just `""#""` (Jakob's comment); - [x] do not expand `#define`, `#pragma` and other preprocessor directives; - [x] do not return `__rdf_sizeof_XXX` columns from `GetColumnNames` (RNTupleDS can, but RDF should filter them out); - [x] ignore `__rdf_sizeof_XXX` columns in `Snapshot` (~~printing a warning~~ throwing if passed explicitly by the user); - [x] same for `Cache`; - [x] document interaction of `Snapshot` and `Cache` with the `#var` columns; - [x] test interaction of `Cache` and `#var`; - [x] RNTuple's `#var` columns should probably be `std::size_t` instead of `unsigned int`s? that would be the less surprising. Also I got _some_ numbers out rather than an exception when I used the wrong type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7354
https://github.com/root-project/root/pull/7354:215,Testability,test,test,215,"Data sources such as RNTuple that have efficient ways to get the; size of a collection can recognize the `__rdf_sizeof_` prefix and; connect that variable to the column representing the size of `var`. To do:; - [x] test interaction of `#var` and `Alias`; - [x] nicer error handling in case of column name that is just `""#""` (Jakob's comment); - [x] do not expand `#define`, `#pragma` and other preprocessor directives; - [x] do not return `__rdf_sizeof_XXX` columns from `GetColumnNames` (RNTupleDS can, but RDF should filter them out); - [x] ignore `__rdf_sizeof_XXX` columns in `Snapshot` (~~printing a warning~~ throwing if passed explicitly by the user); - [x] same for `Cache`; - [x] document interaction of `Snapshot` and `Cache` with the `#var` columns; - [x] test interaction of `Cache` and `#var`; - [x] RNTuple's `#var` columns should probably be `std::size_t` instead of `unsigned int`s? that would be the less surprising. Also I got _some_ numbers out rather than an exception when I used the wrong type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7354
https://github.com/root-project/root/pull/7354:767,Testability,test,test,767,"Data sources such as RNTuple that have efficient ways to get the; size of a collection can recognize the `__rdf_sizeof_` prefix and; connect that variable to the column representing the size of `var`. To do:; - [x] test interaction of `#var` and `Alias`; - [x] nicer error handling in case of column name that is just `""#""` (Jakob's comment); - [x] do not expand `#define`, `#pragma` and other preprocessor directives; - [x] do not return `__rdf_sizeof_XXX` columns from `GetColumnNames` (RNTupleDS can, but RDF should filter them out); - [x] ignore `__rdf_sizeof_XXX` columns in `Snapshot` (~~printing a warning~~ throwing if passed explicitly by the user); - [x] same for `Cache`; - [x] document interaction of `Snapshot` and `Cache` with the `#var` columns; - [x] test interaction of `Cache` and `#var`; - [x] RNTuple's `#var` columns should probably be `std::size_t` instead of `unsigned int`s? that would be the less surprising. Also I got _some_ numbers out rather than an exception when I used the wrong type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7354
https://github.com/root-project/root/pull/7357:50,Availability,error,error,50,With latest libpng versions value 0 recognized as error and; produced results are wrong.; Mean on newest Linux distributions one get problem to use TASImage class,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7357
https://github.com/root-project/root/pull/7359:50,Availability,error,error,50,With latest libpng versions value 0 recognized as error and; produced results are wrong,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7359
https://github.com/root-project/root/issues/7361:148,Availability,avail,available,148,"### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to; - [ ] have a mechanism for this; - [ ] expose the mechanism, for instance through documentation / release notes; - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7361:211,Availability,down,down,211,"### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to; - [ ] have a mechanism for this; - [ ] expose the mechanism, for instance through documentation / release notes; - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7361:442,Deployability,release,release,442,"### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to; - [ ] have a mechanism for this; - [ ] expose the mechanism, for instance through documentation / release notes; - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7361:541,Deployability,release,release,541,"### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to; - [ ] have a mechanism for this; - [ ] expose the mechanism, for instance through documentation / release notes; - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7361:621,Modifiability,variab,variable,621,"### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to; - [ ] have a mechanism for this; - [ ] expose the mechanism, for instance through documentation / release notes; - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7361:96,Performance,load,loaded,96,"### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to; - [ ] have a mechanism for this; - [ ] expose the mechanism, for instance through documentation / release notes; - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7361:243,Performance,load,loaded,243,"### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to; - [ ] have a mechanism for this; - [ ] expose the mechanism, for instance through documentation / release notes; - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7361:321,Security,validat,validated,321,"### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to; - [ ] have a mechanism for this; - [ ] expose the mechanism, for instance through documentation / release notes; - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7361:383,Security,expose,expose,383,"### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to; - [ ] have a mechanism for this; - [ ] expose the mechanism, for instance through documentation / release notes; - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7361:555,Usability,usab,usable,555,"### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to; - [ ] have a mechanism for this; - [ ] expose the mechanism, for instance through documentation / release notes; - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7362:678,Availability,error,error,678,"- [x] Checked for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds.; For instance, I trying to rebuild libAfterImage by executing in build directory:; ```; rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so ; ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:; ```; In file included from input_line_10:3:; In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:; In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:; In file included from /home/linev/build/webgui/include/Math/Util.h:28:; /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch; #include <Vc/Vc>; ^; /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'; [ 74%] Built target testInterpreterLock; [ 74%] Built target testImt; Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h); make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; ```; If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C; ```; % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C...; hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds; root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnosti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1011,Availability,Error,Error,1011,"ibe the bug. After llvm update I getting problem with incremental ROOT builds.; For instance, I trying to rebuild libAfterImage by executing in build directory:; ```; rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so ; ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:; ```; In file included from input_line_10:3:; In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:; In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:; In file included from /home/linev/build/webgui/include/Math/Util.h:28:; /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch; #include <Vc/Vc>; ^; /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'; [ 74%] Built target testInterpreterLock; [ 74%] Built target testImt; Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h); make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; ```; If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C; ```; % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C...; hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds; root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed.; [1] 2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1070,Availability,failure,failure,1070,"ibe the bug. After llvm update I getting problem with incremental ROOT builds.; For instance, I trying to rebuild libAfterImage by executing in build directory:; ```; rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so ; ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:; ```; In file included from input_line_10:3:; In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:; In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:; In file included from /home/linev/build/webgui/include/Math/Util.h:28:; /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch; #include <Vc/Vc>; ^; /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'; [ 74%] Built target testInterpreterLock; [ 74%] Built target testImt; Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h); make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; ```; If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C; ```; % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C...; hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds; root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed.; [1] 2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1249,Availability,Error,Error,1249,"stance, I trying to rebuild libAfterImage by executing in build directory:; ```; rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so ; ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:; ```; In file included from input_line_10:3:; In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:; In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:; In file included from /home/linev/build/webgui/include/Math/Util.h:28:; /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch; #include <Vc/Vc>; ^; /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'; [ 74%] Built target testInterpreterLock; [ 74%] Built target testImt; Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h); make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; ```; If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C; ```; % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C...; hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds; root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed.; [1] 25284 IOT instruction (core dumped) root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1346,Availability,Error,Error,1346,"stance, I trying to rebuild libAfterImage by executing in build directory:; ```; rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so ; ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:; ```; In file included from input_line_10:3:; In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:; In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:; In file included from /home/linev/build/webgui/include/Math/Util.h:28:; /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch; #include <Vc/Vc>; ^; /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'; [ 74%] Built target testInterpreterLock; [ 74%] Built target testImt; Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h); make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; ```; If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C; ```; % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C...; hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds; root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed.; [1] 25284 IOT instruction (core dumped) root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:63,Deployability,update,update,63,"- [x] Checked for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds.; For instance, I trying to rebuild libAfterImage by executing in build directory:; ```; rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so ; ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:; ```; In file included from input_line_10:3:; In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:; In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:; In file included from /home/linev/build/webgui/include/Math/Util.h:28:; /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch; #include <Vc/Vc>; ^; /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'; [ 74%] Built target testInterpreterLock; [ 74%] Built target testImt; Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h); make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; ```; If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C; ```; % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C...; hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds; root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnosti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:961,Testability,test,testInterpreterLock,961,"ibe the bug. After llvm update I getting problem with incremental ROOT builds.; For instance, I trying to rebuild libAfterImage by executing in build directory:; ```; rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so ; ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:; ```; In file included from input_line_10:3:; In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:; In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:; In file included from /home/linev/build/webgui/include/Math/Util.h:28:; /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch; #include <Vc/Vc>; ^; /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'; [ 74%] Built target testInterpreterLock; [ 74%] Built target testImt; Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h); make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; ```; If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C; ```; % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C...; hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds; root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed.; [1] 2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1002,Testability,test,testImt,1002,"ibe the bug. After llvm update I getting problem with incremental ROOT builds.; For instance, I trying to rebuild libAfterImage by executing in build directory:; ```; rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so ; ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:; ```; In file included from input_line_10:3:; In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:; In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:; In file included from /home/linev/build/webgui/include/Math/Util.h:28:; /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch; #include <Vc/Vc>; ^; /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'; [ 74%] Built target testInterpreterLock; [ 74%] Built target testImt; Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h); make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; ```; If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C; ```; % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C...; hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds; root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed.; [1] 2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1918,Testability,Assert,Assertion,1918,"stance, I trying to rebuild libAfterImage by executing in build directory:; ```; rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so ; ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:; ```; In file included from input_line_10:3:; In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:; In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:; In file included from /home/linev/build/webgui/include/Math/Util.h:28:; /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch; #include <Vc/Vc>; ^; /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'; [ 74%] Built target testInterpreterLock; [ 74%] Built target testImt; Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h); make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; ```; If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C; ```; % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C...; hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds; root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed.; [1] 25284 IOT instruction (core dumped) root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/pull/7365:223,Availability,down,down,223,"In some cases, when deserializing a `CXXMethodDecl` of a `CXXSpecializationTemplateDecl`,; the call to `FunctionDecl::setPure()` happens before the `DefinitionData` member has been; populated (which appears to happen lower down in a `mergeRedeclarable` call), causing a; crash (https://reviews.llvm.org/P8228). This diff fixes this by deferring the `FunctionDecl::setPure()` till after the `DefinitionData` has; been filled in. Reviewed By: lxfind. Differential Revision: https://reviews.llvm.org/D86853. Fixes cmssw modules IB. cc: @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7365
https://github.com/root-project/root/issues/7366:570,Availability,failure,failures,570,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures.; There are various possible failure modes -- the command above typically results in these kind of errors:. ```; 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+...; 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so; 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0); 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value; 1369: collect2: error: ld returned 1 exit status; 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:608,Availability,failure,failure,608,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures.; There are various possible failure modes -- the command above typically results in these kind of errors:. ```; 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+...; 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so; 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0); 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value; 1369: collect2: error: ld returned 1 exit status; 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:678,Availability,error,errors,678,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures.; There are various possible failure modes -- the command above typically results in these kind of errors:. ```; 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+...; 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so; 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0); 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value; 1369: collect2: error: ld returned 1 exit status; 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:1108,Availability,error,error,1108,"'s master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures.; There are various possible failure modes -- the command above typically results in these kind of errors:. ```; 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+...; 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so; 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0); 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value; 1369: collect2: error: ld returned 1 exit status; 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.so.5"" ""/usr/lib/liblz4.so.1"" ""/usr/lib/libz.so.1"" ""/usr/lib/libzstd.so.1"" ""/usr/lib/libnss_files.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThrea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:1157,Availability,error,error,1157,"'s master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures.; There are various possible failure modes -- the command above typically results in these kind of errors:. ```; 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+...; 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so; 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0); 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value; 1369: collect2: error: ld returned 1 exit status; 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.so.5"" ""/usr/lib/liblz4.so.1"" ""/usr/lib/libz.so.1"" ""/usr/lib/libzstd.so.1"" ""/usr/lib/libnss_files.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThrea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:1197,Availability,Error,Error,1197,"'s master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures.; There are various possible failure modes -- the command above typically results in these kind of errors:. ```; 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+...; 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so; 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0); 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value; 1369: collect2: error: ld returned 1 exit status; 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.so.5"" ""/usr/lib/liblz4.so.1"" ""/usr/lib/libz.so.1"" ""/usr/lib/libzstd.so.1"" ""/usr/lib/libnss_files.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThrea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:3963,Availability,down,download,3963,".2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed!; 1369: terminate called after throwing an instance of 'std::logic_error'; 1369: what(): basic_string::_M_construct null not valid; ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to also be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:4152,Availability,failure,failure,4152,".2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed!; 1369: terminate called after throwing an instance of 'std::logic_error'; 1369: what(): basic_string::_M_construct null not valid; ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to also be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:3945,Deployability,install,install,3945,".2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed!; 1369: terminate called after throwing an instance of 'std::logic_error'; 1369: what(): basic_string::_M_construct null not valid; ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to also be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:4116,Deployability,install,installing,4116,".2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed!; 1369: terminate called after throwing an instance of 'std::logic_error'; 1369: what(): basic_string::_M_construct null not valid; ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to also be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:3319,Performance,concurren,concurrently,3319,".2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed!; 1369: terminate called after throwing an instance of 'std::logic_error'; 1369: what(): basic_string::_M_construct null not valid; ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to also be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:565,Testability,test,test,565,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures.; There are various possible failure modes -- the command above typically results in these kind of errors:. ```; 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+...; 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so; 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0); 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value; 1369: collect2: error: ld returned 1 exit status; 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:3313,Testability,test,tests,3313,".2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed!; 1369: terminate called after throwing an instance of 'std::logic_error'; 1369: what(): basic_string::_M_construct null not valid; ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to also be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:3365,Testability,test,tests,3365,".2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed!; 1369: terminate called after throwing an instance of 'std::logic_error'; 1369: what(): basic_string::_M_construct null not valid; ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to also be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:4201,Testability,test,tests,4201,".2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed!; 1369: terminate called after throwing an instance of 'std::logic_error'; 1369: what(): basic_string::_M_construct null not valid; ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to also be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:391,Usability,clear,clear,391,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures.; There are various possible failure modes -- the command above typically results in these kind of errors:. ```; 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+...; 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so; 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0); 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value; 1369: collect2: error: ld returned 1 exit status; 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/pull/7368:59,Modifiability,config,configure,59,This works around an issue for which @guitargeek could not configure his build properly (thanks for double-checking) -- and in general provides a nicer behavior.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7368
https://github.com/root-project/root/pull/7369:19,Testability,test,tested,19,This change can be tested only in collection_proxies.C demo.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7369
https://github.com/root-project/root/pull/7370:195,Availability,error,error,195,"from a standalone C++ project including ROOTTPython libs. Side note:; Is there any way to make TPython work outside ROOT, in a C++ project?. `TPython::Exec(""import numpy"");`. returns `kTRUE` (no error). but the result is a `_Py_NoneStruct`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7370
https://github.com/root-project/root/issues/7377:525,Performance,optimiz,optimization,525,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Calling `CompileMacro(""macro.C"", ""gO"")` only adds debug flags, not optimization flags. This is surprising as it is not the behavior of compilers (passing both `-g` and `-O2` is fine) and the lack of optimization is completely invisible to most users. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Compilers allow debug and optimization flags leaving side by side without issues, `CompileMacro` should do the same. . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Calling `CompileMacro(""macro.C"", ""fO"")` with a high enough `gDebug` value shows the problem. ### Additional context; <!--; Add any other context about the problem here.; -->. I found an [old jira ticket](https://sft.its.cern.ch/jira/browse/ROOT-5803) where @pcanal suggests to use this behavior as a feature, explicitly passing ""g"" to disable optimizations in a case where they were not desired.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7377
https://github.com/root-project/root/issues/7377:657,Performance,optimiz,optimization,657,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Calling `CompileMacro(""macro.C"", ""gO"")` only adds debug flags, not optimization flags. This is surprising as it is not the behavior of compilers (passing both `-g` and `-O2` is fine) and the lack of optimization is completely invisible to most users. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Compilers allow debug and optimization flags leaving side by side without issues, `CompileMacro` should do the same. . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Calling `CompileMacro(""macro.C"", ""fO"")` with a high enough `gDebug` value shows the problem. ### Additional context; <!--; Add any other context about the problem here.; -->. I found an [old jira ticket](https://sft.its.cern.ch/jira/browse/ROOT-5803) where @pcanal suggests to use this behavior as a feature, explicitly passing ""g"" to disable optimizations in a case where they were not desired.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7377
https://github.com/root-project/root/issues/7377:834,Performance,optimiz,optimization,834,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Calling `CompileMacro(""macro.C"", ""gO"")` only adds debug flags, not optimization flags. This is surprising as it is not the behavior of compilers (passing both `-g` and `-O2` is fine) and the lack of optimization is completely invisible to most users. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Compilers allow debug and optimization flags leaving side by side without issues, `CompileMacro` should do the same. . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Calling `CompileMacro(""macro.C"", ""fO"")` with a high enough `gDebug` value shows the problem. ### Additional context; <!--; Add any other context about the problem here.; -->. I found an [old jira ticket](https://sft.its.cern.ch/jira/browse/ROOT-5803) where @pcanal suggests to use this behavior as a feature, explicitly passing ""g"" to disable optimizations in a case where they were not desired.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7377
https://github.com/root-project/root/issues/7377:1553,Performance,optimiz,optimizations,1553,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Calling `CompileMacro(""macro.C"", ""gO"")` only adds debug flags, not optimization flags. This is surprising as it is not the behavior of compilers (passing both `-g` and `-O2` is fine) and the lack of optimization is completely invisible to most users. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Compilers allow debug and optimization flags leaving side by side without issues, `CompileMacro` should do the same. . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Calling `CompileMacro(""macro.C"", ""fO"")` with a high enough `gDebug` value shows the problem. ### Additional context; <!--; Add any other context about the problem here.; -->. I found an [old jira ticket](https://sft.its.cern.ch/jira/browse/ROOT-5803) where @pcanal suggests to use this behavior as a feature, explicitly passing ""g"" to disable optimizations in a case where they were not desired.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7377
https://github.com/root-project/root/issues/7377:391,Usability,clear,clear,391,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Calling `CompileMacro(""macro.C"", ""gO"")` only adds debug flags, not optimization flags. This is surprising as it is not the behavior of compilers (passing both `-g` and `-O2` is fine) and the lack of optimization is completely invisible to most users. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Compilers allow debug and optimization flags leaving side by side without issues, `CompileMacro` should do the same. . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Calling `CompileMacro(""macro.C"", ""fO"")` with a high enough `gDebug` value shows the problem. ### Additional context; <!--; Add any other context about the problem here.; -->. I found an [old jira ticket](https://sft.its.cern.ch/jira/browse/ROOT-5803) where @pcanal suggests to use this behavior as a feature, explicitly passing ""g"" to disable optimizations in a case where they were not desired.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7377
https://github.com/root-project/root/issues/7377:740,Usability,clear,clear,740,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Calling `CompileMacro(""macro.C"", ""gO"")` only adds debug flags, not optimization flags. This is surprising as it is not the behavior of compilers (passing both `-g` and `-O2` is fine) and the lack of optimization is completely invisible to most users. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Compilers allow debug and optimization flags leaving side by side without issues, `CompileMacro` should do the same. . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Calling `CompileMacro(""macro.C"", ""fO"")` with a high enough `gDebug` value shows the problem. ### Additional context; <!--; Add any other context about the problem here.; -->. I found an [old jira ticket](https://sft.its.cern.ch/jira/browse/ROOT-5803) where @pcanal suggests to use this behavior as a feature, explicitly passing ""g"" to disable optimizations in a case where they were not desired.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7377
https://github.com/root-project/root/issues/7381:76,Usability,clear,clear,76,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->; While users can `Define` a column with the same name in different branches of the computation graph, that's not true for `Alias`es: they are global to the computation graph. For example, this fails:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <iostream>. int main() {; auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 42; }).Define(""y"", [] { return 0; });; auto dfzx = df.Alias(""z"", ""x"");; auto dfzy = df.Alias(""z"", ""y"");; auto max42 = dfzx.Max<int>(""z"");; auto max0 = dfzy.Max<int>(""z"");; std::cout << ""should be 42: "" << *max42 << '\n';; std::cout << ""should be 0: "" << *max0 << '\n';. return 0;; }; ```. ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->. Aliases should behave the same as Defines, we should track them per-computation-graph-branch rather than per-computation-graph. ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->. That would make it possible to `Redefine` aliases, which is currently not a thing because we don't want a computation-graph-branch-local `Redefine` to undefine a global `Alias`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7381
https://github.com/root-project/root/issues/7381:850,Usability,clear,clear,850,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->; While users can `Define` a column with the same name in different branches of the computation graph, that's not true for `Alias`es: they are global to the computation graph. For example, this fails:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <iostream>. int main() {; auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 42; }).Define(""y"", [] { return 0; });; auto dfzx = df.Alias(""z"", ""x"");; auto dfzy = df.Alias(""z"", ""y"");; auto max42 = dfzx.Max<int>(""z"");; auto max0 = dfzy.Max<int>(""z"");; std::cout << ""should be 42: "" << *max42 << '\n';; std::cout << ""should be 0: "" << *max0 << '\n';. return 0;; }; ```. ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->. Aliases should behave the same as Defines, we should track them per-computation-graph-branch rather than per-computation-graph. ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->. That would make it possible to `Redefine` aliases, which is currently not a thing because we don't want a computation-graph-branch-local `Redefine` to undefine a global `Alias`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7381
https://github.com/root-project/root/pull/7385:12,Integrability,depend,depends,12,"Since rf408 depends on RDF, it make sense to veto it when RDF is off.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7385
https://github.com/root-project/root/pull/7388:49,Usability,feedback,feedback,49,"I am sure these docs could still be much better, feedback is welcome.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7388
https://github.com/root-project/root/pull/7389:7,Availability,repair,repair,7,Should repair but not close https://github.com/cms-sw/cmsdist/pull/6690#issuecomment-788782759,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7389
https://github.com/root-project/root/issues/7390:252,Testability,test,test,252,### Describe the bug. See https://github.com/cms-sw/cmsdist/pull/6690#issuecomment-788782759. ### Expected behavior. `typedef` forward declaration should be skipped as it refers to a specialization that we cannot forward declare. ### To Reproduce. See test coming up.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7390
https://github.com/root-project/root/pull/7392:94,Availability,error,error,94,"Fix function, which was introduced with commit 822106a898267fca74214fc83d64d6110b2d66c5; Now, error messages of the device compiler are correctly prefixed with `cling-ptx: `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7392
https://github.com/root-project/root/pull/7392:100,Integrability,message,messages,100,"Fix function, which was introduced with commit 822106a898267fca74214fc83d64d6110b2d66c5; Now, error messages of the device compiler are correctly prefixed with `cling-ptx: `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7392
https://github.com/root-project/root/issues/7393:484,Availability,error,error,484,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; Either:; Automatically convert the data type of the arrays and fill the error with the correct values; Or:; Raising error/warning when mixed data types are passed. <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; import numpy as np; import ROOT; n = 1; x = np.array([1]); y = np.array([2]); xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]); yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]); reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi); print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)); # result:; # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310; ```; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:557,Availability,error,error,557,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; Either:; Automatically convert the data type of the arrays and fill the error with the correct values; Or:; Raising error/warning when mixed data types are passed. <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; import numpy as np; import ROOT; n = 1; x = np.array([1]); y = np.array([2]); xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]); yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]); reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi); print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)); # result:; # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310; ```; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:676,Availability,error,error,676,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; Either:; Automatically convert the data type of the arrays and fill the error with the correct values; Or:; Raising error/warning when mixed data types are passed. <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; import numpy as np; import ROOT; n = 1; x = np.array([1]); y = np.array([2]); xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]); yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]); reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi); print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)); # result:; # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310; ```; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:901,Availability,error,error,901,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; Either:; Automatically convert the data type of the arrays and fill the error with the correct values; Or:; Raising error/warning when mixed data types are passed. <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; import numpy as np; import ROOT; n = 1; x = np.array([1]); y = np.array([2]); xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]); yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]); reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi); print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)); # result:; # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310; ```; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:945,Availability,error,error,945,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; Either:; Automatically convert the data type of the arrays and fill the error with the correct values; Or:; Raising error/warning when mixed data types are passed. <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; import numpy as np; import ROOT; n = 1; x = np.array([1]); y = np.array([2]); xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]); yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]); reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi); print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)); # result:; # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310; ```; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:1962,Availability,down,download,1962,"ql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; Either:; Automatically convert the data type of the arrays and fill the error with the correct values; Or:; Raising error/warning when mixed data types are passed. <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; import numpy as np; import ROOT; n = 1; x = np.array([1]); y = np.array([2]); xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]); yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]); reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi); print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)); # result:; # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310; ```; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version: JupyROOT 6.18/04; Operating system: Linux (lxplus); ROOT installed via conda . ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:1944,Deployability,install,install,1944,"ql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; Either:; Automatically convert the data type of the arrays and fill the error with the correct values; Or:; Raising error/warning when mixed data types are passed. <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; import numpy as np; import ROOT; n = 1; x = np.array([1]); y = np.array([2]); xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]); yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]); reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi); print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)); # result:; # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310; ```; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version: JupyROOT 6.18/04; Operating system: Linux (lxplus); ROOT installed via conda . ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:2073,Deployability,install,installed,2073,"ql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; Either:; Automatically convert the data type of the arrays and fill the error with the correct values; Or:; Raising error/warning when mixed data types are passed. <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; import numpy as np; import ROOT; n = 1; x = np.array([1]); y = np.array([2]); xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]); yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]); reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi); print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)); # result:; # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310; ```; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version: JupyROOT 6.18/04; Operating system: Linux (lxplus); ROOT installed via conda . ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:739,Usability,clear,clear,739,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; Either:; Automatically convert the data type of the arrays and fill the error with the correct values; Or:; Raising error/warning when mixed data types are passed. <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; import numpy as np; import ROOT; n = 1; x = np.array([1]); y = np.array([2]); xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]); yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]); reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi); print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)); # result:; # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310; ```; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:1001,Usability,clear,clear,1001,"s; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; Either:; Automatically convert the data type of the arrays and fill the error with the correct values; Or:; Raising error/warning when mixed data types are passed. <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; import numpy as np; import ROOT; n = 1; x = np.array([1]); y = np.array([2]); xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]); yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]); reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi); print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)); # result:; # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310; ```; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version: JupyROOT 6.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/pull/7394:17,Testability,test,test,17,Fixes and adds a test for #7181.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7394
https://github.com/root-project/root/issues/7395:284,Energy Efficiency,schedul,scheduling,284,"`RDF::Mean()` uses plain doubles. That's better than float, but far from stable. When you run with IMT, it's actually more accurate than without, because less numbers go into one accumulator, and each running sum remains smaller. So IMT/NoIMT can break your tests (even different TBB scheduling does). It was creating problems already in this simple test (note that the precision threshold for testing the mean is pretty bad, 1.E-2):; https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/roofit/RDataFrameHelpers/test/testActionHelpers.cxx#L28-L33. Maybe it's worth to increase the precision of; https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx#L917. with a Kahan or Neumaier sum. Same for StdDev, maybe go for Knuth's algo or the parallel weighted variance.; https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance. For Kahan, you can use; https://root.cern.ch/doc/master/classROOT_1_1Math_1_1KahanSum.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7395
https://github.com/root-project/root/issues/7395:258,Testability,test,tests,258,"`RDF::Mean()` uses plain doubles. That's better than float, but far from stable. When you run with IMT, it's actually more accurate than without, because less numbers go into one accumulator, and each running sum remains smaller. So IMT/NoIMT can break your tests (even different TBB scheduling does). It was creating problems already in this simple test (note that the precision threshold for testing the mean is pretty bad, 1.E-2):; https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/roofit/RDataFrameHelpers/test/testActionHelpers.cxx#L28-L33. Maybe it's worth to increase the precision of; https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx#L917. with a Kahan or Neumaier sum. Same for StdDev, maybe go for Knuth's algo or the parallel weighted variance.; https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance. For Kahan, you can use; https://root.cern.ch/doc/master/classROOT_1_1Math_1_1KahanSum.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7395
https://github.com/root-project/root/issues/7395:350,Testability,test,test,350,"`RDF::Mean()` uses plain doubles. That's better than float, but far from stable. When you run with IMT, it's actually more accurate than without, because less numbers go into one accumulator, and each running sum remains smaller. So IMT/NoIMT can break your tests (even different TBB scheduling does). It was creating problems already in this simple test (note that the precision threshold for testing the mean is pretty bad, 1.E-2):; https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/roofit/RDataFrameHelpers/test/testActionHelpers.cxx#L28-L33. Maybe it's worth to increase the precision of; https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx#L917. with a Kahan or Neumaier sum. Same for StdDev, maybe go for Knuth's algo or the parallel weighted variance.; https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance. For Kahan, you can use; https://root.cern.ch/doc/master/classROOT_1_1Math_1_1KahanSum.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7395
https://github.com/root-project/root/issues/7395:394,Testability,test,testing,394,"`RDF::Mean()` uses plain doubles. That's better than float, but far from stable. When you run with IMT, it's actually more accurate than without, because less numbers go into one accumulator, and each running sum remains smaller. So IMT/NoIMT can break your tests (even different TBB scheduling does). It was creating problems already in this simple test (note that the precision threshold for testing the mean is pretty bad, 1.E-2):; https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/roofit/RDataFrameHelpers/test/testActionHelpers.cxx#L28-L33. Maybe it's worth to increase the precision of; https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx#L917. with a Kahan or Neumaier sum. Same for StdDev, maybe go for Knuth's algo or the parallel weighted variance.; https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance. For Kahan, you can use; https://root.cern.ch/doc/master/classROOT_1_1Math_1_1KahanSum.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7395
https://github.com/root-project/root/issues/7395:543,Testability,test,test,543,"`RDF::Mean()` uses plain doubles. That's better than float, but far from stable. When you run with IMT, it's actually more accurate than without, because less numbers go into one accumulator, and each running sum remains smaller. So IMT/NoIMT can break your tests (even different TBB scheduling does). It was creating problems already in this simple test (note that the precision threshold for testing the mean is pretty bad, 1.E-2):; https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/roofit/RDataFrameHelpers/test/testActionHelpers.cxx#L28-L33. Maybe it's worth to increase the precision of; https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx#L917. with a Kahan or Neumaier sum. Same for StdDev, maybe go for Knuth's algo or the parallel weighted variance.; https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance. For Kahan, you can use; https://root.cern.ch/doc/master/classROOT_1_1Math_1_1KahanSum.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7395
https://github.com/root-project/root/issues/7395:548,Testability,test,testActionHelpers,548,"`RDF::Mean()` uses plain doubles. That's better than float, but far from stable. When you run with IMT, it's actually more accurate than without, because less numbers go into one accumulator, and each running sum remains smaller. So IMT/NoIMT can break your tests (even different TBB scheduling does). It was creating problems already in this simple test (note that the precision threshold for testing the mean is pretty bad, 1.E-2):; https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/roofit/RDataFrameHelpers/test/testActionHelpers.cxx#L28-L33. Maybe it's worth to increase the precision of; https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx#L917. with a Kahan or Neumaier sum. Same for StdDev, maybe go for Knuth's algo or the parallel weighted variance.; https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance. For Kahan, you can use; https://root.cern.ch/doc/master/classROOT_1_1Math_1_1KahanSum.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7395
https://github.com/root-project/root/issues/7395:343,Usability,simpl,simple,343,"`RDF::Mean()` uses plain doubles. That's better than float, but far from stable. When you run with IMT, it's actually more accurate than without, because less numbers go into one accumulator, and each running sum remains smaller. So IMT/NoIMT can break your tests (even different TBB scheduling does). It was creating problems already in this simple test (note that the precision threshold for testing the mean is pretty bad, 1.E-2):; https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/roofit/RDataFrameHelpers/test/testActionHelpers.cxx#L28-L33. Maybe it's worth to increase the precision of; https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx#L917. with a Kahan or Neumaier sum. Same for StdDev, maybe go for Knuth's algo or the parallel weighted variance.; https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance. For Kahan, you can use; https://root.cern.ch/doc/master/classROOT_1_1Math_1_1KahanSum.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7395
https://github.com/root-project/root/pull/7398:69,Deployability,patch,patch,69,"[cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process.; ; The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:; Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed.; ```; 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6; 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6; 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6; 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6; 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule; 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule; 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule; 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction; 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction; 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop; 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII; 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter; 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter; 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter; 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo; 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory; 16 0x00007ffff6b0e33e in TListOfDataMembers::Load; 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers; 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers; 19 0x00007ffff6ae3dd1 in TClass::GetDataMember; 20 0x00007ffff6b259a0 in ROOT::Detail::TSchemaRuleSet::Add",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:386,Deployability,patch,patch,386,"[cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process.; ; The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:; Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed.; ```; 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6; 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6; 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6; 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6; 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule; 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule; 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule; 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction; 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction; 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop; 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII; 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter; 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter; 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter; 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo; 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory; 16 0x00007ffff6b0e33e in TListOfDataMembers::Load; 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers; 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers; 19 0x00007ffff6ae3dd1 in TClass::GetDataMember; 20 0x00007ffff6b259a0 in ROOT::Detail::TSchemaRuleSet::Add",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:519,Deployability,patch,patch,519,"[cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process.; ; The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:; Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed.; ```; 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6; 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6; 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6; 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6; 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule; 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule; 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule; 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction; 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction; 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop; 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII; 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter; 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter; 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter; 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo; 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory; 16 0x00007ffff6b0e33e in TListOfDataMembers::Load; 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers; 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers; 19 0x00007ffff6ae3dd1 in TClass::GetDataMember; 20 0x00007ffff6b259a0 in ROOT::Detail::TSchemaRuleSet::Add",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:299,Integrability,depend,dependent,299,"[cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process.; ; The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:; Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed.; ```; 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6; 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6; 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6; 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6; 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule; 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule; 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule; 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction; 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction; 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop; 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII; 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter; 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter; 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter; 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo; 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory; 16 0x00007ffff6b0e33e in TListOfDataMembers::Load; 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers; 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers; 19 0x00007ffff6ae3dd1 in TClass::GetDataMember; 20 0x00007ffff6b259a0 in ROOT::Detail::TSchemaRuleSet::Add",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:43,Performance,Load,LoadModule,43,"[cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process.; ; The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:; Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed.; ```; 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6; 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6; 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6; 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6; 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule; 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule; 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule; 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction; 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction; 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop; 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII; 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter; 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter; 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter; 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo; 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory; 16 0x00007ffff6b0e33e in TListOfDataMembers::Load; 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers; 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers; 19 0x00007ffff6ae3dd1 in TClass::GetDataMember; 20 0x00007ffff6b259a0 in ROOT::Detail::TSchemaRuleSet::Add",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:109,Performance,Load,LoadModule,109,"[cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process.; ; The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:; Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed.; ```; 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6; 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6; 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6; 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6; 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule; 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule; 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule; 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction; 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction; 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop; 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII; 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter; 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter; 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter; 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo; 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory; 16 0x00007ffff6b0e33e in TListOfDataMembers::Load; 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers; 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers; 19 0x00007ffff6ae3dd1 in TClass::GetDataMember; 20 0x00007ffff6b259a0 in ROOT::Detail::TSchemaRuleSet::Add",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:411,Performance,load,loading,411,"[cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process.; ; The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:; Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed.; ```; 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6; 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6; 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6; 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6; 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule; 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule; 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule; 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction; 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction; 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop; 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII; 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter; 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter; 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter; 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo; 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory; 16 0x00007ffff6b0e33e in TListOfDataMembers::Load; 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers; 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers; 19 0x00007ffff6ae3dd1 in TClass::GetDataMember; 20 0x00007ffff6b259a0 in ROOT::Detail::TSchemaRuleSet::Add",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:447,Performance,perform,perform,447,"[cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process.; ; The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:; Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed.; ```; 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6; 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6; 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6; 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6; 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule; 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule; 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule; 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction; 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction; 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop; 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII; 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter; 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter; 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter; 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo; 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory; 16 0x00007ffff6b0e33e in TListOfDataMembers::Load; 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers; 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers; 19 0x00007ffff6ae3dd1 in TClass::GetDataMember; 20 0x00007ffff6b259a0 in ROOT::Detail::TSchemaRuleSet::Add",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:508,Performance,load,load,508,"[cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process.; ; The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:; Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed.; ```; 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6; 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6; 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6; 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6; 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule; 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule; 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule; 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction; 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction; 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop; 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII; 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter; 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter; 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter; 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo; 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory; 16 0x00007ffff6b0e33e in TListOfDataMembers::Load; 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers; 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers; 19 0x00007ffff6ae3dd1 in TClass::GetDataMember; 20 0x00007ffff6b259a0 in ROOT::Detail::TSchemaRuleSet::Add",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:1776,Performance,Load,Load,1776,"tly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:; Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed.; ```; 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6; 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6; 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6; 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6; 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule; 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule; 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule; 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction; 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction; 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop; 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII; 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter; 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter; 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter; 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo; 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory; 16 0x00007ffff6b0e33e in TListOfDataMembers::Load; 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers; 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers; 19 0x00007ffff6ae3dd1 in TClass::GetDataMember; 20 0x00007ffff6b259a0 in ROOT::Detail::TSchemaRuleSet::AddRule; 21 0x00007ffff6adee6c in TClass::AddRule (rule=0x572670 ""HepMC::GenVertex m_event"",; 22 0x00007ffff6adead2 in (anonymous namespace)::ReadRulesContent; 23 0x00007ffff6adec40 in TClass::ReadRules; 24 0x00007fffecd0b3a0 in TCling::Initialize; ```; There are several points to consider:; * We should understand why there are still DeferredDeclsToEmit;; * We should remove the `TClingMemberIter` from the init path as it is *very expensive*. cc: @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:762,Safety,abort,abort,762,"[cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process.; ; The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:; Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed.; ```; 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6; 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6; 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6; 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6; 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule; 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule; 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule; 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction; 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction; 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop; 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII; 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter; 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter; 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter; 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo; 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory; 16 0x00007ffff6b0e33e in TListOfDataMembers::Load; 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers; 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers; 19 0x00007ffff6ae3dd1 in TClass::GetDataMember; 20 0x00007ffff6b259a0 in ROOT::Detail::TSchemaRuleSet::Add",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:563,Testability,Assert,Assertion,563,"[cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process.; ; The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:; Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed.; ```; 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6; 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6; 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6; 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6; 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule; 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule; 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule; 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction; 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction; 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop; 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII; 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter; 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter; 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter; 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo; 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory; 16 0x00007ffff6b0e33e in TListOfDataMembers::Load; 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers; 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers; 19 0x00007ffff6ae3dd1 in TClass::GetDataMember; 20 0x00007ffff6b259a0 in ROOT::Detail::TSchemaRuleSet::Add",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/issues/7400:281,Availability,error,errors,281,"### Describe the bug; I compile ROOT using QtCreator, which has an embedded Clang and Tidy Analyzer. After a couple of hours of analysis, I get a report with many warnings. - Some of them look unimportant; - Some of them could be auto-fixed by Clang; - Some of them look like real errors.; ; For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```; Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,; TCppObject_t self, size_t nargs, void* args, TCppType_t result_type); {; TClassRef& cr = type_from_handle(result_type);; void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));; if (WrapperCall(method, nargs, args, self, obj)); return (TCppObject_t)obj;; return (TCppObject_t)0;; }; ```. ```; /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290; 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886; 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887; 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889; ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check?. Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ?. ### To Reproduce; - Install QtCreator; - Click on File, Import File or Project, click on the main ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:1923,Deployability,Install,Install,1923,"t with many warnings. - Some of them look unimportant; - Some of them could be auto-fixed by Clang; - Some of them look like real errors.; ; For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```; Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,; TCppObject_t self, size_t nargs, void* args, TCppType_t result_type); {; TClassRef& cr = type_from_handle(result_type);; void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));; if (WrapperCall(method, nargs, args, self, obj)); return (TCppObject_t)obj;; return (TCppObject_t)0;; }; ```. ```; /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290; 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886; 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887; 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889; ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check?. Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ?. ### To Reproduce; - Install QtCreator; - Click on File, Import File or Project, click on the main CMakeLists.txt of the ROOT source git repository.; - Build; - Tool, Run Clang & Tidy Analyzer. ### Setup; 1. ROOT 6.23/01; 2. Ubuntu 18; 3. git master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:1105,Energy Efficiency,allocate,allocated,1105,"get a report with many warnings. - Some of them look unimportant; - Some of them could be auto-fixed by Clang; - Some of them look like real errors.; ; For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```; Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,; TCppObject_t self, size_t nargs, void* args, TCppType_t result_type); {; TClassRef& cr = type_from_handle(result_type);; void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));; if (WrapperCall(method, nargs, args, self, obj)); return (TCppObject_t)obj;; return (TCppObject_t)0;; }; ```. ```; /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290; 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886; 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887; 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889; ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check?. Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ?. ### To Reproduce; - Install QtCreator; - Click on File, Import File or Project, click on the main CMakeLists.txt of the ROOT source git repository.; - Build; - Tool, Run Clang & Tidy Analyzer. ### Setup; 1. ROOT 6.23/01; 2. Ubuntu 18; 3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:357,Integrability,Wrap,WrapperCall,357,"### Describe the bug; I compile ROOT using QtCreator, which has an embedded Clang and Tidy Analyzer. After a couple of hours of analysis, I get a report with many warnings. - Some of them look unimportant; - Some of them could be auto-fixed by Clang; - Some of them look like real errors.; ; For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```; Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,; TCppObject_t self, size_t nargs, void* args, TCppType_t result_type); {; TClassRef& cr = type_from_handle(result_type);; void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));; if (WrapperCall(method, nargs, args, self, obj)); return (TCppObject_t)obj;; return (TCppObject_t)0;; }; ```. ```; /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290; 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886; 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887; 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889; ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check?. Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ?. ### To Reproduce; - Install QtCreator; - Click on File, Import File or Project, click on the main ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:680,Integrability,Wrap,WrapperCall,680,"### Describe the bug; I compile ROOT using QtCreator, which has an embedded Clang and Tidy Analyzer. After a couple of hours of analysis, I get a report with many warnings. - Some of them look unimportant; - Some of them could be auto-fixed by Clang; - Some of them look like real errors.; ; For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```; Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,; TCppObject_t self, size_t nargs, void* args, TCppType_t result_type); {; TClassRef& cr = type_from_handle(result_type);; void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));; if (WrapperCall(method, nargs, args, self, obj)); return (TCppObject_t)obj;; return (TCppObject_t)0;; }; ```. ```; /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290; 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886; 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887; 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889; ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check?. Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ?. ### To Reproduce; - Install QtCreator; - Click on File, Import File or Project, click on the main ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/pull/7403:287,Usability,guid,guide,287,Lot of changes to make GUI oxygen compliant:. - Create the proper groups and put classes in them for GUI 6; - Make the groups structure for ROOT 7; - Fix many typos. The new structure should allow to make a god documentation for ROOT 7. Classes like RFitPanel are now visible in the ref guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7403
https://github.com/root-project/root/pull/7404:211,Availability,down,down,211,"In the case of unweighted datasets, the current implementation of; `RooNLLVar::computeBatched` retreived the weight for every event with; `RooDataSet::get()`. This has a lot of overhead and significantly slows; down the evaluation. With this commit, it is correctly assumed that the weight is the same; for every event. This has been done in the code already before but it; was changed accidentally in 0e7c394. Hence, this commit partially reverts the changes made in commit 0e7c394.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7404
https://github.com/root-project/root/pull/7405:211,Availability,down,down,211,"In the case of unweighted datasets, the current implementation of; `RooNLLVar::computeBatched` retreived the weight for every event with; `RooDataSet::get()`. This has a lot of overhead and significantly slows; down the evaluation. With this commit, it is correctly assumed that the weight is the same; for every event. This has been done in the code already before but it; was changed accidentally in 0e7c394. Hence, this commit partially reverts the changes made in commit 0e7c394.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7405
https://github.com/root-project/root/issues/7410:49382,Deployability,release,released,49382,anch in /opt/root_src/build/rmkdepend/pr.c:176; 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177; 6: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104; 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104; 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127; 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127; 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129; 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129; 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131; 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131; 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144; 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144; 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144; 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144; 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145; 19: 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:147; 20: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:147; 21: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:150; 22: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:150; 23: Assuming 'verbose' is not equal to 0 in /opt/root_src/build/rmkdepend/pr.c:156; 24: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156; 25: Assuming field 'i_list' is not equal to NULL in /opt/root_src/build/rmkdepend/pr.c:156; 26: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156; 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:156; 28: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:156; 29: Use of memory after it is freed in /opt/root_src/build/rmkdepend/pr.c:160; /opt/root_src/build/rmkdepend/cppsetup.c; /opt/root_src/build/rmkdepend/include.c; /opt/root_src/build/rmkdepend/main.c; /opt/root_src,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:30764,Energy Efficiency,allocate,allocated,30764,/main.c:373:13: warning: Potential leak of memory pointed to by 'argv' [clang-analyzer-unix.Malloc]; 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172; 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176; 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176; 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176; 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176; 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185; 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185; 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189; 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189; 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193; 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214; 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216; 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219; 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223; 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373; /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]; 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172; 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176; 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176; 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223; 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373; 6: 'numundefs' is <= 0 in /opt/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:47428,Energy Efficiency,allocate,allocated,47428,-119 in /opt/root_src/build/rmkdepend/pr.c:141; /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]; 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173; 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173; 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176; 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176; 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177; 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104; 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104; 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104; 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104; 10: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:105; 11: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:105; 12: Memory is allocated in /opt/root_src/build/rmkdepend/pr.c:118; 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:127; 14: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:127; 15: Assuming 'file' is equal to 'lastfile' in /opt/root_src/build/rmkdepend/pr.c:127; 16: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:127; 17: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:144; 18: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:144; 19: Potential leak of memory pointed to by 'ipifile' in /opt/root_src/build/rmkdepend/pr.c:147; /opt/root_src/build/rmkdepend/pr.c:160:4: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]; 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173; 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173; 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176; 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:39836,Modifiability,variab,variable,39836,d to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749; /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]; /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]; /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116; /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]; 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542; 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543; 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605; 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605; 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609; 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609; 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:613; 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406; 9: expanded from macro 'isalnum' in /usr/include/ctype.h:189; 10: expanded from macro '__isctype' in /usr/include/ctype.h:89; 11: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:406; 12: expanded from macro 'isalnum' in /usr/include/ctype.h:189; 13: expanded from macro '__isctype' in /u,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:42778,Modifiability,variab,variable,42778, in /opt/root_src/build/rmkdepend/parse.c:335; 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340; 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340; 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345; 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345; 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376; 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376; 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384; 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384; 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388; 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389; 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389; 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392; /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108; /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:31209,Performance,load,loaded,31209,176; 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176; 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185; 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185; 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189; 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189; 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193; 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214; 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216; 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219; 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223; 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373; /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]; 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172; 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176; 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176; 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223; 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373; 6: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375; 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375; 8: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378; 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378; 10: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403; 11: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489; 12: Calling 'getfile' in /opt/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:32911,Performance,load,loaded,32911,build/rmkdepend/main.c:378; 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378; 10: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403; 11: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489; 12: Calling 'getfile' in /opt/root_src/build/rmkdepend/main.c:490; 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:532; 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:532; 15: Value assigned to field 'f_base' in /opt/root_src/build/rmkdepend/main.c:539; 16: Assuming field 'f_base' is equal to NULL in /opt/root_src/build/rmkdepend/main.c:540; 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:540; 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:542; 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:542; 20: Null pointer value stored to field 'f_end' in /opt/root_src/build/rmkdepend/main.c:550; 21: Dereference of null pointer (loaded from field 'f_end') in /opt/root_src/build/rmkdepend/main.c:551; /opt/root_src/build/rmkdepend/main.c:567:38: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161; 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172; 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176; 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176; 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223; 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373; 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375; 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375; 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378; 10: Taking true ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:39824,Performance,load,loaded,39824,d to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749; /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]; /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]; /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116; /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]; 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542; 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543; 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605; 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605; 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609; 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609; 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:613; 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406; 9: expanded from macro 'isalnum' in /usr/include/ctype.h:189; 10: expanded from macro '__isctype' in /usr/include/ctype.h:89; 11: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:406; 12: expanded from macro 'isalnum' in /usr/include/ctype.h:189; 13: expanded from macro '__isctype' in /u,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:42766,Performance,load,loaded,42766, in /opt/root_src/build/rmkdepend/parse.c:335; 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340; 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340; 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345; 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345; 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376; 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376; 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384; 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384; 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388; 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389; 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389; 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392; /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108; /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:13,Security,access,access,13,"Some garbage access warnings, null dereferencing, and buffer bounding warnings by Clang:; (ROOT master of today, with xrootd off); ```; /opt/root_src/build/rmkdepend/cppsetup.c:150:4: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150; /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180; /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:288,Security,secur,security,288,"Some garbage access warnings, null dereferencing, and buffer bounding warnings by Clang:; (ROOT master of today, with xrootd off); ```; /opt/root_src/build/rmkdepend/cppsetup.c:150:4: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150; /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180; /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:478,Security,secur,security,478,"Some garbage access warnings, null dereferencing, and buffer bounding warnings by Clang:; (ROOT master of today, with xrootd off); ```; /opt/root_src/build/rmkdepend/cppsetup.c:150:4: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150; /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180; /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:632,Security,secur,security,632,"Some garbage access warnings, null dereferencing, and buffer bounding warnings by Clang:; (ROOT master of today, with xrootd off); ```; /opt/root_src/build/rmkdepend/cppsetup.c:150:4: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150; /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180; /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:974,Security,secur,security,974,"Some garbage access warnings, null dereferencing, and buffer bounding warnings by Clang:; (ROOT master of today, with xrootd off); ```; /opt/root_src/build/rmkdepend/cppsetup.c:150:4: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150; /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180; /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:1164,Security,secur,security,1164,"aster of today, with xrootd off); ```; /opt/root_src/build/rmkdepend/cppsetup.c:150:4: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150; /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180; /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158; /opt/root_src/build/rm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:1285,Security,secur,security,1285,nding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150; /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180; /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158; /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with anal,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:1787,Security,secur,security,1787,'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150; /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180; /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158; /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289; /opt/root_src/build/rmkdepend/include.c:292:10: warn,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:2194,Security,secur,security,2194,cureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180; /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158; /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289; /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks intr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:2384,Security,secur,security,2384,e C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180; /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158; /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289; /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:2505,Security,secur,security,2505,ild/rmkdepend/cppsetup.c:180; /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158; /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289; /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292; /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:2846,Security,secur,security,2846,unction 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158; /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289; /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292; /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks intr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:3036,Security,secur,security,3036, that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158; /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289; /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292; /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:3157,Security,secur,security,3157,: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289; /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292; /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294; /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:3498,Security,secur,security,3498, as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289; /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292; /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294; /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:3688,Security,secur,security,3688,ovides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289; /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292; /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294; /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:3809,Security,secur,security,3809,: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292; /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294; /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318; /opt/root_src/build/rmkdepend/main,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:4183,Security,secur,security,4183,provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292; /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294; /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318; /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172; 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176; 3: Left side of '&&' is true in /op,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:4373,Security,secur,security,4373,trncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292; /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294; /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318; /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172; 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176; 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176; 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176; 5: Taking true branch in /opt/root_src,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:4527,Security,secur,security,4527,s not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294; /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318; /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172; 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176; 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176; 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176; 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176; 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185; 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185; 8,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:35010,Security,secur,security,35010, /opt/root_src/build/rmkdepend/main.c:403; 12: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489; 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495; 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495; 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498; 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498; 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659; 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659; 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567; /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569; /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:7,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:35443,Security,secur,security,35443,se_name' in /opt/root_src/build/rmkdepend/main.c:498; 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659; 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659; 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567; /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569; /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716; /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161; 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172; 3: Assuming 'argc' is not equal to 2 in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:35633,Security,secur,security,35633,: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659; 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567; /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569; /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716; /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161; 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172; 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176; 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176; 5: Loop condition is false. Execution continues on,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:35787,Security,secur,security,35787,src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569; /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716; /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161; 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172; 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176; 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176; 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223; 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373; 7: 'numundefs' is ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:39409,Security,secur,security,39409,32; 30: Loop condition is false. Execution continues on line 737 in /opt/root_src/build/rmkdepend/main.c:732; 31: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:737; 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:737; 33: Assuming 'verbose' is 0 in /opt/root_src/build/rmkdepend/main.c:738; 34: Taking false branch in /opt/root_src/build/rmkdepend/main.c:738; 35: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749; /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]; /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]; /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116; /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]; 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542; 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543; 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605; 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605; 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609; 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609; 7: Calling 'define' in /opt/root_src/build/rmkdepe,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:39755,Security,Access,Access,39755,d to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749; /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]; /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]; /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116; /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]; 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542; 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543; 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605; 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605; 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609; 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609; 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:613; 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406; 9: expanded from macro 'isalnum' in /usr/include/ctype.h:189; 10: expanded from macro '__isctype' in /usr/include/ctype.h:89; 11: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:406; 12: expanded from macro 'isalnum' in /usr/include/ctype.h:189; 13: expanded from macro '__isctype' in /u,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:42697,Security,Access,Access,42697, in /opt/root_src/build/rmkdepend/parse.c:335; 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340; 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340; 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345; 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345; 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376; 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376; 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384; 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384; 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388; 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389; 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389; 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392; /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108; /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:43116,Security,secur,security,43116,pt/root_src/build/rmkdepend/parse.c:345; 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376; 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376; 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384; 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384; 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388; 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389; 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389; 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392; /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108; /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119; /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:43674,Security,secur,security,43674,ild/rmkdepend/parse.c:389; 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392; /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108; /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119; /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121; /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or secu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:44232,Security,secur,security,44232,e memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108; /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119; /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121; /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132; /,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:44662,Security,secur,security,44662,ts such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119; /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121; /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132; /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to fu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:44852,Security,secur,security,44852,emory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119; /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121; /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132; /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:45006,Security,secur,security,45006,oot_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121; /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132; /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135; /opt/root_src/build/rmkdepend/pr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:45370,Security,secur,security,45370,f the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121; /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132; /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135; /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:45560,Security,secur,security,45560,d/rmkdepend/pr.c:121; /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132; /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135; /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141; /opt/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:45714,Security,secur,security,45714,checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132; /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135; /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141; /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]; 1: Assuming the condition is false in /opt/root_src/b,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:46205,Security,secur,security,46205,build/rmkdepend/pr.c:132; /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135; /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141; /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]; 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173; 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173; 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176; 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176; 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177; 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104; 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104; 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104; 9,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7411:80369,Modifiability,portab,portability,80369,s.c:296; 54: Assuming the condition is false in /opt/root_src/builtins/zstd/compress/fse_compress.c:298; 55: Taking false branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:298; 56: Calling 'FSE_writeNCount_generic' in /opt/root_src/builtins/zstd/compress/fse_compress.c:301; 57: Assuming 'symbol' is < 'alphabetSize' in /opt/root_src/builtins/zstd/compress/fse_compress.c:223; 58: Left side of '&&' is true in /opt/root_src/builtins/zstd/compress/fse_compress.c:223; 59: Loop condition is true. Entering loop body in /opt/root_src/builtins/zstd/compress/fse_compress.c:223; 60: 'previousIs0' is 0 in /opt/root_src/builtins/zstd/compress/fse_compress.c:224; 61: Taking false branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:224; 62: Assigned value is garbage or undefined in /opt/root_src/builtins/zstd/compress/fse_compress.c:254; /opt/root_src/builtins/zstd/dictBuilder/cover.c:921:22: warning: Call to 'malloc' has an allocation size of 0 bytes [clang-analyzer-optin.portability.UnixAPI]; 1: Assuming the condition is true in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1118; 2: '?' condition is true in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1118; 3: Assuming field 'd' is not equal to 0 in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1119; 4: '?' condition is false in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1119; 5: Field 'd' is not equal to 0 in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1120; 6: '?' condition is false in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1120; 7: Assuming field 'k' is not equal to 0 in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1121; 8: '?' condition is false in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1121; 9: Field 'k' is not equal to 0 in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1122; 10: '?' condition is false in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1122; 11: Assuming field 'steps' is not equal to 0 in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1123; 12: '?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:15352,Safety,safe,safeBuffer,15352,ty checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1678; /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4.c:1673; 2: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1673; 3: Assuming 'dictSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4.c:1674; 4: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1674; 5: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4.c:1676; 6: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1676; 7: Assuming 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4.c:1677; 8: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1677; 9: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4.c:1678; /opt/root_src/builtins/lz4/lz4.c:1833:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'me,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:65501,Safety,safe,safeBuffer,65501,' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1169; /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4hc.c:1164; 2: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1164; 3: Assuming 'dictSize' is >= 4 in /opt/root_src/builtins/lz4/lz4hc.c:1165; 4: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1165; 5: Assuming 'dictSize' is <= 'prefixSize' in /opt/root_src/builtins/lz4/lz4hc.c:1166; 6: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1166; 7: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4hc.c:1167; 8: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1167; 9: 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4hc.c:1168; 10: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1168; 11: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4hc.c:1169; /opt/root_src/builtins/lz4/lz4hc.c:1578:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1578; /opt/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:203,Security,secur,security,203,"malloc, garbage value and boundary warnings:; (ROOT master of today, with xrootd off); ```; /opt/root_src/builtins/lz4/lz4.c:414:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:414; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:447:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUn",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:392,Security,secur,security,392,"malloc, garbage value and boundary warnings:; (ROOT master of today, with xrootd off); ```; /opt/root_src/builtins/lz4/lz4.c:414:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:414; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:447:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUn",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:589,Security,secur,security,589,"malloc, garbage value and boundary warnings:; (ROOT master of today, with xrootd off); ```; /opt/root_src/builtins/lz4/lz4.c:414:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:414; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:447:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUn",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:990,Security,secur,security,990,"malloc, garbage value and boundary warnings:; (ROOT master of today, with xrootd off); ```; /opt/root_src/builtins/lz4/lz4.c:414:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:414; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:447:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUn",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:1179,Security,secur,security,1179,ns/lz4/lz4.c:414:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:414; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:447:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to fun,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:1376,Security,secur,security,1376,case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:414; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:447:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:1777,Security,secur,security,1777, in /opt/root_src/builtins/lz4/lz4.c:414; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:447:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:451; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:469:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-securit,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:1966,Security,secur,security,1966,ins/lz4/lz4.c:447:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:451; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:469:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to fu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:2163,Security,secur,security,2163,case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:451; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:469:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/l,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:2565,Security,secur,security,2565, in /opt/root_src/builtins/lz4/lz4.c:447; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:451; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:469:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:469:30: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-securit,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:2754,Security,secur,security,2754,ns/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:451; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:469:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:469:30: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to fu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:2951,Security,secur,security,2951,ase of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:451; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:469:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:469:30: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/l,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:3353,Security,secur,security,3353,in /opt/root_src/builtins/lz4/lz4.c:451; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:469:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:469:30: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:484:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:3542,Security,secur,security,3542,s/lz4/lz4.c:469:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:469:30: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:484:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to funct,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:3739,Security,secur,security,3739,ase of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:469:30: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:484:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:4140,Security,secur,security,4140,in /opt/root_src/builtins/lz4/lz4.c:469; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:469:30: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:484:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:484; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:487:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.ins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:4329,Security,secur,security,4329,ns/lz4/lz4.c:469:30: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:484:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:484; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:487:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to functio,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:4524,Security,secur,security,4524,n case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:484:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:484; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:487:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:4923,Security,secur,security,4923, C11 in /opt/root_src/builtins/lz4/lz4.c:469; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:484:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:484; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:487:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:487; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:488:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:5112,Security,secur,security,5112,uiltins/lz4/lz4.c:484:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:484; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:487:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:487; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:488:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to fun,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:5309,Security,secur,security,5309, in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:484; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:487:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:487; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:488:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:5710,Security,secur,security,5710,11 in /opt/root_src/builtins/lz4/lz4.c:484; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:487:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:487; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:488:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:488; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:489:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:5899,Security,secur,security,5899,ins/lz4/lz4.c:487:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:487; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:488:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:488; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:489:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to fun,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:6096,Security,secur,security,6096,case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:487; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:488:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:488; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:489:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:6497,Security,secur,security,6497, in /opt/root_src/builtins/lz4/lz4.c:487; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:488:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:488; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:489:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:489; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:492:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:6686,Security,secur,security,6686,ins/lz4/lz4.c:488:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:488; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:489:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:489; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:492:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to fun,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:6883,Security,secur,security,6883,case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:488; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:489:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:489; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:492:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:7284,Security,secur,security,7284, in /opt/root_src/builtins/lz4/lz4.c:488; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:489:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:489; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:492:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:492; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:493:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:7473,Security,secur,security,7473,ins/lz4/lz4.c:489:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:489; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:492:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:492; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:493:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to fun,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:7670,Security,secur,security,7670,case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:489; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:492:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:492; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:493:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:8071,Security,secur,security,8071, in /opt/root_src/builtins/lz4/lz4.c:489; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:492:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:492; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:493:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:493; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:500:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:8260,Security,secur,security,8260,ins/lz4/lz4.c:492:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:492; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:493:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:493; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:500:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to fun,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:8457,Security,secur,security,8457,case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:492; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:493:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:493; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:500:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:8858,Security,secur,security,8858, in /opt/root_src/builtins/lz4/lz4.c:492; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:493:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:493; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:500:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:500; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:503:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:9047,Security,secur,security,9047,ins/lz4/lz4.c:493:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:493; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:500:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:500; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:503:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to fun,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:9244,Security,secur,security,9244,case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:493; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:500:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:500; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:503:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:9645,Security,secur,security,9645, in /opt/root_src/builtins/lz4/lz4.c:493; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:500:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:500; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:503:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:503; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:822:13: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-securit,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:9834,Security,secur,security,9834,ins/lz4/lz4.c:500:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:500; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:503:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:503; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:822:13: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to func,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:10031,Security,secur,security,10031,case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:500; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:503:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:503; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:822:13: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:10433,Security,secur,security,10433, in /opt/root_src/builtins/lz4/lz4.c:500; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:503:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:503; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:822:13: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:822; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:1228:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:10622,Security,secur,security,10622,ns/lz4/lz4.c:503:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:503; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:822:13: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:822; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:1228:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to functi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:10817,Security,secur,security,10817, case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:503; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:822:13: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:822; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:1228:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:11217,Security,secur,security,11217,C11 in /opt/root_src/builtins/lz4/lz4.c:503; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:822:13: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:822; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:1228:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1228; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1449:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-securi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:11406,Security,secur,security,11406,ltins/lz4/lz4.c:822:13: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:822; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:1228:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1228; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1449:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to fun,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:11603,Security,secur,security,11603,in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:822; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:1228:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1228; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1449:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:12006,Security,secur,security,12006, in /opt/root_src/builtins/lz4/lz4.c:822; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:1228:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1228; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1449:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1449; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:1458:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:12195,Security,secur,security,12195,/lz4/lz4.c:1228:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1228; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1449:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1449; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:1458:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to functio,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:12390,Security,secur,security,12390,case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1228; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1449:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1449; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:1458:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:12791,Security,secur,security,12791,1 in /opt/root_src/builtins/lz4/lz4.c:1228; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1449:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1449; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:1458:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1458; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:1621:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:12980,Security,secur,security,12980,tins/lz4/lz4.c:1449:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1449; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:1458:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1458; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:1621:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to func,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:13175,Security,secur,security,13175, in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1449; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:1458:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1458; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:1621:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/l,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:13577,Security,secur,security,13577,11 in /opt/root_src/builtins/lz4/lz4.c:1449; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:1458:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1458; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:1621:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1621; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-sec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:13766,Security,secur,security,13766,ins/lz4/lz4.c:1458:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1458; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:1621:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1621; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introd,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:13963,Security,secur,security,13963, case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1458; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:1621:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1621; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1678; /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Null po,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:14367,Security,secur,security,14367, /opt/root_src/builtins/lz4/lz4.c:1458; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:1621:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1621; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1678; /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4.c:1673; 2: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1673; 3: Assuming 'dictSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4.c:1674; 4: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1674; 5: Assuming,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:14557,Security,secur,security,14557,4/lz4.c:1621:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1621; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1678; /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4.c:1673; 2: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1673; 3: Assuming 'dictSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4.c:1674; 4: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1674; 5: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4.c:1676; 6: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1676; 7: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:14678,Security,secur,security,14678,ctions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1621; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1678; /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4.c:1673; 2: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1673; 3: Assuming 'dictSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4.c:1674; 4: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1674; 5: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4.c:1676; 6: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1676; 7: Assuming 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4.c:1677; 8: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1677; 9: Null pointer passed to 1st,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:15837,Security,secur,security,15837,h as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1678; /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4.c:1673; 2: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1673; 3: Assuming 'dictSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4.c:1674; 4: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1674; 5: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4.c:1676; 6: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1676; 7: Assuming 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4.c:1677; 8: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1677; 9: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4.c:1678; /opt/root_src/builtins/lz4/lz4.c:1833:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1833; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1837:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-secu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:16026,Security,secur,security,16026,ssed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4.c:1673; 2: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1673; 3: Assuming 'dictSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4.c:1674; 4: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1674; 5: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4.c:1676; 6: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1676; 7: Assuming 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4.c:1677; 8: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1677; 9: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4.c:1678; /opt/root_src/builtins/lz4/lz4.c:1833:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1833; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1837:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:16223,Security,secur,security,16223, <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4.c:1674; 4: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1674; 5: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4.c:1676; 6: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1676; 7: Assuming 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4.c:1677; 8: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1677; 9: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4.c:1678; /opt/root_src/builtins/lz4/lz4.c:1833:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1833; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1837:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:16627,Security,secur,security,16627,/lz4.c:1677; 9: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4.c:1678; /opt/root_src/builtins/lz4/lz4.c:1833:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1833; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1837:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1837; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1838:39: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-secu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:16816,Security,secur,security,16816,z4/lz4.c:1833:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1833; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1837:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1837; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1838:39: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:17013,Security,secur,security,17013,e of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1833; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1837:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1837; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1838:39: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:17417,Security,secur,security,17417,opt/root_src/builtins/lz4/lz4.c:1833; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1837:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1837; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1838:39: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1838; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1874:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-secu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:17606,Security,secur,security,17606,z4/lz4.c:1837:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1837; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1838:39: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1838; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1874:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:17803,Security,secur,security,17803,e of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1837; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1838:39: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1838; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1874:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:18207,Security,secur,security,18207,opt/root_src/builtins/lz4/lz4.c:1837; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1838:39: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1838; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1874:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1874; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1875:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-secu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:18396,Security,secur,security,18396,z4/lz4.c:1838:39: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1838; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1874:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1874; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1875:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:18593,Security,secur,security,18593,e of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1838; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1874:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1874; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1875:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:18997,Security,secur,security,18997,opt/root_src/builtins/lz4/lz4.c:1838; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1874:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1874; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1875:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1875; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1876:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-secu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:19186,Security,secur,security,19186,z4/lz4.c:1874:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1874; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1875:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1875; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1876:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:19383,Security,secur,security,19383,e of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1874; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1875:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1875; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1876:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:19787,Security,secur,security,19787,opt/root_src/builtins/lz4/lz4.c:1874; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1875:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1875; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1876:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1876; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1894:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-se,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:19976,Security,secur,security,19976,z4/lz4.c:1875:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1875; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1876:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1876; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1894:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks intro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:20173,Security,secur,security,20173,e of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1875; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1876:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1876; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1894:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1894; /opt/root_src/builtins/lz4/lz4.c:1900:21: warning: Call ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:20578,Security,secur,security,20578,opt/root_src/builtins/lz4/lz4.c:1875; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1876:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1876; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1894:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1894; /opt/root_src/builtins/lz4/lz4.c:1900:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'm,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:20768,Security,secur,security,20768,/lz4.c:1876:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1876; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1894:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1894; /opt/root_src/builtins/lz4/lz4.c:1900:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support leng,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:20889,Security,secur,security,20889,tions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1876; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1894:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1894; /opt/root_src/builtins/lz4/lz4.c:1900:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1900; 3: expanded from macro 'LZ4_memcpy' in /opt/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:21217,Security,secur,security,21217,in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1876; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1894:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1894; /opt/root_src/builtins/lz4/lz4.c:1900:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1900; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1907:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-secu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:21406,Security,secur,security,21406,of C11 in /opt/root_src/builtins/lz4/lz4.c:1876; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1894:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1894; /opt/root_src/builtins/lz4/lz4.c:1900:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1900; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1907:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:21603,Security,secur,security,21603,ks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1894; /opt/root_src/builtins/lz4/lz4.c:1900:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1900; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1907:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:22007,Security,secur,security,22007,arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1894; /opt/root_src/builtins/lz4/lz4.c:1900:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1900; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1907:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1907; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1948:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-secu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:22196,Security,secur,security,22196,z4/lz4.c:1900:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1900; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1907:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1907; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1948:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:22393,Security,secur,security,22393,e of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1900; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1907:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1907; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1948:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:22797,Security,secur,security,22797,opt/root_src/builtins/lz4/lz4.c:1900; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1907:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1907; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1948:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1948; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1963:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-secu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:22986,Security,secur,security,22986,z4/lz4.c:1907:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1907; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1948:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1948; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1963:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:23183,Security,secur,security,23183,e of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1907; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1948:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1948; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1963:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:23587,Security,secur,security,23587,opt/root_src/builtins/lz4/lz4.c:1907; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1948:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1948; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1963:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1963; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1964:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-secu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:23776,Security,secur,security,23776,z4/lz4.c:1948:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1948; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1963:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1963; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1964:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:23973,Security,secur,security,23973,e of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1948; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1963:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1963; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1964:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:24377,Security,secur,security,24377,opt/root_src/builtins/lz4/lz4.c:1948; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1963:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1963; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1964:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1964; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1965:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-secu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:24566,Security,secur,security,24566,z4/lz4.c:1963:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1963; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1964:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1964; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1965:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:24763,Security,secur,security,24763,e of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1963; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1964:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1964; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1965:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:25167,Security,secur,security,25167,opt/root_src/builtins/lz4/lz4.c:1963; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1964:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1964; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1965:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1965; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2038:17: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-se,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:25356,Security,secur,security,25356,z4/lz4.c:1964:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1964; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1965:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1965; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2038:17: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks intro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:25553,Security,secur,security,25553,e of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1964; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1965:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1965; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2038:17: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038; /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:25958,Security,secur,security,25958,opt/root_src/builtins/lz4/lz4.c:1964; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1965:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1965; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2038:17: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038; /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in th,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:26148,Security,secur,security,26148,/lz4.c:1965:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1965; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2038:17: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038; /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:26269,Security,secur,security,26269,tions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1965; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2038:17: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038; /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083; /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide securi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:26598,Security,secur,security,26598,in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1965; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2038:17: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038; /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083; /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'm,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:26788,Security,secur,security,26788, C11 in /opt/root_src/builtins/lz4/lz4.c:1965; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2038:17: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038; /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083; /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support leng,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:26909,Security,secur,security,26909,:17: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038; /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083; /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2089; 3: expanded from macro 'LZ4_memcpy' in /opt/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:27237,Security,secur,security,27237,ion 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038; /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083; /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2089; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2096:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-secu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:27426,Security,secur,security,27426,ort length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038; /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083; /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2089; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2096:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:27623,Security,secur,security,27623,ks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083; /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2089; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2096:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:28027,Security,secur,security,28027,arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083; /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2089; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2096:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2096; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2115:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-secu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:28216,Security,secur,security,28216,z4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2089; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2096:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2096; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2115:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:28413,Security,secur,security,28413,e of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2089; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2096:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2096; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2115:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:28817,Security,secur,security,28817,opt/root_src/builtins/lz4/lz4.c:2089; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2096:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2096; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2115:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2115; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2129:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-secu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:29006,Security,secur,security,29006,z4/lz4.c:2096:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2096; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2115:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2115; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2129:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:29203,Security,secur,security,29203,e of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2096; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2115:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2115; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2129:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:29607,Security,secur,security,29607,opt/root_src/builtins/lz4/lz4.c:2096; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2115:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2115; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2129:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2129; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2132:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-secu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:29796,Security,secur,security,29796,z4/lz4.c:2115:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2115; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2129:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2129; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2132:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:29993,Security,secur,security,29993,e of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2115; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2129:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2129; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2132:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:30397,Security,secur,security,30397,opt/root_src/builtins/lz4/lz4.c:2115; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2129:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2129; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2132:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2132; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2147:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-secu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:30586,Security,secur,security,30586,z4/lz4.c:2129:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2129; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2132:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2132; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2147:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:30783,Security,secur,security,30783,e of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2129; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2132:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2132; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2147:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:31187,Security,secur,security,31187,opt/root_src/builtins/lz4/lz4.c:2129; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2132:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2132; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2147:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2147; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4frame.c:357:10: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:31376,Security,secur,security,31376,z4/lz4.c:2132:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2132; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2147:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2147; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4frame.c:357:10: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Ca,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:31573,Security,secur,security,31573,e of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2132; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2147:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2147; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4frame.c:357:10: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/bu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:31981,Security,secur,security,31981,root_src/builtins/lz4/lz4.c:2132; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2147:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2147; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4frame.c:357:10: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:357; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:388:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-ana,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:32170,Security,secur,security,32170,z4.c:2147:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2147; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4frame.c:357:10: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:357; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:388:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:32369,Security,secur,security,32369,11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2147; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4frame.c:357:10: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:357; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:388:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:32782,Security,secur,security,32782,ltins/lz4/lz4.c:2147; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4frame.c:357:10: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:357; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:388:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:388; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:397:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-ana,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:32971,Security,secur,security,32971,57:10: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:357; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:388:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:388; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:397:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:33170,Security,secur,security,33170,ng-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:357; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:388:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:388; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:397:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:33583,Security,secur,security,33583,/lz4/lz4frame.c:357; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:388:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:388; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:397:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:397; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:444:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-ana,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:33772,Security,secur,security,33772,388:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:388; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:397:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:397; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:444:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:33971,Security,secur,security,33971,ng-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:388; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:397:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:397; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:444:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:34384,Security,secur,security,34384,/lz4/lz4frame.c:388; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:397:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:397; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:444:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:444; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:507:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-ana,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:34573,Security,secur,security,34573,397:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:397; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:444:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:444; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:507:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security chec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:34772,Security,secur,security,34772,ng-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:397; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:444:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:444; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:507:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:507; /opt/root_src/builtins/lz4/lz4frame.c:609:5: war,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:35185,Security,secur,security,35185,/lz4/lz4frame.c:397; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:444:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:444; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:507:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:507; /opt/root_src/builtins/lz4/lz4frame.c:609:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to functi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:35374,Security,secur,security,35374,444:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:444; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:507:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:507; /opt/root_src/builtins/lz4/lz4frame.c:609:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that suppor,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:35494,Security,secur,security,35494,t support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:444; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:507:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:507; /opt/root_src/builtins/lz4/lz4frame.c:609:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609; 3: expanded from macro 'MEM_INIT',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:35828,Security,secur,security,35828,andard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:444; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:507:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:507; /opt/root_src/builtins/lz4/lz4frame.c:609:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-ana,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:36017,Security,secur,security,36017,pt/root_src/builtins/lz4/lz4frame.c:444; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:507:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:507; /opt/root_src/builtins/lz4/lz4frame.c:609:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security chec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:36216,Security,secur,security,36216,roduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:507; /opt/root_src/builtins/lz4/lz4frame.c:609:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:754; /opt/root_src/builtins/lz4/lz4frame.c:844:5: war,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:36629,Security,secur,security,36629,des boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:507; /opt/root_src/builtins/lz4/lz4frame.c:609:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:754; /opt/root_src/builtins/lz4/lz4frame.c:844:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to functi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:36818,Security,secur,security,36818,609:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:754; /opt/root_src/builtins/lz4/lz4frame.c:844:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that suppor,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:36938,Security,secur,security,36938,t support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:754; /opt/root_src/builtins/lz4/lz4frame.c:844:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844; 3: expanded from macro 'MEM_INIT',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:37272,Security,secur,security,37272,andard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:754; /opt/root_src/builtins/lz4/lz4frame.c:844:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:852:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-an,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:37461,Security,secur,security,37461,pt/root_src/builtins/lz4/lz4frame.c:609; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:754; /opt/root_src/builtins/lz4/lz4frame.c:844:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:852:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security che,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:37660,Security,secur,security,37660,roduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:754; /opt/root_src/builtins/lz4/lz4frame.c:844:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:852:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852; /opt/root_src/builtins/lz4/lz4frame.c:859:13: w,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:38074,Security,secur,security,38074,des boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:754; /opt/root_src/builtins/lz4/lz4frame.c:844:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:852:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852; /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in t,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:38263,Security,secur,security,38263,44:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:852:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852; /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:38383,Security,secur,security,38383, support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:852:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852; /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859; /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not prov,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:38718,Security,secur,security,38718,ndard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:852:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852; /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859; /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in th,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:38907,Security,secur,security,38907,/root_src/builtins/lz4/lz4frame.c:844; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:852:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852; /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859; /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:39027,Security,secur,security,39027,3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852; /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859; /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918; /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not prov,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:39361,Security,secur,security,39361,y' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852; /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859; /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918; /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to funct,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:39550,Security,secur,security,39550, arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852; /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859; /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918; /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that suppo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:39670,Security,secur,security,39670,13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859; /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918; /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122; 3: expanded from macro 'MEM_INI,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:40005,Security,secur,security,40005,py' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859; /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918; /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:1166:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:40194,Security,secur,security,40194, arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859; /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918; /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:1166:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:40393,Security,secur,security,40393,oduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918; /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:1166:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166; /opt/root_src/builtins/lz4/lz4frame.c:1336:9,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:40809,Security,secur,security,40809, boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918; /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:1166:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166; /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:40998,Security,secur,security,40998,:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:1166:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166; /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:41118,Security,secur,security,41118,upport length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:1166:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166; /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336; /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:41454,Security,secur,security,41454,rd. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:1166:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166; /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336; /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:41643,Security,secur,security,41643,ot_src/builtins/lz4/lz4frame.c:1122; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:1166:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166; /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336; /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:41763,Security,secur,security,41763,: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166; /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336; /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1346; /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Call to function 'memcpy' is insecure as it does not ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:42100,Security,secur,security,42100,is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166; /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336; /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1346; /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:42289,Security,secur,security,42289,uments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166; /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336; /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1346; /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:42409,Security,secur,security,42409, warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336; /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1346; /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1349; /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Null pointer passed to 2nd parameter expecting 'nonnul,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:42745,Security,secur,security,42745,is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336; /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1346; /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1349; /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393; 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394; 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394; 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builti,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:42934,Security,secur,security,42934,uments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336; /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1346; /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1349; /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393; 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394; 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394; 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:1395; 5: 'dstBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1403; 6: Taking true branch in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:43054,Security,secur,security,43054,: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1346; /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1349; /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393; 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394; 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394; 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:1395; 5: 'dstBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1403; 6: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1403; 7: Assuming 'decompressOptionsPtr' is not equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1405; 8: Taking false branch i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:47453,Security,secur,security,47453,ns/lz4/lz4frame.c:1305; 38: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1311; 39: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1311; 40: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1322; 41: Left side of '&&' is false in /opt/root_src/builtins/lz4/lz4frame.c:1322; 42: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1329; 43: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1329; 44: Assuming field 'dict' is equal to field 'tmpOutBuffer' in /opt/root_src/builtins/lz4/lz4frame.c:1343; 45: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1343; 46: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1344; 47: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1344; 48: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1349; /opt/root_src/builtins/lz4/lz4frame.c:1357:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1357; /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:47642,Security,secur,security,47642,root_src/builtins/lz4/lz4frame.c:1311; 40: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1322; 41: Left side of '&&' is false in /opt/root_src/builtins/lz4/lz4frame.c:1322; 42: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1329; 43: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1329; 44: Assuming field 'dict' is equal to field 'tmpOutBuffer' in /opt/root_src/builtins/lz4/lz4frame.c:1343; 45: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1343; 46: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1344; 47: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1344; 48: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1349; /opt/root_src/builtins/lz4/lz4frame.c:1357:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1357; /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:47762,Security,secur,security,47762,ns/lz4/lz4frame.c:1322; 42: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1329; 43: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1329; 44: Assuming field 'dict' is equal to field 'tmpOutBuffer' in /opt/root_src/builtins/lz4/lz4frame.c:1343; 45: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1343; 46: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1344; 47: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1344; 48: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1349; /opt/root_src/builtins/lz4/lz4frame.c:1357:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1357; /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1358; /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Null pointer passed to 2nd parameter expecting 'nonnul,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:48098,Security,secur,security,48098,suming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1344; 47: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1344; 48: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1349; /opt/root_src/builtins/lz4/lz4frame.c:1357:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1357; /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1358; /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393; 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394; 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394; 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builti,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:48287,Security,secur,security,48287,.c:1344; 48: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1349; /opt/root_src/builtins/lz4/lz4frame.c:1357:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1357; /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1358; /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393; 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394; 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394; 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:1395; 5: 'dstBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1403; 6: Taking true branch in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:48407,Security,secur,security,48407,: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1357; /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1358; /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393; 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394; 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394; 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:1395; 5: 'dstBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1403; 6: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1403; 7: Assuming 'decompressOptionsPtr' is not equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1405; 8: Taking false branch i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:52826,Security,secur,security,52826,05; 38: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1311; 39: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1311; 40: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1322; 41: Left side of '&&' is false in /opt/root_src/builtins/lz4/lz4frame.c:1322; 42: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1329; 43: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1329; 44: Assuming field 'dict' is not equal to field 'tmpOutBuffer' in /opt/root_src/builtins/lz4/lz4frame.c:1343; 45: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1343; 46: Assuming 'preserveSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4frame.c:1356; 47: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1356; 48: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1358; /opt/root_src/builtins/lz4/lz4frame.c:1404:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1404; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:1434:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:53015,Security,secur,security,53015,4/lz4frame.c:1311; 40: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1322; 41: Left side of '&&' is false in /opt/root_src/builtins/lz4/lz4frame.c:1322; 42: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1329; 43: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1329; 44: Assuming field 'dict' is not equal to field 'tmpOutBuffer' in /opt/root_src/builtins/lz4/lz4frame.c:1343; 45: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1343; 46: Assuming 'preserveSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4frame.c:1356; 47: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1356; 48: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1358; /opt/root_src/builtins/lz4/lz4frame.c:1404:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1404; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:1434:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:53214,Security,secur,security,53214,ch in /opt/root_src/builtins/lz4/lz4frame.c:1329; 44: Assuming field 'dict' is not equal to field 'tmpOutBuffer' in /opt/root_src/builtins/lz4/lz4frame.c:1343; 45: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1343; 46: Assuming 'preserveSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4frame.c:1356; 47: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1356; 48: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1358; /opt/root_src/builtins/lz4/lz4frame.c:1404:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1404; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:1434:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434; /opt/root_src/builtins/lz4/lz4frame.c:1490:1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:53630,Security,secur,security,53630,inter passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1358; /opt/root_src/builtins/lz4/lz4frame.c:1404:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1404; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:1434:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434; /opt/root_src/builtins/lz4/lz4frame.c:1490:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:53819,Security,secur,security,53819,:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1404; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:1434:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434; /opt/root_src/builtins/lz4/lz4frame.c:1490:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:53939,Security,secur,security,53939,upport length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1404; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:1434:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434; /opt/root_src/builtins/lz4/lz4frame.c:1490:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490; /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:54276,Security,secur,security,54276,d. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1404; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:1434:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434; /opt/root_src/builtins/lz4/lz4frame.c:1490:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490; /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:54465,Security,secur,security,54465,t_src/builtins/lz4/lz4frame.c:1404; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:1434:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434; /opt/root_src/builtins/lz4/lz4frame.c:1490:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490; /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:54585,Security,secur,security,54585, warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434; /opt/root_src/builtins/lz4/lz4frame.c:1490:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490; /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542; /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:54922,Security,secur,security,54922,s insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434; /opt/root_src/builtins/lz4/lz4frame.c:1490:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490; /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542; /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:55111,Security,secur,security,55111,ments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434; /opt/root_src/builtins/lz4/lz4frame.c:1490:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490; /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542; /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:55231,Security,secur,security,55231, warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490; /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542; /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584; /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:55568,Security,secur,security,55568,s insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490; /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542; /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584; /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:55757,Security,secur,security,55757,ments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490; /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542; /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584; /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:55877,Security,secur,security,55877, warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542; /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584; /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626; /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:56214,Security,secur,security,56214,s insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542; /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584; /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626; /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:56403,Security,secur,security,56403,ments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542; /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584; /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626; /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:56523,Security,secur,security,56523, warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584; /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626; /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690; /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:56860,Security,secur,security,56860,s insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584; /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626; /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690; /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:57049,Security,secur,security,57049,ments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584; /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626; /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690; /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:57169,Security,secur,security,57169, warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626; /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690; /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728; /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:57506,Security,secur,security,57506,s insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626; /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690; /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728; /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:57695,Security,secur,security,57695,ments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626; /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690; /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728; /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:57815,Security,secur,security,57815, warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690; /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728; /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768; /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:58152,Security,secur,security,58152,s insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690; /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728; /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768; /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:58341,Security,secur,security,58341,ments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690; /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728; /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768; /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:58461,Security,secur,security,58461, warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728; /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768; /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810; /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:58798,Security,secur,security,58798,s insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728; /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768; /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810; /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:58987,Security,secur,security,58987,ments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728; /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768; /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810; /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:59107,Security,secur,security,59107, warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768; /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810; /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860; /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:59444,Security,secur,security,59444,s insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768; /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810; /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860; /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:59633,Security,secur,security,59633,ments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768; /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810; /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860; /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:59753,Security,secur,security,59753, warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810; /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860; /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868; /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:60090,Security,secur,security,60090,s insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810; /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860; /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868; /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'me,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:60279,Security,secur,security,60279,ments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810; /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860; /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868; /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support lengt,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:60399,Security,secur,security,60399, warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860; /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868; /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:96; 3: expanded from macro 'MEM_INIT' in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:60730,Security,secur,security,60730,py' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860; /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868; /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:96; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4hc.c:97:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:60919,Security,secur,security,60919,h arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860; /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868; /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:96; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4hc.c:97:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to functio,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:61114,Security,secur,security,61114,cks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868; /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:96; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4hc.c:97:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:61515,Security,secur,security,61515, arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868; /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:96; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4hc.c:97:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4hc.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:61704,Security,secur,security,61704,tins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:96; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4hc.c:97:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4hc.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:61899,Security,secur,security,61899, in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:96; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4hc.c:97:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4hc.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754; /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to fu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:62301,Security,secur,security,62301,1 in /opt/root_src/builtins/lz4/lz4hc.c:96; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4hc.c:97:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4hc.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754; /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:62490,Security,secur,security,62490,ins/lz4/lz4hc.c:97:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4hc.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754; /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:62610,Security,secur,security,62610,s functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4hc.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754; /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893; /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:62938,Security,secur,security,62938,ced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4hc.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754; /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893; /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memse,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:63127,Security,secur,security,63127,case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4hc.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754; /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893; /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:63247,Security,secur,security,63247,.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754; /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893; /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1015; 3: expanded from macro 'MEM_INIT' in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:63576,Security,secur,security,63576,nction 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754; /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893; /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1015; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-secu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:63765,Security,secur,security,63765,pport length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754; /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893; /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1015; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introd,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:63960,Security,secur,security,63960,hecks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893; /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1015; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1169; /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: N,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:64366,Security,secur,security,64366,rguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893; /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1015; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1169; /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4hc.c:1164; 2: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1164; 3: Assuming 'dictSize' is >= 4 in /opt/root_src/builtins/lz4/lz4hc.c:1165; 4: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1165; 5: Assuming 'd,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:64556,Security,secur,security,64556,/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1015; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1169; /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4hc.c:1164; 2: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1164; 3: Assuming 'dictSize' is >= 4 in /opt/root_src/builtins/lz4/lz4hc.c:1165; 4: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1165; 5: Assuming 'dictSize' is <= 'prefixSize' in /opt/root_src/builtins/lz4/lz4hc.c:1166; 6: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1166; 7,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:64677,Security,secur,security,64677,ctions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1015; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1169; /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4hc.c:1164; 2: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1164; 3: Assuming 'dictSize' is >= 4 in /opt/root_src/builtins/lz4/lz4hc.c:1165; 4: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1165; 5: Assuming 'dictSize' is <= 'prefixSize' in /opt/root_src/builtins/lz4/lz4hc.c:1166; 6: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1166; 7: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4hc.c:1167; 8: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1167; 9: 'dictSiz,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:65991,Security,secur,security,65991,parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4hc.c:1164; 2: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1164; 3: Assuming 'dictSize' is >= 4 in /opt/root_src/builtins/lz4/lz4hc.c:1165; 4: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1165; 5: Assuming 'dictSize' is <= 'prefixSize' in /opt/root_src/builtins/lz4/lz4hc.c:1166; 6: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1166; 7: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4hc.c:1167; 8: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1167; 9: 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4hc.c:1168; 10: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1168; 11: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4hc.c:1169; /opt/root_src/builtins/lz4/lz4hc.c:1578:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1578; /opt/root_src/builtins/zstd/compress/fse_compress.c:226:47: warning: Branch condition evaluates to a garbage value [clang-analyzer-core.uninitialized.Branch]; 1: Calling 'FSE_compress2' in /opt/root_src/builtins/zstd/compress/fse_compress.c:701; 2: Taking false branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:695; 3: Calling 'FSE_compress_wksp' in /opt/root_src/builtins/zstd/compress/fse_compress.c:696; 4: 'tableLog' is <= 12 in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:66180,Security,secur,security,66180,z4hc.c:1164; 2: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1164; 3: Assuming 'dictSize' is >= 4 in /opt/root_src/builtins/lz4/lz4hc.c:1165; 4: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1165; 5: Assuming 'dictSize' is <= 'prefixSize' in /opt/root_src/builtins/lz4/lz4hc.c:1166; 6: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1166; 7: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4hc.c:1167; 8: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1167; 9: 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4hc.c:1168; 10: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1168; 11: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4hc.c:1169; /opt/root_src/builtins/lz4/lz4hc.c:1578:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1578; /opt/root_src/builtins/zstd/compress/fse_compress.c:226:47: warning: Branch condition evaluates to a garbage value [clang-analyzer-core.uninitialized.Branch]; 1: Calling 'FSE_compress2' in /opt/root_src/builtins/zstd/compress/fse_compress.c:701; 2: Taking false branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:695; 3: Calling 'FSE_compress_wksp' in /opt/root_src/builtins/zstd/compress/fse_compress.c:696; 4: 'tableLog' is <= 12 in /opt/root_src/builtins/zstd/compress/fse_compress.c:650; 5: expanded from macro 'FSE_COMPRESS_WKSP_SIZE_U32' in /opt/root_src/builtins/zstd/common/fse.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:66300,Security,secur,security,66300,ing false branch in /opt/root_src/builtins/lz4/lz4hc.c:1165; 5: Assuming 'dictSize' is <= 'prefixSize' in /opt/root_src/builtins/lz4/lz4hc.c:1166; 6: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1166; 7: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4hc.c:1167; 8: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1167; 9: 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4hc.c:1168; 10: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1168; 11: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4hc.c:1169; /opt/root_src/builtins/lz4/lz4hc.c:1578:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1578; /opt/root_src/builtins/zstd/compress/fse_compress.c:226:47: warning: Branch condition evaluates to a garbage value [clang-analyzer-core.uninitialized.Branch]; 1: Calling 'FSE_compress2' in /opt/root_src/builtins/zstd/compress/fse_compress.c:701; 2: Taking false branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:695; 3: Calling 'FSE_compress_wksp' in /opt/root_src/builtins/zstd/compress/fse_compress.c:696; 4: 'tableLog' is <= 12 in /opt/root_src/builtins/zstd/compress/fse_compress.c:650; 5: expanded from macro 'FSE_COMPRESS_WKSP_SIZE_U32' in /opt/root_src/builtins/zstd/common/fse.h:327; 6: '?' condition is false in /opt/root_src/builtins/zstd/compress/fse_compress.c:650; 7: expanded from macro 'FSE_COMPRESS_WKSP_SIZE_U32' in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7412:107320,Availability,mask,mask,107320,de bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1246; /opt/root_src/core/base/src/TDirectory.cxx:1260:21: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1180; 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1180; 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1180; 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1180; 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1183; 6: 'cs' is non-null in /opt/root_src/core/base/inc/TString.h:577; 7: '?' condition is true in /opt/root_src/core/base/inc/TString.h:577; 8: Calling 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577; 9: Value assigned to 'mask.fRep..fLong.fData' in /opt/root_src/core/base/inc/TString.h:568; 10: Returning from 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577; 11: Returning from 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1183; 12: Calling 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1184; 13: Calling 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300; 14: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:248; 15: '?' condition is true in /opt/root_src/core/base/inc/TString.h:248; 16: Returning pointer in /opt/root_src/core/base/inc/TString.h:248; 17: Returning from 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300; 18: Returning pointer in /opt/root_src/core/base/inc/TString.h:300; 19: Returning from 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1184; 20: Passing value via 1st parameter 'namecycle' in /opt/root_src/core/base/src/TDirec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:1136,Deployability,Update,UpdateIsOnHeap,1136,rand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming field 'fList' is non-null in /opt/root_src/core/base/src/TFileCollection.cxx:870; 2: Left side of '||' is false in /opt/root_src/core/base/src/TFileCollection.cxx:870; 3: Assuming the condition is false in /opt/root_src/core/base/src/TFileCollection.cxx:870; 4: Taking false branch in /opt/root_src/core/base/src/TFileCollection.cxx:870; 5: Assuming 'exclude' is non-null in /opt/root_src/core/base/src/TFileCollection.cxx:877; 6: Left side of '&&' is true in /opt/root_src/core/base/src/TFileCollection.cxx:877; 7: Assuming the condition is true in /opt/root_src/core/base/src/TFileCollection.cxx:877; 8: Taking true branch in /opt/root_src/core/base/src/TFileCollection.cxx:877; 9: Calling default constructor for 'TUri' in /opt/root_src/core/base/src/TFileCollection.cxx:880; 10: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TUri.h:73; 11: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 12: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 13: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling default constructor for 'TUri' in /opt/root_src/core/base/src/TUri.cxx:1124; 2: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TUri.h:73; 3: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 4: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 5: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming the ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:1734,Deployability,Update,UpdateIsOnHeap,1734,on.cxx:877; 7: Assuming the condition is true in /opt/root_src/core/base/src/TFileCollection.cxx:877; 8: Taking true branch in /opt/root_src/core/base/src/TFileCollection.cxx:877; 9: Calling default constructor for 'TUri' in /opt/root_src/core/base/src/TFileCollection.cxx:880; 10: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TUri.h:73; 11: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 12: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 13: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling default constructor for 'TUri' in /opt/root_src/core/base/src/TUri.cxx:1124; 2: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TUri.h:73; 3: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 4: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 5: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming the condition is false in /opt/root_src/core/meta/src/TSchemaRule.cxx:601; 2: Taking false branch in /opt/root_src/core/meta/src/TSchemaRule.cxx:601; 3: Assuming field 'fIncludeVect' is null in /opt/root_src/core/meta/src/TSchemaRule.cxx:604; 4: Taking true branch in /opt/root_src/core/meta/src/TSchemaRule.cxx:604; 5: Calling 'TSchemaRule::ProcessList' in /opt/root_src/core/meta/src/TSchemaRule.cxx:607; 6: Assuming the condition is false in /opt/root_src/core/meta/src/TSchemaRule.cxx:961; 7: Taking false branch in /opt/root_src/core/meta/src/TSchemaRule.cxx:961; 8: Loop condition is true. Enterin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:3029,Deployability,Update,UpdateIsOnHeap,3029,ft operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming the condition is false in /opt/root_src/core/meta/src/TSchemaRule.cxx:601; 2: Taking false branch in /opt/root_src/core/meta/src/TSchemaRule.cxx:601; 3: Assuming field 'fIncludeVect' is null in /opt/root_src/core/meta/src/TSchemaRule.cxx:604; 4: Taking true branch in /opt/root_src/core/meta/src/TSchemaRule.cxx:604; 5: Calling 'TSchemaRule::ProcessList' in /opt/root_src/core/meta/src/TSchemaRule.cxx:607; 6: Assuming the condition is false in /opt/root_src/core/meta/src/TSchemaRule.cxx:961; 7: Taking false branch in /opt/root_src/core/meta/src/TSchemaRule.cxx:961; 8: Loop condition is true. Entering loop body in /opt/root_src/core/meta/src/TSchemaRule.cxx:964; 9: Calling default constructor for 'TObjString' in /opt/root_src/core/meta/src/TSchemaRule.cxx:966; 10: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TObjString.h:34; 11: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 12: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 13: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling constructor for 'TGeoBatemanSol' in /opt/root_src/geom/geom/src/TGeoElement.cxx:554; 2: Calling default constructor for 'TObject' in /opt/root_src/geom/geom/src/TGeoElement.cxx:1377; 3: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 4: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 5: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:3646,Deployability,Update,UpdateIsOnHeap,3646,anch in /opt/root_src/core/meta/src/TSchemaRule.cxx:961; 8: Loop condition is true. Entering loop body in /opt/root_src/core/meta/src/TSchemaRule.cxx:964; 9: Calling default constructor for 'TObjString' in /opt/root_src/core/meta/src/TSchemaRule.cxx:966; 10: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TObjString.h:34; 11: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 12: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 13: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling constructor for 'TGeoBatemanSol' in /opt/root_src/geom/geom/src/TGeoElement.cxx:554; 2: Calling default constructor for 'TObject' in /opt/root_src/geom/geom/src/TGeoElement.cxx:1377; 3: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 4: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 5: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling default constructor for 'TGeoHMatrix' in /opt/root_src/geom/geom/src/TGeoMatrix.cxx:2459; 2: Calling default constructor for 'TGeoMatrix' in /opt/root_src/geom/geom/src/TGeoMatrix.cxx:2301; 3: Calling default constructor for 'TNamed' in /opt/root_src/geom/geom/src/TGeoMatrix.cxx:231; 4: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TNamed.h:36; 5: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 6: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 7: The left operand of '==' is a garbage value in /opt,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:4452,Deployability,Update,UpdateIsOnHeap,4452,emanSol' in /opt/root_src/geom/geom/src/TGeoElement.cxx:554; 2: Calling default constructor for 'TObject' in /opt/root_src/geom/geom/src/TGeoElement.cxx:1377; 3: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 4: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 5: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling default constructor for 'TGeoHMatrix' in /opt/root_src/geom/geom/src/TGeoMatrix.cxx:2459; 2: Calling default constructor for 'TGeoMatrix' in /opt/root_src/geom/geom/src/TGeoMatrix.cxx:2301; 3: Calling default constructor for 'TNamed' in /opt/root_src/geom/geom/src/TGeoMatrix.cxx:231; 4: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TNamed.h:36; 5: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 6: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 7: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'inspect' is null in /opt/root_src/graf2d/gpad/src/TInspectCanvas.cxx:380; 2: Taking true branch in /opt/root_src/graf2d/gpad/src/TInspectCanvas.cxx:380; 3: Calling 'TInspectCanvas::InspectObject' in /opt/root_src/graf2d/gpad/src/TInspectCanvas.cxx:383; 4: Assuming the condition is false in /opt/root_src/graf2d/gpad/src/TInspectCanvas.cxx:125; 5: Taking false branch in /opt/root_src/graf2d/gpad/src/TInspectCanvas.cxx:125; 6: Assuming the condition is false in /opt/root_src/graf2d/gpad/src/TInspectCanvas.cxx:127; 7: Taking false branch in /opt/root_src/graf2d/gpad/src/TInspectCanvas.cxx:127; 8: As,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:7475,Deployability,Update,UpdateIsOnHeap,7475,as.cxx:159; 20: Calling default constructor for 'TText' in /opt/root_src/graf2d/gpad/src/TInspectCanvas.cxx:162; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling 'TClass::HasConsistentHashMember' in /opt/root_src/core/meta/src/TClass.cxx:7309; 2: Assuming the condition is true in /opt/root_src/core/meta/inc/TClass.h:500; 3: Taking true branch in /opt/root_src/core/meta/inc/TClass.h:500; 4: Calling 'TClass::SetRuntimeProperties' in /opt/root_src/core/meta/inc/TClass.h:501; 5: Calling 'TCheckHashRecursiveRemoveConsistency::Check' in /opt/root_src/core/meta/src/TClass.cxx:6148; 6: Calling default constructor for 'TCheckHashRecursiveRemoveConsistency' in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:241; 7: Calling default constructor for 'TObject' in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:52; 8: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 9: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 10: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling copy constructor for 'REveTrans' in /opt/root_src/graf3d/eve7/src/REveTrans.cxx:334; 2: Calling default constructor for 'TObject' in /opt/root_src/graf3d/eve7/src/REveTrans.cxx:87; 3: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 4: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 5: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:8089,Deployability,Update,UpdateIsOnHeap,8089,hRecursiveRemoveConsistency::Check' in /opt/root_src/core/meta/src/TClass.cxx:6148; 6: Calling default constructor for 'TCheckHashRecursiveRemoveConsistency' in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:241; 7: Calling default constructor for 'TObject' in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:52; 8: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 9: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 10: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling copy constructor for 'REveTrans' in /opt/root_src/graf3d/eve7/src/REveTrans.cxx:334; 2: Calling default constructor for 'TObject' in /opt/root_src/graf3d/eve7/src/REveTrans.cxx:87; 3: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 4: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 5: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling 'TPostScript::Text' in /opt/root_src/graf2d/postscript/src/TPostScript.cxx:2993; 2: Assuming the condition is false in /opt/root_src/graf2d/postscript/src/TPostScript.cxx:2660; 3: Taking false branch in /opt/root_src/graf2d/postscript/src/TPostScript.cxx:2660; 4: Assuming 'wh' is >= 'hh' in /opt/root_src/graf2d/postscript/src/TPostScript.cxx:2669; 5: Taking false branch in /opt/root_src/graf2d/postscript/src/TPostScript.cxx:2669; 6: Assuming 'fontsize' is > 0 in /opt/root_src/graf2d/postscript/src/TPostScript.cxx:2679; 7: Taking false branch in /opt/root_src/graf2d/postscript/src/TPostScript.cxx:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:10981,Deployability,Update,UpdateIsOnHeap,10981,lv' is not equal to 3 in /opt/root_src/graf2d/postscript/src/TPostScript.cxx:2695; 19: Taking false branch in /opt/root_src/graf2d/postscript/src/TPostScript.cxx:2695; 20: 'txalv' is not equal to 2 in /opt/root_src/graf2d/postscript/src/TPostScript.cxx:2698; 21: Taking false branch in /opt/root_src/graf2d/postscript/src/TPostScript.cxx:2698; 22: Calling default constructor for 'TText' in /opt/root_src/graf2d/postscript/src/TPostScript.cxx:2711; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'view' is non-null in /opt/root_src/graf3d/g3d/src/TMarker3DBox.cxx:304; 2: Taking false branch in /opt/root_src/graf3d/g3d/src/TMarker3DBox.cxx:304; 3: Calling default constructor for 'TMarker3DBox' in /opt/root_src/graf3d/g3d/src/TMarker3DBox.cxx:319; 4: Calling default constructor for 'TObject' in /opt/root_src/graf3d/g3d/src/TMarker3DBox.cxx:48; 5: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 6: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 7: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling 'TPDF::Text' in /opt/root_src/graf2d/postscript/src/TPDF.cxx:2371; 2: Assuming field 'fTextSize' is > 0 in /opt/root_src/graf2d/postscript/src/TPDF.cxx:2169; 3: Taking false branch in /opt/root_src/graf2d/postscript/src/TPDF.cxx:2169; 4: Assuming 'font' is <= 'kNumberOfFonts' in /opt/root_src/graf2d/postscript/src/TPDF.cxx:2178; 5: Left side of '||' is false in /opt/root_src/graf2d/postscript/src/TPDF.cxx:2178; 6: Assuming 'font' is >= 1 in /opt/root_src/graf2d/postscript/src/TPDF.cxx:2178; 7: Taking false branch in /opt/root_src/graf2d/postscript/src/TPDF.cxx:2178; 8: Assuming 'wh' is >= 'hh' in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:15068,Deployability,Update,UpdateIsOnHeap,15068,DManager.cxx:858; 6: Left side of '||' is false in /opt/root_src/gui/gui/src/TGDNDManager.cxx:858; 7: Assuming 'count' is not equal to 0 in /opt/root_src/gui/gui/src/TGDNDManager.cxx:858; 8: Left side of '||' is false in /opt/root_src/gui/gui/src/TGDNDManager.cxx:858; 9: Assuming 'data' is non-null in /opt/root_src/gui/gui/src/TGDNDManager.cxx:858; 10: Taking false branch in /opt/root_src/gui/gui/src/TGDNDManager.cxx:858; 11: Assuming 'kNone' is equal to field 'fSource' in /opt/root_src/gui/gui/src/TGDNDManager.cxx:864; 12: Taking false branch in /opt/root_src/gui/gui/src/TGDNDManager.cxx:864; 13: Assuming field 'fLocalTarget' is non-null in /opt/root_src/gui/gui/src/TGDNDManager.cxx:868; 14: Taking true branch in /opt/root_src/gui/gui/src/TGDNDManager.cxx:868; 15: Calling default constructor for 'TDNDData' in /opt/root_src/gui/gui/src/TGDNDManager.cxx:869; 16: Calling default constructor for 'TObject' in /opt/root_src/gui/gui/inc/TGDNDManager.h:71; 17: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 18: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 19: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling 'TGClient::HandleInput' in /opt/root_src/gui/gui/src/TGClient.cxx:116; 2: Calling 'TGClient::ProcessOneEvent' in /opt/root_src/gui/gui/src/TGClient.cxx:702; 3: Assuming field 'fRoot' is non-null in /opt/root_src/gui/gui/src/TGClient.cxx:651; 4: Taking false branch in /opt/root_src/gui/gui/src/TGClient.cxx:651; 5: Assuming the condition is true in /opt/root_src/gui/gui/src/TGClient.cxx:652; 6: expanded from macro 'gVirtualX' in /opt/root_src/core/base/inc/TVirtualX.h:338; 7: Taking true branch in /opt/root_src/gui/gui/src/TGClient.cxx:652; 8: Assuming 'kNone' is not equal to field 'fWaitForWindo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:16663,Deployability,Update,UpdateIsOnHeap,16663,n /opt/root_src/gui/gui/src/TGClient.cxx:651; 4: Taking false branch in /opt/root_src/gui/gui/src/TGClient.cxx:651; 5: Assuming the condition is true in /opt/root_src/gui/gui/src/TGClient.cxx:652; 6: expanded from macro 'gVirtualX' in /opt/root_src/core/base/inc/TVirtualX.h:338; 7: Taking true branch in /opt/root_src/gui/gui/src/TGClient.cxx:652; 8: Assuming 'kNone' is not equal to field 'fWaitForWindow' in /opt/root_src/gui/gui/src/TGClient.cxx:654; 9: Taking false branch in /opt/root_src/gui/gui/src/TGClient.cxx:654; 10: Calling 'TGClient::HandleMaskEvent' in /opt/root_src/gui/gui/src/TGClient.cxx:660; 11: Calling 'TGClient::GetWindowById' in /opt/root_src/gui/gui/src/TGClient.cxx:861; 12: Calling constructor for 'TGWindow' in /opt/root_src/gui/gui/src/TGClient.cxx:597; 13: Calling default constructor for 'TGObject' in /opt/root_src/gui/gui/inc/TGWindow.h:42; 14: Calling default constructor for 'TObject' in /opt/root_src/gui/gui/inc/TGObject.h:44; 15: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 16: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 17: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling constructor for 'TGRegion' in /opt/root_src/gui/gui/src/TGImageMap.cxx:211; 2: Calling default constructor for 'TObject' in /opt/root_src/gui/gui/src/TGImageMap.cxx:87; 3: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 4: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 5: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:17266,Deployability,Update,UpdateIsOnHeap,17266,.cxx:660; 11: Calling 'TGClient::GetWindowById' in /opt/root_src/gui/gui/src/TGClient.cxx:861; 12: Calling constructor for 'TGWindow' in /opt/root_src/gui/gui/src/TGClient.cxx:597; 13: Calling default constructor for 'TGObject' in /opt/root_src/gui/gui/inc/TGWindow.h:42; 14: Calling default constructor for 'TObject' in /opt/root_src/gui/gui/inc/TGObject.h:44; 15: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 16: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 17: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling constructor for 'TGRegion' in /opt/root_src/gui/gui/src/TGImageMap.cxx:211; 2: Calling default constructor for 'TObject' in /opt/root_src/gui/gui/src/TGImageMap.cxx:87; 3: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 4: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 5: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'ndim' is not equal to 1 in /opt/root_src/hist/hist/src/TF1Helper.cxx:49; 2: Assuming 'npar' is not equal to 0 in /opt/root_src/hist/hist/src/TF1Helper.cxx:51; 3: Taking false branch in /opt/root_src/hist/hist/src/TF1Helper.cxx:51; 4: Assuming 'params' is null in /opt/root_src/hist/hist/src/TF1Helper.cxx:57; 5: Taking false branch in /opt/root_src/hist/hist/src/TF1Helper.cxx:57; 6: Assuming the condition is false in /opt/root_src/hist/hist/src/TF1Helper.cxx:66; 7: Taking false branch in /opt/root_src/hist/hist/src/TF1Helper.cxx:66; 8: Assuming 'epsilon' is > 0 in /opt/root_src/hist/hist/src/TF1H,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:19053,Deployability,Update,UpdateIsOnHeap,19053,ming the condition is false in /opt/root_src/hist/hist/src/TF1Helper.cxx:66; 7: Taking false branch in /opt/root_src/hist/hist/src/TF1Helper.cxx:66; 8: Assuming 'epsilon' is > 0 in /opt/root_src/hist/hist/src/TF1Helper.cxx:111; 9: Taking false branch in /opt/root_src/hist/hist/src/TF1Helper.cxx:111; 10: Assuming 'i' is < 'npar' in /opt/root_src/hist/hist/src/TF1Helper.cxx:114; 11: Loop condition is true. Entering loop body in /opt/root_src/hist/hist/src/TF1Helper.cxx:114; 12: Assuming the condition is true in /opt/root_src/hist/hist/src/TF1Helper.cxx:124; 13: Taking true branch in /opt/root_src/hist/hist/src/TF1Helper.cxx:124; 14: Calling constructor for 'TF1' in /opt/root_src/hist/hist/src/TF1Helper.cxx:125; 15: Calling constructor for 'TF1' in /opt/root_src/hist/hist/inc/TF1.h:373; 16: Calling constructor for 'TNamed' in /opt/root_src/hist/hist/inc/TF1.h:274; 17: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TNamed.h:37; 18: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 19: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 20: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'c' is non-null in /opt/root_src/gui/webgui6/src/TWebCanvas.cxx:1186; 2: Taking false branch in /opt/root_src/gui/webgui6/src/TWebCanvas.cxx:1186; 3: Calling constructor for 'TCanvasWebSnapshot' in /opt/root_src/gui/webgui6/src/TWebCanvas.cxx:1195; 4: Calling default constructor for 'TPadWebSnapshot' in /opt/root_src/gui/webgui6/inc/TWebSnapshot.h:93; 5: Calling implicit default constructor for 'TWebSnapshot' in /opt/root_src/gui/webgui6/inc/TWebSnapshot.h:66; 6: Calling default constructor for 'TObject' in /opt/root_src/gui/webgui6/inc/TWebSnapshot.h:66; 7: Calling 'TStorage::UpdateIsOnHeap' ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:20050,Deployability,Update,UpdateIsOnHeap,20050,Heap' in /opt/root_src/core/base/inc/TObject.h:245; 19: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 20: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'c' is non-null in /opt/root_src/gui/webgui6/src/TWebCanvas.cxx:1186; 2: Taking false branch in /opt/root_src/gui/webgui6/src/TWebCanvas.cxx:1186; 3: Calling constructor for 'TCanvasWebSnapshot' in /opt/root_src/gui/webgui6/src/TWebCanvas.cxx:1195; 4: Calling default constructor for 'TPadWebSnapshot' in /opt/root_src/gui/webgui6/inc/TWebSnapshot.h:93; 5: Calling implicit default constructor for 'TWebSnapshot' in /opt/root_src/gui/webgui6/inc/TWebSnapshot.h:66; 6: Calling default constructor for 'TObject' in /opt/root_src/gui/webgui6/inc/TWebSnapshot.h:66; 7: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 8: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 9: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'norm' is not equal to 0 in /opt/root_src/hist/hist/src/TF3.cxx:715; 2: Taking false branch in /opt/root_src/hist/hist/src/TF3.cxx:715; 3: Calling constructor for 'TF3' in /opt/root_src/hist/hist/src/TF3.cxx:725; 4: Calling constructor for 'TF2' in /opt/root_src/hist/hist/inc/TF3.h:72; 5: Calling constructor for 'TF1' in /opt/root_src/hist/hist/inc/TF2.h:72; 6: Calling constructor for 'TF1' in /opt/root_src/hist/hist/inc/TF1.h:373; 7: Calling constructor for 'TNamed' in /opt/root_src/hist/hist/inc/TF1.h:274; 8: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TNamed.h:37; ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:21086,Deployability,Update,UpdateIsOnHeap,21086,bject.h:245; 8: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 9: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'norm' is not equal to 0 in /opt/root_src/hist/hist/src/TF3.cxx:715; 2: Taking false branch in /opt/root_src/hist/hist/src/TF3.cxx:715; 3: Calling constructor for 'TF3' in /opt/root_src/hist/hist/src/TF3.cxx:725; 4: Calling constructor for 'TF2' in /opt/root_src/hist/hist/inc/TF3.h:72; 5: Calling constructor for 'TF1' in /opt/root_src/hist/hist/inc/TF2.h:72; 6: Calling constructor for 'TF1' in /opt/root_src/hist/hist/inc/TF1.h:373; 7: Calling constructor for 'TNamed' in /opt/root_src/hist/hist/inc/TF1.h:274; 8: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TNamed.h:37; 9: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 10: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 11: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'norm' is not equal to 0 in /opt/root_src/hist/hist/src/TF2.cxx:1016; 2: Taking false branch in /opt/root_src/hist/hist/src/TF2.cxx:1016; 3: Calling constructor for 'TF2' in /opt/root_src/hist/hist/src/TF2.cxx:1026; 4: Calling constructor for 'TF1' in /opt/root_src/hist/hist/inc/TF2.h:72; 5: Calling constructor for 'TF1' in /opt/root_src/hist/hist/inc/TF1.h:373; 6: Calling constructor for 'TNamed' in /opt/root_src/hist/hist/inc/TF1.h:274; 7: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TNamed.h:37; 8: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:22053,Deployability,Update,UpdateIsOnHeap,22053, Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 10: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 11: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'norm' is not equal to 0 in /opt/root_src/hist/hist/src/TF2.cxx:1016; 2: Taking false branch in /opt/root_src/hist/hist/src/TF2.cxx:1016; 3: Calling constructor for 'TF2' in /opt/root_src/hist/hist/src/TF2.cxx:1026; 4: Calling constructor for 'TF1' in /opt/root_src/hist/hist/inc/TF2.h:72; 5: Calling constructor for 'TF1' in /opt/root_src/hist/hist/inc/TF1.h:373; 6: Calling constructor for 'TNamed' in /opt/root_src/hist/hist/inc/TF1.h:274; 7: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TNamed.h:37; 8: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 9: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 10: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming the condition is false in /opt/root_src/gui/webdisplay/src/RWebWindow.cxx:569; 2: Taking false branch in /opt/root_src/gui/webdisplay/src/RWebWindow.cxx:569; 3: Taking true branch in /opt/root_src/gui/webdisplay/src/RWebWindow.cxx:572; 4: Assuming the condition is true in /opt/root_src/gui/webdisplay/src/RWebWindow.cxx:576; 5: Taking true branch in /opt/root_src/gui/webdisplay/src/RWebWindow.cxx:576; 6: Calling default constructor for 'TUrl' in /opt/root_src/gui/webdisplay/src/RWebWindow.cxx:577; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:23426,Deployability,Update,UpdateIsOnHeap,23426,ratorResult]; 1: Assuming the condition is false in /opt/root_src/gui/webdisplay/src/RWebWindow.cxx:569; 2: Taking false branch in /opt/root_src/gui/webdisplay/src/RWebWindow.cxx:569; 3: Taking true branch in /opt/root_src/gui/webdisplay/src/RWebWindow.cxx:572; 4: Assuming the condition is true in /opt/root_src/gui/webdisplay/src/RWebWindow.cxx:576; 5: Taking true branch in /opt/root_src/gui/webdisplay/src/RWebWindow.cxx:576; 6: Calling default constructor for 'TUrl' in /opt/root_src/gui/webdisplay/src/RWebWindow.cxx:577; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling copy constructor for 'TEfficiency' in /opt/root_src/hist/hist/src/TEfficiency.cxx:3674; 2: Calling default constructor for 'TNamed' in /opt/root_src/hist/hist/src/TEfficiency.cxx:973; 3: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TNamed.h:36; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling constructor for 'THnIter' in /opt/root_src/hist/hist/src/THnBase.cxx:617; 2: Calling default constructor for 'TObject' in /opt/root_src/hist/hist/inc/THnBase.h:305; 3: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 4: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 5: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'i' is,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:24023,Deployability,Update,UpdateIsOnHeap,24023,and of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling copy constructor for 'TEfficiency' in /opt/root_src/hist/hist/src/TEfficiency.cxx:3674; 2: Calling default constructor for 'TNamed' in /opt/root_src/hist/hist/src/TEfficiency.cxx:973; 3: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TNamed.h:36; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling constructor for 'THnIter' in /opt/root_src/hist/hist/src/THnBase.cxx:617; 2: Calling default constructor for 'TObject' in /opt/root_src/hist/hist/inc/THnBase.h:305; 3: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 4: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 5: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'i' is < 'nobjects' in /opt/root_src/hist/hist/src/TFormula.cxx:220; 2: Loop condition is true. Entering loop body in /opt/root_src/hist/hist/src/TFormula.cxx:220; 3: Assuming the condition is true in /opt/root_src/hist/hist/src/TFormula.cxx:221; 4: Left side of '&&' is true in /opt/root_src/hist/hist/src/TFormula.cxx:221; 5: Assuming the condition is true in /opt/root_src/hist/hist/src/TFormula.cxx:221; 6: Taking true branch in /opt/root_src/hist/hist/src/TFormula.cxx:221; 7: Calling constructor for 'TFormula' in /opt/root_src/hist/hist/src/TFormula.cxx:222; 8: Calling constructor for 'TNamed' ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:25197,Deployability,Update,UpdateIsOnHeap,25197,rbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'i' is < 'nobjects' in /opt/root_src/hist/hist/src/TFormula.cxx:220; 2: Loop condition is true. Entering loop body in /opt/root_src/hist/hist/src/TFormula.cxx:220; 3: Assuming the condition is true in /opt/root_src/hist/hist/src/TFormula.cxx:221; 4: Left side of '&&' is true in /opt/root_src/hist/hist/src/TFormula.cxx:221; 5: Assuming the condition is true in /opt/root_src/hist/hist/src/TFormula.cxx:221; 6: Taking true branch in /opt/root_src/hist/hist/src/TFormula.cxx:221; 7: Calling constructor for 'TFormula' in /opt/root_src/hist/hist/src/TFormula.cxx:222; 8: Calling constructor for 'TNamed' in /opt/root_src/hist/hist/src/TFormula.cxx:431; 9: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TNamed.h:37; 10: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 11: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 12: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling default constructor for 'TSpectrum2' in /opt/root_src/hist/spectrum/src/TSpectrum2.cxx:1721; 2: Calling constructor for 'TNamed' in /opt/root_src/hist/spectrum/src/TSpectrum2.cxx:57; 3: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TNamed.h:37; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The l,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:25903,Deployability,Update,UpdateIsOnHeap,25903,Calling constructor for 'TFormula' in /opt/root_src/hist/hist/src/TFormula.cxx:222; 8: Calling constructor for 'TNamed' in /opt/root_src/hist/hist/src/TFormula.cxx:431; 9: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TNamed.h:37; 10: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 11: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 12: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling default constructor for 'TSpectrum2' in /opt/root_src/hist/spectrum/src/TSpectrum2.cxx:1721; 2: Calling constructor for 'TNamed' in /opt/root_src/hist/spectrum/src/TSpectrum2.cxx:57; 3: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TNamed.h:37; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling default constructor for 'TSpectrum' in /opt/root_src/hist/spectrum/src/TSpectrum.cxx:2590; 2: Calling constructor for 'TNamed' in /opt/root_src/hist/spectrum/src/TSpectrum.cxx:51; 3: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TNamed.h:37; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left op,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:26604,Deployability,Update,UpdateIsOnHeap,26604,constructor for 'TSpectrum2' in /opt/root_src/hist/spectrum/src/TSpectrum2.cxx:1721; 2: Calling constructor for 'TNamed' in /opt/root_src/hist/spectrum/src/TSpectrum2.cxx:57; 3: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TNamed.h:37; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling default constructor for 'TSpectrum' in /opt/root_src/hist/spectrum/src/TSpectrum.cxx:2590; 2: Calling constructor for 'TNamed' in /opt/root_src/hist/spectrum/src/TSpectrum.cxx:51; 3: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TNamed.h:37; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling default constructor for 'TMatrixTSym<double>' in /opt/root_src/hist/hist/src/TPrincipal.cxx:880; 2: Calling default constructor for 'TMatrixTBase<double>' in /opt/root_src/math/matrix/inc/TMatrixTSym.h:54; 3: Calling default constructor for 'TObject' in /opt/root_src/math/matrix/inc/TMatrixTBase.h:115; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TSto,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:27340,Deployability,Update,UpdateIsOnHeap,27340,opt/root_src/hist/spectrum/src/TSpectrum.cxx:2590; 2: Calling constructor for 'TNamed' in /opt/root_src/hist/spectrum/src/TSpectrum.cxx:51; 3: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TNamed.h:37; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling default constructor for 'TMatrixTSym<double>' in /opt/root_src/hist/hist/src/TPrincipal.cxx:880; 2: Calling default constructor for 'TMatrixTBase<double>' in /opt/root_src/math/matrix/inc/TMatrixTSym.h:54; 3: Calling default constructor for 'TObject' in /opt/root_src/math/matrix/inc/TMatrixTBase.h:115; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling constructor for 'TSpectrum2Painter' in /opt/root_src/hist/spectrumpainter/src/TSpectrum2Painter.cxx:7676; 2: Calling constructor for 'TNamed' in /opt/root_src/hist/spectrumpainter/src/TSpectrum2Painter.cxx:54; 3: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TNamed.h:37; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:28071,Deployability,Update,UpdateIsOnHeap,28071,st/src/TPrincipal.cxx:880; 2: Calling default constructor for 'TMatrixTBase<double>' in /opt/root_src/math/matrix/inc/TMatrixTSym.h:54; 3: Calling default constructor for 'TObject' in /opt/root_src/math/matrix/inc/TMatrixTBase.h:115; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling constructor for 'TSpectrum2Painter' in /opt/root_src/hist/spectrumpainter/src/TSpectrum2Painter.cxx:7676; 2: Calling constructor for 'TNamed' in /opt/root_src/hist/spectrumpainter/src/TSpectrum2Painter.cxx:54; 3: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TNamed.h:37; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'theGraph' is non-null in /opt/root_src/hist/histpainter/src/TGraphPainter.cxx:1202; 2: Taking true branch in /opt/root_src/hist/histpainter/src/TGraphPainter.cxx:1202; 3: Assuming 'l1' is non-null in /opt/root_src/hist/histpainter/src/TGraphPainter.cxx:1206; 4: Left side of '||' is true in /opt/root_src/hist/histpainter/src/TGraphPainter.cxx:1206; 5: 'l1' is non-null in /opt/root_src/hist/histpainter/src/TGraphPainter.cxx:1208; 6: Taking true branch in /opt/root_src/hist/histpainter/src/TGraphPainter.cxx:1208; 7: Assuming 'l2' is null in /opt/root_src/hist/histpainter/src/TGraphPainter.cxx:1209;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:30745,Deployability,Update,UpdateIsOnHeap,30745,istpainter/src/TGraphPainter.cxx:1223; 16: Taking false branch in /opt/root_src/hist/histpainter/src/TGraphPainter.cxx:1223; 17: Assuming the condition is true in /opt/root_src/hist/histpainter/src/TGraphPainter.cxx:1225; 18: Taking true branch in /opt/root_src/hist/histpainter/src/TGraphPainter.cxx:1225; 19: Calling 'TGraphPainter::PaintGraphQQ' in /opt/root_src/hist/histpainter/src/TGraphPainter.cxx:1226; 20: Assuming 'theX' is non-null in /opt/root_src/hist/histpainter/src/TGraphPainter.cxx:3926; 21: Taking false branch in /opt/root_src/hist/histpainter/src/TGraphPainter.cxx:3926; 22: Assuming 'theF' is null in /opt/root_src/hist/histpainter/src/TGraphPainter.cxx:3931; 23: Taking false branch in /opt/root_src/hist/histpainter/src/TGraphPainter.cxx:3931; 24: Calling default constructor for 'TLine' in /opt/root_src/hist/histpainter/src/TGraphPainter.cxx:3948; 25: Calling default constructor for 'TObject' in /opt/root_src/graf2d/graf/inc/TLine.h:38; 26: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 27: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 28: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling copy constructor for 'TH1D' in /opt/root_src/hist/hist/src/TH1.cxx:10203; 2: Calling default constructor for 'TH1' in /opt/root_src/hist/hist/src/TH1.cxx:10112; 3: Calling default constructor for 'TNamed' in /opt/root_src/hist/hist/src/TH1.cxx:595; 4: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TNamed.h:36; 5: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 6: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 7: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:31517,Deployability,Update,UpdateIsOnHeap,31517,alling default constructor for 'TLine' in /opt/root_src/hist/histpainter/src/TGraphPainter.cxx:3948; 25: Calling default constructor for 'TObject' in /opt/root_src/graf2d/graf/inc/TLine.h:38; 26: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 27: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 28: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling copy constructor for 'TH1D' in /opt/root_src/hist/hist/src/TH1.cxx:10203; 2: Calling default constructor for 'TH1' in /opt/root_src/hist/hist/src/TH1.cxx:10112; 3: Calling default constructor for 'TNamed' in /opt/root_src/hist/hist/src/TH1.cxx:595; 4: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TNamed.h:36; 5: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 6: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 7: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'subinfo' is non-null in /opt/root_src/io/io/src/TContainerConverters.cxx:70; 2: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 3: Taking false branch in /opt/root_src/io/io/src/TContainerConverters.cxx:70; 4: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 5: Loop condition is false. Exiting loop in /opt/root_src/io/io/src/TContainerConverters.cxx:70; 6: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 7: Taking false branch in /opt/root_src/io/io/src/TContainerConverters.cxx:79; 8: expanded ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:33953,Deployability,Update,UpdateIsOnHeap,33953,.cxx:81; 13: 'needAlloc' is false in /opt/root_src/io/io/src/TContainerConverters.cxx:83; 14: Taking false branch in /opt/root_src/io/io/src/TContainerConverters.cxx:83; 15: Assuming 'size' is not equal to 0 in /opt/root_src/io/io/src/TContainerConverters.cxx:95; 16: Taking false branch in /opt/root_src/io/io/src/TContainerConverters.cxx:95; 17: Assuming 'k' is < 'size' in /opt/root_src/io/io/src/TContainerConverters.cxx:96; 18: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TContainerConverters.cxx:96; 19: 'needAlloc' is false in /opt/root_src/io/io/src/TContainerConverters.cxx:98; 20: Taking false branch in /opt/root_src/io/io/src/TContainerConverters.cxx:98; 21: Field 'fIsPointer' is false in /opt/root_src/io/io/src/TContainerConverters.cxx:175; 22: Taking false branch in /opt/root_src/io/io/src/TContainerConverters.cxx:175; 23: Calling default constructor for 'TObject' in /opt/root_src/io/io/src/TContainerConverters.cxx:178; 24: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 25: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 26: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'writeEmptyRootPCM' is true in /opt/root_src/io/rootpcm/src/rootclingIO.cxx:144; 2: Taking true branch in /opt/root_src/io/rootpcm/src/rootclingIO.cxx:144; 3: Calling default constructor for 'TObject' in /opt/root_src/io/rootpcm/src/rootclingIO.cxx:145; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of ',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:34642,Deployability,Update,UpdateIsOnHeap,34642,8; 21: Field 'fIsPointer' is false in /opt/root_src/io/io/src/TContainerConverters.cxx:175; 22: Taking false branch in /opt/root_src/io/io/src/TContainerConverters.cxx:175; 23: Calling default constructor for 'TObject' in /opt/root_src/io/io/src/TContainerConverters.cxx:178; 24: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 25: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 26: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'writeEmptyRootPCM' is true in /opt/root_src/io/rootpcm/src/rootclingIO.cxx:144; 2: Taking true branch in /opt/root_src/io/rootpcm/src/rootclingIO.cxx:144; 3: Calling default constructor for 'TObject' in /opt/root_src/io/rootpcm/src/rootclingIO.cxx:145; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling constructor for 'TFoamVect' in /opt/root_src/math/foam/src/TFoamVect.cxx:171; 2: Calling default constructor for 'TObject' in /opt/root_src/math/foam/src/TFoamVect.cxx:38; 3: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 4: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 5: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: 'rc' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:35246,Deployability,Update,UpdateIsOnHeap,35246,he left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'writeEmptyRootPCM' is true in /opt/root_src/io/rootpcm/src/rootclingIO.cxx:144; 2: Taking true branch in /opt/root_src/io/rootpcm/src/rootclingIO.cxx:144; 3: Calling default constructor for 'TObject' in /opt/root_src/io/rootpcm/src/rootclingIO.cxx:145; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling constructor for 'TFoamVect' in /opt/root_src/math/foam/src/TFoamVect.cxx:171; 2: Calling default constructor for 'TObject' in /opt/root_src/math/foam/src/TFoamVect.cxx:38; 3: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 4: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 5: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: 'rc' is >= 0 in /opt/root_src/main/src/xpdtest.cxx:93; 2: Taking false branch in /opt/root_src/main/src/xpdtest.cxx:93; 3: 'rc' is <= 0 in /opt/root_src/main/src/xpdtest.cxx:96; 4: Taking false branch in /opt/root_src/main/src/xpdtest.cxx:96; 5: 'verbose' is false in /opt/root_src/main/src/xpdtest.cxx:99; 6: '?' condition is false in /opt/root_src/main/src/xpdtest.cxx:99; 7: Taking false branch in /opt/root_src/main/src/xpdtest.cxx:105; 8: Taking false branch in /opt/root_src/main/src/xpdtest.cxx:110; 9: 'rc' is equal to 0 in /opt/root_src/main/src/xpdtest.cxx:134; 10: Left side of '&&' is true in /opt/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:37274,Deployability,Update,UpdateIsOnHeap,37274,x:134; 11: 'test' is <= 1 in /opt/root_src/main/src/xpdtest.cxx:134; 12: Taking false branch in /opt/root_src/main/src/xpdtest.cxx:134; 13: Calling default constructor for 'TUrl' in /opt/root_src/main/src/xpdtest.cxx:146; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming the condition is false in /opt/root_src/io/io/src/TFile.cxx:3794; 2: Taking false branch in /opt/root_src/io/io/src/TFile.cxx:3794; 3: Calling default constructor for 'TUrl' in /opt/root_src/io/io/src/TFile.cxx:3801; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Control jumps to 'case 166:' at line 313 in /opt/root_src/io/io/src/TStreamerInfoReadBuffer.cxx:194; 2: Calling default constructor for 'TObject' in /opt/root_src/io/io/src/TStreamerInfoReadBuffer.cxx:314; 3: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 4: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 5: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Taking false branch in /opt/root_src/math/matrix/src/TMatrixDEigen.cxx:59; 2: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 3: Loop condition is false. Exiting loop in /opt/root_src/math/matrix/src/TMatrixDEigen.cxx:59; 4: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 5: Assuming 'nRows' is equal to 'nCols' in /opt/root_src/math/matrix/src/TMatrixDEigen.cxx:66; 6: Left side of '||' is false in /opt/root_src/math/matrix/src/TMatrixDEigen.cxx:66; 7: Assuming 'rowLwb' is equal to 'colLwb' in /opt/root_src/math/matrix/src/TMatrixDEige,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:38600,Deployability,Update,UpdateIsOnHeap,38600, value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Taking false branch in /opt/root_src/math/matrix/src/TMatrixDEigen.cxx:59; 2: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 3: Loop condition is false. Exiting loop in /opt/root_src/math/matrix/src/TMatrixDEigen.cxx:59; 4: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 5: Assuming 'nRows' is equal to 'nCols' in /opt/root_src/math/matrix/src/TMatrixDEigen.cxx:66; 6: Left side of '||' is false in /opt/root_src/math/matrix/src/TMatrixDEigen.cxx:66; 7: Assuming 'rowLwb' is equal to 'colLwb' in /opt/root_src/math/matrix/src/TMatrixDEigen.cxx:66; 8: Taking false branch in /opt/root_src/math/matrix/src/TMatrixDEigen.cxx:66; 9: Calling default constructor for 'TVectorT<double>' in /opt/root_src/math/matrix/src/TMatrixDEigen.cxx:77; 10: Calling default constructor for 'TObject' in /opt/root_src/math/matrix/inc/TVectorT.h:53; 11: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 12: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 13: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Taking false branch in /opt/root_src/math/matrix/src/TMatrixDSymEigen.cxx:36; 2: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 3: Loop condition is false. Exiting loop in /opt/root_src/math/matrix/src/TMatrixDSymEigen.cxx:36; 4: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 5: Calling default constructor for 'TVectorT<double>' in /opt/root_src/math/matrix/src/TMatrixDSymEigen.cxx:46; 6: Calling default constructor for 'TObject' in /opt/root_src/math/matrix/inc/TVectorT.h:53; 7: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:39580,Deployability,Update,UpdateIsOnHeap,39580,orage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 12: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 13: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Taking false branch in /opt/root_src/math/matrix/src/TMatrixDSymEigen.cxx:36; 2: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 3: Loop condition is false. Exiting loop in /opt/root_src/math/matrix/src/TMatrixDSymEigen.cxx:36; 4: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 5: Calling default constructor for 'TVectorT<double>' in /opt/root_src/math/matrix/src/TMatrixDSymEigen.cxx:46; 6: Calling default constructor for 'TObject' in /opt/root_src/math/matrix/inc/TVectorT.h:53; 7: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 8: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 9: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming the condition is false in /opt/root_src/io/sql/src/TSQLStructure.cxx:1190; 2: Left side of '||' is false in /opt/root_src/io/sql/src/TSQLStructure.cxx:1190; 3: Assuming the condition is false in /opt/root_src/io/sql/src/TSQLStructure.cxx:1190; 4: Taking false branch in /opt/root_src/io/sql/src/TSQLStructure.cxx:1190; 5: Calling default constructor for 'TSqlRegistry' in /opt/root_src/io/sql/src/TSQLStructure.cxx:1193; 6: Calling default constructor for 'TObject' in /opt/root_src/io/sql/src/TSQLStructure.cxx:825; 7: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 8:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:40530,Deployability,Update,UpdateIsOnHeap,40530,/TVectorT.h:53; 7: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 8: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 9: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming the condition is false in /opt/root_src/io/sql/src/TSQLStructure.cxx:1190; 2: Left side of '||' is false in /opt/root_src/io/sql/src/TSQLStructure.cxx:1190; 3: Assuming the condition is false in /opt/root_src/io/sql/src/TSQLStructure.cxx:1190; 4: Taking false branch in /opt/root_src/io/sql/src/TSQLStructure.cxx:1190; 5: Calling default constructor for 'TSqlRegistry' in /opt/root_src/io/sql/src/TSQLStructure.cxx:1193; 6: Calling default constructor for 'TObject' in /opt/root_src/io/sql/src/TSQLStructure.cxx:825; 7: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 8: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 9: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Taking false branch in /opt/root_src/io/io/src/TStreamerInfoActions.cxx:3246; 2: Control jumps to 'case kTString:' at line 3291 in /opt/root_src/io/io/src/TStreamerInfoActions.cxx:3248; 3: Calling 'TActionSequence::AddAction' in /opt/root_src/io/io/src/TStreamerInfoActions.cxx:3291; 4: Calling constructor for 'TConfiguredAction' in /opt/root_src/io/io/inc/TStreamerInfoActions.h:185; 5: Calling default constructor for 'TObject' in /opt/root_src/io/io/inc/TStreamerInfoActions.h:102; 6: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 7: Calling 'TStorage::FilledByObjectAllo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:41440,Deployability,Update,UpdateIsOnHeap,41440,ct' in /opt/root_src/io/sql/src/TSQLStructure.cxx:825; 7: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 8: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 9: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Taking false branch in /opt/root_src/io/io/src/TStreamerInfoActions.cxx:3246; 2: Control jumps to 'case kTString:' at line 3291 in /opt/root_src/io/io/src/TStreamerInfoActions.cxx:3248; 3: Calling 'TActionSequence::AddAction' in /opt/root_src/io/io/src/TStreamerInfoActions.cxx:3291; 4: Calling constructor for 'TConfiguredAction' in /opt/root_src/io/io/inc/TStreamerInfoActions.h:185; 5: Calling default constructor for 'TObject' in /opt/root_src/io/io/inc/TStreamerInfoActions.h:102; 6: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 7: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 8: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming the condition is false in /opt/root_src/math/matrix/src/TMatrixTUtils.cxx:1306; 2: Left side of '||' is false in /opt/root_src/math/matrix/src/TMatrixTUtils.cxx:1306; 3: Assuming the condition is false in /opt/root_src/math/matrix/src/TMatrixTUtils.cxx:1306; 4: Taking false branch in /opt/root_src/math/matrix/src/TMatrixTUtils.cxx:1306; 5: Calling default constructor for 'TMatrixTSym<double>' in /opt/root_src/math/matrix/src/TMatrixTUtils.cxx:1313; 6: Calling default constructor for 'TMatrixTBase<double>' in /opt/root_src/math/matrix/inc/TMatrixTSym.h:54; 7: Calling default constructor for 'TObj,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:42533,Deployability,Update,UpdateIsOnHeap,42533,n /opt/root_src/core/base/inc/TStorage.h:132; 8: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming the condition is false in /opt/root_src/math/matrix/src/TMatrixTUtils.cxx:1306; 2: Left side of '||' is false in /opt/root_src/math/matrix/src/TMatrixTUtils.cxx:1306; 3: Assuming the condition is false in /opt/root_src/math/matrix/src/TMatrixTUtils.cxx:1306; 4: Taking false branch in /opt/root_src/math/matrix/src/TMatrixTUtils.cxx:1306; 5: Calling default constructor for 'TMatrixTSym<double>' in /opt/root_src/math/matrix/src/TMatrixTUtils.cxx:1313; 6: Calling default constructor for 'TMatrixTBase<double>' in /opt/root_src/math/matrix/inc/TMatrixTSym.h:54; 7: Calling default constructor for 'TObject' in /opt/root_src/math/matrix/inc/TMatrixTBase.h:115; 8: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 9: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 10: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'i' is < field 'fNt' in /opt/root_src/math/physics/src/TGenPhaseSpace.cxx:65; 2: Loop condition is true. Entering loop body in /opt/root_src/math/physics/src/TGenPhaseSpace.cxx:65; 3: Calling copy assignment operator for 'TLorentzVector' in /opt/root_src/math/physics/src/TGenPhaseSpace.cxx:67; 4: Calling 'TLorentzVector::Vect' in /opt/root_src/math/physics/inc/TLorentzVector.h:367; 5: Calling copy constructor for 'TVector3' in /opt/root_src/math/physics/inc/TLorentzVector.h:294; 6: Calling copy constructor for 'TObject' in /opt/root_src/math/physics/inc/TVector3.h:250; 7: Calling 'TStorage::Upd,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:43543,Deployability,Update,UpdateIsOnHeap,43543,/root_src/core/base/inc/TObject.h:245; 9: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 10: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'i' is < field 'fNt' in /opt/root_src/math/physics/src/TGenPhaseSpace.cxx:65; 2: Loop condition is true. Entering loop body in /opt/root_src/math/physics/src/TGenPhaseSpace.cxx:65; 3: Calling copy assignment operator for 'TLorentzVector' in /opt/root_src/math/physics/src/TGenPhaseSpace.cxx:67; 4: Calling 'TLorentzVector::Vect' in /opt/root_src/math/physics/inc/TLorentzVector.h:367; 5: Calling copy constructor for 'TVector3' in /opt/root_src/math/physics/inc/TLorentzVector.h:294; 6: Calling copy constructor for 'TObject' in /opt/root_src/math/physics/inc/TVector3.h:250; 7: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:265; 8: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 9: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling 'TLorentzRotation::VectorMultiplication' in /opt/root_src/math/physics/src/TLorentzVector.cxx:294; 2: Calling constructor for 'TLorentzVector' in /opt/root_src/math/physics/inc/TLorentzRotation.h:241; 3: Calling default constructor for 'TObject' in /opt/root_src/math/physics/inc/TLorentzVector.h:608; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStor,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:44277,Deployability,Update,UpdateIsOnHeap,44277,/math/physics/inc/TLorentzVector.h:367; 5: Calling copy constructor for 'TVector3' in /opt/root_src/math/physics/inc/TLorentzVector.h:294; 6: Calling copy constructor for 'TObject' in /opt/root_src/math/physics/inc/TVector3.h:250; 7: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:265; 8: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 9: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling 'TLorentzRotation::VectorMultiplication' in /opt/root_src/math/physics/src/TLorentzVector.cxx:294; 2: Calling constructor for 'TLorentzVector' in /opt/root_src/math/physics/inc/TLorentzRotation.h:241; 3: Calling default constructor for 'TObject' in /opt/root_src/math/physics/inc/TLorentzVector.h:608; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling 'TVector3::Cross' in /opt/root_src/math/physics/src/TQuaternion.cxx:405; 2: Calling constructor for 'TVector3' in /opt/root_src/math/physics/inc/TVector3.h:336; 3: Calling default constructor for 'TObject' in /opt/root_src/math/physics/inc/TVector3.h:253; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:44965,Deployability,Update,UpdateIsOnHeap,44965,Multiplication' in /opt/root_src/math/physics/src/TLorentzVector.cxx:294; 2: Calling constructor for 'TLorentzVector' in /opt/root_src/math/physics/inc/TLorentzRotation.h:241; 3: Calling default constructor for 'TObject' in /opt/root_src/math/physics/inc/TLorentzVector.h:608; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling 'TVector3::Cross' in /opt/root_src/math/physics/src/TQuaternion.cxx:405; 2: Calling constructor for 'TVector3' in /opt/root_src/math/physics/inc/TVector3.h:336; 3: Calling default constructor for 'TObject' in /opt/root_src/math/physics/inc/TVector3.h:253; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling constructor for 'TVector3' in /opt/root_src/math/physics/src/TRotation.cxx:759; 2: Calling default constructor for 'TObject' in /opt/root_src/math/physics/inc/TVector3.h:253; 3: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 4: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 5: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Call,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:45572,Deployability,Update,UpdateIsOnHeap,45572,ft operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling 'TVector3::Cross' in /opt/root_src/math/physics/src/TQuaternion.cxx:405; 2: Calling constructor for 'TVector3' in /opt/root_src/math/physics/inc/TVector3.h:336; 3: Calling default constructor for 'TObject' in /opt/root_src/math/physics/inc/TVector3.h:253; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling constructor for 'TVector3' in /opt/root_src/math/physics/src/TRotation.cxx:759; 2: Calling default constructor for 'TObject' in /opt/root_src/math/physics/inc/TVector3.h:253; 3: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 4: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 5: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling 'TVector3::operator*=' in /opt/root_src/math/physics/src/TVector3.cxx:293; 2: Calling 'TRotation::operator*' in /opt/root_src/math/physics/src/TVector3.cxx:184; 3: Calling constructor for 'TVector3' in /opt/root_src/math/physics/inc/TRotation.h:258; 4: Calling default constructor for 'TObject' in /opt/root_src/math/physics/inc/TVector3.h:253; 5: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 6: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 7: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStora,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:46349,Deployability,Update,UpdateIsOnHeap,46349,; 1: Calling constructor for 'TVector3' in /opt/root_src/math/physics/src/TRotation.cxx:759; 2: Calling default constructor for 'TObject' in /opt/root_src/math/physics/inc/TVector3.h:253; 3: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 4: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 5: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling 'TVector3::operator*=' in /opt/root_src/math/physics/src/TVector3.cxx:293; 2: Calling 'TRotation::operator*' in /opt/root_src/math/physics/src/TVector3.cxx:184; 3: Calling constructor for 'TVector3' in /opt/root_src/math/physics/inc/TRotation.h:258; 4: Calling default constructor for 'TObject' in /opt/root_src/math/physics/inc/TVector3.h:253; 5: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 6: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 7: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Taking true branch in /opt/root_src/math/matrix/src/TDecompQRH.cxx:495; 2: Taking true branch in /opt/root_src/math/matrix/src/TDecompQRH.cxx:496; 3: Calling 'TDecompQRH::Decompose' in /opt/root_src/math/matrix/src/TDecompQRH.cxx:497; 4: Taking false branch in /opt/root_src/math/matrix/src/TDecompQRH.cxx:152; 5: Taking false branch in /opt/root_src/math/matrix/src/TDecompQRH.cxx:154; 6: Calling default constructor for 'TVectorT<double>' in /opt/root_src/math/matrix/src/TDecompQRH.cxx:164; 7: Calling default constructor for 'TObject' in /opt/root_src/math/matrix/inc/TVectorT.h:53; 8: Calling 'TStorage::Up,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:47360,Deployability,Update,UpdateIsOnHeap,47360,root_src/core/base/inc/TObject.h:245; 6: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 7: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Taking true branch in /opt/root_src/math/matrix/src/TDecompQRH.cxx:495; 2: Taking true branch in /opt/root_src/math/matrix/src/TDecompQRH.cxx:496; 3: Calling 'TDecompQRH::Decompose' in /opt/root_src/math/matrix/src/TDecompQRH.cxx:497; 4: Taking false branch in /opt/root_src/math/matrix/src/TDecompQRH.cxx:152; 5: Taking false branch in /opt/root_src/math/matrix/src/TDecompQRH.cxx:154; 6: Calling default constructor for 'TVectorT<double>' in /opt/root_src/math/matrix/src/TDecompQRH.cxx:164; 7: Calling default constructor for 'TObject' in /opt/root_src/math/matrix/inc/TVectorT.h:53; 8: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 9: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 10: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Taking true branch in /opt/root_src/math/matrix/src/TDecompSVD.cxx:848; 2: Taking true branch in /opt/root_src/math/matrix/src/TDecompSVD.cxx:849; 3: Calling 'TDecompSVD::Decompose' in /opt/root_src/math/matrix/src/TDecompSVD.cxx:850; 4: Taking false branch in /opt/root_src/math/matrix/src/TDecompSVD.cxx:125; 5: Taking false branch in /opt/root_src/math/matrix/src/TDecompSVD.cxx:127; 6: Calling default constructor for 'TVectorT<double>' in /opt/root_src/math/matrix/src/TDecompSVD.cxx:136; 7: Calling default constructor for 'TObject' in /opt/root_src/math/matrix/inc/TVectorT.h:53; 8: Calling 'TStorage::Up,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:48372,Deployability,Update,UpdateIsOnHeap,48372,oot_src/core/base/inc/TObject.h:245; 9: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 10: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Taking true branch in /opt/root_src/math/matrix/src/TDecompSVD.cxx:848; 2: Taking true branch in /opt/root_src/math/matrix/src/TDecompSVD.cxx:849; 3: Calling 'TDecompSVD::Decompose' in /opt/root_src/math/matrix/src/TDecompSVD.cxx:850; 4: Taking false branch in /opt/root_src/math/matrix/src/TDecompSVD.cxx:125; 5: Taking false branch in /opt/root_src/math/matrix/src/TDecompSVD.cxx:127; 6: Calling default constructor for 'TVectorT<double>' in /opt/root_src/math/matrix/src/TDecompSVD.cxx:136; 7: Calling default constructor for 'TObject' in /opt/root_src/math/matrix/inc/TVectorT.h:53; 8: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 9: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 10: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling 'TVectorT::GetSub' in /opt/root_src/math/quadp/src/TQpProbDens.cxx:224; 2: Calling default constructor for 'TVectorT<double>' in /opt/root_src/math/matrix/inc/TVectorT.h:208; 3: Calling default constructor for 'TObject' in /opt/root_src/math/matrix/inc/TVectorT.h:53; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left op,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:49073,Deployability,Update,UpdateIsOnHeap,49073,lse branch in /opt/root_src/math/matrix/src/TDecompSVD.cxx:127; 6: Calling default constructor for 'TVectorT<double>' in /opt/root_src/math/matrix/src/TDecompSVD.cxx:136; 7: Calling default constructor for 'TObject' in /opt/root_src/math/matrix/inc/TVectorT.h:53; 8: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 9: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 10: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling 'TVectorT::GetSub' in /opt/root_src/math/quadp/src/TQpProbDens.cxx:224; 2: Calling default constructor for 'TVectorT<double>' in /opt/root_src/math/matrix/inc/TVectorT.h:208; 3: Calling default constructor for 'TObject' in /opt/root_src/math/matrix/inc/TVectorT.h:53; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling 'TVectorT::GetSub' in /opt/root_src/math/quadp/src/TQpProbSparse.cxx:225; 2: Calling default constructor for 'TVectorT<double>' in /opt/root_src/math/matrix/inc/TVectorT.h:208; 3: Calling default constructor for 'TObject' in /opt/root_src/math/matrix/inc/TVectorT.h:53; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:49775,Deployability,Update,UpdateIsOnHeap,49775,"torT::GetSub' in /opt/root_src/math/quadp/src/TQpProbDens.cxx:224; 2: Calling default constructor for 'TVectorT<double>' in /opt/root_src/math/matrix/inc/TVectorT.h:208; 3: Calling default constructor for 'TObject' in /opt/root_src/math/matrix/inc/TVectorT.h:53; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling 'TVectorT::GetSub' in /opt/root_src/math/quadp/src/TQpProbSparse.cxx:225; 2: Calling default constructor for 'TVectorT<double>' in /opt/root_src/math/matrix/inc/TVectorT.h:208; 3: Calling default constructor for 'TObject' in /opt/root_src/math/matrix/inc/TVectorT.h:53; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'engine' is non-null in /opt/root_src/net/http/src/TCivetweb.cxx:231; 2: Left side of '||' is false in /opt/root_src/net/http/src/TCivetweb.cxx:231; 3: Assuming the condition is false in /opt/root_src/net/http/src/TCivetweb.cxx:231; 4: Taking false branch in /opt/root_src/net/http/src/TCivetweb.cxx:231; 5: Assuming 'serv' is non-null in /opt/root_src/net/http/src/TCivetweb.cxx:234; 6: Taking false branch in /opt/root_src/net/http/src/TCivetweb.cxx:234; 7: Calling 'make_shared<THttpCallArg, >' in /opt/root_src/net/http/src/TCivetweb.cxx:237; 8: Calling 'allocate_shared<THttpCallArg, std::allocator",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:55645,Deployability,Update,UpdateIsOnHeap,55645,/src/TRootSnifferFull.cxx:471; 9: Assuming 'obj_ptr' is non-null in /opt/root_src/net/httpsniff/src/TRootSnifferFull.cxx:473; 10: Left side of '||' is false in /opt/root_src/net/httpsniff/src/TRootSnifferFull.cxx:473; 11: Assuming 'obj_cl' is non-null in /opt/root_src/net/httpsniff/src/TRootSnifferFull.cxx:473; 12: Taking false branch in /opt/root_src/net/httpsniff/src/TRootSnifferFull.cxx:473; 13: Calling default constructor for 'TUrl' in /opt/root_src/net/httpsniff/src/TRootSnifferFull.cxx:476; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling default constructor for 'TMatrixT<double>' in /opt/root_src/math/matrix/src/TVectorT.cxx:1501; 2: Calling default constructor for 'TMatrixTBase<double>' in /opt/root_src/math/matrix/inc/TMatrixT.h:61; 3: Calling default constructor for 'TObject' in /opt/root_src/math/matrix/inc/TMatrixTBase.h:115; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling constructor for 'TMatrixT<double>' in /opt/root_src/math/matrix/src/TMatrixT.cxx:1378; 2: Calling default constructor for 'TMatrixTBase<double>' in /opt/root_src/math/matrix/inc/TMatrixT.h:69; 3: Calling default constructor for 'TObject' in /opt/root_src/math/matrix/inc/TMatrixTBase.h:115; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:56368,Deployability,Update,UpdateIsOnHeap,56368,rc/math/matrix/src/TVectorT.cxx:1501; 2: Calling default constructor for 'TMatrixTBase<double>' in /opt/root_src/math/matrix/inc/TMatrixT.h:61; 3: Calling default constructor for 'TObject' in /opt/root_src/math/matrix/inc/TMatrixTBase.h:115; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling constructor for 'TMatrixT<double>' in /opt/root_src/math/matrix/src/TMatrixT.cxx:1378; 2: Calling default constructor for 'TMatrixTBase<double>' in /opt/root_src/math/matrix/inc/TMatrixT.h:69; 3: Calling default constructor for 'TObject' in /opt/root_src/math/matrix/inc/TMatrixTBase.h:115; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming field 'fTerminated' is false in /opt/root_src/net/http/src/THttpServer.cxx:792; 2: Taking false branch in /opt/root_src/net/http/src/THttpServer.cxx:792; 3: Assuming the condition is true in /opt/root_src/net/http/src/THttpServer.cxx:797; 4: Left side of '||' is true in /opt/root_src/net/http/src/THttpServer.cxx:797; 5: Calling 'THttpServer::ExecuteWS' in /opt/root_src/net/http/src/THttpServer.cxx:798; 6: Field 'fTerminated' is false in /opt/root_src/net/http/src/THttpServer.cxx:1104; 7: Taking false branch in /opt/root_src/net/http/src/THttpServer.cxx:1104; 8: Assuming 'handler' is non-null in ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:58906,Deployability,Update,UpdateIsOnHeap,58906,15: Taking false branch in /opt/root_src/net/http/src/THttpServer.cxx:1131; 16: Assuming the condition is true in /opt/root_src/net/http/src/THttpServer.cxx:1134; 17: Taking true branch in /opt/root_src/net/http/src/THttpServer.cxx:1134; 18: Left side of '||' is false in /opt/root_src/net/http/src/THttpServer.cxx:1136; 19: Taking false branch in /opt/root_src/net/http/src/THttpServer.cxx:1136; 20: Calling default constructor for 'TUrl' in /opt/root_src/net/http/src/THttpServer.cxx:1157; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling copy constructor for 'TMatrixTSym<double>' in /opt/root_src/math/matrix/src/TMatrixTSym.cxx:1683; 2: Calling implicit copy constructor for 'TMatrixTBase<double>' in /opt/root_src/math/matrix/src/TMatrixTSym.cxx:91; 3: Calling copy constructor for 'TObject' in /opt/root_src/math/matrix/src/TMatrixTSym.cxx:91; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:265; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming field 'fCurrentArg' is non-null in /opt/root_src/net/http/src/TRootSniffer.cxx:1334; 2: Left side of '||' is false in /opt/root_src/net/http/src/TRootSniffer.cxx:1334; 3: Assuming the condition is false in /opt/root_src/net/http/src/TRootSniffer.cxx:1334; 4: Left side of '||' is false in /opt/root_src/net/http/src/TRootSniffer.cxx:1334; 5: Assuming the condition is false in /opt/root_src/net/http/src/TRootSniffer.cxx:1334; 6: Taking false branch in /opt/root_src/net/http/src/TRootSniffer.cxx:1334; 7: Calling default constructor for 'TUrl' in /opt/root_src/net/http/src/TRootSniffer.cxx:1340; /opt,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:60320,Deployability,Update,UpdateIsOnHeap,60320,Arg' is non-null in /opt/root_src/net/http/src/TRootSniffer.cxx:1334; 2: Left side of '||' is false in /opt/root_src/net/http/src/TRootSniffer.cxx:1334; 3: Assuming the condition is false in /opt/root_src/net/http/src/TRootSniffer.cxx:1334; 4: Left side of '||' is false in /opt/root_src/net/http/src/TRootSniffer.cxx:1334; 5: Assuming the condition is false in /opt/root_src/net/http/src/TRootSniffer.cxx:1334; 6: Taking false branch in /opt/root_src/net/http/src/TRootSniffer.cxx:1334; 7: Calling default constructor for 'TUrl' in /opt/root_src/net/http/src/TRootSniffer.cxx:1340; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling implicit copy constructor for 'TProofProgressStatus' in /opt/root_src/proof/proof/src/TProofProgressStatus.cxx:86; 2: Calling copy constructor for 'TObject' in /opt/root_src/proof/proof/src/TProofProgressStatus.cxx:86; 3: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:265; 4: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 5: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming field 'fHasModRoot' is false in /opt/root_src/net/net/src/TWebFile.cxx:501; 2: Taking true branch in /opt/root_src/net/net/src/TWebFile.cxx:501; 3: Calling 'TWebFile::ReadBuffers10' in /opt/root_src/net/net/src/TWebFile.cxx:502; 4: Calling 'TWebFile::SetMsgReadBuffer10' in /opt/root_src/net/net/src/TWebFile.cxx:550; 5: Calling default constructor for 'TUrl' in /opt/root_src/net/net/src/TWebFile.cxx:268; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling default constructor for 'TPBHan,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:61537,Deployability,Update,UpdateIsOnHeap,61537,TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming field 'fHasModRoot' is false in /opt/root_src/net/net/src/TWebFile.cxx:501; 2: Taking true branch in /opt/root_src/net/net/src/TWebFile.cxx:501; 3: Calling 'TWebFile::ReadBuffers10' in /opt/root_src/net/net/src/TWebFile.cxx:502; 4: Calling 'TWebFile::SetMsgReadBuffer10' in /opt/root_src/net/net/src/TWebFile.cxx:550; 5: Calling default constructor for 'TUrl' in /opt/root_src/net/net/src/TWebFile.cxx:268; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling default constructor for 'TPBHandleDSType' in /opt/root_src/proof/proofbench/src/TProofBenchDataSet.cxx:66; 2: Calling default constructor for 'TObject' in /opt/root_src/proof/proofbench/inc/TProofBenchTypes.h:95; 3: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 4: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 5: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'stoptimer' is true in /opt/root_src/proof/proof/src/TVirtualPacketizer.cxx:246; 2: Taking true branch in /opt/root_src/proof/proof/src/TVirtualPacketizer.cxx:246; 3: Calling 'TVirtualPacketizer::HandleTimer' in /opt/root_src/proof/proof/src/TVirtualPacketizer.cxx:246; 4: Assuming the condition is false in /opt/root_src/proof/proof/src/TVirtualPacketizer.cxx:285; 5: expanded from macro 'PDB' in /opt/root_src/proof/proof/inc/TProofDebug.h:57; 6: Left side of '&&' is false in /opt/root_src/proof/proof/src/TVirtualPacketizer.cxx:285; 7: expanded from macro 'PDB' in /opt/root_src/proof/proof/inc/TPro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:63714,Deployability,Update,UpdateIsOnHeap,63714,irtualPacketizer.cxx:289; 10: Taking false branch in /opt/root_src/proof/proof/src/TVirtualPacketizer.cxx:289; 11: Taking true branch in /opt/root_src/proof/proof/src/TVirtualPacketizer.cxx:304; 12: Assuming 'gProofServ' is non-null in /opt/root_src/proof/proof/src/TVirtualPacketizer.cxx:353; 13: Taking true branch in /opt/root_src/proof/proof/src/TVirtualPacketizer.cxx:353; 14: Assuming the condition is true in /opt/root_src/proof/proof/src/TVirtualPacketizer.cxx:356; 15: Taking true branch in /opt/root_src/proof/proof/src/TVirtualPacketizer.cxx:356; 16: Assuming field 'fProgressPerf' is null in /opt/root_src/proof/proof/src/TVirtualPacketizer.cxx:360; 17: Left side of '&&' is false in /opt/root_src/proof/proof/src/TVirtualPacketizer.cxx:360; 18: Calling default constructor for 'TProofProgressInfo' in /opt/root_src/proof/proof/src/TVirtualPacketizer.cxx:397; 19: Calling default constructor for 'TObject' in /opt/root_src/proof/proof/inc/TProof.h:173; 20: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 21: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 22: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming field 'fDoTrace' is true in /opt/root_src/proof/proofplayer/src/TPerfStats.cxx:610; 2: Left side of '||' is true in /opt/root_src/proof/proofplayer/src/TPerfStats.cxx:610; 3: Assuming the condition is true in /opt/root_src/proof/proofplayer/src/TPerfStats.cxx:610; 4: Taking true branch in /opt/root_src/proof/proofplayer/src/TPerfStats.cxx:610; 5: Calling default constructor for 'TPerfEvent' in /opt/root_src/proof/proofplayer/src/TPerfStats.cxx:611; 6: Calling default constructor for 'TObject' in /opt/root_src/proof/proofplayer/src/TPerfStats.cxx:53; 7: Calling 'TStorage::UpdateIsOnHeap' in /op,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:64705,Deployability,Update,UpdateIsOnHeap,64705,ateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 21: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 22: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming field 'fDoTrace' is true in /opt/root_src/proof/proofplayer/src/TPerfStats.cxx:610; 2: Left side of '||' is true in /opt/root_src/proof/proofplayer/src/TPerfStats.cxx:610; 3: Assuming the condition is true in /opt/root_src/proof/proofplayer/src/TPerfStats.cxx:610; 4: Taking true branch in /opt/root_src/proof/proofplayer/src/TPerfStats.cxx:610; 5: Calling default constructor for 'TPerfEvent' in /opt/root_src/proof/proofplayer/src/TPerfStats.cxx:611; 6: Calling default constructor for 'TObject' in /opt/root_src/proof/proofplayer/src/TPerfStats.cxx:53; 7: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 8: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 9: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling 'operator*<double>' in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:2676; 2: Calling copy constructor for 'TMatrixTSparse<double>' in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:2655; 3: Calling implicit copy constructor for 'TMatrixTBase<double>' in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:152; 4: Calling copy constructor for 'TObject' in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:152; 5: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:265; 6: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 7: The left oper,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:65550,Deployability,Update,UpdateIsOnHeap,65550,erfStats.cxx:611; 6: Calling default constructor for 'TObject' in /opt/root_src/proof/proofplayer/src/TPerfStats.cxx:53; 7: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 8: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 9: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling 'operator*<double>' in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:2676; 2: Calling copy constructor for 'TMatrixTSparse<double>' in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:2655; 3: Calling implicit copy constructor for 'TMatrixTBase<double>' in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:152; 4: Calling copy constructor for 'TObject' in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:152; 5: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:265; 6: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 7: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming the condition is false in /opt/root_src/proof/proofplayer/src/TProofPlayer.cxx:4830; 2: Taking false branch in /opt/root_src/proof/proofplayer/src/TProofPlayer.cxx:4830; 3: Assuming the condition is false in /opt/root_src/proof/proofplayer/src/TProofPlayer.cxx:4842; 4: Loop condition is false. Execution continues on line 4865 in /opt/root_src/proof/proofplayer/src/TProofPlayer.cxx:4842; 5: 'nerti' is <= 0 in /opt/root_src/proof/proofplayer/src/TProofPlayer.cxx:4865; 6: '?' condition is false in /opt/root_src/proof/proofplayer/src/TProofPlayer.cxx:4865; 7: 'nsrti' is <= 0 in /opt/root_src/proof/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:67105,Deployability,Update,UpdateIsOnHeap,67105,yer.cxx:4830; 3: Assuming the condition is false in /opt/root_src/proof/proofplayer/src/TProofPlayer.cxx:4842; 4: Loop condition is false. Execution continues on line 4865 in /opt/root_src/proof/proofplayer/src/TProofPlayer.cxx:4842; 5: 'nerti' is <= 0 in /opt/root_src/proof/proofplayer/src/TProofPlayer.cxx:4865; 6: '?' condition is false in /opt/root_src/proof/proofplayer/src/TProofPlayer.cxx:4865; 7: 'nsrti' is <= 0 in /opt/root_src/proof/proofplayer/src/TProofPlayer.cxx:4866; 8: '?' condition is false in /opt/root_src/proof/proofplayer/src/TProofPlayer.cxx:4866; 9: Assuming the condition is true in /opt/root_src/proof/proofplayer/src/TProofPlayer.cxx:4869; 10: Taking true branch in /opt/root_src/proof/proofplayer/src/TProofPlayer.cxx:4869; 11: Calling default constructor for 'TProofProgressInfo' in /opt/root_src/proof/proofplayer/src/TProofPlayer.cxx:4871; 12: Calling default constructor for 'TObject' in /opt/root_src/proof/proof/inc/TProof.h:173; 13: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 14: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 15: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling constructor for 'RooCmdConfig' in /opt/root_src/roofit/roofitcore/src/RooCmdConfig.cxx:899; 2: Calling default constructor for 'TObject' in /opt/root_src/roofit/roofitcore/src/RooCmdConfig.cxx:58; 3: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 4: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 5: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinary,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:67736,Deployability,Update,UpdateIsOnHeap,67736,oofplayer/src/TProofPlayer.cxx:4869; 10: Taking true branch in /opt/root_src/proof/proofplayer/src/TProofPlayer.cxx:4869; 11: Calling default constructor for 'TProofProgressInfo' in /opt/root_src/proof/proofplayer/src/TProofPlayer.cxx:4871; 12: Calling default constructor for 'TObject' in /opt/root_src/proof/proof/inc/TProof.h:173; 13: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 14: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 15: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling constructor for 'RooCmdConfig' in /opt/root_src/roofit/roofitcore/src/RooCmdConfig.cxx:899; 2: Calling default constructor for 'TObject' in /opt/root_src/roofit/roofitcore/src/RooCmdConfig.cxx:58; 3: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 4: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 5: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming the condition is false in /opt/root_src/roofit/roofitcore/src/RooCustomizer.cxx:694; 2: Taking false branch in /opt/root_src/roofit/roofitcore/src/RooCustomizer.cxx:694; 3: Taking false branch in /opt/root_src/roofit/roofitcore/src/RooCustomizer.cxx:698; 4: Assuming 'arg' is non-null in /opt/root_src/roofit/roofitcore/src/RooCustomizer.cxx:704; 5: Taking false branch in /opt/root_src/roofit/roofitcore/src/RooCustomizer.cxx:704; 6: Taking false branch in /opt/root_src/roofit/roofitcore/src/RooCustomizer.cxx:709; 7: Calling constructor for 'RooCustomizer' in /opt/root_src/roofit/roofitcore/src/Roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:68979,Deployability,Update,UpdateIsOnHeap,68979,src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming the condition is false in /opt/root_src/roofit/roofitcore/src/RooCustomizer.cxx:694; 2: Taking false branch in /opt/root_src/roofit/roofitcore/src/RooCustomizer.cxx:694; 3: Taking false branch in /opt/root_src/roofit/roofitcore/src/RooCustomizer.cxx:698; 4: Assuming 'arg' is non-null in /opt/root_src/roofit/roofitcore/src/RooCustomizer.cxx:704; 5: Taking false branch in /opt/root_src/roofit/roofitcore/src/RooCustomizer.cxx:704; 6: Taking false branch in /opt/root_src/roofit/roofitcore/src/RooCustomizer.cxx:709; 7: Calling constructor for 'RooCustomizer' in /opt/root_src/roofit/roofitcore/src/RooCustomizer.cxx:714; 8: Calling constructor for 'TNamed' in /opt/root_src/roofit/roofitcore/src/RooCustomizer.cxx:245; 9: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TNamed.h:37; 10: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 11: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 12: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming field '_hashMethod' is equal to Intrinsic in /opt/root_src/roofit/roofitcore/src/RooHashTable.cxx:261; 2: Taking false branch in /opt/root_src/roofit/roofitcore/src/RooHashTable.cxx:261; 3: Calling default constructor for 'RooSetPair' in /opt/root_src/roofit/roofitcore/src/RooHashTable.cxx:263; 4: Calling default constructor for 'TObject' in /opt/root_src/roofit/roofitcore/inc/RooSetPair.h:30; 5: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 6: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 7: The left operand of '==' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:69811,Deployability,Update,UpdateIsOnHeap,69811,ofit/roofitcore/src/RooCustomizer.cxx:245; 9: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TNamed.h:37; 10: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 11: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 12: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming field '_hashMethod' is equal to Intrinsic in /opt/root_src/roofit/roofitcore/src/RooHashTable.cxx:261; 2: Taking false branch in /opt/root_src/roofit/roofitcore/src/RooHashTable.cxx:261; 3: Calling default constructor for 'RooSetPair' in /opt/root_src/roofit/roofitcore/src/RooHashTable.cxx:263; 4: Calling default constructor for 'TObject' in /opt/root_src/roofit/roofitcore/inc/RooSetPair.h:30; 5: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 6: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 7: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling 'RooMultiVarGaussian::genData' in /opt/root_src/roofit/roofitcore/src/RooMultiVarGaussian.cxx:434; 2: Taking false branch in /opt/root_src/roofit/roofitcore/src/RooMultiVarGaussian.cxx:503; 3: Assuming the condition is false in /opt/root_src/roofit/roofitcore/src/RooMultiVarGaussian.cxx:510; 4: Taking false branch in /opt/root_src/roofit/roofitcore/src/RooMultiVarGaussian.cxx:510; 5: Calling default constructor for 'TMatrixTSym<double>' in /opt/root_src/roofit/roofitcore/src/RooMultiVarGaussian.cxx:536; 6: Calling default constructor for 'TMatrixTBase<double>' in /opt/root_src/math/matrix/inc/TMat,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:70959,Deployability,Update,UpdateIsOnHeap,70959,ft operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling 'RooMultiVarGaussian::genData' in /opt/root_src/roofit/roofitcore/src/RooMultiVarGaussian.cxx:434; 2: Taking false branch in /opt/root_src/roofit/roofitcore/src/RooMultiVarGaussian.cxx:503; 3: Assuming the condition is false in /opt/root_src/roofit/roofitcore/src/RooMultiVarGaussian.cxx:510; 4: Taking false branch in /opt/root_src/roofit/roofitcore/src/RooMultiVarGaussian.cxx:510; 5: Calling default constructor for 'TMatrixTSym<double>' in /opt/root_src/roofit/roofitcore/src/RooMultiVarGaussian.cxx:536; 6: Calling default constructor for 'TMatrixTBase<double>' in /opt/root_src/math/matrix/inc/TMatrixTSym.h:54; 7: Calling default constructor for 'TObject' in /opt/root_src/math/matrix/inc/TMatrixTBase.h:115; 8: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 9: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 10: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'det' is > 0 in /opt/root_src/roofit/roofitcore/src/RooFitResult.cxx:1266; 2: Taking false branch in /opt/root_src/roofit/roofitcore/src/RooFitResult.cxx:1266; 3: Loop condition is false. Execution continues on line 1284 in /opt/root_src/roofit/roofitcore/src/RooFitResult.cxx:1276; 4: Loop condition is false. Execution continues on line 1294 in /opt/root_src/roofit/roofitcore/src/RooFitResult.cxx:1289; 5: Assuming the condition is false in /opt/root_src/roofit/roofitcore/src/RooFitResult.cxx:1298; 6: Taking false branch in /opt/root_src/roofit/roofitcore/src/RooFitResult.cxx:1298; 7: Assuming t,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:72530,Deployability,Update,UpdateIsOnHeap,72530,dition is false. Execution continues on line 1284 in /opt/root_src/roofit/roofitcore/src/RooFitResult.cxx:1276; 4: Loop condition is false. Execution continues on line 1294 in /opt/root_src/roofit/roofitcore/src/RooFitResult.cxx:1289; 5: Assuming the condition is false in /opt/root_src/roofit/roofitcore/src/RooFitResult.cxx:1298; 6: Taking false branch in /opt/root_src/roofit/roofitcore/src/RooFitResult.cxx:1298; 7: Assuming the condition is false in /opt/root_src/roofit/roofitcore/src/RooFitResult.cxx:1321; 8: Loop condition is false. Execution continues on line 1331 in /opt/root_src/roofit/roofitcore/src/RooFitResult.cxx:1321; 9: Calling default constructor for 'TMatrixTSym<double>' in /opt/root_src/roofit/roofitcore/src/RooFitResult.cxx:1331; 10: Calling default constructor for 'TMatrixTBase<double>' in /opt/root_src/math/matrix/inc/TMatrixTSym.h:54; 11: Calling default constructor for 'TObject' in /opt/root_src/math/matrix/inc/TMatrixTBase.h:115; 12: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 13: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 14: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling default constructor for 'SplitRule' in /opt/root_src/roofit/roofitcore/src/RooSimWSTool.cxx:844; 2: Calling constructor for 'TNamed' in /opt/root_src/roofit/roofitcore/inc/RooSimWSTool.h:82; 3: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TNamed.h:37; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warnin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:73244,Deployability,Update,UpdateIsOnHeap,73244,it/roofitcore/src/RooFitResult.cxx:1331; 10: Calling default constructor for 'TMatrixTBase<double>' in /opt/root_src/math/matrix/inc/TMatrixTSym.h:54; 11: Calling default constructor for 'TObject' in /opt/root_src/math/matrix/inc/TMatrixTBase.h:115; 12: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 13: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 14: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling default constructor for 'SplitRule' in /opt/root_src/roofit/roofitcore/src/RooSimWSTool.cxx:844; 2: Calling constructor for 'TNamed' in /opt/root_src/roofit/roofitcore/inc/RooSimWSTool.h:82; 3: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TNamed.h:37; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'cl' is <= 0 in /opt/root_src/roofit/roostats/src/ConfidenceBelt.cxx:176; 2: Left side of '||' is false in /opt/root_src/roofit/roostats/src/ConfidenceBelt.cxx:176; 3: Assuming 'leftside' is <= 0 in /opt/root_src/roofit/roostats/src/ConfidenceBelt.cxx:176; 4: Taking false branch in /opt/root_src/roofit/roostats/src/ConfidenceBelt.cxx:176; 5: Taking false branch in /opt/root_src/roofit/roostats/src/ConfidenceBelt.cxx:181; 6: 'hist' is non-null in /opt/root_src/roofit/roostats/src/ConfidenceBelt.cxx:185; 7: Taking true branch in /opt/root_src/roofit/roostats/src/ConfidenceBelt.cxx:185; 8: Assuming ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:74670,Deployability,Update,UpdateIsOnHeap,74670,rc/roofit/roostats/src/ConfidenceBelt.cxx:176; 2: Left side of '||' is false in /opt/root_src/roofit/roostats/src/ConfidenceBelt.cxx:176; 3: Assuming 'leftside' is <= 0 in /opt/root_src/roofit/roostats/src/ConfidenceBelt.cxx:176; 4: Taking false branch in /opt/root_src/roofit/roostats/src/ConfidenceBelt.cxx:176; 5: Taking false branch in /opt/root_src/roofit/roostats/src/ConfidenceBelt.cxx:181; 6: 'hist' is non-null in /opt/root_src/roofit/roostats/src/ConfidenceBelt.cxx:185; 7: Taking true branch in /opt/root_src/roofit/roostats/src/ConfidenceBelt.cxx:185; 8: Assuming the condition is false in /opt/root_src/roofit/roostats/src/ConfidenceBelt.cxx:194; 9: Taking false branch in /opt/root_src/roofit/roostats/src/ConfidenceBelt.cxx:194; 10: Calling constructor for 'SamplingSummary' in /opt/root_src/roofit/roostats/src/ConfidenceBelt.cxx:197; 11: Calling default constructor for 'TObject' in /opt/root_src/roofit/roostats/inc/RooStats/ConfidenceBelt.h:126; 12: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 13: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 14: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling constructor for 'TMatrixT<float>' in /opt/root_src/tmva/tmva/src/DNN/Architectures/Cpu/CpuBuffer.cxx:112; 2: Calling default constructor for 'TMatrixTBase<float>' in /opt/root_src/math/matrix/inc/TMatrixT.h:69; 3: Calling default constructor for 'TObject' in /opt/root_src/math/matrix/inc/TMatrixTBase.h:115; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:75413,Deployability,Update,UpdateIsOnHeap,75413,10: Calling constructor for 'SamplingSummary' in /opt/root_src/roofit/roostats/src/ConfidenceBelt.cxx:197; 11: Calling default constructor for 'TObject' in /opt/root_src/roofit/roostats/inc/RooStats/ConfidenceBelt.h:126; 12: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 13: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 14: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling constructor for 'TMatrixT<float>' in /opt/root_src/tmva/tmva/src/DNN/Architectures/Cpu/CpuBuffer.cxx:112; 2: Calling default constructor for 'TMatrixTBase<float>' in /opt/root_src/math/matrix/inc/TMatrixT.h:69; 3: Calling default constructor for 'TObject' in /opt/root_src/math/matrix/inc/TMatrixTBase.h:115; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling constructor for 'TMatrixT<float>' in /opt/root_src/tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx:63; 2: Calling default constructor for 'TMatrixTBase<float>' in /opt/root_src/math/matrix/inc/TMatrixT.h:69; 3: Calling default constructor for 'TObject' in /opt/root_src/math/matrix/inc/TMatrixTBase.h:115; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/b,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:76160,Deployability,Update,UpdateIsOnHeap,76160,uffer.cxx:112; 2: Calling default constructor for 'TMatrixTBase<float>' in /opt/root_src/math/matrix/inc/TMatrixT.h:69; 3: Calling default constructor for 'TObject' in /opt/root_src/math/matrix/inc/TMatrixTBase.h:115; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling constructor for 'TMatrixT<float>' in /opt/root_src/tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx:63; 2: Calling default constructor for 'TMatrixTBase<float>' in /opt/root_src/math/matrix/inc/TMatrixT.h:69; 3: Calling default constructor for 'TObject' in /opt/root_src/math/matrix/inc/TMatrixTBase.h:115; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling 'DataInputHandler::AddTree' in /opt/root_src/tmva/tmva/src/DataInputHandler.cxx:146; 2: 'tree' is non-null in /opt/root_src/tmva/tmva/src/DataInputHandler.cxx:88; 3: Taking false branch in /opt/root_src/tmva/tmva/src/DataInputHandler.cxx:88; 4: Assuming the condition is false in /opt/root_src/tmva/tmva/src/DataInputHandler.cxx:89; 5: Taking false branch in /opt/root_src/tmva/tmva/src/DataInputHandler.cxx:89; 6: Assuming the condition is false in /opt/root_src/tmva/tmva/src/DataInputHandler.cxx:90; 7: Taking false branch in /opt/root_src/tmva/tmva/src/DataInputHandler.cxx:90; 8: Assuming 'tt' is e,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:77819,Deployability,Update,UpdateIsOnHeap,77819,ition is false in /opt/root_src/tmva/tmva/src/DataInputHandler.cxx:89; 5: Taking false branch in /opt/root_src/tmva/tmva/src/DataInputHandler.cxx:89; 6: Assuming the condition is false in /opt/root_src/tmva/tmva/src/DataInputHandler.cxx:90; 7: Taking false branch in /opt/root_src/tmva/tmva/src/DataInputHandler.cxx:90; 8: Assuming 'tt' is equal to kMaxTreeType in /opt/root_src/tmva/tmva/src/DataInputHandler.cxx:96; 9: Assuming the condition is false in /opt/root_src/tmva/tmva/src/DataInputHandler.cxx:96; 10: Taking false branch in /opt/root_src/tmva/tmva/src/DataInputHandler.cxx:96; 11: Assuming the condition is false in /opt/root_src/tmva/tmva/src/DataInputHandler.cxx:105; 12: Taking false branch in /opt/root_src/tmva/tmva/src/DataInputHandler.cxx:105; 13: Calling constructor for 'TreeInfo' in /opt/root_src/tmva/tmva/src/DataInputHandler.cxx:109; 14: Calling default constructor for 'TObject' in /opt/root_src/tmva/tmva/inc/TMVA/DataInputHandler.h:56; 15: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 16: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 17: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'param' is >= field 'fNumParams' in /opt/root_src/tmva/tmva/src/LDA.cxx:83; 2: Loop condition is false. Execution continues on line 91 in /opt/root_src/tmva/tmva/src/LDA.cxx:83; 3: Assuming field 'fDebug' is false in /opt/root_src/tmva/tmva/src/LDA.cxx:94; 4: Taking false branch in /opt/root_src/tmva/tmva/src/LDA.cxx:94; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/LDA.cxx:109; 6: Taking false branch in /opt/root_src/tmva/tmva/src/LDA.cxx:109; 7: Assuming 'row' is >= field 'fNumParams' in /opt/root_src/tmva/tmva/src/LDA.cxx:111; 8: Loop condition is false. Execution contin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:79749,Deployability,Update,UpdateIsOnHeap,79749,tmva/tmva/src/LDA.cxx:111; 8: Loop condition is false. Execution continues on line 119 in /opt/root_src/tmva/tmva/src/LDA.cxx:111; 9: Assuming 'eventNumber' is >= 'numSignalEvents' in /opt/root_src/tmva/tmva/src/LDA.cxx:119; 10: Loop condition is false. Execution continues on line 127 in /opt/root_src/tmva/tmva/src/LDA.cxx:119; 11: Assuming 'eventNumber' is >= 'numBackEvents' in /opt/root_src/tmva/tmva/src/LDA.cxx:127; 12: Loop condition is false. Execution continues on line 136 in /opt/root_src/tmva/tmva/src/LDA.cxx:127; 13: Field 'fDebug' is false in /opt/root_src/tmva/tmva/src/LDA.cxx:139; 14: Taking false branch in /opt/root_src/tmva/tmva/src/LDA.cxx:139; 15: Calling constructor for 'TMatrixT<double>' in /opt/root_src/tmva/tmva/src/LDA.cxx:148; 16: Calling default constructor for 'TMatrixTBase<double>' in /opt/root_src/math/matrix/inc/TMatrixT.h:69; 17: Calling default constructor for 'TObject' in /opt/root_src/math/matrix/inc/TMatrixTBase.h:115; 18: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 19: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 20: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:273; 2: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:273; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:282; 4: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:282; 5: Calling 'Classification::GetResults' in /opt/root_src/tmva/tmva/src/Classification.cxx:285; 6: Calling default constructor for 'ClassificationResult' in /opt/root_src/tmva/tmva/src/Classification.cxx:975; 7: Calling default constructor for 'TObject' in /opt/root_src/tmva/t,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:80815,Deployability,Update,UpdateIsOnHeap,80815,orage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 20: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:273; 2: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:273; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:282; 4: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:282; 5: Calling 'Classification::GetResults' in /opt/root_src/tmva/tmva/src/Classification.cxx:285; 6: Calling default constructor for 'ClassificationResult' in /opt/root_src/tmva/tmva/src/Classification.cxx:975; 7: Calling default constructor for 'TObject' in /opt/root_src/tmva/tmva/src/Classification.cxx:52; 8: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 9: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 10: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'i' is < 'nclasses' in /opt/root_src/tmva/tmva/src/DataSetFactory.cxx:739; 2: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/DataSetFactory.cxx:739; 3: 'ivar' is < 'nvars' in /opt/root_src/tmva/tmva/src/DataSetFactory.cxx:741; 4: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/DataSetFactory.cxx:741; 5: Assuming 'ivar' is >= 'nvars' in /opt/root_src/tmva/tmva/src/DataSetFactory.cxx:741; 6: Loop condition is false. Execution continues on line 739 in /opt/root_src/tmva/tmva/src/DataSetFactory.cxx:741; 7: Assuming 'i' is >= 'nclasses' in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:82420,Deployability,Update,UpdateIsOnHeap,82420,pt/root_src/tmva/tmva/src/DataSetFactory.cxx:741; 4: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/DataSetFactory.cxx:741; 5: Assuming 'ivar' is >= 'nvars' in /opt/root_src/tmva/tmva/src/DataSetFactory.cxx:741; 6: Loop condition is false. Execution continues on line 739 in /opt/root_src/tmva/tmva/src/DataSetFactory.cxx:741; 7: Assuming 'i' is >= 'nclasses' in /opt/root_src/tmva/tmva/src/DataSetFactory.cxx:739; 8: Loop condition is false. Execution continues on line 752 in /opt/root_src/tmva/tmva/src/DataSetFactory.cxx:739; 9: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/DataSetFactory.cxx:757; 10: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/DataSetFactory.cxx:772; 11: Calling implicit copy constructor for 'TreeInfo' in /opt/root_src/tmva/tmva/src/DataSetFactory.cxx:778; 12: Calling copy constructor for 'TObject' in /opt/root_src/tmva/tmva/src/DataSetFactory.cxx:778; 13: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:265; 14: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 15: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling constructor for 'PDEFoamVect' in /opt/root_src/tmva/tmva/src/PDEFoamVect.cxx:182; 2: Calling default constructor for 'TObject' in /opt/root_src/tmva/tmva/src/PDEFoamVect.cxx:62; 3: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 4: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 5: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:83032,Deployability,Update,UpdateIsOnHeap,83032,ot_src/tmva/tmva/src/DataSetFactory.cxx:757; 10: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/DataSetFactory.cxx:772; 11: Calling implicit copy constructor for 'TreeInfo' in /opt/root_src/tmva/tmva/src/DataSetFactory.cxx:778; 12: Calling copy constructor for 'TObject' in /opt/root_src/tmva/tmva/src/DataSetFactory.cxx:778; 13: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:265; 14: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 15: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling constructor for 'PDEFoamVect' in /opt/root_src/tmva/tmva/src/PDEFoamVect.cxx:182; 2: Calling default constructor for 'TObject' in /opt/root_src/tmva/tmva/src/PDEFoamVect.cxx:62; 3: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 4: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 5: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'i' is < 'depth' in /opt/root_src/tmva/tmva/src/MethodDNN.cxx:1388; 2: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/MethodDNN.cxx:1388; 3: Calling constructor for 'TMatrixT<double>' in /opt/root_src/tmva/tmva/src/MethodDNN.cxx:1394; 4: Calling default constructor for 'TMatrixTBase<double>' in /opt/root_src/math/matrix/inc/TMatrixT.h:69; 5: Calling default constructor for 'TObject' in /opt/root_src/math/matrix/inc/TMatrixTBase.h:115; 6: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 7: Calling 'TStorage::FilledByObjectAlloc' in /opt/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:83931,Deployability,Update,UpdateIsOnHeap,83931, for 'TObject' in /opt/root_src/tmva/tmva/src/PDEFoamVect.cxx:62; 3: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 4: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 5: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'i' is < 'depth' in /opt/root_src/tmva/tmva/src/MethodDNN.cxx:1388; 2: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/MethodDNN.cxx:1388; 3: Calling constructor for 'TMatrixT<double>' in /opt/root_src/tmva/tmva/src/MethodDNN.cxx:1394; 4: Calling default constructor for 'TMatrixTBase<double>' in /opt/root_src/math/matrix/inc/TMatrixT.h:69; 5: Calling default constructor for 'TObject' in /opt/root_src/math/matrix/inc/TMatrixTBase.h:115; 6: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 7: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 8: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling 'MethodBase::BaseDir' in /opt/root_src/tmva/tmva/src/MethodBase.cxx:2085; 2: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodBase.cxx:1971; 3: Taking false branch in /opt/root_src/tmva/tmva/src/MethodBase.cxx:1971; 4: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodBase.cxx:1974; 5: Taking false branch in /opt/root_src/tmva/tmva/src/MethodBase.cxx:1974; 6: Taking false branch in /opt/root_src/tmva/tmva/src/MethodBase.cxx:1982; 7: Assuming 'sdir' is null in /opt/root_src/tmva/tmva/src/MethodBase.cxx:1987; 8: Taking true branch in /opt/root_src/tmva/tmva/sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:85358,Deployability,Update,UpdateIsOnHeap,85358,root_src/tmva/tmva/src/MethodBase.cxx:2085; 2: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodBase.cxx:1971; 3: Taking false branch in /opt/root_src/tmva/tmva/src/MethodBase.cxx:1971; 4: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodBase.cxx:1974; 5: Taking false branch in /opt/root_src/tmva/tmva/src/MethodBase.cxx:1974; 6: Taking false branch in /opt/root_src/tmva/tmva/src/MethodBase.cxx:1982; 7: Assuming 'sdir' is null in /opt/root_src/tmva/tmva/src/MethodBase.cxx:1987; 8: Taking true branch in /opt/root_src/tmva/tmva/src/MethodBase.cxx:1987; 9: Assuming field 'fModelPersistence' is true in /opt/root_src/tmva/tmva/src/MethodBase.cxx:1993; 10: Taking true branch in /opt/root_src/tmva/tmva/src/MethodBase.cxx:1993; 11: Calling default constructor for 'TObjString' in /opt/root_src/tmva/tmva/src/MethodBase.cxx:1994; 12: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TObjString.h:34; 13: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 14: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 15: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling constructor for 'TCut' in /opt/root_src/tree/tree/src/TCut.cxx:242; 2: Calling constructor for 'TNamed' in /opt/root_src/tree/tree/src/TCut.cxx:54; 3: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TNamed.h:37; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage va,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:86029,Deployability,Update,UpdateIsOnHeap,86029,c/MethodBase.cxx:1993; 10: Taking true branch in /opt/root_src/tmva/tmva/src/MethodBase.cxx:1993; 11: Calling default constructor for 'TObjString' in /opt/root_src/tmva/tmva/src/MethodBase.cxx:1994; 12: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TObjString.h:34; 13: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 14: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 15: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling constructor for 'TCut' in /opt/root_src/tree/tree/src/TCut.cxx:242; 2: Calling constructor for 'TNamed' in /opt/root_src/tree/tree/src/TCut.cxx:54; 3: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TNamed.h:37; 4: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 5: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 6: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'fname' is non-null in /opt/root_src/tree/treeviewer/src/TMemStatShow.cxx:176; 2: Left side of '||' is false in /opt/root_src/tree/treeviewer/src/TMemStatShow.cxx:176; 3: Assuming the condition is false in /opt/root_src/tree/treeviewer/src/TMemStatShow.cxx:176; 4: Left side of '||' is false in /opt/root_src/tree/treeviewer/src/TMemStatShow.cxx:176; 5: Assuming the condition is false in /opt/root_src/tree/treeviewer/src/TMemStatShow.cxx:176; 6: Taking false branch in /opt/root_src/tree/treeviewer/src/TMemStatShow.cxx:176; 7: Assuming 'f' is non-null in /opt/root_src/tree/treeviewer/src/TMemStatSho,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:87322,Deployability,update,update,87322,rand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'fname' is non-null in /opt/root_src/tree/treeviewer/src/TMemStatShow.cxx:176; 2: Left side of '||' is false in /opt/root_src/tree/treeviewer/src/TMemStatShow.cxx:176; 3: Assuming the condition is false in /opt/root_src/tree/treeviewer/src/TMemStatShow.cxx:176; 4: Left side of '||' is false in /opt/root_src/tree/treeviewer/src/TMemStatShow.cxx:176; 5: Assuming the condition is false in /opt/root_src/tree/treeviewer/src/TMemStatShow.cxx:176; 6: Taking false branch in /opt/root_src/tree/treeviewer/src/TMemStatShow.cxx:176; 7: Assuming 'f' is non-null in /opt/root_src/tree/treeviewer/src/TMemStatShow.cxx:184; 8: Taking false branch in /opt/root_src/tree/treeviewer/src/TMemStatShow.cxx:184; 9: Assuming 'fgT' is non-null in /opt/root_src/tree/treeviewer/src/TMemStatShow.cxx:189; 10: Taking false branch in /opt/root_src/tree/treeviewer/src/TMemStatShow.cxx:189; 11: Assuming 'update' is > 0 in /opt/root_src/tree/treeviewer/src/TMemStatShow.cxx:193; 12: Taking false branch in /opt/root_src/tree/treeviewer/src/TMemStatShow.cxx:193; 13: Assuming the condition is false in /opt/root_src/tree/treeviewer/src/TMemStatShow.cxx:197; 14: Taking false branch in /opt/root_src/tree/treeviewer/src/TMemStatShow.cxx:197; 15: Assuming 'fgAddressN' is > 0 in /opt/root_src/tree/treeviewer/src/TMemStatShow.cxx:205; 16: Taking false branch in /opt/root_src/tree/treeviewer/src/TMemStatShow.cxx:205; 17: Assuming 'fgEntryN' is <= 0 in /opt/root_src/tree/treeviewer/src/TMemStatShow.cxx:207; 18: Left side of '&&' is false in /opt/root_src/tree/treeviewer/src/TMemStatShow.cxx:207; 19: Assuming the condition is false in /opt/root_src/tree/treeviewer/src/TMemStatShow.cxx:208; 20: Taking false branch in /opt/root_src/tree/treeviewer/src/TMemStatShow.cxx:208; 21: Assuming the condition is false in /opt/root_src/tree/treeviewer/src/TMemStatShow.cxx:217; 22: Taking false branch in /opt/root_src/tree/treeviewer/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:89920,Deployability,Update,UpdateIsOnHeap,89920,tree/treeviewer/src/TMemStatShow.cxx:279; 30: Left side of '||' is false in /opt/root_src/tree/treeviewer/src/TMemStatShow.cxx:279; 31: 'ientry' is non-null in /opt/root_src/tree/treeviewer/src/TMemStatShow.cxx:279; 32: Taking false branch in /opt/root_src/tree/treeviewer/src/TMemStatShow.cxx:279; 33: Calling default constructor for 'TText' in /opt/root_src/tree/treeviewer/src/TMemStatShow.cxx:311; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming other != *this in /opt/root_src/tree/treeplayer/src/TFormLeafInfo.cxx:2908; 2: Calling copy constructor for 'TFormLeafInfoCast' in /opt/root_src/tree/treeplayer/src/TFormLeafInfo.cxx:2910; 3: Calling copy constructor for 'TFormLeafInfo' in /opt/root_src/tree/treeplayer/src/TFormLeafInfo.cxx:2885; 4: Calling copy constructor for 'TObject' in /opt/root_src/tree/treeplayer/src/TFormLeafInfo.cxx:88; 5: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:265; 6: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 7: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TString.h:242:67: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2336; 2: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2266; 3: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1206; 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1206; 5: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1211; 6: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1211; 7: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1217; 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1217; 9: Memory is allocated in /,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:51420,Energy Efficiency,allocate,allocate,51420,"ng false branch in /opt/root_src/net/http/src/TCivetweb.cxx:231; 5: Assuming 'serv' is non-null in /opt/root_src/net/http/src/TCivetweb.cxx:234; 6: Taking false branch in /opt/root_src/net/http/src/TCivetweb.cxx:234; 7: Calling 'make_shared<THttpCallArg, >' in /opt/root_src/net/http/src/TCivetweb.cxx:237; 8: Calling 'allocate_shared<THttpCallArg, std::allocator<THttpCallArg>, >' in /usr/include/c++/9/bits/shared_ptr.h:717; 9: Calling constructor for 'shared_ptr<THttpCallArg>' in /usr/include/c++/9/bits/shared_ptr.h:701; 10: Calling constructor for '__shared_ptr<THttpCallArg, __gnu_cxx::_S_atomic>' in /usr/include/c++/9/bits/shared_ptr.h:359; 11: Calling constructor for '__shared_count<__gnu_cxx::_S_atomic>' in /usr/include/c++/9/bits/shared_ptr_base.h:1344; 12: Calling '__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<THttpCallArg, std::allocator<THttpCallArg>, __gnu_cxx::_S_atomic>>>' in /usr/include/c++/9/bits/shared_ptr_base.h:677; 13: Calling 'allocator_traits::allocate' in /usr/include/c++/9/bits/allocated_ptr.h:97; 14: Calling 'new_allocator::allocate' in /usr/include/c++/9/bits/alloc_traits.h:444; 15: Taking false branch in /usr/include/c++/9/ext/new_allocator.h:104; 16: Uninitialized value stored to field 'fUniqueID' in /usr/include/c++/9/ext/new_allocator.h:114; 17: Returning from 'new_allocator::allocate' in /usr/include/c++/9/bits/alloc_traits.h:444; 18: Returning from 'allocator_traits::allocate' in /usr/include/c++/9/bits/allocated_ptr.h:97; 19: Calling constructor for '__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<THttpCallArg, std::allocator<THttpCallArg>, __gnu_cxx::_S_atomic>>>' in /usr/include/c++/9/bits/allocated_ptr.h:97; 20: Returning from constructor for '__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<THttpCallArg, std::allocator<THttpCallArg>, __gnu_cxx::_S_atomic>>>' in /usr/include/c++/9/bits/allocated_ptr.h:97; 21: Returning from '__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<THttpCal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:51505,Energy Efficiency,allocate,allocate,51505,"non-null in /opt/root_src/net/http/src/TCivetweb.cxx:234; 6: Taking false branch in /opt/root_src/net/http/src/TCivetweb.cxx:234; 7: Calling 'make_shared<THttpCallArg, >' in /opt/root_src/net/http/src/TCivetweb.cxx:237; 8: Calling 'allocate_shared<THttpCallArg, std::allocator<THttpCallArg>, >' in /usr/include/c++/9/bits/shared_ptr.h:717; 9: Calling constructor for 'shared_ptr<THttpCallArg>' in /usr/include/c++/9/bits/shared_ptr.h:701; 10: Calling constructor for '__shared_ptr<THttpCallArg, __gnu_cxx::_S_atomic>' in /usr/include/c++/9/bits/shared_ptr.h:359; 11: Calling constructor for '__shared_count<__gnu_cxx::_S_atomic>' in /usr/include/c++/9/bits/shared_ptr_base.h:1344; 12: Calling '__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<THttpCallArg, std::allocator<THttpCallArg>, __gnu_cxx::_S_atomic>>>' in /usr/include/c++/9/bits/shared_ptr_base.h:677; 13: Calling 'allocator_traits::allocate' in /usr/include/c++/9/bits/allocated_ptr.h:97; 14: Calling 'new_allocator::allocate' in /usr/include/c++/9/bits/alloc_traits.h:444; 15: Taking false branch in /usr/include/c++/9/ext/new_allocator.h:104; 16: Uninitialized value stored to field 'fUniqueID' in /usr/include/c++/9/ext/new_allocator.h:114; 17: Returning from 'new_allocator::allocate' in /usr/include/c++/9/bits/alloc_traits.h:444; 18: Returning from 'allocator_traits::allocate' in /usr/include/c++/9/bits/allocated_ptr.h:97; 19: Calling constructor for '__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<THttpCallArg, std::allocator<THttpCallArg>, __gnu_cxx::_S_atomic>>>' in /usr/include/c++/9/bits/allocated_ptr.h:97; 20: Returning from constructor for '__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<THttpCallArg, std::allocator<THttpCallArg>, __gnu_cxx::_S_atomic>>>' in /usr/include/c++/9/bits/allocated_ptr.h:97; 21: Returning from '__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<THttpCallArg, std::allocator<THttpCallArg>, __gnu_cxx::_S_atomic>>>' in /usr/include/c++/9/bit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:51767,Energy Efficiency,allocate,allocate,51767,"rg, std::allocator<THttpCallArg>, >' in /usr/include/c++/9/bits/shared_ptr.h:717; 9: Calling constructor for 'shared_ptr<THttpCallArg>' in /usr/include/c++/9/bits/shared_ptr.h:701; 10: Calling constructor for '__shared_ptr<THttpCallArg, __gnu_cxx::_S_atomic>' in /usr/include/c++/9/bits/shared_ptr.h:359; 11: Calling constructor for '__shared_count<__gnu_cxx::_S_atomic>' in /usr/include/c++/9/bits/shared_ptr_base.h:1344; 12: Calling '__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<THttpCallArg, std::allocator<THttpCallArg>, __gnu_cxx::_S_atomic>>>' in /usr/include/c++/9/bits/shared_ptr_base.h:677; 13: Calling 'allocator_traits::allocate' in /usr/include/c++/9/bits/allocated_ptr.h:97; 14: Calling 'new_allocator::allocate' in /usr/include/c++/9/bits/alloc_traits.h:444; 15: Taking false branch in /usr/include/c++/9/ext/new_allocator.h:104; 16: Uninitialized value stored to field 'fUniqueID' in /usr/include/c++/9/ext/new_allocator.h:114; 17: Returning from 'new_allocator::allocate' in /usr/include/c++/9/bits/alloc_traits.h:444; 18: Returning from 'allocator_traits::allocate' in /usr/include/c++/9/bits/allocated_ptr.h:97; 19: Calling constructor for '__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<THttpCallArg, std::allocator<THttpCallArg>, __gnu_cxx::_S_atomic>>>' in /usr/include/c++/9/bits/allocated_ptr.h:97; 20: Returning from constructor for '__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<THttpCallArg, std::allocator<THttpCallArg>, __gnu_cxx::_S_atomic>>>' in /usr/include/c++/9/bits/allocated_ptr.h:97; 21: Returning from '__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<THttpCallArg, std::allocator<THttpCallArg>, __gnu_cxx::_S_atomic>>>' in /usr/include/c++/9/bits/shared_ptr_base.h:677; 22: Calling '__allocated_ptr::get' in /usr/include/c++/9/bits/shared_ptr_base.h:678; 23: Calling '__to_address<std::_Sp_counted_ptr_inplace<THttpCallArg, std::allocator<THttpCallArg>, __gnu_cxx::_S_atomic>>' in /usr/include/c++/9/bit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:51862,Energy Efficiency,allocate,allocate,51862,"onstructor for 'shared_ptr<THttpCallArg>' in /usr/include/c++/9/bits/shared_ptr.h:701; 10: Calling constructor for '__shared_ptr<THttpCallArg, __gnu_cxx::_S_atomic>' in /usr/include/c++/9/bits/shared_ptr.h:359; 11: Calling constructor for '__shared_count<__gnu_cxx::_S_atomic>' in /usr/include/c++/9/bits/shared_ptr_base.h:1344; 12: Calling '__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<THttpCallArg, std::allocator<THttpCallArg>, __gnu_cxx::_S_atomic>>>' in /usr/include/c++/9/bits/shared_ptr_base.h:677; 13: Calling 'allocator_traits::allocate' in /usr/include/c++/9/bits/allocated_ptr.h:97; 14: Calling 'new_allocator::allocate' in /usr/include/c++/9/bits/alloc_traits.h:444; 15: Taking false branch in /usr/include/c++/9/ext/new_allocator.h:104; 16: Uninitialized value stored to field 'fUniqueID' in /usr/include/c++/9/ext/new_allocator.h:114; 17: Returning from 'new_allocator::allocate' in /usr/include/c++/9/bits/alloc_traits.h:444; 18: Returning from 'allocator_traits::allocate' in /usr/include/c++/9/bits/allocated_ptr.h:97; 19: Calling constructor for '__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<THttpCallArg, std::allocator<THttpCallArg>, __gnu_cxx::_S_atomic>>>' in /usr/include/c++/9/bits/allocated_ptr.h:97; 20: Returning from constructor for '__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<THttpCallArg, std::allocator<THttpCallArg>, __gnu_cxx::_S_atomic>>>' in /usr/include/c++/9/bits/allocated_ptr.h:97; 21: Returning from '__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<THttpCallArg, std::allocator<THttpCallArg>, __gnu_cxx::_S_atomic>>>' in /usr/include/c++/9/bits/shared_ptr_base.h:677; 22: Calling '__allocated_ptr::get' in /usr/include/c++/9/bits/shared_ptr_base.h:678; 23: Calling '__to_address<std::_Sp_counted_ptr_inplace<THttpCallArg, std::allocator<THttpCallArg>, __gnu_cxx::_S_atomic>>' in /usr/include/c++/9/bits/allocated_ptr.h:85; 24: Returning from '__to_address<std::_Sp_counted_ptr_inplace<THttpCallA",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:90919,Energy Efficiency,allocate,allocated,90919,ap' in /opt/root_src/core/base/inc/TObject.h:265; 6: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 7: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TString.h:242:67: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2336; 2: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2266; 3: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1206; 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1206; 5: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1211; 6: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1211; 7: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1217; 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1217; 9: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:1218; 10: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2266; 11: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2276; 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2276; 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2277; 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2281; 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1206; 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1206; 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1211; 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1211; 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1217; 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1217; 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1221; 22: P,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:90991,Energy Efficiency,allocate,allocated,90991,ledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 7: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TString.h:242:67: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2336; 2: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2266; 3: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1206; 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1206; 5: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1211; 6: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1211; 7: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1217; 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1217; 9: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:1218; 10: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2266; 11: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2276; 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2276; 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2277; 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2281; 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1206; 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1206; 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1211; 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1211; 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1217; 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1217; 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1221; 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242; /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:124226,Energy Efficiency,allocate,allocated,124226,pt/root_src/core/base/src/TString.cxx:2151; 9: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2156; 10: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:173; 11: Taking false branch in /opt/root_src/core/base/src/TString.cxx:173; 12: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:177; 13: Assuming 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:249; 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:249; 15: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:253; 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:253; 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:257; 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:257; 19: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:265; 20: Taking false branch in /opt/root_src/core/base/src/TString.cxx:265; 21: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:270; 22: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:177; 23: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2156; 24: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2158; 25: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2158; 26: Calling 'TString::Remove' in /opt/root_src/core/base/src/TString.cxx:2160; 27: Calling 'TString::Replace' in /opt/root_src/core/base/inc/TString.h:677; 28: 'pos' is > 'kNPOS' in /opt/root_src/core/base/src/TString.cxx:1002; 29: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1002; 30: 'pos' is <= 'len' in /opt/root_src/core/base/src/TString.cxx:1002; 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1002; 32: 'n1' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1007; 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1007; 34: 'n2' is >= 0 in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:124297,Energy Efficiency,allocate,allocated,124297, 'TString' in /opt/root_src/core/base/src/TString.cxx:2156; 10: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:173; 11: Taking false branch in /opt/root_src/core/base/src/TString.cxx:173; 12: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:177; 13: Assuming 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:249; 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:249; 15: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:253; 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:253; 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:257; 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:257; 19: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:265; 20: Taking false branch in /opt/root_src/core/base/src/TString.cxx:265; 21: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:270; 22: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:177; 23: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2156; 24: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2158; 25: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2158; 26: Calling 'TString::Remove' in /opt/root_src/core/base/src/TString.cxx:2160; 27: Calling 'TString::Replace' in /opt/root_src/core/base/inc/TString.h:677; 28: 'pos' is > 'kNPOS' in /opt/root_src/core/base/src/TString.cxx:1002; 29: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1002; 30: 'pos' is <= 'len' in /opt/root_src/core/base/src/TString.cxx:1002; 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1002; 32: 'n1' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1007; 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1007; 34: 'n2' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1011; 35: Taking false branch in /opt/root_src,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:129404,Energy Efficiency,allocate,allocated,129404,25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1916; 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1920; 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:105; 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:105; 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:107; 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:249; 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:249; 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:253; 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:253; 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:257; 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:257; 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:265; 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:265; 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:270; 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:107; 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1920; 41: Loop condition is false. Execution continues on line 1932 in /opt/root_src/core/base/src/TString.cxx:1926; 42: Potential leak of memory pointed to by 'str.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1933; /opt/root_src/core/base/src/TString.cxx:1933:1: warning: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2151; 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2151; 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2151; 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2151; 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cx,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:129475,Energy Efficiency,allocate,allocated,129475,: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1920; 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:105; 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:105; 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:107; 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:249; 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:249; 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:253; 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:253; 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:257; 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:257; 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:265; 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:265; 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:270; 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:107; 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1920; 41: Loop condition is false. Execution continues on line 1932 in /opt/root_src/core/base/src/TString.cxx:1926; 42: Potential leak of memory pointed to by 'str.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1933; /opt/root_src/core/base/src/TString.cxx:1933:1: warning: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2151; 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2151; 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2151; 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2151; 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2151; 6: Left side of '||' is false in /opt/root_src/core/base/src/TStrin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:132825,Energy Efficiency,allocate,allocated,132825,the condition is false in /opt/root_src/core/base/src/TString.cxx:1916; 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1916; 26: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1923; 27: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:173; 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:173; 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:177; 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:249; 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:249; 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:253; 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:253; 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:257; 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:265; 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:265; 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:270; 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:177; 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1923; 40: Loop condition is false. Execution continues on line 1932 in /opt/root_src/core/base/src/TString.cxx:1926; 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1933; /opt/root_src/core/base/src/TString.cxx:1933:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2151; 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2151; 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2151; 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2151; 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:132896,Energy Efficiency,allocate,allocated,132896, Taking false branch in /opt/root_src/core/base/src/TString.cxx:1916; 26: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1923; 27: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:173; 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:173; 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:177; 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:249; 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:249; 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:253; 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:253; 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:257; 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:265; 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:265; 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:270; 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:177; 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1923; 40: Loop condition is false. Execution continues on line 1932 in /opt/root_src/core/base/src/TString.cxx:1926; 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1933; /opt/root_src/core/base/src/TString.cxx:1933:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2151; 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2151; 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2151; 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2151; 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2151; 6: Left side of '||' is false in /opt/root_src/core/base/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:136235,Energy Efficiency,allocate,allocated,136235,x:1912; 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1916; 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1916; 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922; 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:105; 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:105; 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:107; 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:249; 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:249; 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:253; 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:253; 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:257; 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:265; 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:265; 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:270; 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:107; 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922; 40: Loop condition is false. Execution continues on line 1932 in /opt/root_src/core/base/src/TString.cxx:1926; 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1933; /opt/root_src/core/base/src/TString.cxx:2173:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2151; 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2151; 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2151; 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2151; 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2151; 6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:136306,Energy Efficiency,allocate,allocated,136306,TString.cxx:1916; 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1916; 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922; 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:105; 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:105; 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:107; 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:249; 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:249; 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:253; 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:253; 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:257; 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:265; 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:265; 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:270; 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:107; 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922; 40: Loop condition is false. Execution continues on line 1932 in /opt/root_src/core/base/src/TString.cxx:1926; 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1933; /opt/root_src/core/base/src/TString.cxx:2173:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2151; 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2151; 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2151; 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2151; 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2151; 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:215,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:139731,Energy Efficiency,allocate,allocated,139731,. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2135; 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2140; 27: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:105; 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:105; 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:107; 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:249; 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:249; 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:253; 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:253; 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:257; 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:257; 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:265; 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:265; 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:270; 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:107; 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2140; 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2172; 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2173; /opt/root_src/core/base/src/TString.cxx:2191:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2151; 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2151; 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2151; 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2151; 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2151; 6: Left side of '||' is false in /opt/root_src/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:139802,Energy Efficiency,allocate,allocated,139802, constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2140; 27: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:105; 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:105; 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:107; 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:249; 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:249; 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:253; 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:253; 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:257; 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:257; 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:265; 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:265; 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:270; 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:107; 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2140; 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2172; 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2173; /opt/root_src/core/base/src/TString.cxx:2191:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2151; 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2151; 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2151; 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2151; 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2151; 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2151; 7: Assuming 'base_out' is <= 36 in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:139974,Energy Efficiency,allocate,allocated,139974,ranch in /opt/root_src/core/base/src/TString.cxx:105; 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:107; 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:249; 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:249; 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:253; 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:253; 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:257; 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:257; 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:265; 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:265; 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:270; 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:107; 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2140; 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2172; 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2173; /opt/root_src/core/base/src/TString.cxx:2191:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2151; 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2151; 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2151; 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2151; 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2151; 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2151; 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2151; 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2151; 9: Assuming the condition is false in /opt/root_src/core/base/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:143497,Energy Efficiency,allocate,allocated,143497,. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2135; 30: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2140; 31: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:105; 32: Taking true branch in /opt/root_src/core/base/src/TString.cxx:105; 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:107; 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:249; 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:249; 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:253; 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:253; 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:257; 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:257; 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:265; 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:265; 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:270; 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:107; 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2140; 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2189; 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2190; 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2190; 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2191; /opt/root_src/core/base/src/TString.cxx:2253:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2222; 2: Loop condition is false. Execution continues on line 2232 in /opt/root_src/core/base/src/TString.cxx:2222; 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2234; 4: Taking false branch in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:143568,Energy Efficiency,allocate,allocated,143568, constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2140; 31: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:105; 32: Taking true branch in /opt/root_src/core/base/src/TString.cxx:105; 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:107; 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:249; 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:249; 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:253; 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:253; 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:257; 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:257; 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:265; 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:265; 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:270; 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:107; 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2140; 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2189; 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2190; 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2190; 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2191; /opt/root_src/core/base/src/TString.cxx:2253:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2222; 2: Loop condition is false. Execution continues on line 2232 in /opt/root_src/core/base/src/TString.cxx:2222; 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2234; 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2234; 5: Loop condition is true. E,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:143740,Energy Efficiency,allocate,allocated,143740,ranch in /opt/root_src/core/base/src/TString.cxx:105; 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:107; 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:249; 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:249; 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:253; 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:253; 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:257; 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:257; 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:265; 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:265; 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:270; 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:107; 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2140; 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2189; 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2190; 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2190; 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2191; /opt/root_src/core/base/src/TString.cxx:2253:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2222; 2: Loop condition is false. Execution continues on line 2232 in /opt/root_src/core/base/src/TString.cxx:2222; 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2234; 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2234; 5: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TString.cxx:2243; 6: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2248; 7: Taking true branch ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:145653,Energy Efficiency,allocate,allocated,145653,e condition is true in /opt/root_src/core/base/src/TString.cxx:2248; 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2248; 8: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2249; 9: '?' condition is false in /opt/root_src/core/base/src/TString.cxx:207; 10: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:208; 11: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:249; 12: Taking false branch in /opt/root_src/core/base/src/TString.cxx:249; 13: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:253; 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:253; 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:257; 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:257; 17: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:265; 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:265; 19: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:270; 20: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:208; 21: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2249; 22: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:2253; /opt/root_src/core/base/src/TString.cxx:2314:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]; 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48; 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2312; 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47; 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2313; 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2276; 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2276; 7: Taking true branch in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:145724,Energy Efficiency,allocate,allocated,145724,ing true branch in /opt/root_src/core/base/src/TString.cxx:2248; 8: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2249; 9: '?' condition is false in /opt/root_src/core/base/src/TString.cxx:207; 10: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:208; 11: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:249; 12: Taking false branch in /opt/root_src/core/base/src/TString.cxx:249; 13: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:253; 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:253; 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:257; 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:257; 17: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:265; 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:265; 19: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:270; 20: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:208; 21: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2249; 22: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:2253; /opt/root_src/core/base/src/TString.cxx:2314:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]; 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48; 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2312; 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47; 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2313; 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2276; 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2276; 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2277; 8: Ended va_list in /opt/root_src/core,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:8,Security,access,access,8,"Garbage access warnings and more.; (ROOT master of today, with xrootd off). ```; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming field 'fList' is non-null in /opt/root_src/core/base/src/TFileCollection.cxx:870; 2: Left side of '||' is false in /opt/root_src/core/base/src/TFileCollection.cxx:870; 3: Assuming the condition is false in /opt/root_src/core/base/src/TFileCollection.cxx:870; 4: Taking false branch in /opt/root_src/core/base/src/TFileCollection.cxx:870; 5: Assuming 'exclude' is non-null in /opt/root_src/core/base/src/TFileCollection.cxx:877; 6: Left side of '&&' is true in /opt/root_src/core/base/src/TFileCollection.cxx:877; 7: Assuming the condition is true in /opt/root_src/core/base/src/TFileCollection.cxx:877; 8: Taking true branch in /opt/root_src/core/base/src/TFileCollection.cxx:877; 9: Calling default constructor for 'TUri' in /opt/root_src/core/base/src/TFileCollection.cxx:880; 10: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TUri.h:73; 11: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 12: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 13: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling default constructor for 'TUri' in /opt/root_src/core/base/src/TUri.cxx:1124; 2: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TUri.h:73; 3: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 4: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 5: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/ba",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:105414,Security,secur,security,105414,":12: warning: Although the value stored to 'gnorm' is used in the enclosing expression, the value is never actually read from 'gnorm' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'gnorm' is used in the enclosing expression, the value is never actually read from 'gnorm' in /opt/root_src/core/base/src/TColor.cxx:1611; /opt/root_src/core/base/src/TColor.cxx:1611:20: warning: Although the value stored to 'bnorm' is used in the enclosing expression, the value is never actually read from 'bnorm' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'bnorm' is used in the enclosing expression, the value is never actually read from 'bnorm' in /opt/root_src/core/base/src/TColor.cxx:1611; /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141; /opt/root_src/core/base/src/TDirectory.cxx:1071:20: warning: Value stored to 'newdir' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'newdir' is never read in /opt/root_src/core/base/src/TDirectory.cxx:1071; /opt/root_src/core/base/src/TDirectory.cxx:1246:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:106217,Security,secur,security,106217,strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141; /opt/root_src/core/base/src/TDirectory.cxx:1071:20: warning: Value stored to 'newdir' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'newdir' is never read in /opt/root_src/core/base/src/TDirectory.cxx:1071; /opt/root_src/core/base/src/TDirectory.cxx:1246:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1246; /opt/root_src/core/base/src/TDirectory.cxx:1260:21: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1180; 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1180; 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1180; 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1180; 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1183; 6: 'cs' is non-null in /opt/root_src/core/base/inc/TString.h:577; 7: '?' condition is true in /opt/root_src/core/base/inc/T,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:109329,Security,secur,security,109329,; 21: Calling 'TDirectory::Delete' in /opt/root_src/core/base/src/TDirectory.cxx:1184; 22: Assuming 'gDebug' is not equal to 0 in /opt/root_src/core/base/src/TDirectory.cxx:662; 23: Taking true branch in /opt/root_src/core/base/src/TDirectory.cxx:662; 24: Assuming 'namecycle' is null in /opt/root_src/core/base/src/TDirectory.cxx:664; 25: '?' condition is false in /opt/root_src/core/base/src/TDirectory.cxx:664; 26: Passing null pointer value via 1st parameter 'buffer' in /opt/root_src/core/base/src/TDirectory.cxx:669; 27: Calling 'TDirectory::DecodeNameCycle' in /opt/root_src/core/base/src/TDirectory.cxx:669; 28: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TDirectory.cxx:1260; /opt/root_src/core/base/src/TFolder.cxx:331:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TFolder.cxx:331; /opt/root_src/core/base/src/TPRegexp.cxx:416:10: warning: Value stored to 'nrMatch' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nrMatch' is never read in /opt/root_src/core/base/src/TPRegexp.cxx:416; /opt/root_src/core/base/src/TQConnection.cxx:115:16: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that sup,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:110130,Security,secur,security,110130, 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TFolder.cxx:331; /opt/root_src/core/base/src/TPRegexp.cxx:416:10: warning: Value stored to 'nrMatch' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nrMatch' is never read in /opt/root_src/core/base/src/TPRegexp.cxx:416; /opt/root_src/core/base/src/TQConnection.cxx:115:16: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TQConnection.cxx:115; /opt/root_src/core/base/src/TQConnection.cxx:186:16: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TQConnection.cxx:186; /opt/root_src/core/base/src/TQObject.cxx:183:23: warning: Call to function 'strcpy' is insecure as it does not provide bo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:110708,Security,secur,security,110708, is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nrMatch' is never read in /opt/root_src/core/base/src/TPRegexp.cxx:416; /opt/root_src/core/base/src/TQConnection.cxx:115:16: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TQConnection.cxx:115; /opt/root_src/core/base/src/TQConnection.cxx:186:16: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TQConnection.cxx:186; /opt/root_src/core/base/src/TQObject.cxx:183:23: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TQObject.cxx:183; /opt/root_src/core/base/src/TQObject.cxx:240:21: warning: Call to function 'strcpy' is insecure as it does not provide bounding o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:111282,Security,secur,security,111282,opy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TQConnection.cxx:115; /opt/root_src/core/base/src/TQConnection.cxx:186:16: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TQConnection.cxx:186; /opt/root_src/core/base/src/TQObject.cxx:183:23: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TQObject.cxx:183; /opt/root_src/core/base/src/TQObject.cxx:240:21: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TQObject.cxx:240; /opt/root_src/core/base/src/TROOT.cxx:1169:75: warning: The right operand of '+' is a garbage value [clang-analyzer-core.UndefinedBin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:111852,Security,secur,security,111852,ounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TQConnection.cxx:186; /opt/root_src/core/base/src/TQObject.cxx:183:23: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TQObject.cxx:183; /opt/root_src/core/base/src/TQObject.cxx:240:21: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TQObject.cxx:240; /opt/root_src/core/base/src/TROOT.cxx:1169:75: warning: The right operand of '+' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:3050; 2: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406; 3: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:3050; 4: Calling 'TROOT::EndOfProcessCleanups' in /opt/root_src/core/base/src/TROOT.cxx:3051; 5: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406; 6: Calling 'TROOT::CloseFiles' in /opt/root_src/core/base/src/TROOT.cxx:1207; 7: Assuming field 'fFiles' is null in /opt/root_src/core/base/src/TROOT.cxx:1127; 8:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:115066,Security,secur,security,115066,rc/TROOT.cxx:1167; 23: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560; 24: Returning without writing to '*' in /opt/root_src/core/meta/inc/TInterpreter.h:391; 25: Returning from 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167; 26: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560; 27: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1168; 28: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560; 29: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1168; 30: The right operand of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1169; /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172; /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188; /opt/root_src/core/base/src/TRegexp.cxx:273:11: warning: 3rd function call argument is an uninitialized value [clang-analyzer-core.CallA,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:115634,Security,secur,security,115634,aking true branch in /opt/root_src/core/base/src/TROOT.cxx:1168; 30: The right operand of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1169; /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172; /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188; /opt/root_src/core/base/src/TRegexp.cxx:273:11: warning: 3rd function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]; 1: Calling 'TString::operator()' in /opt/root_src/core/base/src/TRegexp.cxx:281; 2: 'len' declared without an initial value in /opt/root_src/core/base/src/TRegexp.cxx:271; 3: Calling 'TString::Index' in /opt/root_src/core/base/src/TRegexp.cxx:272; 4: Calling 'TRegexp::Index' in /opt/root_src/core/base/src/TRegexp.cxx:263; 5: Assuming field 'fStat' is equal to kOK in /opt/root_src/core/base/src/TRegexp.cxx:211; 6: Taking false branch in /opt/root_src/core/base/src/TRegexp.cxx:211; 7: Assuming 'slen' is < 'i' in /opt/root_src/core/base/src/TRegexp.cxx:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:161795,Security,secur,security,161795,"' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48; 13: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2422; 14: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48; 15: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54; 16: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2425; 17: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48; 18: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2463; 19: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2467; 20: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48; /opt/root_src/core/base/src/TString.cxx:2515:11: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TString.cxx:2515; /opt/root_src/core/base/src/TSystem.cxx:1020:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Calling 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008; 2: Assuming the condition is false in /opt/root_src/core/base/inc/TString.h:407; 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TString.h:407; 4: Returning from 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008; 5: Left side of '||' is false in /opt/root_src/core/base/src/TSystem.cxx:1008; 6: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1008; 7: Taking false branch in /opt/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:163814,Security,secur,security,163814,/TSystem.cxx:1008; 8: Assuming 'gGlobalMutex' is null in /opt/root_src/core/base/src/TSystem.cxx:1011; 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94; 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011; 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94; 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014; 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015; 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015; 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020; /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TSystem.cxx:1243; /opt/root_src/core/base/src/TSystem.cxx:2874:65: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Assuming 'opt' is null in /opt/root_src/core/base/src/TSystem.cxx:2849; 2: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:2849; 3: Assuming 'mode' is not equal to kDefault in /opt/root_src/core/base/src/TSystem.cxx:2865; 4: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:2865; 5: 'verbose' is false in /opt/root_src/core/base/src/TSystem.cxx:2873; 6: '?' condition is false in /opt/root_src/core/base/src/TSystem.cxx:2873; 7: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:2874; 8: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:36298,Testability,test,test,36298,ing 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 5: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: 'rc' is >= 0 in /opt/root_src/main/src/xpdtest.cxx:93; 2: Taking false branch in /opt/root_src/main/src/xpdtest.cxx:93; 3: 'rc' is <= 0 in /opt/root_src/main/src/xpdtest.cxx:96; 4: Taking false branch in /opt/root_src/main/src/xpdtest.cxx:96; 5: 'verbose' is false in /opt/root_src/main/src/xpdtest.cxx:99; 6: '?' condition is false in /opt/root_src/main/src/xpdtest.cxx:99; 7: Taking false branch in /opt/root_src/main/src/xpdtest.cxx:105; 8: Taking false branch in /opt/root_src/main/src/xpdtest.cxx:110; 9: 'rc' is equal to 0 in /opt/root_src/main/src/xpdtest.cxx:134; 10: Left side of '&&' is true in /opt/root_src/main/src/xpdtest.cxx:134; 11: 'test' is <= 1 in /opt/root_src/main/src/xpdtest.cxx:134; 12: Taking false branch in /opt/root_src/main/src/xpdtest.cxx:134; 13: Calling default constructor for 'TUrl' in /opt/root_src/main/src/xpdtest.cxx:146; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming the condition is false in /opt/root_src/io/io/src/TFile.cxx:3794; 2: Taking false branch in /opt/root_src/io/io/src/TFile.cxx:3794; 3: Calling default constructor for 'TUrl' in /opt/root_src/io/io/src/TFile.cxx:3801; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Control jumps to 'case 166:' at line 313 in /opt/root_src/io/io/src/TStreamerInfoReadBuffer.cxx:194; 2: Calling default constructor for 'TObject' in /opt/root_src/io/io/src/TStreamerInfoReadBuffer.cxx:314; 3: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/bas,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/pull/7413:148,Deployability,configurat,configuration,148,"The option `dataframe_distpyspark` is superseded by `test_distrdf_pyspark`, to clarify that finding pyspark and its dependencies (like Java) during configuration is strictly needed only for the tests. Generally speaking, pyspark (and Java) are optional runtime dependencies that interest only users of the distributed RDataFrame python module with the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7413:116,Integrability,depend,dependencies,116,"The option `dataframe_distpyspark` is superseded by `test_distrdf_pyspark`, to clarify that finding pyspark and its dependencies (like Java) during configuration is strictly needed only for the tests. Generally speaking, pyspark (and Java) are optional runtime dependencies that interest only users of the distributed RDataFrame python module with the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7413:261,Integrability,depend,dependencies,261,"The option `dataframe_distpyspark` is superseded by `test_distrdf_pyspark`, to clarify that finding pyspark and its dependencies (like Java) during configuration is strictly needed only for the tests. Generally speaking, pyspark (and Java) are optional runtime dependencies that interest only users of the distributed RDataFrame python module with the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7413:148,Modifiability,config,configuration,148,"The option `dataframe_distpyspark` is superseded by `test_distrdf_pyspark`, to clarify that finding pyspark and its dependencies (like Java) during configuration is strictly needed only for the tests. Generally speaking, pyspark (and Java) are optional runtime dependencies that interest only users of the distributed RDataFrame python module with the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7413:194,Testability,test,tests,194,"The option `dataframe_distpyspark` is superseded by `test_distrdf_pyspark`, to clarify that finding pyspark and its dependencies (like Java) during configuration is strictly needed only for the tests. Generally speaking, pyspark (and Java) are optional runtime dependencies that interest only users of the distributed RDataFrame python module with the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7415:159,Modifiability,variab,variable,159,When RooFit starts for the first time it automatically loads the most optimal batch computation library. In response to issue #7361 I introduce an environment variable that permits the user to explicitly select the library to be used.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:55,Performance,load,loads,55,When RooFit starts for the first time it automatically loads the most optimal batch computation library. In response to issue #7361 I introduce an environment variable that permits the user to explicitly select the library to be used.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/issues/7417:32,Modifiability,variab,variables,32,"If one builds a model where two variables have the same name, everything go un-noticed and result can be not correct. ; An example is in the test program attached to ROOT-3555, where a simultaneous pdf is built with two Gaussian, defined with different mean and sigma parameters, having the same name.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7417
https://github.com/root-project/root/issues/7417:141,Testability,test,test,141,"If one builds a model where two variables have the same name, everything go un-noticed and result can be not correct. ; An example is in the test program attached to ROOT-3555, where a simultaneous pdf is built with two Gaussian, defined with different mean and sigma parameters, having the same name.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7417
https://github.com/root-project/root/issues/7418:3678,Availability,Error,ErrorIgnoreLevel,3678,"ing.6.22.06.so`TCling::TCling(char const*, char const*, char const* const*) at TCling.cxx:1187 [opt]; frame #18: 0x00000001344e232b libCling.6.22.06.so`TCling::TCling(this=0x00007b58000ab600, name=<unavailable>, title=<unavailable>, argv=<unavailable>) at TCling.cx; x:1511 [opt]; frame #19: 0x00000001344dc2d5 libCling.6.22.06.so`::CreateInterpreter(void *, const char **) [inlined] TCling::TCling(this=<unavailable>, name=<unavailable>, title; =<unavailable>, argv=<unavailable>) at TCling.cxx:1303:1 [opt]; frame #20: 0x00000001344dc2bc libCling.6.22.06.so`::CreateInterpreter(interpLibHandle=<unavailable>, argv=<unavailable>) at TCling.cxx:616 [opt]; frame #21: 0x0000000110404e06 libCore.6.22.06.so`TROOT::InitInterpreter(this=0x0000000110637928) at TROOT.cxx:2051:19 [opt]; frame #22: 0x0000000110404d20 libCore.6.22.06.so`ROOT::Internal::GetROOT2() at TROOT.cxx:385:22 [opt]; frame #23: 0x000000011042f4ef libCore.6.22.06.so`TEnv::Getvalue(this=0x00007b1000001340, name=""Root.ErrorIgnoreLevel"") const at TEnv.cxx:454:30 [opt]; frame #24: 0x000000011042fc2e libCore.6.22.06.so`TEnv::GetValue(this=<unavailable>, name=<unavailable>, dflt=""Print"") const at TEnv.cxx:537:27 [opt]; frame #25: 0x0000000110430b9d libCore.6.22.06.so`DefaultErrorHandler(level=4000, abort_bool=<unavailable>, location=""TUnixSystem::DispatchSignals"", msg=""segmentati; on violation"") at TError.cxx:132:33 [opt]; frame #26: 0x000000011043128a libCore.6.22.06.so`::ErrorHandler(level=4000, location=""TUnixSystem::DispatchSignals"", fmt=""%s"", ap=0x00007ffee94e0ff0) at TError.cxx; :0:7 [opt]; frame #27: 0x0000000110431667 libCore.6.22.06.so`Break(location=<unavailable>, fmt=<unavailable>) at TError.cxx:314:4 [opt]; frame #28: 0x0000000110549699 libCore.6.22.06.so`TUnixSystem::DispatchSignals(this=0x00007b5800000000, sig=kSigSegmentationViolation) at TUnixSystem.cxx:3645:10 [o; pt]; frame #29: 0x000000011095ac60 libclang_rt.tsan_osx_dynamic.dylib`__tsan::CallUserSignalHandler(__tsan::ThreadState*, bool, bool, bool, i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7418
https://github.com/root-project/root/issues/7418:4138,Availability,Error,ErrorHandler,4138,"1303:1 [opt]; frame #20: 0x00000001344dc2bc libCling.6.22.06.so`::CreateInterpreter(interpLibHandle=<unavailable>, argv=<unavailable>) at TCling.cxx:616 [opt]; frame #21: 0x0000000110404e06 libCore.6.22.06.so`TROOT::InitInterpreter(this=0x0000000110637928) at TROOT.cxx:2051:19 [opt]; frame #22: 0x0000000110404d20 libCore.6.22.06.so`ROOT::Internal::GetROOT2() at TROOT.cxx:385:22 [opt]; frame #23: 0x000000011042f4ef libCore.6.22.06.so`TEnv::Getvalue(this=0x00007b1000001340, name=""Root.ErrorIgnoreLevel"") const at TEnv.cxx:454:30 [opt]; frame #24: 0x000000011042fc2e libCore.6.22.06.so`TEnv::GetValue(this=<unavailable>, name=<unavailable>, dflt=""Print"") const at TEnv.cxx:537:27 [opt]; frame #25: 0x0000000110430b9d libCore.6.22.06.so`DefaultErrorHandler(level=4000, abort_bool=<unavailable>, location=""TUnixSystem::DispatchSignals"", msg=""segmentati; on violation"") at TError.cxx:132:33 [opt]; frame #26: 0x000000011043128a libCore.6.22.06.so`::ErrorHandler(level=4000, location=""TUnixSystem::DispatchSignals"", fmt=""%s"", ap=0x00007ffee94e0ff0) at TError.cxx; :0:7 [opt]; frame #27: 0x0000000110431667 libCore.6.22.06.so`Break(location=<unavailable>, fmt=<unavailable>) at TError.cxx:314:4 [opt]; frame #28: 0x0000000110549699 libCore.6.22.06.so`TUnixSystem::DispatchSignals(this=0x00007b5800000000, sig=kSigSegmentationViolation) at TUnixSystem.cxx:3645:10 [o; pt]; frame #29: 0x000000011095ac60 libclang_rt.tsan_osx_dynamic.dylib`__tsan::CallUserSignalHandler(__tsan::ThreadState*, bool, bool, bool, int, __sanitizer::__sanitize; r_siginfo*, void*) + 640; frame #30: 0x00000001109712ca libclang_rt.tsan_osx_dynamic.dylib`rtl_sighandler(int) + 378; frame #31: 0x00007fff2047fd7d libsystem_platform.dylib`_sigtramp + 29; frame #32: 0x00007fff2047d5d3 libsystem_platform.dylib`_platform_strlen + 19; frame #33: 0x000000011095b56d libclang_rt.tsan_osx_dynamic.dylib`wrap_strlen + 253; frame #34: 0x000000011481cae5 libO2DebugGUI.dylib`ImGui::TextEx(char const*, char const*, int) + 85; ```. ### Expec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7418
https://github.com/root-project/root/issues/7418:228,Performance,queue,queue,228,"- [x] Checked for duplicates. ### Describe the bug. When I crash with `-fsanitize=thread` enabled at compile time, I get:. ```; ==1587==WARNING: Can't read from symbolizer at fd 28; ```. and then it hangs in:. ```; * thread #1, queue = 'com.apple.main-thread', stop reason = signal SIGSTOP; frame #0: 0x00007fff2040789e libsystem_kernel.dylib`read + 10; frame #1: 0x000000011093d155 libclang_rt.tsan_osx_dynamic.dylib`__sanitizer::ReadFromFile(int, void*, unsigned long, unsigned long*, int*) + 21; frame #2: 0x000000011094797c libclang_rt.tsan_osx_dynamic.dylib`__sanitizer::SymbolizerProcess::ReadFromSymbolizer(char*, unsigned long) + 60 frame #3: 0x0000000110947668 libclang_rt.tsan_osx_dynamic.dylib`__sanitizer::SymbolizerProcess::SendCommand(char const*) + 232; frame #4: 0x0000000110947e9c libclang_rt.tsan_osx_dynamic.dylib`__sanitizer::AtosSymbolizer::SymbolizePC(unsigned long, __sanitizer::SymbolizedStack*) + 92 frame #5: 0x00000001109464fa libclang_rt.tsan_osx_dynamic.dylib`__sanitizer::Symbolizer::SymbolizePC(unsigned long) + 138 frame #6: 0x0000000110992ece libclang_rt.tsan_osx_dynamic.dylib`__tsan::SymbolizeStack(__sanitizer::StackTrace) + 94; frame #7: 0x000000011099318e libclang_rt.tsan_osx_dynamic.dylib`__tsan::ScopedReportBase::AddStack(__sanitizer::StackTrace, bool) + 46 frame #8: 0x000000011097e64f libclang_rt.tsan_osx_dynamic.dylib`__tsan::SignalUnsafeCall(__tsan::ThreadState*, unsigned long) + 287 frame #9: 0x000000011097e76a libclang_rt.tsan_osx_dynamic.dylib`__tsan::user_free(__tsan::ThreadState*, unsigned long, void*, bool) + 234; frame #10: 0x000000011097c441 libclang_rt.tsan_osx_dynamic.dylib`wrap_free + 113 frame #11: 0x0000000134b3a45b libCling.6.22.06.so`clang::ASTReader::makeModuleVisible(clang::Module*, clang::Module::NameVisibilityKind, clang::SourceLocation) + 939; frame #12: 0x00000001348dc772 libCling.6.22.06.so`clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::__1::pair<clang::IdentifierInfo*, clang::SourceLocati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7418
https://github.com/root-project/root/issues/7418:1894,Performance,load,loadModule,1894,"ic.dylib`__sanitizer::Symbolizer::SymbolizePC(unsigned long) + 138 frame #6: 0x0000000110992ece libclang_rt.tsan_osx_dynamic.dylib`__tsan::SymbolizeStack(__sanitizer::StackTrace) + 94; frame #7: 0x000000011099318e libclang_rt.tsan_osx_dynamic.dylib`__tsan::ScopedReportBase::AddStack(__sanitizer::StackTrace, bool) + 46 frame #8: 0x000000011097e64f libclang_rt.tsan_osx_dynamic.dylib`__tsan::SignalUnsafeCall(__tsan::ThreadState*, unsigned long) + 287 frame #9: 0x000000011097e76a libclang_rt.tsan_osx_dynamic.dylib`__tsan::user_free(__tsan::ThreadState*, unsigned long, void*, bool) + 234; frame #10: 0x000000011097c441 libclang_rt.tsan_osx_dynamic.dylib`wrap_free + 113 frame #11: 0x0000000134b3a45b libCling.6.22.06.so`clang::ASTReader::makeModuleVisible(clang::Module*, clang::Module::NameVisibilityKind, clang::SourceLocation) + 939; frame #12: 0x00000001348dc772 libCling.6.22.06.so`clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::__1::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) + 7106 frame #13: 0x0000000134ddcf80 libCling.6.22.06.so`clang::Sema::ActOnModuleImport(clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<std::__1::pair<clang:; :IdentifierInfo*, clang::SourceLocation> >) + 80 frame #14: 0x00000001345c73c9 libCling.6.22.06.so`cling::Interpreter::loadModule(clang::Module*, bool) + 345 * frame #15: 0x00000001344edc9a libCling.6.22.06.so`LoadModule(ModuleName=""Smatrix"", interp=0x00007b4c0000de40) at TCling.cxx:1066:18 [opt]; frame #16: 0x00000001344e29cf libCling.6.22.06.so`TCling::TCling(char const*, char const*, char const* const*) at TCling.cxx:1075:7 [opt]; frame #17: 0x00000001344e297e libCling.6.22.06.so`TCling::TCling(char const*, char const*, char const* const*) at TCling.cxx:1187 [opt]; frame #18: 0x00000001344e232b libCling.6.22.06.so`TCling::TCling(this=0x00007b58000ab600, name=<unavailable>, title=<unavailable>, argv=<unavailable>) at TCling.cx; x:1511 [opt]; frame ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7418
https://github.com/root-project/root/issues/7418:2340,Performance,load,loadModule,2340,"an::SignalUnsafeCall(__tsan::ThreadState*, unsigned long) + 287 frame #9: 0x000000011097e76a libclang_rt.tsan_osx_dynamic.dylib`__tsan::user_free(__tsan::ThreadState*, unsigned long, void*, bool) + 234; frame #10: 0x000000011097c441 libclang_rt.tsan_osx_dynamic.dylib`wrap_free + 113 frame #11: 0x0000000134b3a45b libCling.6.22.06.so`clang::ASTReader::makeModuleVisible(clang::Module*, clang::Module::NameVisibilityKind, clang::SourceLocation) + 939; frame #12: 0x00000001348dc772 libCling.6.22.06.so`clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::__1::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) + 7106 frame #13: 0x0000000134ddcf80 libCling.6.22.06.so`clang::Sema::ActOnModuleImport(clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<std::__1::pair<clang:; :IdentifierInfo*, clang::SourceLocation> >) + 80 frame #14: 0x00000001345c73c9 libCling.6.22.06.so`cling::Interpreter::loadModule(clang::Module*, bool) + 345 * frame #15: 0x00000001344edc9a libCling.6.22.06.so`LoadModule(ModuleName=""Smatrix"", interp=0x00007b4c0000de40) at TCling.cxx:1066:18 [opt]; frame #16: 0x00000001344e29cf libCling.6.22.06.so`TCling::TCling(char const*, char const*, char const* const*) at TCling.cxx:1075:7 [opt]; frame #17: 0x00000001344e297e libCling.6.22.06.so`TCling::TCling(char const*, char const*, char const* const*) at TCling.cxx:1187 [opt]; frame #18: 0x00000001344e232b libCling.6.22.06.so`TCling::TCling(this=0x00007b58000ab600, name=<unavailable>, title=<unavailable>, argv=<unavailable>) at TCling.cx; x:1511 [opt]; frame #19: 0x00000001344dc2d5 libCling.6.22.06.so`::CreateInterpreter(void *, const char **) [inlined] TCling::TCling(this=<unavailable>, name=<unavailable>, title; =<unavailable>, argv=<unavailable>) at TCling.cxx:1303:1 [opt]; frame #20: 0x00000001344dc2bc libCling.6.22.06.so`::CreateInterpreter(interpLibHandle=<unavailable>, argv=<unavailable>) at TCling.cxx:616 [opt]; frame #21: 0x000000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7418
https://github.com/root-project/root/issues/7418:2431,Performance,Load,LoadModule,2431,"clang_rt.tsan_osx_dynamic.dylib`__tsan::user_free(__tsan::ThreadState*, unsigned long, void*, bool) + 234; frame #10: 0x000000011097c441 libclang_rt.tsan_osx_dynamic.dylib`wrap_free + 113 frame #11: 0x0000000134b3a45b libCling.6.22.06.so`clang::ASTReader::makeModuleVisible(clang::Module*, clang::Module::NameVisibilityKind, clang::SourceLocation) + 939; frame #12: 0x00000001348dc772 libCling.6.22.06.so`clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::__1::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) + 7106 frame #13: 0x0000000134ddcf80 libCling.6.22.06.so`clang::Sema::ActOnModuleImport(clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<std::__1::pair<clang:; :IdentifierInfo*, clang::SourceLocation> >) + 80 frame #14: 0x00000001345c73c9 libCling.6.22.06.so`cling::Interpreter::loadModule(clang::Module*, bool) + 345 * frame #15: 0x00000001344edc9a libCling.6.22.06.so`LoadModule(ModuleName=""Smatrix"", interp=0x00007b4c0000de40) at TCling.cxx:1066:18 [opt]; frame #16: 0x00000001344e29cf libCling.6.22.06.so`TCling::TCling(char const*, char const*, char const* const*) at TCling.cxx:1075:7 [opt]; frame #17: 0x00000001344e297e libCling.6.22.06.so`TCling::TCling(char const*, char const*, char const* const*) at TCling.cxx:1187 [opt]; frame #18: 0x00000001344e232b libCling.6.22.06.so`TCling::TCling(this=0x00007b58000ab600, name=<unavailable>, title=<unavailable>, argv=<unavailable>) at TCling.cx; x:1511 [opt]; frame #19: 0x00000001344dc2d5 libCling.6.22.06.so`::CreateInterpreter(void *, const char **) [inlined] TCling::TCling(this=<unavailable>, name=<unavailable>, title; =<unavailable>, argv=<unavailable>) at TCling.cxx:1303:1 [opt]; frame #20: 0x00000001344dc2bc libCling.6.22.06.so`::CreateInterpreter(interpLibHandle=<unavailable>, argv=<unavailable>) at TCling.cxx:616 [opt]; frame #21: 0x0000000110404e06 libCore.6.22.06.so`TROOT::InitInterpreter(this=0x0000000110637928) at TROOT.cxx:2051:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7418
https://github.com/root-project/root/issues/7418:5581,Performance,race condition,race condition,5581,"(this=0x00007b1000001340, name=""Root.ErrorIgnoreLevel"") const at TEnv.cxx:454:30 [opt]; frame #24: 0x000000011042fc2e libCore.6.22.06.so`TEnv::GetValue(this=<unavailable>, name=<unavailable>, dflt=""Print"") const at TEnv.cxx:537:27 [opt]; frame #25: 0x0000000110430b9d libCore.6.22.06.so`DefaultErrorHandler(level=4000, abort_bool=<unavailable>, location=""TUnixSystem::DispatchSignals"", msg=""segmentati; on violation"") at TError.cxx:132:33 [opt]; frame #26: 0x000000011043128a libCore.6.22.06.so`::ErrorHandler(level=4000, location=""TUnixSystem::DispatchSignals"", fmt=""%s"", ap=0x00007ffee94e0ff0) at TError.cxx; :0:7 [opt]; frame #27: 0x0000000110431667 libCore.6.22.06.so`Break(location=<unavailable>, fmt=<unavailable>) at TError.cxx:314:4 [opt]; frame #28: 0x0000000110549699 libCore.6.22.06.so`TUnixSystem::DispatchSignals(this=0x00007b5800000000, sig=kSigSegmentationViolation) at TUnixSystem.cxx:3645:10 [o; pt]; frame #29: 0x000000011095ac60 libclang_rt.tsan_osx_dynamic.dylib`__tsan::CallUserSignalHandler(__tsan::ThreadState*, bool, bool, bool, int, __sanitizer::__sanitize; r_siginfo*, void*) + 640; frame #30: 0x00000001109712ca libclang_rt.tsan_osx_dynamic.dylib`rtl_sighandler(int) + 378; frame #31: 0x00007fff2047fd7d libsystem_platform.dylib`_sigtramp + 29; frame #32: 0x00007fff2047d5d3 libsystem_platform.dylib`_platform_strlen + 19; frame #33: 0x000000011095b56d libclang_rt.tsan_osx_dynamic.dylib`wrap_strlen + 253; frame #34: 0x000000011481cae5 libO2DebugGUI.dylib`ImGui::TextEx(char const*, char const*, int) + 85; ```. ### Expected behavior. Terminate correctly. ### To Reproduce. I do not have a full reproducer, however I would say:. ```cpp; int; main() {; char *foo=0;; foo[10] = 1;; }; ```. exhibits a similar behaviour when compiled with:. ```bash; c++ -fsanitize=thread foo.cc $HOME/src/sw/osx_x86-64/ROOT/latest-dev-o2/lib/libCore.so; ```. I think the thread sanitiser adds some signal handling as well and some race condition occurs. ### Setup. v6-20-08; macOS; own build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7418
https://github.com/root-project/root/pull/7419:34,Deployability,upgrade,upgrade,34,"In tests on an Apple M1 after the upgrade to LLVM 9, this new instruction selection framework emits branches / calls that expect all code to be reachable in +/- 128 MB. This cannot be guaranteed during JIT, which generates code into allocated pages on the heap and could span the entire address space of the process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7419
https://github.com/root-project/root/pull/7419:233,Energy Efficiency,allocate,allocated,233,"In tests on an Apple M1 after the upgrade to LLVM 9, this new instruction selection framework emits branches / calls that expect all code to be reachable in +/- 128 MB. This cannot be guaranteed during JIT, which generates code into allocated pages on the heap and could span the entire address space of the process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7419
https://github.com/root-project/root/pull/7419:3,Testability,test,tests,3,"In tests on an Apple M1 after the upgrade to LLVM 9, this new instruction selection framework emits branches / calls that expect all code to be reachable in +/- 128 MB. This cannot be guaranteed during JIT, which generates code into allocated pages on the heap and could span the entire address space of the process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7419
https://github.com/root-project/root/pull/7420:96,Modifiability,variab,variables,96,As reported in #7412. Most of them use of `strcpy` and nullptr in `strchr`; Also several unused variables removed; Simplify TFolder::FindObject,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7420
https://github.com/root-project/root/pull/7420:115,Usability,Simpl,Simplify,115,As reported in #7412. Most of them use of `strcpy` and nullptr in `strchr`; Also several unused variables removed; Simplify TFolder::FindObject,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7420
https://github.com/root-project/root/issues/7421:395,Availability,down,downloaded,395,"### Is your feature request related to a problem? Please describe.; I want to use the manual offline. Ideally a pdf, but an archive of html pages is fine too. ### Describe the solution you'd like; Could it be added to the Reference Guide at https://root.cern/reference/ ? And give a link to that in some visible place. ### Describe alternatives you've considered; I know I can use `wget`, but I downloaded the Reference Guide from the site (oh no, I generated it myself - but I think there's no difference? If there is, maybe it could be included into doxygen data?), and regret that Manual is missing there. Thanks a lot.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:232,Usability,Guid,Guide,232,"### Is your feature request related to a problem? Please describe.; I want to use the manual offline. Ideally a pdf, but an archive of html pages is fine too. ### Describe the solution you'd like; Could it be added to the Reference Guide at https://root.cern/reference/ ? And give a link to that in some visible place. ### Describe alternatives you've considered; I know I can use `wget`, but I downloaded the Reference Guide from the site (oh no, I generated it myself - but I think there's no difference? If there is, maybe it could be included into doxygen data?), and regret that Manual is missing there. Thanks a lot.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:420,Usability,Guid,Guide,420,"### Is your feature request related to a problem? Please describe.; I want to use the manual offline. Ideally a pdf, but an archive of html pages is fine too. ### Describe the solution you'd like; Could it be added to the Reference Guide at https://root.cern/reference/ ? And give a link to that in some visible place. ### Describe alternatives you've considered; I know I can use `wget`, but I downloaded the Reference Guide from the site (oh no, I generated it myself - but I think there's no difference? If there is, maybe it could be included into doxygen data?), and regret that Manual is missing there. Thanks a lot.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7422:284,Security,secur,security,284,```; /opt/root_src/core/clib/src/Demangle.c:326:10: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:326; /opt/root_src/core/clib/src/Demangle.c:327:10: warning: Call to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:327; /opt/root_src/core/clib/src/Demangle.c:344:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:344; /opt/root_src/core/clib/src/Demangle.c:345:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that sup,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:689,Security,secur,security,689,```; /opt/root_src/core/clib/src/Demangle.c:326:10: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:326; /opt/root_src/core/clib/src/Demangle.c:327:10: warning: Call to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:327; /opt/root_src/core/clib/src/Demangle.c:344:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:344; /opt/root_src/core/clib/src/Demangle.c:345:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that sup,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:879,Security,secur,security,879,```; /opt/root_src/core/clib/src/Demangle.c:326:10: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:326; /opt/root_src/core/clib/src/Demangle.c:327:10: warning: Call to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:327; /opt/root_src/core/clib/src/Demangle.c:344:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:344; /opt/root_src/core/clib/src/Demangle.c:345:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that sup,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:1000,Security,secur,security,1000,```; /opt/root_src/core/clib/src/Demangle.c:326:10: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:326; /opt/root_src/core/clib/src/Demangle.c:327:10: warning: Call to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:327; /opt/root_src/core/clib/src/Demangle.c:344:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:344; /opt/root_src/core/clib/src/Demangle.c:345:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that sup,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:1500,Security,secur,security,1500,ents such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:326; /opt/root_src/core/clib/src/Demangle.c:327:10: warning: Call to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:327; /opt/root_src/core/clib/src/Demangle.c:344:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:344; /opt/root_src/core/clib/src/Demangle.c:345:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:345; /opt/root_src/core/clib/src/Demangle.c:361:19: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:2066,Security,secur,security,2066,th analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:327; /opt/root_src/core/clib/src/Demangle.c:344:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:344; /opt/root_src/core/clib/src/Demangle.c:345:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:345; /opt/root_src/core/clib/src/Demangle.c:361:19: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:361; /opt/root_src/core/clib/src/Demangle.c:362:19: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:2632,Security,secur,security,2632, Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:344; /opt/root_src/core/clib/src/Demangle.c:345:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:345; /opt/root_src/core/clib/src/Demangle.c:361:19: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:361; /opt/root_src/core/clib/src/Demangle.c:362:19: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:362; /opt/root_src/core/clib/src/Demangle.c:385:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:3198,Security,secur,security,3198, Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:345; /opt/root_src/core/clib/src/Demangle.c:361:19: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:361; /opt/root_src/core/clib/src/Demangle.c:362:19: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:362; /opt/root_src/core/clib/src/Demangle.c:385:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:385; /opt/root_src/core/clib/src/Demangle.c:386:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:3764,Security,secur,security,3764, Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:361; /opt/root_src/core/clib/src/Demangle.c:362:19: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:362; /opt/root_src/core/clib/src/Demangle.c:385:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:385; /opt/root_src/core/clib/src/Demangle.c:386:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:386; /opt/root_src/core/clib/src/Demangle.c:387:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:4330,Security,secur,security,4330, Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:362; /opt/root_src/core/clib/src/Demangle.c:385:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:385; /opt/root_src/core/clib/src/Demangle.c:386:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:386; /opt/root_src/core/clib/src/Demangle.c:387:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:387; /opt/root_src/core/clib/src/Demangle.c:401:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:4896,Security,secur,security,4896, Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:385; /opt/root_src/core/clib/src/Demangle.c:386:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:386; /opt/root_src/core/clib/src/Demangle.c:387:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:387; /opt/root_src/core/clib/src/Demangle.c:401:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:401; /opt/root_src/core/clib/src/Demangle.c:402:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:5462,Security,secur,security,5462, Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:386; /opt/root_src/core/clib/src/Demangle.c:387:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:387; /opt/root_src/core/clib/src/Demangle.c:401:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:401; /opt/root_src/core/clib/src/Demangle.c:402:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:402; /opt/root_src/core/clib/src/Demangle.c:416:10: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:6028,Security,secur,security,6028, Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:387; /opt/root_src/core/clib/src/Demangle.c:401:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:401; /opt/root_src/core/clib/src/Demangle.c:402:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:402; /opt/root_src/core/clib/src/Demangle.c:416:10: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:416; /opt/root_src/core/clib/src/Demangle.c:417:10: warning: Call to function 'strncat' is insecure as it does not provide security checks intro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:6594,Security,secur,security,6594, Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:401; /opt/root_src/core/clib/src/Demangle.c:402:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:402; /opt/root_src/core/clib/src/Demangle.c:416:10: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:416; /opt/root_src/core/clib/src/Demangle.c:417:10: warning: Call to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:417; /opt/root_src/core/clib/src/Demangle.c:505:7: warning: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:6999,Security,secur,security,6999,ts such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:402; /opt/root_src/core/clib/src/Demangle.c:416:10: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:416; /opt/root_src/core/clib/src/Demangle.c:417:10: warning: Call to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:417; /opt/root_src/core/clib/src/Demangle.c:505:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:7189,Security,secur,security,7189,bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:402; /opt/root_src/core/clib/src/Demangle.c:416:10: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:416; /opt/root_src/core/clib/src/Demangle.c:417:10: warning: Call to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:417; /opt/root_src/core/clib/src/Demangle.c:505:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:7310,Security,secur,security,7310,c/core/clib/src/Demangle.c:402; /opt/root_src/core/clib/src/Demangle.c:416:10: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:416; /opt/root_src/core/clib/src/Demangle.c:417:10: warning: Call to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:417; /opt/root_src/core/clib/src/Demangle.c:505:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:505; /opt/root_src/core/clib/src/Demangle.c:1316:22: warning: Null pointer passed to 1st parameter expecting 'non,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:7647,Security,secur,security,7647, to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:416; /opt/root_src/core/clib/src/Demangle.c:417:10: warning: Call to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:417; /opt/root_src/core/clib/src/Demangle.c:505:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:505; /opt/root_src/core/clib/src/Demangle.c:1316:22: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Assuming 'mangled' is not equal to NULL in /opt/root_src/core/clib/src/Demangle.c:503; 2: Left side of '&&' is true in /opt/root_src/core/clib/src/Demangle.c:503; 3: Assuming the condition is true in /opt/root_src/core/clib/src/Demangle.c:503; 4: Taking true branch in /opt/root_src/core/clib/sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:7836,Security,secur,security,7836,nctions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:416; /opt/root_src/core/clib/src/Demangle.c:417:10: warning: Call to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:417; /opt/root_src/core/clib/src/Demangle.c:505:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:505; /opt/root_src/core/clib/src/Demangle.c:1316:22: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Assuming 'mangled' is not equal to NULL in /opt/root_src/core/clib/src/Demangle.c:503; 2: Left side of '&&' is true in /opt/root_src/core/clib/src/Demangle.c:503; 3: Assuming the condition is true in /opt/root_src/core/clib/src/Demangle.c:503; 4: Taking true branch in /opt/root_src/core/clib/src/Demangle.c:503; 5: Assuming the condition is false in /opt/root_src/core/clib/src/Demangle.c:507; 6: Taking false branch in /opt/root_src,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:7956,Security,secur,security,7956,rning: Call to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:417; /opt/root_src/core/clib/src/Demangle.c:505:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:505; /opt/root_src/core/clib/src/Demangle.c:1316:22: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Assuming 'mangled' is not equal to NULL in /opt/root_src/core/clib/src/Demangle.c:503; 2: Left side of '&&' is true in /opt/root_src/core/clib/src/Demangle.c:503; 3: Assuming the condition is true in /opt/root_src/core/clib/src/Demangle.c:503; 4: Taking true branch in /opt/root_src/core/clib/src/Demangle.c:503; 5: Assuming the condition is false in /opt/root_src/core/clib/src/Demangle.c:507; 6: Taking false branch in /opt/root_src/core/clib/src/Demangle.c:507; 7: Assuming the condition is false in /opt/root_src/core/clib/src/Demangle.c:519; 8: expanded from macro 'AUTO_DEMANGLING' in /op,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:12872,Security,secur,security,12872,rc/core/clib/res/Demangle.h:58; 46: Left side of '||' is true in /opt/root_src/core/clib/src/Demangle.c:1311; 47: Assuming the condition is true in /opt/root_src/core/clib/src/Demangle.c:1311; 48: expanded from macro 'isdigit' in /usr/include/ctype.h:192; 49: expanded from macro '__isctype' in /usr/include/ctype.h:89; 50: Taking true branch in /opt/root_src/core/clib/src/Demangle.c:1311; 51: Value assigned to 'mangled' in /opt/root_src/core/clib/src/Demangle.c:1314; 52: Calling 'string_append' in /opt/root_src/core/clib/src/Demangle.c:1315; 53: Assuming 's' is equal to NULL in /opt/root_src/core/clib/src/Demangle.c:2679; 54: Left side of '||' is true in /opt/root_src/core/clib/src/Demangle.c:2679; 55: Returning from 'string_append' in /opt/root_src/core/clib/src/Demangle.c:1315; 56: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/clib/src/Demangle.c:1316; /opt/root_src/core/clib/src/Demangle.c:1528:10: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:1528; /opt/root_src/core/clib/src/Demangle.c:1910:34: warning: Array access (via field 'typevec') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming 'mangled' is not equal to NULL in /opt/root_src/core/clib/src/Demangle.c:503; 2: Left side of '&&' is true in /opt/root_src/core/clib/src/Demangle.c:503; 3: Assuming the condition is true in /opt/root_src/core/clib/src/Demangle.c:503; 4: Taking true branch in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:13062,Security,secur,security,13062,rue in /opt/root_src/core/clib/src/Demangle.c:1311; 48: expanded from macro 'isdigit' in /usr/include/ctype.h:192; 49: expanded from macro '__isctype' in /usr/include/ctype.h:89; 50: Taking true branch in /opt/root_src/core/clib/src/Demangle.c:1311; 51: Value assigned to 'mangled' in /opt/root_src/core/clib/src/Demangle.c:1314; 52: Calling 'string_append' in /opt/root_src/core/clib/src/Demangle.c:1315; 53: Assuming 's' is equal to NULL in /opt/root_src/core/clib/src/Demangle.c:2679; 54: Left side of '||' is true in /opt/root_src/core/clib/src/Demangle.c:2679; 55: Returning from 'string_append' in /opt/root_src/core/clib/src/Demangle.c:1315; 56: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/clib/src/Demangle.c:1316; /opt/root_src/core/clib/src/Demangle.c:1528:10: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:1528; /opt/root_src/core/clib/src/Demangle.c:1910:34: warning: Array access (via field 'typevec') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming 'mangled' is not equal to NULL in /opt/root_src/core/clib/src/Demangle.c:503; 2: Left side of '&&' is true in /opt/root_src/core/clib/src/Demangle.c:503; 3: Assuming the condition is true in /opt/root_src/core/clib/src/Demangle.c:503; 4: Taking true branch in /opt/root_src/core/clib/src/Demangle.c:503; 5: Null pointer value stored to field 'typevec' in /opt/root_src/core/clib/src/Demangle.c:505; 6: Assumin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:13183,Security,secur,security,13183,clude/ctype.h:89; 50: Taking true branch in /opt/root_src/core/clib/src/Demangle.c:1311; 51: Value assigned to 'mangled' in /opt/root_src/core/clib/src/Demangle.c:1314; 52: Calling 'string_append' in /opt/root_src/core/clib/src/Demangle.c:1315; 53: Assuming 's' is equal to NULL in /opt/root_src/core/clib/src/Demangle.c:2679; 54: Left side of '||' is true in /opt/root_src/core/clib/src/Demangle.c:2679; 55: Returning from 'string_append' in /opt/root_src/core/clib/src/Demangle.c:1315; 56: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/clib/src/Demangle.c:1316; /opt/root_src/core/clib/src/Demangle.c:1528:10: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:1528; /opt/root_src/core/clib/src/Demangle.c:1910:34: warning: Array access (via field 'typevec') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming 'mangled' is not equal to NULL in /opt/root_src/core/clib/src/Demangle.c:503; 2: Left side of '&&' is true in /opt/root_src/core/clib/src/Demangle.c:503; 3: Assuming the condition is true in /opt/root_src/core/clib/src/Demangle.c:503; 4: Taking true branch in /opt/root_src/core/clib/src/Demangle.c:503; 5: Null pointer value stored to field 'typevec' in /opt/root_src/core/clib/src/Demangle.c:505; 6: Assuming the condition is false in /opt/root_src/core/clib/src/Demangle.c:507; 7: Taking false branch in /opt/root_src/core/clib/src/Demangle.c:507; 8: Assuming the cond,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:13468,Security,access,access,13468, '||' is true in /opt/root_src/core/clib/src/Demangle.c:2679; 55: Returning from 'string_append' in /opt/root_src/core/clib/src/Demangle.c:1315; 56: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/clib/src/Demangle.c:1316; /opt/root_src/core/clib/src/Demangle.c:1528:10: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:1528; /opt/root_src/core/clib/src/Demangle.c:1910:34: warning: Array access (via field 'typevec') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming 'mangled' is not equal to NULL in /opt/root_src/core/clib/src/Demangle.c:503; 2: Left side of '&&' is true in /opt/root_src/core/clib/src/Demangle.c:503; 3: Assuming the condition is true in /opt/root_src/core/clib/src/Demangle.c:503; 4: Taking true branch in /opt/root_src/core/clib/src/Demangle.c:503; 5: Null pointer value stored to field 'typevec' in /opt/root_src/core/clib/src/Demangle.c:505; 6: Assuming the condition is false in /opt/root_src/core/clib/src/Demangle.c:507; 7: Taking false branch in /opt/root_src/core/clib/src/Demangle.c:507; 8: Assuming the condition is false in /opt/root_src/core/clib/src/Demangle.c:519; 9: expanded from macro 'AUTO_DEMANGLING' in /opt/root_src/core/clib/res/Demangle.h:56; 10: Left side of '||' is false in /opt/root_src/core/clib/src/Demangle.c:519; 11: expanded from macro 'AUTO_DEMANGLING' in /opt/root_src/core/clib/res/Demangle.h:56; 12: Assuming the condition ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:19565,Security,access,access,19565,"863; 64: Calling 'get_count' in /opt/root_src/core/clib/src/Demangle.c:1904; 65: Assuming the condition is false in /opt/root_src/core/clib/src/Demangle.c:1810; 66: Taking false branch in /opt/root_src/core/clib/src/Demangle.c:1810; 67: Assuming the condition is false in /opt/root_src/core/clib/src/Demangle.c:1818; 68: expanded from macro 'isdigit' in /usr/include/ctype.h:192; 69: expanded from macro '__isctype' in /usr/include/ctype.h:89; 70: Taking false branch in /opt/root_src/core/clib/src/Demangle.c:1818; 71: Returning the value 1, which participates in a condition later in /opt/root_src/core/clib/src/Demangle.c:1836; 72: Returning from 'get_count' in /opt/root_src/core/clib/src/Demangle.c:1904; 73: Left side of '||' is false in /opt/root_src/core/clib/src/Demangle.c:1904; 74: Assuming 'n' is < field 'ntypes' in /opt/root_src/core/clib/src/Demangle.c:1904; 75: Taking false branch in /opt/root_src/core/clib/src/Demangle.c:1904; 76: Array access (via field 'typevec') results in a null pointer dereference in /opt/root_src/core/clib/src/Demangle.c:1910; /opt/root_src/core/clib/src/Demangle.c:2264:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2264; /opt/root_src/core/clib/src/Demangle.c:2683:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:19797,Security,secur,security,19797," false branch in /opt/root_src/core/clib/src/Demangle.c:1810; 67: Assuming the condition is false in /opt/root_src/core/clib/src/Demangle.c:1818; 68: expanded from macro 'isdigit' in /usr/include/ctype.h:192; 69: expanded from macro '__isctype' in /usr/include/ctype.h:89; 70: Taking false branch in /opt/root_src/core/clib/src/Demangle.c:1818; 71: Returning the value 1, which participates in a condition later in /opt/root_src/core/clib/src/Demangle.c:1836; 72: Returning from 'get_count' in /opt/root_src/core/clib/src/Demangle.c:1904; 73: Left side of '||' is false in /opt/root_src/core/clib/src/Demangle.c:1904; 74: Assuming 'n' is < field 'ntypes' in /opt/root_src/core/clib/src/Demangle.c:1904; 75: Taking false branch in /opt/root_src/core/clib/src/Demangle.c:1904; 76: Array access (via field 'typevec') results in a null pointer dereference in /opt/root_src/core/clib/src/Demangle.c:1910; /opt/root_src/core/clib/src/Demangle.c:2264:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2264; /opt/root_src/core/clib/src/Demangle.c:2683:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:19986,Security,secur,security,19986,":1818; 68: expanded from macro 'isdigit' in /usr/include/ctype.h:192; 69: expanded from macro '__isctype' in /usr/include/ctype.h:89; 70: Taking false branch in /opt/root_src/core/clib/src/Demangle.c:1818; 71: Returning the value 1, which participates in a condition later in /opt/root_src/core/clib/src/Demangle.c:1836; 72: Returning from 'get_count' in /opt/root_src/core/clib/src/Demangle.c:1904; 73: Left side of '||' is false in /opt/root_src/core/clib/src/Demangle.c:1904; 74: Assuming 'n' is < field 'ntypes' in /opt/root_src/core/clib/src/Demangle.c:1904; 75: Taking false branch in /opt/root_src/core/clib/src/Demangle.c:1904; 76: Array access (via field 'typevec') results in a null pointer dereference in /opt/root_src/core/clib/src/Demangle.c:1910; /opt/root_src/core/clib/src/Demangle.c:2264:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2264; /opt/root_src/core/clib/src/Demangle.c:2683:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:20106,Security,secur,security,20106,"/opt/root_src/core/clib/src/Demangle.c:1818; 71: Returning the value 1, which participates in a condition later in /opt/root_src/core/clib/src/Demangle.c:1836; 72: Returning from 'get_count' in /opt/root_src/core/clib/src/Demangle.c:1904; 73: Left side of '||' is false in /opt/root_src/core/clib/src/Demangle.c:1904; 74: Assuming 'n' is < field 'ntypes' in /opt/root_src/core/clib/src/Demangle.c:1904; 75: Taking false branch in /opt/root_src/core/clib/src/Demangle.c:1904; 76: Array access (via field 'typevec') results in a null pointer dereference in /opt/root_src/core/clib/src/Demangle.c:1910; /opt/root_src/core/clib/src/Demangle.c:2264:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2264; /opt/root_src/core/clib/src/Demangle.c:2683:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2683; /opt/root_src/core/clib/src/Demangle.c:2697:7: warning: Call to function 'memcpy' is insecure as it does n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:20444,Security,secur,security,20444,ntypes' in /opt/root_src/core/clib/src/Demangle.c:1904; 75: Taking false branch in /opt/root_src/core/clib/src/Demangle.c:1904; 76: Array access (via field 'typevec') results in a null pointer dereference in /opt/root_src/core/clib/src/Demangle.c:1910; /opt/root_src/core/clib/src/Demangle.c:2264:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2264; /opt/root_src/core/clib/src/Demangle.c:2683:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2683; /opt/root_src/core/clib/src/Demangle.c:2697:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:20633,Security,secur,security,20633,ccess (via field 'typevec') results in a null pointer dereference in /opt/root_src/core/clib/src/Demangle.c:1910; /opt/root_src/core/clib/src/Demangle.c:2264:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2264; /opt/root_src/core/clib/src/Demangle.c:2683:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2683; /opt/root_src/core/clib/src/Demangle.c:2697:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:20753,Security,secur,security,20753,warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2264; /opt/root_src/core/clib/src/Demangle.c:2683:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2683; /opt/root_src/core/clib/src/Demangle.c:2697:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2697; /opt/root_src/core/clib/src/Demangle.c:2711:7: warning: Call to function 'memcpy' is insecure as it does n,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:21091,Security,secur,security,21091,insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2264; /opt/root_src/core/clib/src/Demangle.c:2683:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2683; /opt/root_src/core/clib/src/Demangle.c:2697:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2697; /opt/root_src/core/clib/src/Demangle.c:2711:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:21280,Security,secur,security,21280,nts or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2264; /opt/root_src/core/clib/src/Demangle.c:2683:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2683; /opt/root_src/core/clib/src/Demangle.c:2697:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2697; /opt/root_src/core/clib/src/Demangle.c:2711:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:21400,Security,secur,security,21400,warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2683; /opt/root_src/core/clib/src/Demangle.c:2697:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2697; /opt/root_src/core/clib/src/Demangle.c:2711:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2711; /opt/root_src/core/clib/src/Demangle.c:2752:7: warning: Call to function 'memcpy' is insecure as it does n,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:21738,Security,secur,security,21738,insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2683; /opt/root_src/core/clib/src/Demangle.c:2697:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2697; /opt/root_src/core/clib/src/Demangle.c:2711:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2711; /opt/root_src/core/clib/src/Demangle.c:2752:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:21927,Security,secur,security,21927,nts or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2683; /opt/root_src/core/clib/src/Demangle.c:2697:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2697; /opt/root_src/core/clib/src/Demangle.c:2711:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2711; /opt/root_src/core/clib/src/Demangle.c:2752:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:22047,Security,secur,security,22047,warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2697; /opt/root_src/core/clib/src/Demangle.c:2711:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2711; /opt/root_src/core/clib/src/Demangle.c:2752:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2752; /opt/root_src/core/clib/src/attach.c:146:3: warning: Call to function 'memset' is insecure as it does not ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:22385,Security,secur,security,22385,insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2697; /opt/root_src/core/clib/src/Demangle.c:2711:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2711; /opt/root_src/core/clib/src/Demangle.c:2752:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2752; /opt/root_src/core/clib/src/attach.c:146:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in t,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:22574,Security,secur,security,22574,nts or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2697; /opt/root_src/core/clib/src/Demangle.c:2711:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2711; /opt/root_src/core/clib/src/Demangle.c:2752:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2752; /opt/root_src/core/clib/src/attach.c:146:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:22694,Security,secur,security,22694,warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2711; /opt/root_src/core/clib/src/Demangle.c:2752:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2752; /opt/root_src/core/clib/src/attach.c:146:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:146; /opt/root_src/core/clib/src/attach.c:147:3: warning: Call to function 'strncpy' is insecure as it does not provi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:23029,Security,secur,security,23029,s insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2711; /opt/root_src/core/clib/src/Demangle.c:2752:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2752; /opt/root_src/core/clib/src/attach.c:146:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:146; /opt/root_src/core/clib/src/attach.c:147:3: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in t,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:23218,Security,secur,security,23218,uments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2711; /opt/root_src/core/clib/src/Demangle.c:2752:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2752; /opt/root_src/core/clib/src/attach.c:146:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:146; /opt/root_src/core/clib/src/attach.c:147:3: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:23338,Security,secur,security,23338,7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2752; /opt/root_src/core/clib/src/attach.c:146:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:146; /opt/root_src/core/clib/src/attach.c:147:3: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:147; /opt/root_src/core/clib/src/attach.c:186:7: warning: Call to function 'memcpy' is insecure as it does not provi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:23671,Security,secur,security,23671,cpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2752; /opt/root_src/core/clib/src/attach.c:146:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:146; /opt/root_src/core/clib/src/attach.c:147:3: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:147; /opt/root_src/core/clib/src/attach.c:186:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in t,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:23861,Security,secur,security,23861, arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2752; /opt/root_src/core/clib/src/attach.c:146:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:146; /opt/root_src/core/clib/src/attach.c:147:3: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:147; /opt/root_src/core/clib/src/attach.c:186:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:23982,Security,secur,security,23982,:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:146; /opt/root_src/core/clib/src/attach.c:147:3: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:147; /opt/root_src/core/clib/src/attach.c:186:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:186; /opt/root_src/core/clib/src/mcalloc.c:39:7: warning: Call to function 'memset' is insecure as it does not provide ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:24315,Security,secur,security,24315,et' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:146; /opt/root_src/core/clib/src/attach.c:147:3: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:147; /opt/root_src/core/clib/src/attach.c:186:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:186; /opt/root_src/core/clib/src/mcalloc.c:39:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:24504,Security,secur,security,24504,h arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:146; /opt/root_src/core/clib/src/attach.c:147:3: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:147; /opt/root_src/core/clib/src/attach.c:186:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:186; /opt/root_src/core/clib/src/mcalloc.c:39:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:24624,Security,secur,security,24624,: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:147; /opt/root_src/core/clib/src/attach.c:186:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:186; /opt/root_src/core/clib/src/mcalloc.c:39:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mcalloc.c:39; /opt/root_src/core/clib/src/mmalloc.c:74:3: warning: Call to function 'memset' is insecure as it does not provide s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:24956,Security,secur,security,24956,rncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:147; /opt/root_src/core/clib/src/attach.c:186:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:186; /opt/root_src/core/clib/src/mcalloc.c:39:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mcalloc.c:39; /opt/root_src/core/clib/src/mmalloc.c:74:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:25145,Security,secur,security,25145,ngth arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:147; /opt/root_src/core/clib/src/attach.c:186:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:186; /opt/root_src/core/clib/src/mcalloc.c:39:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mcalloc.c:39; /opt/root_src/core/clib/src/mmalloc.c:74:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:25265,Security,secur,security,25265,86:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:186; /opt/root_src/core/clib/src/mcalloc.c:39:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mcalloc.c:39; /opt/root_src/core/clib/src/mmalloc.c:74:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:74; /opt/root_src/core/clib/src/mmalloc.c:115:7: warning: Call to function 'memset' is insecure as it does not provide ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:25597,Security,secur,security,25597,memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:186; /opt/root_src/core/clib/src/mcalloc.c:39:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mcalloc.c:39; /opt/root_src/core/clib/src/mmalloc.c:74:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:74; /opt/root_src/core/clib/src/mmalloc.c:115:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:25786,Security,secur,security,25786,ength arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:186; /opt/root_src/core/clib/src/mcalloc.c:39:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mcalloc.c:39; /opt/root_src/core/clib/src/mmalloc.c:74:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:74; /opt/root_src/core/clib/src/mmalloc.c:115:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:25906,Security,secur,security,25906,39:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mcalloc.c:39; /opt/root_src/core/clib/src/mmalloc.c:74:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:74; /opt/root_src/core/clib/src/mmalloc.c:115:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:115; /opt/root_src/core/clib/src/mmalloc.c:116:7: warning: Call to function 'memcpy' is insecure as it does not provid,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:26239,Security,secur,security,26239,emset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mcalloc.c:39; /opt/root_src/core/clib/src/mmalloc.c:74:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:74; /opt/root_src/core/clib/src/mmalloc.c:115:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:115; /opt/root_src/core/clib/src/mmalloc.c:116:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in th,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:26428,Security,secur,security,26428,ngth arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mcalloc.c:39; /opt/root_src/core/clib/src/mmalloc.c:74:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:74; /opt/root_src/core/clib/src/mmalloc.c:115:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:115; /opt/root_src/core/clib/src/mmalloc.c:116:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:26548,Security,secur,security,26548,4:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:74; /opt/root_src/core/clib/src/mmalloc.c:115:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:115; /opt/root_src/core/clib/src/mmalloc.c:116:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:116; /opt/root_src/core/clib/src/mrealloc.c:77:16: warning: Call to function 'memcpy' is insecure as it does not prov,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:26882,Security,secur,security,26882,set' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:74; /opt/root_src/core/clib/src/mmalloc.c:115:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:115; /opt/root_src/core/clib/src/mmalloc.c:116:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:116; /opt/root_src/core/clib/src/mrealloc.c:77:16: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in t,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:27071,Security,secur,security,27071,th arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:74; /opt/root_src/core/clib/src/mmalloc.c:115:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:115; /opt/root_src/core/clib/src/mmalloc.c:116:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:116; /opt/root_src/core/clib/src/mrealloc.c:77:16: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:27191,Security,secur,security,27191,:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:115; /opt/root_src/core/clib/src/mmalloc.c:116:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:116; /opt/root_src/core/clib/src/mrealloc.c:77:16: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/mrealloc.c:77; /opt/root_src/core/clib/src/mrealloc.c:120:16: warning: Call to function 'memmove' is insecure as it does not p,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:27526,Security,secur,security,27526,t' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:115; /opt/root_src/core/clib/src/mmalloc.c:116:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:116; /opt/root_src/core/clib/src/mrealloc.c:77:16: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/mrealloc.c:77; /opt/root_src/core/clib/src/mrealloc.c:120:16: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:27715,Security,secur,security,27715, arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:115; /opt/root_src/core/clib/src/mmalloc.c:116:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:116; /opt/root_src/core/clib/src/mrealloc.c:77:16: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/mrealloc.c:77; /opt/root_src/core/clib/src/mrealloc.c:120:16: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:27835,Security,secur,security,27835,7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:116; /opt/root_src/core/clib/src/mrealloc.c:77:16: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/mrealloc.c:77; /opt/root_src/core/clib/src/mrealloc.c:120:16: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/core/clib/src/mrealloc.c:120; /opt/root_src/core/clib/src/mrealloc.c:142:13: warning: Call to function 'memcpy' is insecure as it does ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:28172,Security,secur,security,28172, is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:116; /opt/root_src/core/clib/src/mrealloc.c:77:16: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/mrealloc.c:77; /opt/root_src/core/clib/src/mrealloc.c:120:16: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/core/clib/src/mrealloc.c:120; /opt/root_src/core/clib/src/mrealloc.c:142:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduce,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:28362,Security,secur,security,28362,uments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/mmalloc.c:116; /opt/root_src/core/clib/src/mrealloc.c:77:16: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/mrealloc.c:77; /opt/root_src/core/clib/src/mrealloc.c:120:16: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/core/clib/src/mrealloc.c:120; /opt/root_src/core/clib/src/mrealloc.c:142:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:28483,Security,secur,security,28483,warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/mrealloc.c:77; /opt/root_src/core/clib/src/mrealloc.c:120:16: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/core/clib/src/mrealloc.c:120; /opt/root_src/core/clib/src/mrealloc.c:142:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/mrealloc.c:142; /opt/root_src/core/clib/src/Demangle.c; /opt/root_src/core/clib/src/attach.c; /opt/root_src/core/clib/src/m,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:28821,Security,secur,security,28821,ced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/mrealloc.c:77; /opt/root_src/core/clib/src/mrealloc.c:120:16: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/core/clib/src/mrealloc.c:120; /opt/root_src/core/clib/src/mrealloc.c:142:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/mrealloc.c:142; /opt/root_src/core/clib/src/Demangle.c; /opt/root_src/core/clib/src/attach.c; /opt/root_src/core/clib/src/mcalloc.c; /opt/root_src/core/clib/src/mmalloc.c; /opt/root_src/core/clib/src/mrealloc.c; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:29010,Security,secur,security,29010,ced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/mrealloc.c:77; /opt/root_src/core/clib/src/mrealloc.c:120:16: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/core/clib/src/mrealloc.c:120; /opt/root_src/core/clib/src/mrealloc.c:142:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/mrealloc.c:142; /opt/root_src/core/clib/src/Demangle.c; /opt/root_src/core/clib/src/attach.c; /opt/root_src/core/clib/src/mcalloc.c; /opt/root_src/core/clib/src/mmalloc.c; /opt/root_src/core/clib/src/mrealloc.c; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:29130,Security,secur,security,29130,ced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/mrealloc.c:77; /opt/root_src/core/clib/src/mrealloc.c:120:16: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/core/clib/src/mrealloc.c:120; /opt/root_src/core/clib/src/mrealloc.c:142:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/mrealloc.c:142; /opt/root_src/core/clib/src/Demangle.c; /opt/root_src/core/clib/src/attach.c; /opt/root_src/core/clib/src/mcalloc.c; /opt/root_src/core/clib/src/mmalloc.c; /opt/root_src/core/clib/src/mrealloc.c; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7423:11172,Performance,load,loaded,11172,"rning from 'Decl::getSemanticDC' in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:440; 21: Returning pointer, which participates in a condition later in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:440; 22: Returning from 'Decl::getDeclContext' in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:444; 23: Returning pointer, which participates in a condition later in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:444; 24: Returning from 'Decl::getDeclContext' in /opt/root_src/core/clingutils/src/TClingUtils.cxx:2246; 25: Assuming 'ctxt' is non-null in /opt/root_src/core/clingutils/src/TClingUtils.cxx:2247; 26: Left side of '&&' is true in /opt/root_src/core/clingutils/src/TClingUtils.cxx:2247; 27: Loop condition is false. Execution continues on line 2250 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:2247; 28: Returning pointer (loaded from 'ctxt'), which participates in a condition later in /opt/root_src/core/clingutils/src/TClingUtils.cxx:2250; 29: Returning from 'GetEnclosingSpace' in /opt/root_src/core/clingutils/src/TClingUtils.cxx:2285; 30: Calling 'WriteNamespaceHeader' in /opt/root_src/core/clingutils/src/TClingUtils.cxx:2285; 31: 'ctxt' is non-null in /opt/root_src/core/clingutils/src/TClingUtils.cxx:2266; 32: Left side of '&&' is true in /opt/root_src/core/clingutils/src/TClingUtils.cxx:2266; 33: Calling 'DeclContext::isNamespace' in /opt/root_src/core/clingutils/src/TClingUtils.cxx:2266; 34: Returning the value 1, which participates in a condition later in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:1863; 35: Returning from 'DeclContext::isNamespace' in /opt/root_src/core/clingutils/src/TClingUtils.cxx:2266; 36: Taking true branch in /opt/root_src/core/clingutils/src/TClingUtils.cxx:2266; 37: Assuming 'indent' is >= 'closing_brackets' in /opt/root_src/core/clingutils/src/TClingUtils.cxx:2268; 38: Loop cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7423
https://github.com/root-project/root/issues/7423:15339,Security,secur,security,15339,e branch in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3175; 16: Assuming the object is not a 'CXXRecordDecl' in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3190; 17: 'parent_clxx' initialized to a null pointer value in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3190; 18: 'parent_clxx' is null in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3192; 19: Taking false branch in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3192; 20: 'index1' is null in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3194; 21: Taking false branch in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3194; 22: Forming reference to null pointer in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3230; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3287:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3287; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3288:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3288; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3289:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7423
https://github.com/root-project/root/issues/7423:15929,Security,secur,security,15929,ils/src/TClingUtils.cxx:3194; 22: Forming reference to null pointer in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3230; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3287:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3287; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3288:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3288; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3289:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3289; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3290:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7423
https://github.com/root-project/root/issues/7423:16519,Security,secur,security,16519, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3287; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3288:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3288; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3289:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3289; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3290:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3290; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3291:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7423
https://github.com/root-project/root/issues/7423:17109,Security,secur,security,17109, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3288; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3289:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3289; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3290:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3290; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3291:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3291; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3292:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7423
https://github.com/root-project/root/issues/7423:17699,Security,secur,security,17699, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3289; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3290:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3290; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3291:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3291; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3292:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3292; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3293:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7423
https://github.com/root-project/root/issues/7423:18289,Security,secur,security,18289, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3290; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3291:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3291; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3292:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3292; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3293:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3293; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3294:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7423
https://github.com/root-project/root/issues/7423:18879,Security,secur,security,18879, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3291; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3292:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3292; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3293:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3293; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3294:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3294; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3295:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7423
https://github.com/root-project/root/issues/7423:19469,Security,secur,security,19469, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3292; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3293:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3293; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3294:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3294; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3295:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3295; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3296:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7423
https://github.com/root-project/root/issues/7423:20059,Security,secur,security,20059, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3293; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3294:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3294; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3295:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3295; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3296:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3296; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3297:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7423
https://github.com/root-project/root/issues/7423:20649,Security,secur,security,20649, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3294; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3295:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3295; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3296:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3296; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3297:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3297; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3298:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7423
https://github.com/root-project/root/issues/7423:21239,Security,secur,security,21239, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3295; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3296:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3296; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3297:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3297; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3298:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3298; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3299:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7423
https://github.com/root-project/root/issues/7423:21829,Security,secur,security,21829, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3296; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3297:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3297; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3298:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3298; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3299:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3299; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3300:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7423
https://github.com/root-project/root/issues/7423:22419,Security,secur,security,22419, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3297; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3298:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3298; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3299:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3299; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3300:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3300; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3301:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7423
https://github.com/root-project/root/issues/7423:23009,Security,secur,security,23009, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3298; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3299:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3299; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3300:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3300; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3301:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3301; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3302:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7423
https://github.com/root-project/root/issues/7423:23599,Security,secur,security,23599, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3299; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3300:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3300; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3301:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3301; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3302:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3302; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3303:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7423
https://github.com/root-project/root/issues/7423:24189,Security,secur,security,24189, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3300; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3301:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3301; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3302:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3302; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3303:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3303; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3304:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7423
https://github.com/root-project/root/issues/7423:24779,Security,secur,security,24779, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3301; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3302:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3302; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3303:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3303; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3304:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3304; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3305:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7423
https://github.com/root-project/root/issues/7423:25369,Security,secur,security,25369, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3302; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3303:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3303; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3304:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3304; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3305:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3305; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3306:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7423
https://github.com/root-project/root/issues/7423:25959,Security,secur,security,25959, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3303; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3304:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3304; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3305:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3305; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3306:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3306; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3307:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7423
https://github.com/root-project/root/issues/7423:26549,Security,secur,security,26549, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3304; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3305:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3305; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3306:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3306; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3307:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3307; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3308:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7423
https://github.com/root-project/root/issues/7423:27139,Security,secur,security,27139, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3305; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3306:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3306; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3307:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3307; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3308:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3308; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3309:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7423
https://github.com/root-project/root/issues/7423:27729,Security,secur,security,27729, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3306; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3307:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3307; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3308:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3308; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3309:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3309; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3310:20: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7423
https://github.com/root-project/root/issues/7423:28319,Security,secur,security,28319, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3307; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3308:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3308; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3309:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3309; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3310:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3310; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3311:21: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7423
https://github.com/root-project/root/issues/7423:28909,Security,secur,security,28909, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3308; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3309:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3309; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3310:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3310; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3311:21: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3311; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3312:21: warning: Call to function 'strcpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7423
https://github.com/root-project/root/issues/7423:29499,Security,secur,security,29499, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3309; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3310:20: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3310; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3311:21: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3311; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3312:21: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3312; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3688:18: warning: Called C++ object pointer is null [,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7423
https://github.com/root-project/root/issues/7423:30089,Security,secur,security,30089, functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3310; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3311:21: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3311; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3312:21: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3312; /opt/root_src/core/clingutils/src/TClingUtils.cxx:3688:18: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming the object is a 'TemplateTypeParmDecl' in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3609; 2: 'ttpdPtr' is non-null in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3610; 3: Taking false branch in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3610; 4: Calling 'TemplateTypeParmDecl::hasDefaultArgument' in /opt/root_src/core/clingutils/src/TClingUtils.cxx:3611; 5: Calling 'DefaultArgStorage::isSet' in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1282; 6: Calling 'PointerUnion::isNull' in ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7423
https://github.com/root-project/root/issues/7423:9757,Testability,assert,assert,9757,"nclude/llvm/ADT/PointerUnion.h:199; 8: Returning from 'PointerUnion::is' in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:269; 9: Returning the value 1, which participates in a condition later in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:269; 10: Returning from 'Decl::isInSemaDC' in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:439; 11: Taking true branch in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:439; 12: Calling 'Decl::getSemanticDC' in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:440; 13: Calling 'PointerUnion::get' in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:277; 14: Left side of '&&' is true in /opt/root_src/interpreter/llvm/src/include/llvm/ADT/PointerUnion.h:206; 15: '?' condition is true in /opt/root_src/interpreter/llvm/src/include/llvm/ADT/PointerUnion.h:206; 16: expanded from macro 'assert' in /usr/include/assert.h:93; 17: Returning pointer, which participates in a condition later in /opt/root_src/interpreter/llvm/src/include/llvm/ADT/PointerUnion.h:207; 18: Returning from 'PointerUnion::get' in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:277; 19: Returning pointer, which participates in a condition later in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:277; 20: Returning from 'Decl::getSemanticDC' in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:440; 21: Returning pointer, which participates in a condition later in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:440; 22: Returning from 'Decl::getDeclContext' in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:444; 23: Returning pointer, which participates in a condition later in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:444; 24: Return",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7423
https://github.com/root-project/root/issues/7423:9781,Testability,assert,assert,9781,"nclude/llvm/ADT/PointerUnion.h:199; 8: Returning from 'PointerUnion::is' in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:269; 9: Returning the value 1, which participates in a condition later in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:269; 10: Returning from 'Decl::isInSemaDC' in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:439; 11: Taking true branch in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:439; 12: Calling 'Decl::getSemanticDC' in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:440; 13: Calling 'PointerUnion::get' in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:277; 14: Left side of '&&' is true in /opt/root_src/interpreter/llvm/src/include/llvm/ADT/PointerUnion.h:206; 15: '?' condition is true in /opt/root_src/interpreter/llvm/src/include/llvm/ADT/PointerUnion.h:206; 16: expanded from macro 'assert' in /usr/include/assert.h:93; 17: Returning pointer, which participates in a condition later in /opt/root_src/interpreter/llvm/src/include/llvm/ADT/PointerUnion.h:207; 18: Returning from 'PointerUnion::get' in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:277; 19: Returning pointer, which participates in a condition later in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:277; 20: Returning from 'Decl::getSemanticDC' in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:440; 21: Returning pointer, which participates in a condition later in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:440; 22: Returning from 'Decl::getDeclContext' in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:444; 23: Returning pointer, which participates in a condition later in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:444; 24: Return",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7423
https://github.com/root-project/root/issues/7424:314,Performance,load,loaded,314,```; /opt/root_src/core/cont/inc/TBits.h:82:60: warning: Using copy-ctor but class TBits::TReference has a trivial copy-ctor but non trivial assign operator [clazy-rule-of-two-soft]; /opt/root_src/core/cont/inc/TBtree.h:248:40: warning: Access to field 'fInnerMaxIndex' results in a dereference of a null pointer (loaded from field 'fTree') [clang-analyzer-core.NullDereference]; 1: Passing null pointer value via 2nd parameter 't' in /opt/root_src/core/cont/src/TBtree.cxx:1279; 2: Calling constructor for 'TBtInnerNode' in /opt/root_src/core/cont/src/TBtree.cxx:1279; 3: Passing null pointer value via 3rd parameter 't' in /opt/root_src/core/cont/src/TBtree.cxx:688; 4: Calling constructor for 'TBtNode' in /opt/root_src/core/cont/src/TBtree.cxx:688; 5: Assuming 'p' is equal to null in /opt/root_src/core/cont/src/TBtree.cxx:546; 6: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:546; 7: 't' is equal to null in /opt/root_src/core/cont/src/TBtree.cxx:547; 8: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 9: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:547; 10: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 11: Loop condition is false. Exiting loop in /opt/root_src/core/cont/src/TBtree.cxx:547; 12: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:123; 13: Null pointer value stored to field 'fTree' in /opt/root_src/core/cont/src/TBtree.cxx:548; 14: Returning from constructor for 'TBtNode' in /opt/root_src/core/cont/src/TBtree.cxx:688; 15: Calling 'TBtInnerNode::MaxIndex' in /opt/root_src/core/cont/src/TBtree.cxx:690; 16: Access to field 'fInnerMaxIndex' results in a dereference of a null pointer (loaded from field 'fTree') in /opt/root_src/core/cont/inc/TBtree.h:248; /opt/root_src/core/cont/inc/TBtree.h:314:41: warning: Access to field 'fLeafMaxIndex' results in a dereference of a null pointer (loaded from field 'fTree') [clang-analyzer-core.NullDerefere,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7424
https://github.com/root-project/root/issues/7424:1739,Performance,load,loaded,1739,e/cont/src/TBtree.cxx:688; 5: Assuming 'p' is equal to null in /opt/root_src/core/cont/src/TBtree.cxx:546; 6: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:546; 7: 't' is equal to null in /opt/root_src/core/cont/src/TBtree.cxx:547; 8: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 9: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:547; 10: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 11: Loop condition is false. Exiting loop in /opt/root_src/core/cont/src/TBtree.cxx:547; 12: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:123; 13: Null pointer value stored to field 'fTree' in /opt/root_src/core/cont/src/TBtree.cxx:548; 14: Returning from constructor for 'TBtNode' in /opt/root_src/core/cont/src/TBtree.cxx:688; 15: Calling 'TBtInnerNode::MaxIndex' in /opt/root_src/core/cont/src/TBtree.cxx:690; 16: Access to field 'fInnerMaxIndex' results in a dereference of a null pointer (loaded from field 'fTree') in /opt/root_src/core/cont/inc/TBtree.h:248; /opt/root_src/core/cont/inc/TBtree.h:314:41: warning: Access to field 'fLeafMaxIndex' results in a dereference of a null pointer (loaded from field 'fTree') [clang-analyzer-core.NullDereference]; 1: Passing null pointer value via 3rd parameter 't' in /opt/root_src/core/cont/src/TBtree.cxx:1695; 2: Calling constructor for 'TBtLeafNode' in /opt/root_src/core/cont/src/TBtree.cxx:1695; 3: Passing null pointer value via 3rd parameter 't' in /opt/root_src/core/cont/src/TBtree.cxx:1363; 4: Calling constructor for 'TBtNode' in /opt/root_src/core/cont/src/TBtree.cxx:1363; 5: Assuming 'p' is equal to null in /opt/root_src/core/cont/src/TBtree.cxx:546; 6: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:546; 7: 't' is equal to null in /opt/root_src/core/cont/src/TBtree.cxx:547; 8: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 9: Taking true branch in /opt/root_src/co,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7424
https://github.com/root-project/root/issues/7424:1941,Performance,load,loaded,1941, to null in /opt/root_src/core/cont/src/TBtree.cxx:547; 8: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 9: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:547; 10: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 11: Loop condition is false. Exiting loop in /opt/root_src/core/cont/src/TBtree.cxx:547; 12: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:123; 13: Null pointer value stored to field 'fTree' in /opt/root_src/core/cont/src/TBtree.cxx:548; 14: Returning from constructor for 'TBtNode' in /opt/root_src/core/cont/src/TBtree.cxx:688; 15: Calling 'TBtInnerNode::MaxIndex' in /opt/root_src/core/cont/src/TBtree.cxx:690; 16: Access to field 'fInnerMaxIndex' results in a dereference of a null pointer (loaded from field 'fTree') in /opt/root_src/core/cont/inc/TBtree.h:248; /opt/root_src/core/cont/inc/TBtree.h:314:41: warning: Access to field 'fLeafMaxIndex' results in a dereference of a null pointer (loaded from field 'fTree') [clang-analyzer-core.NullDereference]; 1: Passing null pointer value via 3rd parameter 't' in /opt/root_src/core/cont/src/TBtree.cxx:1695; 2: Calling constructor for 'TBtLeafNode' in /opt/root_src/core/cont/src/TBtree.cxx:1695; 3: Passing null pointer value via 3rd parameter 't' in /opt/root_src/core/cont/src/TBtree.cxx:1363; 4: Calling constructor for 'TBtNode' in /opt/root_src/core/cont/src/TBtree.cxx:1363; 5: Assuming 'p' is equal to null in /opt/root_src/core/cont/src/TBtree.cxx:546; 6: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:546; 7: 't' is equal to null in /opt/root_src/core/cont/src/TBtree.cxx:547; 8: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 9: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:547; 10: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 11: Loop condition is false. Exiting loop in /opt/root_src/core/cont/src/TBtr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7424
https://github.com/root-project/root/issues/7424:3367,Performance,load,loaded,3367,/cont/src/TBtree.cxx:1363; 5: Assuming 'p' is equal to null in /opt/root_src/core/cont/src/TBtree.cxx:546; 6: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:546; 7: 't' is equal to null in /opt/root_src/core/cont/src/TBtree.cxx:547; 8: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 9: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:547; 10: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 11: Loop condition is false. Exiting loop in /opt/root_src/core/cont/src/TBtree.cxx:547; 12: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:123; 13: Null pointer value stored to field 'fTree' in /opt/root_src/core/cont/src/TBtree.cxx:548; 14: Returning from constructor for 'TBtNode' in /opt/root_src/core/cont/src/TBtree.cxx:1363; 15: Calling 'TBtLeafNode::MaxIndex' in /opt/root_src/core/cont/src/TBtree.cxx:1365; 16: Access to field 'fLeafMaxIndex' results in a dereference of a null pointer (loaded from field 'fTree') in /opt/root_src/core/cont/inc/TBtree.h:314; /opt/root_src/core/cont/src/TArrayC.cxx:114:13: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Null pointer value stored to field 'fArray' in /opt/root_src/core/cont/src/TArrayC.cxx:36; 2: Assuming 'n' is > 0 in /opt/root_src/core/cont/src/TArrayC.cxx:37; 3: Taking true branch in /opt/root_src/core/cont/src/TArrayC.cxx:37; 4: Calling 'TArrayC::Set' in /opt/root_src/core/cont/src/TArrayC.cxx:37; 5: 'n' is >= 0 in /opt/root_src/core/cont/src/TArrayC.cxx:107; 6: Taking false branch in /opt/root_src/core/cont/src/TArrayC.cxx:107; 7: 'n' is not equal to field 'fN' in /opt/root_src/core/cont/src/TArrayC.cxx:108; 8: Taking true branch in /opt/root_src/core/cont/src/TArrayC.cxx:108; 9: 'temp' initialized to a null pointer value in /opt/root_src/core/cont/src/TArrayC.cxx:109; 10: 'n' is not equal to 0 in /opt/root_src/core/cont/src/TArrayC.cxx:110;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7424
https://github.com/root-project/root/issues/7424:15987,Performance,load,loaded,15987,"estBit' in /opt/root_src/core/cont/src/TRefArray.cxx:211; 34: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:211; 35: Calling 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 36: Assuming the condition is true in /opt/root_src/core/base/inc/TObject.h:187; 37: Returning the value 1, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 38: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 39: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:213; 40: Assuming the condition is true in /opt/root_src/core/cont/src/TRefArray.cxx:214; 41: 'valid' is true in /opt/root_src/core/cont/src/TRefArray.cxx:215; 42: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:215; 43: 'valid' is true in /opt/root_src/core/cont/src/TRefArray.cxx:254; 44: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:254; 45: Returning the value 1 (loaded from 'valid'), which participates in a condition later in /opt/root_src/core/cont/src/TRefArray.cxx:258; 46: Returning from 'TRefArray::GetObjectUID' in /opt/root_src/core/cont/src/TRefArray.cxx:347; 47: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:347; 48: Array access (via field 'fUIDs') results in a null pointer dereference in /opt/root_src/core/cont/src/TRefArray.cxx:348; /opt/root_src/core/cont/src/TRefArray.cxx:348:30: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]; 1: Assuming 'obj' is non-null in /opt/root_src/core/cont/src/TRefArray.cxx:378; 2: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:378; 3: Calling 'TRefArray::Last' in /opt/root_src/core/cont/src/TRefArray.cxx:379; 4: Assuming the condition is false in /opt/root_src/core/cont/src/TRefArray.cxx:575; 5: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:575; 6: Returning pointer, which participates in a condition later in /opt/root_src/core/cont/src/TRef",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7424
https://github.com/root-project/root/issues/7424:19780,Performance,load,loaded,19780,"7; 28: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 29: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:213; 30: Assuming the condition is false in /opt/root_src/core/cont/src/TRefArray.cxx:214; 31: 'valid' is false in /opt/root_src/core/cont/src/TRefArray.cxx:215; 32: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:215; 33: Assuming the condition is true in /opt/root_src/core/cont/src/TRefArray.cxx:218; 34: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:218; 35: Assuming 'gDebug' is <= 3 in /opt/root_src/core/cont/src/TRefArray.cxx:222; 36: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:222; 37: 'valid' is true in /opt/root_src/core/cont/src/TRefArray.cxx:254; 38: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:254; 39: Returning without writing to 'uid' in /opt/root_src/core/cont/src/TRefArray.cxx:258; 40: Returning the value 1 (loaded from 'valid'), which participates in a condition later in /opt/root_src/core/cont/src/TRefArray.cxx:258; 41: Returning from 'TRefArray::GetObjectUID' in /opt/root_src/core/cont/src/TRefArray.cxx:347; 42: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:347; 43: Assigned value is garbage or undefined in /opt/root_src/core/cont/src/TRefArray.cxx:348; /opt/root_src/core/cont/src/TRefArray.cxx:386:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]; 1: Assuming 'obj' is non-null in /opt/root_src/core/cont/src/TRefArray.cxx:378; 2: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:378; 3: Assuming the condition is true in /opt/root_src/core/cont/src/TRefArray.cxx:379; 4: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:379; 5: Assuming 'i' is < field 'fSize' in /opt/root_src/core/cont/src/TRefArray.cxx:381; 6: Loop condition is true. Entering loop body in /opt/root_src/core/cont/src/TRefArray.cxx:381; 7: Assuming the condition is ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7424
https://github.com/root-project/root/issues/7424:22792,Performance,load,loaded,22792,"TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 17: Assuming the condition is true in /opt/root_src/core/base/inc/TObject.h:187; 18: Returning the value 1, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 19: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 20: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:213; 21: Assuming the condition is false in /opt/root_src/core/cont/src/TRefArray.cxx:214; 22: 'valid' is false in /opt/root_src/core/cont/src/TRefArray.cxx:215; 23: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:215; 24: Assuming the condition is true in /opt/root_src/core/cont/src/TRefArray.cxx:218; 25: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:218; 26: Assuming 'gDebug' is <= 3 in /opt/root_src/core/cont/src/TRefArray.cxx:222; 27: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:222; 28: 'valid' is true in /opt/root_src/core/cont/src/TRefArray.cxx:254; 29: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:254; 30: Returning without writing to 'uid' in /opt/root_src/core/cont/src/TRefArray.cxx:258; 31: Returning the value 1 (loaded from 'valid'), which participates in a condition later in /opt/root_src/core/cont/src/TRefArray.cxx:258; 32: Returning from 'TRefArray::GetObjectUID' in /opt/root_src/core/cont/src/TRefArray.cxx:385; 33: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:385; 34: Assigned value is garbage or undefined in /opt/root_src/core/cont/src/TRefArray.cxx:386; /opt/root_src/core/cont/inc/TBits.h; /opt/root_src/core/cont/inc/TBtree.h; /opt/root_src/core/cont/src/TArrayC.cxx; /opt/root_src/core/cont/src/TArrayD.cxx; /opt/root_src/core/cont/src/TArrayF.cxx; /opt/root_src/core/cont/src/TArrayI.cxx; /opt/root_src/core/cont/src/TArrayL.cxx; /opt/root_src/core/cont/src/TArrayL64.cxx; /opt/root_src/core/cont/src/TArrayS.cxx; /opt/root_src/core/cont/src/TRefArray.cxx; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7424
https://github.com/root-project/root/issues/7424:237,Security,Access,Access,237,```; /opt/root_src/core/cont/inc/TBits.h:82:60: warning: Using copy-ctor but class TBits::TReference has a trivial copy-ctor but non trivial assign operator [clazy-rule-of-two-soft]; /opt/root_src/core/cont/inc/TBtree.h:248:40: warning: Access to field 'fInnerMaxIndex' results in a dereference of a null pointer (loaded from field 'fTree') [clang-analyzer-core.NullDereference]; 1: Passing null pointer value via 2nd parameter 't' in /opt/root_src/core/cont/src/TBtree.cxx:1279; 2: Calling constructor for 'TBtInnerNode' in /opt/root_src/core/cont/src/TBtree.cxx:1279; 3: Passing null pointer value via 3rd parameter 't' in /opt/root_src/core/cont/src/TBtree.cxx:688; 4: Calling constructor for 'TBtNode' in /opt/root_src/core/cont/src/TBtree.cxx:688; 5: Assuming 'p' is equal to null in /opt/root_src/core/cont/src/TBtree.cxx:546; 6: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:546; 7: 't' is equal to null in /opt/root_src/core/cont/src/TBtree.cxx:547; 8: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 9: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:547; 10: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 11: Loop condition is false. Exiting loop in /opt/root_src/core/cont/src/TBtree.cxx:547; 12: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:123; 13: Null pointer value stored to field 'fTree' in /opt/root_src/core/cont/src/TBtree.cxx:548; 14: Returning from constructor for 'TBtNode' in /opt/root_src/core/cont/src/TBtree.cxx:688; 15: Calling 'TBtInnerNode::MaxIndex' in /opt/root_src/core/cont/src/TBtree.cxx:690; 16: Access to field 'fInnerMaxIndex' results in a dereference of a null pointer (loaded from field 'fTree') in /opt/root_src/core/cont/inc/TBtree.h:248; /opt/root_src/core/cont/inc/TBtree.h:314:41: warning: Access to field 'fLeafMaxIndex' results in a dereference of a null pointer (loaded from field 'fTree') [clang-analyzer-core.NullDerefere,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7424
https://github.com/root-project/root/issues/7424:1662,Security,Access,Access,1662,e/cont/src/TBtree.cxx:688; 5: Assuming 'p' is equal to null in /opt/root_src/core/cont/src/TBtree.cxx:546; 6: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:546; 7: 't' is equal to null in /opt/root_src/core/cont/src/TBtree.cxx:547; 8: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 9: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:547; 10: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 11: Loop condition is false. Exiting loop in /opt/root_src/core/cont/src/TBtree.cxx:547; 12: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:123; 13: Null pointer value stored to field 'fTree' in /opt/root_src/core/cont/src/TBtree.cxx:548; 14: Returning from constructor for 'TBtNode' in /opt/root_src/core/cont/src/TBtree.cxx:688; 15: Calling 'TBtInnerNode::MaxIndex' in /opt/root_src/core/cont/src/TBtree.cxx:690; 16: Access to field 'fInnerMaxIndex' results in a dereference of a null pointer (loaded from field 'fTree') in /opt/root_src/core/cont/inc/TBtree.h:248; /opt/root_src/core/cont/inc/TBtree.h:314:41: warning: Access to field 'fLeafMaxIndex' results in a dereference of a null pointer (loaded from field 'fTree') [clang-analyzer-core.NullDereference]; 1: Passing null pointer value via 3rd parameter 't' in /opt/root_src/core/cont/src/TBtree.cxx:1695; 2: Calling constructor for 'TBtLeafNode' in /opt/root_src/core/cont/src/TBtree.cxx:1695; 3: Passing null pointer value via 3rd parameter 't' in /opt/root_src/core/cont/src/TBtree.cxx:1363; 4: Calling constructor for 'TBtNode' in /opt/root_src/core/cont/src/TBtree.cxx:1363; 5: Assuming 'p' is equal to null in /opt/root_src/core/cont/src/TBtree.cxx:546; 6: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:546; 7: 't' is equal to null in /opt/root_src/core/cont/src/TBtree.cxx:547; 8: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 9: Taking true branch in /opt/root_src/co,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7424
https://github.com/root-project/root/issues/7424:1865,Security,Access,Access,1865, to null in /opt/root_src/core/cont/src/TBtree.cxx:547; 8: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 9: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:547; 10: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 11: Loop condition is false. Exiting loop in /opt/root_src/core/cont/src/TBtree.cxx:547; 12: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:123; 13: Null pointer value stored to field 'fTree' in /opt/root_src/core/cont/src/TBtree.cxx:548; 14: Returning from constructor for 'TBtNode' in /opt/root_src/core/cont/src/TBtree.cxx:688; 15: Calling 'TBtInnerNode::MaxIndex' in /opt/root_src/core/cont/src/TBtree.cxx:690; 16: Access to field 'fInnerMaxIndex' results in a dereference of a null pointer (loaded from field 'fTree') in /opt/root_src/core/cont/inc/TBtree.h:248; /opt/root_src/core/cont/inc/TBtree.h:314:41: warning: Access to field 'fLeafMaxIndex' results in a dereference of a null pointer (loaded from field 'fTree') [clang-analyzer-core.NullDereference]; 1: Passing null pointer value via 3rd parameter 't' in /opt/root_src/core/cont/src/TBtree.cxx:1695; 2: Calling constructor for 'TBtLeafNode' in /opt/root_src/core/cont/src/TBtree.cxx:1695; 3: Passing null pointer value via 3rd parameter 't' in /opt/root_src/core/cont/src/TBtree.cxx:1363; 4: Calling constructor for 'TBtNode' in /opt/root_src/core/cont/src/TBtree.cxx:1363; 5: Assuming 'p' is equal to null in /opt/root_src/core/cont/src/TBtree.cxx:546; 6: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:546; 7: 't' is equal to null in /opt/root_src/core/cont/src/TBtree.cxx:547; 8: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 9: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:547; 10: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 11: Loop condition is false. Exiting loop in /opt/root_src/core/cont/src/TBtr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7424
https://github.com/root-project/root/issues/7424:3291,Security,Access,Access,3291,/cont/src/TBtree.cxx:1363; 5: Assuming 'p' is equal to null in /opt/root_src/core/cont/src/TBtree.cxx:546; 6: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:546; 7: 't' is equal to null in /opt/root_src/core/cont/src/TBtree.cxx:547; 8: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 9: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:547; 10: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 11: Loop condition is false. Exiting loop in /opt/root_src/core/cont/src/TBtree.cxx:547; 12: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:123; 13: Null pointer value stored to field 'fTree' in /opt/root_src/core/cont/src/TBtree.cxx:548; 14: Returning from constructor for 'TBtNode' in /opt/root_src/core/cont/src/TBtree.cxx:1363; 15: Calling 'TBtLeafNode::MaxIndex' in /opt/root_src/core/cont/src/TBtree.cxx:1365; 16: Access to field 'fLeafMaxIndex' results in a dereference of a null pointer (loaded from field 'fTree') in /opt/root_src/core/cont/inc/TBtree.h:314; /opt/root_src/core/cont/src/TArrayC.cxx:114:13: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Null pointer value stored to field 'fArray' in /opt/root_src/core/cont/src/TArrayC.cxx:36; 2: Assuming 'n' is > 0 in /opt/root_src/core/cont/src/TArrayC.cxx:37; 3: Taking true branch in /opt/root_src/core/cont/src/TArrayC.cxx:37; 4: Calling 'TArrayC::Set' in /opt/root_src/core/cont/src/TArrayC.cxx:37; 5: 'n' is >= 0 in /opt/root_src/core/cont/src/TArrayC.cxx:107; 6: Taking false branch in /opt/root_src/core/cont/src/TArrayC.cxx:107; 7: 'n' is not equal to field 'fN' in /opt/root_src/core/cont/src/TArrayC.cxx:108; 8: Taking true branch in /opt/root_src/core/cont/src/TArrayC.cxx:108; 9: 'temp' initialized to a null pointer value in /opt/root_src/core/cont/src/TArrayC.cxx:109; 10: 'n' is not equal to 0 in /opt/root_src/core/cont/src/TArrayC.cxx:110;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7424
https://github.com/root-project/root/issues/7424:12230,Security,access,access,12230,"branch in /opt/root_src/core/cont/src/TArrayS.cxx:37; 4: Calling 'TArrayS::Set' in /opt/root_src/core/cont/src/TArrayS.cxx:37; 5: 'n' is >= 0 in /opt/root_src/core/cont/src/TArrayS.cxx:107; 6: Taking false branch in /opt/root_src/core/cont/src/TArrayS.cxx:107; 7: 'n' is not equal to field 'fN' in /opt/root_src/core/cont/src/TArrayS.cxx:108; 8: Taking true branch in /opt/root_src/core/cont/src/TArrayS.cxx:108; 9: 'temp' initialized to a null pointer value in /opt/root_src/core/cont/src/TArrayS.cxx:109; 10: 'n' is not equal to 0 in /opt/root_src/core/cont/src/TArrayS.cxx:110; 11: Taking true branch in /opt/root_src/core/cont/src/TArrayS.cxx:110; 12: 'n' is >= field 'fN' in /opt/root_src/core/cont/src/TArrayS.cxx:112; 13: Taking false branch in /opt/root_src/core/cont/src/TArrayS.cxx:112; 14: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/core/cont/src/TArrayS.cxx:114; /opt/root_src/core/cont/src/TRefArray.cxx:348:30: warning: Array access (via field 'fUIDs') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming 'obj' is non-null in /opt/root_src/core/cont/src/TRefArray.cxx:378; 2: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:378; 3: Calling 'TRefArray::Last' in /opt/root_src/core/cont/src/TRefArray.cxx:379; 4: Assuming the condition is false in /opt/root_src/core/cont/src/TRefArray.cxx:575; 5: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:575; 6: Returning pointer, which participates in a condition later in /opt/root_src/core/cont/src/TRefArray.cxx:578; 7: Returning from 'TRefArray::Last' in /opt/root_src/core/cont/src/TRefArray.cxx:379; 8: Assuming the condition is false in /opt/root_src/core/cont/src/TRefArray.cxx:379; 9: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:379; 10: Calling 'TRefArray::AddLast' in /opt/root_src/core/cont/src/TRefArray.cxx:393; 11: Calling 'TRefArray::AddAtAndExpand' in /opt/root_src/core/cont/src/TRefArray.cxx:284; 12: 'ob",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7424
https://github.com/root-project/root/issues/7424:16277,Security,access,access,16277,"turning the value 1, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 38: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 39: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:213; 40: Assuming the condition is true in /opt/root_src/core/cont/src/TRefArray.cxx:214; 41: 'valid' is true in /opt/root_src/core/cont/src/TRefArray.cxx:215; 42: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:215; 43: 'valid' is true in /opt/root_src/core/cont/src/TRefArray.cxx:254; 44: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:254; 45: Returning the value 1 (loaded from 'valid'), which participates in a condition later in /opt/root_src/core/cont/src/TRefArray.cxx:258; 46: Returning from 'TRefArray::GetObjectUID' in /opt/root_src/core/cont/src/TRefArray.cxx:347; 47: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:347; 48: Array access (via field 'fUIDs') results in a null pointer dereference in /opt/root_src/core/cont/src/TRefArray.cxx:348; /opt/root_src/core/cont/src/TRefArray.cxx:348:30: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]; 1: Assuming 'obj' is non-null in /opt/root_src/core/cont/src/TRefArray.cxx:378; 2: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:378; 3: Calling 'TRefArray::Last' in /opt/root_src/core/cont/src/TRefArray.cxx:379; 4: Assuming the condition is false in /opt/root_src/core/cont/src/TRefArray.cxx:575; 5: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:575; 6: Returning pointer, which participates in a condition later in /opt/root_src/core/cont/src/TRefArray.cxx:578; 7: Returning from 'TRefArray::Last' in /opt/root_src/core/cont/src/TRefArray.cxx:379; 8: Assuming the condition is false in /opt/root_src/core/cont/src/TRefArray.cxx:379; 9: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:379; 10: Calling 'TRefArray::AddLast' in /opt/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7424
https://github.com/root-project/root/issues/7424:14743,Testability,Test,TestBit,14743,"pand' in /opt/root_src/core/cont/src/TRefArray.cxx:343; 19: Assuming 'newSize' is >= 0 in /opt/root_src/core/cont/src/TRefArray.cxx:475; 20: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:475; 21: Assuming 'newSize' is not equal to field 'fSize' in /opt/root_src/core/cont/src/TRefArray.cxx:479; 22: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:479; 23: Assuming 'newSize' is equal to 0 in /opt/root_src/core/cont/src/TRefArray.cxx:481; 24: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:481; 25: Null pointer value stored to field 'fUIDs' in /opt/root_src/core/cont/src/TRefArray.cxx:489; 26: 'temp' is non-null in /opt/root_src/core/cont/src/TRefArray.cxx:491; 27: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:491; 28: Returning from 'TRefArray::Expand' in /opt/root_src/core/cont/src/TRefArray.cxx:343; 29: Calling 'TRefArray::GetObjectUID' in /opt/root_src/core/cont/src/TRefArray.cxx:347; 30: Calling 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:211; 31: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 32: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 33: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:211; 34: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:211; 35: Calling 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 36: Assuming the condition is true in /opt/root_src/core/base/inc/TObject.h:187; 37: Returning the value 1, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 38: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 39: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:213; 40: Assuming the condition is true in /opt/root_src/core/cont/src/TRefArray.cxx:214; 41: 'valid' is true in /opt/root_src/core/cont/src/TRefArray.cxx:215; 42: Taking",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7424
https://github.com/root-project/root/issues/7424:15019,Testability,Test,TestBit,15019,"ot_src/core/cont/src/TRefArray.cxx:479; 22: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:479; 23: Assuming 'newSize' is equal to 0 in /opt/root_src/core/cont/src/TRefArray.cxx:481; 24: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:481; 25: Null pointer value stored to field 'fUIDs' in /opt/root_src/core/cont/src/TRefArray.cxx:489; 26: 'temp' is non-null in /opt/root_src/core/cont/src/TRefArray.cxx:491; 27: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:491; 28: Returning from 'TRefArray::Expand' in /opt/root_src/core/cont/src/TRefArray.cxx:343; 29: Calling 'TRefArray::GetObjectUID' in /opt/root_src/core/cont/src/TRefArray.cxx:347; 30: Calling 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:211; 31: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 32: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 33: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:211; 34: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:211; 35: Calling 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 36: Assuming the condition is true in /opt/root_src/core/base/inc/TObject.h:187; 37: Returning the value 1, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 38: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 39: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:213; 40: Assuming the condition is true in /opt/root_src/core/cont/src/TRefArray.cxx:214; 41: 'valid' is true in /opt/root_src/core/cont/src/TRefArray.cxx:215; 42: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:215; 43: 'valid' is true in /opt/root_src/core/cont/src/TRefArray.cxx:254; 44: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:254; 45: Returning the value 1 (loaded from 'valid'), which participate",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7424
https://github.com/root-project/root/issues/7424:15174,Testability,Test,TestBit,15174,"t/root_src/core/cont/src/TRefArray.cxx:481; 24: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:481; 25: Null pointer value stored to field 'fUIDs' in /opt/root_src/core/cont/src/TRefArray.cxx:489; 26: 'temp' is non-null in /opt/root_src/core/cont/src/TRefArray.cxx:491; 27: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:491; 28: Returning from 'TRefArray::Expand' in /opt/root_src/core/cont/src/TRefArray.cxx:343; 29: Calling 'TRefArray::GetObjectUID' in /opt/root_src/core/cont/src/TRefArray.cxx:347; 30: Calling 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:211; 31: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 32: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 33: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:211; 34: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:211; 35: Calling 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 36: Assuming the condition is true in /opt/root_src/core/base/inc/TObject.h:187; 37: Returning the value 1, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 38: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 39: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:213; 40: Assuming the condition is true in /opt/root_src/core/cont/src/TRefArray.cxx:214; 41: 'valid' is true in /opt/root_src/core/cont/src/TRefArray.cxx:215; 42: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:215; 43: 'valid' is true in /opt/root_src/core/cont/src/TRefArray.cxx:254; 44: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:254; 45: Returning the value 1 (loaded from 'valid'), which participates in a condition later in /opt/root_src/core/cont/src/TRefArray.cxx:258; 46: Returning from 'TRefArray::GetObjectUID' in /opt/root_src/core/cont/src/TRefArray",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7424
https://github.com/root-project/root/issues/7424:15456,Testability,Test,TestBit,15456,"xx:491; 27: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:491; 28: Returning from 'TRefArray::Expand' in /opt/root_src/core/cont/src/TRefArray.cxx:343; 29: Calling 'TRefArray::GetObjectUID' in /opt/root_src/core/cont/src/TRefArray.cxx:347; 30: Calling 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:211; 31: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 32: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 33: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:211; 34: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:211; 35: Calling 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 36: Assuming the condition is true in /opt/root_src/core/base/inc/TObject.h:187; 37: Returning the value 1, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 38: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 39: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:213; 40: Assuming the condition is true in /opt/root_src/core/cont/src/TRefArray.cxx:214; 41: 'valid' is true in /opt/root_src/core/cont/src/TRefArray.cxx:215; 42: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:215; 43: 'valid' is true in /opt/root_src/core/cont/src/TRefArray.cxx:254; 44: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:254; 45: Returning the value 1 (loaded from 'valid'), which participates in a condition later in /opt/root_src/core/cont/src/TRefArray.cxx:258; 46: Returning from 'TRefArray::GetObjectUID' in /opt/root_src/core/cont/src/TRefArray.cxx:347; 47: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:347; 48: Array access (via field 'fUIDs') results in a null pointer dereference in /opt/root_src/core/cont/src/TRefArray.cxx:348; /opt/root_src/core/cont/src/TRefArray.cxx:348:30: warning: Assigned val",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7424
https://github.com/root-project/root/issues/7424:18132,Testability,Test,TestBit,18132,"dition is false in /opt/root_src/core/cont/src/TRefArray.cxx:379; 9: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:379; 10: Calling 'TRefArray::AddLast' in /opt/root_src/core/cont/src/TRefArray.cxx:393; 11: Calling 'TRefArray::AddAtAndExpand' in /opt/root_src/core/cont/src/TRefArray.cxx:284; 12: 'obj' is non-null in /opt/root_src/core/cont/src/TRefArray.cxx:337; 13: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:337; 14: Assuming 'idx' is >= field 'fLowerBound' in /opt/root_src/core/cont/src/TRefArray.cxx:338; 15: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:338; 16: Assuming the condition is false in /opt/root_src/core/cont/src/TRefArray.cxx:342; 17: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:342; 18: 'uid' declared without an initial value in /opt/root_src/core/cont/src/TRefArray.cxx:346; 19: Calling 'TRefArray::GetObjectUID' in /opt/root_src/core/cont/src/TRefArray.cxx:347; 20: Calling 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:211; 21: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 22: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 23: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:211; 24: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:211; 25: Calling 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 26: Assuming the condition is true in /opt/root_src/core/base/inc/TObject.h:187; 27: Returning the value 1, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 28: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 29: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:213; 30: Assuming the condition is false in /opt/root_src/core/cont/src/TRefArray.cxx:214; 31: 'valid' is false in /opt/root_src/core/cont/src/TRefArray.cxx:215; 32: Taki",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7424
https://github.com/root-project/root/issues/7424:18408,Testability,Test,TestBit,18408,"_src/core/cont/src/TRefArray.cxx:284; 12: 'obj' is non-null in /opt/root_src/core/cont/src/TRefArray.cxx:337; 13: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:337; 14: Assuming 'idx' is >= field 'fLowerBound' in /opt/root_src/core/cont/src/TRefArray.cxx:338; 15: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:338; 16: Assuming the condition is false in /opt/root_src/core/cont/src/TRefArray.cxx:342; 17: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:342; 18: 'uid' declared without an initial value in /opt/root_src/core/cont/src/TRefArray.cxx:346; 19: Calling 'TRefArray::GetObjectUID' in /opt/root_src/core/cont/src/TRefArray.cxx:347; 20: Calling 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:211; 21: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 22: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 23: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:211; 24: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:211; 25: Calling 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 26: Assuming the condition is true in /opt/root_src/core/base/inc/TObject.h:187; 27: Returning the value 1, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 28: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 29: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:213; 30: Assuming the condition is false in /opt/root_src/core/cont/src/TRefArray.cxx:214; 31: 'valid' is false in /opt/root_src/core/cont/src/TRefArray.cxx:215; 32: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:215; 33: Assuming the condition is true in /opt/root_src/core/cont/src/TRefArray.cxx:218; 34: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:218; 35: Assuming 'gDebug' is <= 3 in /opt/root_src/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7424
https://github.com/root-project/root/issues/7424:18563,Testability,Test,TestBit,18563,"ont/src/TRefArray.cxx:337; 14: Assuming 'idx' is >= field 'fLowerBound' in /opt/root_src/core/cont/src/TRefArray.cxx:338; 15: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:338; 16: Assuming the condition is false in /opt/root_src/core/cont/src/TRefArray.cxx:342; 17: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:342; 18: 'uid' declared without an initial value in /opt/root_src/core/cont/src/TRefArray.cxx:346; 19: Calling 'TRefArray::GetObjectUID' in /opt/root_src/core/cont/src/TRefArray.cxx:347; 20: Calling 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:211; 21: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 22: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 23: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:211; 24: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:211; 25: Calling 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 26: Assuming the condition is true in /opt/root_src/core/base/inc/TObject.h:187; 27: Returning the value 1, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 28: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 29: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:213; 30: Assuming the condition is false in /opt/root_src/core/cont/src/TRefArray.cxx:214; 31: 'valid' is false in /opt/root_src/core/cont/src/TRefArray.cxx:215; 32: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:215; 33: Assuming the condition is true in /opt/root_src/core/cont/src/TRefArray.cxx:218; 34: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:218; 35: Assuming 'gDebug' is <= 3 in /opt/root_src/core/cont/src/TRefArray.cxx:222; 36: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:222; 37: 'valid' is true in /opt/root_src/core/cont/src/TR",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7424
https://github.com/root-project/root/issues/7424:18845,Testability,Test,TestBit,18845,"; 17: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:342; 18: 'uid' declared without an initial value in /opt/root_src/core/cont/src/TRefArray.cxx:346; 19: Calling 'TRefArray::GetObjectUID' in /opt/root_src/core/cont/src/TRefArray.cxx:347; 20: Calling 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:211; 21: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 22: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 23: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:211; 24: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:211; 25: Calling 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 26: Assuming the condition is true in /opt/root_src/core/base/inc/TObject.h:187; 27: Returning the value 1, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 28: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 29: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:213; 30: Assuming the condition is false in /opt/root_src/core/cont/src/TRefArray.cxx:214; 31: 'valid' is false in /opt/root_src/core/cont/src/TRefArray.cxx:215; 32: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:215; 33: Assuming the condition is true in /opt/root_src/core/cont/src/TRefArray.cxx:218; 34: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:218; 35: Assuming 'gDebug' is <= 3 in /opt/root_src/core/cont/src/TRefArray.cxx:222; 36: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:222; 37: 'valid' is true in /opt/root_src/core/cont/src/TRefArray.cxx:254; 38: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:254; 39: Returning without writing to 'uid' in /opt/root_src/core/cont/src/TRefArray.cxx:258; 40: Returning the value 1 (loaded from 'valid'), which participates in a condition later in /opt/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7424
https://github.com/root-project/root/issues/7424:21144,Testability,Test,TestBit,21144,"/opt/root_src/core/cont/src/TRefArray.cxx:386:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]; 1: Assuming 'obj' is non-null in /opt/root_src/core/cont/src/TRefArray.cxx:378; 2: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:378; 3: Assuming the condition is true in /opt/root_src/core/cont/src/TRefArray.cxx:379; 4: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:379; 5: Assuming 'i' is < field 'fSize' in /opt/root_src/core/cont/src/TRefArray.cxx:381; 6: Loop condition is true. Entering loop body in /opt/root_src/core/cont/src/TRefArray.cxx:381; 7: Assuming the condition is true in /opt/root_src/core/cont/src/TRefArray.cxx:382; 8: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:382; 9: 'uid' declared without an initial value in /opt/root_src/core/cont/src/TRefArray.cxx:384; 10: Calling 'TRefArray::GetObjectUID' in /opt/root_src/core/cont/src/TRefArray.cxx:385; 11: Calling 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:211; 12: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 13: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 14: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:211; 15: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:211; 16: Calling 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 17: Assuming the condition is true in /opt/root_src/core/base/inc/TObject.h:187; 18: Returning the value 1, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 19: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 20: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:213; 21: Assuming the condition is false in /opt/root_src/core/cont/src/TRefArray.cxx:214; 22: 'valid' is false in /opt/root_src/core/cont/src/TRefArray.cxx:215; 23: Taki",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7424
https://github.com/root-project/root/issues/7424:21420,Testability,Test,TestBit,21420,"c/TRefArray.cxx:378; 3: Assuming the condition is true in /opt/root_src/core/cont/src/TRefArray.cxx:379; 4: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:379; 5: Assuming 'i' is < field 'fSize' in /opt/root_src/core/cont/src/TRefArray.cxx:381; 6: Loop condition is true. Entering loop body in /opt/root_src/core/cont/src/TRefArray.cxx:381; 7: Assuming the condition is true in /opt/root_src/core/cont/src/TRefArray.cxx:382; 8: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:382; 9: 'uid' declared without an initial value in /opt/root_src/core/cont/src/TRefArray.cxx:384; 10: Calling 'TRefArray::GetObjectUID' in /opt/root_src/core/cont/src/TRefArray.cxx:385; 11: Calling 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:211; 12: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 13: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 14: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:211; 15: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:211; 16: Calling 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 17: Assuming the condition is true in /opt/root_src/core/base/inc/TObject.h:187; 18: Returning the value 1, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 19: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 20: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:213; 21: Assuming the condition is false in /opt/root_src/core/cont/src/TRefArray.cxx:214; 22: 'valid' is false in /opt/root_src/core/cont/src/TRefArray.cxx:215; 23: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:215; 24: Assuming the condition is true in /opt/root_src/core/cont/src/TRefArray.cxx:218; 25: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:218; 26: Assuming 'gDebug' is <= 3 in /opt/root_src/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7424
https://github.com/root-project/root/issues/7424:21575,Testability,Test,TestBit,21575,"/TRefArray.cxx:379; 5: Assuming 'i' is < field 'fSize' in /opt/root_src/core/cont/src/TRefArray.cxx:381; 6: Loop condition is true. Entering loop body in /opt/root_src/core/cont/src/TRefArray.cxx:381; 7: Assuming the condition is true in /opt/root_src/core/cont/src/TRefArray.cxx:382; 8: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:382; 9: 'uid' declared without an initial value in /opt/root_src/core/cont/src/TRefArray.cxx:384; 10: Calling 'TRefArray::GetObjectUID' in /opt/root_src/core/cont/src/TRefArray.cxx:385; 11: Calling 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:211; 12: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 13: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 14: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:211; 15: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:211; 16: Calling 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 17: Assuming the condition is true in /opt/root_src/core/base/inc/TObject.h:187; 18: Returning the value 1, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 19: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 20: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:213; 21: Assuming the condition is false in /opt/root_src/core/cont/src/TRefArray.cxx:214; 22: 'valid' is false in /opt/root_src/core/cont/src/TRefArray.cxx:215; 23: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:215; 24: Assuming the condition is true in /opt/root_src/core/cont/src/TRefArray.cxx:218; 25: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:218; 26: Assuming 'gDebug' is <= 3 in /opt/root_src/core/cont/src/TRefArray.cxx:222; 27: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:222; 28: 'valid' is true in /opt/root_src/core/cont/src/TR",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7424
https://github.com/root-project/root/issues/7424:21857,Testability,Test,TestBit,21857,"382; 8: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:382; 9: 'uid' declared without an initial value in /opt/root_src/core/cont/src/TRefArray.cxx:384; 10: Calling 'TRefArray::GetObjectUID' in /opt/root_src/core/cont/src/TRefArray.cxx:385; 11: Calling 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:211; 12: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 13: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 14: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:211; 15: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:211; 16: Calling 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 17: Assuming the condition is true in /opt/root_src/core/base/inc/TObject.h:187; 18: Returning the value 1, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 19: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 20: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:213; 21: Assuming the condition is false in /opt/root_src/core/cont/src/TRefArray.cxx:214; 22: 'valid' is false in /opt/root_src/core/cont/src/TRefArray.cxx:215; 23: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:215; 24: Assuming the condition is true in /opt/root_src/core/cont/src/TRefArray.cxx:218; 25: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:218; 26: Assuming 'gDebug' is <= 3 in /opt/root_src/core/cont/src/TRefArray.cxx:222; 27: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:222; 28: 'valid' is true in /opt/root_src/core/cont/src/TRefArray.cxx:254; 29: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:254; 30: Returning without writing to 'uid' in /opt/root_src/core/cont/src/TRefArray.cxx:258; 31: Returning the value 1 (loaded from 'valid'), which participates in a condition later in /opt/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7424
https://github.com/root-project/root/issues/7425:34869,Energy Efficiency,allocate,allocated,34869,ore/dictgen/src/rootcling_impl.cxx:485; 9: Taking true branch in /opt/root_src/core/dictgen/src/rootcling_impl.cxx:485; 10: Taking true branch in /opt/root_src/core/dictgen/src/rootcling_impl.cxx:488; 11: 's' is non-null in /opt/root_src/core/dictgen/src/rootcling_impl.cxx:497; 12: Left side of '&&' is true in /opt/root_src/core/dictgen/src/rootcling_impl.cxx:497; 13: Loop condition is true. Entering loop body in /opt/root_src/core/dictgen/src/rootcling_impl.cxx:497; 14: Assuming 's' is null in /opt/root_src/core/dictgen/src/rootcling_impl.cxx:497; 15: Left side of '&&' is false in /opt/root_src/core/dictgen/src/rootcling_impl.cxx:497; 16: 's' is null in /opt/root_src/core/dictgen/src/rootcling_impl.cxx:501; 17: Taking false branch in /opt/root_src/core/dictgen/src/rootcling_impl.cxx:501; 18: 'gBuildingROOT' is true in /opt/root_src/core/dictgen/src/rootcling_impl.cxx:508; 19: Taking false branch in /opt/root_src/core/dictgen/src/rootcling_impl.cxx:508; 20: Memory is allocated in /opt/root_src/core/dictgen/src/rootcling_impl.cxx:514; 21: Assuming 'gDriverConfig' is null in /opt/root_src/core/dictgen/src/rootcling_impl.cxx:517; 22: Taking false branch in /opt/root_src/core/dictgen/src/rootcling_impl.cxx:517; 23: Potential leak of memory pointed to by 'env' in /opt/root_src/core/dictgen/src/rootcling_impl.cxx:528; /opt/root_src/core/dictgen/src/rootcling_impl.cxx:861:8: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming the object is a 'CXXRecordDecl' in /opt/root_src/core/dictgen/src/rootcling_impl.cxx:1382; 2: 'clxx' is not equal to null in /opt/root_src/core/dictgen/src/rootcling_impl.cxx:1383; 3: Taking false branch in /opt/root_src/core/dictgen/src/rootcling_impl.cxx:1383; 4: Assuming the condition is false in /opt/root_src/core/dictgen/src/rootcling_impl.cxx:1392; 5: Taking false branch in /opt/root_src/core/dictgen/src/rootcling_impl.cxx:1392; 6: Assuming 'add_template_keyword' is false in /opt/root_src/core/dictgen/src,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7425
https://github.com/root-project/root/issues/7426:59206,Deployability,release,released,59206,opt/root_src/core/newdelete/src/NewDelete.cxx:191; 7: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:191; 8: Assuming 'gMmallocDesc' is null in /opt/root_src/core/newdelete/src/NewDelete.cxx:197; 9: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:197; 10: Value assigned to 'vp' in /opt/root_src/core/newdelete/src/NewDelete.cxx:200; 11: Assuming 'vp' is equal to null in /opt/root_src/core/newdelete/src/NewDelete.cxx:201; 12: Assuming pointer value is null in /opt/root_src/core/newdelete/src/NewDelete.cxx:201; 13: Taking true branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:201; 14: Dereference of null pointer in /opt/root_src/core/newdelete/src/NewDelete.cxx:203; 15: expanded from macro 'StoreSizeMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:122; 16: expanded from macro 'StoreSize' in /opt/root_src/core/newdelete/src/NewDelete.cxx:96; ```; ```; /opt/root_src/core/newdelete/src/NewDelete.cxx:286:13: warning: Attempt to free released memory [clang-analyzer-unix.Malloc]; 1: Calling 'operator delete' in /opt/root_src/core/newdelete/src/NewDelete.cxx:369; 2: Assuming the condition is false in /opt/root_src/core/newdelete/src/NewDelete.cxx:266; 3: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:266; 4: Assuming 'gNewInit' is not equal to 0 in /opt/root_src/core/newdelete/src/NewDelete.cxx:273; 5: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:273; 6: Assuming 'ptr' is non-null in /opt/root_src/core/newdelete/src/NewDelete.cxx:276; 7: Taking true branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:276; 8: Assuming the condition is false in /opt/root_src/core/newdelete/src/NewDelete.cxx:278; 9: expanded from macro 'CallFreeHook' in /opt/root_src/core/newdelete/src/NewDelete.cxx:143; 10: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:278; 11: expanded from macro 'CallFreeHook' in /opt/root_src/core/newdelete/src/NewDelete.cxx:143; 12: Assumi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7426
https://github.com/root-project/root/issues/7426:62025,Deployability,release,released,62025,ed from macro 'CheckMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:112; 22: expanded from macro 'TestMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:110; 23: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:279; 24: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:120; 25: expanded from macro 'CheckMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:112; 26: Assuming the condition is false in /opt/root_src/core/newdelete/src/NewDelete.cxx:280; 27: expanded from macro 'MemClear' in /opt/root_src/core/newdelete/src/NewDelete.cxx:109; 28: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:280; 29: expanded from macro 'MemClear' in /opt/root_src/core/newdelete/src/NewDelete.cxx:109; 30: Assuming 'gFreeIfTMapFile' is null in /opt/root_src/core/newdelete/src/NewDelete.cxx:282; 31: Left side of '||' is true in /opt/root_src/core/newdelete/src/NewDelete.cxx:283; 32: Memory is released in /opt/root_src/core/newdelete/src/NewDelete.cxx:286; 33: Assuming the condition is true in /opt/root_src/core/newdelete/src/NewDelete.cxx:287; 34: Loop condition is true. Execution continues on line 285 in /opt/root_src/core/newdelete/src/NewDelete.cxx:284; 35: Attempt to free released memory in /opt/root_src/core/newdelete/src/NewDelete.cxx:286; ```; ```; /opt/root_src/core/newdelete/src/NewDelete.cxx:424:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: expanded from macro 'MemClearRe' in /opt/root_src/core/newdelete/src/NewDelete.cxx:140; 2: Assuming the condition is false in /opt/root_src/core/newdelete/src/NewDelete.cxx:401; 3: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:401; 4: Assuming 'ovp' is not equal to null in /opt/root_src/core/newdelete/src/NewDelete.cxx:406; 5: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:406; 6: Assuming 'gNewInit' is not equal to 0 in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7426
https://github.com/root-project/root/issues/7426:62314,Deployability,release,released,62314,gic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:120; 25: expanded from macro 'CheckMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:112; 26: Assuming the condition is false in /opt/root_src/core/newdelete/src/NewDelete.cxx:280; 27: expanded from macro 'MemClear' in /opt/root_src/core/newdelete/src/NewDelete.cxx:109; 28: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:280; 29: expanded from macro 'MemClear' in /opt/root_src/core/newdelete/src/NewDelete.cxx:109; 30: Assuming 'gFreeIfTMapFile' is null in /opt/root_src/core/newdelete/src/NewDelete.cxx:282; 31: Left side of '||' is true in /opt/root_src/core/newdelete/src/NewDelete.cxx:283; 32: Memory is released in /opt/root_src/core/newdelete/src/NewDelete.cxx:286; 33: Assuming the condition is true in /opt/root_src/core/newdelete/src/NewDelete.cxx:287; 34: Loop condition is true. Execution continues on line 285 in /opt/root_src/core/newdelete/src/NewDelete.cxx:284; 35: Attempt to free released memory in /opt/root_src/core/newdelete/src/NewDelete.cxx:286; ```; ```; /opt/root_src/core/newdelete/src/NewDelete.cxx:424:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: expanded from macro 'MemClearRe' in /opt/root_src/core/newdelete/src/NewDelete.cxx:140; 2: Assuming the condition is false in /opt/root_src/core/newdelete/src/NewDelete.cxx:401; 3: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:401; 4: Assuming 'ovp' is not equal to null in /opt/root_src/core/newdelete/src/NewDelete.cxx:406; 5: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:406; 6: Assuming 'gNewInit' is not equal to 0 in /opt/root_src/core/newdelete/src/NewDelete.cxx:409; 7: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:409; 8: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/newdelete/src/NewDelete.cxx:413; 9: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7426
https://github.com/root-project/root/issues/7426:415,Energy Efficiency,allocate,allocated,415,```; /opt/root_src/core/foundation/src/TClassEdit.cxx:1466:13: warning: Value stored to 'mod_start_of_type' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'mod_start_of_type' is never read in /opt/root_src/core/foundation/src/TClassEdit.cxx:1466; ```; ```; /opt/root_src/core/meta/src/TClass.cxx:6687:1: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Memory is allocated in /opt/root_src/core/meta/src/TClass.cxx:6686; 2: Potential memory leak in /opt/root_src/core/meta/src/TClass.cxx:6687; ```; ```; /opt/root_src/core/meta/src/TDataMember.cxx:681:13: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Assuming field 'fOptions' is null in /opt/root_src/core/meta/src/TDataMember.cxx:816; 2: Taking true branch in /opt/root_src/core/meta/src/TDataMember.cxx:816; 3: Calling 'TDataMember::ExtractOptionsFromComment' in /opt/root_src/core/meta/src/TDataMember.cxx:817; 4: Field 'fOptions' is null in /opt/root_src/core/meta/src/TDataMember.cxx:607; 5: Taking false branch in /opt/root_src/core/meta/src/TDataMember.cxx:607; 6: Assuming 'optTitle' is non-null in /opt/root_src/core/meta/src/TDataMember.cxx:611; 7: Taking false branch in /opt/root_src/core/meta/src/TDataMember.cxx:611; 8: Assuming 'ptr1' is not equal to null in /opt/root_src/core/meta/src/TDataMember.cxx:644; 9: Taking false branch in /opt/root_src/core/meta/src/TDataMember.cxx:644; 10: Assuming 'ptr1' is not equal to null in /opt/root_src/core/meta/src/TDataMember.cxx:649; 11: Taking false branch in /opt/root_src/core/meta/src/TDataMember.cxx:649; 12: '?' condition is false in /opt/root_src/core/meta/src/TDataMember.cxx:666; 13: Assuming 'ptr1' is non-null in /opt/root_src/core/meta/src/TDataMember.cxx:667; 14: Taking true branch in /opt/root_src/core/meta/src/TDataMember.cxx:667; 15: Memory is allocated in /opt/root_src/core/meta/src/TDataMember.cxx:669; 16: Loop condition is true. Execution continues on line 666 in /opt/root_src/core/met,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7426
https://github.com/root-project/root/issues/7426:1854,Energy Efficiency,allocate,allocated,1854,:ExtractOptionsFromComment' in /opt/root_src/core/meta/src/TDataMember.cxx:817; 4: Field 'fOptions' is null in /opt/root_src/core/meta/src/TDataMember.cxx:607; 5: Taking false branch in /opt/root_src/core/meta/src/TDataMember.cxx:607; 6: Assuming 'optTitle' is non-null in /opt/root_src/core/meta/src/TDataMember.cxx:611; 7: Taking false branch in /opt/root_src/core/meta/src/TDataMember.cxx:611; 8: Assuming 'ptr1' is not equal to null in /opt/root_src/core/meta/src/TDataMember.cxx:644; 9: Taking false branch in /opt/root_src/core/meta/src/TDataMember.cxx:644; 10: Assuming 'ptr1' is not equal to null in /opt/root_src/core/meta/src/TDataMember.cxx:649; 11: Taking false branch in /opt/root_src/core/meta/src/TDataMember.cxx:649; 12: '?' condition is false in /opt/root_src/core/meta/src/TDataMember.cxx:666; 13: Assuming 'ptr1' is non-null in /opt/root_src/core/meta/src/TDataMember.cxx:667; 14: Taking true branch in /opt/root_src/core/meta/src/TDataMember.cxx:667; 15: Memory is allocated in /opt/root_src/core/meta/src/TDataMember.cxx:669; 16: Loop condition is true. Execution continues on line 666 in /opt/root_src/core/meta/src/TDataMember.cxx:665; 17: '?' condition is true in /opt/root_src/core/meta/src/TDataMember.cxx:666; 18: Assuming 'ptr1' is null in /opt/root_src/core/meta/src/TDataMember.cxx:667; 19: Taking false branch in /opt/root_src/core/meta/src/TDataMember.cxx:667; 20: Loop condition is false. Exiting loop in /opt/root_src/core/meta/src/TDataMember.cxx:665; 21: Loop condition is true. Entering loop body in /opt/root_src/core/meta/src/TDataMember.cxx:677; 22: Assuming the condition is true in /opt/root_src/core/meta/src/TDataMember.cxx:678; 23: Taking true branch in /opt/root_src/core/meta/src/TDataMember.cxx:678; 24: Assuming 'ptr1' is equal to null in /opt/root_src/core/meta/src/TDataMember.cxx:680; 25: Taking true branch in /opt/root_src/core/meta/src/TDataMember.cxx:680; 26: Potential memory leak in /opt/root_src/core/meta/src/TDataMember.cxx:681; ```; ```; ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7426
https://github.com/root-project/root/issues/7426:10361,Performance,load,load,10361,"ng/src/TCling.cxx:2667; 10: Assuming the condition is false in /opt/root_src/core/foundation/inc/TClassEdit.h:188; 11: Returning zero, which participates in a condition later in /opt/root_src/core/foundation/inc/TClassEdit.h:188; 12: Returning from 'IsStdArray' in /opt/root_src/core/metacling/src/TCling.cxx:2667; 13: Taking false branch in /opt/root_src/core/metacling/src/TCling.cxx:2667; 14: Control jumps to 'case kNone:' at line 2686 in /opt/root_src/core/metacling/src/TCling.cxx:2685; 15: Execution continues on line 2712 in /opt/root_src/core/metacling/src/TCling.cxx:2688; 16: Field 'Indentation' is 2 in /opt/root_src/core/metacling/src/TCling.cxx:2714; 17: Taking true branch in /opt/root_src/core/metacling/src/TCling.cxx:2714; 18: Calling 'TClass::GetClassInfo' in /opt/root_src/core/metacling/src/TCling.cxx:2727; 19: Calling 'atomic::operator bool' in /opt/root_src/core/meta/inc/TClass.h:431; 20: Calling '__atomic_base::load' in /usr/include/c++/9/atomic:88; 21: Value assigned to field 'fClassInfo', which participates in a condition later in /usr/include/c++/9/bits/atomic_base.h:419; 22: Returning from '__atomic_base::load' in /usr/include/c++/9/atomic:88; 23: Returning from 'atomic::operator bool' in /opt/root_src/core/meta/inc/TClass.h:431; 24: Assuming the condition is false in /opt/root_src/core/meta/inc/TClass.h:431; 25: Left side of '&&' is false in /opt/root_src/core/meta/inc/TClass.h:431; 26: Returning pointer, which participates in a condition later in /opt/root_src/core/meta/inc/TClass.h:433; 27: Returning from 'TClass::GetClassInfo' in /opt/root_src/core/metacling/src/TCling.cxx:2727; 28: Assuming the condition is true in /opt/root_src/core/metacling/src/TCling.cxx:2727; 29: Taking true branch in /opt/root_src/core/metacling/src/TCling.cxx:2727; 30: Assuming 'scopeDecl' is non-null in /opt/root_src/core/metacling/src/TCling.cxx:2737; 31: Taking false branch in /opt/root_src/core/metacling/src/TCling.cxx:2737; 32: Assuming 'scopeDecl' is a 'CXXRecordDec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7426
https://github.com/root-project/root/issues/7426:10563,Performance,load,load,10563,"opt/root_src/core/foundation/inc/TClassEdit.h:188; 12: Returning from 'IsStdArray' in /opt/root_src/core/metacling/src/TCling.cxx:2667; 13: Taking false branch in /opt/root_src/core/metacling/src/TCling.cxx:2667; 14: Control jumps to 'case kNone:' at line 2686 in /opt/root_src/core/metacling/src/TCling.cxx:2685; 15: Execution continues on line 2712 in /opt/root_src/core/metacling/src/TCling.cxx:2688; 16: Field 'Indentation' is 2 in /opt/root_src/core/metacling/src/TCling.cxx:2714; 17: Taking true branch in /opt/root_src/core/metacling/src/TCling.cxx:2714; 18: Calling 'TClass::GetClassInfo' in /opt/root_src/core/metacling/src/TCling.cxx:2727; 19: Calling 'atomic::operator bool' in /opt/root_src/core/meta/inc/TClass.h:431; 20: Calling '__atomic_base::load' in /usr/include/c++/9/atomic:88; 21: Value assigned to field 'fClassInfo', which participates in a condition later in /usr/include/c++/9/bits/atomic_base.h:419; 22: Returning from '__atomic_base::load' in /usr/include/c++/9/atomic:88; 23: Returning from 'atomic::operator bool' in /opt/root_src/core/meta/inc/TClass.h:431; 24: Assuming the condition is false in /opt/root_src/core/meta/inc/TClass.h:431; 25: Left side of '&&' is false in /opt/root_src/core/meta/inc/TClass.h:431; 26: Returning pointer, which participates in a condition later in /opt/root_src/core/meta/inc/TClass.h:433; 27: Returning from 'TClass::GetClassInfo' in /opt/root_src/core/metacling/src/TCling.cxx:2727; 28: Assuming the condition is true in /opt/root_src/core/metacling/src/TCling.cxx:2727; 29: Taking true branch in /opt/root_src/core/metacling/src/TCling.cxx:2727; 30: Assuming 'scopeDecl' is non-null in /opt/root_src/core/metacling/src/TCling.cxx:2737; 31: Taking false branch in /opt/root_src/core/metacling/src/TCling.cxx:2737; 32: Assuming 'scopeDecl' is a 'CXXRecordDecl' in /opt/root_src/core/metacling/src/TCling.cxx:2742; 33: 'recordDecl' is non-null in /opt/root_src/core/metacling/src/TCling.cxx:2743; 34: Taking false branch in /opt/root_src",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7426
https://github.com/root-project/root/issues/7426:5601,Testability,Test,TestChecksum,5601,"2: Taking false branch in /opt/root_src/core/meta/src/TSchemaRule.cxx:785; 3: Loop condition is true. Entering loop body in /opt/root_src/core/meta/src/TSchemaRule.cxx:793; 4: Taking false branch in /opt/root_src/core/meta/src/TSchemaRule.cxx:795; 5: Loop condition is true. Entering loop body in /opt/root_src/core/meta/src/TSchemaRule.cxx:793; 6: Taking true branch in /opt/root_src/core/meta/src/TSchemaRule.cxx:795; 7: Loop condition is false. Execution continues on line 799 in /opt/root_src/core/meta/src/TSchemaRule.cxx:793; 8: 'haveCommonTargets' is true in /opt/root_src/core/meta/src/TSchemaRule.cxx:799; 9: Taking false branch in /opt/root_src/core/meta/src/TSchemaRule.cxx:799; 10: Assuming field 'fChecksumVect' is non-null in /opt/root_src/core/meta/src/TSchemaRule.cxx:806; 11: Taking true branch in /opt/root_src/core/meta/src/TSchemaRule.cxx:806; 12: Loop condition is true. Entering loop body in /opt/root_src/core/meta/src/TSchemaRule.cxx:808; 13: Calling 'TSchemaRule::TestChecksum' in /opt/root_src/core/meta/src/TSchemaRule.cxx:809; 14: Assuming the condition is false in /opt/root_src/core/meta/src/TSchemaRule.cxx:439; 15: Taking false branch in /opt/root_src/core/meta/src/TSchemaRule.cxx:439; 16: Assuming field 'fChecksumVect' is null in /opt/root_src/core/meta/src/TSchemaRule.cxx:442; 17: Taking true branch in /opt/root_src/core/meta/src/TSchemaRule.cxx:442; 18: Called C++ object pointer is null in /opt/root_src/core/meta/src/TSchemaRule.cxx:446; ```; ```; /opt/root_src/core/meta/src/TStatusBitsChecker.cxx:153:18: warning: Missing reference in range-for with non trivial type (ROOT::Detail::TStatusBitsChecker::Registry::Info) [clazy-range-loop]; 1: const in /opt/root_src/core/meta/src/TStatusBitsChecker.cxx:153; 2: & in /opt/root_src/core/meta/src/TStatusBitsChecker.cxx:153; ```; ```; /opt/root_src/core/meta/src/TStatusBitsChecker.cxx:187:12: warning: Missing reference in range-for with non trivial type (std::pair<const unsigned char, std::__cxx11::list<ROOT:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7426
https://github.com/root-project/root/issues/7426:61148,Testability,Test,TestMagic,61148,ore/newdelete/src/NewDelete.cxx:143; 12: Assuming the condition is false in /opt/root_src/core/newdelete/src/NewDelete.cxx:279; 13: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:118; 14: expanded from macro 'CheckFreeSize' in /opt/root_src/core/newdelete/src/NewDelete.cxx:115; 15: expanded from macro 'storage_size' in /opt/root_src/core/newdelete/src/NewDelete.cxx:94; 16: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:279; 17: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:118; 18: expanded from macro 'CheckFreeSize' in /opt/root_src/core/newdelete/src/NewDelete.cxx:115; 19: Assuming the condition is false in /opt/root_src/core/newdelete/src/NewDelete.cxx:279; 20: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:120; 21: expanded from macro 'CheckMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:112; 22: expanded from macro 'TestMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:110; 23: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:279; 24: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:120; 25: expanded from macro 'CheckMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:112; 26: Assuming the condition is false in /opt/root_src/core/newdelete/src/NewDelete.cxx:280; 27: expanded from macro 'MemClear' in /opt/root_src/core/newdelete/src/NewDelete.cxx:109; 28: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:280; 29: expanded from macro 'MemClear' in /opt/root_src/core/newdelete/src/NewDelete.cxx:109; 30: Assuming 'gFreeIfTMapFile' is null in /opt/root_src/core/newdelete/src/NewDelete.cxx:282; 31: Left side of '||' is true in /opt/root_src/core/newdelete/src/NewDelete.cxx:283; 32: Memory is released in /opt/root_src/core/newdelete/src/NewDelete.cxx:286; 33: Assuming the condition is true in /opt/root_src/core/newdelete/src/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7426
https://github.com/root-project/root/issues/7426:64293,Testability,Test,TestMagic,64293,ore/newdelete/src/NewDelete.cxx:413; 10: Assuming the condition is false in /opt/root_src/core/newdelete/src/NewDelete.cxx:415; 11: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:118; 12: expanded from macro 'CheckFreeSize' in /opt/root_src/core/newdelete/src/NewDelete.cxx:115; 13: expanded from macro 'storage_size' in /opt/root_src/core/newdelete/src/NewDelete.cxx:94; 14: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:415; 15: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:118; 16: expanded from macro 'CheckFreeSize' in /opt/root_src/core/newdelete/src/NewDelete.cxx:115; 17: Assuming the condition is false in /opt/root_src/core/newdelete/src/NewDelete.cxx:415; 18: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:120; 19: expanded from macro 'CheckMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:112; 20: expanded from macro 'TestMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:110; 21: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:415; 22: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:120; 23: expanded from macro 'CheckMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:112; 24: Assuming 'gMmallocDesc' is null in /opt/root_src/core/newdelete/src/NewDelete.cxx:417; 25: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:417; 26: Value assigned to 'vp' in /opt/root_src/core/newdelete/src/NewDelete.cxx:420; 27: Assuming 'vp' is equal to null in /opt/root_src/core/newdelete/src/NewDelete.cxx:421; 28: Taking true branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:421; 29: Assuming 'size' is > 'oldsize' in /opt/root_src/core/newdelete/src/NewDelete.cxx:423; 30: Taking true branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:423; 31: Assuming the condition is true in /opt/root_src/core/newdelete/src/NewDelete.cxx:424; ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7426
https://github.com/root-project/root/issues/7426:67744,Testability,Test,TestMagic,67744,ore/newdelete/src/NewDelete.cxx:413; 11: Assuming the condition is false in /opt/root_src/core/newdelete/src/NewDelete.cxx:415; 12: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:118; 13: expanded from macro 'CheckFreeSize' in /opt/root_src/core/newdelete/src/NewDelete.cxx:115; 14: expanded from macro 'storage_size' in /opt/root_src/core/newdelete/src/NewDelete.cxx:94; 15: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:415; 16: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:118; 17: expanded from macro 'CheckFreeSize' in /opt/root_src/core/newdelete/src/NewDelete.cxx:115; 18: Assuming the condition is false in /opt/root_src/core/newdelete/src/NewDelete.cxx:415; 19: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:120; 20: expanded from macro 'CheckMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:112; 21: expanded from macro 'TestMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:110; 22: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:415; 23: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:120; 24: expanded from macro 'CheckMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:112; 25: Assuming 'gMmallocDesc' is null in /opt/root_src/core/newdelete/src/NewDelete.cxx:417; 26: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:417; 27: Value assigned to 'vp' in /opt/root_src/core/newdelete/src/NewDelete.cxx:420; 28: Assuming 'vp' is equal to null in /opt/root_src/core/newdelete/src/NewDelete.cxx:421; 29: Taking true branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:421; 30: Assuming 'size' is <= 'oldsize' in /opt/root_src/core/newdelete/src/NewDelete.cxx:423; 31: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:423; 32: Dereference of null pointer in /opt/root_src/core/newdelete/src/NewDelete.cxx:426; 3,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7426
https://github.com/root-project/root/issues/7426:71019,Testability,Test,TestMagic,71019,ore/newdelete/src/NewDelete.cxx:453; 12: Assuming the condition is false in /opt/root_src/core/newdelete/src/NewDelete.cxx:455; 13: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:118; 14: expanded from macro 'CheckFreeSize' in /opt/root_src/core/newdelete/src/NewDelete.cxx:115; 15: expanded from macro 'storage_size' in /opt/root_src/core/newdelete/src/NewDelete.cxx:94; 16: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:455; 17: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:118; 18: expanded from macro 'CheckFreeSize' in /opt/root_src/core/newdelete/src/NewDelete.cxx:115; 19: Assuming the condition is false in /opt/root_src/core/newdelete/src/NewDelete.cxx:455; 20: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:120; 21: expanded from macro 'CheckMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:112; 22: expanded from macro 'TestMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:110; 23: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:455; 24: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:120; 25: expanded from macro 'CheckMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:112; 26: Assuming 'gMmallocDesc' is null in /opt/root_src/core/newdelete/src/NewDelete.cxx:457; 27: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:457; 28: Value assigned to 'vp' in /opt/root_src/core/newdelete/src/NewDelete.cxx:460; 29: Assuming 'vp' is equal to null in /opt/root_src/core/newdelete/src/NewDelete.cxx:461; 30: Taking true branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:461; 31: Assuming 'size' is > 'oldsize' in /opt/root_src/core/newdelete/src/NewDelete.cxx:463; 32: Taking true branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:463; 33: Assuming the condition is true in /opt/root_src/core/newdelete/src/NewDelete.cxx:464; ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7426
https://github.com/root-project/root/issues/7426:74640,Testability,Test,TestMagic,74640,ore/newdelete/src/NewDelete.cxx:453; 13: Assuming the condition is false in /opt/root_src/core/newdelete/src/NewDelete.cxx:455; 14: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:118; 15: expanded from macro 'CheckFreeSize' in /opt/root_src/core/newdelete/src/NewDelete.cxx:115; 16: expanded from macro 'storage_size' in /opt/root_src/core/newdelete/src/NewDelete.cxx:94; 17: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:455; 18: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:118; 19: expanded from macro 'CheckFreeSize' in /opt/root_src/core/newdelete/src/NewDelete.cxx:115; 20: Assuming the condition is false in /opt/root_src/core/newdelete/src/NewDelete.cxx:455; 21: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:120; 22: expanded from macro 'CheckMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:112; 23: expanded from macro 'TestMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:110; 24: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:455; 25: expanded from macro 'RemoveStatMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:120; 26: expanded from macro 'CheckMagic' in /opt/root_src/core/newdelete/src/NewDelete.cxx:112; 27: Assuming 'gMmallocDesc' is null in /opt/root_src/core/newdelete/src/NewDelete.cxx:457; 28: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:457; 29: Value assigned to 'vp' in /opt/root_src/core/newdelete/src/NewDelete.cxx:460; 30: Assuming 'vp' is equal to null in /opt/root_src/core/newdelete/src/NewDelete.cxx:461; 31: Taking true branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:461; 32: Assuming 'size' is <= 'oldsize' in /opt/root_src/core/newdelete/src/NewDelete.cxx:463; 33: Taking false branch in /opt/root_src/core/newdelete/src/NewDelete.cxx:463; 34: Dereference of null pointer in /opt/root_src/core/newdelete/src/NewDelete.cxx:466; 3,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7426
https://github.com/root-project/root/issues/7427:285,Security,secur,security,285,```; /opt/root_src/core/rint/src/TTabCom.cxx:1431:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/rint/src/TTabCom.cxx:1431; /opt/root_src/core/rint/src/TTabCom.cxx:1452:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/rint/src/TTabCom.cxx:1452; /opt/root_src/core/rint/src/TTabCom.cxx:1455:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/rint/src/TTabCom.cxx:1455; /opt/root_src/core/rint/src/TTabCom.cxx:1459:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-securi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7427
https://github.com/root-project/root/issues/7427:855,Security,secur,security,855,```; /opt/root_src/core/rint/src/TTabCom.cxx:1431:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/rint/src/TTabCom.cxx:1431; /opt/root_src/core/rint/src/TTabCom.cxx:1452:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/rint/src/TTabCom.cxx:1452; /opt/root_src/core/rint/src/TTabCom.cxx:1455:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/rint/src/TTabCom.cxx:1455; /opt/root_src/core/rint/src/TTabCom.cxx:1459:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-securi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7427
https://github.com/root-project/root/issues/7427:1425,Security,secur,security,1425, unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/rint/src/TTabCom.cxx:1431; /opt/root_src/core/rint/src/TTabCom.cxx:1452:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/rint/src/TTabCom.cxx:1452; /opt/root_src/core/rint/src/TTabCom.cxx:1455:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/rint/src/TTabCom.cxx:1455; /opt/root_src/core/rint/src/TTabCom.cxx:1459:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/rint/src/TTabCom.cxx:1459; /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:93:5: warning: Value stored to 'sSignalHandlerActive' is never read,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7427
https://github.com/root-project/root/issues/7427:1995,Security,secur,security,1995, unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/rint/src/TTabCom.cxx:1452; /opt/root_src/core/rint/src/TTabCom.cxx:1455:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/rint/src/TTabCom.cxx:1455; /opt/root_src/core/rint/src/TTabCom.cxx:1459:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/rint/src/TTabCom.cxx:1459; /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:93:5: warning: Value stored to 'sSignalHandlerActive' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'sSignalHandlerActive' is never read in /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:93; /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:102:11: warning: Value stored to 'sSignalHandlerActive' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'sSignalHandlerActive' is never read in /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:102; /opt/root_src/core/unix/src/TUnixSystem.cxx:689:19: warning: Call to function 'strcat' is insecure,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7427
https://github.com/root-project/root/issues/7427:3173,Security,secur,security,3173,us functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/rint/src/TTabCom.cxx:1459; /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:93:5: warning: Value stored to 'sSignalHandlerActive' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'sSignalHandlerActive' is never read in /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:93; /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:102:11: warning: Value stored to 'sSignalHandlerActive' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'sSignalHandlerActive' is never read in /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:102; /opt/root_src/core/unix/src/TUnixSystem.cxx:689:19: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/unix/src/TUnixSystem.cxx:689; /opt/root_src/core/unix/src/TUnixSystem.cxx:4246:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/unix/src/TUnixSystem.cxx:4246; /opt/root_src/core/unix/src/TUnixSystem.cxx:4458:4: warning: Call to function 'strcpy' is insecure as it does not provide b,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7427
https://github.com/root-project/root/issues/7427:3749,Security,secur,security,3749,code.DeadStores]; 1: Value stored to 'sSignalHandlerActive' is never read in /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:102; /opt/root_src/core/unix/src/TUnixSystem.cxx:689:19: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/unix/src/TUnixSystem.cxx:689; /opt/root_src/core/unix/src/TUnixSystem.cxx:4246:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/unix/src/TUnixSystem.cxx:4246; /opt/root_src/core/unix/src/TUnixSystem.cxx:4458:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/unix/src/TUnixSystem.cxx:4458; /opt/root_src/core/zip/src/Bits.c:255:9: warning: Call to function 'memcpy' is insecure as it does not provide security ch,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7427
https://github.com/root-project/root/issues/7427:4326,Security,secur,security,4326,py functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/unix/src/TUnixSystem.cxx:689; /opt/root_src/core/unix/src/TUnixSystem.cxx:4246:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/unix/src/TUnixSystem.cxx:4246; /opt/root_src/core/unix/src/TUnixSystem.cxx:4458:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/unix/src/TUnixSystem.cxx:4458; /opt/root_src/core/zip/src/Bits.c:255:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/Bits.c:255; /opt/root_src/core/zip/src/Bits.c:358:9: warning: Call to functi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7427
https://github.com/root-project/root/issues/7427:4730,Security,secur,security,4730,'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/unix/src/TUnixSystem.cxx:4246; /opt/root_src/core/unix/src/TUnixSystem.cxx:4458:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/unix/src/TUnixSystem.cxx:4458; /opt/root_src/core/zip/src/Bits.c:255:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/Bits.c:255; /opt/root_src/core/zip/src/Bits.c:358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 st,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7427
https://github.com/root-project/root/issues/7427:4919,Security,secur,security,4919,of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/unix/src/TUnixSystem.cxx:4246; /opt/root_src/core/unix/src/TUnixSystem.cxx:4458:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/unix/src/TUnixSystem.cxx:4458; /opt/root_src/core/zip/src/Bits.c:255:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/Bits.c:255; /opt/root_src/core/zip/src/Bits.c:358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /op,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7427
https://github.com/root-project/root/issues/7427:5039,Security,secur,security,5039,ix/src/TUnixSystem.cxx:4246; /opt/root_src/core/unix/src/TUnixSystem.cxx:4458:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/unix/src/TUnixSystem.cxx:4458; /opt/root_src/core/zip/src/Bits.c:255:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/Bits.c:255; /opt/root_src/core/zip/src/Bits.c:358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/Bits.c:358; /opt/root_src/core/zip/src/RZip.cxx:220:5: warning: Value stored to 'err' is never read [clang-analyzer-deadcode.DeadStores],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7427
https://github.com/root-project/root/issues/7427:5365,Security,secur,security,5365,rcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/unix/src/TUnixSystem.cxx:4458; /opt/root_src/core/zip/src/Bits.c:255:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/Bits.c:255; /opt/root_src/core/zip/src/Bits.c:358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/Bits.c:358; /opt/root_src/core/zip/src/RZip.cxx:220:5: warning: Value stored to 'err' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'err' is never read in /opt/root_src/core/zip/src/RZip.cxx:220; /opt/root_src/core/zip/src/ZDeflate.c:254:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary chec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7427
https://github.com/root-project/root/issues/7427:5554,Security,secur,security,5554,h analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/unix/src/TUnixSystem.cxx:4458; /opt/root_src/core/zip/src/Bits.c:255:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/Bits.c:255; /opt/root_src/core/zip/src/Bits.c:358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/Bits.c:358; /opt/root_src/core/zip/src/RZip.cxx:220:5: warning: Value stored to 'err' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'err' is never read in /opt/root_src/core/zip/src/RZip.cxx:220; /opt/root_src/core/zip/src/ZDeflate.c:254:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7427
https://github.com/root-project/root/issues/7427:5674,Security,secur,security,5674,ts.c:255:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/Bits.c:255; /opt/root_src/core/zip/src/Bits.c:358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/Bits.c:358; /opt/root_src/core/zip/src/RZip.cxx:220:5: warning: Value stored to 'err' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'err' is never read in /opt/root_src/core/zip/src/RZip.cxx:220; /opt/root_src/core/zip/src/ZDeflate.c:254:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides bou,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7427
https://github.com/root-project/root/issues/7427:6213,Security,secur,security,6213,in case of C11 in /opt/root_src/core/zip/src/Bits.c:255; /opt/root_src/core/zip/src/Bits.c:358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/Bits.c:358; /opt/root_src/core/zip/src/RZip.cxx:220:5: warning: Value stored to 'err' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'err' is never read in /opt/root_src/core/zip/src/RZip.cxx:220; /opt/root_src/core/zip/src/ZDeflate.c:254:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/zip/src/ZDeflate.c:254; /opt/root_src/core/zip/src/ZDeflate.c:519:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in th,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7427
https://github.com/root-project/root/issues/7427:6402,Security,secur,security,6402,secure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/Bits.c:358; /opt/root_src/core/zip/src/RZip.cxx:220:5: warning: Value stored to 'err' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'err' is never read in /opt/root_src/core/zip/src/RZip.cxx:220; /opt/root_src/core/zip/src/ZDeflate.c:254:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/zip/src/ZDeflate.c:254; /opt/root_src/core/zip/src/ZDeflate.c:519:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7427
https://github.com/root-project/root/issues/7427:6522,Security,secur,security,6522, checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/Bits.c:358; /opt/root_src/core/zip/src/RZip.cxx:220:5: warning: Value stored to 'err' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'err' is never read in /opt/root_src/core/zip/src/RZip.cxx:220; /opt/root_src/core/zip/src/ZDeflate.c:254:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/zip/src/ZDeflate.c:254; /opt/root_src/core/zip/src/ZDeflate.c:519:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/ZDeflate.c:519; /opt/root_src/core/zip/src/ZInflate.c:439:3: warning: Call to function 'memset' is insecure as it does not provi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7427
https://github.com/root-project/root/issues/7427:6856,Security,secur,security,6856,of C11 in /opt/root_src/core/zip/src/Bits.c:358; /opt/root_src/core/zip/src/RZip.cxx:220:5: warning: Value stored to 'err' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'err' is never read in /opt/root_src/core/zip/src/RZip.cxx:220; /opt/root_src/core/zip/src/ZDeflate.c:254:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/zip/src/ZDeflate.c:254; /opt/root_src/core/zip/src/ZDeflate.c:519:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/ZDeflate.c:519; /opt/root_src/core/zip/src/ZInflate.c:439:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in th,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7427
https://github.com/root-project/root/issues/7427:7045,Security,secur,security,7045,clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'err' is never read in /opt/root_src/core/zip/src/RZip.cxx:220; /opt/root_src/core/zip/src/ZDeflate.c:254:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/zip/src/ZDeflate.c:254; /opt/root_src/core/zip/src/ZDeflate.c:519:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/ZDeflate.c:519; /opt/root_src/core/zip/src/ZInflate.c:439:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7427
https://github.com/root-project/root/issues/7427:7165,Security,secur,security,7165,:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/zip/src/ZDeflate.c:254; /opt/root_src/core/zip/src/ZDeflate.c:519:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/ZDeflate.c:519; /opt/root_src/core/zip/src/ZInflate.c:439:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/zip/src/ZInflate.c:439; /opt/root_src/core/zip/src/ZInflate.c:700:11: warning: Call to function 'memcpy' is insecure as it does not prov,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7427
https://github.com/root-project/root/issues/7427:7499,Security,secur,security,7499,et' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/zip/src/ZDeflate.c:254; /opt/root_src/core/zip/src/ZDeflate.c:519:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/ZDeflate.c:519; /opt/root_src/core/zip/src/ZInflate.c:439:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/zip/src/ZInflate.c:439; /opt/root_src/core/zip/src/ZInflate.c:700:11: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in t,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7427
https://github.com/root-project/root/issues/7427:7688,Security,secur,security,7688,h arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/zip/src/ZDeflate.c:254; /opt/root_src/core/zip/src/ZDeflate.c:519:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/ZDeflate.c:519; /opt/root_src/core/zip/src/ZInflate.c:439:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/zip/src/ZInflate.c:439; /opt/root_src/core/zip/src/ZInflate.c:700:11: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7427
https://github.com/root-project/root/issues/7427:7808,Security,secur,security,7808,:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/ZDeflate.c:519; /opt/root_src/core/zip/src/ZInflate.c:439:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/zip/src/ZInflate.c:439; /opt/root_src/core/zip/src/ZInflate.c:700:11: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/ZInflate.c:700; /opt/root_src/core/zip/src/ZInflate.c:707:27: warning: Assigned value is garbage or undefined [clang-analyzer-c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7427
https://github.com/root-project/root/issues/7427:8143,Security,secur,security,8143,py' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/ZDeflate.c:519; /opt/root_src/core/zip/src/ZInflate.c:439:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/zip/src/ZInflate.c:439; /opt/root_src/core/zip/src/ZInflate.c:700:11: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/ZInflate.c:700; /opt/root_src/core/zip/src/ZInflate.c:707:27: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]; 1: Calling 'R__Inflate_block' in /opt/root_src/core/zip/src/ZInflate.c:1075; 2: Loop condition is true. Entering loop body in /opt/root_src/core/zip/src/ZInflate.c:1019; 3: expanded from macro 'NEEDBITS' in /opt/root_src/core/zip/src/ZInflate.c:348; 4: Assuming the condition is false in /opt/root_src/core/zip/src/ZIn,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7427
https://github.com/root-project/root/issues/7427:8332,Security,secur,security,8332, arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/ZDeflate.c:519; /opt/root_src/core/zip/src/ZInflate.c:439:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/zip/src/ZInflate.c:439; /opt/root_src/core/zip/src/ZInflate.c:700:11: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/ZInflate.c:700; /opt/root_src/core/zip/src/ZInflate.c:707:27: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]; 1: Calling 'R__Inflate_block' in /opt/root_src/core/zip/src/ZInflate.c:1075; 2: Loop condition is true. Entering loop body in /opt/root_src/core/zip/src/ZInflate.c:1019; 3: expanded from macro 'NEEDBITS' in /opt/root_src/core/zip/src/ZInflate.c:348; 4: Assuming the condition is false in /opt/root_src/core/zip/src/ZInflate.c:1019; 5: expanded from macro 'NEEDBITS' in /opt/root_src/core/zip/src/ZInflate.c:348; 6: Taking false branch in /opt/root_src/core/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7427
https://github.com/root-project/root/issues/7427:8452,Security,secur,security,8452,3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/zip/src/ZInflate.c:439; /opt/root_src/core/zip/src/ZInflate.c:700:11: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/ZInflate.c:700; /opt/root_src/core/zip/src/ZInflate.c:707:27: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]; 1: Calling 'R__Inflate_block' in /opt/root_src/core/zip/src/ZInflate.c:1075; 2: Loop condition is true. Entering loop body in /opt/root_src/core/zip/src/ZInflate.c:1019; 3: expanded from macro 'NEEDBITS' in /opt/root_src/core/zip/src/ZInflate.c:348; 4: Assuming the condition is false in /opt/root_src/core/zip/src/ZInflate.c:1019; 5: expanded from macro 'NEEDBITS' in /opt/root_src/core/zip/src/ZInflate.c:348; 6: Taking false branch in /opt/root_src/core/zip/src/ZInflate.c:1019; 7: expanded from macro 'NEEDBITS' in /opt/root_src/core/zip/src/ZInflate.c:348; 8: Loop condition is false. Execution continues on line,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7427
https://github.com/root-project/root/issues/7427:13179,Security,secur,security,13179,80; 40: expanded from macro 'NEEDBITS' in /opt/root_src/core/zip/src/ZInflate.c:348; 41: Assuming the condition is false in /opt/root_src/core/zip/src/ZInflate.c:681; 42: Taking false branch in /opt/root_src/core/zip/src/ZInflate.c:681; 43: Assuming 'k' is >= 'e' in /opt/root_src/core/zip/src/ZInflate.c:690; 44: expanded from macro 'NEEDBITS' in /opt/root_src/core/zip/src/ZInflate.c:348; 45: Loop condition is false. Execution continues on line 691 in /opt/root_src/core/zip/src/ZInflate.c:690; 46: expanded from macro 'NEEDBITS' in /opt/root_src/core/zip/src/ZInflate.c:348; 47: Assuming the condition is false in /opt/root_src/core/zip/src/ZInflate.c:696; 48: '?' condition is false in /opt/root_src/core/zip/src/ZInflate.c:696; 49: Assuming the condition is false in /opt/root_src/core/zip/src/ZInflate.c:696; 50: '?' condition is false in /opt/root_src/core/zip/src/ZInflate.c:696; 51: Taking false branch in /opt/root_src/core/zip/src/ZInflate.c:698; 52: Assigned value is garbage or undefined in /opt/root_src/core/zip/src/ZInflate.c:707; /opt/root_src/core/zip/src/ZInflate.c:1117:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/ZInflate.c:1117; /opt/root_src/core/rint/src/TTabCom.cxx; /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp; /opt/root_src/core/unix/src/TUnixSystem.cxx; /opt/root_src/core/zip/src/Bits.c; /opt/root_src/core/zip/src/RZip.cxx; /opt/root_src/core/zip/src/ZDeflate.c; /opt/root_src/core/zip/src/ZInflate.c; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7427
https://github.com/root-project/root/issues/7427:13368,Security,secur,security,13368,80; 40: expanded from macro 'NEEDBITS' in /opt/root_src/core/zip/src/ZInflate.c:348; 41: Assuming the condition is false in /opt/root_src/core/zip/src/ZInflate.c:681; 42: Taking false branch in /opt/root_src/core/zip/src/ZInflate.c:681; 43: Assuming 'k' is >= 'e' in /opt/root_src/core/zip/src/ZInflate.c:690; 44: expanded from macro 'NEEDBITS' in /opt/root_src/core/zip/src/ZInflate.c:348; 45: Loop condition is false. Execution continues on line 691 in /opt/root_src/core/zip/src/ZInflate.c:690; 46: expanded from macro 'NEEDBITS' in /opt/root_src/core/zip/src/ZInflate.c:348; 47: Assuming the condition is false in /opt/root_src/core/zip/src/ZInflate.c:696; 48: '?' condition is false in /opt/root_src/core/zip/src/ZInflate.c:696; 49: Assuming the condition is false in /opt/root_src/core/zip/src/ZInflate.c:696; 50: '?' condition is false in /opt/root_src/core/zip/src/ZInflate.c:696; 51: Taking false branch in /opt/root_src/core/zip/src/ZInflate.c:698; 52: Assigned value is garbage or undefined in /opt/root_src/core/zip/src/ZInflate.c:707; /opt/root_src/core/zip/src/ZInflate.c:1117:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/ZInflate.c:1117; /opt/root_src/core/rint/src/TTabCom.cxx; /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp; /opt/root_src/core/unix/src/TUnixSystem.cxx; /opt/root_src/core/zip/src/Bits.c; /opt/root_src/core/zip/src/RZip.cxx; /opt/root_src/core/zip/src/ZDeflate.c; /opt/root_src/core/zip/src/ZInflate.c; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7427
https://github.com/root-project/root/issues/7427:13488,Security,secur,security,13488,80; 40: expanded from macro 'NEEDBITS' in /opt/root_src/core/zip/src/ZInflate.c:348; 41: Assuming the condition is false in /opt/root_src/core/zip/src/ZInflate.c:681; 42: Taking false branch in /opt/root_src/core/zip/src/ZInflate.c:681; 43: Assuming 'k' is >= 'e' in /opt/root_src/core/zip/src/ZInflate.c:690; 44: expanded from macro 'NEEDBITS' in /opt/root_src/core/zip/src/ZInflate.c:348; 45: Loop condition is false. Execution continues on line 691 in /opt/root_src/core/zip/src/ZInflate.c:690; 46: expanded from macro 'NEEDBITS' in /opt/root_src/core/zip/src/ZInflate.c:348; 47: Assuming the condition is false in /opt/root_src/core/zip/src/ZInflate.c:696; 48: '?' condition is false in /opt/root_src/core/zip/src/ZInflate.c:696; 49: Assuming the condition is false in /opt/root_src/core/zip/src/ZInflate.c:696; 50: '?' condition is false in /opt/root_src/core/zip/src/ZInflate.c:696; 51: Taking false branch in /opt/root_src/core/zip/src/ZInflate.c:698; 52: Assigned value is garbage or undefined in /opt/root_src/core/zip/src/ZInflate.c:707; /opt/root_src/core/zip/src/ZInflate.c:1117:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/ZInflate.c:1117; /opt/root_src/core/rint/src/TTabCom.cxx; /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp; /opt/root_src/core/unix/src/TUnixSystem.cxx; /opt/root_src/core/zip/src/Bits.c; /opt/root_src/core/zip/src/RZip.cxx; /opt/root_src/core/zip/src/ZDeflate.c; /opt/root_src/core/zip/src/ZInflate.c; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7427
https://github.com/root-project/root/issues/7428:34073,Availability,Down,Down,34073, line 1949 in /opt/root_src/geom/geom/src/TGeoCone.cxx:1929; 2: Assuming 'id' is < 'ndiv' in /opt/root_src/geom/geom/src/TGeoCone.cxx:1954; 3: Loop condition is true. Entering loop body in /opt/root_src/geom/geom/src/TGeoCone.cxx:1954; 4: Value assigned to field 'fNodes' in /opt/root_src/geom/geom/src/TGeoCone.cxx:1965; 5: Called C++ object pointer is null in /opt/root_src/geom/geom/src/TGeoCone.cxx:1966; /opt/root_src/geom/geom/src/TGeoElement.cxx:894:46: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Calling 'TGeoElemIter::Next' in /opt/root_src/geom/geom/src/TGeoElement.cxx:861; 2: Assuming field 'fElem' is non-null in /opt/root_src/geom/geom/src/TGeoElement.cxx:910; 3: Taking false branch in /opt/root_src/geom/geom/src/TGeoElement.cxx:910; 4: Assuming 'i' is < 'nd' in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 5: Loop condition is true. Entering loop body in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 6: Calling 'TGeoElemIter::Down' in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 7: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoElement.cxx:895; 8: Taking false branch in /opt/root_src/geom/geom/src/TGeoElement.cxx:895; 9: Assuming 'br' is >= field 'fLimitRatio' in /opt/root_src/geom/geom/src/TGeoElement.cxx:897; 10: Taking false branch in /opt/root_src/geom/geom/src/TGeoElement.cxx:897; 11: Value assigned to field 'fDaughter' in /opt/root_src/geom/geom/src/TGeoElement.cxx:900; 12: Value assigned to field 'fElem' in /opt/root_src/geom/geom/src/TGeoElement.cxx:901; 13: Returning from 'TGeoElemIter::Down' in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 14: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 15: Assuming pointer value is null in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 16: Taking false branch in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 17: Assuming 'i' is < 'nd' in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 18: Loop condi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:34678,Availability,Down,Down,34678,src/TGeoElement.cxx:861; 2: Assuming field 'fElem' is non-null in /opt/root_src/geom/geom/src/TGeoElement.cxx:910; 3: Taking false branch in /opt/root_src/geom/geom/src/TGeoElement.cxx:910; 4: Assuming 'i' is < 'nd' in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 5: Loop condition is true. Entering loop body in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 6: Calling 'TGeoElemIter::Down' in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 7: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoElement.cxx:895; 8: Taking false branch in /opt/root_src/geom/geom/src/TGeoElement.cxx:895; 9: Assuming 'br' is >= field 'fLimitRatio' in /opt/root_src/geom/geom/src/TGeoElement.cxx:897; 10: Taking false branch in /opt/root_src/geom/geom/src/TGeoElement.cxx:897; 11: Value assigned to field 'fDaughter' in /opt/root_src/geom/geom/src/TGeoElement.cxx:900; 12: Value assigned to field 'fElem' in /opt/root_src/geom/geom/src/TGeoElement.cxx:901; 13: Returning from 'TGeoElemIter::Down' in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 14: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 15: Assuming pointer value is null in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 16: Taking false branch in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 17: Assuming 'i' is < 'nd' in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 18: Loop condition is true. Entering loop body in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 19: Calling 'TGeoElemIter::Down' in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 20: Called C++ object pointer is null in /opt/root_src/geom/geom/src/TGeoElement.cxx:894; /opt/root_src/geom/geom/src/TGeoEltu.cxx:184:16: warning: Value stored to 'safr' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safr' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoEltu.cxx:184; /opt/root_src/geom/geom/src/TGeoEltu.cxx:382:4: warning: Value stor,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:35192,Availability,Down,Down,35192,"GeoElement.cxx:895; 8: Taking false branch in /opt/root_src/geom/geom/src/TGeoElement.cxx:895; 9: Assuming 'br' is >= field 'fLimitRatio' in /opt/root_src/geom/geom/src/TGeoElement.cxx:897; 10: Taking false branch in /opt/root_src/geom/geom/src/TGeoElement.cxx:897; 11: Value assigned to field 'fDaughter' in /opt/root_src/geom/geom/src/TGeoElement.cxx:900; 12: Value assigned to field 'fElem' in /opt/root_src/geom/geom/src/TGeoElement.cxx:901; 13: Returning from 'TGeoElemIter::Down' in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 14: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 15: Assuming pointer value is null in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 16: Taking false branch in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 17: Assuming 'i' is < 'nd' in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 18: Loop condition is true. Entering loop body in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 19: Calling 'TGeoElemIter::Down' in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 20: Called C++ object pointer is null in /opt/root_src/geom/geom/src/TGeoElement.cxx:894; /opt/root_src/geom/geom/src/TGeoEltu.cxx:184:16: warning: Value stored to 'safr' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safr' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoEltu.cxx:184; /opt/root_src/geom/geom/src/TGeoEltu.cxx:382:4: warning: Value stored to 'safr' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safr' is never read in /opt/root_src/geom/geom/src/TGeoEltu.cxx:382; /opt/root_src/geom/geom/src/TGeoEltu.cxx:382:11: warning: Although the value stored to 'safz' is used in the enclosing expression, the value is never actually read from 'safz' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'safz' is used in the enclosing expression, the value is never actually read from 'safz' in /opt/root_src/geom/geom/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:42623,Availability,down,downwards,42623,"ound' is false in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:557; 36: Taking false branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:557; 37: Calling 'TGeoNode::IsOffset' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:594; 38: Calling 'TObject::TestBit' in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 39: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 40: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 41: Returning from 'TObject::TestBit' in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 42: Returning zero, which participates in a condition later in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 43: Returning from 'TGeoNode::IsOffset' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:594; 44: Taking false branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:594; 45: Calling 'TGeoNavigator::CrossBoundaryAndLocate' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:595; 46: 'downwards' is false in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:612; 47: Taking true branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:612; 48: Assuming 'i' is >= field 'fLevel' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:613; 49: Loop condition is false. Execution continues on line 618 in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:613; 50: Assuming 'current' is non-null in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:626; 51: Taking false branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:626; 52: 'downwards' is false in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:627; 53: Taking false branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:627; 54: 'skipnode' is non-null in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:640; 55: Taking true branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:640; 56: Assuming 'current' is equal to 'skipnode' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:641; 57: Taking true branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:641; 58: 'down",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:43153,Availability,down,downwards,43153,"estBit' in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 42: Returning zero, which participates in a condition later in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 43: Returning from 'TGeoNode::IsOffset' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:594; 44: Taking false branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:594; 45: Calling 'TGeoNavigator::CrossBoundaryAndLocate' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:595; 46: 'downwards' is false in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:612; 47: Taking true branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:612; 48: Assuming 'i' is >= field 'fLevel' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:613; 49: Loop condition is false. Execution continues on line 618 in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:613; 50: Assuming 'current' is non-null in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:626; 51: Taking false branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:626; 52: 'downwards' is false in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:627; 53: Taking false branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:627; 54: 'skipnode' is non-null in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:640; 55: Taking true branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:640; 56: Assuming 'current' is equal to 'skipnode' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:641; 57: Taking true branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:641; 58: 'downwards' is false in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:643; 59: Taking true branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:643; 60: Assuming 'i' is < 'level' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:645; 61: Loop condition is true. Entering loop body in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:645; 62: The left operand of '!=' is a garbage value in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:646; /opt/root_src/geom/geom/src/TGeoNavigator.cxx:739:13: warning: Value stored to 'snext' during it",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:43645,Availability,down,downwards,43645,src/TGeoNavigator.cxx:612; 47: Taking true branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:612; 48: Assuming 'i' is >= field 'fLevel' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:613; 49: Loop condition is false. Execution continues on line 618 in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:613; 50: Assuming 'current' is non-null in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:626; 51: Taking false branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:626; 52: 'downwards' is false in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:627; 53: Taking false branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:627; 54: 'skipnode' is non-null in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:640; 55: Taking true branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:640; 56: Assuming 'current' is equal to 'skipnode' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:641; 57: Taking true branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:641; 58: 'downwards' is false in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:643; 59: Taking true branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:643; 60: Assuming 'i' is < 'level' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:645; 61: Loop condition is true. Entering loop body in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:645; 62: The left operand of '!=' is a garbage value in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:646; /opt/root_src/geom/geom/src/TGeoNavigator.cxx:739:13: warning: Value stored to 'snext' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'snext' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:739; /opt/root_src/geom/geom/src/TGeoNavigator.cxx:793:19: warning: Value stored to 'snext' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'snext' is never read in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:793; /opt/root_src/geom/geom/src/TGeoNavigator.cxx:965:20: warning: Value,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:87141,Energy Efficiency,allocate,allocated,87141,oChecker.cxx:1202; 31: Taking true branch in /opt/root_src/geom/geompainter/src/TGeoChecker.cxx:1202; 32: Execution continues on line 1193 in /opt/root_src/geom/geompainter/src/TGeoChecker.cxx:1205; 33: 'id' is < 'ncheck' in /opt/root_src/geom/geompainter/src/TGeoChecker.cxx:1193; 34: Loop condition is true. Entering loop body in /opt/root_src/geom/geompainter/src/TGeoChecker.cxx:1193; 35: Taking false branch in /opt/root_src/geom/geompainter/src/TGeoChecker.cxx:1197; 36: Assuming 'incrt' is true in /opt/root_src/geom/geompainter/src/TGeoChecker.cxx:1201; 37: Taking false branch in /opt/root_src/geom/geompainter/src/TGeoChecker.cxx:1201; 38: 'in' is true in /opt/root_src/geom/geompainter/src/TGeoChecker.cxx:1202; 39: Taking false branch in /opt/root_src/geom/geompainter/src/TGeoChecker.cxx:1202; 40: 'novlps' is 0 in /opt/root_src/geom/geompainter/src/TGeoChecker.cxx:1212; 41: Taking true branch in /opt/root_src/geom/geompainter/src/TGeoChecker.cxx:1212; 42: Memory is allocated in /opt/root_src/geom/geompainter/src/TGeoChecker.cxx:1213; 43: Assuming 'nodeovlp' is non-null in /opt/root_src/geom/geompainter/src/TGeoChecker.cxx:1217; 44: Taking false branch in /opt/root_src/geom/geompainter/src/TGeoChecker.cxx:1217; 45: Assuming the condition is false in /opt/root_src/geom/geompainter/src/TGeoChecker.cxx:1246; 46: Taking false branch in /opt/root_src/geom/geompainter/src/TGeoChecker.cxx:1246; 47: Assuming the condition is false in /opt/root_src/geom/geompainter/src/TGeoChecker.cxx:1247; 48: Taking false branch in /opt/root_src/geom/geompainter/src/TGeoChecker.cxx:1247; 49: Assuming 'id' is < 'ncheck' in /opt/root_src/geom/geompainter/src/TGeoChecker.cxx:1193; 50: Loop condition is true. Entering loop body in /opt/root_src/geom/geompainter/src/TGeoChecker.cxx:1193; 51: Taking false branch in /opt/root_src/geom/geompainter/src/TGeoChecker.cxx:1197; 52: Assuming 'incrt' is true in /opt/root_src/geom/geompainter/src/TGeoChecker.cxx:1201; 53: Taking false branch in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:12018,Integrability,rout,rout,12018,' in /opt/root_src/geom/geom/src/TGeoCone.cxx:501; 7: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:501; 8: Calling 'TGeoCone::DistFromOutsideS' in /opt/root_src/geom/geom/src/TGeoCone.cxx:503; 9: Assuming 'dz' is > 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:365; 10: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:365; 11: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:370; 12: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:370; 13: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:379; 14: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:379; 15: Assuming 'ro1' is <= 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:393; 16: '?' condition is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:393; 17: 'hasrmin' is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:397; 18: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:397; 19: Assuming 'rout' is > 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:406; 20: Left side of '&&' is true in /opt/root_src/geom/geom/src/TGeoCone.cxx:406; 21: Assuming the condition is true in /opt/root_src/geom/geom/src/TGeoCone.cxx:406; 22: Taking true branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:406; 23: 'in' is true in /opt/root_src/geom/geom/src/TGeoCone.cxx:410; 24: Taking true branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:410; 25: 'hasrmin' is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:413; 26: '?' condition is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:413; 27: Assuming 'safz' is > 'safrmin' in /opt/root_src/geom/geom/src/TGeoCone.cxx:415; 28: Left side of '&&' is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:415; 29: Assuming 'safrmax' is >= 'safrmin' in /opt/root_src/geom/geom/src/TGeoCone.cxx:420; 30: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:420; 31: Assuming 'ddotn' is < 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:428; 32: Taking false branch in /op,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:15210,Integrability,rout,rout,15210,ch in /opt/root_src/geom/geom/src/TGeoCone.cxx:365; 11: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:370; 12: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:370; 13: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:379; 14: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:379; 15: Assuming 'ro1' is > 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:393; 16: '?' condition is true in /opt/root_src/geom/geom/src/TGeoCone.cxx:393; 17: 'hasrmin' is true in /opt/root_src/geom/geom/src/TGeoCone.cxx:397; 18: Taking true branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:397; 19: Assuming 'rin' is > 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:400; 20: Left side of '&&' is true in /opt/root_src/geom/geom/src/TGeoCone.cxx:400; 21: Assuming the condition is true in /opt/root_src/geom/geom/src/TGeoCone.cxx:400; 22: Taking true branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:400; 23: Assuming 'rout' is <= 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:406; 24: Left side of '&&' is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:406; 25: 'in' is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:410; 26: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:410; 27: 'inrmin' is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:443; 28: Taking true branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:443; 29: Assuming 'delta' is >= 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:446; 30: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:446; 31: The left operand of '+' is a garbage value in /opt/root_src/geom/geom/src/TGeoCone.cxx:447; /opt/root_src/geom/geom/src/TGeoCone.cxx:462:30: warning: The left operand of '+' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'i' is < 'vecsize' in /opt/root_src/geom/geom/src/TGeoCone.cxx:1181; 2: Loop condition is true. Entering loop body in /opt/root_src/geom/geom/src/TGeoCone.cxx:1181; 3: Calling ',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:17616,Integrability,rout,rout,17616,mOutsideS' in /opt/root_src/geom/geom/src/TGeoCone.cxx:503; 9: Assuming 'dz' is > 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:365; 10: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:365; 11: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:370; 12: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:370; 13: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:379; 14: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:379; 15: Assuming 'ro1' is > 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:393; 16: '?' condition is true in /opt/root_src/geom/geom/src/TGeoCone.cxx:393; 17: 'hasrmin' is true in /opt/root_src/geom/geom/src/TGeoCone.cxx:397; 18: Taking true branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:397; 19: Assuming 'rin' is <= 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:400; 20: Left side of '&&' is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:400; 21: Assuming 'rout' is <= 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:406; 22: Left side of '&&' is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:406; 23: 'in' is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:410; 24: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:410; 25: 'inrmin' is true in /opt/root_src/geom/geom/src/TGeoCone.cxx:443; 26: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:443; 27: 'hasrmin' is true in /opt/root_src/geom/geom/src/TGeoCone.cxx:459; 28: Taking true branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:459; 29: Assuming 'delta' is > 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:461; 30: Taking true branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:461; 31: The left operand of '+' is a garbage value in /opt/root_src/geom/geom/src/TGeoCone.cxx:462; /opt/root_src/geom/geom/src/TGeoCone.cxx:476:22: warning: The left operand of '-' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'i' is < 'vecsize' in /opt/root_src/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:20011,Integrability,rout,rout,20011,' in /opt/root_src/geom/geom/src/TGeoCone.cxx:501; 7: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:501; 8: Calling 'TGeoCone::DistFromOutsideS' in /opt/root_src/geom/geom/src/TGeoCone.cxx:503; 9: Assuming 'dz' is > 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:365; 10: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:365; 11: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:370; 12: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:370; 13: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:379; 14: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:379; 15: Assuming 'ro1' is <= 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:393; 16: '?' condition is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:393; 17: 'hasrmin' is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:397; 18: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:397; 19: Assuming 'rout' is <= 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:406; 20: Left side of '&&' is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:406; 21: 'in' is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:410; 22: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:410; 23: 'inrmin' is true in /opt/root_src/geom/geom/src/TGeoCone.cxx:443; 24: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:443; 25: 'hasrmin' is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:459; 26: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:459; 27: 'inrmax' is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:471; 28: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:471; 29: Assuming 'delta' is >= 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:475; 30: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:475; 31: The left operand of '-' is a garbage value in /opt/root_src/geom/geom/src/TGeoCone.cxx:476; /opt/root_src/geom/geom/src/TGeoCone.cxx:585:31: warni,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:77084,Modifiability,variab,variable,77084,in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2876; 3: Assuming field 'fFinder' is null in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2880; 4: Taking false branch in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2880; 5: Assuming 'ncells' is not equal to 0 in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2885; 6: Left side of '||' is false in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2885; 7: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2885; 8: Taking false branch in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2885; 9: Taking false branch in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2892; 10: Assuming 'i' is < 'ncells' in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2895; 11: Loop condition is true. Entering loop body in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2895; 12: Called C++ object pointer is null in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2899; /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1555:37: warning: Array access (from variable 'array2') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: 'slice2' initialized to a null pointer value in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1305; 2: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1309; 3: Taking false branch in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1309; 4: Assuming the condition is true in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1316; 5: Taking true branch in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1316; 6: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1318; 7: Taking false branch in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1318; 8: 'slice1' is null in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1320; 9: Taking false branch in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1320; 10: Assuming the condition is true in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1328; 11: Taking true branch in /opt/root_src/geom/geom/src/T,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:79176,Modifiability,variab,variable,79176,"cxx:1330; 13: Taking false branch in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1330; 14: Assuming 'slice1' is null in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1332; 15: Left side of '&&' is false in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1332; 16: 'slice1' is null in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1335; 17: Taking false branch in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1335; 18: Control jumps to 'case 2:' at line 1352 in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1345; 19: Passing null pointer value via 4th parameter 'array2' in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1353; 20: Calling 'TGeoVoxelFinder::Intersect' in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1353; 21: Assuming 'current_byte' is < 'nbytes' in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1554; 22: Loop condition is true. Entering loop body in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1554; 23: Array access (from variable 'array2') results in a null pointer dereference in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1555; /opt/root_src/geom/geom/src/TGeoXtru.cxx:558:13: warning: Value stored to 'dist' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'dist' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoXtru.cxx:558; /opt/root_src/geom/geom/src/TGeoXtru.cxx:878:11: warning: Although the value stored to 'indx2' is used in the enclosing expression, the value is never actually read from 'indx2' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'indx2' is used in the enclosing expression, the value is never actually read from 'indx2' in /opt/root_src/geom/geom/src/TGeoXtru.cxx:878; /opt/root_src/geom/geom/src/TGeoXtru.cxx:939:13: warning: Value stored to 'safz' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safz' during its initialization is never read in /opt/root_src/geom/geom/src/TGeo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:1156,Safety,safe,safe,1156,le>) [clazy-range-loop]; 1: const in /opt/root_src/geom/gdml/src/TGDMLParse.cxx:819; 2: & in /opt/root_src/geom/gdml/src/TGDMLParse.cxx:819; /opt/root_src/geom/geom/src/TGeoArb8.cxx:594:13: warning: Value stored to 's' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 's' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoArb8.cxx:594; /opt/root_src/geom/geom/src/TGeoArb8.cxx:918:13: warning: Value stored to 'ddmin' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'ddmin' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoArb8.cxx:918; /opt/root_src/geom/geom/src/TGeoArb8.cxx:1549:4: warning: Value stored to 'snxt' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'snxt' is never read in /opt/root_src/geom/geom/src/TGeoArb8.cxx:1549; /opt/root_src/geom/geom/src/TGeoArb8.cxx:1711:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoArb8.cxx:1711; /opt/root_src/geom/geom/src/TGeoArb8.cxx:1716:21: warning: Value stored to 'az' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'az' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoArb8.cxx:1716; /opt/root_src/geom/geom/src/TGeoArb8.cxx:1968:11: warning: Maybe you meant to call TGeoTrap::DistFromInside() instead [clazy-skipped-base-method]; /opt/root_src/geom/geom/src/TGeoArb8.cxx:1983:11: warning: Maybe you meant to call TGeoTrap::DistFromOutside() instead [clazy-skipped-base-method]; /opt/root_src/geom/geom/src/TGeoArb8.cxx:2032:11: warning: Maybe you meant to call TGeoTrap::Safety() instead [clazy-skipped-base-method]; /opt/root_src/geom/geom/src/TGeoBBox.cxx:324:25: warning: Called C++ object pointer is null [clang-analyzer-co,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:1260,Safety,safe,safe,1260,ml/src/TGDMLParse.cxx:819; /opt/root_src/geom/geom/src/TGeoArb8.cxx:594:13: warning: Value stored to 's' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 's' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoArb8.cxx:594; /opt/root_src/geom/geom/src/TGeoArb8.cxx:918:13: warning: Value stored to 'ddmin' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'ddmin' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoArb8.cxx:918; /opt/root_src/geom/geom/src/TGeoArb8.cxx:1549:4: warning: Value stored to 'snxt' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'snxt' is never read in /opt/root_src/geom/geom/src/TGeoArb8.cxx:1549; /opt/root_src/geom/geom/src/TGeoArb8.cxx:1711:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoArb8.cxx:1711; /opt/root_src/geom/geom/src/TGeoArb8.cxx:1716:21: warning: Value stored to 'az' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'az' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoArb8.cxx:1716; /opt/root_src/geom/geom/src/TGeoArb8.cxx:1968:11: warning: Maybe you meant to call TGeoTrap::DistFromInside() instead [clazy-skipped-base-method]; /opt/root_src/geom/geom/src/TGeoArb8.cxx:1983:11: warning: Maybe you meant to call TGeoTrap::DistFromOutside() instead [clazy-skipped-base-method]; /opt/root_src/geom/geom/src/TGeoArb8.cxx:2032:11: warning: Maybe you meant to call TGeoTrap::Safety() instead [clazy-skipped-base-method]; /opt/root_src/geom/geom/src/TGeoBBox.cxx:324:25: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Control jumps to 'case 1:' at line 298 in /opt/root_src/geom/geom/src/TGeoBBox.cxx:297; 2: E,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:2016,Safety,Safe,Safety,2016, in /opt/root_src/geom/geom/src/TGeoArb8.cxx:1549; /opt/root_src/geom/geom/src/TGeoArb8.cxx:1711:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoArb8.cxx:1711; /opt/root_src/geom/geom/src/TGeoArb8.cxx:1716:21: warning: Value stored to 'az' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'az' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoArb8.cxx:1716; /opt/root_src/geom/geom/src/TGeoArb8.cxx:1968:11: warning: Maybe you meant to call TGeoTrap::DistFromInside() instead [clazy-skipped-base-method]; /opt/root_src/geom/geom/src/TGeoArb8.cxx:1983:11: warning: Maybe you meant to call TGeoTrap::DistFromOutside() instead [clazy-skipped-base-method]; /opt/root_src/geom/geom/src/TGeoArb8.cxx:2032:11: warning: Maybe you meant to call TGeoTrap::Safety() instead [clazy-skipped-base-method]; /opt/root_src/geom/geom/src/TGeoBBox.cxx:324:25: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Control jumps to 'case 1:' at line 298 in /opt/root_src/geom/geom/src/TGeoBBox.cxx:297; 2: Execution continues on line 317 in /opt/root_src/geom/geom/src/TGeoBBox.cxx:302; 3: Assuming 'ic' is < 'ndiv' in /opt/root_src/geom/geom/src/TGeoBBox.cxx:322; 4: Loop condition is true. Entering loop body in /opt/root_src/geom/geom/src/TGeoBBox.cxx:322; 5: Value assigned to field 'fNodes' in /opt/root_src/geom/geom/src/TGeoBBox.cxx:323; 6: Called C++ object pointer is null in /opt/root_src/geom/geom/src/TGeoBBox.cxx:324; /opt/root_src/geom/geom/src/TGeoBBox.cxx:458:20: warning: Value stored to 'snxt' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'snxt' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoBBox.cxx:458; /opt/root_src/geom/geom/src/TGeoBBox.cxx:513:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:52194,Safety,safe,safe,52194,"is false in /opt/root_src/geom/geom/src/TGeoPcon.cxx:680; 17: 'is_seg' is false in /opt/root_src/geom/geom/src/TGeoPcon.cxx:681; 18: Taking false branch in /opt/root_src/geom/geom/src/TGeoPcon.cxx:681; 19: 'is_tube' is false in /opt/root_src/geom/geom/src/TGeoPcon.cxx:685; 20: Taking false branch in /opt/root_src/geom/geom/src/TGeoPcon.cxx:685; 21: Value assigned to field 'fNodes' in /opt/root_src/geom/geom/src/TGeoPcon.cxx:690; 22: Called C++ object pointer is null in /opt/root_src/geom/geom/src/TGeoPcon.cxx:691; /opt/root_src/geom/geom/src/TGeoPcon.cxx:857:11: warning: Although the value stored to 'indx2' is used in the enclosing expression, the value is never actually read from 'indx2' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'indx2' is used in the enclosing expression, the value is never actually read from 'indx2' in /opt/root_src/geom/geom/src/TGeoPcon.cxx:857; /opt/root_src/geom/geom/src/TGeoPcon.cxx:1108:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoPcon.cxx:1108; /opt/root_src/geom/geom/src/TGeoPcon.cxx:1174:7: warning: Value stored to 'iplane' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'iplane' is never read in /opt/root_src/geom/geom/src/TGeoPcon.cxx:1174; /opt/root_src/geom/geom/src/TGeoPcon.cxx:1175:7: warning: Value stored to 'saftmp' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'saftmp' is never read in /opt/root_src/geom/geom/src/TGeoPcon.cxx:1175; /opt/root_src/geom/geom/src/TGeoPcon.cxx:1200:7: warning: Value stored to 'dz' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'dz' is never read in /opt/root_src/geom/geom/src/TGeoPcon.cxx:1200; /opt/root_src/geom/geom/src/TGeoPcon.cxx:1205:4: warning: Value stored to 'saftmp' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:52298,Safety,safe,safe,52298,"oPcon.cxx:681; 18: Taking false branch in /opt/root_src/geom/geom/src/TGeoPcon.cxx:681; 19: 'is_tube' is false in /opt/root_src/geom/geom/src/TGeoPcon.cxx:685; 20: Taking false branch in /opt/root_src/geom/geom/src/TGeoPcon.cxx:685; 21: Value assigned to field 'fNodes' in /opt/root_src/geom/geom/src/TGeoPcon.cxx:690; 22: Called C++ object pointer is null in /opt/root_src/geom/geom/src/TGeoPcon.cxx:691; /opt/root_src/geom/geom/src/TGeoPcon.cxx:857:11: warning: Although the value stored to 'indx2' is used in the enclosing expression, the value is never actually read from 'indx2' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'indx2' is used in the enclosing expression, the value is never actually read from 'indx2' in /opt/root_src/geom/geom/src/TGeoPcon.cxx:857; /opt/root_src/geom/geom/src/TGeoPcon.cxx:1108:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoPcon.cxx:1108; /opt/root_src/geom/geom/src/TGeoPcon.cxx:1174:7: warning: Value stored to 'iplane' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'iplane' is never read in /opt/root_src/geom/geom/src/TGeoPcon.cxx:1174; /opt/root_src/geom/geom/src/TGeoPcon.cxx:1175:7: warning: Value stored to 'saftmp' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'saftmp' is never read in /opt/root_src/geom/geom/src/TGeoPcon.cxx:1175; /opt/root_src/geom/geom/src/TGeoPcon.cxx:1200:7: warning: Value stored to 'dz' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'dz' is never read in /opt/root_src/geom/geom/src/TGeoPcon.cxx:1200; /opt/root_src/geom/geom/src/TGeoPcon.cxx:1205:4: warning: Value stored to 'saftmp' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'saftmp' is never read in /opt/root_src/geom/geom/src/TGeoPcon.cxx:1205; /opt/root_src/geom/geom/src/TGe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:63679,Safety,safe,safe,63679,c/geom/geom/src/TGeoSphere.cxx:994; 4: Value assigned to field 'fNodes' in /opt/root_src/geom/geom/src/TGeoSphere.cxx:999; 5: Called C++ object pointer is null in /opt/root_src/geom/geom/src/TGeoSphere.cxx:1000; /opt/root_src/geom/geom/src/TGeoSphere.cxx:1158:32: warning: Value stored to 'nbPnts' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nbPnts' is never read in /opt/root_src/geom/geom/src/TGeoSphere.cxx:1158; /opt/root_src/geom/geom/src/TGeoSphere.cxx:1163:4: warning: Value stored to 'nbSegs' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nbSegs' is never read in /opt/root_src/geom/geom/src/TGeoSphere.cxx:1163; /opt/root_src/geom/geom/src/TGeoSphere.cxx:1168:4: warning: Value stored to 'nbPols' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nbPols' is never read in /opt/root_src/geom/geom/src/TGeoSphere.cxx:1168; /opt/root_src/geom/geom/src/TGeoSphere.cxx:1533:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoSphere.cxx:1533; /opt/root_src/geom/geom/src/TGeoTessellated.cxx:745:15: warning: Missing reference in range-for with non trivial type (std::__cxx11::basic_string<char>) [clazy-range-loop]; 1: const in /opt/root_src/geom/geom/src/TGeoTessellated.cxx:745; 2: & in /opt/root_src/geom/geom/src/TGeoTessellated.cxx:745; /opt/root_src/geom/geom/src/TGeoTorus.cxx:297:13: warning: Value stored to 'snext' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'snext' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTorus.cxx:297; /opt/root_src/geom/geom/src/TGeoTorus.cxx:305:13: warning: Value stored to 'dphi' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'dphi' during its initialization is never read in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:63783,Safety,safe,safe,63783,xx:999; 5: Called C++ object pointer is null in /opt/root_src/geom/geom/src/TGeoSphere.cxx:1000; /opt/root_src/geom/geom/src/TGeoSphere.cxx:1158:32: warning: Value stored to 'nbPnts' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nbPnts' is never read in /opt/root_src/geom/geom/src/TGeoSphere.cxx:1158; /opt/root_src/geom/geom/src/TGeoSphere.cxx:1163:4: warning: Value stored to 'nbSegs' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nbSegs' is never read in /opt/root_src/geom/geom/src/TGeoSphere.cxx:1163; /opt/root_src/geom/geom/src/TGeoSphere.cxx:1168:4: warning: Value stored to 'nbPols' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nbPols' is never read in /opt/root_src/geom/geom/src/TGeoSphere.cxx:1168; /opt/root_src/geom/geom/src/TGeoSphere.cxx:1533:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoSphere.cxx:1533; /opt/root_src/geom/geom/src/TGeoTessellated.cxx:745:15: warning: Missing reference in range-for with non trivial type (std::__cxx11::basic_string<char>) [clazy-range-loop]; 1: const in /opt/root_src/geom/geom/src/TGeoTessellated.cxx:745; 2: & in /opt/root_src/geom/geom/src/TGeoTessellated.cxx:745; /opt/root_src/geom/geom/src/TGeoTorus.cxx:297:13: warning: Value stored to 'snext' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'snext' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTorus.cxx:297; /opt/root_src/geom/geom/src/TGeoTorus.cxx:305:13: warning: Value stored to 'dphi' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'dphi' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTorus.cxx:305; /opt/root_src/geom/geom/src/TGeoTorus.cxx:378:13: warning: Value stored to 'd,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:66209,Safety,safe,safe,66209,Torus.cxx:576; /opt/root_src/geom/geom/src/TGeoTorus.cxx:577:21: warning: Value stored to 'nbPnts' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nbPnts' is never read in /opt/root_src/geom/geom/src/TGeoTorus.cxx:577; /opt/root_src/geom/geom/src/TGeoTorus.cxx:646:10: warning: Value stored to 'indx' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'indx' is never read in /opt/root_src/geom/geom/src/TGeoTorus.cxx:646; /opt/root_src/geom/geom/src/TGeoTorus.cxx:661:10: warning: Value stored to 'indx' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'indx' is never read in /opt/root_src/geom/geom/src/TGeoTorus.cxx:661; /opt/root_src/geom/geom/src/TGeoTorus.cxx:697:7: warning: Value stored to 'i' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'i' is never read in /opt/root_src/geom/geom/src/TGeoTorus.cxx:697; /opt/root_src/geom/geom/src/TGeoTorus.cxx:741:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTorus.cxx:741; /opt/root_src/geom/geom/src/TGeoTorus.cxx:1065:13: warning: Value stored to 's' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 's' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTorus.cxx:1065; /opt/root_src/geom/geom/src/TGeoTrd1.cxx:199:13: warning: Value stored to 'snxt' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'snxt' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTrd1.cxx:199; /opt/root_src/geom/geom/src/TGeoTrd1.cxx:317:13: warning: Value stored to 'snxt' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'snxt' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTrd1.cxx:31,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:66313,Safety,safe,safe,66313,lang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nbPnts' is never read in /opt/root_src/geom/geom/src/TGeoTorus.cxx:577; /opt/root_src/geom/geom/src/TGeoTorus.cxx:646:10: warning: Value stored to 'indx' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'indx' is never read in /opt/root_src/geom/geom/src/TGeoTorus.cxx:646; /opt/root_src/geom/geom/src/TGeoTorus.cxx:661:10: warning: Value stored to 'indx' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'indx' is never read in /opt/root_src/geom/geom/src/TGeoTorus.cxx:661; /opt/root_src/geom/geom/src/TGeoTorus.cxx:697:7: warning: Value stored to 'i' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'i' is never read in /opt/root_src/geom/geom/src/TGeoTorus.cxx:697; /opt/root_src/geom/geom/src/TGeoTorus.cxx:741:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTorus.cxx:741; /opt/root_src/geom/geom/src/TGeoTorus.cxx:1065:13: warning: Value stored to 's' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 's' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTorus.cxx:1065; /opt/root_src/geom/geom/src/TGeoTrd1.cxx:199:13: warning: Value stored to 'snxt' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'snxt' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTrd1.cxx:199; /opt/root_src/geom/geom/src/TGeoTrd1.cxx:317:13: warning: Value stored to 'snxt' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'snxt' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTrd1.cxx:317; /opt/root_src/geom/geom/src/TGeoTrd1.cxx:456:31: warning: Called C++ object pointer is null [clang-analyzer-cor,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:74564,Safety,safe,safe,74564,'id' is < 'ndiv' in /opt/root_src/geom/geom/src/TGeoTube.cxx:1841; 7: Loop condition is true. Entering loop body in /opt/root_src/geom/geom/src/TGeoTube.cxx:1841; 8: Value assigned to field 'fNodes' in /opt/root_src/geom/geom/src/TGeoTube.cxx:1842; 9: Called C++ object pointer is null in /opt/root_src/geom/geom/src/TGeoTube.cxx:1843; /opt/root_src/geom/geom/src/TGeoTube.cxx:1857:31: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Control jumps to 'case 3:' at line 1846 in /opt/root_src/geom/geom/src/TGeoTube.cxx:1814; 2: Assuming 'id' is < 'ndiv' in /opt/root_src/geom/geom/src/TGeoTube.cxx:1855; 3: Loop condition is true. Entering loop body in /opt/root_src/geom/geom/src/TGeoTube.cxx:1855; 4: Value assigned to field 'fNodes' in /opt/root_src/geom/geom/src/TGeoTube.cxx:1856; 5: Called C++ object pointer is null in /opt/root_src/geom/geom/src/TGeoTube.cxx:1857; /opt/root_src/geom/geom/src/TGeoTube.cxx:2059:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2059; /opt/root_src/geom/geom/src/TGeoTube.cxx:2107:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2107; /opt/root_src/geom/geom/src/TGeoTube.cxx:2773:13: warning: Value stored to 's' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 's' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2773; /opt/root_src/geom/geom/src/TGeoTube.cxx:2909:13: warning: Value stored to 'sz1' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'sz1' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:29,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:74668,Safety,safe,safe,74668,n /opt/root_src/geom/geom/src/TGeoTube.cxx:1841; 8: Value assigned to field 'fNodes' in /opt/root_src/geom/geom/src/TGeoTube.cxx:1842; 9: Called C++ object pointer is null in /opt/root_src/geom/geom/src/TGeoTube.cxx:1843; /opt/root_src/geom/geom/src/TGeoTube.cxx:1857:31: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Control jumps to 'case 3:' at line 1846 in /opt/root_src/geom/geom/src/TGeoTube.cxx:1814; 2: Assuming 'id' is < 'ndiv' in /opt/root_src/geom/geom/src/TGeoTube.cxx:1855; 3: Loop condition is true. Entering loop body in /opt/root_src/geom/geom/src/TGeoTube.cxx:1855; 4: Value assigned to field 'fNodes' in /opt/root_src/geom/geom/src/TGeoTube.cxx:1856; 5: Called C++ object pointer is null in /opt/root_src/geom/geom/src/TGeoTube.cxx:1857; /opt/root_src/geom/geom/src/TGeoTube.cxx:2059:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2059; /opt/root_src/geom/geom/src/TGeoTube.cxx:2107:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2107; /opt/root_src/geom/geom/src/TGeoTube.cxx:2773:13: warning: Value stored to 's' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 's' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2773; /opt/root_src/geom/geom/src/TGeoTube.cxx:2909:13: warning: Value stored to 'sz1' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'sz1' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2909; /opt/root_src/geom/geom/src/TGeoTube.cxx:3015:13: warning: Value stored to 'safe' during its initialization is ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:74840,Safety,safe,safe,74840,r is null in /opt/root_src/geom/geom/src/TGeoTube.cxx:1843; /opt/root_src/geom/geom/src/TGeoTube.cxx:1857:31: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Control jumps to 'case 3:' at line 1846 in /opt/root_src/geom/geom/src/TGeoTube.cxx:1814; 2: Assuming 'id' is < 'ndiv' in /opt/root_src/geom/geom/src/TGeoTube.cxx:1855; 3: Loop condition is true. Entering loop body in /opt/root_src/geom/geom/src/TGeoTube.cxx:1855; 4: Value assigned to field 'fNodes' in /opt/root_src/geom/geom/src/TGeoTube.cxx:1856; 5: Called C++ object pointer is null in /opt/root_src/geom/geom/src/TGeoTube.cxx:1857; /opt/root_src/geom/geom/src/TGeoTube.cxx:2059:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2059; /opt/root_src/geom/geom/src/TGeoTube.cxx:2107:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2107; /opt/root_src/geom/geom/src/TGeoTube.cxx:2773:13: warning: Value stored to 's' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 's' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2773; /opt/root_src/geom/geom/src/TGeoTube.cxx:2909:13: warning: Value stored to 'sz1' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'sz1' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2909; /opt/root_src/geom/geom/src/TGeoTube.cxx:3015:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:30,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:74944,Safety,safe,safe,74944,ing: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Control jumps to 'case 3:' at line 1846 in /opt/root_src/geom/geom/src/TGeoTube.cxx:1814; 2: Assuming 'id' is < 'ndiv' in /opt/root_src/geom/geom/src/TGeoTube.cxx:1855; 3: Loop condition is true. Entering loop body in /opt/root_src/geom/geom/src/TGeoTube.cxx:1855; 4: Value assigned to field 'fNodes' in /opt/root_src/geom/geom/src/TGeoTube.cxx:1856; 5: Called C++ object pointer is null in /opt/root_src/geom/geom/src/TGeoTube.cxx:1857; /opt/root_src/geom/geom/src/TGeoTube.cxx:2059:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2059; /opt/root_src/geom/geom/src/TGeoTube.cxx:2107:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2107; /opt/root_src/geom/geom/src/TGeoTube.cxx:2773:13: warning: Value stored to 's' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 's' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2773; /opt/root_src/geom/geom/src/TGeoTube.cxx:2909:13: warning: Value stored to 'sz1' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'sz1' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2909; /opt/root_src/geom/geom/src/TGeoTube.cxx:3015:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:3015; /opt/root_src/geom/geom/src/TGeoVolume.cxx:2899:7: warning: Called C++ object pointer is null [clang-analyzer-c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:75660,Safety,safe,safe,75660,ring its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2059; /opt/root_src/geom/geom/src/TGeoTube.cxx:2107:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2107; /opt/root_src/geom/geom/src/TGeoTube.cxx:2773:13: warning: Value stored to 's' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 's' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2773; /opt/root_src/geom/geom/src/TGeoTube.cxx:2909:13: warning: Value stored to 'sz1' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'sz1' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2909; /opt/root_src/geom/geom/src/TGeoTube.cxx:3015:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:3015; /opt/root_src/geom/geom/src/TGeoVolume.cxx:2899:7: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming field 'fNodes' is null in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2876; 2: Taking false branch in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2876; 3: Assuming field 'fFinder' is null in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2880; 4: Taking false branch in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2880; 5: Assuming 'ncells' is not equal to 0 in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2885; 6: Left side of '||' is false in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2885; 7: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2885; 8: Taking false branch in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2885; 9: Taking false branch i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:75764,Safety,safe,safe,75764,c/TGeoTube.cxx:2107:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2107; /opt/root_src/geom/geom/src/TGeoTube.cxx:2773:13: warning: Value stored to 's' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 's' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2773; /opt/root_src/geom/geom/src/TGeoTube.cxx:2909:13: warning: Value stored to 'sz1' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'sz1' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:2909; /opt/root_src/geom/geom/src/TGeoTube.cxx:3015:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoTube.cxx:3015; /opt/root_src/geom/geom/src/TGeoVolume.cxx:2899:7: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming field 'fNodes' is null in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2876; 2: Taking false branch in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2876; 3: Assuming field 'fFinder' is null in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2880; 4: Taking false branch in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2880; 5: Assuming 'ncells' is not equal to 0 in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2885; 6: Left side of '||' is false in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2885; 7: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2885; 8: Taking false branch in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2885; 9: Taking false branch in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2892; 10: Assuming 'i' is < 'ncells' in /opt/root_src/geom/geom/src/TG,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:80301,Safety,safe,safe,80301,"/TGeoXtru.cxx:558:13: warning: Value stored to 'dist' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'dist' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoXtru.cxx:558; /opt/root_src/geom/geom/src/TGeoXtru.cxx:878:11: warning: Although the value stored to 'indx2' is used in the enclosing expression, the value is never actually read from 'indx2' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'indx2' is used in the enclosing expression, the value is never actually read from 'indx2' in /opt/root_src/geom/geom/src/TGeoXtru.cxx:878; /opt/root_src/geom/geom/src/TGeoXtru.cxx:939:13: warning: Value stored to 'safz' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safz' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoXtru.cxx:939; /opt/root_src/geom/geom/src/TGeoXtru.cxx:943:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoXtru.cxx:943; /opt/root_src/geom/geombuilder/src/TGeoSphereEditor.cxx:351:22: warning: Value stored to 'rmin' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'rmin' is never read in /opt/root_src/geom/geombuilder/src/TGeoSphereEditor.cxx:351; /opt/root_src/geom/geombuilder/src/TGeoVolumeEditor.cxx:239:17: warning: Although the value stored to 'label' is used in the enclosing expression, the value is never actually read from 'label' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'label' is used in the enclosing expression, the value is never actually read from 'label' in /opt/root_src/geom/geombuilder/src/TGeoVolumeEditor.cxx:239; /opt/root_src/geom/geombuilder/src/TGeoVolumeEditor.cxx:317:17: warning: Although the value stored to 'label' is used in the enclosing expression, t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:80405,Safety,safe,safe,80405,"code.DeadStores]; 1: Value stored to 'dist' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoXtru.cxx:558; /opt/root_src/geom/geom/src/TGeoXtru.cxx:878:11: warning: Although the value stored to 'indx2' is used in the enclosing expression, the value is never actually read from 'indx2' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'indx2' is used in the enclosing expression, the value is never actually read from 'indx2' in /opt/root_src/geom/geom/src/TGeoXtru.cxx:878; /opt/root_src/geom/geom/src/TGeoXtru.cxx:939:13: warning: Value stored to 'safz' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safz' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoXtru.cxx:939; /opt/root_src/geom/geom/src/TGeoXtru.cxx:943:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoXtru.cxx:943; /opt/root_src/geom/geombuilder/src/TGeoSphereEditor.cxx:351:22: warning: Value stored to 'rmin' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'rmin' is never read in /opt/root_src/geom/geombuilder/src/TGeoSphereEditor.cxx:351; /opt/root_src/geom/geombuilder/src/TGeoVolumeEditor.cxx:239:17: warning: Although the value stored to 'label' is used in the enclosing expression, the value is never actually read from 'label' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'label' is used in the enclosing expression, the value is never actually read from 'label' in /opt/root_src/geom/geombuilder/src/TGeoVolumeEditor.cxx:239; /opt/root_src/geom/geombuilder/src/TGeoVolumeEditor.cxx:317:17: warning: Although the value stored to 'label' is used in the enclosing expression, the value is never actually read from 'label' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:77071,Security,access,access,77071,in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2876; 3: Assuming field 'fFinder' is null in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2880; 4: Taking false branch in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2880; 5: Assuming 'ncells' is not equal to 0 in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2885; 6: Left side of '||' is false in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2885; 7: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2885; 8: Taking false branch in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2885; 9: Taking false branch in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2892; 10: Assuming 'i' is < 'ncells' in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2895; 11: Loop condition is true. Entering loop body in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2895; 12: Called C++ object pointer is null in /opt/root_src/geom/geom/src/TGeoVolume.cxx:2899; /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1555:37: warning: Array access (from variable 'array2') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: 'slice2' initialized to a null pointer value in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1305; 2: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1309; 3: Taking false branch in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1309; 4: Assuming the condition is true in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1316; 5: Taking true branch in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1316; 6: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1318; 7: Taking false branch in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1318; 8: 'slice1' is null in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1320; 9: Taking false branch in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1320; 10: Assuming the condition is true in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1328; 11: Taking true branch in /opt/root_src/geom/geom/src/T,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:79163,Security,access,access,79163,"cxx:1330; 13: Taking false branch in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1330; 14: Assuming 'slice1' is null in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1332; 15: Left side of '&&' is false in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1332; 16: 'slice1' is null in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1335; 17: Taking false branch in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1335; 18: Control jumps to 'case 2:' at line 1352 in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1345; 19: Passing null pointer value via 4th parameter 'array2' in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1353; 20: Calling 'TGeoVoxelFinder::Intersect' in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1353; 21: Assuming 'current_byte' is < 'nbytes' in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1554; 22: Loop condition is true. Entering loop body in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1554; 23: Array access (from variable 'array2') results in a null pointer dereference in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1555; /opt/root_src/geom/geom/src/TGeoXtru.cxx:558:13: warning: Value stored to 'dist' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'dist' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoXtru.cxx:558; /opt/root_src/geom/geom/src/TGeoXtru.cxx:878:11: warning: Although the value stored to 'indx2' is used in the enclosing expression, the value is never actually read from 'indx2' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'indx2' is used in the enclosing expression, the value is never actually read from 'indx2' in /opt/root_src/geom/geom/src/TGeoXtru.cxx:878; /opt/root_src/geom/geom/src/TGeoXtru.cxx:939:13: warning: Value stored to 'safz' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safz' during its initialization is never read in /opt/root_src/geom/geom/src/TGeo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:41904,Testability,Test,TestBit,41904,"ot_src/geom/geom/src/TGeoNavigator.cxx:594; 27: Assuming 'finder' is non-null in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:545; 28: Taking false branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:545; 29: Assuming 'onbound' is false in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:557; 30: Taking false branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:557; 31: Taking true branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:594; 32: Calling 'TGeoNavigator::CrossDivisionCell' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:594; 33: Assuming 'finder' is non-null in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:545; 34: Taking false branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:545; 35: Assuming 'onbound' is false in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:557; 36: Taking false branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:557; 37: Calling 'TGeoNode::IsOffset' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:594; 38: Calling 'TObject::TestBit' in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 39: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 40: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 41: Returning from 'TObject::TestBit' in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 42: Returning zero, which participates in a condition later in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 43: Returning from 'TGeoNode::IsOffset' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:594; 44: Taking false branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:594; 45: Calling 'TGeoNavigator::CrossBoundaryAndLocate' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:595; 46: 'downwards' is false in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:612; 47: Taking true branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:612; 48: Assuming 'i' is >= field 'fLevel' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:613; 49: Loop condition is false. Execution continue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:42177,Testability,Test,TestBit,42177,"rc/TGeoNavigator.cxx:557; 30: Taking false branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:557; 31: Taking true branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:594; 32: Calling 'TGeoNavigator::CrossDivisionCell' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:594; 33: Assuming 'finder' is non-null in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:545; 34: Taking false branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:545; 35: Assuming 'onbound' is false in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:557; 36: Taking false branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:557; 37: Calling 'TGeoNode::IsOffset' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:594; 38: Calling 'TObject::TestBit' in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 39: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 40: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 41: Returning from 'TObject::TestBit' in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 42: Returning zero, which participates in a condition later in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 43: Returning from 'TGeoNode::IsOffset' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:594; 44: Taking false branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:594; 45: Calling 'TGeoNavigator::CrossBoundaryAndLocate' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:595; 46: 'downwards' is false in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:612; 47: Taking true branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:612; 48: Assuming 'i' is >= field 'fLevel' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:613; 49: Loop condition is false. Execution continues on line 618 in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:613; 50: Assuming 'current' is non-null in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:626; 51: Taking false branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:626; 52: 'downwards' is false in /opt/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:57807,Testability,Test,TestBit,57807,"om/src/TGeoPgon.cxx:1893:4: warning: Value stored to 'saftmp' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'saftmp' is never read in /opt/root_src/geom/geom/src/TGeoPgon.cxx:1893; /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:210:9: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'newmat' is non-null in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:135; 2: Left side of '&&' is false in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:135; 3: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:136; 4: Taking false branch in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:136; 5: Assuming 'newmat' is not equal to 'gGeoIdentity' in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:140; 6: Taking false branch in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:140; 7: Calling 'TGeoNode::IsOffset' in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:145; 8: Calling 'TObject::TestBit' in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 9: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 10: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 11: Returning from 'TObject::TestBit' in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 12: Returning zero, which participates in a condition later in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 13: Returning from 'TGeoNode::IsOffset' in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:145; 14: Taking false branch in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:145; 15: 'nnode' initialized to a null pointer value in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:151; 16: Calling 'TGeoPhysicalNode::IsAligned' in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:155; 17: Calling 'TObject::TestBit' in /opt/root_src/geom/geom/inc/TGeoPhysicalNode.h:77; 18: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 19: Returning zero, which ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:58079,Testability,Test,TestBit,58079,": Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'newmat' is non-null in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:135; 2: Left side of '&&' is false in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:135; 3: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:136; 4: Taking false branch in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:136; 5: Assuming 'newmat' is not equal to 'gGeoIdentity' in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:140; 6: Taking false branch in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:140; 7: Calling 'TGeoNode::IsOffset' in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:145; 8: Calling 'TObject::TestBit' in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 9: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 10: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 11: Returning from 'TObject::TestBit' in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 12: Returning zero, which participates in a condition later in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 13: Returning from 'TGeoNode::IsOffset' in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:145; 14: Taking false branch in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:145; 15: 'nnode' initialized to a null pointer value in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:151; 16: Calling 'TGeoPhysicalNode::IsAligned' in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:155; 17: Calling 'TObject::TestBit' in /opt/root_src/geom/geom/inc/TGeoPhysicalNode.h:77; 18: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 19: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 20: Returning from 'TObject::TestBit' in /opt/root_src/geom/geom/inc/TGeoPhysicalNode.h:77; 21: Returning zero, which participates in a condition later in /opt/root_src/geom/geom/inc/TGeoPh",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:58646,Testability,Test,TestBit,58646,"om/geom/src/TGeoPhysicalNode.cxx:140; 7: Calling 'TGeoNode::IsOffset' in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:145; 8: Calling 'TObject::TestBit' in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 9: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 10: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 11: Returning from 'TObject::TestBit' in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 12: Returning zero, which participates in a condition later in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 13: Returning from 'TGeoNode::IsOffset' in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:145; 14: Taking false branch in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:145; 15: 'nnode' initialized to a null pointer value in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:151; 16: Calling 'TGeoPhysicalNode::IsAligned' in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:155; 17: Calling 'TObject::TestBit' in /opt/root_src/geom/geom/inc/TGeoPhysicalNode.h:77; 18: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 19: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 20: Returning from 'TObject::TestBit' in /opt/root_src/geom/geom/inc/TGeoPhysicalNode.h:77; 21: Returning zero, which participates in a condition later in /opt/root_src/geom/geom/inc/TGeoPhysicalNode.h:77; 22: Returning from 'TGeoPhysicalNode::IsAligned' in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:155; 23: Taking true branch in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:155; 24: 'i' is >= field 'fLevel' in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:157; 25: Loop condition is false. Execution continues on line 168 in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:157; 26: 'i' is >= field 'fLevel' in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:168; 27: Loop condition is false. Execution continues on line 204 in /opt/root_src/ge",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7428:58926,Testability,Test,TestBit,58926,".h:187; 10: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 11: Returning from 'TObject::TestBit' in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 12: Returning zero, which participates in a condition later in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 13: Returning from 'TGeoNode::IsOffset' in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:145; 14: Taking false branch in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:145; 15: 'nnode' initialized to a null pointer value in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:151; 16: Calling 'TGeoPhysicalNode::IsAligned' in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:155; 17: Calling 'TObject::TestBit' in /opt/root_src/geom/geom/inc/TGeoPhysicalNode.h:77; 18: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 19: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 20: Returning from 'TObject::TestBit' in /opt/root_src/geom/geom/inc/TGeoPhysicalNode.h:77; 21: Returning zero, which participates in a condition later in /opt/root_src/geom/geom/inc/TGeoPhysicalNode.h:77; 22: Returning from 'TGeoPhysicalNode::IsAligned' in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:155; 23: Taking true branch in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:155; 24: 'i' is >= field 'fLevel' in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:157; 25: Loop condition is false. Execution continues on line 168 in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:157; 26: 'i' is >= field 'fLevel' in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:168; 27: Loop condition is false. Execution continues on line 204 in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:168; 28: Called C++ object pointer is null in /opt/root_src/geom/geom/src/TGeoPhysicalNode.cxx:210; /opt/root_src/geom/geom/src/TGeoSphere.cxx:656:16: warning: Value stored to 'sfi1' during its initialization is never read [clang-analyzer-deadco",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7428
https://github.com/root-project/root/issues/7429:9013,Energy Efficiency,allocate,allocated,9013,' in /opt/root_src/core/foundation/inc/TError.h:120; 11: Taking false branch in /opt/root_src/tree/ntuple/v7/src/RPageStorageFile.cxx:358; 12: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 13: Loop condition is false. Exiting loop in /opt/root_src/tree/ntuple/v7/src/RPageStorageFile.cxx:358; 14: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 15: Assuming the condition is true in /opt/root_src/tree/ntuple/v7/src/RPageStorageFile.cxx:359; 16: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 17: Taking false branch in /opt/root_src/tree/ntuple/v7/src/RPageStorageFile.cxx:359; 18: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 19: Loop condition is false. Exiting loop in /opt/root_src/tree/ntuple/v7/src/RPageStorageFile.cxx:359; 20: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 21: Memory is allocated in /opt/root_src/tree/ntuple/v7/src/RPageStorageFile.cxx:368; 22: Assuming the condition is false in /opt/root_src/tree/ntuple/v7/src/RPageStorageFile.cxx:369; 23: Taking false branch in /opt/root_src/tree/ntuple/v7/src/RPageStorageFile.cxx:369; 24: Assuming field 'fCurrentCluster' is non-null in /opt/root_src/tree/ntuple/v7/src/RPageStorageFile.cxx:374; 25: Left side of '||' is false in /opt/root_src/tree/ntuple/v7/src/RPageStorageFile.cxx:374; 26: Assuming the condition is false in /opt/root_src/tree/ntuple/v7/src/RPageStorageFile.cxx:374; 27: Left side of '||' is false in /opt/root_src/tree/ntuple/v7/src/RPageStorageFile.cxx:374; 28: Taking false branch in /opt/root_src/tree/ntuple/v7/src/RPageStorageFile.cxx:374; 29: Taking false branch in /opt/root_src/tree/ntuple/v7/src/RPageStorageFile.cxx:376; 30: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 31: Loop condition is false. Exiting loop in /opt/root_src/tree/ntuple/v7/src/RPageStorageFile.cxx:376; 32: exp,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7429
https://github.com/root-project/root/issues/7429:42942,Energy Efficiency,allocate,allocated,42942,_src/tree/tree/src/TBranchObject.cxx:208; 3: Taking false branch in /opt/root_src/tree/tree/src/TBranchObject.cxx:208; 4: Assuming 'nbranches' is not equal to 0 in /opt/root_src/tree/tree/src/TBranchObject.cxx:214; 5: Taking true branch in /opt/root_src/tree/tree/src/TBranchObject.cxx:214; 6: Assuming field 'fAddress' is equal to null in /opt/root_src/tree/tree/src/TBranchObject.cxx:215; 7: Taking true branch in /opt/root_src/tree/tree/src/TBranchObject.cxx:215; 8: Calling 'TBranchObject::SetupAddresses' in /opt/root_src/tree/tree/src/TBranchObject.cxx:216; 9: Field 'fAddress' is equal to null in /opt/root_src/tree/tree/src/TBranchObject.cxx:596; 10: Taking true branch in /opt/root_src/tree/tree/src/TBranchObject.cxx:596; 11: Taking true branch in /opt/root_src/tree/tree/src/TBranchObject.cxx:598; 12: Assuming 'cl' is non-null in /opt/root_src/tree/tree/src/TBranchObject.cxx:600; 13: Taking true branch in /opt/root_src/tree/tree/src/TBranchObject.cxx:600; 14: Memory is allocated in /opt/root_src/tree/tree/src/TBranchObject.cxx:601; 15: Potential leak of memory pointed to by 'voidobj' in /opt/root_src/tree/tree/src/TBranchObject.cxx:610; /opt/root_src/tree/tree/src/TBranchSTL.cxx:305:10: warning: Value stored to 'elBranch' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'elBranch' is never read in /opt/root_src/tree/tree/src/TBranchSTL.cxx:305; /opt/root_src/tree/tree/src/TBufferSQL.cxx:292:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/tree/tree/src/TBufferSQL.cxx:292; /opt/root_src/tree/tree/src/TBufferSQL,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7429
https://github.com/root-project/root/issues/7429:78378,Energy Efficiency,allocate,allocated,78378,alse branch in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:553; 39: Assuming the condition is false in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:555; 40: Taking false branch in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:555; 41: Assuming 'readbuf' is > 0 in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:563; 42: Taking false branch in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:563; 43: Assuming the condition is false in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:571; 44: '?' condition is false in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:571; 45: Assuming the condition is false in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:576; 46: Taking false branch in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:576; 47: Calling 'TTreeCacheUnzip::UnzipBuffer' in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:587; 48: Taking true branch in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:860; 49: Assuming the condition is false in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:864; 50: Left side of '&&' is false in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:864; 51: Memory is allocated in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:870; 52: Assuming the condition is false in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:879; 53: Left side of '&&' is false in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:880; 54: Left side of '||' is false in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:883; 55: 'oldCase' is false in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:883; 56: Taking false branch in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:883; 57: Returned allocated memory via 1st parameter in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:587; 58: Assuming 'loclen' is <= 0 in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:588; 59: Left side of '&&' is false in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:588; 60: Potential leak of memory pointed to by 'ptr' in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:597; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7429
https://github.com/root-project/root/issues/7429:78882,Energy Efficiency,allocate,allocated,78882,alse branch in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:553; 39: Assuming the condition is false in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:555; 40: Taking false branch in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:555; 41: Assuming 'readbuf' is > 0 in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:563; 42: Taking false branch in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:563; 43: Assuming the condition is false in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:571; 44: '?' condition is false in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:571; 45: Assuming the condition is false in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:576; 46: Taking false branch in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:576; 47: Calling 'TTreeCacheUnzip::UnzipBuffer' in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:587; 48: Taking true branch in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:860; 49: Assuming the condition is false in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:864; 50: Left side of '&&' is false in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:864; 51: Memory is allocated in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:870; 52: Assuming the condition is false in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:879; 53: Left side of '&&' is false in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:880; 54: Left side of '||' is false in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:883; 55: 'oldCase' is false in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:883; 56: Taking false branch in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:883; 57: Returned allocated memory via 1st parameter in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:587; 58: Assuming 'loclen' is <= 0 in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:588; 59: Left side of '&&' is false in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:588; 60: Potential leak of memory pointed to by 'ptr' in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:597; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7429
https://github.com/root-project/root/issues/7429:71177,Modifiability,variab,variable,71177,h arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/tree/tree/src/TLeaf.cxx:272; /opt/root_src/tree/tree/src/TLeafObject.cxx:94:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/tree/tree/src/TLeafObject.cxx:94; /opt/root_src/tree/tree/src/TTree.cxx:2084:30: warning: Dereference of null pointer (loaded from variable 'apointer') [clang-analyzer-core.NullDereference]; 1: Assuming 'ptrClass' is non-null in /opt/root_src/tree/tree/src/TTree.cxx:1586; 2: Taking false branch in /opt/root_src/tree/tree/src/TTree.cxx:1586; 3: Assuming 'addr' is null in /opt/root_src/tree/tree/src/TTree.cxx:1592; 4: Left side of '&&' is false in /opt/root_src/tree/tree/src/TTree.cxx:1592; 5: 'actualClass' is non-null in /opt/root_src/tree/tree/src/TTree.cxx:1605; 6: Left side of '&&' is true in /opt/root_src/tree/tree/src/TTree.cxx:1605; 7: Assuming the condition is false in /opt/root_src/tree/tree/src/TTree.cxx:1605; 8: Left side of '&&' is false in /opt/root_src/tree/tree/src/TTree.cxx:1605; 9: Passing null pointer value via 3rd parameter 'addobj' in /opt/root_src/tree/tree/src/TTree.cxx:1610; 10: Calling 'TTree::Branch' in /opt/root_src/tree/tree/src/TTree.cxx:1610; 11: Assuming 'fgBranchStyle' is not equal to 1 in /opt/root_src/tree/tree/src/TTree.cxx:2004; 12: Taking false branch in /opt/root_src/tr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7429
https://github.com/root-project/root/issues/7429:73137,Modifiability,variab,variable,73137,se branch in /opt/root_src/tree/tree/src/TTree.cxx:2004; 13: Assuming 'splitlevel' is >= 0 in /opt/root_src/tree/tree/src/TTree.cxx:2007; 14: Taking false branch in /opt/root_src/tree/tree/src/TTree.cxx:2007; 15: Passing null pointer value via 3rd parameter 'addobj' in /opt/root_src/tree/tree/src/TTree.cxx:2010; 16: Calling 'TTree::BranchOld' in /opt/root_src/tree/tree/src/TTree.cxx:2010; 17: Assuming 'cl' is non-null in /opt/root_src/tree/tree/src/TTree.cxx:2058; 18: Taking false branch in /opt/root_src/tree/tree/src/TTree.cxx:2058; 19: Assuming the condition is false in /opt/root_src/tree/tree/src/TTree.cxx:2062; 20: Taking false branch in /opt/root_src/tree/tree/src/TTree.cxx:2062; 21: Assuming 'splitlevel' is not equal to 0 in /opt/root_src/tree/tree/src/TTree.cxx:2075; 22: Taking false branch in /opt/root_src/tree/tree/src/TTree.cxx:2075; 23: 'apointer' initialized to a null pointer value in /opt/root_src/tree/tree/src/TTree.cxx:2083; 24: Dereference of null pointer (loaded from variable 'apointer') in /opt/root_src/tree/tree/src/TTree.cxx:2084; /opt/root_src/tree/tree/src/TTree.cxx:7012:4: warning: Value stored to 'i' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'i' is never read in /opt/root_src/tree/tree/src/TTree.cxx:7012; /opt/root_src/tree/tree/src/TTree.cxx:7591:10: warning: Value stored to 'nch' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nch' is never read in /opt/root_src/tree/tree/src/TTree.cxx:7591; /opt/root_src/tree/tree/src/TTree.cxx:9170:7: warning: Value stored to 'pf' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'pf' is never read in /opt/root_src/tree/tree/src/TTree.cxx:9170; /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:597:7: warning: Potential leak of memory pointed to by 'ptr' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Assuming field 'fParallel' is true in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:681; 2: Left side of '&&' is true in /opt/root_src/tr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7429
https://github.com/root-project/root/issues/7429:71165,Performance,load,loaded,71165,h arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/tree/tree/src/TLeaf.cxx:272; /opt/root_src/tree/tree/src/TLeafObject.cxx:94:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/tree/tree/src/TLeafObject.cxx:94; /opt/root_src/tree/tree/src/TTree.cxx:2084:30: warning: Dereference of null pointer (loaded from variable 'apointer') [clang-analyzer-core.NullDereference]; 1: Assuming 'ptrClass' is non-null in /opt/root_src/tree/tree/src/TTree.cxx:1586; 2: Taking false branch in /opt/root_src/tree/tree/src/TTree.cxx:1586; 3: Assuming 'addr' is null in /opt/root_src/tree/tree/src/TTree.cxx:1592; 4: Left side of '&&' is false in /opt/root_src/tree/tree/src/TTree.cxx:1592; 5: 'actualClass' is non-null in /opt/root_src/tree/tree/src/TTree.cxx:1605; 6: Left side of '&&' is true in /opt/root_src/tree/tree/src/TTree.cxx:1605; 7: Assuming the condition is false in /opt/root_src/tree/tree/src/TTree.cxx:1605; 8: Left side of '&&' is false in /opt/root_src/tree/tree/src/TTree.cxx:1605; 9: Passing null pointer value via 3rd parameter 'addobj' in /opt/root_src/tree/tree/src/TTree.cxx:1610; 10: Calling 'TTree::Branch' in /opt/root_src/tree/tree/src/TTree.cxx:1610; 11: Assuming 'fgBranchStyle' is not equal to 1 in /opt/root_src/tree/tree/src/TTree.cxx:2004; 12: Taking false branch in /opt/root_src/tr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7429
https://github.com/root-project/root/issues/7429:73125,Performance,load,loaded,73125,se branch in /opt/root_src/tree/tree/src/TTree.cxx:2004; 13: Assuming 'splitlevel' is >= 0 in /opt/root_src/tree/tree/src/TTree.cxx:2007; 14: Taking false branch in /opt/root_src/tree/tree/src/TTree.cxx:2007; 15: Passing null pointer value via 3rd parameter 'addobj' in /opt/root_src/tree/tree/src/TTree.cxx:2010; 16: Calling 'TTree::BranchOld' in /opt/root_src/tree/tree/src/TTree.cxx:2010; 17: Assuming 'cl' is non-null in /opt/root_src/tree/tree/src/TTree.cxx:2058; 18: Taking false branch in /opt/root_src/tree/tree/src/TTree.cxx:2058; 19: Assuming the condition is false in /opt/root_src/tree/tree/src/TTree.cxx:2062; 20: Taking false branch in /opt/root_src/tree/tree/src/TTree.cxx:2062; 21: Assuming 'splitlevel' is not equal to 0 in /opt/root_src/tree/tree/src/TTree.cxx:2075; 22: Taking false branch in /opt/root_src/tree/tree/src/TTree.cxx:2075; 23: 'apointer' initialized to a null pointer value in /opt/root_src/tree/tree/src/TTree.cxx:2083; 24: Dereference of null pointer (loaded from variable 'apointer') in /opt/root_src/tree/tree/src/TTree.cxx:2084; /opt/root_src/tree/tree/src/TTree.cxx:7012:4: warning: Value stored to 'i' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'i' is never read in /opt/root_src/tree/tree/src/TTree.cxx:7012; /opt/root_src/tree/tree/src/TTree.cxx:7591:10: warning: Value stored to 'nch' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nch' is never read in /opt/root_src/tree/tree/src/TTree.cxx:7591; /opt/root_src/tree/tree/src/TTree.cxx:9170:7: warning: Value stored to 'pf' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'pf' is never read in /opt/root_src/tree/tree/src/TTree.cxx:9170; /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:597:7: warning: Potential leak of memory pointed to by 'ptr' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Assuming field 'fParallel' is true in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:681; 2: Left side of '&&' is true in /opt/root_src/tr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7429
https://github.com/root-project/root/issues/7429:15789,Security,access,access,15789,expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 2: 'onDiskPage' initialized here in /opt/root_src/tree/ntuple/v7/src/RPageStorageFile.cxx:612; 3: Assuming 'onDiskPage' is null in /opt/root_src/tree/ntuple/v7/src/RPageStorageFile.cxx:613; 4: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 5: Taking true branch in /opt/root_src/tree/ntuple/v7/src/RPageStorageFile.cxx:613; 6: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 7: Loop condition is false. Exiting loop in /opt/root_src/tree/ntuple/v7/src/RPageStorageFile.cxx:613; 8: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 9: Called C++ object pointer is null in /opt/root_src/tree/ntuple/v7/src/RPageStorageFile.cxx:614; 10: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120. /opt/root_src/tree/tree/src/TBasket.cxx:918:57: warning: Array access (via field 'fEntryOffset') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming the condition is false in /opt/root_src/tree/tree/src/TBasket.cxx:825; 2: Taking false branch in /opt/root_src/tree/tree/src/TBasket.cxx:825; 3: Assuming 'max_size' is 0 in /opt/root_src/tree/tree/src/TBasket.cxx:853; 4: Left side of '&&' is false in /opt/root_src/tree/tree/src/TBasket.cxx:853; 5: Taking false branch in /opt/root_src/tree/tree/src/TBasket.cxx:866; 6: Assuming 'newNevBufSize' is equal to 0 in /opt/root_src/tree/tree/src/TBasket.cxx:887; 7: Taking true branch in /opt/root_src/tree/tree/src/TBasket.cxx:887; 8: Calling 'TBasket::ResetEntryOffset' in /opt/root_src/tree/tree/src/TBasket.cxx:888; 9: Assuming the condition is false in /opt/root_src/tree/tree/src/TBasket.cxx:443; 10: Taking false branch in /opt/root_src/tree/tree/src/TBasket.cxx:443; 11: Null pointer value stored to field 'fEntryOffset' in /opt/root_src/tree/tree/src/TBasket.cxx:446; 12: Returning from 'TBasket::ResetEntry,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7429
https://github.com/root-project/root/issues/7429:17452,Security,access,access,17452,e/tree/src/TBasket.cxx:888; 9: Assuming the condition is false in /opt/root_src/tree/tree/src/TBasket.cxx:443; 10: Taking false branch in /opt/root_src/tree/tree/src/TBasket.cxx:443; 11: Null pointer value stored to field 'fEntryOffset' in /opt/root_src/tree/tree/src/TBasket.cxx:446; 12: Returning from 'TBasket::ResetEntryOffset' in /opt/root_src/tree/tree/src/TBasket.cxx:888; 13: 'storeEntryOffset' initialized to a null pointer value in /opt/root_src/tree/tree/src/TBasket.cxx:896; 14: Null pointer value stored to field 'fEntryOffset' in /opt/root_src/tree/tree/src/TBasket.cxx:916; 15: Assuming field 'fNevBufSize' is not equal to 0 in /opt/root_src/tree/tree/src/TBasket.cxx:917; 16: Taking true branch in /opt/root_src/tree/tree/src/TBasket.cxx:917; 17: Assuming 'i' is < field 'fNevBufSize' in /opt/root_src/tree/tree/src/TBasket.cxx:918; 18: Loop condition is true. Entering loop body in /opt/root_src/tree/tree/src/TBasket.cxx:918; 19: Array access (via field 'fEntryOffset') results in a null pointer dereference in /opt/root_src/tree/tree/src/TBasket.cxx:918; /opt/root_src/tree/tree/src/TBranch.cxx:233:14: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'basketsize' is < 100 in /opt/root_src/tree/tree/src/TBranch.cxx:203; 2: '?' condition is true in /opt/root_src/tree/tree/src/TBranch.cxx:203; 3: Assuming 'tree' is null in /opt/root_src/tree/tree/src/TBranch.cxx:208; 4: '?' condition is false in /opt/root_src/tree/tree/src/TBranch.cxx:208; 5: Null pointer value stored to field 'fTree' in /opt/root_src/tree/tree/src/TBranch.cxx:229; 6: Called C++ object pointer is null in /opt/root_src/tree/tree/src/TBranch.cxx:233; /opt/root_src/tree/tree/src/TBranchClones.cxx:92:28: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Passing null pointer value via 1st parameter 'tree' in /opt/root_src/tree/tree/src/TBranchClones.cxx:75; 2: Calling 'TBranchClones::Init' in /opt/root_src/tree/tree/src/TBranchC,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7429
https://github.com/root-project/root/issues/7429:43629,Security,secur,security,43629,ng true branch in /opt/root_src/tree/tree/src/TBranchObject.cxx:596; 11: Taking true branch in /opt/root_src/tree/tree/src/TBranchObject.cxx:598; 12: Assuming 'cl' is non-null in /opt/root_src/tree/tree/src/TBranchObject.cxx:600; 13: Taking true branch in /opt/root_src/tree/tree/src/TBranchObject.cxx:600; 14: Memory is allocated in /opt/root_src/tree/tree/src/TBranchObject.cxx:601; 15: Potential leak of memory pointed to by 'voidobj' in /opt/root_src/tree/tree/src/TBranchObject.cxx:610; /opt/root_src/tree/tree/src/TBranchSTL.cxx:305:10: warning: Value stored to 'elBranch' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'elBranch' is never read in /opt/root_src/tree/tree/src/TBranchSTL.cxx:305; /opt/root_src/tree/tree/src/TBufferSQL.cxx:292:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/tree/tree/src/TBufferSQL.cxx:292; /opt/root_src/tree/tree/src/TBufferSQL.cxx:635:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/tree/tree/src/TBufferSQL.cxx:635; /opt/root_src/tree/tree/src/TChain.cxx:2366:32: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage];,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7429
https://github.com/root-project/root/issues/7429:44202,Security,secur,security,44202,"anch' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'elBranch' is never read in /opt/root_src/tree/tree/src/TBranchSTL.cxx:305; /opt/root_src/tree/tree/src/TBufferSQL.cxx:292:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/tree/tree/src/TBufferSQL.cxx:292; /opt/root_src/tree/tree/src/TBufferSQL.cxx:635:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/tree/tree/src/TBufferSQL.cxx:635; /opt/root_src/tree/tree/src/TChain.cxx:2366:32: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Taking false branch in /opt/root_src/tree/tree/src/TChain.cxx:2346; 2: Calling 'TString::Contains' in /opt/root_src/tree/tree/src/TChain.cxx:2356; 3: 's' is non-null in /opt/root_src/core/base/inc/TString.h:625; 4: '?' condition is true in /opt/root_src/core/base/inc/TString.h:625; 5: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:625; 6: Returning the value 1, which participates in a condition later in /opt/root_src/core/base/inc/TString.h:625; 7: Returning from 'TString::Contains' in /opt/root_src/tree/tree/src/TChain.cxx:2356; 8: Takin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7429
https://github.com/root-project/root/issues/7429:69095,Security,secur,security,69095,"5: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 16: Returning from 'TObject::TestBit' in /opt/root_src/core/base/inc/TObject.h:149; 17: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:149; 18: Returning from 'TObject::IsZombie' in /opt/root_src/tree/tree/src/TFriendElement.cxx:185; 19: Taking false branch in /opt/root_src/tree/tree/src/TFriendElement.cxx:185; 20: Assuming the condition is false in /opt/root_src/tree/tree/src/TFriendElement.cxx:187; 21: Taking false branch in /opt/root_src/tree/tree/src/TFriendElement.cxx:187; 22: Called C++ object pointer is null in /opt/root_src/tree/tree/src/TFriendElement.cxx:192; /opt/root_src/tree/tree/src/TLeaf.cxx:237:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/tree/tree/src/TLeaf.cxx:237; /opt/root_src/tree/tree/src/TLeaf.cxx:270:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/tree/tree/src/TLeaf.cxx:270; /opt/root_src/tree/tree/src/TLeaf.cxx:272:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7429
https://github.com/root-project/root/issues/7429:69658,Security,secur,security,69658,Taking false branch in /opt/root_src/tree/tree/src/TFriendElement.cxx:187; 22: Called C++ object pointer is null in /opt/root_src/tree/tree/src/TFriendElement.cxx:192; /opt/root_src/tree/tree/src/TLeaf.cxx:237:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/tree/tree/src/TLeaf.cxx:237; /opt/root_src/tree/tree/src/TLeaf.cxx:270:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/tree/tree/src/TLeaf.cxx:270; /opt/root_src/tree/tree/src/TLeaf.cxx:272:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/tree/tree/src/TLeaf.cxx:272; /opt/root_src/tree/tree/src/TLeafObject.cxx:94:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7429
https://github.com/root-project/root/issues/7429:70221,Security,secur,security,70221,uffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/tree/tree/src/TLeaf.cxx:237; /opt/root_src/tree/tree/src/TLeaf.cxx:270:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/tree/tree/src/TLeaf.cxx:270; /opt/root_src/tree/tree/src/TLeaf.cxx:272:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/tree/tree/src/TLeaf.cxx:272; /opt/root_src/tree/tree/src/TLeafObject.cxx:94:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/tree/tree/src/TLeafObject.cxx:94; /opt/root_src/tree/tree/src/TTree.cxx:2084:30: warning: Dereference of null pointer (loaded from variable 'apointer') [clang-analyzer,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7429
https://github.com/root-project/root/issues/7429:70789,Security,secur,security,70789,. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/tree/tree/src/TLeaf.cxx:270; /opt/root_src/tree/tree/src/TLeaf.cxx:272:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/tree/tree/src/TLeaf.cxx:272; /opt/root_src/tree/tree/src/TLeafObject.cxx:94:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/tree/tree/src/TLeafObject.cxx:94; /opt/root_src/tree/tree/src/TTree.cxx:2084:30: warning: Dereference of null pointer (loaded from variable 'apointer') [clang-analyzer-core.NullDereference]; 1: Assuming 'ptrClass' is non-null in /opt/root_src/tree/tree/src/TTree.cxx:1586; 2: Taking false branch in /opt/root_src/tree/tree/src/TTree.cxx:1586; 3: Assuming 'addr' is null in /opt/root_src/tree/tree/src/TTree.cxx:1592; 4: Left side of '&&' is false in /opt/root_src/tree/tree/src/TTree.cxx:1592; 5: 'actualClass' is non-null in /opt/root_src/tree/tree/src/TTree.cxx:1605; 6: Left side of '&&' is true in /opt/root_src/tree/tree/src/TTree.cxx:1605; 7: Assuming the condition is false in /opt/root_src/tree/tree/src/TTree.cxx:1605; 8: Left,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7429
https://github.com/root-project/root/issues/7429:31290,Testability,Test,TestBit,31290,": 'info' is non-null in /opt/root_src/tree/tree/src/TBranchElement.cxx:4553; 17: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:4553; 18: Passing the value 0 via 2nd parameter 'len' in /opt/root_src/tree/tree/src/TBranchElement.cxx:4561; 19: Calling 'TBranchElement::GetValue' in /opt/root_src/tree/tree/src/TBranchElement.cxx:4561; 20: Passing the value 0 via 2nd parameter 'len' in /opt/root_src/tree/tree/inc/TBranchElement.h:207; 21: Calling 'TBranchElement::GetTypedValue' in /opt/root_src/tree/tree/inc/TBranchElement.h:207; 22: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2889; 23: 'j' is 0 in /opt/root_src/tree/tree/src/TBranchElement.cxx:2897; 24: Left side of '&&' is true in /opt/root_src/tree/tree/src/TBranchElement.cxx:2897; 25: Assuming field 'fBranchCount' is null in /opt/root_src/tree/tree/src/TBranchElement.cxx:2897; 26: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2897; 27: Calling 'TObject::TestBit' in /opt/root_src/tree/tree/src/TBranchElement.cxx:2909; 28: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 29: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 30: Returning from 'TObject::TestBit' in /opt/root_src/tree/tree/src/TBranchElement.cxx:2909; 31: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2909; 32: 'object' is not equal to null in /opt/root_src/tree/tree/src/TBranchElement.cxx:2935; 33: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2935; 34: Assuming field 'fType' is equal to 31 in /opt/root_src/tree/tree/src/TBranchElement.cxx:2942; 35: Taking true branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2942; 36: 'subarr' is false in /opt/root_src/tree/tree/src/TBranchElement.cxx:2944; 37: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2944; 38: Division by zero in /opt/root_src/tree/tree/src/TBranchElement.cxx:2947; /op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7429
https://github.com/root-project/root/issues/7429:31572,Testability,Test,TestBit,31572,"hElement::GetValue' in /opt/root_src/tree/tree/src/TBranchElement.cxx:4561; 20: Passing the value 0 via 2nd parameter 'len' in /opt/root_src/tree/tree/inc/TBranchElement.h:207; 21: Calling 'TBranchElement::GetTypedValue' in /opt/root_src/tree/tree/inc/TBranchElement.h:207; 22: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2889; 23: 'j' is 0 in /opt/root_src/tree/tree/src/TBranchElement.cxx:2897; 24: Left side of '&&' is true in /opt/root_src/tree/tree/src/TBranchElement.cxx:2897; 25: Assuming field 'fBranchCount' is null in /opt/root_src/tree/tree/src/TBranchElement.cxx:2897; 26: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2897; 27: Calling 'TObject::TestBit' in /opt/root_src/tree/tree/src/TBranchElement.cxx:2909; 28: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 29: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 30: Returning from 'TObject::TestBit' in /opt/root_src/tree/tree/src/TBranchElement.cxx:2909; 31: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2909; 32: 'object' is not equal to null in /opt/root_src/tree/tree/src/TBranchElement.cxx:2935; 33: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2935; 34: Assuming field 'fType' is equal to 31 in /opt/root_src/tree/tree/src/TBranchElement.cxx:2942; 35: Taking true branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2942; 36: 'subarr' is false in /opt/root_src/tree/tree/src/TBranchElement.cxx:2944; 37: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2944; 38: Division by zero in /opt/root_src/tree/tree/src/TBranchElement.cxx:2947; /opt/root_src/tree/tree/src/TBranchElement.cxx:2955:106: warning: Division by zero [clang-analyzer-core.DivideZero]; 1: Assuming field 'fObject' is not equal to null in /opt/root_src/tree/tree/src/TBranchElement.cxx:4535; 2: Taking false branch in /opt/root_src/tree/tree/src/TBranch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7429
https://github.com/root-project/root/issues/7429:34768,Testability,Test,TestBit,34768,": 'info' is non-null in /opt/root_src/tree/tree/src/TBranchElement.cxx:4553; 17: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:4553; 18: Passing the value 0 via 2nd parameter 'len' in /opt/root_src/tree/tree/src/TBranchElement.cxx:4561; 19: Calling 'TBranchElement::GetValue' in /opt/root_src/tree/tree/src/TBranchElement.cxx:4561; 20: Passing the value 0 via 2nd parameter 'len' in /opt/root_src/tree/tree/inc/TBranchElement.h:207; 21: Calling 'TBranchElement::GetTypedValue' in /opt/root_src/tree/tree/inc/TBranchElement.h:207; 22: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2889; 23: 'j' is 0 in /opt/root_src/tree/tree/src/TBranchElement.cxx:2897; 24: Left side of '&&' is true in /opt/root_src/tree/tree/src/TBranchElement.cxx:2897; 25: Assuming field 'fBranchCount' is null in /opt/root_src/tree/tree/src/TBranchElement.cxx:2897; 26: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2897; 27: Calling 'TObject::TestBit' in /opt/root_src/tree/tree/src/TBranchElement.cxx:2909; 28: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 29: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 30: Returning from 'TObject::TestBit' in /opt/root_src/tree/tree/src/TBranchElement.cxx:2909; 31: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2909; 32: 'object' is not equal to null in /opt/root_src/tree/tree/src/TBranchElement.cxx:2935; 33: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2935; 34: Assuming field 'fType' is not equal to 31 in /opt/root_src/tree/tree/src/TBranchElement.cxx:2942; 35: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2942; 36: Assuming field 'fType' is equal to 41 in /opt/root_src/tree/tree/src/TBranchElement.cxx:2948; 37: Taking true branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2948; 38: Assuming field 'fSplitLevel' is < kSplitCollectionOf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7429
https://github.com/root-project/root/issues/7429:35050,Testability,Test,TestBit,35050,"hElement::GetValue' in /opt/root_src/tree/tree/src/TBranchElement.cxx:4561; 20: Passing the value 0 via 2nd parameter 'len' in /opt/root_src/tree/tree/inc/TBranchElement.h:207; 21: Calling 'TBranchElement::GetTypedValue' in /opt/root_src/tree/tree/inc/TBranchElement.h:207; 22: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2889; 23: 'j' is 0 in /opt/root_src/tree/tree/src/TBranchElement.cxx:2897; 24: Left side of '&&' is true in /opt/root_src/tree/tree/src/TBranchElement.cxx:2897; 25: Assuming field 'fBranchCount' is null in /opt/root_src/tree/tree/src/TBranchElement.cxx:2897; 26: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2897; 27: Calling 'TObject::TestBit' in /opt/root_src/tree/tree/src/TBranchElement.cxx:2909; 28: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 29: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 30: Returning from 'TObject::TestBit' in /opt/root_src/tree/tree/src/TBranchElement.cxx:2909; 31: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2909; 32: 'object' is not equal to null in /opt/root_src/tree/tree/src/TBranchElement.cxx:2935; 33: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2935; 34: Assuming field 'fType' is not equal to 31 in /opt/root_src/tree/tree/src/TBranchElement.cxx:2942; 35: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2942; 36: Assuming field 'fType' is equal to 41 in /opt/root_src/tree/tree/src/TBranchElement.cxx:2948; 37: Taking true branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2948; 38: Assuming field 'fSplitLevel' is < kSplitCollectionOfPointers in /opt/root_src/tree/tree/src/TBranchElement.cxx:2950; 39: Taking true branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2950; 40: 'subarr' is false in /opt/root_src/tree/tree/src/TBranchElement.cxx:2952; 41: Taking false branch in /opt/root_src/tree/tree/src/TBr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7429
https://github.com/root-project/root/issues/7429:38628,Testability,Test,TestBit,38628,": 'info' is non-null in /opt/root_src/tree/tree/src/TBranchElement.cxx:4553; 17: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:4553; 18: Passing the value 0 via 2nd parameter 'len' in /opt/root_src/tree/tree/src/TBranchElement.cxx:4561; 19: Calling 'TBranchElement::GetValue' in /opt/root_src/tree/tree/src/TBranchElement.cxx:4561; 20: Passing the value 0 via 2nd parameter 'len' in /opt/root_src/tree/tree/inc/TBranchElement.h:207; 21: Calling 'TBranchElement::GetTypedValue' in /opt/root_src/tree/tree/inc/TBranchElement.h:207; 22: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2889; 23: 'j' is 0 in /opt/root_src/tree/tree/src/TBranchElement.cxx:2897; 24: Left side of '&&' is true in /opt/root_src/tree/tree/src/TBranchElement.cxx:2897; 25: Assuming field 'fBranchCount' is null in /opt/root_src/tree/tree/src/TBranchElement.cxx:2897; 26: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2897; 27: Calling 'TObject::TestBit' in /opt/root_src/tree/tree/src/TBranchElement.cxx:2909; 28: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 29: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 30: Returning from 'TObject::TestBit' in /opt/root_src/tree/tree/src/TBranchElement.cxx:2909; 31: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2909; 32: 'object' is not equal to null in /opt/root_src/tree/tree/src/TBranchElement.cxx:2935; 33: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2935; 34: Assuming field 'fType' is not equal to 31 in /opt/root_src/tree/tree/src/TBranchElement.cxx:2942; 35: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2942; 36: Assuming field 'fType' is equal to 41 in /opt/root_src/tree/tree/src/TBranchElement.cxx:2948; 37: Taking true branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2948; 38: Assuming field 'fSplitLevel' is >= kSplitCollectionO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7429
https://github.com/root-project/root/issues/7429:38910,Testability,Test,TestBit,38910,"hElement::GetValue' in /opt/root_src/tree/tree/src/TBranchElement.cxx:4561; 20: Passing the value 0 via 2nd parameter 'len' in /opt/root_src/tree/tree/inc/TBranchElement.h:207; 21: Calling 'TBranchElement::GetTypedValue' in /opt/root_src/tree/tree/inc/TBranchElement.h:207; 22: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2889; 23: 'j' is 0 in /opt/root_src/tree/tree/src/TBranchElement.cxx:2897; 24: Left side of '&&' is true in /opt/root_src/tree/tree/src/TBranchElement.cxx:2897; 25: Assuming field 'fBranchCount' is null in /opt/root_src/tree/tree/src/TBranchElement.cxx:2897; 26: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2897; 27: Calling 'TObject::TestBit' in /opt/root_src/tree/tree/src/TBranchElement.cxx:2909; 28: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 29: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 30: Returning from 'TObject::TestBit' in /opt/root_src/tree/tree/src/TBranchElement.cxx:2909; 31: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2909; 32: 'object' is not equal to null in /opt/root_src/tree/tree/src/TBranchElement.cxx:2935; 33: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2935; 34: Assuming field 'fType' is not equal to 31 in /opt/root_src/tree/tree/src/TBranchElement.cxx:2942; 35: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2942; 36: Assuming field 'fType' is equal to 41 in /opt/root_src/tree/tree/src/TBranchElement.cxx:2948; 37: Taking true branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2948; 38: Assuming field 'fSplitLevel' is >= kSplitCollectionOfPointers in /opt/root_src/tree/tree/src/TBranchElement.cxx:2950; 39: Taking false branch in /opt/root_src/tree/tree/src/TBranchElement.cxx:2950; 40: 'subarr' is false in /opt/root_src/tree/tree/src/TBranchElement.cxx:2959; 41: Taking false branch in /opt/root_src/tree/tree/src/T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7429
https://github.com/root-project/root/issues/7429:67949,Testability,Test,TestBit,67949," 2: '?' condition is false in /opt/root_src/tree/tree/src/TFriendElement.cxx:81; 3: Value assigned to field 'fParentTree' in /opt/root_src/tree/tree/src/TFriendElement.cxx:87; 4: Assuming field 'fParentTree' is null in /opt/root_src/tree/tree/src/TFriendElement.cxx:88; 5: Left side of '&&' is false in /opt/root_src/tree/tree/src/TFriendElement.cxx:88; 6: Assuming 'treename' is null in /opt/root_src/tree/tree/src/TFriendElement.cxx:94; 7: Left side of '&&' is false in /opt/root_src/tree/tree/src/TFriendElement.cxx:94; 8: Calling 'TFriendElement::Connect' in /opt/root_src/tree/tree/src/TFriendElement.cxx:104; 9: Calling 'TFriendElement::GetFile' in /opt/root_src/tree/tree/src/TFriendElement.cxx:159; 10: Assuming field 'fFile' is null in /opt/root_src/tree/tree/src/TFriendElement.cxx:185; 11: Left side of '||' is false in /opt/root_src/tree/tree/src/TFriendElement.cxx:185; 12: Calling 'TObject::IsZombie' in /opt/root_src/tree/tree/src/TFriendElement.cxx:185; 13: Calling 'TObject::TestBit' in /opt/root_src/core/base/inc/TObject.h:149; 14: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 15: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 16: Returning from 'TObject::TestBit' in /opt/root_src/core/base/inc/TObject.h:149; 17: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:149; 18: Returning from 'TObject::IsZombie' in /opt/root_src/tree/tree/src/TFriendElement.cxx:185; 19: Taking false branch in /opt/root_src/tree/tree/src/TFriendElement.cxx:185; 20: Assuming the condition is false in /opt/root_src/tree/tree/src/TFriendElement.cxx:187; 21: Taking false branch in /opt/root_src/tree/tree/src/TFriendElement.cxx:187; 22: Called C++ object pointer is null in /opt/root_src/tree/tree/src/TFriendElement.cxx:192; /opt/root_src/tree/tree/src/TLeaf.cxx:237:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7429
https://github.com/root-project/root/issues/7429:68221,Testability,Test,TestBit,68221,"5: Left side of '&&' is false in /opt/root_src/tree/tree/src/TFriendElement.cxx:88; 6: Assuming 'treename' is null in /opt/root_src/tree/tree/src/TFriendElement.cxx:94; 7: Left side of '&&' is false in /opt/root_src/tree/tree/src/TFriendElement.cxx:94; 8: Calling 'TFriendElement::Connect' in /opt/root_src/tree/tree/src/TFriendElement.cxx:104; 9: Calling 'TFriendElement::GetFile' in /opt/root_src/tree/tree/src/TFriendElement.cxx:159; 10: Assuming field 'fFile' is null in /opt/root_src/tree/tree/src/TFriendElement.cxx:185; 11: Left side of '||' is false in /opt/root_src/tree/tree/src/TFriendElement.cxx:185; 12: Calling 'TObject::IsZombie' in /opt/root_src/tree/tree/src/TFriendElement.cxx:185; 13: Calling 'TObject::TestBit' in /opt/root_src/core/base/inc/TObject.h:149; 14: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 15: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 16: Returning from 'TObject::TestBit' in /opt/root_src/core/base/inc/TObject.h:149; 17: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:149; 18: Returning from 'TObject::IsZombie' in /opt/root_src/tree/tree/src/TFriendElement.cxx:185; 19: Taking false branch in /opt/root_src/tree/tree/src/TFriendElement.cxx:185; 20: Assuming the condition is false in /opt/root_src/tree/tree/src/TFriendElement.cxx:187; 21: Taking false branch in /opt/root_src/tree/tree/src/TFriendElement.cxx:187; 22: Called C++ object pointer is null in /opt/root_src/tree/tree/src/TFriendElement.cxx:192; /opt/root_src/tree/tree/src/TLeaf.cxx:237:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7429
https://github.com/root-project/root/issues/7431:118356,Energy Efficiency,allocate,allocated,118356,StreamerInfo.cxx:3630:7: warning: Value stored to 'clname' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'clname' is never read in /opt/root_src/io/io/src/TStreamerInfo.cxx:3630; /opt/root_src/io/io/src/TStreamerInfo.cxx:4006:4: warning: Value stored to 'ninc' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'ninc' is never read in /opt/root_src/io/io/src/TStreamerInfo.cxx:4006; /opt/root_src/io/io/src/TStreamerInfo.cxx:4011:10: warning: Value stored to 'ninc' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'ninc' is never read in /opt/root_src/io/io/src/TStreamerInfo.cxx:4011; /opt/root_src/io/io/src/TStreamerInfoActions.cxx:3464:8: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Taking false branch in /opt/root_src/io/io/src/TStreamerInfoActions.cxx:3246; 2: Control jumps to 'case 215:' at line 3434 in /opt/root_src/io/io/src/TStreamerInfoActions.cxx:3248; 3: Memory is allocated in /opt/root_src/io/io/src/TStreamerInfoActions.cxx:3435; 4: Execution continues on line 3464 in /opt/root_src/io/io/src/TStreamerInfoActions.cxx:3436; 5: Potential memory leak in /opt/root_src/io/io/src/TStreamerInfoActions.cxx:3464; /opt/root_src/io/io/src/TStreamerInfoActions.cxx:3958:10: warning: Value stored to 'asize' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'asize' is never read in /opt/root_src/io/io/src/TStreamerInfoActions.cxx:3958; /opt/root_src/io/io/src/TStreamerInfoActions.cxx:4063:13: warning: Value stored to 'asize' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'asize' is never read in /opt/root_src/io/io/src/TStreamerInfoActions.cxx:4063; /opt/root_src/io/sql/src/TBufferSQL2.cxx:1871:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:119727,Energy Efficiency,allocate,allocated,119727,DeadStores]; 1: Value stored to 'asize' is never read in /opt/root_src/io/io/src/TStreamerInfoActions.cxx:3958; /opt/root_src/io/io/src/TStreamerInfoActions.cxx:4063:13: warning: Value stored to 'asize' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'asize' is never read in /opt/root_src/io/io/src/TStreamerInfoActions.cxx:4063; /opt/root_src/io/sql/src/TBufferSQL2.cxx:1871:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1871; /opt/root_src/io/sql/src/TBufferSQL2.cxx:1894:21: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming field 'fIOVersion' is < 2 in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1879; 2: Taking true branch in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1879; 3: Assuming 'nwh' is not equal to 0 in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1885; 4: Taking false branch in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1885; 5: Assuming 'nwh' is equal to 255 in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1888; 6: Taking true branch in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1888; 7: Memory is allocated in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1893; 8: Use of zero-allocated memory in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1894; /opt/root_src/io/sql/src/TSQLFile.cxx:386:7: warning: Value stored to 'recreate' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'recreate' is never read in /opt/root_src/io/sql/src/TSQLFile.cxx:386; /opt/root_src/io/xml/src/TBufferXML.cxx:764:41: warning: Called C++ object pointer is null [clang,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:120270,Energy Efficiency,allocate,allocated,120270,functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1871; /opt/root_src/io/sql/src/TBufferSQL2.cxx:1894:21: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming field 'fIOVersion' is < 2 in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1879; 2: Taking true branch in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1879; 3: Assuming 'nwh' is not equal to 0 in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1885; 4: Taking false branch in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1885; 5: Assuming 'nwh' is equal to 255 in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1888; 6: Taking true branch in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1888; 7: Memory is allocated in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1893; 8: Use of zero-allocated memory in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1894; /opt/root_src/io/sql/src/TSQLFile.cxx:386:7: warning: Value stored to 'recreate' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'recreate' is never read in /opt/root_src/io/sql/src/TSQLFile.cxx:386; /opt/root_src/io/xml/src/TBufferXML.cxx:764:41: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming the condition is false in /opt/root_src/io/xml/src/TBufferXML.cxx:2390; 2: Taking false branch in /opt/root_src/io/xml/src/TBufferXML.cxx:2390; 3: Assuming 'gDebug' is > 1 in /opt/root_src/io/xml/src/TBufferXML.cxx:2402; 4: Taking true branch in /opt/root_src/io/xml/src/TBufferXML.cxx:2402; 5: Assuming 'cl' is null in /opt/root_src/io/xml/src/TBufferXML.cxx:2403; 6: '?' condition is false in /opt/root_src/io/xml/src/TBufferXML.cxx:2403; 7: Calling 'TBuffer::IsReading' in /opt/root_src/io/xml/src/TBuffer,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:120345,Energy Efficiency,allocate,allocated,120345,"yzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1871; /opt/root_src/io/sql/src/TBufferSQL2.cxx:1894:21: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming field 'fIOVersion' is < 2 in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1879; 2: Taking true branch in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1879; 3: Assuming 'nwh' is not equal to 0 in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1885; 4: Taking false branch in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1885; 5: Assuming 'nwh' is equal to 255 in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1888; 6: Taking true branch in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1888; 7: Memory is allocated in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1893; 8: Use of zero-allocated memory in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1894; /opt/root_src/io/sql/src/TSQLFile.cxx:386:7: warning: Value stored to 'recreate' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'recreate' is never read in /opt/root_src/io/sql/src/TSQLFile.cxx:386; /opt/root_src/io/xml/src/TBufferXML.cxx:764:41: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming the condition is false in /opt/root_src/io/xml/src/TBufferXML.cxx:2390; 2: Taking false branch in /opt/root_src/io/xml/src/TBufferXML.cxx:2390; 3: Assuming 'gDebug' is > 1 in /opt/root_src/io/xml/src/TBufferXML.cxx:2402; 4: Taking true branch in /opt/root_src/io/xml/src/TBufferXML.cxx:2402; 5: Assuming 'cl' is null in /opt/root_src/io/xml/src/TBufferXML.cxx:2403; 6: '?' condition is false in /opt/root_src/io/xml/src/TBufferXML.cxx:2403; 7: Calling 'TBuffer::IsReading' in /opt/root_src/io/xml/src/TBufferXML.cxx:2404; 8: Returning zero, which participates in a condition later in /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:128018,Energy Efficiency,allocate,allocated,128018,t/root_src/io/xml/src/TBufferXML.cxx:984; 63: Assuming the condition is false in /opt/root_src/io/xml/src/TBufferXML.cxx:1203; 64: Taking false branch in /opt/root_src/io/xml/src/TBufferXML.cxx:1203; 65: '?' condition is false in /opt/root_src/io/xml/src/TBufferXML.cxx:1207; 66: Dereference of null pointer in /opt/root_src/io/xml/src/TBufferXML.cxx:1207; /opt/root_src/io/xml/src/TBufferXML.cxx:2535:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/io/xml/src/TBufferXML.cxx:2535; /opt/root_src/io/xml/src/TBufferXML.cxx:2558:21: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming the condition is true in /opt/root_src/io/xml/src/TBufferXML.cxx:2543; 2: Taking true branch in /opt/root_src/io/xml/src/TBufferXML.cxx:2543; 3: Assuming 'nwh' is not equal to 0 in /opt/root_src/io/xml/src/TBufferXML.cxx:2549; 4: Taking false branch in /opt/root_src/io/xml/src/TBufferXML.cxx:2549; 5: Assuming 'nwh' is equal to 255 in /opt/root_src/io/xml/src/TBufferXML.cxx:2552; 6: Taking true branch in /opt/root_src/io/xml/src/TBufferXML.cxx:2552; 7: Memory is allocated in /opt/root_src/io/xml/src/TBufferXML.cxx:2557; 8: Use of zero-allocated memory in /opt/root_src/io/xml/src/TBufferXML.cxx:2558; /opt/root_src/io/xml/src/TXMLEngine.cxx:134:10: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'res' is not equal to null in /opt/root_src/io/xml/src/TXMLEngine.cxx:1449; 2: Left side of '||' is false in /opt/root_src/io/xml/src/TXMLEngine.cxx:1449; 3: Assuming 'xmlnode' is not equal t,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:128551,Energy Efficiency,allocate,allocated,128551,h analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/io/xml/src/TBufferXML.cxx:2535; /opt/root_src/io/xml/src/TBufferXML.cxx:2558:21: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming the condition is true in /opt/root_src/io/xml/src/TBufferXML.cxx:2543; 2: Taking true branch in /opt/root_src/io/xml/src/TBufferXML.cxx:2543; 3: Assuming 'nwh' is not equal to 0 in /opt/root_src/io/xml/src/TBufferXML.cxx:2549; 4: Taking false branch in /opt/root_src/io/xml/src/TBufferXML.cxx:2549; 5: Assuming 'nwh' is equal to 255 in /opt/root_src/io/xml/src/TBufferXML.cxx:2552; 6: Taking true branch in /opt/root_src/io/xml/src/TBufferXML.cxx:2552; 7: Memory is allocated in /opt/root_src/io/xml/src/TBufferXML.cxx:2557; 8: Use of zero-allocated memory in /opt/root_src/io/xml/src/TBufferXML.cxx:2558; /opt/root_src/io/xml/src/TXMLEngine.cxx:134:10: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'res' is not equal to null in /opt/root_src/io/xml/src/TXMLEngine.cxx:1449; 2: Left side of '||' is false in /opt/root_src/io/xml/src/TXMLEngine.cxx:1449; 3: Assuming 'xmlnode' is not equal to null in /opt/root_src/io/xml/src/TXMLEngine.cxx:1449; 4: Taking false branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:1449; 5: Calling constructor for 'TXMLOutputStream' in /opt/root_src/io/xml/src/TXMLEngine.cxx:1452; 6: Null pointer value stored to 'out.fOut' in /opt/root_src/io/xml/src/TXMLEngine.cxx:89; 7: Returning from constructor for 'TXMLOutputStream' in /opt/root_src/io/xml/src/TXMLEngine.cxx:1452; 8: Calling 'TXMLEngine::SaveNode' in /opt/root_src/io/xml/src/TXMLEngine.cxx:1454; 9: 'xmlnode' is not equal to null in /opt/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:128625,Energy Efficiency,allocate,allocated,128625,19 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/io/xml/src/TBufferXML.cxx:2535; /opt/root_src/io/xml/src/TBufferXML.cxx:2558:21: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming the condition is true in /opt/root_src/io/xml/src/TBufferXML.cxx:2543; 2: Taking true branch in /opt/root_src/io/xml/src/TBufferXML.cxx:2543; 3: Assuming 'nwh' is not equal to 0 in /opt/root_src/io/xml/src/TBufferXML.cxx:2549; 4: Taking false branch in /opt/root_src/io/xml/src/TBufferXML.cxx:2549; 5: Assuming 'nwh' is equal to 255 in /opt/root_src/io/xml/src/TBufferXML.cxx:2552; 6: Taking true branch in /opt/root_src/io/xml/src/TBufferXML.cxx:2552; 7: Memory is allocated in /opt/root_src/io/xml/src/TBufferXML.cxx:2557; 8: Use of zero-allocated memory in /opt/root_src/io/xml/src/TBufferXML.cxx:2558; /opt/root_src/io/xml/src/TXMLEngine.cxx:134:10: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'res' is not equal to null in /opt/root_src/io/xml/src/TXMLEngine.cxx:1449; 2: Left side of '||' is false in /opt/root_src/io/xml/src/TXMLEngine.cxx:1449; 3: Assuming 'xmlnode' is not equal to null in /opt/root_src/io/xml/src/TXMLEngine.cxx:1449; 4: Taking false branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:1449; 5: Calling constructor for 'TXMLOutputStream' in /opt/root_src/io/xml/src/TXMLEngine.cxx:1452; 6: Null pointer value stored to 'out.fOut' in /opt/root_src/io/xml/src/TXMLEngine.cxx:89; 7: Returning from constructor for 'TXMLOutputStream' in /opt/root_src/io/xml/src/TXMLEngine.cxx:1452; 8: Calling 'TXMLEngine::SaveNode' in /opt/root_src/io/xml/src/TXMLEngine.cxx:1454; 9: 'xmlnode' is not equal to null in /opt/root_src/io/xml/src/TXMLEngine.cxx:1672; 10: Taking false branch in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:132197,Energy Efficiency,Allocate,AllocateNode,132197,t/root_src/io/xml/src/TXMLEngine.cxx:1816; 7: Taking false branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:1816; 8: Taking false branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:1902; 9: Assuming the condition is false in /opt/root_src/io/xml/src/TXMLEngine.cxx:1906; 10: Taking false branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:1906; 11: Assuming the condition is false in /opt/root_src/io/xml/src/TXMLEngine.cxx:1946; 12: Taking false branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:1946; 13: Assuming the condition is false in /opt/root_src/io/xml/src/TXMLEngine.cxx:2102; 14: Taking false branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:2102; 15: Assuming the condition is false in /opt/root_src/io/xml/src/TXMLEngine.cxx:2110; 16: Taking false branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:2110; 17: Assuming 'len' is > 0 in /opt/root_src/io/xml/src/TXMLEngine.cxx:2113; 18: Taking false branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:2113; 19: Calling 'TXMLEngine::AllocateNode' in /opt/root_src/io/xml/src/TXMLEngine.cxx:2115; 20: Memory is allocated in /opt/root_src/io/xml/src/TXMLEngine.cxx:1515; 21: Assuming 'parent' is equal to null in /opt/root_src/io/xml/src/TXMLEngine.cxx:1525; 22: Taking false branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:1525; 23: Returned allocated memory in /opt/root_src/io/xml/src/TXMLEngine.cxx:2115; 24: Assuming 'colon' is equal to null in /opt/root_src/io/xml/src/TXMLEngine.cxx:2124; 25: Left side of '&&' is false in /opt/root_src/io/xml/src/TXMLEngine.cxx:2124; 26: Taking false branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:2130; 27: Assuming the condition is true in /opt/root_src/io/xml/src/TXMLEngine.cxx:2134; 28: Taking true branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:2134; 29: Potential leak of memory pointed to by 'node' in /opt/root_src/io/xml/src/TXMLEngine.cxx:2135; /opt/root_src/io/xml/src/TXMLFile.cxx:203:7: warning: Value stored to 'recreate' is never read [clang-analyzer-deadcode.DeadStores]; 1: Va,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:132274,Energy Efficiency,allocate,allocated,132274,rc/io/xml/src/TXMLEngine.cxx:1816; 8: Taking false branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:1902; 9: Assuming the condition is false in /opt/root_src/io/xml/src/TXMLEngine.cxx:1906; 10: Taking false branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:1906; 11: Assuming the condition is false in /opt/root_src/io/xml/src/TXMLEngine.cxx:1946; 12: Taking false branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:1946; 13: Assuming the condition is false in /opt/root_src/io/xml/src/TXMLEngine.cxx:2102; 14: Taking false branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:2102; 15: Assuming the condition is false in /opt/root_src/io/xml/src/TXMLEngine.cxx:2110; 16: Taking false branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:2110; 17: Assuming 'len' is > 0 in /opt/root_src/io/xml/src/TXMLEngine.cxx:2113; 18: Taking false branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:2113; 19: Calling 'TXMLEngine::AllocateNode' in /opt/root_src/io/xml/src/TXMLEngine.cxx:2115; 20: Memory is allocated in /opt/root_src/io/xml/src/TXMLEngine.cxx:1515; 21: Assuming 'parent' is equal to null in /opt/root_src/io/xml/src/TXMLEngine.cxx:1525; 22: Taking false branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:1525; 23: Returned allocated memory in /opt/root_src/io/xml/src/TXMLEngine.cxx:2115; 24: Assuming 'colon' is equal to null in /opt/root_src/io/xml/src/TXMLEngine.cxx:2124; 25: Left side of '&&' is false in /opt/root_src/io/xml/src/TXMLEngine.cxx:2124; 26: Taking false branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:2130; 27: Assuming the condition is true in /opt/root_src/io/xml/src/TXMLEngine.cxx:2134; 28: Taking true branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:2134; 29: Potential leak of memory pointed to by 'node' in /opt/root_src/io/xml/src/TXMLEngine.cxx:2135; /opt/root_src/io/xml/src/TXMLFile.cxx:203:7: warning: Value stored to 'recreate' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'recreate' is never read in /opt/root_src/io/xml/src/TXMLFile.cxx:2,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:132507,Energy Efficiency,allocate,allocated,132507,l/src/TXMLEngine.cxx:1906; 11: Assuming the condition is false in /opt/root_src/io/xml/src/TXMLEngine.cxx:1946; 12: Taking false branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:1946; 13: Assuming the condition is false in /opt/root_src/io/xml/src/TXMLEngine.cxx:2102; 14: Taking false branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:2102; 15: Assuming the condition is false in /opt/root_src/io/xml/src/TXMLEngine.cxx:2110; 16: Taking false branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:2110; 17: Assuming 'len' is > 0 in /opt/root_src/io/xml/src/TXMLEngine.cxx:2113; 18: Taking false branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:2113; 19: Calling 'TXMLEngine::AllocateNode' in /opt/root_src/io/xml/src/TXMLEngine.cxx:2115; 20: Memory is allocated in /opt/root_src/io/xml/src/TXMLEngine.cxx:1515; 21: Assuming 'parent' is equal to null in /opt/root_src/io/xml/src/TXMLEngine.cxx:1525; 22: Taking false branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:1525; 23: Returned allocated memory in /opt/root_src/io/xml/src/TXMLEngine.cxx:2115; 24: Assuming 'colon' is equal to null in /opt/root_src/io/xml/src/TXMLEngine.cxx:2124; 25: Left side of '&&' is false in /opt/root_src/io/xml/src/TXMLEngine.cxx:2124; 26: Taking false branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:2130; 27: Assuming the condition is true in /opt/root_src/io/xml/src/TXMLEngine.cxx:2134; 28: Taking true branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:2134; 29: Potential leak of memory pointed to by 'node' in /opt/root_src/io/xml/src/TXMLEngine.cxx:2135; /opt/root_src/io/xml/src/TXMLFile.cxx:203:7: warning: Value stored to 'recreate' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'recreate' is never read in /opt/root_src/io/xml/src/TXMLFile.cxx:203; /opt/root_src/io/xml/src/TXMLPlayer.cxx:394:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length argumen,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:25263,Modifiability,variab,variable,25263,EmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 12: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 13: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 14: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:105; 15: Null pointer value stored to 'helper' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:106; 16: Control jumps to 'case kIsEnum:' at line 110 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:108; 17: Control jumps to 'case kFloat_t:' at line 118 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:111; 18: Forming reference to null pointer in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:118; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:120:28: warning: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'helper') [clang-analyzer-core.NullDereference]; 1: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 3: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 6: Calling 'TEmulatedMapProxy::ReadMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:247; 7: Assuming the condition is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapPro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:26920,Modifiability,variab,variable,26920, 8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 12: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 13: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 14: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:105; 15: Null pointer value stored to 'helper' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:106; 16: Control jumps to 'case kIsEnum:' at line 110 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:108; 17: Control jumps to 'case kFloat16_t:' at line 119 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:111; 18: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'helper') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:120; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:121:30: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 3: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 6: Calling 'TEmulatedMapProxy::ReadMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:247; 7: Assuming the condition is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:37619,Modifiability,variab,variable,37619,ulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 12: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 13: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 14: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:105; 15: Null pointer value stored to 'helper' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:106; 16: Control jumps to 'case kIsEnum:' at line 110 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:108; 17: Control jumps to 'case kULong64_t:' at line 126 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:111; 18: Forming reference to null pointer in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:126; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:128:28: warning: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'helper') [clang-analyzer-core.NullDereference]; 1: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 3: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 6: Calling 'TEmulatedMapProxy::ReadMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:247; 7: Assuming the condition is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapPro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:39277,Modifiability,variab,variable,39277,8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 12: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 13: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 14: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:105; 15: Null pointer value stored to 'helper' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:106; 16: Control jumps to 'case kIsEnum:' at line 110 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:108; 17: Control jumps to 'case kDouble32_t:' at line 127 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:111; 18: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'helper') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:128; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:139:13: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 3: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 6: Calling 'TEmulatedMapProxy::ReadMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:247; 7: Assuming the condition is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:46055,Modifiability,variab,variable,46055,n /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 12: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 13: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 14: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:105; 15: Null pointer value stored to 'helper' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:106; 16: Control jumps to 'case 1073745921:' at line 147 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:108; 17: Called C++ object pointer is null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:148; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:173:35: warning: Access to field 'boolean' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:47539,Modifiability,variab,variable,47539, Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kBool_t:' at line 173 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'boolean' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:173; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:174:35: warning: Access to field 's_char' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:47751,Modifiability,variab,variable,47751, /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kBool_t:' at line 173 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'boolean' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:173; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:174:35: warning: Access to field 's_char' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:49234,Modifiability,variab,variable,49234,: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kChar_t:' at line 174 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_char' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:174; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:175:35: warning: Access to field 's_short' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:49447,Modifiability,variab,variable,49447, /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kChar_t:' at line 174 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_char' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:174; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:175:35: warning: Access to field 's_short' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:50932,Modifiability,variab,variable,50932,Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kShort_t:' at line 175 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_short' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:175; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:176:35: warning: Access to field 's_int' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:51143,Modifiability,variab,variable,51143,/opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kShort_t:' at line 175 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_short' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:175; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:176:35: warning: Access to field 's_int' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:52624,Modifiability,variab,variable,52624,6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kInt_t:' at line 176 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_int' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:176; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:177:35: warning: Access to field 's_long' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:52836,Modifiability,variab,variable,52836, in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kInt_t:' at line 176 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_int' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:176; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:177:35: warning: Access to field 's_long' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:54319,Modifiability,variab,variable,54319,: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kLong_t:' at line 177 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_long' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:177; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:178:35: warning: Access to field 's_longlong' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:54535,Modifiability,variab,variable,54535,/opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kLong_t:' at line 177 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_long' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:177; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:178:35: warning: Access to field 's_longlong' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:56024,Modifiability,variab,variable,56024,lling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kLong64_t:' at line 178 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_longlong' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:178; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:179:35: warning: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:56233,Modifiability,variab,variable,56233,t/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kLong64_t:' at line 178 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_longlong' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:178; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:179:35: warning: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:57714,Modifiability,variab,variable,57714,: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kFloat_t:' at line 179 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:179; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:180:41: warning: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:57923,Modifiability,variab,variable,57923,' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kFloat_t:' at line 179 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:179; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:180:41: warning: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:59406,Modifiability,variab,variable,59406,Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kFloat16_t:' at line 180 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:180; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:181:35: warning: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:59615,Modifiability,variab,variable,59615,in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kFloat16_t:' at line 180 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:180; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:181:35: warning: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:61097,Modifiability,variab,variable,61097, Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kDouble_t:' at line 181 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:181; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:182:35: warning: Access to field 'u_char' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:61309,Modifiability,variab,variable,61309,in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kDouble_t:' at line 181 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:181; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:182:35: warning: Access to field 'u_char' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:62793,Modifiability,variab,variable,62793, Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kUChar_t:' at line 182 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_char' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:182; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:183:35: warning: Access to field 'u_short' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:63006,Modifiability,variab,variable,63006,/opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kUChar_t:' at line 182 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_char' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:182; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:183:35: warning: Access to field 'u_short' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:64492,Modifiability,variab,variable,64492,alling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kUShort_t:' at line 183 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_short' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:183; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:184:35: warning: Access to field 'u_int' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:64703,Modifiability,variab,variable,64703,opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kUShort_t:' at line 183 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_short' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:183; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:184:35: warning: Access to field 'u_int' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:66185,Modifiability,variab,variable,66185,: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kUInt_t:' at line 184 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_int' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:184; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:185:35: warning: Access to field 'u_long' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:66397,Modifiability,variab,variable,66397,in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kUInt_t:' at line 184 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_int' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:184; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:185:35: warning: Access to field 'u_long' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:67881,Modifiability,variab,variable,67881, Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kULong_t:' at line 185 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_long' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:185; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:186:35: warning: Access to field 'u_longlong' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:68097,Modifiability,variab,variable,68097,opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kULong_t:' at line 185 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_long' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:185; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:186:35: warning: Access to field 'u_longlong' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:69587,Modifiability,variab,variable,69587,ling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kULong64_t:' at line 186 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_longlong' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:186; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:187:41: warning: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:69796,Modifiability,variab,variable,69796,/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kULong64_t:' at line 186 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_longlong' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:186; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:187:41: warning: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:71280,Modifiability,variab,variable,71280,alling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kDouble32_t:' at line 187 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:187; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:198:21: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is a,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:77358,Modifiability,portab,portability,77358,io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case 1073745921:' at line 206 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Called C++ object pointer is null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:207; /opt/root_src/io/io/src/TFPBlock.cxx:54:22: warning: Call to 'calloc' has an allocation size of 0 bytes [clang-analyzer-optin.portability.UnixAPI]; 1: 'aux' initialized to 0 in /opt/root_src/io/io/src/TFPBlock.cxx:38; 2: Assuming 'i' is >= 'nb' in /opt/root_src/io/io/src/TFPBlock.cxx:45; 3: Loop condition is false. Execution continues on line 52 in /opt/root_src/io/io/src/TFPBlock.cxx:45; 4: The value 0 is assigned to field 'fCapacity' in /opt/root_src/io/io/src/TFPBlock.cxx:52; 5: Call to 'calloc' has an allocation size of 0 bytes in /opt/root_src/io/io/src/TFPBlock.cxx:54; /opt/root_src/io/io/src/TFPBlock.cxx:112:24: warning: Call to 'realloc' has an allocation size of 0 bytes [clang-analyzer-optin.portability.UnixAPI]; 1: 'newSize' initialized to 0 in /opt/root_src/io/io/src/TFPBlock.cxx:96; 2: Assuming 'i' is >= 'nb' in /opt/root_src/io/io/src/TFPBlock.cxx:103; 3: Loop condition is false. Execution continues on line 110 in /opt/root_src/io/io/src/TFPBlock.cxx:103; 4: Assuming 'newSize' is > field 'fCapacity' in /opt/root_src/io/io/src/TFPBlock.cxx:110; 5: Taking true branch in /opt/root_src/io/io/src/TFPBlock.c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:77942,Modifiability,portab,portability,77942,ull pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case 1073745921:' at line 206 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Called C++ object pointer is null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:207; /opt/root_src/io/io/src/TFPBlock.cxx:54:22: warning: Call to 'calloc' has an allocation size of 0 bytes [clang-analyzer-optin.portability.UnixAPI]; 1: 'aux' initialized to 0 in /opt/root_src/io/io/src/TFPBlock.cxx:38; 2: Assuming 'i' is >= 'nb' in /opt/root_src/io/io/src/TFPBlock.cxx:45; 3: Loop condition is false. Execution continues on line 52 in /opt/root_src/io/io/src/TFPBlock.cxx:45; 4: The value 0 is assigned to field 'fCapacity' in /opt/root_src/io/io/src/TFPBlock.cxx:52; 5: Call to 'calloc' has an allocation size of 0 bytes in /opt/root_src/io/io/src/TFPBlock.cxx:54; /opt/root_src/io/io/src/TFPBlock.cxx:112:24: warning: Call to 'realloc' has an allocation size of 0 bytes [clang-analyzer-optin.portability.UnixAPI]; 1: 'newSize' initialized to 0 in /opt/root_src/io/io/src/TFPBlock.cxx:96; 2: Assuming 'i' is >= 'nb' in /opt/root_src/io/io/src/TFPBlock.cxx:103; 3: Loop condition is false. Execution continues on line 110 in /opt/root_src/io/io/src/TFPBlock.cxx:103; 4: Assuming 'newSize' is > field 'fCapacity' in /opt/root_src/io/io/src/TFPBlock.cxx:110; 5: Taking true branch in /opt/root_src/io/io/src/TFPBlock.cxx:110; 6: The value 0 is assigned to field 'fCapacity' in /opt/root_src/io/io/src/TFPBlock.cxx:111; 7: Call to 'realloc' has an allocation size of 0 bytes in /opt/root_src/io/io/src/TFPBlock.cxx:112; /opt/root_src/io/io/src/TFile.cxx:167:1: warning: non-POD static (AddPseudoGlobals) [clazy-non-pod-global-static]; /opt/root_src/io/io/src/TFile.cxx:434:7: warning: Value stored to 'recreate' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'recreate' is never read in /opt/root_src/io/io/src/TFile.cxx:434; /opt/root_src/io/io/src/TFile.cxx:3894:22: warning: V,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:1863,Performance,load,loaded,1863,"s false. Exiting loop in /opt/root_src/io/io/src/TBufferFile.cxx:2350; 11: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 12: 'tag' declared without an initial value in /opt/root_src/io/io/src/TBufferFile.cxx:2359; 13: Calling 'TBufferFile::ReadClass' in /opt/root_src/io/io/src/TBufferFile.cxx:2360; 14: Taking false branch in /opt/root_src/io/io/src/TBufferFile.cxx:2567; 15: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 16: Loop condition is false. Exiting loop in /opt/root_src/io/io/src/TBufferFile.cxx:2567; 17: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 18: Assuming field 'fBufCur' is < field 'fBuffer' in /opt/root_src/io/io/src/TBufferFile.cxx:2571; 19: Left side of '||' is true in /opt/root_src/io/io/src/TBufferFile.cxx:2571; 20: Returning without writing to '*objTag' in /opt/root_src/io/io/src/TBufferFile.cxx:2574; 21: Returning pointer (loaded from 'cl'), which participates in a condition later in /opt/root_src/io/io/src/TBufferFile.cxx:2574; 22: Returning from 'TBufferFile::ReadClass' in /opt/root_src/io/io/src/TBufferFile.cxx:2360; 23: 'clRef' is non-null in /opt/root_src/io/io/src/TBufferFile.cxx:2363; 24: Left side of '&&' is true in /opt/root_src/io/io/src/TBufferFile.cxx:2363; 25: Left side of '&&' is false in /opt/root_src/io/io/src/TBufferFile.cxx:2363; 26: Assuming field 'fVersion' is > 0 in /opt/root_src/io/io/src/TBufferFile.cxx:2397; 27: Taking true branch in /opt/root_src/io/io/src/TBufferFile.cxx:2397; 28: Assuming the condition is false in /opt/root_src/io/io/src/TBufferFile.cxx:2399; 29: Taking false branch in /opt/root_src/io/io/src/TBufferFile.cxx:2399; 30: Assuming 'obj' is non-null in /opt/root_src/io/io/src/TBufferFile.cxx:2400; 31: Taking true branch in /opt/root_src/io/io/src/TBufferFile.cxx:2400; 32: 2nd function call argument is an uninitialized value in /opt/root_src/io/io/src/TBufferFile.cxx:2401; /opt/root_src/io/io/src/TB",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:25251,Performance,load,loaded,25251,EmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 12: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 13: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 14: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:105; 15: Null pointer value stored to 'helper' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:106; 16: Control jumps to 'case kIsEnum:' at line 110 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:108; 17: Control jumps to 'case kFloat_t:' at line 118 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:111; 18: Forming reference to null pointer in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:118; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:120:28: warning: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'helper') [clang-analyzer-core.NullDereference]; 1: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 3: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 6: Calling 'TEmulatedMapProxy::ReadMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:247; 7: Assuming the condition is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapPro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:26908,Performance,load,loaded,26908, 8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 12: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 13: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 14: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:105; 15: Null pointer value stored to 'helper' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:106; 16: Control jumps to 'case kIsEnum:' at line 110 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:108; 17: Control jumps to 'case kFloat16_t:' at line 119 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:111; 18: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'helper') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:120; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:121:30: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 3: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 6: Calling 'TEmulatedMapProxy::ReadMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:247; 7: Assuming the condition is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:37607,Performance,load,loaded,37607,ulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 12: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 13: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 14: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:105; 15: Null pointer value stored to 'helper' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:106; 16: Control jumps to 'case kIsEnum:' at line 110 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:108; 17: Control jumps to 'case kULong64_t:' at line 126 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:111; 18: Forming reference to null pointer in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:126; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:128:28: warning: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'helper') [clang-analyzer-core.NullDereference]; 1: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 3: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 6: Calling 'TEmulatedMapProxy::ReadMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:247; 7: Assuming the condition is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapPro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:39265,Performance,load,loaded,39265,8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 12: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 13: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 14: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:105; 15: Null pointer value stored to 'helper' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:106; 16: Control jumps to 'case kIsEnum:' at line 110 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:108; 17: Control jumps to 'case kDouble32_t:' at line 127 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:111; 18: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'helper') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:128; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:139:13: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 3: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 6: Calling 'TEmulatedMapProxy::ReadMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:247; 7: Assuming the condition is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:46043,Performance,load,loaded,46043,n /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 12: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 13: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 14: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:105; 15: Null pointer value stored to 'helper' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:106; 16: Control jumps to 'case 1073745921:' at line 147 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:108; 17: Called C++ object pointer is null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:148; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:173:35: warning: Access to field 'boolean' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:47527,Performance,load,loaded,47527, Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kBool_t:' at line 173 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'boolean' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:173; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:174:35: warning: Access to field 's_char' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:47739,Performance,load,loaded,47739, /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kBool_t:' at line 173 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'boolean' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:173; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:174:35: warning: Access to field 's_char' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:49222,Performance,load,loaded,49222,: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kChar_t:' at line 174 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_char' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:174; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:175:35: warning: Access to field 's_short' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:49435,Performance,load,loaded,49435, /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kChar_t:' at line 174 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_char' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:174; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:175:35: warning: Access to field 's_short' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:50920,Performance,load,loaded,50920,Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kShort_t:' at line 175 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_short' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:175; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:176:35: warning: Access to field 's_int' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:51131,Performance,load,loaded,51131,/opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kShort_t:' at line 175 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_short' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:175; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:176:35: warning: Access to field 's_int' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:52612,Performance,load,loaded,52612,6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kInt_t:' at line 176 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_int' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:176; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:177:35: warning: Access to field 's_long' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:52824,Performance,load,loaded,52824, in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kInt_t:' at line 176 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_int' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:176; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:177:35: warning: Access to field 's_long' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:54307,Performance,load,loaded,54307,: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kLong_t:' at line 177 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_long' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:177; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:178:35: warning: Access to field 's_longlong' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:54523,Performance,load,loaded,54523,/opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kLong_t:' at line 177 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_long' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:177; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:178:35: warning: Access to field 's_longlong' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:56012,Performance,load,loaded,56012,lling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kLong64_t:' at line 178 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_longlong' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:178; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:179:35: warning: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:56221,Performance,load,loaded,56221,t/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kLong64_t:' at line 178 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_longlong' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:178; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:179:35: warning: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:57702,Performance,load,loaded,57702,: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kFloat_t:' at line 179 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:179; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:180:41: warning: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:57911,Performance,load,loaded,57911,' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kFloat_t:' at line 179 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:179; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:180:41: warning: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:59394,Performance,load,loaded,59394,Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kFloat16_t:' at line 180 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:180; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:181:35: warning: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:59603,Performance,load,loaded,59603,in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kFloat16_t:' at line 180 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:180; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:181:35: warning: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:61085,Performance,load,loaded,61085, Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kDouble_t:' at line 181 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:181; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:182:35: warning: Access to field 'u_char' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:61297,Performance,load,loaded,61297,in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kDouble_t:' at line 181 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:181; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:182:35: warning: Access to field 'u_char' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:62781,Performance,load,loaded,62781, Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kUChar_t:' at line 182 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_char' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:182; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:183:35: warning: Access to field 'u_short' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:62994,Performance,load,loaded,62994,/opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kUChar_t:' at line 182 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_char' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:182; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:183:35: warning: Access to field 'u_short' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:64480,Performance,load,loaded,64480,alling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kUShort_t:' at line 183 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_short' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:183; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:184:35: warning: Access to field 'u_int' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:64691,Performance,load,loaded,64691,opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kUShort_t:' at line 183 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_short' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:183; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:184:35: warning: Access to field 'u_int' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:66173,Performance,load,loaded,66173,: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kUInt_t:' at line 184 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_int' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:184; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:185:35: warning: Access to field 'u_long' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:66385,Performance,load,loaded,66385,in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kUInt_t:' at line 184 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_int' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:184; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:185:35: warning: Access to field 'u_long' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:67869,Performance,load,loaded,67869, Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kULong_t:' at line 185 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_long' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:185; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:186:35: warning: Access to field 'u_longlong' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:68085,Performance,load,loaded,68085,opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kULong_t:' at line 185 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_long' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:185; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:186:35: warning: Access to field 'u_longlong' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:69575,Performance,load,loaded,69575,ling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kULong64_t:' at line 186 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_longlong' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:186; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:187:41: warning: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:69784,Performance,load,loaded,69784,/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kULong64_t:' at line 186 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_longlong' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:186; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:187:41: warning: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:71268,Performance,load,loaded,71268,alling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kDouble32_t:' at line 187 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:187; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:198:21: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is a,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:92493,Performance,load,loaded,92493,x:378; /opt/root_src/io/io/src/TKey.cxx:82:1: warning: non-POD static (TString) [clazy-non-pod-global-static]; /opt/root_src/io/io/src/TMakeProject.cxx:39:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/io/io/src/TMakeProject.cxx:39; /opt/root_src/io/io/src/TMapFile.cxx:293:7: warning: Value stored to 'recreate' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'recreate' is never read in /opt/root_src/io/io/src/TMapFile.cxx:293; /opt/root_src/io/io/src/TMapFile.cxx:623:20: warning: Access to field 'fNext' results in a dereference of a null pointer (loaded from field 'fLast') [clang-analyzer-core.NullDereference]; 1: Assuming field 'fWritable' is true in /opt/root_src/io/io/src/TMapFile.cxx:599; 2: Left side of '||' is false in /opt/root_src/io/io/src/TMapFile.cxx:599; 3: Assuming field 'fMmallocDesc' is non-null in /opt/root_src/io/io/src/TMapFile.cxx:599; 4: Taking false branch in /opt/root_src/io/io/src/TMapFile.cxx:599; 5: Assuming 'obj' is equal to field 'fGetting' in /opt/root_src/io/io/src/TMapFile.cxx:601; 6: '?' condition is false in /opt/root_src/io/io/src/TMapFile.cxx:601; 7: 'lock' is false in /opt/root_src/io/io/src/TMapFile.cxx:603; 8: Taking false branch in /opt/root_src/io/io/src/TMapFile.cxx:603; 9: Assuming 'name' is null in /opt/root_src/io/io/src/TMapFile.cxx:609; 10: Left side of '&&' is false in /opt/root_src/io/io/src/TMapFile.cxx:609; 11: Calling 'TMapFile::Remove' in /opt/root_src/io/io/src/TMapFile.cxx:614; 12: Field 'fWritable' is true in /opt/root_src/io/io/src/TMapFile.cxx:717; 13: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:95226,Performance,load,loaded,95226, which participates in a condition later in /opt/root_src/io/io/src/TMapFile.cxx:727; 23: Assuming 'mr' is equal to field 'fLast' in /opt/root_src/io/io/src/TMapFile.cxx:728; 24: Taking true branch in /opt/root_src/io/io/src/TMapFile.cxx:728; 25: Null pointer value stored to field 'fLast' in /opt/root_src/io/io/src/TMapFile.cxx:729; 26: Execution continues on line 743 in /opt/root_src/io/io/src/TMapFile.cxx:737; 27: 'lock' is false in /opt/root_src/io/io/src/TMapFile.cxx:743; 28: Taking false branch in /opt/root_src/io/io/src/TMapFile.cxx:743; 29: Returning from 'TMapFile::Remove' in /opt/root_src/io/io/src/TMapFile.cxx:614; 30: Assuming the condition is false in /opt/root_src/io/io/src/TMapFile.cxx:614; 31: Taking false branch in /opt/root_src/io/io/src/TMapFile.cxx:614; 32: Assuming field 'fFirst' is non-null in /opt/root_src/io/io/src/TMapFile.cxx:619; 33: Taking false branch in /opt/root_src/io/io/src/TMapFile.cxx:619; 34: Access to field 'fNext' results in a dereference of a null pointer (loaded from field 'fLast') in /opt/root_src/io/io/src/TMapFile.cxx:623; /opt/root_src/io/io/src/TMemFile.cxx:181:40: warning: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'mode' is never read in /opt/root_src/io/io/src/TMemFile.cxx:181; /opt/root_src/io/io/src/TStreamerInfo.cxx:1116:30: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming field 'fClass' is non-null in /opt/root_src/io/io/src/TStreamerInfo.cxx:731; 2: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:731; 3: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:777; 4: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:777; 5: Assuming field 'fIsSyntheticPair' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:785; 6: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:785; 7: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:793;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:126993,Performance,Perform,PerformPostProcessing,126993,l/src/TBufferXML.cxx:1175; 50: Taking false branch in /opt/root_src/io/xml/src/TBufferXML.cxx:1175; 51: 'typ_id' is equal to kTString in /opt/root_src/io/xml/src/TBufferXML.cxx:1177; 52: Taking true branch in /opt/root_src/io/xml/src/TBufferXML.cxx:1177; 53: Assuming 'elem' is non-null in /opt/root_src/io/xml/src/TBufferXML.cxx:1181; 54: Taking false branch in /opt/root_src/io/xml/src/TBufferXML.cxx:1181; 55: Assuming 'arrsize1' is <= 0 in /opt/root_src/io/xml/src/TBufferXML.cxx:1187; 56: Taking false branch in /opt/root_src/io/xml/src/TBufferXML.cxx:1187; 57: Calling 'TBufferXML::WorkWithElement' in /opt/root_src/io/xml/src/TBufferXML.cxx:1195; 58: Assuming 'stack' is non-null in /opt/root_src/io/xml/src/TBufferXML.cxx:978; 59: Taking false branch in /opt/root_src/io/xml/src/TBufferXML.cxx:978; 60: Assuming the condition is true in /opt/root_src/io/xml/src/TBufferXML.cxx:983; 61: Taking true branch in /opt/root_src/io/xml/src/TBufferXML.cxx:983; 62: Calling 'TBufferXML::PerformPostProcessing' in /opt/root_src/io/xml/src/TBufferXML.cxx:984; 63: Assuming the condition is false in /opt/root_src/io/xml/src/TBufferXML.cxx:1203; 64: Taking false branch in /opt/root_src/io/xml/src/TBufferXML.cxx:1203; 65: '?' condition is false in /opt/root_src/io/xml/src/TBufferXML.cxx:1207; 66: Dereference of null pointer in /opt/root_src/io/xml/src/TBufferXML.cxx:1207; /opt/root_src/io/xml/src/TBufferXML.cxx:2535:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/io/xml/src/TBufferXML.cxx:2535; /opt/root_src/io/xml/src/TBufferXML.cxx:2558:21: warning: U,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:25185,Security,Access,Access,25185,EmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 12: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 13: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 14: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:105; 15: Null pointer value stored to 'helper' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:106; 16: Control jumps to 'case kIsEnum:' at line 110 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:108; 17: Control jumps to 'case kFloat_t:' at line 118 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:111; 18: Forming reference to null pointer in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:118; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:120:28: warning: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'helper') [clang-analyzer-core.NullDereference]; 1: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 3: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 6: Calling 'TEmulatedMapProxy::ReadMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:247; 7: Assuming the condition is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapPro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:26842,Security,Access,Access,26842, 8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 12: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 13: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 14: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:105; 15: Null pointer value stored to 'helper' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:106; 16: Control jumps to 'case kIsEnum:' at line 110 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:108; 17: Control jumps to 'case kFloat16_t:' at line 119 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:111; 18: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'helper') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:120; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:121:30: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 3: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 6: Calling 'TEmulatedMapProxy::ReadMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:247; 7: Assuming the condition is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:37541,Security,Access,Access,37541,ulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 12: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 13: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 14: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:105; 15: Null pointer value stored to 'helper' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:106; 16: Control jumps to 'case kIsEnum:' at line 110 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:108; 17: Control jumps to 'case kULong64_t:' at line 126 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:111; 18: Forming reference to null pointer in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:126; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:128:28: warning: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'helper') [clang-analyzer-core.NullDereference]; 1: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 3: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 6: Calling 'TEmulatedMapProxy::ReadMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:247; 7: Assuming the condition is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapPro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:39199,Security,Access,Access,39199,8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 12: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 13: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 14: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:105; 15: Null pointer value stored to 'helper' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:106; 16: Control jumps to 'case kIsEnum:' at line 110 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:108; 17: Control jumps to 'case kDouble32_t:' at line 127 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:111; 18: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'helper') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:128; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:139:13: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 3: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 6: Calling 'TEmulatedMapProxy::ReadMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:247; 7: Assuming the condition is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:45973,Security,Access,Access,45973,n /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 12: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 13: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 14: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:105; 15: Null pointer value stored to 'helper' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:106; 16: Control jumps to 'case 1073745921:' at line 147 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:108; 17: Called C++ object pointer is null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:148; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:173:35: warning: Access to field 'boolean' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:47457,Security,Access,Access,47457, Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kBool_t:' at line 173 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'boolean' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:173; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:174:35: warning: Access to field 's_char' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:47670,Security,Access,Access,47670, /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kBool_t:' at line 173 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'boolean' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:173; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:174:35: warning: Access to field 's_char' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:49153,Security,Access,Access,49153,: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kChar_t:' at line 174 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_char' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:174; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:175:35: warning: Access to field 's_short' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:49365,Security,Access,Access,49365, /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kChar_t:' at line 174 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_char' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:174; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:175:35: warning: Access to field 's_short' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:50850,Security,Access,Access,50850,Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kShort_t:' at line 175 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_short' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:175; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:176:35: warning: Access to field 's_int' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:51063,Security,Access,Access,51063,/opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kShort_t:' at line 175 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_short' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:175; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:176:35: warning: Access to field 's_int' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:52544,Security,Access,Access,52544,6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kInt_t:' at line 176 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_int' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:176; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:177:35: warning: Access to field 's_long' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:52755,Security,Access,Access,52755, in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kInt_t:' at line 176 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_int' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:176; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:177:35: warning: Access to field 's_long' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:54238,Security,Access,Access,54238,: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kLong_t:' at line 177 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_long' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:177; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:178:35: warning: Access to field 's_longlong' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:54450,Security,Access,Access,54450,/opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kLong_t:' at line 177 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_long' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:177; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:178:35: warning: Access to field 's_longlong' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:55939,Security,Access,Access,55939,lling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kLong64_t:' at line 178 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_longlong' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:178; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:179:35: warning: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:56155,Security,Access,Access,56155,t/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kLong64_t:' at line 178 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_longlong' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:178; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:179:35: warning: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:57636,Security,Access,Access,57636,: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kFloat_t:' at line 179 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:179; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:180:41: warning: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:57845,Security,Access,Access,57845,' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kFloat_t:' at line 179 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:179; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:180:41: warning: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:59328,Security,Access,Access,59328,Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kFloat16_t:' at line 180 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:180; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:181:35: warning: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:59537,Security,Access,Access,59537,in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kFloat16_t:' at line 180 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:180; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:181:35: warning: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:61019,Security,Access,Access,61019, Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kDouble_t:' at line 181 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:181; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:182:35: warning: Access to field 'u_char' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:61228,Security,Access,Access,61228,in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kDouble_t:' at line 181 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:181; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:182:35: warning: Access to field 'u_char' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:62712,Security,Access,Access,62712, Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kUChar_t:' at line 182 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_char' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:182; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:183:35: warning: Access to field 'u_short' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:62924,Security,Access,Access,62924,/opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kUChar_t:' at line 182 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_char' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:182; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:183:35: warning: Access to field 'u_short' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:64410,Security,Access,Access,64410,alling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kUShort_t:' at line 183 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_short' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:183; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:184:35: warning: Access to field 'u_int' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:64623,Security,Access,Access,64623,opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kUShort_t:' at line 183 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_short' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:183; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:184:35: warning: Access to field 'u_int' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:66105,Security,Access,Access,66105,: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kUInt_t:' at line 184 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_int' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:184; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:185:35: warning: Access to field 'u_long' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:66316,Security,Access,Access,66316,in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kUInt_t:' at line 184 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_int' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:184; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:185:35: warning: Access to field 'u_long' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:67800,Security,Access,Access,67800, Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kULong_t:' at line 185 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_long' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:185; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:186:35: warning: Access to field 'u_longlong' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:68012,Security,Access,Access,68012,opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kULong_t:' at line 185 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_long' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:185; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:186:35: warning: Access to field 'u_longlong' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:69502,Security,Access,Access,69502,ling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kULong64_t:' at line 186 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_longlong' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:186; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:187:41: warning: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:69718,Security,Access,Access,69718,/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kULong64_t:' at line 186 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_longlong' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:186; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:187:41: warning: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:71202,Security,Access,Access,71202,alling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kDouble32_t:' at line 187 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:187; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:198:21: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is a,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:91862,Security,secur,security,91862,/io/io/src/TGenCollectionStreamer.cxx:378; 24: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TGenCollectionStreamer.cxx:398; 25: expanded from macro 'DOLOOP' in /opt/root_src/io/io/src/TGenCollectionStreamer.cxx:378; 26: 'i' initialized to a null pointer value in /opt/root_src/io/io/src/TGenCollectionStreamer.cxx:398; 27: expanded from macro 'DOLOOP' in /opt/root_src/io/io/src/TGenCollectionStreamer.cxx:378; 28: Called C++ object pointer is null in /opt/root_src/io/io/src/TGenCollectionStreamer.cxx:398; 29: expanded from macro 'DOLOOP' in /opt/root_src/io/io/src/TGenCollectionStreamer.cxx:378; /opt/root_src/io/io/src/TKey.cxx:82:1: warning: non-POD static (TString) [clazy-non-pod-global-static]; /opt/root_src/io/io/src/TMakeProject.cxx:39:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/io/io/src/TMakeProject.cxx:39; /opt/root_src/io/io/src/TMapFile.cxx:293:7: warning: Value stored to 'recreate' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'recreate' is never read in /opt/root_src/io/io/src/TMapFile.cxx:293; /opt/root_src/io/io/src/TMapFile.cxx:623:20: warning: Access to field 'fNext' results in a dereference of a null pointer (loaded from field 'fLast') [clang-analyzer-core.NullDereference]; 1: Assuming field 'fWritable' is true in /opt/root_src/io/io/src/TMapFile.cxx:599; 2: Left side of '||' is false in /opt/root_src/io/io/src/TMapFile.cxx:599; 3: Assuming field 'fMmallocDesc' is non-null in /opt/root_src/io/io/src/TMapFile.cxx:599; 4: Taking false branch in /opt/root_src/io/io/s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:92425,Security,Access,Access,92425,x:378; /opt/root_src/io/io/src/TKey.cxx:82:1: warning: non-POD static (TString) [clazy-non-pod-global-static]; /opt/root_src/io/io/src/TMakeProject.cxx:39:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/io/io/src/TMakeProject.cxx:39; /opt/root_src/io/io/src/TMapFile.cxx:293:7: warning: Value stored to 'recreate' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'recreate' is never read in /opt/root_src/io/io/src/TMapFile.cxx:293; /opt/root_src/io/io/src/TMapFile.cxx:623:20: warning: Access to field 'fNext' results in a dereference of a null pointer (loaded from field 'fLast') [clang-analyzer-core.NullDereference]; 1: Assuming field 'fWritable' is true in /opt/root_src/io/io/src/TMapFile.cxx:599; 2: Left side of '||' is false in /opt/root_src/io/io/src/TMapFile.cxx:599; 3: Assuming field 'fMmallocDesc' is non-null in /opt/root_src/io/io/src/TMapFile.cxx:599; 4: Taking false branch in /opt/root_src/io/io/src/TMapFile.cxx:599; 5: Assuming 'obj' is equal to field 'fGetting' in /opt/root_src/io/io/src/TMapFile.cxx:601; 6: '?' condition is false in /opt/root_src/io/io/src/TMapFile.cxx:601; 7: 'lock' is false in /opt/root_src/io/io/src/TMapFile.cxx:603; 8: Taking false branch in /opt/root_src/io/io/src/TMapFile.cxx:603; 9: Assuming 'name' is null in /opt/root_src/io/io/src/TMapFile.cxx:609; 10: Left side of '&&' is false in /opt/root_src/io/io/src/TMapFile.cxx:609; 11: Calling 'TMapFile::Remove' in /opt/root_src/io/io/src/TMapFile.cxx:614; 12: Field 'fWritable' is true in /opt/root_src/io/io/src/TMapFile.cxx:717; 13: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:95158,Security,Access,Access,95158, which participates in a condition later in /opt/root_src/io/io/src/TMapFile.cxx:727; 23: Assuming 'mr' is equal to field 'fLast' in /opt/root_src/io/io/src/TMapFile.cxx:728; 24: Taking true branch in /opt/root_src/io/io/src/TMapFile.cxx:728; 25: Null pointer value stored to field 'fLast' in /opt/root_src/io/io/src/TMapFile.cxx:729; 26: Execution continues on line 743 in /opt/root_src/io/io/src/TMapFile.cxx:737; 27: 'lock' is false in /opt/root_src/io/io/src/TMapFile.cxx:743; 28: Taking false branch in /opt/root_src/io/io/src/TMapFile.cxx:743; 29: Returning from 'TMapFile::Remove' in /opt/root_src/io/io/src/TMapFile.cxx:614; 30: Assuming the condition is false in /opt/root_src/io/io/src/TMapFile.cxx:614; 31: Taking false branch in /opt/root_src/io/io/src/TMapFile.cxx:614; 32: Assuming field 'fFirst' is non-null in /opt/root_src/io/io/src/TMapFile.cxx:619; 33: Taking false branch in /opt/root_src/io/io/src/TMapFile.cxx:619; 34: Access to field 'fNext' results in a dereference of a null pointer (loaded from field 'fLast') in /opt/root_src/io/io/src/TMapFile.cxx:623; /opt/root_src/io/io/src/TMemFile.cxx:181:40: warning: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'mode' is never read in /opt/root_src/io/io/src/TMemFile.cxx:181; /opt/root_src/io/io/src/TStreamerInfo.cxx:1116:30: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming field 'fClass' is non-null in /opt/root_src/io/io/src/TStreamerInfo.cxx:731; 2: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:731; 3: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:777; 4: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:777; 5: Assuming field 'fIsSyntheticPair' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:785; 6: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:785; 7: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:793;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:119366,Security,secur,security,119366,located in /opt/root_src/io/io/src/TStreamerInfoActions.cxx:3435; 4: Execution continues on line 3464 in /opt/root_src/io/io/src/TStreamerInfoActions.cxx:3436; 5: Potential memory leak in /opt/root_src/io/io/src/TStreamerInfoActions.cxx:3464; /opt/root_src/io/io/src/TStreamerInfoActions.cxx:3958:10: warning: Value stored to 'asize' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'asize' is never read in /opt/root_src/io/io/src/TStreamerInfoActions.cxx:3958; /opt/root_src/io/io/src/TStreamerInfoActions.cxx:4063:13: warning: Value stored to 'asize' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'asize' is never read in /opt/root_src/io/io/src/TStreamerInfoActions.cxx:4063; /opt/root_src/io/sql/src/TBufferSQL2.cxx:1871:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1871; /opt/root_src/io/sql/src/TBufferSQL2.cxx:1894:21: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming field 'fIOVersion' is < 2 in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1879; 2: Taking true branch in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1879; 3: Assuming 'nwh' is not equal to 0 in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1885; 4: Taking false branch in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1885; 5: Assuming 'nwh' is equal to 255 in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1888; 6: Taking true branch in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1888; 7: Memory is allocated in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1893; 8: Use of zero-allocated mem,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:127659,Security,secur,security,127659,cxx:1195; 58: Assuming 'stack' is non-null in /opt/root_src/io/xml/src/TBufferXML.cxx:978; 59: Taking false branch in /opt/root_src/io/xml/src/TBufferXML.cxx:978; 60: Assuming the condition is true in /opt/root_src/io/xml/src/TBufferXML.cxx:983; 61: Taking true branch in /opt/root_src/io/xml/src/TBufferXML.cxx:983; 62: Calling 'TBufferXML::PerformPostProcessing' in /opt/root_src/io/xml/src/TBufferXML.cxx:984; 63: Assuming the condition is false in /opt/root_src/io/xml/src/TBufferXML.cxx:1203; 64: Taking false branch in /opt/root_src/io/xml/src/TBufferXML.cxx:1203; 65: '?' condition is false in /opt/root_src/io/xml/src/TBufferXML.cxx:1207; 66: Dereference of null pointer in /opt/root_src/io/xml/src/TBufferXML.cxx:1207; /opt/root_src/io/xml/src/TBufferXML.cxx:2535:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/io/xml/src/TBufferXML.cxx:2535; /opt/root_src/io/xml/src/TBufferXML.cxx:2558:21: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming the condition is true in /opt/root_src/io/xml/src/TBufferXML.cxx:2543; 2: Taking true branch in /opt/root_src/io/xml/src/TBufferXML.cxx:2543; 3: Assuming 'nwh' is not equal to 0 in /opt/root_src/io/xml/src/TBufferXML.cxx:2549; 4: Taking false branch in /opt/root_src/io/xml/src/TBufferXML.cxx:2549; 5: Assuming 'nwh' is equal to 255 in /opt/root_src/io/xml/src/TBufferXML.cxx:2552; 6: Taking true branch in /opt/root_src/io/xml/src/TBufferXML.cxx:2552; 7: Memory is allocated in /opt/root_src/io/xml/src/TBufferXML.cxx:2557; 8: Use of zero-allocated memory in /opt/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:133570,Security,secur,security,133570,.cxx:2115; 24: Assuming 'colon' is equal to null in /opt/root_src/io/xml/src/TXMLEngine.cxx:2124; 25: Left side of '&&' is false in /opt/root_src/io/xml/src/TXMLEngine.cxx:2124; 26: Taking false branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:2130; 27: Assuming the condition is true in /opt/root_src/io/xml/src/TXMLEngine.cxx:2134; 28: Taking true branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:2134; 29: Potential leak of memory pointed to by 'node' in /opt/root_src/io/xml/src/TXMLEngine.cxx:2135; /opt/root_src/io/xml/src/TXMLFile.cxx:203:7: warning: Value stored to 'recreate' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'recreate' is never read in /opt/root_src/io/xml/src/TXMLFile.cxx:203; /opt/root_src/io/xml/src/TXMLPlayer.cxx:394:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/io/xml/src/TXMLPlayer.cxx:394; /opt/root_src/io/xml/src/TXMLPlayer.cxx:404:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/io/xml/src/TXMLPlayer.cxx:404; /opt/root_src/io/io/src/TBufferFile.cxx; /opt/root_src/io/io/src/TBufferJSON.cxx; /opt/root_src/io/io/src/TEmulatedCollectionProxy.cxx; /,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:134137,Security,secur,security,134137,tored to 'recreate' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'recreate' is never read in /opt/root_src/io/xml/src/TXMLFile.cxx:203; /opt/root_src/io/xml/src/TXMLPlayer.cxx:394:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/io/xml/src/TXMLPlayer.cxx:394; /opt/root_src/io/xml/src/TXMLPlayer.cxx:404:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/io/xml/src/TXMLPlayer.cxx:404; /opt/root_src/io/io/src/TBufferFile.cxx; /opt/root_src/io/io/src/TBufferJSON.cxx; /opt/root_src/io/io/src/TEmulatedCollectionProxy.cxx; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx; /opt/root_src/io/io/src/TFPBlock.cxx; /opt/root_src/io/io/src/TFile.cxx; /opt/root_src/io/io/src/TFileMerger.cxx; /opt/root_src/io/io/src/TGenCollectionStreamer.cxx; /opt/root_src/io/io/src/TKey.cxx; /opt/root_src/io/io/src/TMakeProject.cxx; /opt/root_src/io/io/src/TMapFile.cxx; /opt/root_src/io/io/src/TMemFile.cxx; /opt/root_src/io/io/src/TStreamerInfo.cxx; /opt/root_src/io/io/src/TStreamerInfoActions.cxx; /opt/root_src/io/sql/src/TBufferSQL2.cxx; /opt/root_src/io/sql/src/TSQLFile.cxx; /opt/root_src/io/xml/src/TBuf,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:98750,Testability,Test,TestBit,98750,"8; 27: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:918; 28: Assuming the condition is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:921; 29: Left side of '&&' is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:921; 30: Assuming the condition is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:921; 31: Left side of '||' is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:921; 32: Execution continues on line 929 in /opt/root_src/io/io/src/TStreamerInfo.cxx:925; 33: 'info' is not equal to null in /opt/root_src/io/io/src/TStreamerInfo.cxx:929; 34: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:929; 35: 'info' is non-null in /opt/root_src/io/io/src/TStreamerInfo.cxx:945; 36: Taking true branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:945; 37: Field 'fClassVersion' is not equal to 0 in /opt/root_src/io/io/src/TStreamerInfo.cxx:950; 38: Left side of '&&' is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:950; 39: Calling 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:950; 40: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 41: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 42: Returning from 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:950; 43: Left side of '&&' is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:950; 44: Assuming the condition is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:950; 45: Left side of '&&' is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:950; 46: Assuming the condition is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:950; 47: Taking true branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:950; 48: Assuming field 'fOnFileClassVersion' is not equal to 1 in /opt/root_src/io/io/src/TStreamerInfo.cxx:954; 49: Left side of '&&' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:954; 50: Assuming the condition is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:95",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:99026,Testability,Test,TestBit,99026,"ue in /opt/root_src/io/io/src/TStreamerInfo.cxx:921; 31: Left side of '||' is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:921; 32: Execution continues on line 929 in /opt/root_src/io/io/src/TStreamerInfo.cxx:925; 33: 'info' is not equal to null in /opt/root_src/io/io/src/TStreamerInfo.cxx:929; 34: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:929; 35: 'info' is non-null in /opt/root_src/io/io/src/TStreamerInfo.cxx:945; 36: Taking true branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:945; 37: Field 'fClassVersion' is not equal to 0 in /opt/root_src/io/io/src/TStreamerInfo.cxx:950; 38: Left side of '&&' is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:950; 39: Calling 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:950; 40: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 41: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 42: Returning from 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:950; 43: Left side of '&&' is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:950; 44: Assuming the condition is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:950; 45: Left side of '&&' is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:950; 46: Assuming the condition is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:950; 47: Taking true branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:950; 48: Assuming field 'fOnFileClassVersion' is not equal to 1 in /opt/root_src/io/io/src/TStreamerInfo.cxx:954; 49: Left side of '&&' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:954; 50: Assuming the condition is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:956; 51: Left side of '&&' is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:956; 52: Assuming the condition is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:956; 53: Left side of '&&' is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:956; 54: Taking true branch in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:101227,Testability,Test,TestBit,101227,"fo.cxx:965; 57: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:965; 58: Left side of '&&' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:966; 59: Assuming field 'fOldVersion' is > 2 in /opt/root_src/io/io/src/TStreamerInfo.cxx:971; 60: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:971; 61: 'match' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:976; 62: Left side of '&&' is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:976; 63: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:976; 64: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:976; 65: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1033; 66: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1033; 67: 'match' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1057; 68: Left side of '&&' is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:1057; 69: Calling 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1057; 70: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 71: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 72: Returning from 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1057; 73: Taking true branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1057; 74: 'oldIsNonVersioned' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1058; 75: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1058; 76: Assuming 'file' is null in /opt/root_src/io/io/src/TStreamerInfo.cxx:1080; 77: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1080; 78: 'done' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1100; 79: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1100; 80: Called C++ object pointer is null in /opt/root_src/io/io/src/TStreamerInfo.cxx:1116; /opt/root_src/io/io/src/TStreamerInfo.cxx:1847:53:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:101504,Testability,Test,TestBit,101504,"king false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:971; 61: 'match' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:976; 62: Left side of '&&' is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:976; 63: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:976; 64: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:976; 65: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1033; 66: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1033; 67: 'match' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1057; 68: Left side of '&&' is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:1057; 69: Calling 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1057; 70: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 71: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 72: Returning from 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1057; 73: Taking true branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1057; 74: 'oldIsNonVersioned' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1058; 75: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1058; 76: Assuming 'file' is null in /opt/root_src/io/io/src/TStreamerInfo.cxx:1080; 77: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1080; 78: 'done' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1100; 79: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1100; 80: Called C++ object pointer is null in /opt/root_src/io/io/src/TStreamerInfo.cxx:1116; /opt/root_src/io/io/src/TStreamerInfo.cxx:1847:53: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Calling 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1700; 2: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 3: Returning zero, which partic",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:102339,Testability,Test,TestBit,102339,"base/inc/TObject.h:187; 71: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 72: Returning from 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1057; 73: Taking true branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1057; 74: 'oldIsNonVersioned' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1058; 75: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1058; 76: Assuming 'file' is null in /opt/root_src/io/io/src/TStreamerInfo.cxx:1080; 77: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1080; 78: 'done' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1100; 79: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1100; 80: Called C++ object pointer is null in /opt/root_src/io/io/src/TStreamerInfo.cxx:1116; /opt/root_src/io/io/src/TStreamerInfo.cxx:1847:53: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Calling 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1700; 2: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 4: Returning from 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1700; 5: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1700; 6: Calling 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1703; 7: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 8: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 9: Returning from 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1703; 10: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1703; 11: Assuming 'gDebug' is <= 0 in /opt/root_src/io/io/src/TStreamerInfo.cxx:1709; 12: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1709; 13: Assuming",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:102613,Testability,Test,TestBit,102613,"merInfo.cxx:1057; 74: 'oldIsNonVersioned' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1058; 75: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1058; 76: Assuming 'file' is null in /opt/root_src/io/io/src/TStreamerInfo.cxx:1080; 77: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1080; 78: 'done' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1100; 79: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1100; 80: Called C++ object pointer is null in /opt/root_src/io/io/src/TStreamerInfo.cxx:1116; /opt/root_src/io/io/src/TStreamerInfo.cxx:1847:53: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Calling 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1700; 2: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 4: Returning from 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1700; 5: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1700; 6: Calling 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1703; 7: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 8: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 9: Returning from 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1703; 10: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1703; 11: Assuming 'gDebug' is <= 0 in /opt/root_src/io/io/src/TStreamerInfo.cxx:1709; 12: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1709; 13: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1715; 14: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1715; 15: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1758; 16: Left side of '&&' is false in /opt/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:102768,Testability,Test,TestBit,102768,"eamerInfo.cxx:1058; 76: Assuming 'file' is null in /opt/root_src/io/io/src/TStreamerInfo.cxx:1080; 77: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1080; 78: 'done' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1100; 79: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1100; 80: Called C++ object pointer is null in /opt/root_src/io/io/src/TStreamerInfo.cxx:1116; /opt/root_src/io/io/src/TStreamerInfo.cxx:1847:53: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Calling 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1700; 2: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 4: Returning from 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1700; 5: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1700; 6: Calling 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1703; 7: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 8: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 9: Returning from 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1703; 10: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1703; 11: Assuming 'gDebug' is <= 0 in /opt/root_src/io/io/src/TStreamerInfo.cxx:1709; 12: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1709; 13: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1715; 14: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1715; 15: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1758; 16: Left side of '&&' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1758; 17: Assuming 'ruleSet' is null in /opt/root_src/io/io/src/TStreamerInfo.cxx:1784; 18: Taking false branch in /opt/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:103042,Testability,Test,TestBit,103042,"/opt/root_src/io/io/src/TStreamerInfo.cxx:1100; 80: Called C++ object pointer is null in /opt/root_src/io/io/src/TStreamerInfo.cxx:1116; /opt/root_src/io/io/src/TStreamerInfo.cxx:1847:53: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Calling 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1700; 2: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 4: Returning from 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1700; 5: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1700; 6: Calling 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1703; 7: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 8: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 9: Returning from 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1703; 10: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1703; 11: Assuming 'gDebug' is <= 0 in /opt/root_src/io/io/src/TStreamerInfo.cxx:1709; 12: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1709; 13: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1715; 14: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1715; 15: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1758; 16: Left side of '&&' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1758; 17: Assuming 'ruleSet' is null in /opt/root_src/io/io/src/TStreamerInfo.cxx:1784; 18: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1784; 19: Left side of '&&' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1786; 20: Calling 'TIter::operator()' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1792; 21: Calling 'TIter::Next' in /opt/root_src/core/cont/inc/TCollec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:104919,Testability,Test,TestBit,104919,"tor()' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1792; 21: Calling 'TIter::Next' in /opt/root_src/core/cont/inc/TCollection.h:248; 22: Assuming field 'fIterator' is non-null in /opt/root_src/core/cont/inc/TCollection.h:249; 23: '?' condition is true in /opt/root_src/core/cont/inc/TCollection.h:249; 24: Returning pointer, which participates in a condition later in /opt/root_src/core/cont/inc/TCollection.h:249; 25: Returning from 'TIter::Next' in /opt/root_src/core/cont/inc/TCollection.h:248; 26: Returning pointer, which participates in a condition later in /opt/root_src/core/cont/inc/TCollection.h:248; 27: Returning from 'TIter::operator()' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1792; 28: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TStreamerInfo.cxx:1792; 29: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1793; 30: Left side of '||' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1793; 31: Calling 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1794; 32: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 33: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 34: Returning from 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1794; 35: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1793; 36: Assuming the condition is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:1805; 37: Taking true branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1805; 38: Assuming the condition is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:1810; 39: Taking true branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1810; 40: Calling 'TClassRef::operator TClass *' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1827; 41: Assuming field 'fClassPtr' is null in /opt/root_src/core/meta/inc/TClassRef.h:74; 42: Left side of '&&' is false in /opt/root_src/core/meta/inc/TClassRef.h:74; 43: Returning point",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:105196,Testability,Test,TestBit,105196,"cont/inc/TCollection.h:249; 24: Returning pointer, which participates in a condition later in /opt/root_src/core/cont/inc/TCollection.h:249; 25: Returning from 'TIter::Next' in /opt/root_src/core/cont/inc/TCollection.h:248; 26: Returning pointer, which participates in a condition later in /opt/root_src/core/cont/inc/TCollection.h:248; 27: Returning from 'TIter::operator()' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1792; 28: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TStreamerInfo.cxx:1792; 29: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1793; 30: Left side of '||' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1793; 31: Calling 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1794; 32: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 33: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 34: Returning from 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1794; 35: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1793; 36: Assuming the condition is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:1805; 37: Taking true branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1805; 38: Assuming the condition is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:1810; 39: Taking true branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1810; 40: Calling 'TClassRef::operator TClass *' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1827; 41: Assuming field 'fClassPtr' is null in /opt/root_src/core/meta/inc/TClassRef.h:74; 42: Left side of '&&' is false in /opt/root_src/core/meta/inc/TClassRef.h:74; 43: Returning pointer, which participates in a condition later in /opt/root_src/core/meta/inc/TClassRef.h:74; 44: Returning from 'TClassRef::operator TClass *' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1827; 45: Assuming the condition is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:182",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:106309,Testability,Test,TestBit,106309,"fo.cxx:1793; 36: Assuming the condition is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:1805; 37: Taking true branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1805; 38: Assuming the condition is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:1810; 39: Taking true branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1810; 40: Calling 'TClassRef::operator TClass *' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1827; 41: Assuming field 'fClassPtr' is null in /opt/root_src/core/meta/inc/TClassRef.h:74; 42: Left side of '&&' is false in /opt/root_src/core/meta/inc/TClassRef.h:74; 43: Returning pointer, which participates in a condition later in /opt/root_src/core/meta/inc/TClassRef.h:74; 44: Returning from 'TClassRef::operator TClass *' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1827; 45: Assuming the condition is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:1827; 46: Left side of '&&' is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:1827; 47: Calling 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1827; 48: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 49: Returning from 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1827; 50: Taking true branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1827; 51: Assuming the condition is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:1828; 52: '?' condition is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:1828; 53: Assuming 'rule' is non-null in /opt/root_src/io/io/src/TStreamerInfo.cxx:1834; 54: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1834; 55: 'targets' initialized here in /opt/root_src/io/io/src/TStreamerInfo.cxx:1843; 56: Assuming 'targets' is null in /opt/root_src/io/io/src/TStreamerInfo.cxx:1844; 57: Taking true branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1844; 58: Called C++ object pointer is null in /opt/root_src/io/io/src/TStreamerInfo.cxx:1847; /opt/root_src/io/io/src/TStreame",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:106504,Testability,Test,TestBit,106504,"dition is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:1810; 39: Taking true branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1810; 40: Calling 'TClassRef::operator TClass *' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1827; 41: Assuming field 'fClassPtr' is null in /opt/root_src/core/meta/inc/TClassRef.h:74; 42: Left side of '&&' is false in /opt/root_src/core/meta/inc/TClassRef.h:74; 43: Returning pointer, which participates in a condition later in /opt/root_src/core/meta/inc/TClassRef.h:74; 44: Returning from 'TClassRef::operator TClass *' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1827; 45: Assuming the condition is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:1827; 46: Left side of '&&' is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:1827; 47: Calling 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1827; 48: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 49: Returning from 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1827; 50: Taking true branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1827; 51: Assuming the condition is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:1828; 52: '?' condition is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:1828; 53: Assuming 'rule' is non-null in /opt/root_src/io/io/src/TStreamerInfo.cxx:1834; 54: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1834; 55: 'targets' initialized here in /opt/root_src/io/io/src/TStreamerInfo.cxx:1843; 56: Assuming 'targets' is null in /opt/root_src/io/io/src/TStreamerInfo.cxx:1844; 57: Taking true branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1844; 58: Called C++ object pointer is null in /opt/root_src/io/io/src/TStreamerInfo.cxx:1847; /opt/root_src/io/io/src/TStreamerInfo.cxx:2408:50: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Calling 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1700; 2: Assuming ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:107439,Testability,Test,TestBit,107439,"/core/base/inc/TObject.h:187; 49: Returning from 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1827; 50: Taking true branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1827; 51: Assuming the condition is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:1828; 52: '?' condition is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:1828; 53: Assuming 'rule' is non-null in /opt/root_src/io/io/src/TStreamerInfo.cxx:1834; 54: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1834; 55: 'targets' initialized here in /opt/root_src/io/io/src/TStreamerInfo.cxx:1843; 56: Assuming 'targets' is null in /opt/root_src/io/io/src/TStreamerInfo.cxx:1844; 57: Taking true branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1844; 58: Called C++ object pointer is null in /opt/root_src/io/io/src/TStreamerInfo.cxx:1847; /opt/root_src/io/io/src/TStreamerInfo.cxx:2408:50: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Calling 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1700; 2: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 4: Returning from 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1700; 5: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1700; 6: Calling 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1703; 7: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 8: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 9: Returning from 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1703; 10: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1703; 11: Assuming 'gDebug' is <= 0 in /opt/root_src/io/io/src/TStreamerInfo.cxx:1709; 12: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1709; 13: Assuming",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:107713,Testability,Test,TestBit,107713,"28; 52: '?' condition is true in /opt/root_src/io/io/src/TStreamerInfo.cxx:1828; 53: Assuming 'rule' is non-null in /opt/root_src/io/io/src/TStreamerInfo.cxx:1834; 54: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1834; 55: 'targets' initialized here in /opt/root_src/io/io/src/TStreamerInfo.cxx:1843; 56: Assuming 'targets' is null in /opt/root_src/io/io/src/TStreamerInfo.cxx:1844; 57: Taking true branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1844; 58: Called C++ object pointer is null in /opt/root_src/io/io/src/TStreamerInfo.cxx:1847; /opt/root_src/io/io/src/TStreamerInfo.cxx:2408:50: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Calling 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1700; 2: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 4: Returning from 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1700; 5: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1700; 6: Calling 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1703; 7: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 8: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 9: Returning from 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1703; 10: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1703; 11: Assuming 'gDebug' is <= 0 in /opt/root_src/io/io/src/TStreamerInfo.cxx:1709; 12: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1709; 13: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1715; 14: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1715; 15: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1758; 16: Left side of '&&' is false in /opt/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:107868,Testability,Test,TestBit,107868,":1834; 54: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1834; 55: 'targets' initialized here in /opt/root_src/io/io/src/TStreamerInfo.cxx:1843; 56: Assuming 'targets' is null in /opt/root_src/io/io/src/TStreamerInfo.cxx:1844; 57: Taking true branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1844; 58: Called C++ object pointer is null in /opt/root_src/io/io/src/TStreamerInfo.cxx:1847; /opt/root_src/io/io/src/TStreamerInfo.cxx:2408:50: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Calling 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1700; 2: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 4: Returning from 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1700; 5: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1700; 6: Calling 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1703; 7: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 8: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 9: Returning from 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1703; 10: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1703; 11: Assuming 'gDebug' is <= 0 in /opt/root_src/io/io/src/TStreamerInfo.cxx:1709; 12: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1709; 13: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1715; 14: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1715; 15: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1758; 16: Left side of '&&' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1758; 17: Assuming 'ruleSet' is null in /opt/root_src/io/io/src/TStreamerInfo.cxx:1784; 18: Taking false branch in /opt/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:108142,Testability,Test,TestBit,108142,"/opt/root_src/io/io/src/TStreamerInfo.cxx:1844; 58: Called C++ object pointer is null in /opt/root_src/io/io/src/TStreamerInfo.cxx:1847; /opt/root_src/io/io/src/TStreamerInfo.cxx:2408:50: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Calling 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1700; 2: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 4: Returning from 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1700; 5: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1700; 6: Calling 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1703; 7: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 8: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 9: Returning from 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1703; 10: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1703; 11: Assuming 'gDebug' is <= 0 in /opt/root_src/io/io/src/TStreamerInfo.cxx:1709; 12: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1709; 13: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1715; 14: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1715; 15: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1758; 16: Left side of '&&' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1758; 17: Assuming 'ruleSet' is null in /opt/root_src/io/io/src/TStreamerInfo.cxx:1784; 18: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1784; 19: Left side of '&&' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1786; 20: Calling 'TIter::operator()' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1792; 21: Calling 'TIter::Next' in /opt/root_src/core/cont/inc/TCollec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:110019,Testability,Test,TestBit,110019,"tor()' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1792; 21: Calling 'TIter::Next' in /opt/root_src/core/cont/inc/TCollection.h:248; 22: Assuming field 'fIterator' is non-null in /opt/root_src/core/cont/inc/TCollection.h:249; 23: '?' condition is true in /opt/root_src/core/cont/inc/TCollection.h:249; 24: Returning pointer, which participates in a condition later in /opt/root_src/core/cont/inc/TCollection.h:249; 25: Returning from 'TIter::Next' in /opt/root_src/core/cont/inc/TCollection.h:248; 26: Returning pointer, which participates in a condition later in /opt/root_src/core/cont/inc/TCollection.h:248; 27: Returning from 'TIter::operator()' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1792; 28: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TStreamerInfo.cxx:1792; 29: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1793; 30: Left side of '||' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1793; 31: Calling 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1794; 32: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 33: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 34: Returning from 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1794; 35: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1793; 36: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1805; 37: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1805; 38: 'shouldHaveInfoLoc' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:2032; 39: Left side of '&&' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:2032; 40: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:2050; 41: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:2050; 42: Value assigned to 'dm' in /opt/root_src/io/io/src/TStreamerInfo.cxx:2065; 43: Assuming 'dm' is null in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7431:110296,Testability,Test,TestBit,110296,"cont/inc/TCollection.h:249; 24: Returning pointer, which participates in a condition later in /opt/root_src/core/cont/inc/TCollection.h:249; 25: Returning from 'TIter::Next' in /opt/root_src/core/cont/inc/TCollection.h:248; 26: Returning pointer, which participates in a condition later in /opt/root_src/core/cont/inc/TCollection.h:248; 27: Returning from 'TIter::operator()' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1792; 28: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TStreamerInfo.cxx:1792; 29: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1793; 30: Left side of '||' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1793; 31: Calling 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1794; 32: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 33: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 34: Returning from 'TObject::TestBit' in /opt/root_src/io/io/src/TStreamerInfo.cxx:1794; 35: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1793; 36: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:1805; 37: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:1805; 38: 'shouldHaveInfoLoc' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:2032; 39: Left side of '&&' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:2032; 40: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:2050; 41: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:2050; 42: Value assigned to 'dm' in /opt/root_src/io/io/src/TStreamerInfo.cxx:2065; 43: Assuming 'dm' is null in /opt/root_src/io/io/src/TStreamerInfo.cxx:2066; 44: Left side of '&&' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:2066; 45: Assuming 'rd' is null in /opt/root_src/io/io/src/TStreamerInfo.cxx:2115; 46: Left side of '&&' is false in /opt/root_src/io/io/src/TStreamerI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7431
https://github.com/root-project/root/issues/7432:63448,Deployability,release,released,63448,f/src/TPie.cxx:580:13: warning: Value stored to 'isRedrawing' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'isRedrawing' is never read in /opt/root_src/graf2d/graf/src/TPie.cxx:580; /opt/root_src/graf2d/graf/src/TPie.cxx:604:10: warning: Value stored to 'isRedrawing' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'isRedrawing' is never read in /opt/root_src/graf2d/graf/src/TPie.cxx:604; /opt/root_src/graf2d/graf/src/TText.cxx:118:33: warning: Use of memory after it is freed [clang-analyzer-cplusplus.NewDelete]; 1: Calling 'TText::Copy' in /opt/root_src/graf2d/graf/src/TText.cxx:92; 2: Assuming field 'fWcsTitle' is not equal to NULL in /opt/root_src/graf2d/graf/src/TText.cxx:113; 3: Taking true branch in /opt/root_src/graf2d/graf/src/TText.cxx:113; 4: Assuming field 'fWcsTitle' is equal to NULL in /opt/root_src/graf2d/graf/src/TText.cxx:114; 5: Taking false branch in /opt/root_src/graf2d/graf/src/TText.cxx:114; 6: Memory is released in /opt/root_src/graf2d/graf/src/TText.cxx:117; 7: Use of memory after it is freed in /opt/root_src/graf2d/graf/src/TText.cxx:118; /opt/root_src/graf2d/mathtext/src/fontembed.cxx:130:7: warning: Value stored to 'offset_current' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'offset_current' is never read in /opt/root_src/graf2d/mathtext/src/fontembed.cxx:130; /opt/root_src/graf2d/mathtext/src/fontembed.cxx:954:50: warning: Value stored to 'priority' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'priority' is never read in /opt/root_src/graf2d/mathtext/src/fontembed.cxx:954; /opt/root_src/graf2d/mathtext/src/fontembed.cxx:959:50: warning: Value stored to 'priority' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'priority' is never read in /opt/root_src/graf2d/mathtext/src/fontembed.cxx:959; /opt/root_src/graf2d/mathtext/src/fontembed.cxx:978:50: warning: Value stored to 'priority' is never read [clang-analyzer-deadcode,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7432
https://github.com/root-project/root/issues/7432:73981,Energy Efficiency,allocate,allocated,73981,"1637:13: warning: Value stored to 'dywn' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'dywn' is never read in /opt/root_src/graf2d/postscript/src/TSVG.cxx:1637; /opt/root_src/graf2d/postscript/src/TSVG.cxx:1639:13: warning: Value stored to 'dxwn' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'dxwn' is never read in /opt/root_src/graf2d/postscript/src/TSVG.cxx:1639; /opt/root_src/graf2d/postscript/src/TSVG.cxx:1652:37: warning: Value stored to 'cindex' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'cindex' is never read in /opt/root_src/graf2d/postscript/src/TSVG.cxx:1652; /opt/root_src/graf2d/postscript/src/TTeXDump.cxx:664:37: warning: Value stored to 'cindex' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'cindex' is never read in /opt/root_src/graf2d/postscript/src/TTeXDump.cxx:664; /opt/root_src/graf2d/x11/src/GX11Gui.cxx:182:7: warning: Argument to 'delete' is a constant address (1), which is not memory allocated by 'new' [clang-analyzer-cplusplus.NewDelete]; 1: Assuming the condition is true in /opt/root_src/graf2d/x11/src/GX11Gui.cxx:177; 2: Taking true branch in /opt/root_src/graf2d/x11/src/GX11Gui.cxx:177; 3: Argument to 'delete' is a constant address (1), which is not memory allocated by 'new' in /opt/root_src/graf2d/x11/src/GX11Gui.cxx:182; /opt/root_src/graf2d/x11/src/GX11Gui.cxx:2832:24: warning: The left operand of '!=' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: 'dndTypeList' is equal to null in /opt/root_src/graf2d/x11/src/GX11Gui.cxx:2820; 2: Taking true branch in /opt/root_src/graf2d/x11/src/GX11Gui.cxx:2820; 3: Assuming 'maxd' is > 0 in /opt/root_src/graf2d/x11/src/GX11Gui.cxx:2827; 4: Taking false branch in /opt/root_src/graf2d/x11/src/GX11Gui.cxx:2827; 5: Assuming 'win' is not equal to 'dragwin' in /opt/root_src/graf2d/x11/src/GX11Gui.cxx:2829; 6: Left side of '||' is false in /opt/root_src/graf2d/x11/src/GX11Gui.cxx:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7432
https://github.com/root-project/root/issues/7432:74263,Energy Efficiency,allocate,allocated,74263,"-analyzer-deadcode.DeadStores]; 1: Value stored to 'dxwn' is never read in /opt/root_src/graf2d/postscript/src/TSVG.cxx:1639; /opt/root_src/graf2d/postscript/src/TSVG.cxx:1652:37: warning: Value stored to 'cindex' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'cindex' is never read in /opt/root_src/graf2d/postscript/src/TSVG.cxx:1652; /opt/root_src/graf2d/postscript/src/TTeXDump.cxx:664:37: warning: Value stored to 'cindex' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'cindex' is never read in /opt/root_src/graf2d/postscript/src/TTeXDump.cxx:664; /opt/root_src/graf2d/x11/src/GX11Gui.cxx:182:7: warning: Argument to 'delete' is a constant address (1), which is not memory allocated by 'new' [clang-analyzer-cplusplus.NewDelete]; 1: Assuming the condition is true in /opt/root_src/graf2d/x11/src/GX11Gui.cxx:177; 2: Taking true branch in /opt/root_src/graf2d/x11/src/GX11Gui.cxx:177; 3: Argument to 'delete' is a constant address (1), which is not memory allocated by 'new' in /opt/root_src/graf2d/x11/src/GX11Gui.cxx:182; /opt/root_src/graf2d/x11/src/GX11Gui.cxx:2832:24: warning: The left operand of '!=' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: 'dndTypeList' is equal to null in /opt/root_src/graf2d/x11/src/GX11Gui.cxx:2820; 2: Taking true branch in /opt/root_src/graf2d/x11/src/GX11Gui.cxx:2820; 3: Assuming 'maxd' is > 0 in /opt/root_src/graf2d/x11/src/GX11Gui.cxx:2827; 4: Taking false branch in /opt/root_src/graf2d/x11/src/GX11Gui.cxx:2827; 5: Assuming 'win' is not equal to 'dragwin' in /opt/root_src/graf2d/x11/src/GX11Gui.cxx:2829; 6: Left side of '||' is false in /opt/root_src/graf2d/x11/src/GX11Gui.cxx:2829; 7: Assuming 'win' is not equal to 'input' in /opt/root_src/graf2d/x11/src/GX11Gui.cxx:2829; 8: Taking false branch in /opt/root_src/graf2d/x11/src/GX11Gui.cxx:2829; 9: Calling 'TGX11::GetWindowAttributes' in /opt/root_src/graf2d/x11/src/GX11Gui.cxx:2831; 10: Assuming 'id' is 0 in /opt/r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7432
https://github.com/root-project/root/issues/7432:81327,Energy Efficiency,allocate,allocated,81327,.cxx:930; 51: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:930; 52: 'align' is not equal to TLEFT in /opt/root_src/graf2d/x11/src/Rotated.cxx:943; 53: Left side of '||' is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:943; 54: 'align' is not equal to MLEFT in /opt/root_src/graf2d/x11/src/Rotated.cxx:943; 55: Left side of '||' is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:943; 56: 'align' is not equal to BLEFT in /opt/root_src/graf2d/x11/src/Rotated.cxx:943; 57: Left side of '||' is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:943; 58: 'align' is equal to NONE in /opt/root_src/graf2d/x11/src/Rotated.cxx:943; 59: Taking true branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:943; 60: Assuming 'str3' is equal to null in /opt/root_src/graf2d/x11/src/Rotated.cxx:973; 61: Loop condition is false. Exiting loop in /opt/root_src/graf2d/x11/src/Rotated.cxx:938; 62: Calling 'MakeXImage' in /opt/root_src/graf2d/x11/src/Rotated.cxx:978; 63: Memory is allocated in /opt/root_src/graf2d/x11/src/Rotated.cxx:272; 64: Assuming 'data' is not equal to null in /opt/root_src/graf2d/x11/src/Rotated.cxx:273; 65: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:273; 66: Assuming 'image' is not equal to null in /opt/root_src/graf2d/x11/src/Rotated.cxx:278; 67: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:278; 68: Potential leak of memory pointed to by 'data' in /opt/root_src/graf2d/x11/src/Rotated.cxx:283; 69: expanded from macro 'MSBFirst' in /usr/include/X11/X.h:715; /opt/root_src/graf2d/x11/src/Rotated.cxx:419:27: warning: Potential leak of memory pointed to by 'item' [clang-analyzer-unix.Malloc]; 1: Calling 'XRotPaintAlignedString' in /opt/root_src/graf2d/x11/src/Rotated.cxx:328; 2: Assuming 'text' is not equal to null in /opt/root_src/graf2d/x11/src/Rotated.cxx:349; 3: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:349; 4: Assuming the condition is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:351; 5,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7432
https://github.com/root-project/root/issues/7432:84359,Energy Efficiency,allocate,allocated,84359,suming 'i1' is null in /opt/root_src/graf2d/x11/src/Rotated.cxx:703; 18: Left side of '&&' is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:703; 19: 'item' is null in /opt/root_src/graf2d/x11/src/Rotated.cxx:738; 20: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:738; 21: 'item' is null in /opt/root_src/graf2d/x11/src/Rotated.cxx:740; 22: Taking true branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:740; 23: 'gRotatedDebug' is 0 in /opt/root_src/graf2d/x11/src/Rotated.cxx:741; 24: expanded from macro 'DEBUG_PRINT1' in /opt/root_src/graf2d/x11/src/Rotated.cxx:96; 25: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:741; 26: expanded from macro 'DEBUG_PRINT1' in /opt/root_src/graf2d/x11/src/Rotated.cxx:96; 27: 'item' is null in /opt/root_src/graf2d/x11/src/Rotated.cxx:744; 28: Taking true branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:744; 29: Calling 'XRotCreateTextItem' in /opt/root_src/graf2d/x11/src/Rotated.cxx:746; 30: Memory is allocated in /opt/root_src/graf2d/x11/src/Rotated.cxx:827; 31: Assuming 'item' is non-null in /opt/root_src/graf2d/x11/src/Rotated.cxx:828; 32: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:828; 33: Assuming 'align' is equal to NONE in /opt/root_src/graf2d/x11/src/Rotated.cxx:832; 34: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:832; 35: 'align' is equal to NONE in /opt/root_src/graf2d/x11/src/Rotated.cxx:838; 36: Taking true branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:838; 37: 'str1' is not equal to null in /opt/root_src/graf2d/x11/src/Rotated.cxx:845; 38: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:845; 39: Assuming 'str3' is non-null in /opt/root_src/graf2d/x11/src/Rotated.cxx:851; 40: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:851; 41: Assuming 'str3' is equal to null in /opt/root_src/graf2d/x11/src/Rotated.cxx:865; 42: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:865; 43: Loop condition is fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7432
https://github.com/root-project/root/issues/7432:88383,Energy Efficiency,allocate,allocated,88383,alse in /opt/root_src/graf2d/x11/src/Rotated.cxx:1010; 69: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:1010; 70: Field 'fXimage' is not equal to null in /opt/root_src/graf2d/x11/src/Rotated.cxx:1014; 71: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:1014; 72: Assuming 'angle' is equal to 0 in /opt/root_src/graf2d/x11/src/Rotated.cxx:1031; 73: Left side of '||' is true in /opt/root_src/graf2d/x11/src/Rotated.cxx:1031; 74: 'imageIn' is non-null in /opt/root_src/graf2d/x11/src/Rotated.cxx:1058; 75: Taking true branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:1058; 76: Assuming 'j' is >= field 'fRowsOut' in /opt/root_src/graf2d/x11/src/Rotated.cxx:1059; 77: Loop condition is false. Execution continues on line 1084 in /opt/root_src/graf2d/x11/src/Rotated.cxx:1059; 78: Assuming the condition is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:1087; 79: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:1087; 80: Returned allocated memory in /opt/root_src/graf2d/x11/src/Rotated.cxx:746; 81: 'item' is non-null in /opt/root_src/graf2d/x11/src/Rotated.cxx:747; 82: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:747; 83: 'font_name' is equal to null in /opt/root_src/graf2d/x11/src/Rotated.cxx:754; 84: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:754; 85: 'font_name' is null in /opt/root_src/graf2d/x11/src/Rotated.cxx:771; 86: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:771; 87: Returned allocated memory in /opt/root_src/graf2d/x11/src/Rotated.cxx:366; 88: 'item' is not equal to null in /opt/root_src/graf2d/x11/src/Rotated.cxx:367; 89: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:367; 90: 'align' is not equal to TLEFT in /opt/root_src/graf2d/x11/src/Rotated.cxx:378; 91: Left side of '||' is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:378; 92: 'align' is not equal to TCENTRE in /opt/root_src/graf2d/x11/src/Rotated.cxx:378; 93: Left side of '||' is,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7432
https://github.com/root-project/root/issues/7432:88908,Energy Efficiency,allocate,allocated,88908,cxx:1058; 75: Taking true branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:1058; 76: Assuming 'j' is >= field 'fRowsOut' in /opt/root_src/graf2d/x11/src/Rotated.cxx:1059; 77: Loop condition is false. Execution continues on line 1084 in /opt/root_src/graf2d/x11/src/Rotated.cxx:1059; 78: Assuming the condition is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:1087; 79: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:1087; 80: Returned allocated memory in /opt/root_src/graf2d/x11/src/Rotated.cxx:746; 81: 'item' is non-null in /opt/root_src/graf2d/x11/src/Rotated.cxx:747; 82: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:747; 83: 'font_name' is equal to null in /opt/root_src/graf2d/x11/src/Rotated.cxx:754; 84: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:754; 85: 'font_name' is null in /opt/root_src/graf2d/x11/src/Rotated.cxx:771; 86: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:771; 87: Returned allocated memory in /opt/root_src/graf2d/x11/src/Rotated.cxx:366; 88: 'item' is not equal to null in /opt/root_src/graf2d/x11/src/Rotated.cxx:367; 89: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:367; 90: 'align' is not equal to TLEFT in /opt/root_src/graf2d/x11/src/Rotated.cxx:378; 91: Left side of '||' is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:378; 92: 'align' is not equal to TCENTRE in /opt/root_src/graf2d/x11/src/Rotated.cxx:378; 93: Left side of '||' is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:378; 94: 'align' is not equal to TRIGHT in /opt/root_src/graf2d/x11/src/Rotated.cxx:378; 95: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:378; 96: 'align' is not equal to MLEFT in /opt/root_src/graf2d/x11/src/Rotated.cxx:380; 97: Left side of '||' is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:380; 98: 'align' is not equal to MCENTRE in /opt/root_src/graf2d/x11/src/Rotated.cxx:380; 99: Left side of '||' is false in /opt/root_src/graf2d/x11/src/Ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7432
https://github.com/root-project/root/issues/7432:91768,Modifiability,variab,variable,91768,rc/Rotated.cxx:396; 110: 'align' is not equal to MLEFT in /opt/root_src/graf2d/x11/src/Rotated.cxx:396; 111: Left side of '||' is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:396; 112: 'align' is not equal to BLEFT in /opt/root_src/graf2d/x11/src/Rotated.cxx:396; 113: Left side of '||' is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:396; 114: 'align' is equal to NONE in /opt/root_src/graf2d/x11/src/Rotated.cxx:396; 115: Taking true branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:396; 116: 'bg' is 1 in /opt/root_src/graf2d/x11/src/Rotated.cxx:412; 117: Taking true branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:412; 118: Assuming 'xpoints' is null in /opt/root_src/graf2d/x11/src/Rotated.cxx:419; 119: Taking true branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:419; 120: Potential leak of memory pointed to by 'item' in /opt/root_src/graf2d/x11/src/Rotated.cxx:419; /opt/root_src/graf2d/x11/src/Rotated.cxx:1205:18: warning: Access to field 'fNext' results in a dereference of a null pointer (loaded from variable 'last') [clang-analyzer-core.NullDereference]; 1: Calling 'XRotPaintAlignedString' in /opt/root_src/graf2d/x11/src/Rotated.cxx:328; 2: Assuming 'text' is not equal to null in /opt/root_src/graf2d/x11/src/Rotated.cxx:349; 3: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:349; 4: Assuming the condition is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:351; 5: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:351; 6: Loop condition is false. Execution continues on line 356 in /opt/root_src/graf2d/x11/src/Rotated.cxx:354; 7: Loop condition is false. Execution continues on line 358 in /opt/root_src/graf2d/x11/src/Rotated.cxx:356; 8: Assuming the condition is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:361; 9: Left side of '&&' is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:361; 10: Calling 'XRotRetrieveFromCache' in /opt/root_src/graf2d/x11/src/Rotated.cxx:366; 11: Assuming the condition is false in /opt/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7432
https://github.com/root-project/root/issues/7432:95580,Modifiability,variab,variable,95580,121; 35: Assuming 'gRotatedDebug' is 0 in /opt/root_src/graf2d/x11/src/Rotated.cxx:1160; 36: expanded from macro 'DEBUG_PRINT4' in /opt/root_src/graf2d/x11/src/Rotated.cxx:99; 37: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:1160; 38: expanded from macro 'DEBUG_PRINT4' in /opt/root_src/graf2d/x11/src/Rotated.cxx:99; 39: Assuming the condition is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:1164; 40: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:1164; 41: Assuming 'i1' is non-null in /opt/root_src/graf2d/x11/src/Rotated.cxx:1171; 42: Left side of '&&' is true in /opt/root_src/graf2d/x11/src/Rotated.cxx:1171; 43: Loop condition is false. Execution continues on line 1198 in /opt/root_src/graf2d/x11/src/Rotated.cxx:1171; 44: 'gFirstTextItem' is not equal to null in /opt/root_src/graf2d/x11/src/Rotated.cxx:1198; 45: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:1198; 46: Access to field 'fNext' results in a dereference of a null pointer (loaded from variable 'last') in /opt/root_src/graf2d/x11/src/Rotated.cxx:1205; /opt/root_src/graf2d/x11/src/TGX11.cxx:2280:4: warning: Maybe you meant to call TVirtualX::SetLineColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:2385:4: warning: Maybe you meant to call TVirtualX::SetMarkerColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:3119:4: warning: Maybe you meant to call TVirtualX::SetTextAlign() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:3129:4: warning: Maybe you meant to call TVirtualX::SetTextColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/gifencode.c:246:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrU,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7432
https://github.com/root-project/root/issues/7432:91756,Performance,load,loaded,91756,rc/Rotated.cxx:396; 110: 'align' is not equal to MLEFT in /opt/root_src/graf2d/x11/src/Rotated.cxx:396; 111: Left side of '||' is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:396; 112: 'align' is not equal to BLEFT in /opt/root_src/graf2d/x11/src/Rotated.cxx:396; 113: Left side of '||' is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:396; 114: 'align' is equal to NONE in /opt/root_src/graf2d/x11/src/Rotated.cxx:396; 115: Taking true branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:396; 116: 'bg' is 1 in /opt/root_src/graf2d/x11/src/Rotated.cxx:412; 117: Taking true branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:412; 118: Assuming 'xpoints' is null in /opt/root_src/graf2d/x11/src/Rotated.cxx:419; 119: Taking true branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:419; 120: Potential leak of memory pointed to by 'item' in /opt/root_src/graf2d/x11/src/Rotated.cxx:419; /opt/root_src/graf2d/x11/src/Rotated.cxx:1205:18: warning: Access to field 'fNext' results in a dereference of a null pointer (loaded from variable 'last') [clang-analyzer-core.NullDereference]; 1: Calling 'XRotPaintAlignedString' in /opt/root_src/graf2d/x11/src/Rotated.cxx:328; 2: Assuming 'text' is not equal to null in /opt/root_src/graf2d/x11/src/Rotated.cxx:349; 3: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:349; 4: Assuming the condition is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:351; 5: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:351; 6: Loop condition is false. Execution continues on line 356 in /opt/root_src/graf2d/x11/src/Rotated.cxx:354; 7: Loop condition is false. Execution continues on line 358 in /opt/root_src/graf2d/x11/src/Rotated.cxx:356; 8: Assuming the condition is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:361; 9: Left side of '&&' is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:361; 10: Calling 'XRotRetrieveFromCache' in /opt/root_src/graf2d/x11/src/Rotated.cxx:366; 11: Assuming the condition is false in /opt/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7432
https://github.com/root-project/root/issues/7432:95568,Performance,load,loaded,95568,121; 35: Assuming 'gRotatedDebug' is 0 in /opt/root_src/graf2d/x11/src/Rotated.cxx:1160; 36: expanded from macro 'DEBUG_PRINT4' in /opt/root_src/graf2d/x11/src/Rotated.cxx:99; 37: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:1160; 38: expanded from macro 'DEBUG_PRINT4' in /opt/root_src/graf2d/x11/src/Rotated.cxx:99; 39: Assuming the condition is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:1164; 40: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:1164; 41: Assuming 'i1' is non-null in /opt/root_src/graf2d/x11/src/Rotated.cxx:1171; 42: Left side of '&&' is true in /opt/root_src/graf2d/x11/src/Rotated.cxx:1171; 43: Loop condition is false. Execution continues on line 1198 in /opt/root_src/graf2d/x11/src/Rotated.cxx:1171; 44: 'gFirstTextItem' is not equal to null in /opt/root_src/graf2d/x11/src/Rotated.cxx:1198; 45: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:1198; 46: Access to field 'fNext' results in a dereference of a null pointer (loaded from variable 'last') in /opt/root_src/graf2d/x11/src/Rotated.cxx:1205; /opt/root_src/graf2d/x11/src/TGX11.cxx:2280:4: warning: Maybe you meant to call TVirtualX::SetLineColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:2385:4: warning: Maybe you meant to call TVirtualX::SetMarkerColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:3119:4: warning: Maybe you meant to call TVirtualX::SetTextAlign() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:3129:4: warning: Maybe you meant to call TVirtualX::SetTextColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/gifencode.c:246:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrU,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7432
https://github.com/root-project/root/issues/7432:529,Security,access,access,529,```; /opt/root_src/graf2d/asimage/src/TASImage.cxx:3385:7: warning: Value stored to 'x' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'x' is never read in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3385; /opt/root_src/graf2d/asimage/src/TASImage.cxx:3386:7: warning: Value stored to 'y' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'y' is never read in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3386; /opt/root_src/graf2d/asimage/src/TASImage.cxx:3652:17: warning: Array access (via field 'argb32') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming field 'fImage' is non-null in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3623; 2: Taking false branch in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3623; 3: Assuming field 'fScaledImage' is null in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3628; 4: '?' condition is false in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3628; 5: 'img' is non-null in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3629; 6: Taking false branch in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3629; 7: Assuming field 'argb32' is null in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3631; 8: Taking true branch in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3631; 9: Field 'fScaledImage' is null in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3632; 10: Taking false branch in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3632; 11: Assuming 'i' is < field 'height' in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3649; 12: Loop condition is true. Entering loop body in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3649; 13: Assuming 'j' is < field 'width' in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3650; 14: Loop condition is true. Entering loop body in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3650; 15: Array access (via field 'argb32') results in a null pointer dereference in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3652; /opt/root_src,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7432
https://github.com/root-project/root/issues/7432:1867,Security,access,access,1867,dition is false in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3628; 5: 'img' is non-null in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3629; 6: Taking false branch in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3629; 7: Assuming field 'argb32' is null in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3631; 8: Taking true branch in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3631; 9: Field 'fScaledImage' is null in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3632; 10: Taking false branch in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3632; 11: Assuming 'i' is < field 'height' in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3649; 12: Loop condition is true. Entering loop body in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3649; 13: Assuming 'j' is < field 'width' in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3650; 14: Loop condition is true. Entering loop body in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3650; 15: Array access (via field 'argb32') results in a null pointer dereference in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3652; /opt/root_src/graf2d/asimage/src/TASImage.cxx:3797:16: warning: The right operand of '-' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: expanded from macro '_alphaBlend' in /opt/root_src/graf2d/asimage/src/TASImage.cxx:159; 2: Assuming 'i' is < 'nx' in /opt/root_src/graf2d/asimage/src/TASImage.cxx:5141; 3: Loop condition is true. Entering loop body in /opt/root_src/graf2d/asimage/src/TASImage.cxx:5141; 4: Assuming 'j' is < 'ny' in /opt/root_src/graf2d/asimage/src/TASImage.cxx:5143; 5: Loop condition is true. Entering loop body in /opt/root_src/graf2d/asimage/src/TASImage.cxx:5143; 6: Assuming 'icol' is not equal to 'color' in /opt/root_src/graf2d/asimage/src/TASImage.cxx:5145; 7: Taking true branch in /opt/root_src/graf2d/asimage/src/TASImage.cxx:5145; 8: Calling 'TASImage::FillRectangleInternal' in /opt/root_src/graf2d/asimage/src/TASImage.cxx:5148; 9: Assuming the condition is false,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7432
https://github.com/root-project/root/issues/7432:66082,Security,secur,security,66082,rc/graf2d/mathtext/src/fontembed.cxx:993:50: warning: Value stored to 'priority' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'priority' is never read in /opt/root_src/graf2d/mathtext/src/fontembed.cxx:993; /opt/root_src/graf2d/mathtext/src/fontembed.cxx:997:50: warning: Value stored to 'priority' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'priority' is never read in /opt/root_src/graf2d/mathtext/src/fontembed.cxx:997; /opt/root_src/graf2d/mathtext/src/fontembed.cxx:1001:50: warning: Value stored to 'priority' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'priority' is never read in /opt/root_src/graf2d/mathtext/src/fontembed.cxx:1001; /opt/root_src/graf2d/postscript/src/TPDF.cxx:1832:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/graf2d/postscript/src/TPDF.cxx:1832; /opt/root_src/graf2d/postscript/src/TPDF.cxx:1851:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/graf2d/postscript/src/TPDF.cxx:1851; /opt/root_src/graf2d/postscript/src/TPDF.cxx:1877:7: warning: Value stored to 'dxwn' is never read [clang-analyzer-dead,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7432
https://github.com/root-project/root/issues/7432:66661,Security,secur,security,66661,read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'priority' is never read in /opt/root_src/graf2d/mathtext/src/fontembed.cxx:1001; /opt/root_src/graf2d/postscript/src/TPDF.cxx:1832:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/graf2d/postscript/src/TPDF.cxx:1832; /opt/root_src/graf2d/postscript/src/TPDF.cxx:1851:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/graf2d/postscript/src/TPDF.cxx:1851; /opt/root_src/graf2d/postscript/src/TPDF.cxx:1877:7: warning: Value stored to 'dxwn' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'dxwn' is never read in /opt/root_src/graf2d/postscript/src/TPDF.cxx:1877; /opt/root_src/graf2d/postscript/src/TPDF.cxx:1878:7: warning: Value stored to 'dywn' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'dywn' is never read in /opt/root_src/graf2d/postscript/src/TPDF.cxx:1878; /opt/root_src/graf2d/postscript/src/TPDF.cxx:1887:10: warning: Value stored to 'yncm' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'yncm' is never read in /opt/root_src/graf2d/postscript/src/TPDF.cxx:1887; /opt,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7432
https://github.com/root-project/root/issues/7432:75941,Security,secur,security,75941,graf2d/x11/src/GX11Gui.cxx:2829; 7: Assuming 'win' is not equal to 'input' in /opt/root_src/graf2d/x11/src/GX11Gui.cxx:2829; 8: Taking false branch in /opt/root_src/graf2d/x11/src/GX11Gui.cxx:2829; 9: Calling 'TGX11::GetWindowAttributes' in /opt/root_src/graf2d/x11/src/GX11Gui.cxx:2831; 10: Assuming 'id' is 0 in /opt/root_src/graf2d/x11/src/GX11Gui.cxx:778; 11: Taking true branch in /opt/root_src/graf2d/x11/src/GX11Gui.cxx:778; 12: Returning without writing to 'attr.fMapState' in /opt/root_src/graf2d/x11/src/GX11Gui.cxx:778; 13: Returning from 'TGX11::GetWindowAttributes' in /opt/root_src/graf2d/x11/src/GX11Gui.cxx:2831; 14: The left operand of '!=' is a garbage value in /opt/root_src/graf2d/x11/src/GX11Gui.cxx:2832; /opt/root_src/graf2d/x11/src/Rotated.cxx:186:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/graf2d/x11/src/Rotated.cxx:186; /opt/root_src/graf2d/x11/src/Rotated.cxx:283:46: warning: Potential leak of memory pointed to by 'data' [clang-analyzer-unix.Malloc]; 1: expanded from macro 'MSBFirst' in /usr/include/X11/X.h:715; 2: Calling 'XRotPaintAlignedString' in /opt/root_src/graf2d/x11/src/Rotated.cxx:328; 3: Assuming 'text' is not equal to null in /opt/root_src/graf2d/x11/src/Rotated.cxx:349; 4: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:349; 5: Assuming the condition is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:351; 6: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:351; 7: Loop condition is false. Execution continues on line 356 in /opt/root_src/graf2d/x11/src/Rotated.cxx:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7432
https://github.com/root-project/root/issues/7432:91688,Security,Access,Access,91688,rc/Rotated.cxx:396; 110: 'align' is not equal to MLEFT in /opt/root_src/graf2d/x11/src/Rotated.cxx:396; 111: Left side of '||' is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:396; 112: 'align' is not equal to BLEFT in /opt/root_src/graf2d/x11/src/Rotated.cxx:396; 113: Left side of '||' is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:396; 114: 'align' is equal to NONE in /opt/root_src/graf2d/x11/src/Rotated.cxx:396; 115: Taking true branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:396; 116: 'bg' is 1 in /opt/root_src/graf2d/x11/src/Rotated.cxx:412; 117: Taking true branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:412; 118: Assuming 'xpoints' is null in /opt/root_src/graf2d/x11/src/Rotated.cxx:419; 119: Taking true branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:419; 120: Potential leak of memory pointed to by 'item' in /opt/root_src/graf2d/x11/src/Rotated.cxx:419; /opt/root_src/graf2d/x11/src/Rotated.cxx:1205:18: warning: Access to field 'fNext' results in a dereference of a null pointer (loaded from variable 'last') [clang-analyzer-core.NullDereference]; 1: Calling 'XRotPaintAlignedString' in /opt/root_src/graf2d/x11/src/Rotated.cxx:328; 2: Assuming 'text' is not equal to null in /opt/root_src/graf2d/x11/src/Rotated.cxx:349; 3: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:349; 4: Assuming the condition is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:351; 5: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:351; 6: Loop condition is false. Execution continues on line 356 in /opt/root_src/graf2d/x11/src/Rotated.cxx:354; 7: Loop condition is false. Execution continues on line 358 in /opt/root_src/graf2d/x11/src/Rotated.cxx:356; 8: Assuming the condition is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:361; 9: Left side of '&&' is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:361; 10: Calling 'XRotRetrieveFromCache' in /opt/root_src/graf2d/x11/src/Rotated.cxx:366; 11: Assuming the condition is false in /opt/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7432
https://github.com/root-project/root/issues/7432:95500,Security,Access,Access,95500,121; 35: Assuming 'gRotatedDebug' is 0 in /opt/root_src/graf2d/x11/src/Rotated.cxx:1160; 36: expanded from macro 'DEBUG_PRINT4' in /opt/root_src/graf2d/x11/src/Rotated.cxx:99; 37: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:1160; 38: expanded from macro 'DEBUG_PRINT4' in /opt/root_src/graf2d/x11/src/Rotated.cxx:99; 39: Assuming the condition is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:1164; 40: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:1164; 41: Assuming 'i1' is non-null in /opt/root_src/graf2d/x11/src/Rotated.cxx:1171; 42: Left side of '&&' is true in /opt/root_src/graf2d/x11/src/Rotated.cxx:1171; 43: Loop condition is false. Execution continues on line 1198 in /opt/root_src/graf2d/x11/src/Rotated.cxx:1171; 44: 'gFirstTextItem' is not equal to null in /opt/root_src/graf2d/x11/src/Rotated.cxx:1198; 45: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:1198; 46: Access to field 'fNext' results in a dereference of a null pointer (loaded from variable 'last') in /opt/root_src/graf2d/x11/src/Rotated.cxx:1205; /opt/root_src/graf2d/x11/src/TGX11.cxx:2280:4: warning: Maybe you meant to call TVirtualX::SetLineColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:2385:4: warning: Maybe you meant to call TVirtualX::SetMarkerColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:3119:4: warning: Maybe you meant to call TVirtualX::SetTextAlign() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:3129:4: warning: Maybe you meant to call TVirtualX::SetTextColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/gifencode.c:246:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrU,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7432
https://github.com/root-project/root/issues/7432:96339,Security,secur,security,96339,:1171; 44: 'gFirstTextItem' is not equal to null in /opt/root_src/graf2d/x11/src/Rotated.cxx:1198; 45: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:1198; 46: Access to field 'fNext' results in a dereference of a null pointer (loaded from variable 'last') in /opt/root_src/graf2d/x11/src/Rotated.cxx:1205; /opt/root_src/graf2d/x11/src/TGX11.cxx:2280:4: warning: Maybe you meant to call TVirtualX::SetLineColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:2385:4: warning: Maybe you meant to call TVirtualX::SetMarkerColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:3119:4: warning: Maybe you meant to call TVirtualX::SetTextAlign() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:3129:4: warning: Maybe you meant to call TVirtualX::SetTextColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/gifencode.c:246:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/graf2d/x11/src/gifencode.c:246; /opt/root_src/graf2d/x11ttf/src/TGX11TTF.cxx:150:1: warning: non-POD static (TTFX11Init) [clazy-non-pod-global-static]; /opt/root_src/graf2d/asimage/src/TASImage.cxx; /opt/root_src/graf2d/gpad/src/TButton.cxx; /opt/root_src/graf2d/gpad/src/TCanvas.cxx; /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx; /opt/root_src/graf2d/gpad/src/TGroupButton.cxx; /opt/root_src/graf2d/gpad/src/TPad.cxx; /opt/root_src/graf2d/gpadv7/src/RColor.cxx; /opt/root_src/g,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7432
https://github.com/root-project/root/issues/7432:96528,Security,secur,security,96528,c/graf2d/x11/src/Rotated.cxx:1198; 46: Access to field 'fNext' results in a dereference of a null pointer (loaded from variable 'last') in /opt/root_src/graf2d/x11/src/Rotated.cxx:1205; /opt/root_src/graf2d/x11/src/TGX11.cxx:2280:4: warning: Maybe you meant to call TVirtualX::SetLineColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:2385:4: warning: Maybe you meant to call TVirtualX::SetMarkerColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:3119:4: warning: Maybe you meant to call TVirtualX::SetTextAlign() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:3129:4: warning: Maybe you meant to call TVirtualX::SetTextColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/gifencode.c:246:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/graf2d/x11/src/gifencode.c:246; /opt/root_src/graf2d/x11ttf/src/TGX11TTF.cxx:150:1: warning: non-POD static (TTFX11Init) [clazy-non-pod-global-static]; /opt/root_src/graf2d/asimage/src/TASImage.cxx; /opt/root_src/graf2d/gpad/src/TButton.cxx; /opt/root_src/graf2d/gpad/src/TCanvas.cxx; /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx; /opt/root_src/graf2d/gpad/src/TGroupButton.cxx; /opt/root_src/graf2d/gpad/src/TPad.cxx; /opt/root_src/graf2d/gpadv7/src/RColor.cxx; /opt/root_src/graf2d/graf/src/TCandle.cxx; /opt/root_src/graf2d/graf/src/TCurlyLine.cxx; /opt/root_src/graf2d/graf/src/TGaxis.cxx; /opt/root_src/graf2d/gr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7432
https://github.com/root-project/root/issues/7432:96648,Security,secur,security,96648,11/src/Rotated.cxx:1205; /opt/root_src/graf2d/x11/src/TGX11.cxx:2280:4: warning: Maybe you meant to call TVirtualX::SetLineColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:2385:4: warning: Maybe you meant to call TVirtualX::SetMarkerColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:3119:4: warning: Maybe you meant to call TVirtualX::SetTextAlign() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:3129:4: warning: Maybe you meant to call TVirtualX::SetTextColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/gifencode.c:246:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/graf2d/x11/src/gifencode.c:246; /opt/root_src/graf2d/x11ttf/src/TGX11TTF.cxx:150:1: warning: non-POD static (TTFX11Init) [clazy-non-pod-global-static]; /opt/root_src/graf2d/asimage/src/TASImage.cxx; /opt/root_src/graf2d/gpad/src/TButton.cxx; /opt/root_src/graf2d/gpad/src/TCanvas.cxx; /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx; /opt/root_src/graf2d/gpad/src/TGroupButton.cxx; /opt/root_src/graf2d/gpad/src/TPad.cxx; /opt/root_src/graf2d/gpadv7/src/RColor.cxx; /opt/root_src/graf2d/graf/src/TCandle.cxx; /opt/root_src/graf2d/graf/src/TCurlyLine.cxx; /opt/root_src/graf2d/graf/src/TGaxis.cxx; /opt/root_src/graf2d/graf/src/TLegend.cxx; /opt/root_src/graf2d/graf/src/TPaveStats.cxx; /opt/root_src/graf2d/graf/src/TPaveText.cxx; /opt/root_src/graf2d/graf/src/TPie.cxx; /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7432
https://github.com/root-project/root/issues/7432:52404,Testability,Test,TestBit,52404,"src/graf2d/gpad/src/TCreatePrimitives.cxx:134; /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:343:7: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: 'padsav' initialized to a null pointer value in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:276; 2: Loop condition is false. Execution continues on line 290 in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:284; 3: Control jumps to 'case kButton1Up:' at line 327 in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:290; 4: Assuming 'xup' is > 'xlow' in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:336; 5: Left side of '||' is false in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:336; 6: Assuming 'yup' is > 'ylow' in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:336; 7: Taking false branch in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:336; 8: Calling 'TObject::IsZombie' in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:338; 9: Calling 'TObject::TestBit' in /opt/root_src/core/base/inc/TObject.h:149; 10: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 11: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 12: Returning from 'TObject::TestBit' in /opt/root_src/core/base/inc/TObject.h:149; 13: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:149; 14: Returning from 'TObject::IsZombie' in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:338; 15: Taking false branch in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:338; 16: Assuming 'canvas' is null in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:342; 17: Taking false branch in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:342; 18: Called C++ object pointer is null in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:343; /opt/root_src/graf2d/gpad/src/TGroupButton.cxx:156:7: warning: Maybe you meant to call TButton::ExecuteEvent() instead [c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7432
https://github.com/root-project/root/issues/7432:52676,Testability,Test,TestBit,52676,"CreatePrimitives.cxx:276; 2: Loop condition is false. Execution continues on line 290 in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:284; 3: Control jumps to 'case kButton1Up:' at line 327 in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:290; 4: Assuming 'xup' is > 'xlow' in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:336; 5: Left side of '||' is false in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:336; 6: Assuming 'yup' is > 'ylow' in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:336; 7: Taking false branch in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:336; 8: Calling 'TObject::IsZombie' in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:338; 9: Calling 'TObject::TestBit' in /opt/root_src/core/base/inc/TObject.h:149; 10: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 11: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 12: Returning from 'TObject::TestBit' in /opt/root_src/core/base/inc/TObject.h:149; 13: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:149; 14: Returning from 'TObject::IsZombie' in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:338; 15: Taking false branch in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:338; 16: Assuming 'canvas' is null in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:342; 17: Taking false branch in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:342; 18: Called C++ object pointer is null in /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx:343; /opt/root_src/graf2d/gpad/src/TGroupButton.cxx:156:7: warning: Maybe you meant to call TButton::ExecuteEvent() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/gpad/src/TGroupButton.cxx:254:13: warning: Value stored to 'obj' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'obj' during its initialization is never read in /opt/root_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7432
https://github.com/root-project/root/issues/7433:102,Availability,fault,fault,102,"### Describe the bug; After the commit 2c4a756d38d9b5f0348f645a116b3014159f03d6, I get a segmentation fault in Cling when I use the CUDA mode, define a kernel and exit Cling. ```; $ ./cling --std=c++14 -xcuda --cuda-path=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35. ****************** CLING ******************; * Type C++ code and press enter to run it *; * Type .q to exit *; *******************************************; [cling]$ __global__ void g(){}; [cling]$ .q; Segmentation fault (core dumped); ```. The stack trace in gdb is:. ```; ***************** CLING *****************; Type C++ code and press enter to run it; Type .q to exit; *******************************************; [cling]$ _global_ void g(){}; [cling]$ .q. Program received signal SIGSEGV, Segmentation fault.; 0x00007ffff7ffb1a0 in ?? (); (gdb) bt; #0 0x00007ffff7ffb1a0 in ?? (); #1 0x00007ffff65e6a27 in __run_exit_handlers (status=0, listp=0x7ffff6788718 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true,; run_dtors=run_dtors@entry=true) at exit.c:108; #2 0x00007ffff65e6be0 in __GI_exit (status=<optimized out>) at exit.c:139; #3 0x00007ffff65c40ba in __libc_start_main (main=0x1058ad0 <main(int, char**)>, argc=5, argv=0x7fffffff4448, init=<optimized out>, fini=<optimized out>,; rtld_fini=<optimized out>, stack_end=0x7fffffff4438) at ../csu/libc-start.c:342; #4 0x0000000000c5aa6e in _start (); (gdb) where; #0 0x00007ffff7ffb1a0 in ?? (); #1 0x00007ffff65e6a27 in __run_exit_handlers (status=0, listp=0x7ffff6788718 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true,; run_dtors=run_dtors@entry=true) at exit.c:108; #2 0x00007ffff65e6be0 in __GI_exit (status=<optimized out>) at exit.c:139; #3 0x00007ffff65c40ba in __libc_start_main (main=0x1058ad0 <main(int, char**)>, argc=5, argv=0x7fffffff4448, init=<optimized out>, fini=<optimized out>,; rtld_fini=<optimized out>, stack_end=0x7fffffff4438) at ../csu/libc-st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7433
https://github.com/root-project/root/issues/7433:568,Availability,fault,fault,568,"### Describe the bug; After the commit 2c4a756d38d9b5f0348f645a116b3014159f03d6, I get a segmentation fault in Cling when I use the CUDA mode, define a kernel and exit Cling. ```; $ ./cling --std=c++14 -xcuda --cuda-path=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35. ****************** CLING ******************; * Type C++ code and press enter to run it *; * Type .q to exit *; *******************************************; [cling]$ __global__ void g(){}; [cling]$ .q; Segmentation fault (core dumped); ```. The stack trace in gdb is:. ```; ***************** CLING *****************; Type C++ code and press enter to run it; Type .q to exit; *******************************************; [cling]$ _global_ void g(){}; [cling]$ .q. Program received signal SIGSEGV, Segmentation fault.; 0x00007ffff7ffb1a0 in ?? (); (gdb) bt; #0 0x00007ffff7ffb1a0 in ?? (); #1 0x00007ffff65e6a27 in __run_exit_handlers (status=0, listp=0x7ffff6788718 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true,; run_dtors=run_dtors@entry=true) at exit.c:108; #2 0x00007ffff65e6be0 in __GI_exit (status=<optimized out>) at exit.c:139; #3 0x00007ffff65c40ba in __libc_start_main (main=0x1058ad0 <main(int, char**)>, argc=5, argv=0x7fffffff4448, init=<optimized out>, fini=<optimized out>,; rtld_fini=<optimized out>, stack_end=0x7fffffff4438) at ../csu/libc-start.c:342; #4 0x0000000000c5aa6e in _start (); (gdb) where; #0 0x00007ffff7ffb1a0 in ?? (); #1 0x00007ffff65e6a27 in __run_exit_handlers (status=0, listp=0x7ffff6788718 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true,; run_dtors=run_dtors@entry=true) at exit.c:108; #2 0x00007ffff65e6be0 in __GI_exit (status=<optimized out>) at exit.c:139; #3 0x00007ffff65c40ba in __libc_start_main (main=0x1058ad0 <main(int, char**)>, argc=5, argv=0x7fffffff4448, init=<optimized out>, fini=<optimized out>,; rtld_fini=<optimized out>, stack_end=0x7fffffff4438) at ../csu/libc-st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7433
https://github.com/root-project/root/issues/7433:862,Availability,fault,fault,862,"### Describe the bug; After the commit 2c4a756d38d9b5f0348f645a116b3014159f03d6, I get a segmentation fault in Cling when I use the CUDA mode, define a kernel and exit Cling. ```; $ ./cling --std=c++14 -xcuda --cuda-path=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35. ****************** CLING ******************; * Type C++ code and press enter to run it *; * Type .q to exit *; *******************************************; [cling]$ __global__ void g(){}; [cling]$ .q; Segmentation fault (core dumped); ```. The stack trace in gdb is:. ```; ***************** CLING *****************; Type C++ code and press enter to run it; Type .q to exit; *******************************************; [cling]$ _global_ void g(){}; [cling]$ .q. Program received signal SIGSEGV, Segmentation fault.; 0x00007ffff7ffb1a0 in ?? (); (gdb) bt; #0 0x00007ffff7ffb1a0 in ?? (); #1 0x00007ffff65e6a27 in __run_exit_handlers (status=0, listp=0x7ffff6788718 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true,; run_dtors=run_dtors@entry=true) at exit.c:108; #2 0x00007ffff65e6be0 in __GI_exit (status=<optimized out>) at exit.c:139; #3 0x00007ffff65c40ba in __libc_start_main (main=0x1058ad0 <main(int, char**)>, argc=5, argv=0x7fffffff4448, init=<optimized out>, fini=<optimized out>,; rtld_fini=<optimized out>, stack_end=0x7fffffff4438) at ../csu/libc-start.c:342; #4 0x0000000000c5aa6e in _start (); (gdb) where; #0 0x00007ffff7ffb1a0 in ?? (); #1 0x00007ffff65e6a27 in __run_exit_handlers (status=0, listp=0x7ffff6788718 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true,; run_dtors=run_dtors@entry=true) at exit.c:108; #2 0x00007ffff65e6be0 in __GI_exit (status=<optimized out>) at exit.c:139; #3 0x00007ffff65c40ba in __libc_start_main (main=0x1058ad0 <main(int, char**)>, argc=5, argv=0x7fffffff4448, init=<optimized out>, fini=<optimized out>,; rtld_fini=<optimized out>, stack_end=0x7fffffff4438) at ../csu/libc-st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7433
https://github.com/root-project/root/issues/7433:1170,Performance,optimiz,optimized,1170,"el and exit Cling. ```; $ ./cling --std=c++14 -xcuda --cuda-path=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35. ****************** CLING ******************; * Type C++ code and press enter to run it *; * Type .q to exit *; *******************************************; [cling]$ __global__ void g(){}; [cling]$ .q; Segmentation fault (core dumped); ```. The stack trace in gdb is:. ```; ***************** CLING *****************; Type C++ code and press enter to run it; Type .q to exit; *******************************************; [cling]$ _global_ void g(){}; [cling]$ .q. Program received signal SIGSEGV, Segmentation fault.; 0x00007ffff7ffb1a0 in ?? (); (gdb) bt; #0 0x00007ffff7ffb1a0 in ?? (); #1 0x00007ffff65e6a27 in __run_exit_handlers (status=0, listp=0x7ffff6788718 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true,; run_dtors=run_dtors@entry=true) at exit.c:108; #2 0x00007ffff65e6be0 in __GI_exit (status=<optimized out>) at exit.c:139; #3 0x00007ffff65c40ba in __libc_start_main (main=0x1058ad0 <main(int, char**)>, argc=5, argv=0x7fffffff4448, init=<optimized out>, fini=<optimized out>,; rtld_fini=<optimized out>, stack_end=0x7fffffff4438) at ../csu/libc-start.c:342; #4 0x0000000000c5aa6e in _start (); (gdb) where; #0 0x00007ffff7ffb1a0 in ?? (); #1 0x00007ffff65e6a27 in __run_exit_handlers (status=0, listp=0x7ffff6788718 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true,; run_dtors=run_dtors@entry=true) at exit.c:108; #2 0x00007ffff65e6be0 in __GI_exit (status=<optimized out>) at exit.c:139; #3 0x00007ffff65c40ba in __libc_start_main (main=0x1058ad0 <main(int, char**)>, argc=5, argv=0x7fffffff4448, init=<optimized out>, fini=<optimized out>,; rtld_fini=<optimized out>, stack_end=0x7fffffff4438) at ../csu/libc-start.c:342; #4 0x00; ```; The `CodeUnloading/AtExit.C` cling test also fails with the commit. ### Setup. 1. ROOT master beginning from commit 2c4a756d38d9b5f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7433
https://github.com/root-project/root/issues/7433:1316,Performance,optimiz,optimized,1316,"h=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35. ****************** CLING ******************; * Type C++ code and press enter to run it *; * Type .q to exit *; *******************************************; [cling]$ __global__ void g(){}; [cling]$ .q; Segmentation fault (core dumped); ```. The stack trace in gdb is:. ```; ***************** CLING *****************; Type C++ code and press enter to run it; Type .q to exit; *******************************************; [cling]$ _global_ void g(){}; [cling]$ .q. Program received signal SIGSEGV, Segmentation fault.; 0x00007ffff7ffb1a0 in ?? (); (gdb) bt; #0 0x00007ffff7ffb1a0 in ?? (); #1 0x00007ffff65e6a27 in __run_exit_handlers (status=0, listp=0x7ffff6788718 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true,; run_dtors=run_dtors@entry=true) at exit.c:108; #2 0x00007ffff65e6be0 in __GI_exit (status=<optimized out>) at exit.c:139; #3 0x00007ffff65c40ba in __libc_start_main (main=0x1058ad0 <main(int, char**)>, argc=5, argv=0x7fffffff4448, init=<optimized out>, fini=<optimized out>,; rtld_fini=<optimized out>, stack_end=0x7fffffff4438) at ../csu/libc-start.c:342; #4 0x0000000000c5aa6e in _start (); (gdb) where; #0 0x00007ffff7ffb1a0 in ?? (); #1 0x00007ffff65e6a27 in __run_exit_handlers (status=0, listp=0x7ffff6788718 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true,; run_dtors=run_dtors@entry=true) at exit.c:108; #2 0x00007ffff65e6be0 in __GI_exit (status=<optimized out>) at exit.c:139; #3 0x00007ffff65c40ba in __libc_start_main (main=0x1058ad0 <main(int, char**)>, argc=5, argv=0x7fffffff4448, init=<optimized out>, fini=<optimized out>,; rtld_fini=<optimized out>, stack_end=0x7fffffff4438) at ../csu/libc-start.c:342; #4 0x00; ```; The `CodeUnloading/AtExit.C` cling test also fails with the commit. ### Setup. 1. ROOT master beginning from commit 2c4a756d38d9b5f0348f645a116b3014159f03d6; 2. Operating system: Ubuntu 20.04.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7433
https://github.com/root-project/root/issues/7433:1338,Performance,optimiz,optimized,1338,"h=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35. ****************** CLING ******************; * Type C++ code and press enter to run it *; * Type .q to exit *; *******************************************; [cling]$ __global__ void g(){}; [cling]$ .q; Segmentation fault (core dumped); ```. The stack trace in gdb is:. ```; ***************** CLING *****************; Type C++ code and press enter to run it; Type .q to exit; *******************************************; [cling]$ _global_ void g(){}; [cling]$ .q. Program received signal SIGSEGV, Segmentation fault.; 0x00007ffff7ffb1a0 in ?? (); (gdb) bt; #0 0x00007ffff7ffb1a0 in ?? (); #1 0x00007ffff65e6a27 in __run_exit_handlers (status=0, listp=0x7ffff6788718 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true,; run_dtors=run_dtors@entry=true) at exit.c:108; #2 0x00007ffff65e6be0 in __GI_exit (status=<optimized out>) at exit.c:139; #3 0x00007ffff65c40ba in __libc_start_main (main=0x1058ad0 <main(int, char**)>, argc=5, argv=0x7fffffff4448, init=<optimized out>, fini=<optimized out>,; rtld_fini=<optimized out>, stack_end=0x7fffffff4438) at ../csu/libc-start.c:342; #4 0x0000000000c5aa6e in _start (); (gdb) where; #0 0x00007ffff7ffb1a0 in ?? (); #1 0x00007ffff65e6a27 in __run_exit_handlers (status=0, listp=0x7ffff6788718 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true,; run_dtors=run_dtors@entry=true) at exit.c:108; #2 0x00007ffff65e6be0 in __GI_exit (status=<optimized out>) at exit.c:139; #3 0x00007ffff65c40ba in __libc_start_main (main=0x1058ad0 <main(int, char**)>, argc=5, argv=0x7fffffff4448, init=<optimized out>, fini=<optimized out>,; rtld_fini=<optimized out>, stack_end=0x7fffffff4438) at ../csu/libc-start.c:342; #4 0x00; ```; The `CodeUnloading/AtExit.C` cling test also fails with the commit. ### Setup. 1. ROOT master beginning from commit 2c4a756d38d9b5f0348f645a116b3014159f03d6; 2. Operating system: Ubuntu 20.04.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7433
https://github.com/root-project/root/issues/7433:1366,Performance,optimiz,optimized,1366,"h=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35. ****************** CLING ******************; * Type C++ code and press enter to run it *; * Type .q to exit *; *******************************************; [cling]$ __global__ void g(){}; [cling]$ .q; Segmentation fault (core dumped); ```. The stack trace in gdb is:. ```; ***************** CLING *****************; Type C++ code and press enter to run it; Type .q to exit; *******************************************; [cling]$ _global_ void g(){}; [cling]$ .q. Program received signal SIGSEGV, Segmentation fault.; 0x00007ffff7ffb1a0 in ?? (); (gdb) bt; #0 0x00007ffff7ffb1a0 in ?? (); #1 0x00007ffff65e6a27 in __run_exit_handlers (status=0, listp=0x7ffff6788718 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true,; run_dtors=run_dtors@entry=true) at exit.c:108; #2 0x00007ffff65e6be0 in __GI_exit (status=<optimized out>) at exit.c:139; #3 0x00007ffff65c40ba in __libc_start_main (main=0x1058ad0 <main(int, char**)>, argc=5, argv=0x7fffffff4448, init=<optimized out>, fini=<optimized out>,; rtld_fini=<optimized out>, stack_end=0x7fffffff4438) at ../csu/libc-start.c:342; #4 0x0000000000c5aa6e in _start (); (gdb) where; #0 0x00007ffff7ffb1a0 in ?? (); #1 0x00007ffff65e6a27 in __run_exit_handlers (status=0, listp=0x7ffff6788718 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true,; run_dtors=run_dtors@entry=true) at exit.c:108; #2 0x00007ffff65e6be0 in __GI_exit (status=<optimized out>) at exit.c:139; #3 0x00007ffff65c40ba in __libc_start_main (main=0x1058ad0 <main(int, char**)>, argc=5, argv=0x7fffffff4448, init=<optimized out>, fini=<optimized out>,; rtld_fini=<optimized out>, stack_end=0x7fffffff4438) at ../csu/libc-start.c:342; #4 0x00; ```; The `CodeUnloading/AtExit.C` cling test also fails with the commit. ### Setup. 1. ROOT master beginning from commit 2c4a756d38d9b5f0348f645a116b3014159f03d6; 2. Operating system: Ubuntu 20.04.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7433
https://github.com/root-project/root/issues/7433:1746,Performance,optimiz,optimized,1746,"h=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35. ****************** CLING ******************; * Type C++ code and press enter to run it *; * Type .q to exit *; *******************************************; [cling]$ __global__ void g(){}; [cling]$ .q; Segmentation fault (core dumped); ```. The stack trace in gdb is:. ```; ***************** CLING *****************; Type C++ code and press enter to run it; Type .q to exit; *******************************************; [cling]$ _global_ void g(){}; [cling]$ .q. Program received signal SIGSEGV, Segmentation fault.; 0x00007ffff7ffb1a0 in ?? (); (gdb) bt; #0 0x00007ffff7ffb1a0 in ?? (); #1 0x00007ffff65e6a27 in __run_exit_handlers (status=0, listp=0x7ffff6788718 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true,; run_dtors=run_dtors@entry=true) at exit.c:108; #2 0x00007ffff65e6be0 in __GI_exit (status=<optimized out>) at exit.c:139; #3 0x00007ffff65c40ba in __libc_start_main (main=0x1058ad0 <main(int, char**)>, argc=5, argv=0x7fffffff4448, init=<optimized out>, fini=<optimized out>,; rtld_fini=<optimized out>, stack_end=0x7fffffff4438) at ../csu/libc-start.c:342; #4 0x0000000000c5aa6e in _start (); (gdb) where; #0 0x00007ffff7ffb1a0 in ?? (); #1 0x00007ffff65e6a27 in __run_exit_handlers (status=0, listp=0x7ffff6788718 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true,; run_dtors=run_dtors@entry=true) at exit.c:108; #2 0x00007ffff65e6be0 in __GI_exit (status=<optimized out>) at exit.c:139; #3 0x00007ffff65c40ba in __libc_start_main (main=0x1058ad0 <main(int, char**)>, argc=5, argv=0x7fffffff4448, init=<optimized out>, fini=<optimized out>,; rtld_fini=<optimized out>, stack_end=0x7fffffff4438) at ../csu/libc-start.c:342; #4 0x00; ```; The `CodeUnloading/AtExit.C` cling test also fails with the commit. ### Setup. 1. ROOT master beginning from commit 2c4a756d38d9b5f0348f645a116b3014159f03d6; 2. Operating system: Ubuntu 20.04.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7433
https://github.com/root-project/root/issues/7433:1892,Performance,optimiz,optimized,1892,"h=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35. ****************** CLING ******************; * Type C++ code and press enter to run it *; * Type .q to exit *; *******************************************; [cling]$ __global__ void g(){}; [cling]$ .q; Segmentation fault (core dumped); ```. The stack trace in gdb is:. ```; ***************** CLING *****************; Type C++ code and press enter to run it; Type .q to exit; *******************************************; [cling]$ _global_ void g(){}; [cling]$ .q. Program received signal SIGSEGV, Segmentation fault.; 0x00007ffff7ffb1a0 in ?? (); (gdb) bt; #0 0x00007ffff7ffb1a0 in ?? (); #1 0x00007ffff65e6a27 in __run_exit_handlers (status=0, listp=0x7ffff6788718 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true,; run_dtors=run_dtors@entry=true) at exit.c:108; #2 0x00007ffff65e6be0 in __GI_exit (status=<optimized out>) at exit.c:139; #3 0x00007ffff65c40ba in __libc_start_main (main=0x1058ad0 <main(int, char**)>, argc=5, argv=0x7fffffff4448, init=<optimized out>, fini=<optimized out>,; rtld_fini=<optimized out>, stack_end=0x7fffffff4438) at ../csu/libc-start.c:342; #4 0x0000000000c5aa6e in _start (); (gdb) where; #0 0x00007ffff7ffb1a0 in ?? (); #1 0x00007ffff65e6a27 in __run_exit_handlers (status=0, listp=0x7ffff6788718 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true,; run_dtors=run_dtors@entry=true) at exit.c:108; #2 0x00007ffff65e6be0 in __GI_exit (status=<optimized out>) at exit.c:139; #3 0x00007ffff65c40ba in __libc_start_main (main=0x1058ad0 <main(int, char**)>, argc=5, argv=0x7fffffff4448, init=<optimized out>, fini=<optimized out>,; rtld_fini=<optimized out>, stack_end=0x7fffffff4438) at ../csu/libc-start.c:342; #4 0x00; ```; The `CodeUnloading/AtExit.C` cling test also fails with the commit. ### Setup. 1. ROOT master beginning from commit 2c4a756d38d9b5f0348f645a116b3014159f03d6; 2. Operating system: Ubuntu 20.04.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7433
https://github.com/root-project/root/issues/7433:1914,Performance,optimiz,optimized,1914,"h=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35. ****************** CLING ******************; * Type C++ code and press enter to run it *; * Type .q to exit *; *******************************************; [cling]$ __global__ void g(){}; [cling]$ .q; Segmentation fault (core dumped); ```. The stack trace in gdb is:. ```; ***************** CLING *****************; Type C++ code and press enter to run it; Type .q to exit; *******************************************; [cling]$ _global_ void g(){}; [cling]$ .q. Program received signal SIGSEGV, Segmentation fault.; 0x00007ffff7ffb1a0 in ?? (); (gdb) bt; #0 0x00007ffff7ffb1a0 in ?? (); #1 0x00007ffff65e6a27 in __run_exit_handlers (status=0, listp=0x7ffff6788718 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true,; run_dtors=run_dtors@entry=true) at exit.c:108; #2 0x00007ffff65e6be0 in __GI_exit (status=<optimized out>) at exit.c:139; #3 0x00007ffff65c40ba in __libc_start_main (main=0x1058ad0 <main(int, char**)>, argc=5, argv=0x7fffffff4448, init=<optimized out>, fini=<optimized out>,; rtld_fini=<optimized out>, stack_end=0x7fffffff4438) at ../csu/libc-start.c:342; #4 0x0000000000c5aa6e in _start (); (gdb) where; #0 0x00007ffff7ffb1a0 in ?? (); #1 0x00007ffff65e6a27 in __run_exit_handlers (status=0, listp=0x7ffff6788718 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true,; run_dtors=run_dtors@entry=true) at exit.c:108; #2 0x00007ffff65e6be0 in __GI_exit (status=<optimized out>) at exit.c:139; #3 0x00007ffff65c40ba in __libc_start_main (main=0x1058ad0 <main(int, char**)>, argc=5, argv=0x7fffffff4448, init=<optimized out>, fini=<optimized out>,; rtld_fini=<optimized out>, stack_end=0x7fffffff4438) at ../csu/libc-start.c:342; #4 0x00; ```; The `CodeUnloading/AtExit.C` cling test also fails with the commit. ### Setup. 1. ROOT master beginning from commit 2c4a756d38d9b5f0348f645a116b3014159f03d6; 2. Operating system: Ubuntu 20.04.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7433
https://github.com/root-project/root/issues/7433:1942,Performance,optimiz,optimized,1942,"h=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35. ****************** CLING ******************; * Type C++ code and press enter to run it *; * Type .q to exit *; *******************************************; [cling]$ __global__ void g(){}; [cling]$ .q; Segmentation fault (core dumped); ```. The stack trace in gdb is:. ```; ***************** CLING *****************; Type C++ code and press enter to run it; Type .q to exit; *******************************************; [cling]$ _global_ void g(){}; [cling]$ .q. Program received signal SIGSEGV, Segmentation fault.; 0x00007ffff7ffb1a0 in ?? (); (gdb) bt; #0 0x00007ffff7ffb1a0 in ?? (); #1 0x00007ffff65e6a27 in __run_exit_handlers (status=0, listp=0x7ffff6788718 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true,; run_dtors=run_dtors@entry=true) at exit.c:108; #2 0x00007ffff65e6be0 in __GI_exit (status=<optimized out>) at exit.c:139; #3 0x00007ffff65c40ba in __libc_start_main (main=0x1058ad0 <main(int, char**)>, argc=5, argv=0x7fffffff4448, init=<optimized out>, fini=<optimized out>,; rtld_fini=<optimized out>, stack_end=0x7fffffff4438) at ../csu/libc-start.c:342; #4 0x0000000000c5aa6e in _start (); (gdb) where; #0 0x00007ffff7ffb1a0 in ?? (); #1 0x00007ffff65e6a27 in __run_exit_handlers (status=0, listp=0x7ffff6788718 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true,; run_dtors=run_dtors@entry=true) at exit.c:108; #2 0x00007ffff65e6be0 in __GI_exit (status=<optimized out>) at exit.c:139; #3 0x00007ffff65c40ba in __libc_start_main (main=0x1058ad0 <main(int, char**)>, argc=5, argv=0x7fffffff4448, init=<optimized out>, fini=<optimized out>,; rtld_fini=<optimized out>, stack_end=0x7fffffff4438) at ../csu/libc-start.c:342; #4 0x00; ```; The `CodeUnloading/AtExit.C` cling test also fails with the commit. ### Setup. 1. ROOT master beginning from commit 2c4a756d38d9b5f0348f645a116b3014159f03d6; 2. Operating system: Ubuntu 20.04.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7433
https://github.com/root-project/root/issues/7433:2061,Testability,test,test,2061,"h=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35. ****************** CLING ******************; * Type C++ code and press enter to run it *; * Type .q to exit *; *******************************************; [cling]$ __global__ void g(){}; [cling]$ .q; Segmentation fault (core dumped); ```. The stack trace in gdb is:. ```; ***************** CLING *****************; Type C++ code and press enter to run it; Type .q to exit; *******************************************; [cling]$ _global_ void g(){}; [cling]$ .q. Program received signal SIGSEGV, Segmentation fault.; 0x00007ffff7ffb1a0 in ?? (); (gdb) bt; #0 0x00007ffff7ffb1a0 in ?? (); #1 0x00007ffff65e6a27 in __run_exit_handlers (status=0, listp=0x7ffff6788718 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true,; run_dtors=run_dtors@entry=true) at exit.c:108; #2 0x00007ffff65e6be0 in __GI_exit (status=<optimized out>) at exit.c:139; #3 0x00007ffff65c40ba in __libc_start_main (main=0x1058ad0 <main(int, char**)>, argc=5, argv=0x7fffffff4448, init=<optimized out>, fini=<optimized out>,; rtld_fini=<optimized out>, stack_end=0x7fffffff4438) at ../csu/libc-start.c:342; #4 0x0000000000c5aa6e in _start (); (gdb) where; #0 0x00007ffff7ffb1a0 in ?? (); #1 0x00007ffff65e6a27 in __run_exit_handlers (status=0, listp=0x7ffff6788718 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true,; run_dtors=run_dtors@entry=true) at exit.c:108; #2 0x00007ffff65e6be0 in __GI_exit (status=<optimized out>) at exit.c:139; #3 0x00007ffff65c40ba in __libc_start_main (main=0x1058ad0 <main(int, char**)>, argc=5, argv=0x7fffffff4448, init=<optimized out>, fini=<optimized out>,; rtld_fini=<optimized out>, stack_end=0x7fffffff4438) at ../csu/libc-start.c:342; #4 0x00; ```; The `CodeUnloading/AtExit.C` cling test also fails with the commit. ### Setup. 1. ROOT master beginning from commit 2c4a756d38d9b5f0348f645a116b3014159f03d6; 2. Operating system: Ubuntu 20.04.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7433
https://github.com/root-project/root/issues/7435:742,Availability,down,download,742,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; When changing the window size of the gui_ex.py tutorial, the contents of the window do not scale. ### Expected behavior; The contents should adjust to the window size. ### To Reproduce; ```; cd $ROOTSYS/tutorials/pyroot; python -i gui_ex.py; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Arch Linux, compiled from latest source. ### Additional context; See [ROOT forum](https://root-forum.cern.ch/t/pyroot-gui-tutorial-examples-problems-6-22-06/43891)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7435
https://github.com/root-project/root/issues/7435:724,Deployability,install,install,724,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; When changing the window size of the gui_ex.py tutorial, the contents of the window do not scale. ### Expected behavior; The contents should adjust to the window size. ### To Reproduce; ```; cd $ROOTSYS/tutorials/pyroot; python -i gui_ex.py; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Arch Linux, compiled from latest source. ### Additional context; See [ROOT forum](https://root-forum.cern.ch/t/pyroot-gui-tutorial-examples-problems-6-22-06/43891)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7435
https://github.com/root-project/root/issues/7436:522,Deployability,install,install-git,522,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; The tutorial does not start but prints a backtrace:; ```; Traceback (most recent call last):; File ""/home/jakob/Documents/CERN/ROOT/ntuple/install-git/tutorials/pyroot/numberEntry.py"", line 51, in <module>; window = pMyMainFrame( gClient.GetRoot(), 50, 50 ); File ""/home/jakob/Documents/CERN/ROOT/ntuple/install-git/tutorials/pyroot/numberEntry.py"", line 25, in __init__; self.fLabelDispatch = TPyDispatcher( self.DoSetlabel ); NameError: name 'TPyDispatcher' is not defined; ```. ### Expected behavior; The tutorial should run. ### To Reproduce; ```; cd $ROOTSYS/tutorials/pyroot; python -i numberEntry.py; ```. ### Setup; Compiled from latest ROOT sources / Arch Linux. ### Additional context; See [ROOT forum](https://root-forum.cern.ch/t/pyroot-gui-tutorial-examples-problems-6-22-06/43891)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7436
https://github.com/root-project/root/issues/7436:687,Deployability,install,install-git,687,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; The tutorial does not start but prints a backtrace:; ```; Traceback (most recent call last):; File ""/home/jakob/Documents/CERN/ROOT/ntuple/install-git/tutorials/pyroot/numberEntry.py"", line 51, in <module>; window = pMyMainFrame( gClient.GetRoot(), 50, 50 ); File ""/home/jakob/Documents/CERN/ROOT/ntuple/install-git/tutorials/pyroot/numberEntry.py"", line 25, in __init__; self.fLabelDispatch = TPyDispatcher( self.DoSetlabel ); NameError: name 'TPyDispatcher' is not defined; ```. ### Expected behavior; The tutorial should run. ### To Reproduce; ```; cd $ROOTSYS/tutorials/pyroot; python -i numberEntry.py; ```. ### Setup; Compiled from latest ROOT sources / Arch Linux. ### Additional context; See [ROOT forum](https://root-forum.cern.ch/t/pyroot-gui-tutorial-examples-problems-6-22-06/43891)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7436
https://github.com/root-project/root/pull/7437:55,Security,access,access,55,Addressing report in #7423 ; In most cases - potential access to nullptr.; Plus improving GetCppName.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7437
https://github.com/root-project/root/pull/7439:164,Availability,error,error,164,"In working on the HistFactory, there were many small things that I encountered on the way. This is a collection of fixes, modernisations, improved warnings, better error handling and similar small things.; This is step 1 flushing those from the branch before actually putting up the histfactory stuff.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7439
https://github.com/root-project/root/issues/7440:1289,Usability,simpl,simple,1289,"### Explain what you would like to see improved; When I browse math documentation, I read MathMore documentation at https://root.cern/doc/master/group__MathMore.html . When I browse menu in the left column, there are four submenus. ; The submenu `Numerical Algorithms` has on its page https://root.cern/doc/master/group__NumAlgo.html (see that the link is common for both MathCore and MathMore):; Math » MathCore | Math » MathMore; Same for `Statistical functions`. When I press `Special functions` on the left menu, the left menu changes to MathCore!; https://root.cern/doc/master/group__SpecFunc.html; Same for `QuasiRandom number generators and distributions`. This is very confusing. . ### Optional: share how it could be improved; I think that MathMore subsections should be deleted (or merged with MathCore, which is larger). ; There can remain the main page describing what MathMore is, but all subsections common with MathCore should belong only there (or to a common ROOT::Math section). This is very confusing for new users, because I didn't notice that the link is the same, and had to browse both sections in MathCore and MathMore trying to find the difference. ### Additional context; I think this is not related to the site, but to documentation generation. Even if it's not simple to be implemented technically, this is still a feature request (or even a bug report), because for users this is not convenient.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7441:120,Availability,down,download,120,"Even though it's build and can be found in the build directory, it's not installed anymore. xrdcp is the default way to download files through the CLI, so I'd vote for having it back as part of the ROOT installation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/issues/7441:73,Deployability,install,installed,73,"Even though it's build and can be found in the build directory, it's not installed anymore. xrdcp is the default way to download files through the CLI, so I'd vote for having it back as part of the ROOT installation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/issues/7441:203,Deployability,install,installation,203,"Even though it's build and can be found in the build directory, it's not installed anymore. xrdcp is the default way to download files through the CLI, so I'd vote for having it back as part of the ROOT installation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/pull/7442:77,Availability,error,error,77,"Extra checks for nullptr, exclude unused variables.; Last commit - bugfix in error code handling; Closing #7425",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7442
https://github.com/root-project/root/pull/7442:41,Modifiability,variab,variables,41,"Extra checks for nullptr, exclude unused variables.; Last commit - bugfix in error code handling; Closing #7425",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7442
https://github.com/root-project/root/pull/7444:205,Availability,error,error,205,Adresses most issues from #7426. * Check nullptr in proposed places; * Mark `// NOLINT` when return static members ; * Use references in several loops like `for (auto &entry : arr)`; * Fix potential logic error in `TStreamerElement::GetSequenceType`; * Use std::vector<std::string> for tokens in `TDataMember::ExtractOptionsFromComment`; * Use static std::string in `TCling::TypeName` instead of self-maintained char buffer; * Fix potential leak when calling `TClass::AdoptMemberStreamer`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7444
https://github.com/root-project/root/pull/7444:199,Testability,log,logic,199,Adresses most issues from #7426. * Check nullptr in proposed places; * Mark `// NOLINT` when return static members ; * Use references in several loops like `for (auto &entry : arr)`; * Fix potential logic error in `TStreamerElement::GetSequenceType`; * Use std::vector<std::string> for tokens in `TDataMember::ExtractOptionsFromComment`; * Use static std::string in `TCling::TypeName` instead of self-maintained char buffer; * Fix potential leak when calling `TClass::AdoptMemberStreamer`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7444
https://github.com/root-project/root/pull/7445:55,Modifiability,variab,variable,55,"Fixing most of the topics from #7427 . * Remove unused variable/values, ; * replace strcpy by strlcpy/strlcat. Keep `C` code warnings as is - maybe one can just disable them",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7445
https://github.com/root-project/root/pull/7446:482,Integrability,message,message,482,"Silent the following zillion of warnings on Windows:; ```; C:\Users\sftnight\git\master\interpreter\llvm\src\include\llvm/Support/type_traits.h(97,1): warning C4624: 'llvm::detail::trivial_helper<T>': destructor was implicitly defined as deleted [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; with; [; T=clang::Sema::ModuleScope; ]; C:\Users\sftnight\git\master\interpreter\llvm\src\include\llvm/Support/type_traits.h(150): message : see reference to class template instantiation 'llvm::detail::trivial_helper<T>' being compiled [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; with; [; T=clang::Sema::ModuleScope; ]; C:\Users\sftnight\git\master\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(315): message : see reference to class template instantiation 'llvm::is_trivially_copyable<T>' being compiled [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; with; [; T=clang::Sema::ModuleScope; ]; C:\Users\sftnight\git\master\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(837): message : see reference to class template instantiation 'llvm::SmallVectorImpl<T>' being compiled [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; with; [; T=clang::Sema::ModuleScope; ]; C:\Users\sftnight\git\master\interpreter\llvm\src\tools\clang\include\clang/Sema/Sema.h(1724): message : see reference to class template instantiation 'llvm::SmallVector<clang::Sema::ModuleScope,16>' being compiled [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:819,Integrability,message,message,819,"Silent the following zillion of warnings on Windows:; ```; C:\Users\sftnight\git\master\interpreter\llvm\src\include\llvm/Support/type_traits.h(97,1): warning C4624: 'llvm::detail::trivial_helper<T>': destructor was implicitly defined as deleted [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; with; [; T=clang::Sema::ModuleScope; ]; C:\Users\sftnight\git\master\interpreter\llvm\src\include\llvm/Support/type_traits.h(150): message : see reference to class template instantiation 'llvm::detail::trivial_helper<T>' being compiled [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; with; [; T=clang::Sema::ModuleScope; ]; C:\Users\sftnight\git\master\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(315): message : see reference to class template instantiation 'llvm::is_trivially_copyable<T>' being compiled [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; with; [; T=clang::Sema::ModuleScope; ]; C:\Users\sftnight\git\master\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(837): message : see reference to class template instantiation 'llvm::SmallVectorImpl<T>' being compiled [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; with; [; T=clang::Sema::ModuleScope; ]; C:\Users\sftnight\git\master\interpreter\llvm\src\tools\clang\include\clang/Sema/Sema.h(1724): message : see reference to class template instantiation 'llvm::SmallVector<clang::Sema::ModuleScope,16>' being compiled [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:1155,Integrability,message,message,1155,"Silent the following zillion of warnings on Windows:; ```; C:\Users\sftnight\git\master\interpreter\llvm\src\include\llvm/Support/type_traits.h(97,1): warning C4624: 'llvm::detail::trivial_helper<T>': destructor was implicitly defined as deleted [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; with; [; T=clang::Sema::ModuleScope; ]; C:\Users\sftnight\git\master\interpreter\llvm\src\include\llvm/Support/type_traits.h(150): message : see reference to class template instantiation 'llvm::detail::trivial_helper<T>' being compiled [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; with; [; T=clang::Sema::ModuleScope; ]; C:\Users\sftnight\git\master\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(315): message : see reference to class template instantiation 'llvm::is_trivially_copyable<T>' being compiled [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; with; [; T=clang::Sema::ModuleScope; ]; C:\Users\sftnight\git\master\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(837): message : see reference to class template instantiation 'llvm::SmallVectorImpl<T>' being compiled [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; with; [; T=clang::Sema::ModuleScope; ]; C:\Users\sftnight\git\master\interpreter\llvm\src\tools\clang\include\clang/Sema/Sema.h(1724): message : see reference to class template instantiation 'llvm::SmallVector<clang::Sema::ModuleScope,16>' being compiled [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:1493,Integrability,message,message,1493,"Silent the following zillion of warnings on Windows:; ```; C:\Users\sftnight\git\master\interpreter\llvm\src\include\llvm/Support/type_traits.h(97,1): warning C4624: 'llvm::detail::trivial_helper<T>': destructor was implicitly defined as deleted [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; with; [; T=clang::Sema::ModuleScope; ]; C:\Users\sftnight\git\master\interpreter\llvm\src\include\llvm/Support/type_traits.h(150): message : see reference to class template instantiation 'llvm::detail::trivial_helper<T>' being compiled [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; with; [; T=clang::Sema::ModuleScope; ]; C:\Users\sftnight\git\master\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(315): message : see reference to class template instantiation 'llvm::is_trivially_copyable<T>' being compiled [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; with; [; T=clang::Sema::ModuleScope; ]; C:\Users\sftnight\git\master\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(837): message : see reference to class template instantiation 'llvm::SmallVectorImpl<T>' being compiled [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; with; [; T=clang::Sema::ModuleScope; ]; C:\Users\sftnight\git\master\interpreter\llvm\src\tools\clang\include\clang/Sema/Sema.h(1724): message : see reference to class template instantiation 'llvm::SmallVector<clang::Sema::ModuleScope,16>' being compiled [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7449:61,Modifiability,variab,variable,61,"Reported in #7428; Majority is values, which are provided in variable declaration, bet then just overwritten in the code.; In most cases I just move declaration of such variables to the place where it used.; Also in few places adding `&` to loops like `for (auto &it : fconsts)`. @agheata, one open question is here:; https://github.com/root-project/root/blob/master/geom/geom/src/TGeoPcon.cxx#L556-L560; `phi` is calculated but not used at all. I also add several commits to delete copy constructor for all shapes. ; And from TGeoNavigator, where these constructor was defenitely wrong",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7449
https://github.com/root-project/root/pull/7449:169,Modifiability,variab,variables,169,"Reported in #7428; Majority is values, which are provided in variable declaration, bet then just overwritten in the code.; In most cases I just move declaration of such variables to the place where it used.; Also in few places adding `&` to loops like `for (auto &it : fconsts)`. @agheata, one open question is here:; https://github.com/root-project/root/blob/master/geom/geom/src/TGeoPcon.cxx#L556-L560; `phi` is calculated but not used at all. I also add several commits to delete copy constructor for all shapes. ; And from TGeoNavigator, where these constructor was defenitely wrong",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7449
https://github.com/root-project/root/pull/7451:30,Deployability,update,updates,30,[skip-ci]. Some documentation updates to populate empty doxygen pages.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7451
https://github.com/root-project/root/pull/7452:74,Testability,log,log,74,[skip-ci]. Pretty much all things worth mentioning that came out of; `git log $(git merge-base master v6-22-00)..$(git merge-base master v6-24-00-rc1) roofit/`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7452
https://github.com/root-project/root/pull/7453:84,Integrability,interface,interface,84,"[skip-ci]. Doxygen was omitting classes that are defined in a .cxx. Although their; interface might not be too relevant for users, enabling those should help; developers. See, for example [this](https://root.cern/doc/master/namespaceRooBatchCompute_1_1RF__ARCH.html); It should in theory list the classes that are used for RF computations, but these never show up in doxygen.; Instead, we only see three helper functions. (Not to worry, the docs of this library are improved more in #7451). Especially the broken link in the **See also** is a bit unfortunate:; ![image](https://user-images.githubusercontent.com/16205615/110686280-90aed880-81df-11eb-8246-7f5ffba11183.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7453
https://github.com/root-project/root/issues/7454:91,Deployability,release,release,91,"### Describe the bug; RooFit throws exceptions about an interface change, and links to the release notes, but the release note don't mention anything.; https://github.com/root-project/root/blob/53c89259ed70f4ea5c089d6c90ceb445c3069be9/roofit/roofitcore/inc/RooAbsReal.h#L110-L123. This section needs to appear in the release notes, both in the 6.24 and the master branch. Note:; #7452 already has a section about the new batch interface. This could be extended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7454
https://github.com/root-project/root/issues/7454:114,Deployability,release,release,114,"### Describe the bug; RooFit throws exceptions about an interface change, and links to the release notes, but the release note don't mention anything.; https://github.com/root-project/root/blob/53c89259ed70f4ea5c089d6c90ceb445c3069be9/roofit/roofitcore/inc/RooAbsReal.h#L110-L123. This section needs to appear in the release notes, both in the 6.24 and the master branch. Note:; #7452 already has a section about the new batch interface. This could be extended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7454
https://github.com/root-project/root/issues/7454:317,Deployability,release,release,317,"### Describe the bug; RooFit throws exceptions about an interface change, and links to the release notes, but the release note don't mention anything.; https://github.com/root-project/root/blob/53c89259ed70f4ea5c089d6c90ceb445c3069be9/roofit/roofitcore/inc/RooAbsReal.h#L110-L123. This section needs to appear in the release notes, both in the 6.24 and the master branch. Note:; #7452 already has a section about the new batch interface. This could be extended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7454
https://github.com/root-project/root/issues/7454:56,Integrability,interface,interface,56,"### Describe the bug; RooFit throws exceptions about an interface change, and links to the release notes, but the release note don't mention anything.; https://github.com/root-project/root/blob/53c89259ed70f4ea5c089d6c90ceb445c3069be9/roofit/roofitcore/inc/RooAbsReal.h#L110-L123. This section needs to appear in the release notes, both in the 6.24 and the master branch. Note:; #7452 already has a section about the new batch interface. This could be extended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7454
https://github.com/root-project/root/issues/7454:427,Integrability,interface,interface,427,"### Describe the bug; RooFit throws exceptions about an interface change, and links to the release notes, but the release note don't mention anything.; https://github.com/root-project/root/blob/53c89259ed70f4ea5c089d6c90ceb445c3069be9/roofit/roofitcore/inc/RooAbsReal.h#L110-L123. This section needs to appear in the release notes, both in the 6.24 and the master branch. Note:; #7452 already has a section about the new batch interface. This could be extended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7454
https://github.com/root-project/root/issues/7454:452,Modifiability,extend,extended,452,"### Describe the bug; RooFit throws exceptions about an interface change, and links to the release notes, but the release note don't mention anything.; https://github.com/root-project/root/blob/53c89259ed70f4ea5c089d6c90ceb445c3069be9/roofit/roofitcore/inc/RooAbsReal.h#L110-L123. This section needs to appear in the release notes, both in the 6.24 and the master branch. Note:; #7452 already has a section about the new batch interface. This could be extended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7454
https://github.com/root-project/root/issues/7458:18839,Energy Efficiency,Adapt,AdaptiveIntegratorMultiDim,18839,"44 in /opt/root_src/math/minuit/src/TLinearFitter.cxx:2378; 17: Calling 'KOrdStat<double, int>' in /opt/root_src/math/minuit/src/TLinearFitter.cxx:2444; 18: Assuming 'work' is null in /opt/root_src/math/mathcore/inc/TMath.h:1347; 19: Taking false branch in /opt/root_src/math/mathcore/inc/TMath.h:1347; 20: 'n' is <= 'kWorkMax' in /opt/root_src/math/mathcore/inc/TMath.h:1351; 21: Taking false branch in /opt/root_src/math/mathcore/inc/TMath.h:1351; 22: 'ii' is >= 'n' in /opt/root_src/math/mathcore/inc/TMath.h:1357; 23: Loop condition is false. Execution continues on line 1360 in /opt/root_src/math/mathcore/inc/TMath.h:1357; 24: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/inc/TMath.h:1363; 25: Assuming the condition is false in /opt/root_src/math/mathcore/inc/TMath.h:1364; 26: Taking false branch in /opt/root_src/math/mathcore/inc/TMath.h:1364; 27: Assigned value is garbage or undefined in /opt/root_src/math/mathcore/inc/TMath.h:1373; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:142:4: warning: Value stored to 'nfnevl' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nfnevl' is never read in /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:142; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:143:4: warning: Value stored to 'relerr' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'relerr' is never read in /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:143; /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68:4: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Calling 'IntegrandTransform::Clone' in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68; 2: Field 'fInfiniteInterval' is false in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 3: '?' condition is false in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 4: Memory is allocated in /opt/root_src/math/mathcore/src/GaussIntegrator.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:19040,Energy Efficiency,Adapt,AdaptiveIntegratorMultiDim,19040,null in /opt/root_src/math/mathcore/inc/TMath.h:1347; 19: Taking false branch in /opt/root_src/math/mathcore/inc/TMath.h:1347; 20: 'n' is <= 'kWorkMax' in /opt/root_src/math/mathcore/inc/TMath.h:1351; 21: Taking false branch in /opt/root_src/math/mathcore/inc/TMath.h:1351; 22: 'ii' is >= 'n' in /opt/root_src/math/mathcore/inc/TMath.h:1357; 23: Loop condition is false. Execution continues on line 1360 in /opt/root_src/math/mathcore/inc/TMath.h:1357; 24: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/inc/TMath.h:1363; 25: Assuming the condition is false in /opt/root_src/math/mathcore/inc/TMath.h:1364; 26: Taking false branch in /opt/root_src/math/mathcore/inc/TMath.h:1364; 27: Assigned value is garbage or undefined in /opt/root_src/math/mathcore/inc/TMath.h:1373; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:142:4: warning: Value stored to 'nfnevl' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nfnevl' is never read in /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:142; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:143:4: warning: Value stored to 'relerr' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'relerr' is never read in /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:143; /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68:4: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Calling 'IntegrandTransform::Clone' in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68; 2: Field 'fInfiniteInterval' is false in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 3: '?' condition is false in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 4: Memory is allocated in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 5: Returned allocated memory in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68; 6: Potential memory leak in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:19108,Energy Efficiency,Adapt,AdaptiveIntegratorMultiDim,19108,c/math/mathcore/inc/TMath.h:1347; 20: 'n' is <= 'kWorkMax' in /opt/root_src/math/mathcore/inc/TMath.h:1351; 21: Taking false branch in /opt/root_src/math/mathcore/inc/TMath.h:1351; 22: 'ii' is >= 'n' in /opt/root_src/math/mathcore/inc/TMath.h:1357; 23: Loop condition is false. Execution continues on line 1360 in /opt/root_src/math/mathcore/inc/TMath.h:1357; 24: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/inc/TMath.h:1363; 25: Assuming the condition is false in /opt/root_src/math/mathcore/inc/TMath.h:1364; 26: Taking false branch in /opt/root_src/math/mathcore/inc/TMath.h:1364; 27: Assigned value is garbage or undefined in /opt/root_src/math/mathcore/inc/TMath.h:1373; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:142:4: warning: Value stored to 'nfnevl' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nfnevl' is never read in /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:142; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:143:4: warning: Value stored to 'relerr' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'relerr' is never read in /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:143; /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68:4: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Calling 'IntegrandTransform::Clone' in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68; 2: Field 'fInfiniteInterval' is false in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 3: '?' condition is false in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 4: Memory is allocated in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 5: Returned allocated memory in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68; 6: Potential memory leak in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68; /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:235:12: warning: Although the value,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:19309,Energy Efficiency,Adapt,AdaptiveIntegratorMultiDim,19309,"351; 22: 'ii' is >= 'n' in /opt/root_src/math/mathcore/inc/TMath.h:1357; 23: Loop condition is false. Execution continues on line 1360 in /opt/root_src/math/mathcore/inc/TMath.h:1357; 24: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/inc/TMath.h:1363; 25: Assuming the condition is false in /opt/root_src/math/mathcore/inc/TMath.h:1364; 26: Taking false branch in /opt/root_src/math/mathcore/inc/TMath.h:1364; 27: Assigned value is garbage or undefined in /opt/root_src/math/mathcore/inc/TMath.h:1373; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:142:4: warning: Value stored to 'nfnevl' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nfnevl' is never read in /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:142; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:143:4: warning: Value stored to 'relerr' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'relerr' is never read in /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:143; /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68:4: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Calling 'IntegrandTransform::Clone' in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68; 2: Field 'fInfiniteInterval' is false in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 3: '?' condition is false in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 4: Memory is allocated in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 5: Returned allocated memory in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68; 6: Potential memory leak in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68; /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:235:12: warning: Although the value stored to 'result' is used in the enclosing expression, the value is never actually read from 'result' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 're",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:19772,Energy Efficiency,allocate,allocated,19772,"c/TMath.h:1373; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:142:4: warning: Value stored to 'nfnevl' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nfnevl' is never read in /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:142; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:143:4: warning: Value stored to 'relerr' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'relerr' is never read in /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:143; /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68:4: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Calling 'IntegrandTransform::Clone' in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68; 2: Field 'fInfiniteInterval' is false in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 3: '?' condition is false in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 4: Memory is allocated in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 5: Returned allocated memory in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68; 6: Potential memory leak in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68; /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:235:12: warning: Although the value stored to 'result' is used in the enclosing expression, the value is never actually read from 'result' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'result' is used in the enclosing expression, the value is never actually read from 'result' in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:235; /opt/root_src/math/mathcore/src/GoFTest.cxx:603:7: warning: Value stored to 'maij' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'maij' is never read in /opt/root_src/math/mathcore/src/GoFTest.cxx:603; /opt/root_src/math/mathcore/src/SpecFuncCephes.cxx:216:10: warning: Value stored to 'sgngam' is never read [clang-analyzer-deadcode.DeadS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:19854,Energy Efficiency,allocate,allocated,19854,"warning: Value stored to 'nfnevl' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nfnevl' is never read in /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:142; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:143:4: warning: Value stored to 'relerr' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'relerr' is never read in /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:143; /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68:4: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Calling 'IntegrandTransform::Clone' in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68; 2: Field 'fInfiniteInterval' is false in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 3: '?' condition is false in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 4: Memory is allocated in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 5: Returned allocated memory in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68; 6: Potential memory leak in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68; /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:235:12: warning: Although the value stored to 'result' is used in the enclosing expression, the value is never actually read from 'result' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'result' is used in the enclosing expression, the value is never actually read from 'result' in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:235; /opt/root_src/math/mathcore/src/GoFTest.cxx:603:7: warning: Value stored to 'maij' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'maij' is never read in /opt/root_src/math/mathcore/src/GoFTest.cxx:603; /opt/root_src/math/mathcore/src/SpecFuncCephes.cxx:216:10: warning: Value stored to 'sgngam' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'sgngam' is never read in /opt/root_src/math/mathcore/src/S",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:124250,Energy Efficiency,Allocate,Allocate,124250,mathcore/src/triangle.c:14972; 162: Dereference of null pointer (loaded from variable 'vpointlist') in /opt/root_src/math/mathcore/src/triangle.c:14976; /opt/root_src/math/mathcore/src/triangle.c:15380:3: warning: Value stored to 'worstaspect' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'worstaspect' is never read in /opt/root_src/math/mathcore/src/triangle.c:15380; /opt/root_src/math/matrix/inc/TMatrixT.h:280:4: warning: Returning null reference [clang-analyzer-core.uninitialized.UndefReturn]; 1: Taking false branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:121; 2: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 3: Loop condition is false. Exiting loop in /opt/root_src/math/matrix/src/TMatrixT.cxx:121; 4: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 5: Control jumps to 'case kTransposed:' at line 135 in /opt/root_src/math/matrix/src/TMatrixT.cxx:123; 6: Calling 'TMatrixT::Allocate' in /opt/root_src/math/matrix/src/TMatrixT.cxx:136; 7: Assuming 'no_rows' is >= 0 in /opt/root_src/math/matrix/src/TMatrixT.cxx:479; 8: Left side of '||' is false in /opt/root_src/math/matrix/src/TMatrixT.cxx:479; 9: Assuming 'no_cols' is >= 0 in /opt/root_src/math/matrix/src/TMatrixT.cxx:479; 10: Taking false branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:479; 11: Assuming the condition is false in /opt/root_src/math/matrix/src/TMatrixT.cxx:494; 12: Taking false branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:494; 13: Assuming field 'fNelems' is <= 0 in /opt/root_src/math/matrix/src/TMatrixT.cxx:501; 14: Taking false branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:501; 15: Null pointer value stored to field 'fElements' in /opt/root_src/math/matrix/src/TMatrixT.cxx:506; 16: Returning from 'TMatrixT::Allocate' in /opt/root_src/math/matrix/src/TMatrixT.cxx:136; 17: Calling 'TMatrixT::Transpose' in /opt/root_src/math/matrix/src/TMatrixT.cxx:138; 18: Taking false branch in /o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:125086,Energy Efficiency,Allocate,Allocate,125086,ore/foundation/inc/TError.h:119; 5: Control jumps to 'case kTransposed:' at line 135 in /opt/root_src/math/matrix/src/TMatrixT.cxx:123; 6: Calling 'TMatrixT::Allocate' in /opt/root_src/math/matrix/src/TMatrixT.cxx:136; 7: Assuming 'no_rows' is >= 0 in /opt/root_src/math/matrix/src/TMatrixT.cxx:479; 8: Left side of '||' is false in /opt/root_src/math/matrix/src/TMatrixT.cxx:479; 9: Assuming 'no_cols' is >= 0 in /opt/root_src/math/matrix/src/TMatrixT.cxx:479; 10: Taking false branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:479; 11: Assuming the condition is false in /opt/root_src/math/matrix/src/TMatrixT.cxx:494; 12: Taking false branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:494; 13: Assuming field 'fNelems' is <= 0 in /opt/root_src/math/matrix/src/TMatrixT.cxx:501; 14: Taking false branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:501; 15: Null pointer value stored to field 'fElements' in /opt/root_src/math/matrix/src/TMatrixT.cxx:506; 16: Returning from 'TMatrixT::Allocate' in /opt/root_src/math/matrix/src/TMatrixT.cxx:136; 17: Calling 'TMatrixT::Transpose' in /opt/root_src/math/matrix/src/TMatrixT.cxx:138; 18: Taking false branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:1472; 19: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 20: Loop condition is false. Exiting loop in /opt/root_src/math/matrix/src/TMatrixT.cxx:1472; 21: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 22: Taking false branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:1473; 23: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 24: Loop condition is false. Exiting loop in /opt/root_src/math/matrix/src/TMatrixT.cxx:1473; 25: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 26: Assuming the condition is true in /opt/root_src/math/matrix/src/TMatrixT.cxx:1475; 27: Taking true branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:1475; 28: Assumin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:127954,Energy Efficiency,Allocate,Allocate,127954,/matrix/inc/TMatrixT.h:269; 38: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 39: Assuming 'arown' is < field 'fNrows' in /opt/root_src/math/matrix/inc/TMatrixT.h:272; 40: Left side of '||' is false in /opt/root_src/math/matrix/inc/TMatrixT.h:272; 41: 'arown' is >= 0 in /opt/root_src/math/matrix/inc/TMatrixT.h:272; 42: Taking false branch in /opt/root_src/math/matrix/inc/TMatrixT.h:272; 43: Assuming 'acoln' is < field 'fNcols' in /opt/root_src/math/matrix/inc/TMatrixT.h:276; 44: Left side of '||' is false in /opt/root_src/math/matrix/inc/TMatrixT.h:276; 45: 'acoln' is >= 0 in /opt/root_src/math/matrix/inc/TMatrixT.h:276; 46: Taking false branch in /opt/root_src/math/matrix/inc/TMatrixT.h:276; 47: Returning null reference in /opt/root_src/math/matrix/inc/TMatrixT.h:280; /opt/root_src/math/matrix/inc/TVectorT.h:86:59: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Calling 'TVectorT::Allocate' in /opt/root_src/math/matrix/src/TVectorT.cxx:207; 2: Null pointer value stored to field 'fElements' in /opt/root_src/math/matrix/src/TVectorT.cxx:156; 3: Assuming 'nrows' is < 0 in /opt/root_src/math/matrix/src/TVectorT.cxx:158; 4: Taking true branch in /opt/root_src/math/matrix/src/TVectorT.cxx:158; 5: Returning from 'TVectorT::Allocate' in /opt/root_src/math/matrix/src/TVectorT.cxx:207; 6: Calling 'TVectorT::SetElements' in /opt/root_src/math/matrix/src/TVectorT.cxx:208; 7: Taking false branch in /opt/root_src/math/matrix/inc/TVectorT.h:85; 8: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 9: Loop condition is false. Exiting loop in /opt/root_src/math/matrix/inc/TVectorT.h:85; 10: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 11: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/math/matrix/inc/TVectorT.h:86; /opt/root_src/math/matrix/src/TDecompBK.cxx:178:10: warning: Value stored,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:128296,Energy Efficiency,Allocate,Allocate,128296,T.h:272; 42: Taking false branch in /opt/root_src/math/matrix/inc/TMatrixT.h:272; 43: Assuming 'acoln' is < field 'fNcols' in /opt/root_src/math/matrix/inc/TMatrixT.h:276; 44: Left side of '||' is false in /opt/root_src/math/matrix/inc/TMatrixT.h:276; 45: 'acoln' is >= 0 in /opt/root_src/math/matrix/inc/TMatrixT.h:276; 46: Taking false branch in /opt/root_src/math/matrix/inc/TMatrixT.h:276; 47: Returning null reference in /opt/root_src/math/matrix/inc/TMatrixT.h:280; /opt/root_src/math/matrix/inc/TVectorT.h:86:59: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Calling 'TVectorT::Allocate' in /opt/root_src/math/matrix/src/TVectorT.cxx:207; 2: Null pointer value stored to field 'fElements' in /opt/root_src/math/matrix/src/TVectorT.cxx:156; 3: Assuming 'nrows' is < 0 in /opt/root_src/math/matrix/src/TVectorT.cxx:158; 4: Taking true branch in /opt/root_src/math/matrix/src/TVectorT.cxx:158; 5: Returning from 'TVectorT::Allocate' in /opt/root_src/math/matrix/src/TVectorT.cxx:207; 6: Calling 'TVectorT::SetElements' in /opt/root_src/math/matrix/src/TVectorT.cxx:208; 7: Taking false branch in /opt/root_src/math/matrix/inc/TVectorT.h:85; 8: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 9: Loop condition is false. Exiting loop in /opt/root_src/math/matrix/inc/TVectorT.h:85; 10: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 11: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/math/matrix/inc/TVectorT.h:86; /opt/root_src/math/matrix/src/TDecompBK.cxx:178:10: warning: Value stored to 'kp' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'kp' is never read in /opt/root_src/math/matrix/src/TDecompBK.cxx:178; /opt/root_src/math/matrix/src/TDecompLU.cxx:887:7: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]; 1: Assuming 'det' is null in /opt/root_src/math/mat,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:134537,Energy Efficiency,Allocate,Allocate,134537,clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'jp' is never read in /opt/root_src/math/matrix/src/TDecompSparse.cxx:1036; /opt/root_src/math/matrix/src/TDecompSparse.cxx:2433:4: warning: Value stored to 'ipos' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'ipos' is never read in /opt/root_src/math/matrix/src/TDecompSparse.cxx:2433; /opt/root_src/math/matrix/src/TMatrixT.cxx:1742:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Taking false branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:121; 2: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 3: Loop condition is false. Exiting loop in /opt/root_src/math/matrix/src/TMatrixT.cxx:121; 4: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 5: Control jumps to 'case kInverted:' at line 141 in /opt/root_src/math/matrix/src/TMatrixT.cxx:123; 6: Calling 'TMatrixT::Allocate' in /opt/root_src/math/matrix/src/TMatrixT.cxx:143; 7: Null pointer value stored to field 'fElements' in /opt/root_src/math/matrix/src/TMatrixT.cxx:472; 8: Assuming 'no_rows' is < 0 in /opt/root_src/math/matrix/src/TMatrixT.cxx:479; 9: Left side of '||' is true in /opt/root_src/math/matrix/src/TMatrixT.cxx:479; 10: Returning from 'TMatrixT::Allocate' in /opt/root_src/math/matrix/src/TMatrixT.cxx:143; 11: Calling copy assignment operator for 'TMatrixT<double>' in /opt/root_src/math/matrix/src/TMatrixT.cxx:145; 12: Assuming 'gMatrixCheck' is 0 in /opt/root_src/math/matrix/src/TMatrixT.cxx:1735; 13: Left side of '&&' is false in /opt/root_src/math/matrix/src/TMatrixT.cxx:1735; 14: Assuming the condition is true in /opt/root_src/math/matrix/src/TMatrixT.cxx:1740; 15: Taking true branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:1740; 16: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/math/matrix/src/TMatrixT.cxx:1742; /opt/root_src/math/matrix/src/TMatrixT.cxx:1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:134889,Energy Efficiency,Allocate,Allocate,134889,compSparse.cxx:2433; /opt/root_src/math/matrix/src/TMatrixT.cxx:1742:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Taking false branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:121; 2: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 3: Loop condition is false. Exiting loop in /opt/root_src/math/matrix/src/TMatrixT.cxx:121; 4: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 5: Control jumps to 'case kInverted:' at line 141 in /opt/root_src/math/matrix/src/TMatrixT.cxx:123; 6: Calling 'TMatrixT::Allocate' in /opt/root_src/math/matrix/src/TMatrixT.cxx:143; 7: Null pointer value stored to field 'fElements' in /opt/root_src/math/matrix/src/TMatrixT.cxx:472; 8: Assuming 'no_rows' is < 0 in /opt/root_src/math/matrix/src/TMatrixT.cxx:479; 9: Left side of '||' is true in /opt/root_src/math/matrix/src/TMatrixT.cxx:479; 10: Returning from 'TMatrixT::Allocate' in /opt/root_src/math/matrix/src/TMatrixT.cxx:143; 11: Calling copy assignment operator for 'TMatrixT<double>' in /opt/root_src/math/matrix/src/TMatrixT.cxx:145; 12: Assuming 'gMatrixCheck' is 0 in /opt/root_src/math/matrix/src/TMatrixT.cxx:1735; 13: Left side of '&&' is false in /opt/root_src/math/matrix/src/TMatrixT.cxx:1735; 14: Assuming the condition is true in /opt/root_src/math/matrix/src/TMatrixT.cxx:1740; 15: Taking true branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:1740; 16: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/math/matrix/src/TMatrixT.cxx:1742; /opt/root_src/math/matrix/src/TMatrixT.cxx:1761:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Taking false branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:97; 2: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 3: Loop condition is false. Exiting loop in /opt/root_src/math/matrix/src,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:136022,Energy Efficiency,Allocate,Allocate,136022,atrix/src/TMatrixT.cxx:145; 12: Assuming 'gMatrixCheck' is 0 in /opt/root_src/math/matrix/src/TMatrixT.cxx:1735; 13: Left side of '&&' is false in /opt/root_src/math/matrix/src/TMatrixT.cxx:1735; 14: Assuming the condition is true in /opt/root_src/math/matrix/src/TMatrixT.cxx:1740; 15: Taking true branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:1740; 16: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/math/matrix/src/TMatrixT.cxx:1742; /opt/root_src/math/matrix/src/TMatrixT.cxx:1761:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Taking false branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:97; 2: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 3: Loop condition is false. Exiting loop in /opt/root_src/math/matrix/src/TMatrixT.cxx:97; 4: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 5: Calling 'TMatrixT::Allocate' in /opt/root_src/math/matrix/src/TMatrixT.cxx:98; 6: Null pointer value stored to field 'fElements' in /opt/root_src/math/matrix/src/TMatrixT.cxx:472; 7: Assuming 'no_rows' is < 0 in /opt/root_src/math/matrix/src/TMatrixT.cxx:479; 8: Left side of '||' is true in /opt/root_src/math/matrix/src/TMatrixT.cxx:479; 9: Returning from 'TMatrixT::Allocate' in /opt/root_src/math/matrix/src/TMatrixT.cxx:98; 10: Calling 'TMatrixT::operator=' in /opt/root_src/math/matrix/src/TMatrixT.cxx:99; 11: Assuming 'gMatrixCheck' is 0 in /opt/root_src/math/matrix/src/TMatrixT.cxx:1754; 12: Left side of '&&' is false in /opt/root_src/math/matrix/src/TMatrixT.cxx:1754; 13: Assuming the condition is true in /opt/root_src/math/matrix/src/TMatrixT.cxx:1759; 14: Taking true branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:1759; 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/math/matrix/src/TMatrixT.cxx:1761; /opt/root_src/math/matrix/src/TMatrixT.cxx:1782:7: warning: Null pointer pa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:136372,Energy Efficiency,Allocate,Allocate,136372,T.cxx:1740; 16: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/math/matrix/src/TMatrixT.cxx:1742; /opt/root_src/math/matrix/src/TMatrixT.cxx:1761:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Taking false branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:97; 2: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 3: Loop condition is false. Exiting loop in /opt/root_src/math/matrix/src/TMatrixT.cxx:97; 4: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 5: Calling 'TMatrixT::Allocate' in /opt/root_src/math/matrix/src/TMatrixT.cxx:98; 6: Null pointer value stored to field 'fElements' in /opt/root_src/math/matrix/src/TMatrixT.cxx:472; 7: Assuming 'no_rows' is < 0 in /opt/root_src/math/matrix/src/TMatrixT.cxx:479; 8: Left side of '||' is true in /opt/root_src/math/matrix/src/TMatrixT.cxx:479; 9: Returning from 'TMatrixT::Allocate' in /opt/root_src/math/matrix/src/TMatrixT.cxx:98; 10: Calling 'TMatrixT::operator=' in /opt/root_src/math/matrix/src/TMatrixT.cxx:99; 11: Assuming 'gMatrixCheck' is 0 in /opt/root_src/math/matrix/src/TMatrixT.cxx:1754; 12: Left side of '&&' is false in /opt/root_src/math/matrix/src/TMatrixT.cxx:1754; 13: Assuming the condition is true in /opt/root_src/math/matrix/src/TMatrixT.cxx:1759; 14: Taking true branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:1759; 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/math/matrix/src/TMatrixT.cxx:1761; /opt/root_src/math/matrix/src/TMatrixT.cxx:1782:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Taking false branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:108; 2: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 3: Loop condition is false. Exiting loop in /opt/root_src/math/matrix/src/TMatrixT.cxx:108; 4: expan,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:137479,Energy Efficiency,Allocate,Allocate,137479,trix/src/TMatrixT.cxx:99; 11: Assuming 'gMatrixCheck' is 0 in /opt/root_src/math/matrix/src/TMatrixT.cxx:1754; 12: Left side of '&&' is false in /opt/root_src/math/matrix/src/TMatrixT.cxx:1754; 13: Assuming the condition is true in /opt/root_src/math/matrix/src/TMatrixT.cxx:1759; 14: Taking true branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:1759; 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/math/matrix/src/TMatrixT.cxx:1761; /opt/root_src/math/matrix/src/TMatrixT.cxx:1782:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Taking false branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:108; 2: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 3: Loop condition is false. Exiting loop in /opt/root_src/math/matrix/src/TMatrixT.cxx:108; 4: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 5: Calling 'TMatrixT::Allocate' in /opt/root_src/math/matrix/src/TMatrixT.cxx:109; 6: Null pointer value stored to field 'fElements' in /opt/root_src/math/matrix/src/TMatrixT.cxx:472; 7: Assuming 'no_rows' is < 0 in /opt/root_src/math/matrix/src/TMatrixT.cxx:479; 8: Left side of '||' is true in /opt/root_src/math/matrix/src/TMatrixT.cxx:479; 9: Returning from 'TMatrixT::Allocate' in /opt/root_src/math/matrix/src/TMatrixT.cxx:109; 10: Calling 'TMatrixT::operator=' in /opt/root_src/math/matrix/src/TMatrixT.cxx:110; 11: Assuming 'gMatrixCheck' is 0 in /opt/root_src/math/matrix/src/TMatrixT.cxx:1773; 12: Left side of '&&' is false in /opt/root_src/math/matrix/src/TMatrixT.cxx:1773; 13: Assuming the condition is false in /opt/root_src/math/matrix/src/TMatrixT.cxx:1774; 14: Left side of '||' is false in /opt/root_src/math/matrix/src/TMatrixT.cxx:1773; 15: Assuming the condition is false in /opt/root_src/math/matrix/src/TMatrixT.cxx:1775; 16: Left side of '||' is false in /opt/root_src/math/matrix/src/TMatrixT.cxx:1773; 17: A,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:137830,Energy Efficiency,Allocate,Allocate,137830,xx:1759; 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/math/matrix/src/TMatrixT.cxx:1761; /opt/root_src/math/matrix/src/TMatrixT.cxx:1782:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Taking false branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:108; 2: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 3: Loop condition is false. Exiting loop in /opt/root_src/math/matrix/src/TMatrixT.cxx:108; 4: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 5: Calling 'TMatrixT::Allocate' in /opt/root_src/math/matrix/src/TMatrixT.cxx:109; 6: Null pointer value stored to field 'fElements' in /opt/root_src/math/matrix/src/TMatrixT.cxx:472; 7: Assuming 'no_rows' is < 0 in /opt/root_src/math/matrix/src/TMatrixT.cxx:479; 8: Left side of '||' is true in /opt/root_src/math/matrix/src/TMatrixT.cxx:479; 9: Returning from 'TMatrixT::Allocate' in /opt/root_src/math/matrix/src/TMatrixT.cxx:109; 10: Calling 'TMatrixT::operator=' in /opt/root_src/math/matrix/src/TMatrixT.cxx:110; 11: Assuming 'gMatrixCheck' is 0 in /opt/root_src/math/matrix/src/TMatrixT.cxx:1773; 12: Left side of '&&' is false in /opt/root_src/math/matrix/src/TMatrixT.cxx:1773; 13: Assuming the condition is false in /opt/root_src/math/matrix/src/TMatrixT.cxx:1774; 14: Left side of '||' is false in /opt/root_src/math/matrix/src/TMatrixT.cxx:1773; 15: Assuming the condition is false in /opt/root_src/math/matrix/src/TMatrixT.cxx:1775; 16: Left side of '||' is false in /opt/root_src/math/matrix/src/TMatrixT.cxx:1773; 17: Assuming the condition is false in /opt/root_src/math/matrix/src/TMatrixT.cxx:1775; 18: Taking false branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:1773; 19: Assuming the condition is true in /opt/root_src/math/matrix/src/TMatrixT.cxx:1780; 20: Taking true branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:1780; 21: Null pointer passed t,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:154170,Energy Efficiency,Allocate,Allocate,154170, 10: Taking false branch in /opt/root_src/math/matrix/src/TVectorT.cxx:973; 11: 'doResize' is true in /opt/root_src/math/matrix/src/TVectorT.cxx:979; 12: Taking true branch in /opt/root_src/math/matrix/src/TVectorT.cxx:979; 13: Calling 'TVectorT::ResizeTo' in /opt/root_src/math/matrix/src/TVectorT.cxx:982; 14: Taking false branch in /opt/root_src/math/matrix/src/TVectorT.cxx:296; 15: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 16: Loop condition is false. Exiting loop in /opt/root_src/math/matrix/src/TVectorT.cxx:296; 17: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 18: Field 'fIsOwner' is true in /opt/root_src/math/matrix/src/TVectorT.cxx:297; 19: Taking false branch in /opt/root_src/math/matrix/src/TVectorT.cxx:297; 20: Assuming field 'fNrows' is <= 0 in /opt/root_src/math/matrix/src/TVectorT.cxx:304; 21: Taking false branch in /opt/root_src/math/matrix/src/TVectorT.cxx:304; 22: Calling 'TVectorT::Allocate' in /opt/root_src/math/matrix/src/TVectorT.cxx:339; 23: Null pointer value stored to field 'fElements' in /opt/root_src/math/matrix/src/TVectorT.cxx:156; 24: Assuming 'nrows' is < 0 in /opt/root_src/math/matrix/src/TVectorT.cxx:158; 25: Taking true branch in /opt/root_src/math/matrix/src/TVectorT.cxx:158; 26: Returning from 'TVectorT::Allocate' in /opt/root_src/math/matrix/src/TVectorT.cxx:339; 27: Returning from 'TVectorT::ResizeTo' in /opt/root_src/math/matrix/src/TVectorT.cxx:982; 28: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/math/matrix/src/TVectorT.cxx:984; /opt/root_src/math/matrix/src/TVectorT.cxx:1051:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Assuming 'gMatrixCheck' is 0 in /opt/root_src/math/matrix/src/TVectorT.cxx:1021; 2: Taking false branch in /opt/root_src/math/matrix/src/TVectorT.cxx:1021; 3: Assuming the condition is true in /opt/root_src/math/matrix/src/TVectorT.cxx:1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:154516,Energy Efficiency,Allocate,Allocate,154516,ot_src/math/matrix/src/TVectorT.cxx:296; 15: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 16: Loop condition is false. Exiting loop in /opt/root_src/math/matrix/src/TVectorT.cxx:296; 17: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 18: Field 'fIsOwner' is true in /opt/root_src/math/matrix/src/TVectorT.cxx:297; 19: Taking false branch in /opt/root_src/math/matrix/src/TVectorT.cxx:297; 20: Assuming field 'fNrows' is <= 0 in /opt/root_src/math/matrix/src/TVectorT.cxx:304; 21: Taking false branch in /opt/root_src/math/matrix/src/TVectorT.cxx:304; 22: Calling 'TVectorT::Allocate' in /opt/root_src/math/matrix/src/TVectorT.cxx:339; 23: Null pointer value stored to field 'fElements' in /opt/root_src/math/matrix/src/TVectorT.cxx:156; 24: Assuming 'nrows' is < 0 in /opt/root_src/math/matrix/src/TVectorT.cxx:158; 25: Taking true branch in /opt/root_src/math/matrix/src/TVectorT.cxx:158; 26: Returning from 'TVectorT::Allocate' in /opt/root_src/math/matrix/src/TVectorT.cxx:339; 27: Returning from 'TVectorT::ResizeTo' in /opt/root_src/math/matrix/src/TVectorT.cxx:982; 28: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/math/matrix/src/TVectorT.cxx:984; /opt/root_src/math/matrix/src/TVectorT.cxx:1051:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Assuming 'gMatrixCheck' is 0 in /opt/root_src/math/matrix/src/TVectorT.cxx:1021; 2: Taking false branch in /opt/root_src/math/matrix/src/TVectorT.cxx:1021; 3: Assuming the condition is true in /opt/root_src/math/matrix/src/TVectorT.cxx:1030; 4: Left side of '||' is true in /opt/root_src/math/matrix/src/TVectorT.cxx:1030; 5: 'doResize' is true in /opt/root_src/math/matrix/src/TVectorT.cxx:1031; 6: Left side of '&&' is true in /opt/root_src/math/matrix/src/TVectorT.cxx:1031; 7: Assuming field 'fIsOwner' is true in /opt/root_src/math/matrix/src/TVectorT.cxx:1031; 8: Taking fal,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:156669,Energy Efficiency,Allocate,Allocate,156669, Taking false branch in /opt/root_src/math/matrix/src/TVectorT.cxx:1040; 11: 'doResize' is true in /opt/root_src/math/matrix/src/TVectorT.cxx:1046; 12: Taking true branch in /opt/root_src/math/matrix/src/TVectorT.cxx:1046; 13: Calling 'TVectorT::ResizeTo' in /opt/root_src/math/matrix/src/TVectorT.cxx:1049; 14: Taking false branch in /opt/root_src/math/matrix/src/TVectorT.cxx:296; 15: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 16: Loop condition is false. Exiting loop in /opt/root_src/math/matrix/src/TVectorT.cxx:296; 17: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 18: Field 'fIsOwner' is true in /opt/root_src/math/matrix/src/TVectorT.cxx:297; 19: Taking false branch in /opt/root_src/math/matrix/src/TVectorT.cxx:297; 20: Assuming field 'fNrows' is <= 0 in /opt/root_src/math/matrix/src/TVectorT.cxx:304; 21: Taking false branch in /opt/root_src/math/matrix/src/TVectorT.cxx:304; 22: Calling 'TVectorT::Allocate' in /opt/root_src/math/matrix/src/TVectorT.cxx:339; 23: Null pointer value stored to field 'fElements' in /opt/root_src/math/matrix/src/TVectorT.cxx:156; 24: Assuming 'nrows' is < 0 in /opt/root_src/math/matrix/src/TVectorT.cxx:158; 25: Taking true branch in /opt/root_src/math/matrix/src/TVectorT.cxx:158; 26: Returning from 'TVectorT::Allocate' in /opt/root_src/math/matrix/src/TVectorT.cxx:339; 27: Returning from 'TVectorT::ResizeTo' in /opt/root_src/math/matrix/src/TVectorT.cxx:1049; 28: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/math/matrix/src/TVectorT.cxx:1051; /opt/root_src/math/minuit/src/TFitter.cxx:164:10: warning: Value stored to 'igrad' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'igrad' is never read in /opt/root_src/math/minuit/src/TFitter.cxx:164; /opt/root_src/math/minuit/src/TFitter.cxx:182:7: warning: Value stored to 'igrad' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'igrad' is never re,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:157015,Energy Efficiency,Allocate,Allocate,157015,ot_src/math/matrix/src/TVectorT.cxx:296; 15: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 16: Loop condition is false. Exiting loop in /opt/root_src/math/matrix/src/TVectorT.cxx:296; 17: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 18: Field 'fIsOwner' is true in /opt/root_src/math/matrix/src/TVectorT.cxx:297; 19: Taking false branch in /opt/root_src/math/matrix/src/TVectorT.cxx:297; 20: Assuming field 'fNrows' is <= 0 in /opt/root_src/math/matrix/src/TVectorT.cxx:304; 21: Taking false branch in /opt/root_src/math/matrix/src/TVectorT.cxx:304; 22: Calling 'TVectorT::Allocate' in /opt/root_src/math/matrix/src/TVectorT.cxx:339; 23: Null pointer value stored to field 'fElements' in /opt/root_src/math/matrix/src/TVectorT.cxx:156; 24: Assuming 'nrows' is < 0 in /opt/root_src/math/matrix/src/TVectorT.cxx:158; 25: Taking true branch in /opt/root_src/math/matrix/src/TVectorT.cxx:158; 26: Returning from 'TVectorT::Allocate' in /opt/root_src/math/matrix/src/TVectorT.cxx:339; 27: Returning from 'TVectorT::ResizeTo' in /opt/root_src/math/matrix/src/TVectorT.cxx:1049; 28: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/math/matrix/src/TVectorT.cxx:1051; /opt/root_src/math/minuit/src/TFitter.cxx:164:10: warning: Value stored to 'igrad' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'igrad' is never read in /opt/root_src/math/minuit/src/TFitter.cxx:164; /opt/root_src/math/minuit/src/TFitter.cxx:182:7: warning: Value stored to 'igrad' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'igrad' is never read in /opt/root_src/math/minuit/src/TFitter.cxx:182; /opt/root_src/math/minuit/src/TFitter.cxx:483:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:228029,Energy Efficiency,allocate,allocated,228029,/opt/root_src/math/physics/src/TGenPhaseSpace.cxx:121; /opt/root_src/math/physics/src/TGenPhaseSpace.cxx:128:57: warning: The left operand of '*' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming field 'fNt' is <= 2 in /opt/root_src/math/physics/src/TGenPhaseSpace.cxx:103; 2: Taking false branch in /opt/root_src/math/physics/src/TGenPhaseSpace.cxx:103; 3: Assuming 'n' is >= field 'fNt' in /opt/root_src/math/physics/src/TGenPhaseSpace.cxx:110; 4: Loop condition is false. Execution continues on line 118 in /opt/root_src/math/physics/src/TGenPhaseSpace.cxx:110; 5: Assuming the condition is false in /opt/root_src/math/physics/src/TGenPhaseSpace.cxx:120; 6: Loop condition is false. Execution continues on line 128 in /opt/root_src/math/physics/src/TGenPhaseSpace.cxx:120; 7: The left operand of '*' is a garbage value in /opt/root_src/math/physics/src/TGenPhaseSpace.cxx:128; /opt/root_src/math/physics/src/TRobustEstimator.cxx:661:13: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming 'hh' is equal to 0 in /opt/root_src/math/physics/src/TRobustEstimator.cxx:610; 2: Taking true branch in /opt/root_src/math/physics/src/TRobustEstimator.cxx:610; 3: Memory is allocated in /opt/root_src/math/physics/src/TRobustEstimator.cxx:626; 4: Loop condition is false. Execution continues on line 629 in /opt/root_src/math/physics/src/TRobustEstimator.cxx:627; 5: Loop condition is false. Execution continues on line 661 in /opt/root_src/math/physics/src/TRobustEstimator.cxx:629; 6: Use of zero-allocated memory in /opt/root_src/math/physics/src/TRobustEstimator.cxx:661; /opt/root_src/math/physics/src/TRobustEstimator.cxx:922:7: warning: Value stored to 'repeat' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'repeat' is never read in /opt/root_src/math/physics/src/TRobustEstimator.cxx:922; /opt/root_src/math/physics/src/TRobustEstimator.cxx:1303:16: warning: Assigned value is garbage or undefined [clang,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:228270,Energy Efficiency,allocate,allocated,228270,pt/root_src/math/physics/src/TGenPhaseSpace.cxx:103; 2: Taking false branch in /opt/root_src/math/physics/src/TGenPhaseSpace.cxx:103; 3: Assuming 'n' is >= field 'fNt' in /opt/root_src/math/physics/src/TGenPhaseSpace.cxx:110; 4: Loop condition is false. Execution continues on line 118 in /opt/root_src/math/physics/src/TGenPhaseSpace.cxx:110; 5: Assuming the condition is false in /opt/root_src/math/physics/src/TGenPhaseSpace.cxx:120; 6: Loop condition is false. Execution continues on line 128 in /opt/root_src/math/physics/src/TGenPhaseSpace.cxx:120; 7: The left operand of '*' is a garbage value in /opt/root_src/math/physics/src/TGenPhaseSpace.cxx:128; /opt/root_src/math/physics/src/TRobustEstimator.cxx:661:13: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming 'hh' is equal to 0 in /opt/root_src/math/physics/src/TRobustEstimator.cxx:610; 2: Taking true branch in /opt/root_src/math/physics/src/TRobustEstimator.cxx:610; 3: Memory is allocated in /opt/root_src/math/physics/src/TRobustEstimator.cxx:626; 4: Loop condition is false. Execution continues on line 629 in /opt/root_src/math/physics/src/TRobustEstimator.cxx:627; 5: Loop condition is false. Execution continues on line 661 in /opt/root_src/math/physics/src/TRobustEstimator.cxx:629; 6: Use of zero-allocated memory in /opt/root_src/math/physics/src/TRobustEstimator.cxx:661; /opt/root_src/math/physics/src/TRobustEstimator.cxx:922:7: warning: Value stored to 'repeat' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'repeat' is never read in /opt/root_src/math/physics/src/TRobustEstimator.cxx:922; /opt/root_src/math/physics/src/TRobustEstimator.cxx:1303:16: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]; 1: Assuming 'i' is >= 'nmerged' in /opt/root_src/math/physics/src/TRobustEstimator.cxx:971; 2: Loop condition is false. Execution continues on line 978 in /opt/root_src/math/physics/src/TRobustEstimator.cxx:971; 3: Cal,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:228595,Energy Efficiency,allocate,allocated,228595,eSpace.cxx:110; 5: Assuming the condition is false in /opt/root_src/math/physics/src/TGenPhaseSpace.cxx:120; 6: Loop condition is false. Execution continues on line 128 in /opt/root_src/math/physics/src/TGenPhaseSpace.cxx:120; 7: The left operand of '*' is a garbage value in /opt/root_src/math/physics/src/TGenPhaseSpace.cxx:128; /opt/root_src/math/physics/src/TRobustEstimator.cxx:661:13: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming 'hh' is equal to 0 in /opt/root_src/math/physics/src/TRobustEstimator.cxx:610; 2: Taking true branch in /opt/root_src/math/physics/src/TRobustEstimator.cxx:610; 3: Memory is allocated in /opt/root_src/math/physics/src/TRobustEstimator.cxx:626; 4: Loop condition is false. Execution continues on line 629 in /opt/root_src/math/physics/src/TRobustEstimator.cxx:627; 5: Loop condition is false. Execution continues on line 661 in /opt/root_src/math/physics/src/TRobustEstimator.cxx:629; 6: Use of zero-allocated memory in /opt/root_src/math/physics/src/TRobustEstimator.cxx:661; /opt/root_src/math/physics/src/TRobustEstimator.cxx:922:7: warning: Value stored to 'repeat' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'repeat' is never read in /opt/root_src/math/physics/src/TRobustEstimator.cxx:922; /opt/root_src/math/physics/src/TRobustEstimator.cxx:1303:16: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]; 1: Assuming 'i' is >= 'nmerged' in /opt/root_src/math/physics/src/TRobustEstimator.cxx:971; 2: Loop condition is false. Execution continues on line 978 in /opt/root_src/math/physics/src/TRobustEstimator.cxx:971; 3: Calling 'TRobustEstimator::KOrdStat' in /opt/root_src/math/physics/src/TRobustEstimator.cxx:978; 4: Assuming 'work' is null in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1277; 5: Taking false branch in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1277; 6: 'ntotal' is <= 'kWorkMax' in /opt/root_src/math/physics/sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:231238,Energy Efficiency,Adapt,AdaptiveIntegratorMultiDim,231238,value 1073741823 is assigned to 'mid' in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1302; 14: Assigned value is garbage or undefined in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1303; /opt/root_src/math/splot/src/TSPlot.cxx:959:23: warning: Value stored to 'loaded' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'loaded' is never read in /opt/root_src/math/splot/src/TSPlot.cxx:959; /opt/root_src/math/splot/src/TSPlot.cxx:966:13: warning: Value stored to 'loaded' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'loaded' is never read in /opt/root_src/math/splot/src/TSPlot.cxx:966; /opt/root_src/core/cont/inc/TBits.h; /opt/root_src/math/fumili/src/TFumili.cxx; /opt/root_src/math/genvector/src/3DConversions.cxx; /opt/root_src/math/genvector/src/AxisAngleXother.cxx; /opt/root_src/math/mathcore/inc/Fit/FitData.h; /opt/root_src/math/mathcore/inc/Fit/FitUtil.h; /opt/root_src/math/mathcore/inc/TMath.h; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx; /opt/root_src/math/mathcore/src/GaussIntegrator.cxx; /opt/root_src/math/mathcore/src/GoFTest.cxx; /opt/root_src/math/mathcore/src/SpecFuncCephes.cxx; /opt/root_src/math/mathcore/src/SpecFuncCephesInv.cxx; /opt/root_src/math/mathcore/src/TKDTree.cxx; /opt/root_src/math/mathcore/src/TKDTreeBinning.cxx; /opt/root_src/math/mathcore/src/TMath.cxx; /opt/root_src/math/mathcore/src/triangle.c; /opt/root_src/math/matrix/inc/TMatrixT.h; /opt/root_src/math/matrix/inc/TVectorT.h; /opt/root_src/math/matrix/src/TDecompBK.cxx; /opt/root_src/math/matrix/src/TDecompLU.cxx; /opt/root_src/math/matrix/src/TDecompSparse.cxx; /opt/root_src/math/matrix/src/TMatrixT.cxx; /opt/root_src/math/matrix/src/TMatrixTSparse.cxx; /opt/root_src/math/matrix/src/TMatrixTSym.cxx; /opt/root_src/math/matrix/src/TVectorT.cxx; /opt/root_src/math/minuit/src/TFitter.cxx; /opt/root_src/math/minuit/src/TLinearFitter.cxx; /opt/root_src/math/minuit/src/TMinuit.cxx; /opt/root_src/math/minuit/src/TM,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:6789,Integrability,Wrap,WrappedMemFunction,6789,"<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>' in /opt/root_src/math/mathcore/src/FitUtil.cxx:207; 25: 'useIntegral' is true in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:135; 26: Taking true branch in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:135; 27: Calling 'IntegralEvaluator::SetFunction' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:136; 28: Field 'fFunc' is not equal to null in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:150; 29: '?' condition is true in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:150; 30: expanded from macro 'assert' in /usr/include/assert.h:93; 31: Assuming field 'fDim' is equal to 1 in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:153; 32: Taking true branch in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:153; 33: Calling constructor for 'WrappedMemFunction<ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>, double (ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>::*)(double) const>' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:155; 34: Returning from constructor for 'WrappedMemFunction<ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>, double (ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>::*)(double) const>' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:155; 35: Returning from 'IntegralEvaluator::SetFunction' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:136; 36: Returning from constructor for 'IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>' in /opt/root_src/math/mathcore/src/FitUtil.cxx:207; 37: Assuming 'k' is < 'npar' in /opt/root_src/math/mathcore/src/FitUtil.cxx:210; 38: Lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:7191,Integrability,Wrap,WrappedMemFunction,7191,"136; 28: Field 'fFunc' is not equal to null in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:150; 29: '?' condition is true in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:150; 30: expanded from macro 'assert' in /usr/include/assert.h:93; 31: Assuming field 'fDim' is equal to 1 in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:153; 32: Taking true branch in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:153; 33: Calling constructor for 'WrappedMemFunction<ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>, double (ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>::*)(double) const>' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:155; 34: Returning from constructor for 'WrappedMemFunction<ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>, double (ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>::*)(double) const>' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:155; 35: Returning from 'IntegralEvaluator::SetFunction' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:136; 36: Returning from constructor for 'IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>' in /opt/root_src/math/mathcore/src/FitUtil.cxx:207; 37: Assuming 'k' is < 'npar' in /opt/root_src/math/mathcore/src/FitUtil.cxx:210; 38: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/src/FitUtil.cxx:210; 39: Passing null pointer value via 2nd parameter 'x2' in /opt/root_src/math/mathcore/src/FitUtil.cxx:212; 40: Calling 'IntegralEvaluator::operator()' in /opt/root_src/math/mathcore/src/FitUtil.cxx:212; 41: Field 'fIg1Dim' is non-null in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:207; 42: Taking true b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:11573,Integrability,Wrap,WrappedMemFunction,11573,"<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>' in /opt/root_src/math/mathcore/src/FitUtil.cxx:207; 25: 'useIntegral' is true in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:135; 26: Taking true branch in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:135; 27: Calling 'IntegralEvaluator::SetFunction' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:136; 28: Field 'fFunc' is not equal to null in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:150; 29: '?' condition is true in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:150; 30: expanded from macro 'assert' in /usr/include/assert.h:93; 31: Assuming field 'fDim' is equal to 1 in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:153; 32: Taking true branch in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:153; 33: Calling constructor for 'WrappedMemFunction<ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>, double (ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>::*)(double) const>' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:155; 34: Returning from constructor for 'WrappedMemFunction<ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>, double (ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>::*)(double) const>' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:155; 35: Returning from 'IntegralEvaluator::SetFunction' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:136; 36: Returning from constructor for 'IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>' in /opt/root_src/math/mathcore/src/FitUtil.cxx:207; 37: Assuming 'k' is < 'npar' in /opt/root_src/math/mathcore/src/FitUtil.cxx:210; 38: Lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:11975,Integrability,Wrap,WrappedMemFunction,11975,"136; 28: Field 'fFunc' is not equal to null in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:150; 29: '?' condition is true in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:150; 30: expanded from macro 'assert' in /usr/include/assert.h:93; 31: Assuming field 'fDim' is equal to 1 in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:153; 32: Taking true branch in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:153; 33: Calling constructor for 'WrappedMemFunction<ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>, double (ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>::*)(double) const>' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:155; 34: Returning from constructor for 'WrappedMemFunction<ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>, double (ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>::*)(double) const>' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:155; 35: Returning from 'IntegralEvaluator::SetFunction' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:136; 36: Returning from constructor for 'IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>' in /opt/root_src/math/mathcore/src/FitUtil.cxx:207; 37: Assuming 'k' is < 'npar' in /opt/root_src/math/mathcore/src/FitUtil.cxx:210; 38: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/src/FitUtil.cxx:210; 39: Passing null pointer value via 2nd parameter 'x2' in /opt/root_src/math/mathcore/src/FitUtil.cxx:212; 40: Calling 'IntegralEvaluator::operator()' in /opt/root_src/math/mathcore/src/FitUtil.cxx:212; 41: Assuming field 'fIg1Dim' is null in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:207; 42: Taking f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:3859,Modifiability,variab,variable,3859,y in /opt/root_src/math/mathcore/inc/Fit/FitData.h:202; 5: Assuming 'j' is < field 'fDim' in /opt/root_src/math/mathcore/inc/Fit/FitData.h:206; 6: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/inc/Fit/FitData.h:206; 7: Assuming 'j' is < field 'fDim' in /opt/root_src/math/mathcore/inc/Fit/FitData.h:206; 8: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/inc/Fit/FitData.h:206; 9: Assuming 'j' is < field 'fDim' in /opt/root_src/math/mathcore/inc/Fit/FitData.h:206; 10: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/inc/Fit/FitData.h:206; 11: Assuming 'j' is < field 'fDim' in /opt/root_src/math/mathcore/inc/Fit/FitData.h:206; 12: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/inc/Fit/FitData.h:206; 13: Dereference of undefined pointer value in /opt/root_src/math/mathcore/inc/Fit/FitData.h:207; /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:208:24: warning: Dereference of null pointer (loaded from variable 'x2') [clang-analyzer-core.NullDereference]; 1: Assuming field 'fIntegral' is true in /opt/root_src/math/mathcore/src/FitUtil.cxx:1273; 2: Left side of '&&' is true in /opt/root_src/math/mathcore/src/FitUtil.cxx:1273; 3: Assuming field 'fBinVolume' is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1274; 4: Left side of '&&' is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1274; 5: 'x2' initialized to a null pointer value in /opt/root_src/math/mathcore/src/FitUtil.cxx:1278; 6: 'useBinVolume' is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1282; 7: Taking false branch in /opt/root_src/math/mathcore/src/FitUtil.cxx:1282; 8: 'useBinVolume' is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1294; 9: '?' condition is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1294; 10: 'useBinIntegral' is true in /opt/root_src/math/mathcore/src/FitUtil.cxx:1296; 11: Taking false branch in /opt/root_src/math/mathcore/src/FitUtil.cxx:1296; 12: 'useBinVol,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:8454,Modifiability,variab,variable,8454,MultiDimTempl<double>>>::*)(double) const>' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:155; 35: Returning from 'IntegralEvaluator::SetFunction' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:136; 36: Returning from constructor for 'IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>' in /opt/root_src/math/mathcore/src/FitUtil.cxx:207; 37: Assuming 'k' is < 'npar' in /opt/root_src/math/mathcore/src/FitUtil.cxx:210; 38: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/src/FitUtil.cxx:210; 39: Passing null pointer value via 2nd parameter 'x2' in /opt/root_src/math/mathcore/src/FitUtil.cxx:212; 40: Calling 'IntegralEvaluator::operator()' in /opt/root_src/math/mathcore/src/FitUtil.cxx:212; 41: Field 'fIg1Dim' is non-null in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:207; 42: Taking true branch in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:207; 43: Dereference of null pointer (loaded from variable 'x2') in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:208; /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:213:22: warning: Array access (from variable 'x2') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming field 'fIntegral' is true in /opt/root_src/math/mathcore/src/FitUtil.cxx:1273; 2: Left side of '&&' is true in /opt/root_src/math/mathcore/src/FitUtil.cxx:1273; 3: Assuming field 'fBinVolume' is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1274; 4: Left side of '&&' is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1274; 5: 'x2' initialized to a null pointer value in /opt/root_src/math/mathcore/src/FitUtil.cxx:1278; 6: 'useBinVolume' is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1282; 7: Taking false branch in /opt/root_src/math/mathcore/src/FitUtil.cxx:1282; 8: 'useBinVolume' is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1294; 9: '?' condition is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1294; 1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:8605,Modifiability,variab,variable,8605,rc/math/mathcore/inc/Fit/FitUtil.h:136; 36: Returning from constructor for 'IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>' in /opt/root_src/math/mathcore/src/FitUtil.cxx:207; 37: Assuming 'k' is < 'npar' in /opt/root_src/math/mathcore/src/FitUtil.cxx:210; 38: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/src/FitUtil.cxx:210; 39: Passing null pointer value via 2nd parameter 'x2' in /opt/root_src/math/mathcore/src/FitUtil.cxx:212; 40: Calling 'IntegralEvaluator::operator()' in /opt/root_src/math/mathcore/src/FitUtil.cxx:212; 41: Field 'fIg1Dim' is non-null in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:207; 42: Taking true branch in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:207; 43: Dereference of null pointer (loaded from variable 'x2') in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:208; /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:213:22: warning: Array access (from variable 'x2') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming field 'fIntegral' is true in /opt/root_src/math/mathcore/src/FitUtil.cxx:1273; 2: Left side of '&&' is true in /opt/root_src/math/mathcore/src/FitUtil.cxx:1273; 3: Assuming field 'fBinVolume' is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1274; 4: Left side of '&&' is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1274; 5: 'x2' initialized to a null pointer value in /opt/root_src/math/mathcore/src/FitUtil.cxx:1278; 6: 'useBinVolume' is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1282; 7: Taking false branch in /opt/root_src/math/mathcore/src/FitUtil.cxx:1282; 8: 'useBinVolume' is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1294; 9: '?' condition is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1294; 10: 'useBinIntegral' is true in /opt/root_src/math/mathcore/src/FitUtil.cxx:1296; 11: Taking false branch in /opt/root_src/math/mathcore/src/FitUtil.cxx:1296; 12: 'u,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:13584,Modifiability,variab,variable,13584,athcore/src/FitUtil.cxx:207; 37: Assuming 'k' is < 'npar' in /opt/root_src/math/mathcore/src/FitUtil.cxx:210; 38: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/src/FitUtil.cxx:210; 39: Passing null pointer value via 2nd parameter 'x2' in /opt/root_src/math/mathcore/src/FitUtil.cxx:212; 40: Calling 'IntegralEvaluator::operator()' in /opt/root_src/math/mathcore/src/FitUtil.cxx:212; 41: Assuming field 'fIg1Dim' is null in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:207; 42: Taking false branch in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:207; 43: Assuming field 'fIgNDim' is non-null in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:210; 44: Taking true branch in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:210; 45: Assuming 'i' is < field 'fDim' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:212; 46: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:212; 47: Array access (from variable 'x2') results in a null pointer dereference in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:213; /opt/root_src/math/mathcore/inc/TMath.h:1373:16: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]; 1: Assuming the condition is false in /opt/root_src/math/minuit/src/TLinearFitter.cxx:2370; 2: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 3: Left side of '||' is false in /opt/root_src/math/minuit/src/TLinearFitter.cxx:2370; 4: Assuming field 'fInputFunction' is null in /opt/root_src/math/minuit/src/TLinearFitter.cxx:2370; 5: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 6: Left side of '||' is false in /opt/root_src/math/minuit/src/TLinearFitter.cxx:2370; 7: Assuming field 'fSpecial' is > 200 in /opt/root_src/math/minuit/src/TLinearFitter.cxx:2370; 8: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 9: Taking false branch in /opt/root_src/math/minuit/src/TLinearFitte,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:18839,Modifiability,Adapt,AdaptiveIntegratorMultiDim,18839,"44 in /opt/root_src/math/minuit/src/TLinearFitter.cxx:2378; 17: Calling 'KOrdStat<double, int>' in /opt/root_src/math/minuit/src/TLinearFitter.cxx:2444; 18: Assuming 'work' is null in /opt/root_src/math/mathcore/inc/TMath.h:1347; 19: Taking false branch in /opt/root_src/math/mathcore/inc/TMath.h:1347; 20: 'n' is <= 'kWorkMax' in /opt/root_src/math/mathcore/inc/TMath.h:1351; 21: Taking false branch in /opt/root_src/math/mathcore/inc/TMath.h:1351; 22: 'ii' is >= 'n' in /opt/root_src/math/mathcore/inc/TMath.h:1357; 23: Loop condition is false. Execution continues on line 1360 in /opt/root_src/math/mathcore/inc/TMath.h:1357; 24: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/inc/TMath.h:1363; 25: Assuming the condition is false in /opt/root_src/math/mathcore/inc/TMath.h:1364; 26: Taking false branch in /opt/root_src/math/mathcore/inc/TMath.h:1364; 27: Assigned value is garbage or undefined in /opt/root_src/math/mathcore/inc/TMath.h:1373; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:142:4: warning: Value stored to 'nfnevl' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nfnevl' is never read in /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:142; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:143:4: warning: Value stored to 'relerr' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'relerr' is never read in /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:143; /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68:4: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Calling 'IntegrandTransform::Clone' in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68; 2: Field 'fInfiniteInterval' is false in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 3: '?' condition is false in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 4: Memory is allocated in /opt/root_src/math/mathcore/src/GaussIntegrator.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:19040,Modifiability,Adapt,AdaptiveIntegratorMultiDim,19040,null in /opt/root_src/math/mathcore/inc/TMath.h:1347; 19: Taking false branch in /opt/root_src/math/mathcore/inc/TMath.h:1347; 20: 'n' is <= 'kWorkMax' in /opt/root_src/math/mathcore/inc/TMath.h:1351; 21: Taking false branch in /opt/root_src/math/mathcore/inc/TMath.h:1351; 22: 'ii' is >= 'n' in /opt/root_src/math/mathcore/inc/TMath.h:1357; 23: Loop condition is false. Execution continues on line 1360 in /opt/root_src/math/mathcore/inc/TMath.h:1357; 24: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/inc/TMath.h:1363; 25: Assuming the condition is false in /opt/root_src/math/mathcore/inc/TMath.h:1364; 26: Taking false branch in /opt/root_src/math/mathcore/inc/TMath.h:1364; 27: Assigned value is garbage or undefined in /opt/root_src/math/mathcore/inc/TMath.h:1373; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:142:4: warning: Value stored to 'nfnevl' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nfnevl' is never read in /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:142; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:143:4: warning: Value stored to 'relerr' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'relerr' is never read in /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:143; /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68:4: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Calling 'IntegrandTransform::Clone' in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68; 2: Field 'fInfiniteInterval' is false in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 3: '?' condition is false in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 4: Memory is allocated in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 5: Returned allocated memory in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68; 6: Potential memory leak in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:19108,Modifiability,Adapt,AdaptiveIntegratorMultiDim,19108,c/math/mathcore/inc/TMath.h:1347; 20: 'n' is <= 'kWorkMax' in /opt/root_src/math/mathcore/inc/TMath.h:1351; 21: Taking false branch in /opt/root_src/math/mathcore/inc/TMath.h:1351; 22: 'ii' is >= 'n' in /opt/root_src/math/mathcore/inc/TMath.h:1357; 23: Loop condition is false. Execution continues on line 1360 in /opt/root_src/math/mathcore/inc/TMath.h:1357; 24: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/inc/TMath.h:1363; 25: Assuming the condition is false in /opt/root_src/math/mathcore/inc/TMath.h:1364; 26: Taking false branch in /opt/root_src/math/mathcore/inc/TMath.h:1364; 27: Assigned value is garbage or undefined in /opt/root_src/math/mathcore/inc/TMath.h:1373; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:142:4: warning: Value stored to 'nfnevl' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nfnevl' is never read in /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:142; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:143:4: warning: Value stored to 'relerr' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'relerr' is never read in /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:143; /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68:4: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Calling 'IntegrandTransform::Clone' in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68; 2: Field 'fInfiniteInterval' is false in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 3: '?' condition is false in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 4: Memory is allocated in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 5: Returned allocated memory in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68; 6: Potential memory leak in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68; /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:235:12: warning: Although the value,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:19309,Modifiability,Adapt,AdaptiveIntegratorMultiDim,19309,"351; 22: 'ii' is >= 'n' in /opt/root_src/math/mathcore/inc/TMath.h:1357; 23: Loop condition is false. Execution continues on line 1360 in /opt/root_src/math/mathcore/inc/TMath.h:1357; 24: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/inc/TMath.h:1363; 25: Assuming the condition is false in /opt/root_src/math/mathcore/inc/TMath.h:1364; 26: Taking false branch in /opt/root_src/math/mathcore/inc/TMath.h:1364; 27: Assigned value is garbage or undefined in /opt/root_src/math/mathcore/inc/TMath.h:1373; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:142:4: warning: Value stored to 'nfnevl' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nfnevl' is never read in /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:142; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:143:4: warning: Value stored to 'relerr' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'relerr' is never read in /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:143; /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68:4: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Calling 'IntegrandTransform::Clone' in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68; 2: Field 'fInfiniteInterval' is false in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 3: '?' condition is false in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 4: Memory is allocated in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 5: Returned allocated memory in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68; 6: Potential memory leak in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68; /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:235:12: warning: Although the value stored to 'result' is used in the enclosing expression, the value is never actually read from 'result' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 're",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:29297,Modifiability,Variab,Variable,29297,952:10: warning: Value stored to 'rg1' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'rg1' is never read in /opt/root_src/math/mathcore/src/TMath.cxx:952; /opt/root_src/math/mathcore/src/TMath.cxx:961:10: warning: Value stored to 'rg2' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'rg2' is never read in /opt/root_src/math/mathcore/src/TMath.cxx:961; /opt/root_src/math/mathcore/src/TMath.cxx:975:10: warning: Value stored to 'rg3' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'rg3' is never read in /opt/root_src/math/mathcore/src/TMath.cxx:975; /opt/root_src/math/mathcore/src/TMath.cxx:1782:13: warning: Value stored to 'v' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'v' during its initialization is never read in /opt/root_src/math/mathcore/src/TMath.cxx:1782; /opt/root_src/math/mathcore/src/TMath.cxx:2091:4: warning: Variable 'i' with floating point type 'Double_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]; 1: Variable 'i' with floating point type 'Double_t' should not be used as a loop counter in /opt/root_src/math/mathcore/src/TMath.cxx:2091; /opt/root_src/math/mathcore/src/triangle.c:4961:10: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]; 1: Assuming field 'verbose' is <= 2 in /opt/root_src/math/mathcore/src/triangle.c:8862; 2: Taking false branch in /opt/root_src/math/mathcore/src/triangle.c:8862; 3: Assuming the condition is true in /opt/root_src/math/mathcore/src/triangle.c:8872; 4: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/src/triangle.c:8872; 5: Assuming the condition is false in /opt/root_src/math/mathcore/src/triangle.c:8876; 6: Taking false branch in /opt/root_src/math/mathcore/src/triangle.c:8876; 7: Assuming the condition is true in /opt/root_src/math/mathcore/src/triangle.c:8872; 8: Loop condition is true. Entering ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:29430,Modifiability,Variab,Variable,29430,ot_src/math/mathcore/src/TMath.cxx:952; /opt/root_src/math/mathcore/src/TMath.cxx:961:10: warning: Value stored to 'rg2' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'rg2' is never read in /opt/root_src/math/mathcore/src/TMath.cxx:961; /opt/root_src/math/mathcore/src/TMath.cxx:975:10: warning: Value stored to 'rg3' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'rg3' is never read in /opt/root_src/math/mathcore/src/TMath.cxx:975; /opt/root_src/math/mathcore/src/TMath.cxx:1782:13: warning: Value stored to 'v' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'v' during its initialization is never read in /opt/root_src/math/mathcore/src/TMath.cxx:1782; /opt/root_src/math/mathcore/src/TMath.cxx:2091:4: warning: Variable 'i' with floating point type 'Double_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]; 1: Variable 'i' with floating point type 'Double_t' should not be used as a loop counter in /opt/root_src/math/mathcore/src/TMath.cxx:2091; /opt/root_src/math/mathcore/src/triangle.c:4961:10: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]; 1: Assuming field 'verbose' is <= 2 in /opt/root_src/math/mathcore/src/triangle.c:8862; 2: Taking false branch in /opt/root_src/math/mathcore/src/triangle.c:8862; 3: Assuming the condition is true in /opt/root_src/math/mathcore/src/triangle.c:8872; 4: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/src/triangle.c:8872; 5: Assuming the condition is false in /opt/root_src/math/mathcore/src/triangle.c:8876; 6: Taking false branch in /opt/root_src/math/mathcore/src/triangle.c:8876; 7: Assuming the condition is true in /opt/root_src/math/mathcore/src/triangle.c:8872; 8: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/src/triangle.c:8872; 9: Assuming the condition is false in /opt/root_src/math/mathcore/src/triangle.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:109201,Modifiability,variab,variable,109201,: warning: Value stored to 'finother' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'finother' is never read in /opt/root_src/math/mathcore/src/triangle.c:5855; /opt/root_src/math/mathcore/src/triangle.c:6363:42: warning: Value stored to 'finother' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'finother' is never read in /opt/root_src/math/mathcore/src/triangle.c:6363; /opt/root_src/math/mathcore/src/triangle.c:9471:7: warning: Value stored to 'farrightapex' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'farrightapex' is never read in /opt/root_src/math/mathcore/src/triangle.c:9471; /opt/root_src/math/mathcore/src/triangle.c:9570:11: warning: Value stored to 'farleftapex' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'farleftapex' is never read in /opt/root_src/math/mathcore/src/triangle.c:9570; /opt/root_src/math/mathcore/src/triangle.c:14976:7: warning: Dereference of null pointer (loaded from variable 'vpointlist') [clang-analyzer-core.NullDereference]; 1: Calling 'parsecommandline' in /opt/root_src/math/mathcore/src/triangle.c:15695; 2: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/src/triangle.c:3300; 3: Assuming the condition is false in /opt/root_src/math/mathcore/src/triangle.c:3304; 4: Loop condition is false. Execution continues on line 3300 in /opt/root_src/math/mathcore/src/triangle.c:3304; 5: Loop condition is false. Execution continues on line 3496 in /opt/root_src/math/mathcore/src/triangle.c:3300; 6: Field 'poly' is 0 in /opt/root_src/math/mathcore/src/triangle.c:3496; 7: Left side of '||' is false in /opt/root_src/math/mathcore/src/triangle.c:3496; 8: Field 'refine' is 0 in /opt/root_src/math/mathcore/src/triangle.c:3496; 9: Left side of '||' is false in /opt/root_src/math/mathcore/src/triangle.c:3496; 10: Field 'quality' is 0 in /opt/root_src/math/mathcore/src/triangle.c:3496; 11: Left side of '||' is false in /opt/root_src,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:123337,Modifiability,variab,variable,123337, of '||' is true in /opt/root_src/math/mathcore/src/triangle.c:15901; 152: Field 'quiet' is not equal to 0 in /opt/root_src/math/mathcore/src/triangle.c:15902; 153: Taking false branch in /opt/root_src/math/mathcore/src/triangle.c:15902; 154: Assuming field 'edgesout' is 0 in /opt/root_src/math/mathcore/src/triangle.c:15940; 155: Taking false branch in /opt/root_src/math/mathcore/src/triangle.c:15940; 156: Assuming field 'voronoi' is not equal to 0 in /opt/root_src/math/mathcore/src/triangle.c:15947; 157: Taking true branch in /opt/root_src/math/mathcore/src/triangle.c:15947; 158: Passing null pointer value via 3rd parameter 'vpointlist' in /opt/root_src/math/mathcore/src/triangle.c:15949; 159: Calling 'writevoronoi' in /opt/root_src/math/mathcore/src/triangle.c:15949; 160: Field 'quiet' is not equal to 0 in /opt/root_src/math/mathcore/src/triangle.c:14972; 161: Taking false branch in /opt/root_src/math/mathcore/src/triangle.c:14972; 162: Dereference of null pointer (loaded from variable 'vpointlist') in /opt/root_src/math/mathcore/src/triangle.c:14976; /opt/root_src/math/mathcore/src/triangle.c:15380:3: warning: Value stored to 'worstaspect' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'worstaspect' is never read in /opt/root_src/math/mathcore/src/triangle.c:15380; /opt/root_src/math/matrix/inc/TMatrixT.h:280:4: warning: Returning null reference [clang-analyzer-core.uninitialized.UndefReturn]; 1: Taking false branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:121; 2: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 3: Loop condition is false. Exiting loop in /opt/root_src/math/matrix/src/TMatrixT.cxx:121; 4: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 5: Control jumps to 'case kTransposed:' at line 135 in /opt/root_src/math/matrix/src/TMatrixT.cxx:123; 6: Calling 'TMatrixT::Allocate' in /opt/root_src/math/matrix/src/TMatrixT.cxx:136; 7: Assuming 'no_rows' is >= 0 in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:140376,Modifiability,variab,variable,140376,trol jumps to 'case kAtA:' at line 154 in /opt/root_src/math/matrix/src/TMatrixT.cxx:123; 6: Calling 'TMatrixT::TMult' in /opt/root_src/math/matrix/src/TMatrixT.cxx:156; 7: Assuming 'gMatrixCheck' is 0 in /opt/root_src/math/matrix/src/TMatrixT.cxx:855; 8: Taking false branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:855; 9: Calling 'AtMultB<double>' in /opt/root_src/math/matrix/src/TMatrixT.cxx:894; 10: Loop condition is true. Entering loop body in /opt/root_src/math/matrix/src/TMatrixT.cxx:3105; 11: Loop condition is true. Entering loop body in /opt/root_src/math/matrix/src/TMatrixT.cxx:3106; 12: Loop condition is false. Execution continues on line 3114 in /opt/root_src/math/matrix/src/TMatrixT.cxx:3109; 13: Null pointer value stored to 'cp' in /opt/root_src/math/matrix/src/TMatrixT.cxx:3114; 14: Dereference of null pointer in /opt/root_src/math/matrix/src/TMatrixT.cxx:3114; /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1926:32: warning: Array access (from variable 'colIndex_old') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming 'gMatrixCheck' is 0 in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1853; 2: Taking false branch in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1853; 3: Assuming 'irow' is >= field 'fNrows' in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1877; 4: Loop condition is false. Execution continues on line 1888 in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1877; 5: 'colIndex_old' initialized here in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1894; 6: Assuming 'irow' is < field 'fNrows' in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1912; 7: Loop condition is true. Entering loop body in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1912; 8: Assuming the condition is true in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1915; 9: Left side of '&&' is true in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1915; 10: Assuming the condition is true in /opt/root_src/math/ma,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:143400,Modifiability,variab,variable,143400,trixTSparse.cxx:1951; 22: Assuming 'irow' is < field 'fNrows' in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1912; 23: Loop condition is true. Entering loop body in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1912; 24: Assuming the condition is true in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1915; 25: Left side of '&&' is true in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1915; 26: Assuming the condition is true in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1915; 27: Taking true branch in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1915; 28: 'flagRow' is true in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1921; 29: Taking true branch in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1921; 30: Assuming 'index' is <= 'left' in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1924; 31: Loop condition is true. Entering loop body in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1924; 32: Array access (from variable 'colIndex_old') results in a null pointer dereference in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1926; /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1967:32: warning: Array access (from variable 'colIndex_old') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming 'gMatrixCheck' is 0 in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1853; 2: Taking false branch in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1853; 3: Assuming 'irow' is >= field 'fNrows' in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1877; 4: Loop condition is false. Execution continues on line 1888 in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1877; 5: 'colIndex_old' initialized here in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1894; 6: Assuming 'irow' is < field 'fNrows' in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1912; 7: Loop condition is true. Entering loop body in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1912; 8: Assuming the condition is true in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:143607,Modifiability,variab,variable,143607,matrix/src/TMatrixTSparse.cxx:1912; 24: Assuming the condition is true in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1915; 25: Left side of '&&' is true in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1915; 26: Assuming the condition is true in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1915; 27: Taking true branch in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1915; 28: 'flagRow' is true in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1921; 29: Taking true branch in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1921; 30: Assuming 'index' is <= 'left' in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1924; 31: Loop condition is true. Entering loop body in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1924; 32: Array access (from variable 'colIndex_old') results in a null pointer dereference in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1926; /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1967:32: warning: Array access (from variable 'colIndex_old') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming 'gMatrixCheck' is 0 in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1853; 2: Taking false branch in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1853; 3: Assuming 'irow' is >= field 'fNrows' in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1877; 4: Loop condition is false. Execution continues on line 1888 in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1877; 5: 'colIndex_old' initialized here in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1894; 6: Assuming 'irow' is < field 'fNrows' in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1912; 7: Loop condition is true. Entering loop body in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1912; 8: Assuming the condition is true in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1915; 9: Left side of '&&' is true in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1915; 10: Assuming the condition is true in /opt/root_src/math/ma,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:146464,Modifiability,variab,variable,146464,se.cxx:1942; 20: Assuming 'colIndex_old' is null in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1951; 21: Taking false branch in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1951; 22: Assuming 'irow' is < field 'fNrows' in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1912; 23: Loop condition is true. Entering loop body in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1912; 24: Assuming the condition is false in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1915; 25: Left side of '&&' is false in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1915; 26: 'flagRow' is false in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1921; 27: Taking false branch in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1921; 28: Assuming 'index' is < 'eIndex_o' in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1965; 29: Loop condition is true. Entering loop body in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1965; 30: Array access (from variable 'colIndex_old') results in a null pointer dereference in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1967; /opt/root_src/math/matrix/src/TMatrixTSym.cxx:414:16: warning: Dereference of null pointer [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/math/matrix/src/TMatrixTSym.cxx:155; 2: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 3: Loop condition is false. Exiting loop in /opt/root_src/math/matrix/src/TMatrixTSym.cxx:155; 4: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 5: Control jumps to 'case kAtA:' at line 158 in /opt/root_src/math/matrix/src/TMatrixTSym.cxx:157; 6: Calling 'TMatrixTSym::TMult' in /opt/root_src/math/matrix/src/TMatrixTSym.cxx:160; 7: Taking false branch in /opt/root_src/math/matrix/src/TMatrixTSym.cxx:383; 8: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 9: Loop condition is false. Exiting loop in /opt/root_src/math/matrix/src/TMatrixTSym.cxx:383; 1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:231238,Modifiability,Adapt,AdaptiveIntegratorMultiDim,231238,value 1073741823 is assigned to 'mid' in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1302; 14: Assigned value is garbage or undefined in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1303; /opt/root_src/math/splot/src/TSPlot.cxx:959:23: warning: Value stored to 'loaded' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'loaded' is never read in /opt/root_src/math/splot/src/TSPlot.cxx:959; /opt/root_src/math/splot/src/TSPlot.cxx:966:13: warning: Value stored to 'loaded' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'loaded' is never read in /opt/root_src/math/splot/src/TSPlot.cxx:966; /opt/root_src/core/cont/inc/TBits.h; /opt/root_src/math/fumili/src/TFumili.cxx; /opt/root_src/math/genvector/src/3DConversions.cxx; /opt/root_src/math/genvector/src/AxisAngleXother.cxx; /opt/root_src/math/mathcore/inc/Fit/FitData.h; /opt/root_src/math/mathcore/inc/Fit/FitUtil.h; /opt/root_src/math/mathcore/inc/TMath.h; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx; /opt/root_src/math/mathcore/src/GaussIntegrator.cxx; /opt/root_src/math/mathcore/src/GoFTest.cxx; /opt/root_src/math/mathcore/src/SpecFuncCephes.cxx; /opt/root_src/math/mathcore/src/SpecFuncCephesInv.cxx; /opt/root_src/math/mathcore/src/TKDTree.cxx; /opt/root_src/math/mathcore/src/TKDTreeBinning.cxx; /opt/root_src/math/mathcore/src/TMath.cxx; /opt/root_src/math/mathcore/src/triangle.c; /opt/root_src/math/matrix/inc/TMatrixT.h; /opt/root_src/math/matrix/inc/TVectorT.h; /opt/root_src/math/matrix/src/TDecompBK.cxx; /opt/root_src/math/matrix/src/TDecompLU.cxx; /opt/root_src/math/matrix/src/TDecompSparse.cxx; /opt/root_src/math/matrix/src/TMatrixT.cxx; /opt/root_src/math/matrix/src/TMatrixTSparse.cxx; /opt/root_src/math/matrix/src/TMatrixTSym.cxx; /opt/root_src/math/matrix/src/TVectorT.cxx; /opt/root_src/math/minuit/src/TFitter.cxx; /opt/root_src/math/minuit/src/TLinearFitter.cxx; /opt/root_src/math/minuit/src/TMinuit.cxx; /opt/root_src/math/minuit/src/TM,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:3847,Performance,load,loaded,3847,y in /opt/root_src/math/mathcore/inc/Fit/FitData.h:202; 5: Assuming 'j' is < field 'fDim' in /opt/root_src/math/mathcore/inc/Fit/FitData.h:206; 6: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/inc/Fit/FitData.h:206; 7: Assuming 'j' is < field 'fDim' in /opt/root_src/math/mathcore/inc/Fit/FitData.h:206; 8: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/inc/Fit/FitData.h:206; 9: Assuming 'j' is < field 'fDim' in /opt/root_src/math/mathcore/inc/Fit/FitData.h:206; 10: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/inc/Fit/FitData.h:206; 11: Assuming 'j' is < field 'fDim' in /opt/root_src/math/mathcore/inc/Fit/FitData.h:206; 12: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/inc/Fit/FitData.h:206; 13: Dereference of undefined pointer value in /opt/root_src/math/mathcore/inc/Fit/FitData.h:207; /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:208:24: warning: Dereference of null pointer (loaded from variable 'x2') [clang-analyzer-core.NullDereference]; 1: Assuming field 'fIntegral' is true in /opt/root_src/math/mathcore/src/FitUtil.cxx:1273; 2: Left side of '&&' is true in /opt/root_src/math/mathcore/src/FitUtil.cxx:1273; 3: Assuming field 'fBinVolume' is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1274; 4: Left side of '&&' is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1274; 5: 'x2' initialized to a null pointer value in /opt/root_src/math/mathcore/src/FitUtil.cxx:1278; 6: 'useBinVolume' is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1282; 7: Taking false branch in /opt/root_src/math/mathcore/src/FitUtil.cxx:1282; 8: 'useBinVolume' is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1294; 9: '?' condition is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1294; 10: 'useBinIntegral' is true in /opt/root_src/math/mathcore/src/FitUtil.cxx:1296; 11: Taking false branch in /opt/root_src/math/mathcore/src/FitUtil.cxx:1296; 12: 'useBinVol,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:8442,Performance,load,loaded,8442,MultiDimTempl<double>>>::*)(double) const>' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:155; 35: Returning from 'IntegralEvaluator::SetFunction' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:136; 36: Returning from constructor for 'IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>' in /opt/root_src/math/mathcore/src/FitUtil.cxx:207; 37: Assuming 'k' is < 'npar' in /opt/root_src/math/mathcore/src/FitUtil.cxx:210; 38: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/src/FitUtil.cxx:210; 39: Passing null pointer value via 2nd parameter 'x2' in /opt/root_src/math/mathcore/src/FitUtil.cxx:212; 40: Calling 'IntegralEvaluator::operator()' in /opt/root_src/math/mathcore/src/FitUtil.cxx:212; 41: Field 'fIg1Dim' is non-null in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:207; 42: Taking true branch in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:207; 43: Dereference of null pointer (loaded from variable 'x2') in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:208; /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:213:22: warning: Array access (from variable 'x2') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming field 'fIntegral' is true in /opt/root_src/math/mathcore/src/FitUtil.cxx:1273; 2: Left side of '&&' is true in /opt/root_src/math/mathcore/src/FitUtil.cxx:1273; 3: Assuming field 'fBinVolume' is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1274; 4: Left side of '&&' is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1274; 5: 'x2' initialized to a null pointer value in /opt/root_src/math/mathcore/src/FitUtil.cxx:1278; 6: 'useBinVolume' is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1282; 7: Taking false branch in /opt/root_src/math/mathcore/src/FitUtil.cxx:1282; 8: 'useBinVolume' is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1294; 9: '?' condition is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1294; 1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:109189,Performance,load,loaded,109189,: warning: Value stored to 'finother' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'finother' is never read in /opt/root_src/math/mathcore/src/triangle.c:5855; /opt/root_src/math/mathcore/src/triangle.c:6363:42: warning: Value stored to 'finother' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'finother' is never read in /opt/root_src/math/mathcore/src/triangle.c:6363; /opt/root_src/math/mathcore/src/triangle.c:9471:7: warning: Value stored to 'farrightapex' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'farrightapex' is never read in /opt/root_src/math/mathcore/src/triangle.c:9471; /opt/root_src/math/mathcore/src/triangle.c:9570:11: warning: Value stored to 'farleftapex' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'farleftapex' is never read in /opt/root_src/math/mathcore/src/triangle.c:9570; /opt/root_src/math/mathcore/src/triangle.c:14976:7: warning: Dereference of null pointer (loaded from variable 'vpointlist') [clang-analyzer-core.NullDereference]; 1: Calling 'parsecommandline' in /opt/root_src/math/mathcore/src/triangle.c:15695; 2: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/src/triangle.c:3300; 3: Assuming the condition is false in /opt/root_src/math/mathcore/src/triangle.c:3304; 4: Loop condition is false. Execution continues on line 3300 in /opt/root_src/math/mathcore/src/triangle.c:3304; 5: Loop condition is false. Execution continues on line 3496 in /opt/root_src/math/mathcore/src/triangle.c:3300; 6: Field 'poly' is 0 in /opt/root_src/math/mathcore/src/triangle.c:3496; 7: Left side of '||' is false in /opt/root_src/math/mathcore/src/triangle.c:3496; 8: Field 'refine' is 0 in /opt/root_src/math/mathcore/src/triangle.c:3496; 9: Left side of '||' is false in /opt/root_src/math/mathcore/src/triangle.c:3496; 10: Field 'quality' is 0 in /opt/root_src/math/mathcore/src/triangle.c:3496; 11: Left side of '||' is false in /opt/root_src,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:123325,Performance,load,loaded,123325, of '||' is true in /opt/root_src/math/mathcore/src/triangle.c:15901; 152: Field 'quiet' is not equal to 0 in /opt/root_src/math/mathcore/src/triangle.c:15902; 153: Taking false branch in /opt/root_src/math/mathcore/src/triangle.c:15902; 154: Assuming field 'edgesout' is 0 in /opt/root_src/math/mathcore/src/triangle.c:15940; 155: Taking false branch in /opt/root_src/math/mathcore/src/triangle.c:15940; 156: Assuming field 'voronoi' is not equal to 0 in /opt/root_src/math/mathcore/src/triangle.c:15947; 157: Taking true branch in /opt/root_src/math/mathcore/src/triangle.c:15947; 158: Passing null pointer value via 3rd parameter 'vpointlist' in /opt/root_src/math/mathcore/src/triangle.c:15949; 159: Calling 'writevoronoi' in /opt/root_src/math/mathcore/src/triangle.c:15949; 160: Field 'quiet' is not equal to 0 in /opt/root_src/math/mathcore/src/triangle.c:14972; 161: Taking false branch in /opt/root_src/math/mathcore/src/triangle.c:14972; 162: Dereference of null pointer (loaded from variable 'vpointlist') in /opt/root_src/math/mathcore/src/triangle.c:14976; /opt/root_src/math/mathcore/src/triangle.c:15380:3: warning: Value stored to 'worstaspect' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'worstaspect' is never read in /opt/root_src/math/mathcore/src/triangle.c:15380; /opt/root_src/math/matrix/inc/TMatrixT.h:280:4: warning: Returning null reference [clang-analyzer-core.uninitialized.UndefReturn]; 1: Taking false branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:121; 2: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 3: Loop condition is false. Exiting loop in /opt/root_src/math/matrix/src/TMatrixT.cxx:121; 4: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 5: Control jumps to 'case kTransposed:' at line 135 in /opt/root_src/math/matrix/src/TMatrixT.cxx:123; 6: Calling 'TMatrixT::Allocate' in /opt/root_src/math/matrix/src/TMatrixT.cxx:136; 7: Assuming 'no_rows' is >= 0 in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:130798,Performance,load,loaded,130798,"se branch in /opt/root_src/math/matrix/src/TDecompLU.cxx:791; 9: Calling 'TDecompLU::DecomposeLUCrout' in /opt/root_src/math/matrix/src/TDecompLU.cxx:798; 10: Assuming 'n' is <= kWorkMax in /opt/root_src/math/matrix/src/TDecompLU.cxx:608; 11: Taking false branch in /opt/root_src/math/matrix/src/TDecompLU.cxx:608; 12: Assuming 'i' is >= 'n' in /opt/root_src/math/matrix/src/TDecompLU.cxx:616; 13: Loop condition is false. Execution continues on line 627 in /opt/root_src/math/matrix/src/TDecompLU.cxx:616; 14: 'j' is >= 'n' in /opt/root_src/math/matrix/src/TDecompLU.cxx:627; 15: Loop condition is false. Execution continues on line 693 in /opt/root_src/math/matrix/src/TDecompLU.cxx:627; 16: 'isAllocated' is false in /opt/root_src/math/matrix/src/TDecompLU.cxx:693; 17: Taking false branch in /opt/root_src/math/matrix/src/TDecompLU.cxx:693; 18: Returning without writing to '*index' in /opt/root_src/math/matrix/src/TDecompLU.cxx:696; 19: Returning the value 1 (loaded from 'kTRUE'), which participates in a condition later in /opt/root_src/math/matrix/src/TDecompLU.cxx:696; 20: Returning from 'TDecompLU::DecomposeLUCrout' in /opt/root_src/math/matrix/src/TDecompLU.cxx:798; 21: Left side of '||' is false in /opt/root_src/math/matrix/src/TDecompLU.cxx:798; 22: 'nrZeros' is <= 0 in /opt/root_src/math/matrix/src/TDecompLU.cxx:798; 23: Taking false branch in /opt/root_src/math/matrix/src/TDecompLU.cxx:798; 24: 'det' is null in /opt/root_src/math/matrix/src/TDecompLU.cxx:805; 25: Taking false branch in /opt/root_src/math/matrix/src/TDecompLU.cxx:805; 26: Assuming 'j' is < 'n' in /opt/root_src/math/matrix/src/TDecompLU.cxx:818; 27: Loop condition is true. Entering loop body in /opt/root_src/math/matrix/src/TDecompLU.cxx:818; 28: Loop condition is false. Execution continues on line 839 in /opt/root_src/math/matrix/src/TDecompLU.cxx:828; 29: Loop condition is false. Execution continues on line 818 in /opt/root_src/math/matrix/src/TDecompLU.cxx:839; 30: Assuming 'j' is >= 'n' in /opt/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:230511,Performance,load,loaded,230511,h/physics/src/TRobustEstimator.cxx:1277; 6: 'ntotal' is <= 'kWorkMax' in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1281; 7: Taking false branch in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1281; 8: 'ii' is >= 'ntotal' in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1287; 9: Loop condition is false. Execution continues on line 1290 in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1287; 10: Loop condition is true. Entering loop body in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1293; 11: Assuming the condition is false in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1294; 12: Taking false branch in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1294; 13: The value 1073741823 is assigned to 'mid' in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1302; 14: Assigned value is garbage or undefined in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1303; /opt/root_src/math/splot/src/TSPlot.cxx:959:23: warning: Value stored to 'loaded' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'loaded' is never read in /opt/root_src/math/splot/src/TSPlot.cxx:959; /opt/root_src/math/splot/src/TSPlot.cxx:966:13: warning: Value stored to 'loaded' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'loaded' is never read in /opt/root_src/math/splot/src/TSPlot.cxx:966; /opt/root_src/core/cont/inc/TBits.h; /opt/root_src/math/fumili/src/TFumili.cxx; /opt/root_src/math/genvector/src/3DConversions.cxx; /opt/root_src/math/genvector/src/AxisAngleXother.cxx; /opt/root_src/math/mathcore/inc/Fit/FitData.h; /opt/root_src/math/mathcore/inc/Fit/FitUtil.h; /opt/root_src/math/mathcore/inc/TMath.h; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx; /opt/root_src/math/mathcore/src/GaussIntegrator.cxx; /opt/root_src/math/mathcore/src/GoFTest.cxx; /opt/root_src/math/mathcore/src/SpecFuncCephes.cxx; /opt/root_src/math/mathcore/src/SpecFuncCephesInv.cxx; /opt/root_src/math/mathcore/src/TKDTree.c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:230591,Performance,load,loaded,230591,h/physics/src/TRobustEstimator.cxx:1281; 7: Taking false branch in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1281; 8: 'ii' is >= 'ntotal' in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1287; 9: Loop condition is false. Execution continues on line 1290 in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1287; 10: Loop condition is true. Entering loop body in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1293; 11: Assuming the condition is false in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1294; 12: Taking false branch in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1294; 13: The value 1073741823 is assigned to 'mid' in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1302; 14: Assigned value is garbage or undefined in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1303; /opt/root_src/math/splot/src/TSPlot.cxx:959:23: warning: Value stored to 'loaded' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'loaded' is never read in /opt/root_src/math/splot/src/TSPlot.cxx:959; /opt/root_src/math/splot/src/TSPlot.cxx:966:13: warning: Value stored to 'loaded' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'loaded' is never read in /opt/root_src/math/splot/src/TSPlot.cxx:966; /opt/root_src/core/cont/inc/TBits.h; /opt/root_src/math/fumili/src/TFumili.cxx; /opt/root_src/math/genvector/src/3DConversions.cxx; /opt/root_src/math/genvector/src/AxisAngleXother.cxx; /opt/root_src/math/mathcore/inc/Fit/FitData.h; /opt/root_src/math/mathcore/inc/Fit/FitUtil.h; /opt/root_src/math/mathcore/inc/TMath.h; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx; /opt/root_src/math/mathcore/src/GaussIntegrator.cxx; /opt/root_src/math/mathcore/src/GoFTest.cxx; /opt/root_src/math/mathcore/src/SpecFuncCephes.cxx; /opt/root_src/math/mathcore/src/SpecFuncCephesInv.cxx; /opt/root_src/math/mathcore/src/TKDTree.cxx; /opt/root_src/math/mathcore/src/TKDTreeBinning.cxx; /opt/root_src/math/mathcore/src/T,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:230735,Performance,load,loaded,230735,s >= 'ntotal' in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1287; 9: Loop condition is false. Execution continues on line 1290 in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1287; 10: Loop condition is true. Entering loop body in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1293; 11: Assuming the condition is false in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1294; 12: Taking false branch in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1294; 13: The value 1073741823 is assigned to 'mid' in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1302; 14: Assigned value is garbage or undefined in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1303; /opt/root_src/math/splot/src/TSPlot.cxx:959:23: warning: Value stored to 'loaded' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'loaded' is never read in /opt/root_src/math/splot/src/TSPlot.cxx:959; /opt/root_src/math/splot/src/TSPlot.cxx:966:13: warning: Value stored to 'loaded' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'loaded' is never read in /opt/root_src/math/splot/src/TSPlot.cxx:966; /opt/root_src/core/cont/inc/TBits.h; /opt/root_src/math/fumili/src/TFumili.cxx; /opt/root_src/math/genvector/src/3DConversions.cxx; /opt/root_src/math/genvector/src/AxisAngleXother.cxx; /opt/root_src/math/mathcore/inc/Fit/FitData.h; /opt/root_src/math/mathcore/inc/Fit/FitUtil.h; /opt/root_src/math/mathcore/inc/TMath.h; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx; /opt/root_src/math/mathcore/src/GaussIntegrator.cxx; /opt/root_src/math/mathcore/src/GoFTest.cxx; /opt/root_src/math/mathcore/src/SpecFuncCephes.cxx; /opt/root_src/math/mathcore/src/SpecFuncCephesInv.cxx; /opt/root_src/math/mathcore/src/TKDTree.cxx; /opt/root_src/math/mathcore/src/TKDTreeBinning.cxx; /opt/root_src/math/mathcore/src/TMath.cxx; /opt/root_src/math/mathcore/src/triangle.c; /opt/root_src/math/matrix/inc/TMatrixT.h; /opt/root_src/math/matrix/inc/TVectorT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:230815,Performance,load,loaded,230815,on is false. Execution continues on line 1290 in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1287; 10: Loop condition is true. Entering loop body in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1293; 11: Assuming the condition is false in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1294; 12: Taking false branch in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1294; 13: The value 1073741823 is assigned to 'mid' in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1302; 14: Assigned value is garbage or undefined in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1303; /opt/root_src/math/splot/src/TSPlot.cxx:959:23: warning: Value stored to 'loaded' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'loaded' is never read in /opt/root_src/math/splot/src/TSPlot.cxx:959; /opt/root_src/math/splot/src/TSPlot.cxx:966:13: warning: Value stored to 'loaded' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'loaded' is never read in /opt/root_src/math/splot/src/TSPlot.cxx:966; /opt/root_src/core/cont/inc/TBits.h; /opt/root_src/math/fumili/src/TFumili.cxx; /opt/root_src/math/genvector/src/3DConversions.cxx; /opt/root_src/math/genvector/src/AxisAngleXother.cxx; /opt/root_src/math/mathcore/inc/Fit/FitData.h; /opt/root_src/math/mathcore/inc/Fit/FitUtil.h; /opt/root_src/math/mathcore/inc/TMath.h; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx; /opt/root_src/math/mathcore/src/GaussIntegrator.cxx; /opt/root_src/math/mathcore/src/GoFTest.cxx; /opt/root_src/math/mathcore/src/SpecFuncCephes.cxx; /opt/root_src/math/mathcore/src/SpecFuncCephesInv.cxx; /opt/root_src/math/mathcore/src/TKDTree.cxx; /opt/root_src/math/mathcore/src/TKDTreeBinning.cxx; /opt/root_src/math/mathcore/src/TMath.cxx; /opt/root_src/math/mathcore/src/triangle.c; /opt/root_src/math/matrix/inc/TMatrixT.h; /opt/root_src/math/matrix/inc/TVectorT.h; /opt/root_src/math/matrix/src/TDecompBK.cxx; /opt/root_src/math/matrix/src/TDecompLU.c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:464,Security,secur,security,464,```; /opt/root_src/core/cont/inc/TBits.h:82:60: warning: Using copy-ctor but class TBits::TReference has a trivial copy-ctor but non trivial assign operator [clazy-rule-of-two-soft]; /opt/root_src/math/fumili/src/TFumili.cxx:853:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/math/fumili/src/TFumili.cxx:853; /opt/root_src/math/fumili/src/TFumili.cxx:1018:13: warning: Value stored to 'ki' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'ki' is never read in /opt/root_src/math/fumili/src/TFumili.cxx:1018; /opt/root_src/math/fumili/src/TFumili.cxx:2141:10: warning: Value stored to 'eu' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'eu' is never read in /opt/root_src/math/fumili/src/TFumili.cxx:2141; /opt/root_src/math/genvector/src/3DConversions.cxx:510:20: warning: Value stored to 'u' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'u' is never read in /opt/root_src/math/genvector/src/3DConversions.cxx:510; /opt/root_src/math/genvector/src/3DConversions.cxx:516:21: warning: Value stored to 'u' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'u' is never read in /opt/root_src/math/genvector/src/3DConversions.cxx:516; /opt/root_src/math/genvector/src/AxisAngleXother.cxx:108:19: warning: Value stored to 'aqu' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'aqu' is never read in /opt/root_src/math/genvector/src/AxisAngleXother.cxx:108; /opt/root_src/math/genvector/src/AxisAngleXother.cxx:139:19: warning: Value stored to ',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:8592,Security,access,access,8592,rc/math/mathcore/inc/Fit/FitUtil.h:136; 36: Returning from constructor for 'IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>' in /opt/root_src/math/mathcore/src/FitUtil.cxx:207; 37: Assuming 'k' is < 'npar' in /opt/root_src/math/mathcore/src/FitUtil.cxx:210; 38: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/src/FitUtil.cxx:210; 39: Passing null pointer value via 2nd parameter 'x2' in /opt/root_src/math/mathcore/src/FitUtil.cxx:212; 40: Calling 'IntegralEvaluator::operator()' in /opt/root_src/math/mathcore/src/FitUtil.cxx:212; 41: Field 'fIg1Dim' is non-null in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:207; 42: Taking true branch in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:207; 43: Dereference of null pointer (loaded from variable 'x2') in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:208; /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:213:22: warning: Array access (from variable 'x2') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming field 'fIntegral' is true in /opt/root_src/math/mathcore/src/FitUtil.cxx:1273; 2: Left side of '&&' is true in /opt/root_src/math/mathcore/src/FitUtil.cxx:1273; 3: Assuming field 'fBinVolume' is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1274; 4: Left side of '&&' is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1274; 5: 'x2' initialized to a null pointer value in /opt/root_src/math/mathcore/src/FitUtil.cxx:1278; 6: 'useBinVolume' is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1282; 7: Taking false branch in /opt/root_src/math/mathcore/src/FitUtil.cxx:1282; 8: 'useBinVolume' is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1294; 9: '?' condition is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1294; 10: 'useBinIntegral' is true in /opt/root_src/math/mathcore/src/FitUtil.cxx:1296; 11: Taking false branch in /opt/root_src/math/mathcore/src/FitUtil.cxx:1296; 12: 'u,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:13571,Security,access,access,13571,athcore/src/FitUtil.cxx:207; 37: Assuming 'k' is < 'npar' in /opt/root_src/math/mathcore/src/FitUtil.cxx:210; 38: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/src/FitUtil.cxx:210; 39: Passing null pointer value via 2nd parameter 'x2' in /opt/root_src/math/mathcore/src/FitUtil.cxx:212; 40: Calling 'IntegralEvaluator::operator()' in /opt/root_src/math/mathcore/src/FitUtil.cxx:212; 41: Assuming field 'fIg1Dim' is null in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:207; 42: Taking false branch in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:207; 43: Assuming field 'fIgNDim' is non-null in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:210; 44: Taking true branch in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:210; 45: Assuming 'i' is < field 'fDim' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:212; 46: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:212; 47: Array access (from variable 'x2') results in a null pointer dereference in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:213; /opt/root_src/math/mathcore/inc/TMath.h:1373:16: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]; 1: Assuming the condition is false in /opt/root_src/math/minuit/src/TLinearFitter.cxx:2370; 2: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 3: Left side of '||' is false in /opt/root_src/math/minuit/src/TLinearFitter.cxx:2370; 4: Assuming field 'fInputFunction' is null in /opt/root_src/math/minuit/src/TLinearFitter.cxx:2370; 5: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 6: Left side of '||' is false in /opt/root_src/math/minuit/src/TLinearFitter.cxx:2370; 7: Assuming field 'fSpecial' is > 200 in /opt/root_src/math/minuit/src/TLinearFitter.cxx:2370; 8: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 9: Taking false branch in /opt/root_src/math/minuit/src/TLinearFitte,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:29399,Security,secur,security,29399,952:10: warning: Value stored to 'rg1' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'rg1' is never read in /opt/root_src/math/mathcore/src/TMath.cxx:952; /opt/root_src/math/mathcore/src/TMath.cxx:961:10: warning: Value stored to 'rg2' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'rg2' is never read in /opt/root_src/math/mathcore/src/TMath.cxx:961; /opt/root_src/math/mathcore/src/TMath.cxx:975:10: warning: Value stored to 'rg3' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'rg3' is never read in /opt/root_src/math/mathcore/src/TMath.cxx:975; /opt/root_src/math/mathcore/src/TMath.cxx:1782:13: warning: Value stored to 'v' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'v' during its initialization is never read in /opt/root_src/math/mathcore/src/TMath.cxx:1782; /opt/root_src/math/mathcore/src/TMath.cxx:2091:4: warning: Variable 'i' with floating point type 'Double_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]; 1: Variable 'i' with floating point type 'Double_t' should not be used as a loop counter in /opt/root_src/math/mathcore/src/TMath.cxx:2091; /opt/root_src/math/mathcore/src/triangle.c:4961:10: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]; 1: Assuming field 'verbose' is <= 2 in /opt/root_src/math/mathcore/src/triangle.c:8862; 2: Taking false branch in /opt/root_src/math/mathcore/src/triangle.c:8862; 3: Assuming the condition is true in /opt/root_src/math/mathcore/src/triangle.c:8872; 4: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/src/triangle.c:8872; 5: Assuming the condition is false in /opt/root_src/math/mathcore/src/triangle.c:8876; 6: Taking false branch in /opt/root_src/math/mathcore/src/triangle.c:8876; 7: Assuming the condition is true in /opt/root_src/math/mathcore/src/triangle.c:8872; 8: Loop condition is true. Entering ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:140363,Security,access,access,140363,trol jumps to 'case kAtA:' at line 154 in /opt/root_src/math/matrix/src/TMatrixT.cxx:123; 6: Calling 'TMatrixT::TMult' in /opt/root_src/math/matrix/src/TMatrixT.cxx:156; 7: Assuming 'gMatrixCheck' is 0 in /opt/root_src/math/matrix/src/TMatrixT.cxx:855; 8: Taking false branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:855; 9: Calling 'AtMultB<double>' in /opt/root_src/math/matrix/src/TMatrixT.cxx:894; 10: Loop condition is true. Entering loop body in /opt/root_src/math/matrix/src/TMatrixT.cxx:3105; 11: Loop condition is true. Entering loop body in /opt/root_src/math/matrix/src/TMatrixT.cxx:3106; 12: Loop condition is false. Execution continues on line 3114 in /opt/root_src/math/matrix/src/TMatrixT.cxx:3109; 13: Null pointer value stored to 'cp' in /opt/root_src/math/matrix/src/TMatrixT.cxx:3114; 14: Dereference of null pointer in /opt/root_src/math/matrix/src/TMatrixT.cxx:3114; /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1926:32: warning: Array access (from variable 'colIndex_old') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming 'gMatrixCheck' is 0 in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1853; 2: Taking false branch in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1853; 3: Assuming 'irow' is >= field 'fNrows' in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1877; 4: Loop condition is false. Execution continues on line 1888 in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1877; 5: 'colIndex_old' initialized here in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1894; 6: Assuming 'irow' is < field 'fNrows' in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1912; 7: Loop condition is true. Entering loop body in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1912; 8: Assuming the condition is true in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1915; 9: Left side of '&&' is true in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1915; 10: Assuming the condition is true in /opt/root_src/math/ma,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:143387,Security,access,access,143387,trixTSparse.cxx:1951; 22: Assuming 'irow' is < field 'fNrows' in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1912; 23: Loop condition is true. Entering loop body in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1912; 24: Assuming the condition is true in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1915; 25: Left side of '&&' is true in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1915; 26: Assuming the condition is true in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1915; 27: Taking true branch in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1915; 28: 'flagRow' is true in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1921; 29: Taking true branch in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1921; 30: Assuming 'index' is <= 'left' in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1924; 31: Loop condition is true. Entering loop body in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1924; 32: Array access (from variable 'colIndex_old') results in a null pointer dereference in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1926; /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1967:32: warning: Array access (from variable 'colIndex_old') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming 'gMatrixCheck' is 0 in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1853; 2: Taking false branch in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1853; 3: Assuming 'irow' is >= field 'fNrows' in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1877; 4: Loop condition is false. Execution continues on line 1888 in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1877; 5: 'colIndex_old' initialized here in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1894; 6: Assuming 'irow' is < field 'fNrows' in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1912; 7: Loop condition is true. Entering loop body in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1912; 8: Assuming the condition is true in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:143594,Security,access,access,143594,matrix/src/TMatrixTSparse.cxx:1912; 24: Assuming the condition is true in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1915; 25: Left side of '&&' is true in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1915; 26: Assuming the condition is true in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1915; 27: Taking true branch in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1915; 28: 'flagRow' is true in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1921; 29: Taking true branch in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1921; 30: Assuming 'index' is <= 'left' in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1924; 31: Loop condition is true. Entering loop body in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1924; 32: Array access (from variable 'colIndex_old') results in a null pointer dereference in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1926; /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1967:32: warning: Array access (from variable 'colIndex_old') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming 'gMatrixCheck' is 0 in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1853; 2: Taking false branch in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1853; 3: Assuming 'irow' is >= field 'fNrows' in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1877; 4: Loop condition is false. Execution continues on line 1888 in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1877; 5: 'colIndex_old' initialized here in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1894; 6: Assuming 'irow' is < field 'fNrows' in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1912; 7: Loop condition is true. Entering loop body in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1912; 8: Assuming the condition is true in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1915; 9: Left side of '&&' is true in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1915; 10: Assuming the condition is true in /opt/root_src/math/ma,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:146451,Security,access,access,146451,se.cxx:1942; 20: Assuming 'colIndex_old' is null in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1951; 21: Taking false branch in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1951; 22: Assuming 'irow' is < field 'fNrows' in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1912; 23: Loop condition is true. Entering loop body in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1912; 24: Assuming the condition is false in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1915; 25: Left side of '&&' is false in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1915; 26: 'flagRow' is false in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1921; 27: Taking false branch in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1921; 28: Assuming 'index' is < 'eIndex_o' in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1965; 29: Loop condition is true. Entering loop body in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1965; 30: Array access (from variable 'colIndex_old') results in a null pointer dereference in /opt/root_src/math/matrix/src/TMatrixTSparse.cxx:1967; /opt/root_src/math/matrix/src/TMatrixTSym.cxx:414:16: warning: Dereference of null pointer [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/math/matrix/src/TMatrixTSym.cxx:155; 2: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 3: Loop condition is false. Exiting loop in /opt/root_src/math/matrix/src/TMatrixTSym.cxx:155; 4: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 5: Control jumps to 'case kAtA:' at line 158 in /opt/root_src/math/matrix/src/TMatrixTSym.cxx:157; 6: Calling 'TMatrixTSym::TMult' in /opt/root_src/math/matrix/src/TMatrixTSym.cxx:160; 7: Taking false branch in /opt/root_src/math/matrix/src/TMatrixTSym.cxx:383; 8: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 9: Loop condition is false. Exiting loop in /opt/root_src/math/matrix/src/TMatrixTSym.cxx:383; 1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:158013,Security,secur,security,158013,TVectorT::Allocate' in /opt/root_src/math/matrix/src/TVectorT.cxx:339; 27: Returning from 'TVectorT::ResizeTo' in /opt/root_src/math/matrix/src/TVectorT.cxx:1049; 28: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/math/matrix/src/TVectorT.cxx:1051; /opt/root_src/math/minuit/src/TFitter.cxx:164:10: warning: Value stored to 'igrad' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'igrad' is never read in /opt/root_src/math/minuit/src/TFitter.cxx:164; /opt/root_src/math/minuit/src/TFitter.cxx:182:7: warning: Value stored to 'igrad' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'igrad' is never read in /opt/root_src/math/minuit/src/TFitter.cxx:182; /opt/root_src/math/minuit/src/TFitter.cxx:483:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/math/minuit/src/TFitter.cxx:483; /opt/root_src/math/minuit/src/TLinearFitter.cxx:1375:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/math/minuit/src/TLinearFitter.cxx:1375; /opt/root_src/math/minuit/src/TLinearFitter.cxx:2152:10: warning: Value stored to 'chi2' is never read [clang-analyze,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:158591,Security,secur,security,158591,grad' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'igrad' is never read in /opt/root_src/math/minuit/src/TFitter.cxx:182; /opt/root_src/math/minuit/src/TFitter.cxx:483:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/math/minuit/src/TFitter.cxx:483; /opt/root_src/math/minuit/src/TLinearFitter.cxx:1375:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/math/minuit/src/TLinearFitter.cxx:1375; /opt/root_src/math/minuit/src/TLinearFitter.cxx:2152:10: warning: Value stored to 'chi2' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'chi2' is never read in /opt/root_src/math/minuit/src/TLinearFitter.cxx:2152; /opt/root_src/math/minuit/src/TLinearFitter.cxx:2230:10: warning: Value stored to 'chi2' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'chi2' is never read in /opt/root_src/math/minuit/src/TLinearFitter.cxx:2230; /opt/root_src/math/minuit/src/TLinearFitter.cxx:2252:7: warning: Value stored to 'chi2' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'chi2' is never read in /opt/root_src/math/minuit/src/TLinea,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:6552,Testability,assert,assert,6552,"FitUtil.cxx:1327; 21: Taking false branch in /opt/root_src/math/mathcore/src/FitUtil.cxx:1327; 22: Passing null pointer value via 3rd parameter 'x2' in /opt/root_src/math/mathcore/src/FitUtil.cxx:1331; 23: Calling 'CalculateGradientIntegral<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>' in /opt/root_src/math/mathcore/src/FitUtil.cxx:1331; 24: Calling constructor for 'IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>' in /opt/root_src/math/mathcore/src/FitUtil.cxx:207; 25: 'useIntegral' is true in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:135; 26: Taking true branch in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:135; 27: Calling 'IntegralEvaluator::SetFunction' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:136; 28: Field 'fFunc' is not equal to null in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:150; 29: '?' condition is true in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:150; 30: expanded from macro 'assert' in /usr/include/assert.h:93; 31: Assuming field 'fDim' is equal to 1 in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:153; 32: Taking true branch in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:153; 33: Calling constructor for 'WrappedMemFunction<ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>, double (ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>::*)(double) const>' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:155; 34: Returning from constructor for 'WrappedMemFunction<ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>, double (ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>::*)(double) const>' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:6576,Testability,assert,assert,6576,"FitUtil.cxx:1327; 21: Taking false branch in /opt/root_src/math/mathcore/src/FitUtil.cxx:1327; 22: Passing null pointer value via 3rd parameter 'x2' in /opt/root_src/math/mathcore/src/FitUtil.cxx:1331; 23: Calling 'CalculateGradientIntegral<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>' in /opt/root_src/math/mathcore/src/FitUtil.cxx:1331; 24: Calling constructor for 'IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>' in /opt/root_src/math/mathcore/src/FitUtil.cxx:207; 25: 'useIntegral' is true in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:135; 26: Taking true branch in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:135; 27: Calling 'IntegralEvaluator::SetFunction' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:136; 28: Field 'fFunc' is not equal to null in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:150; 29: '?' condition is true in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:150; 30: expanded from macro 'assert' in /usr/include/assert.h:93; 31: Assuming field 'fDim' is equal to 1 in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:153; 32: Taking true branch in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:153; 33: Calling constructor for 'WrappedMemFunction<ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>, double (ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>::*)(double) const>' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:155; 34: Returning from constructor for 'WrappedMemFunction<ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>, double (ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>::*)(double) const>' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:11336,Testability,assert,assert,11336,"FitUtil.cxx:1327; 21: Taking false branch in /opt/root_src/math/mathcore/src/FitUtil.cxx:1327; 22: Passing null pointer value via 3rd parameter 'x2' in /opt/root_src/math/mathcore/src/FitUtil.cxx:1331; 23: Calling 'CalculateGradientIntegral<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>' in /opt/root_src/math/mathcore/src/FitUtil.cxx:1331; 24: Calling constructor for 'IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>' in /opt/root_src/math/mathcore/src/FitUtil.cxx:207; 25: 'useIntegral' is true in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:135; 26: Taking true branch in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:135; 27: Calling 'IntegralEvaluator::SetFunction' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:136; 28: Field 'fFunc' is not equal to null in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:150; 29: '?' condition is true in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:150; 30: expanded from macro 'assert' in /usr/include/assert.h:93; 31: Assuming field 'fDim' is equal to 1 in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:153; 32: Taking true branch in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:153; 33: Calling constructor for 'WrappedMemFunction<ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>, double (ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>::*)(double) const>' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:155; 34: Returning from constructor for 'WrappedMemFunction<ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>, double (ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>::*)(double) const>' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/issues/7458:11360,Testability,assert,assert,11360,"FitUtil.cxx:1327; 21: Taking false branch in /opt/root_src/math/mathcore/src/FitUtil.cxx:1327; 22: Passing null pointer value via 3rd parameter 'x2' in /opt/root_src/math/mathcore/src/FitUtil.cxx:1331; 23: Calling 'CalculateGradientIntegral<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>' in /opt/root_src/math/mathcore/src/FitUtil.cxx:1331; 24: Calling constructor for 'IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>' in /opt/root_src/math/mathcore/src/FitUtil.cxx:207; 25: 'useIntegral' is true in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:135; 26: Taking true branch in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:135; 27: Calling 'IntegralEvaluator::SetFunction' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:136; 28: Field 'fFunc' is not equal to null in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:150; 29: '?' condition is true in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:150; 30: expanded from macro 'assert' in /usr/include/assert.h:93; 31: Assuming field 'fDim' is equal to 1 in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:153; 32: Taking true branch in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:153; 33: Calling constructor for 'WrappedMemFunction<ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>, double (ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>::*)(double) const>' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:155; 34: Returning from constructor for 'WrappedMemFunction<ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>, double (ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>::*)(double) const>' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7458
https://github.com/root-project/root/pull/7459:35,Deployability,release,release,35,This is a forward port of the 6.24 release notes update. Co-authored-by: Axel Naumann <Axel.Naumann@cern.ch>; (cherry picked from commit 0d49f6f399cb9ae95b0b3471f4ed918de723baef). [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7459
https://github.com/root-project/root/pull/7459:49,Deployability,update,update,49,This is a forward port of the 6.24 release notes update. Co-authored-by: Axel Naumann <Axel.Naumann@cern.ch>; (cherry picked from commit 0d49f6f399cb9ae95b0b3471f4ed918de723baef). [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7459
https://github.com/root-project/root/issues/7460:486,Availability,error,error,486,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; ROOT produces a double free error on TGText.Clear() after calling TGText.AsString(). ### Setup; ROOT 6.22/06. ; OS: Linux Debian 10 Buster and Scientific Linux 7; Root is self-built on Debian. Official redhat release is used on Scientific Linux. <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; The problem can be traced to ```gui/gui/src/TGText.cxx:1250``` in ```TGText::AsString()```:. ```; char *txt = travel->GetText();; ret += txt;; delete [] txt;; ```. txt is deleted, however it points at the text buffer to a line as returned by TGTextLine::GetText(). That there is an override, TGTextLine::GetText(Ulong_t, Ulong_t), that does return an allocated string that needs to be deleted bu the caller. To fix the problem, only the 'delete' line needs to be deleted, but it's not good to have two methods with the same name that have different allocation behaviors on the return values. Another possible fix would be to have TGTextLine::GetText() also allocate a new string for its return value. <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7460
https://github.com/root-project/root/issues/7460:805,Availability,down,download,805,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; ROOT produces a double free error on TGText.Clear() after calling TGText.AsString(). ### Setup; ROOT 6.22/06. ; OS: Linux Debian 10 Buster and Scientific Linux 7; Root is self-built on Debian. Official redhat release is used on Scientific Linux. <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; The problem can be traced to ```gui/gui/src/TGText.cxx:1250``` in ```TGText::AsString()```:. ```; char *txt = travel->GetText();; ret += txt;; delete [] txt;; ```. txt is deleted, however it points at the text buffer to a line as returned by TGTextLine::GetText(). That there is an override, TGTextLine::GetText(Ulong_t, Ulong_t), that does return an allocated string that needs to be deleted bu the caller. To fix the problem, only the 'delete' line needs to be deleted, but it's not good to have two methods with the same name that have different allocation behaviors on the return values. Another possible fix would be to have TGTextLine::GetText() also allocate a new string for its return value. <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7460
https://github.com/root-project/root/issues/7460:667,Deployability,release,release,667,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; ROOT produces a double free error on TGText.Clear() after calling TGText.AsString(). ### Setup; ROOT 6.22/06. ; OS: Linux Debian 10 Buster and Scientific Linux 7; Root is self-built on Debian. Official redhat release is used on Scientific Linux. <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; The problem can be traced to ```gui/gui/src/TGText.cxx:1250``` in ```TGText::AsString()```:. ```; char *txt = travel->GetText();; ret += txt;; delete [] txt;; ```. txt is deleted, however it points at the text buffer to a line as returned by TGTextLine::GetText(). That there is an override, TGTextLine::GetText(Ulong_t, Ulong_t), that does return an allocated string that needs to be deleted bu the caller. To fix the problem, only the 'delete' line needs to be deleted, but it's not good to have two methods with the same name that have different allocation behaviors on the return values. Another possible fix would be to have TGTextLine::GetText() also allocate a new string for its return value. <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7460
https://github.com/root-project/root/issues/7460:787,Deployability,install,install,787,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; ROOT produces a double free error on TGText.Clear() after calling TGText.AsString(). ### Setup; ROOT 6.22/06. ; OS: Linux Debian 10 Buster and Scientific Linux 7; Root is self-built on Debian. Official redhat release is used on Scientific Linux. <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; The problem can be traced to ```gui/gui/src/TGText.cxx:1250``` in ```TGText::AsString()```:. ```; char *txt = travel->GetText();; ret += txt;; delete [] txt;; ```. txt is deleted, however it points at the text buffer to a line as returned by TGTextLine::GetText(). That there is an override, TGTextLine::GetText(Ulong_t, Ulong_t), that does return an allocated string that needs to be deleted bu the caller. To fix the problem, only the 'delete' line needs to be deleted, but it's not good to have two methods with the same name that have different allocation behaviors on the return values. Another possible fix would be to have TGTextLine::GetText() also allocate a new string for its return value. <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7460
https://github.com/root-project/root/issues/7460:1220,Energy Efficiency,allocate,allocated,1220,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; ROOT produces a double free error on TGText.Clear() after calling TGText.AsString(). ### Setup; ROOT 6.22/06. ; OS: Linux Debian 10 Buster and Scientific Linux 7; Root is self-built on Debian. Official redhat release is used on Scientific Linux. <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; The problem can be traced to ```gui/gui/src/TGText.cxx:1250``` in ```TGText::AsString()```:. ```; char *txt = travel->GetText();; ret += txt;; delete [] txt;; ```. txt is deleted, however it points at the text buffer to a line as returned by TGTextLine::GetText(). That there is an override, TGTextLine::GetText(Ulong_t, Ulong_t), that does return an allocated string that needs to be deleted bu the caller. To fix the problem, only the 'delete' line needs to be deleted, but it's not good to have two methods with the same name that have different allocation behaviors on the return values. Another possible fix would be to have TGTextLine::GetText() also allocate a new string for its return value. <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7460
https://github.com/root-project/root/issues/7460:1526,Energy Efficiency,allocate,allocate,1526,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; ROOT produces a double free error on TGText.Clear() after calling TGText.AsString(). ### Setup; ROOT 6.22/06. ; OS: Linux Debian 10 Buster and Scientific Linux 7; Root is self-built on Debian. Official redhat release is used on Scientific Linux. <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; The problem can be traced to ```gui/gui/src/TGText.cxx:1250``` in ```TGText::AsString()```:. ```; char *txt = travel->GetText();; ret += txt;; delete [] txt;; ```. txt is deleted, however it points at the text buffer to a line as returned by TGTextLine::GetText(). That there is an override, TGTextLine::GetText(Ulong_t, Ulong_t), that does return an allocated string that needs to be deleted bu the caller. To fix the problem, only the 'delete' line needs to be deleted, but it's not good to have two methods with the same name that have different allocation behaviors on the return values. Another possible fix would be to have TGTextLine::GetText() also allocate a new string for its return value. <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7460
https://github.com/root-project/root/issues/7460:391,Usability,clear,clear,391,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; ROOT produces a double free error on TGText.Clear() after calling TGText.AsString(). ### Setup; ROOT 6.22/06. ; OS: Linux Debian 10 Buster and Scientific Linux 7; Root is self-built on Debian. Official redhat release is used on Scientific Linux. <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; The problem can be traced to ```gui/gui/src/TGText.cxx:1250``` in ```TGText::AsString()```:. ```; char *txt = travel->GetText();; ret += txt;; delete [] txt;; ```. txt is deleted, however it points at the text buffer to a line as returned by TGTextLine::GetText(). That there is an override, TGTextLine::GetText(Ulong_t, Ulong_t), that does return an allocated string that needs to be deleted bu the caller. To fix the problem, only the 'delete' line needs to be deleted, but it's not good to have two methods with the same name that have different allocation behaviors on the return values. Another possible fix would be to have TGTextLine::GetText() also allocate a new string for its return value. <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7460
https://github.com/root-project/root/issues/7460:502,Usability,Clear,Clear,502,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; ROOT produces a double free error on TGText.Clear() after calling TGText.AsString(). ### Setup; ROOT 6.22/06. ; OS: Linux Debian 10 Buster and Scientific Linux 7; Root is self-built on Debian. Official redhat release is used on Scientific Linux. <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; The problem can be traced to ```gui/gui/src/TGText.cxx:1250``` in ```TGText::AsString()```:. ```; char *txt = travel->GetText();; ret += txt;; delete [] txt;; ```. txt is deleted, however it points at the text buffer to a line as returned by TGTextLine::GetText(). That there is an override, TGTextLine::GetText(Ulong_t, Ulong_t), that does return an allocated string that needs to be deleted bu the caller. To fix the problem, only the 'delete' line needs to be deleted, but it's not good to have two methods with the same name that have different allocation behaviors on the return values. Another possible fix would be to have TGTextLine::GetText() also allocate a new string for its return value. <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7460
https://github.com/root-project/root/pull/7461:59,Energy Efficiency,allocate,allocates,59,"There are two overloads of TGTextLine::GetText(). One that allocates a new string and returns it, and one that just returns the object's line buffer. The method used in TGText::AsString() just returns the line buffer, so the return value should not be deleted.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7461
https://github.com/root-project/root/pull/7462:504,Integrability,message,message,504,"Backport from master: Silent the following zillion of warnings on Windows:; ```; C:\Users\sftnight\git\master\interpreter\llvm\src\include\llvm/Support/type_traits.h(97,1): warning C4624: 'llvm::detail::trivial_helper<T>': destructor was implicitly defined as deleted [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; with; [; T=clang::Sema::ModuleScope; ]; C:\Users\sftnight\git\master\interpreter\llvm\src\include\llvm/Support/type_traits.h(150): message : see reference to class template instantiation 'llvm::detail::trivial_helper<T>' being compiled [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; with; [; T=clang::Sema::ModuleScope; ]; C:\Users\sftnight\git\master\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(315): message : see reference to class template instantiation 'llvm::is_trivially_copyable<T>' being compiled [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; with; [; T=clang::Sema::ModuleScope; ]; C:\Users\sftnight\git\master\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(837): message : see reference to class template instantiation 'llvm::SmallVectorImpl<T>' being compiled [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; with; [; T=clang::Sema::ModuleScope; ]; C:\Users\sftnight\git\master\interpreter\llvm\src\tools\clang\include\clang/Sema/Sema.h(1724): message : see reference to class template instantiation 'llvm::SmallVector<clang::Sema::ModuleScope,16>' being compiled [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7462
https://github.com/root-project/root/pull/7462:841,Integrability,message,message,841,"Backport from master: Silent the following zillion of warnings on Windows:; ```; C:\Users\sftnight\git\master\interpreter\llvm\src\include\llvm/Support/type_traits.h(97,1): warning C4624: 'llvm::detail::trivial_helper<T>': destructor was implicitly defined as deleted [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; with; [; T=clang::Sema::ModuleScope; ]; C:\Users\sftnight\git\master\interpreter\llvm\src\include\llvm/Support/type_traits.h(150): message : see reference to class template instantiation 'llvm::detail::trivial_helper<T>' being compiled [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; with; [; T=clang::Sema::ModuleScope; ]; C:\Users\sftnight\git\master\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(315): message : see reference to class template instantiation 'llvm::is_trivially_copyable<T>' being compiled [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; with; [; T=clang::Sema::ModuleScope; ]; C:\Users\sftnight\git\master\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(837): message : see reference to class template instantiation 'llvm::SmallVectorImpl<T>' being compiled [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; with; [; T=clang::Sema::ModuleScope; ]; C:\Users\sftnight\git\master\interpreter\llvm\src\tools\clang\include\clang/Sema/Sema.h(1724): message : see reference to class template instantiation 'llvm::SmallVector<clang::Sema::ModuleScope,16>' being compiled [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7462
https://github.com/root-project/root/pull/7462:1177,Integrability,message,message,1177,"Backport from master: Silent the following zillion of warnings on Windows:; ```; C:\Users\sftnight\git\master\interpreter\llvm\src\include\llvm/Support/type_traits.h(97,1): warning C4624: 'llvm::detail::trivial_helper<T>': destructor was implicitly defined as deleted [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; with; [; T=clang::Sema::ModuleScope; ]; C:\Users\sftnight\git\master\interpreter\llvm\src\include\llvm/Support/type_traits.h(150): message : see reference to class template instantiation 'llvm::detail::trivial_helper<T>' being compiled [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; with; [; T=clang::Sema::ModuleScope; ]; C:\Users\sftnight\git\master\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(315): message : see reference to class template instantiation 'llvm::is_trivially_copyable<T>' being compiled [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; with; [; T=clang::Sema::ModuleScope; ]; C:\Users\sftnight\git\master\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(837): message : see reference to class template instantiation 'llvm::SmallVectorImpl<T>' being compiled [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; with; [; T=clang::Sema::ModuleScope; ]; C:\Users\sftnight\git\master\interpreter\llvm\src\tools\clang\include\clang/Sema/Sema.h(1724): message : see reference to class template instantiation 'llvm::SmallVector<clang::Sema::ModuleScope,16>' being compiled [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7462
https://github.com/root-project/root/pull/7462:1515,Integrability,message,message,1515,"Backport from master: Silent the following zillion of warnings on Windows:; ```; C:\Users\sftnight\git\master\interpreter\llvm\src\include\llvm/Support/type_traits.h(97,1): warning C4624: 'llvm::detail::trivial_helper<T>': destructor was implicitly defined as deleted [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; with; [; T=clang::Sema::ModuleScope; ]; C:\Users\sftnight\git\master\interpreter\llvm\src\include\llvm/Support/type_traits.h(150): message : see reference to class template instantiation 'llvm::detail::trivial_helper<T>' being compiled [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; with; [; T=clang::Sema::ModuleScope; ]; C:\Users\sftnight\git\master\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(315): message : see reference to class template instantiation 'llvm::is_trivially_copyable<T>' being compiled [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; with; [; T=clang::Sema::ModuleScope; ]; C:\Users\sftnight\git\master\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(837): message : see reference to class template instantiation 'llvm::SmallVectorImpl<T>' being compiled [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; with; [; T=clang::Sema::ModuleScope; ]; C:\Users\sftnight\git\master\interpreter\llvm\src\tools\clang\include\clang/Sema/Sema.h(1724): message : see reference to class template instantiation 'llvm::SmallVector<clang::Sema::ModuleScope,16>' being compiled [C:\Users\sftnight\build\relwithdebinfo\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7462
https://github.com/root-project/root/pull/7465:114,Integrability,message,message,114,"Seems to be, cling/llvm9 have problems to parse OCCI headers. ; With enabled oracle hsimple.C crashes making some message about accessing libOracle module; In any case such form is preferable for plugins",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7465
https://github.com/root-project/root/pull/7465:196,Modifiability,plugin,plugins,196,"Seems to be, cling/llvm9 have problems to parse OCCI headers. ; With enabled oracle hsimple.C crashes making some message about accessing libOracle module; In any case such form is preferable for plugins",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7465
https://github.com/root-project/root/pull/7465:128,Security,access,accessing,128,"Seems to be, cling/llvm9 have problems to parse OCCI headers. ; With enabled oracle hsimple.C crashes making some message about accessing libOracle module; In any case such form is preferable for plugins",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7465
https://github.com/root-project/root/issues/7470:553,Performance,Load,Loading,553,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; See [forum post](https://root-forum.cern.ch/t/dictionary-generation-fails-for-partial-template-specialization/43922) for details and a reproducer. ### Expected behavior; Loading the dictionary in the ROOT prompt should not fail. ### To Reproduce; 1. Follow instructions in the forum post to build the dictionary.; 2. Open ROOT; 3. `.L libdict.so`. ### Setup; ROOT master build on Arch Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7470
https://github.com/root-project/root/pull/7477:209,Safety,safe,safe,209,"In `RooAbsReal::getPropagatedError`, the whole computation graph is; cloned with `RooAbsArg::cloneTree` just to evaluate the variations. The; original parameter values are reset after the variations, so it is safe; to use the original graph instead of a clone. The motivation for this change was that when the uncertainties of a; RooRealIntegral are evaluated with `RooAbsReal::getPropagatedError`, a; custom observable range is not effective anymore after cloning the; integral with `cloneTree`. Besides from the integral problem, it's probably good to avoid the clone; because there might be other issues related to the cloning that have not; been discovered yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7477
https://github.com/root-project/root/pull/7477:554,Safety,avoid,avoid,554,"In `RooAbsReal::getPropagatedError`, the whole computation graph is; cloned with `RooAbsArg::cloneTree` just to evaluate the variations. The; original parameter values are reset after the variations, so it is safe; to use the original graph instead of a clone. The motivation for this change was that when the uncertainties of a; RooRealIntegral are evaluated with `RooAbsReal::getPropagatedError`, a; custom observable range is not effective anymore after cloning the; integral with `cloneTree`. Besides from the integral problem, it's probably good to avoid the clone; because there might be other issues related to the cloning that have not; been discovered yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7477
https://github.com/root-project/root/pull/7478:26,Deployability,integrat,integration,26,"After commit a0fa4fa, the integration of a RooParamHistFunc still; doesn't work when the RooParamHistFunc was cloned with `cloneTree`.; This was because the ranges were stored in a hash map keyed by argument; pointer and then not the correct clones of the arguments were used to; look up the ranges afterwards. This commit is fixing that. The problem was reported in the ROOT forum: https://root-forum.cern.ch/t/barlow-beeston-in-subrange/43909/5.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7478
https://github.com/root-project/root/pull/7478:26,Integrability,integrat,integration,26,"After commit a0fa4fa, the integration of a RooParamHistFunc still; doesn't work when the RooParamHistFunc was cloned with `cloneTree`.; This was because the ranges were stored in a hash map keyed by argument; pointer and then not the correct clones of the arguments were used to; look up the ranges afterwards. This commit is fixing that. The problem was reported in the ROOT forum: https://root-forum.cern.ch/t/barlow-beeston-in-subrange/43909/5.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7478
https://github.com/root-project/root/pull/7478:181,Security,hash,hash,181,"After commit a0fa4fa, the integration of a RooParamHistFunc still; doesn't work when the RooParamHistFunc was cloned with `cloneTree`.; This was because the ranges were stored in a hash map keyed by argument; pointer and then not the correct clones of the arguments were used to; look up the ranges afterwards. This commit is fixing that. The problem was reported in the ROOT forum: https://root-forum.cern.ch/t/barlow-beeston-in-subrange/43909/5.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7478
https://github.com/root-project/root/pull/7479:26,Deployability,integrat,integration,26,"After commit a0fa4fa, the integration of a RooParamHistFunc still; doesn't work when the RooParamHistFunc was cloned with `cloneTree`.; This was because the ranges were stored in a hash map keyed by argument; pointer and then not the correct clones of the arguments were used to; look up the ranges afterwards. This commit is fixing that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7479
https://github.com/root-project/root/pull/7479:26,Integrability,integrat,integration,26,"After commit a0fa4fa, the integration of a RooParamHistFunc still; doesn't work when the RooParamHistFunc was cloned with `cloneTree`.; This was because the ranges were stored in a hash map keyed by argument; pointer and then not the correct clones of the arguments were used to; look up the ranges afterwards. This commit is fixing that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7479
https://github.com/root-project/root/pull/7479:181,Security,hash,hash,181,"After commit a0fa4fa, the integration of a RooParamHistFunc still; doesn't work when the RooParamHistFunc was cloned with `cloneTree`.; This was because the ranges were stored in a hash map keyed by argument; pointer and then not the correct clones of the arguments were used to; look up the ranges afterwards. This commit is fixing that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7479
https://github.com/root-project/root/pull/7480:324,Safety,avoid,avoid,324,"Add a helper method to check whether a model has a field with the; given name. We're using `string_view` on the API boundary, but this; unfortunately requires a `std::string` temporary to check if the name; exists in the unordered_set of field names until P0919R3 lands in; C++20. Switching to a plain `std::set` would also avoid this problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7480
https://github.com/root-project/root/issues/7481:351,Modifiability,variab,variable,351,"Code here: https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooSimPdfBuilder.cxx#L850-L854 has logical problem.; ```; std::string remainderState;; if (const auto pos = paramName.find('[') != std::string::npos) {; const auto posEnd = paramName.find(']');; remainderState = paramName.substr(pos+1, posEnd - pos - 1);; }; ```; Here variable `pos` will be boolean and not position of `[` symbol. ; Should be fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7481
https://github.com/root-project/root/issues/7481:117,Testability,log,logical,117,"Code here: https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooSimPdfBuilder.cxx#L850-L854 has logical problem.; ```; std::string remainderState;; if (const auto pos = paramName.find('[') != std::string::npos) {; const auto posEnd = paramName.find(']');; remainderState = paramName.substr(pos+1, posEnd - pos - 1);; }; ```; Here variable `pos` will be boolean and not position of `[` symbol. ; Should be fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7481
https://github.com/root-project/root/issues/7483:392,Availability,error,error,392,"### Describe the bug; A definition in an unnamed namespace cannot be redeclared by re-running the same code. ### Expected behavior; A new declaration is provided; `13` is printed twice. ### To Reproduce; ```c++; // t.cxx; namespace {; int h = 12;; }. void t() {; printf(""%d\n"", ++h);; }; ```; ```; root [0] .x t.cxx; 13; root [1] .x t.cxx; In file included from input_line_10:1:; t.cxx:6:20: error: use of undeclared identifier 'h'; printf(""%d\n"", ++h);; ^; ```. ### Setup; ROOT master Ubuntu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7483
https://github.com/root-project/root/pull/7485:307,Availability,alive,alive,307,"The current implementation is broken (fObjPtr.release() deletes the; object thet we then return by pointer) and in general it is extremely; awkward to convince a std::shared_ptr to release ownership (and for good; reason, it only makes sense if you can be absolutely sure that there is; only one shared_ptr alive that owns that object). Instead of using RResultPtr::Release, we recommend moving the result; out of the RResultPtr. This effectively reverts commit 03fd58eec04ddf96c1596c02d4269185fef42b9f.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7485
https://github.com/root-project/root/pull/7485:46,Deployability,release,release,46,"The current implementation is broken (fObjPtr.release() deletes the; object thet we then return by pointer) and in general it is extremely; awkward to convince a std::shared_ptr to release ownership (and for good; reason, it only makes sense if you can be absolutely sure that there is; only one shared_ptr alive that owns that object). Instead of using RResultPtr::Release, we recommend moving the result; out of the RResultPtr. This effectively reverts commit 03fd58eec04ddf96c1596c02d4269185fef42b9f.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7485
https://github.com/root-project/root/pull/7485:181,Deployability,release,release,181,"The current implementation is broken (fObjPtr.release() deletes the; object thet we then return by pointer) and in general it is extremely; awkward to convince a std::shared_ptr to release ownership (and for good; reason, it only makes sense if you can be absolutely sure that there is; only one shared_ptr alive that owns that object). Instead of using RResultPtr::Release, we recommend moving the result; out of the RResultPtr. This effectively reverts commit 03fd58eec04ddf96c1596c02d4269185fef42b9f.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7485
https://github.com/root-project/root/pull/7485:366,Deployability,Release,Release,366,"The current implementation is broken (fObjPtr.release() deletes the; object thet we then return by pointer) and in general it is extremely; awkward to convince a std::shared_ptr to release ownership (and for good; reason, it only makes sense if you can be absolutely sure that there is; only one shared_ptr alive that owns that object). Instead of using RResultPtr::Release, we recommend moving the result; out of the RResultPtr. This effectively reverts commit 03fd58eec04ddf96c1596c02d4269185fef42b9f.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7485
https://github.com/root-project/root/pull/7486:307,Availability,alive,alive,307,"The current implementation is broken (fObjPtr.release() deletes the; object thet we then return by pointer) and in general it is extremely; awkward to convince a std::shared_ptr to release ownership (and for good; reason, it only makes sense if you can be absolutely sure that there is; only one shared_ptr alive that owns that object). Instead of using RResultPtr::Release, we recommend moving the result; out of the RResultPtr. This effectively reverts commit 03fd58eec04ddf96c1596c02d4269185fef42b9f.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7486
https://github.com/root-project/root/pull/7486:46,Deployability,release,release,46,"The current implementation is broken (fObjPtr.release() deletes the; object thet we then return by pointer) and in general it is extremely; awkward to convince a std::shared_ptr to release ownership (and for good; reason, it only makes sense if you can be absolutely sure that there is; only one shared_ptr alive that owns that object). Instead of using RResultPtr::Release, we recommend moving the result; out of the RResultPtr. This effectively reverts commit 03fd58eec04ddf96c1596c02d4269185fef42b9f.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7486
https://github.com/root-project/root/pull/7486:181,Deployability,release,release,181,"The current implementation is broken (fObjPtr.release() deletes the; object thet we then return by pointer) and in general it is extremely; awkward to convince a std::shared_ptr to release ownership (and for good; reason, it only makes sense if you can be absolutely sure that there is; only one shared_ptr alive that owns that object). Instead of using RResultPtr::Release, we recommend moving the result; out of the RResultPtr. This effectively reverts commit 03fd58eec04ddf96c1596c02d4269185fef42b9f.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7486
https://github.com/root-project/root/pull/7486:366,Deployability,Release,Release,366,"The current implementation is broken (fObjPtr.release() deletes the; object thet we then return by pointer) and in general it is extremely; awkward to convince a std::shared_ptr to release ownership (and for good; reason, it only makes sense if you can be absolutely sure that there is; only one shared_ptr alive that owns that object). Instead of using RResultPtr::Release, we recommend moving the result; out of the RResultPtr. This effectively reverts commit 03fd58eec04ddf96c1596c02d4269185fef42b9f.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7486
https://github.com/root-project/root/pull/7488:8,Deployability,update,update,8,"For the update of LLVM 9, Cling required another patch to Clang for replacing the children of a `CompoundStmt`. Instead solve this by creating a new `CompoundStmt` with the right `Stmt`s attached.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:49,Deployability,patch,patch,49,"For the update of LLVM 9, Cling required another patch to Clang for replacing the children of a `CompoundStmt`. Instead solve this by creating a new `CompoundStmt` with the right `Stmt`s attached.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7489:96,Availability,error,error,96,"* modernize RooSimPdfBuilder; * fix documentation; * add test for RooSimPdfBuilder; * fix logic error reported in https://github.com/root-project/root/issues/7481. The `RooSimPdfBuilder` is superseeded by the RooSimWSTool, but I still think it's a good idea to update this class which might still be used in the wild.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7489
https://github.com/root-project/root/pull/7489:261,Deployability,update,update,261,"* modernize RooSimPdfBuilder; * fix documentation; * add test for RooSimPdfBuilder; * fix logic error reported in https://github.com/root-project/root/issues/7481. The `RooSimPdfBuilder` is superseeded by the RooSimWSTool, but I still think it's a good idea to update this class which might still be used in the wild.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7489
https://github.com/root-project/root/pull/7489:57,Testability,test,test,57,"* modernize RooSimPdfBuilder; * fix documentation; * add test for RooSimPdfBuilder; * fix logic error reported in https://github.com/root-project/root/issues/7481. The `RooSimPdfBuilder` is superseeded by the RooSimWSTool, but I still think it's a good idea to update this class which might still be used in the wild.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7489
https://github.com/root-project/root/pull/7489:90,Testability,log,logic,90,"* modernize RooSimPdfBuilder; * fix documentation; * add test for RooSimPdfBuilder; * fix logic error reported in https://github.com/root-project/root/issues/7481. The `RooSimPdfBuilder` is superseeded by the RooSimWSTool, but I still think it's a good idea to update this class which might still be used in the wild.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7489
https://github.com/root-project/root/pull/7490:63,Safety,Detect,Detected,63,It fully duplicates TPave::fName member and not required here; Detected in JSON code for TPaletteAxis class,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7490
https://github.com/root-project/root/pull/7492:168,Availability,error,errors-when-trying-to-fit-a-histogram,168,Because the XOR mode was not properly implemented on Cocoa the fit panel range di not work.; This problem was mentioned here: https://root-forum.cern.ch/t/bugs-in-tfit-errors-when-trying-to-fit-a-histogram/43789. An issue was opened there: https://github.com/root-project/root/issues/7340. The fix was provided by Timur,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7492
https://github.com/root-project/root/issues/7496:940,Performance,optimiz,optimized,940,```; Thread 6 (Thread 0x7f932f93e700 (LWP 8838)):; #0 0x00007f9369773d19 in syscall () from /lib64/libc.so.6; #1 0x00007f9331a0e79e in XrdSys::LinuxSemaphore::Wait (this=0x7ee4870) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/./XrdSys/XrdSysLinuxSemaphore.hh:161; #2 XrdCl::SyncQueue<XrdCl::JobManager::JobHelper>::Get (this=0x7ee4698) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/./XrdCl/XrdClSyncQueue.hh:67; #3 XrdCl::JobManager::RunJobs (this=0x7ee4680) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdCl/XrdClJobManager.cc:146; #4 0x00007f9331a0e989 in RunRunnerThread (arg=<optimized out>) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdCl/XrdClJobManager.cc:33; #5 0x00007f9369a50ea5 in start_thread () from /lib64/libpthread.so.0; #6 0x00007f93697799fd in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7f933013f700 (LWP 8837)):; #0 0x00007f9369773d19 in syscall () from /lib64/libc.so.6; #1 0x00007f9331a0e79e in XrdSys::LinuxSemaphore::Wait (this=0x7ee4870) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/./XrdSys/XrdSysLinuxSemaphore.hh:161; #2 XrdCl::SyncQueue<XrdCl::JobManager::JobHelper>::Get (this=0x7ee4698) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/./XrdCl/XrdClSyncQueue.hh:67; #3 XrdCl::JobManager::RunJobs (this=0x7ee4680) at /build/cmsbld/auto-builds/CM,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7496
https://github.com/root-project/root/issues/7496:2212,Performance,optimiz,optimized,2212,ib64/libc.so.6. Thread 5 (Thread 0x7f933013f700 (LWP 8837)):; #0 0x00007f9369773d19 in syscall () from /lib64/libc.so.6; #1 0x00007f9331a0e79e in XrdSys::LinuxSemaphore::Wait (this=0x7ee4870) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/./XrdSys/XrdSysLinuxSemaphore.hh:161; #2 XrdCl::SyncQueue<XrdCl::JobManager::JobHelper>::Get (this=0x7ee4698) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/./XrdCl/XrdClSyncQueue.hh:67; #3 XrdCl::JobManager::RunJobs (this=0x7ee4680) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdCl/XrdClJobManager.cc:146; #4 0x00007f9331a0e989 in RunRunnerThread (arg=<optimized out>) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdCl/XrdClJobManager.cc:33; #5 0x00007f9369a50ea5 in start_thread () from /lib64/libpthread.so.0; #6 0x00007f93697799fd in clone () from /lib64/libc.so.6. Thread 4 (Thread 0x7f9330940700 (LWP 8836)):; #0 0x00007f9369773d19 in syscall () from /lib64/libc.so.6; #1 0x00007f9331a0e79e in XrdSys::LinuxSemaphore::Wait (this=0x7ee4870) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/./XrdSys/XrdSysLinuxSemaphore.hh:161; #2 XrdCl::SyncQueue<XrdCl::JobManager::JobHelper>::Get (this=0x7ee4698) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/./XrdCl/XrdClSyncQueue.hh:67; #3 XrdCl::JobManager::RunJobs (this=0x7ee4680) at /build/cmsbld/au,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7496
https://github.com/root-project/root/issues/7496:3484,Performance,optimiz,optimized,3484,ib64/libc.so.6. Thread 4 (Thread 0x7f9330940700 (LWP 8836)):; #0 0x00007f9369773d19 in syscall () from /lib64/libc.so.6; #1 0x00007f9331a0e79e in XrdSys::LinuxSemaphore::Wait (this=0x7ee4870) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/./XrdSys/XrdSysLinuxSemaphore.hh:161; #2 XrdCl::SyncQueue<XrdCl::JobManager::JobHelper>::Get (this=0x7ee4698) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/./XrdCl/XrdClSyncQueue.hh:67; #3 XrdCl::JobManager::RunJobs (this=0x7ee4680) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdCl/XrdClJobManager.cc:146; #4 0x00007f9331a0e989 in RunRunnerThread (arg=<optimized out>) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdCl/XrdClJobManager.cc:33; #5 0x00007f9369a50ea5 in start_thread () from /lib64/libpthread.so.0; #6 0x00007f93697799fd in clone () from /lib64/libc.so.6. Thread 3 (Thread 0x7f9331141700 (LWP 8835)):; #0 0x00007f9369a57e9d in nanosleep () from /lib64/libpthread.so.0; #1 0x00007f9331b1dded in XrdSysTimer::Wait (mills=<optimized out>) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdSys/XrdSysTimer.cc:239; #2 0x00007f93319b2118 in XrdCl::TaskManager::RunTasks (this=0x7ee9660) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdCl/XrdClTaskManager.cc:244; #3 0x00007f93319b2269 in RunRunnerThread (arg=<optimized out>) at /build/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7496
https://github.com/root-project/root/issues/7496:3985,Performance,optimiz,optimized,3985,"_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/./XrdCl/XrdClSyncQueue.hh:67; #3 XrdCl::JobManager::RunJobs (this=0x7ee4680) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdCl/XrdClJobManager.cc:146; #4 0x00007f9331a0e989 in RunRunnerThread (arg=<optimized out>) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdCl/XrdClJobManager.cc:33; #5 0x00007f9369a50ea5 in start_thread () from /lib64/libpthread.so.0; #6 0x00007f93697799fd in clone () from /lib64/libc.so.6. Thread 3 (Thread 0x7f9331141700 (LWP 8835)):; #0 0x00007f9369a57e9d in nanosleep () from /lib64/libpthread.so.0; #1 0x00007f9331b1dded in XrdSysTimer::Wait (mills=<optimized out>) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdSys/XrdSysTimer.cc:239; #2 0x00007f93319b2118 in XrdCl::TaskManager::RunTasks (this=0x7ee9660) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdCl/XrdClTaskManager.cc:244; #3 0x00007f93319b2269 in RunRunnerThread (arg=<optimized out>) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdCl/XrdClTaskManager.cc:37; #4 0x00007f9369a50ea5 in start_thread () from /lib64/libpthread.so.0; #5 0x00007f93697799fd in clone () from /lib64/libc.so.6. Thread 2 (Thread 0x7f9331942700 (LWP 8834)):; #0 0x00007f9369779fd3 in epoll_wait () from /lib64/libc.so.6; #1 0x00007f9331b22c17 in XrdSys::IOEvents::PollE::Begin (this=0x7efc120, syncsem=<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7496
https://github.com/root-project/root/issues/7496:4507,Performance,optimiz,optimized,4507,"4_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdCl/XrdClJobManager.cc:33; #5 0x00007f9369a50ea5 in start_thread () from /lib64/libpthread.so.0; #6 0x00007f93697799fd in clone () from /lib64/libc.so.6. Thread 3 (Thread 0x7f9331141700 (LWP 8835)):; #0 0x00007f9369a57e9d in nanosleep () from /lib64/libpthread.so.0; #1 0x00007f9331b1dded in XrdSysTimer::Wait (mills=<optimized out>) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdSys/XrdSysTimer.cc:239; #2 0x00007f93319b2118 in XrdCl::TaskManager::RunTasks (this=0x7ee9660) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdCl/XrdClTaskManager.cc:244; #3 0x00007f93319b2269 in RunRunnerThread (arg=<optimized out>) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdCl/XrdClTaskManager.cc:37; #4 0x00007f9369a50ea5 in start_thread () from /lib64/libpthread.so.0; #5 0x00007f93697799fd in clone () from /lib64/libc.so.6. Thread 2 (Thread 0x7f9331942700 (LWP 8834)):; #0 0x00007f9369779fd3 in epoll_wait () from /lib64/libc.so.6; #1 0x00007f9331b22c17 in XrdSys::IOEvents::PollE::Begin (this=0x7efc120, syncsem=<optimized out>, retcode=<optimized out>, eTxt=<optimized out>) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/./XrdSys/XrdSysIOEventsPollE.icc:213; #2 0x00007f9331b1f4f5 in XrdSys::IOEvents::BootStrap::Start (parg=0x7ffe2f5220d0) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdSys/X",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7496
https://github.com/root-project/root/issues/7496:5035,Performance,optimiz,optimized,5035,"ild/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdSys/XrdSysTimer.cc:239; #2 0x00007f93319b2118 in XrdCl::TaskManager::RunTasks (this=0x7ee9660) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdCl/XrdClTaskManager.cc:244; #3 0x00007f93319b2269 in RunRunnerThread (arg=<optimized out>) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdCl/XrdClTaskManager.cc:37; #4 0x00007f9369a50ea5 in start_thread () from /lib64/libpthread.so.0; #5 0x00007f93697799fd in clone () from /lib64/libc.so.6. Thread 2 (Thread 0x7f9331942700 (LWP 8834)):; #0 0x00007f9369779fd3 in epoll_wait () from /lib64/libc.so.6; #1 0x00007f9331b22c17 in XrdSys::IOEvents::PollE::Begin (this=0x7efc120, syncsem=<optimized out>, retcode=<optimized out>, eTxt=<optimized out>) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/./XrdSys/XrdSysIOEventsPollE.icc:213; #2 0x00007f9331b1f4f5 in XrdSys::IOEvents::BootStrap::Start (parg=0x7ffe2f5220d0) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdSys/XrdSysIOEvents.cc:131; #3 0x00007f9331b1d5e8 in XrdSysThread_Xeq (myargs=0x7edce20) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdSys/XrdSysPthread.cc:86; #4 0x00007f9369a50ea5 in start_thread () from /lib64/libpthread.so.0; #5 0x00007f93697799fd in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7f93693e3980 (LWP 5985)):; #0 0x00007f9369740549 in waitpid () from /lib64/libc.so.6; #1 0x00007f93696bdfb2 in do_s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7496
https://github.com/root-project/root/issues/7496:5060,Performance,optimiz,optimized,5060,"ild/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdSys/XrdSysTimer.cc:239; #2 0x00007f93319b2118 in XrdCl::TaskManager::RunTasks (this=0x7ee9660) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdCl/XrdClTaskManager.cc:244; #3 0x00007f93319b2269 in RunRunnerThread (arg=<optimized out>) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdCl/XrdClTaskManager.cc:37; #4 0x00007f9369a50ea5 in start_thread () from /lib64/libpthread.so.0; #5 0x00007f93697799fd in clone () from /lib64/libc.so.6. Thread 2 (Thread 0x7f9331942700 (LWP 8834)):; #0 0x00007f9369779fd3 in epoll_wait () from /lib64/libc.so.6; #1 0x00007f9331b22c17 in XrdSys::IOEvents::PollE::Begin (this=0x7efc120, syncsem=<optimized out>, retcode=<optimized out>, eTxt=<optimized out>) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/./XrdSys/XrdSysIOEventsPollE.icc:213; #2 0x00007f9331b1f4f5 in XrdSys::IOEvents::BootStrap::Start (parg=0x7ffe2f5220d0) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdSys/XrdSysIOEvents.cc:131; #3 0x00007f9331b1d5e8 in XrdSysThread_Xeq (myargs=0x7edce20) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdSys/XrdSysPthread.cc:86; #4 0x00007f9369a50ea5 in start_thread () from /lib64/libpthread.so.0; #5 0x00007f93697799fd in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7f93693e3980 (LWP 5985)):; #0 0x00007f9369740549 in waitpid () from /lib64/libc.so.6; #1 0x00007f93696bdfb2 in do_s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7496
https://github.com/root-project/root/issues/7496:5082,Performance,optimiz,optimized,5082,"ild/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdSys/XrdSysTimer.cc:239; #2 0x00007f93319b2118 in XrdCl::TaskManager::RunTasks (this=0x7ee9660) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdCl/XrdClTaskManager.cc:244; #3 0x00007f93319b2269 in RunRunnerThread (arg=<optimized out>) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdCl/XrdClTaskManager.cc:37; #4 0x00007f9369a50ea5 in start_thread () from /lib64/libpthread.so.0; #5 0x00007f93697799fd in clone () from /lib64/libc.so.6. Thread 2 (Thread 0x7f9331942700 (LWP 8834)):; #0 0x00007f9369779fd3 in epoll_wait () from /lib64/libc.so.6; #1 0x00007f9331b22c17 in XrdSys::IOEvents::PollE::Begin (this=0x7efc120, syncsem=<optimized out>, retcode=<optimized out>, eTxt=<optimized out>) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/./XrdSys/XrdSysIOEventsPollE.icc:213; #2 0x00007f9331b1f4f5 in XrdSys::IOEvents::BootStrap::Start (parg=0x7ffe2f5220d0) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdSys/XrdSysIOEvents.cc:131; #3 0x00007f9331b1d5e8 in XrdSysThread_Xeq (myargs=0x7edce20) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdSys/XrdSysPthread.cc:86; #4 0x00007f9369a50ea5 in start_thread () from /lib64/libpthread.so.0; #5 0x00007f93697799fd in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7f93693e3980 (LWP 5985)):; #0 0x00007f9369740549 in waitpid () from /lib64/libc.so.6; #1 0x00007f93696bdfb2 in do_s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7496
https://github.com/root-project/root/issues/7496:7750,Testability,test,test,7750,"bRIO.so; #7 0x00007f93684dd684 in TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libRIO.so; #8 0x00007f935cc63f51 in TBranchElement::ReadLeavesMember(TBuffer&) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libTree.so; #9 0x00007f935cc56bd4 in TBranch::GetEntry(long long, int) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libTree.so; #10 0x00007f935cc6f4f9 in TBranchElement::GetEntry(long long, int) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libTree.so; #11 0x00007f935ccb5801 in TTree::GetEntry(long long, int) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libTree.so; #12 0x00007f9335473a51 in fitSignalShapeSimul(int*, int, int, int, int, int, double*, double*, double*, double*, double*, double*) () from /afs/cern.ch/user/m/mnadeem/roottut/CMSSW_10_2_5_patch1/src/ZZAnalysis/AnalysisStep/test/CombInputs/fitSignalShapeSimul_C.so; #13 0x00007f933547ba70 in all(int, int, int, int) () from /afs/cern.ch/user/m/mnadeem/roottut/CMSSW_10_2_5_patch1/src/ZZAnalysis/AnalysisStep/test/CombInputs/fitSignalShapeSimul_C.so; #14 0x00007f9334277091 in ?? (); #15 0x0000000100000000 in ?? (); #16 0x00007f933547b720 in ?? () from /afs/cern.ch/user/m/mnadeem/roottut/CMSSW_10_2_5_patch1/src/ZZAnalysis/AnalysisStep/test/CombInputs/fitSignalShapeSimul_C.so; #17 0x000000012f52f130 in ?? (); #18 0x000000000084ad90 in ?? (); #19 0x00007f9365b486b0 in ?? () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libCling.so; #20 0x00007ffe2f52f560 in ?? (); #21 0x00007f9334277000 in ?? (); #22 0x00007f9365acc1d2 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) [clone .part.248] () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libCling.so; #23 0x00007f9365ace8b9 in cling::Interpreter::EvaluateInternal(std::__cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7496
https://github.com/root-project/root/issues/7496:7934,Testability,test,test,7934,"lib/libRIO.so; #8 0x00007f935cc63f51 in TBranchElement::ReadLeavesMember(TBuffer&) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libTree.so; #9 0x00007f935cc56bd4 in TBranch::GetEntry(long long, int) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libTree.so; #10 0x00007f935cc6f4f9 in TBranchElement::GetEntry(long long, int) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libTree.so; #11 0x00007f935ccb5801 in TTree::GetEntry(long long, int) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libTree.so; #12 0x00007f9335473a51 in fitSignalShapeSimul(int*, int, int, int, int, int, double*, double*, double*, double*, double*, double*) () from /afs/cern.ch/user/m/mnadeem/roottut/CMSSW_10_2_5_patch1/src/ZZAnalysis/AnalysisStep/test/CombInputs/fitSignalShapeSimul_C.so; #13 0x00007f933547ba70 in all(int, int, int, int) () from /afs/cern.ch/user/m/mnadeem/roottut/CMSSW_10_2_5_patch1/src/ZZAnalysis/AnalysisStep/test/CombInputs/fitSignalShapeSimul_C.so; #14 0x00007f9334277091 in ?? (); #15 0x0000000100000000 in ?? (); #16 0x00007f933547b720 in ?? () from /afs/cern.ch/user/m/mnadeem/roottut/CMSSW_10_2_5_patch1/src/ZZAnalysis/AnalysisStep/test/CombInputs/fitSignalShapeSimul_C.so; #17 0x000000012f52f130 in ?? (); #18 0x000000000084ad90 in ?? (); #19 0x00007f9365b486b0 in ?? () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libCling.so; #20 0x00007ffe2f52f560 in ?? (); #21 0x00007f9334277000 in ?? (); #22 0x00007f9365acc1d2 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) [clone .part.248] () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libCling.so; #23 0x00007f9365ace8b9 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /cvmfs/cms.cern.ch/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7496
https://github.com/root-project/root/issues/7496:8163,Testability,test,test,8163,") from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libTree.so; #10 0x00007f935cc6f4f9 in TBranchElement::GetEntry(long long, int) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libTree.so; #11 0x00007f935ccb5801 in TTree::GetEntry(long long, int) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libTree.so; #12 0x00007f9335473a51 in fitSignalShapeSimul(int*, int, int, int, int, int, double*, double*, double*, double*, double*, double*) () from /afs/cern.ch/user/m/mnadeem/roottut/CMSSW_10_2_5_patch1/src/ZZAnalysis/AnalysisStep/test/CombInputs/fitSignalShapeSimul_C.so; #13 0x00007f933547ba70 in all(int, int, int, int) () from /afs/cern.ch/user/m/mnadeem/roottut/CMSSW_10_2_5_patch1/src/ZZAnalysis/AnalysisStep/test/CombInputs/fitSignalShapeSimul_C.so; #14 0x00007f9334277091 in ?? (); #15 0x0000000100000000 in ?? (); #16 0x00007f933547b720 in ?? () from /afs/cern.ch/user/m/mnadeem/roottut/CMSSW_10_2_5_patch1/src/ZZAnalysis/AnalysisStep/test/CombInputs/fitSignalShapeSimul_C.so; #17 0x000000012f52f130 in ?? (); #18 0x000000000084ad90 in ?? (); #19 0x00007f9365b486b0 in ?? () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libCling.so; #20 0x00007ffe2f52f560 in ?? (); #21 0x00007f9334277000 in ?? (); #22 0x00007f9365acc1d2 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) [clone .part.248] () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libCling.so; #23 0x00007f9365ace8b9 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libCling.so; #24 0x00007f9365acedcb in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Trans",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7496
https://github.com/root-project/root/issues/7497:73,Modifiability,plugin,plugin,73,"Seems to be, cling/llvm9 have problems to parse OCCI headers.; If oracle plugin enabled, root crashes when running hsimple.C.; Looking in back-trace, one can identify that it crashes by accessing or rebuilding libOracle module.; Most simple way to resolve issue - remove OCCI includes from `TOracle...` header files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7497
https://github.com/root-project/root/issues/7497:186,Security,access,accessing,186,"Seems to be, cling/llvm9 have problems to parse OCCI headers.; If oracle plugin enabled, root crashes when running hsimple.C.; Looking in back-trace, one can identify that it crashes by accessing or rebuilding libOracle module.; Most simple way to resolve issue - remove OCCI includes from `TOracle...` header files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7497
https://github.com/root-project/root/issues/7497:234,Usability,simpl,simple,234,"Seems to be, cling/llvm9 have problems to parse OCCI headers.; If oracle plugin enabled, root crashes when running hsimple.C.; Looking in back-trace, one can identify that it crashes by accessing or rebuilding libOracle module.; Most simple way to resolve issue - remove OCCI includes from `TOracle...` header files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7497
https://github.com/root-project/root/pull/7498:186,Performance,perform,performing,186,"Now that we use the ""collection proxy"" mechanism to write RVecs,; they can still be read back as std::vectors or with TTreeReaderArrays; without issues, which removes the motivation for performing this; type-to-type translation on the fly. Users might notice the change but it should not have any problematic; consequence as RDF and ROOT will still be able to read the RVec; branches written before this commit (without any change in user code; thanks to the ""collection proxy"" mechanism).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7498
https://github.com/root-project/root/pull/7499:30,Modifiability,Extend,Extends,30,"This PR does a few things; 1) Extends the RDF Fill functionality to support arbitrary types and number of columns and an arbitrary mix of individual objects and containers with variadic templates. Note that this will likely result in slower code being generated in case of compiling/jitting without optimization. 2) Adds a HistoND function to RDF to fill a THnD with arbitrary number of dimensions. The main issue here was actually that THnT does not have a publicly accessible copy constructor or assignment operator, which are needed for use with RDF. I didn't have the patience to implement this by hand for all the classes in the inheritance chain, so the relevant classes have been migrated from C-style arrays to std::vector such that default copy (and move) constructors and assignment operators can be automatically generated. 3) Appropriate constructors have been added to allow THnT to be used with variable binning.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:634,Modifiability,inherit,inheritance,634,"This PR does a few things; 1) Extends the RDF Fill functionality to support arbitrary types and number of columns and an arbitrary mix of individual objects and containers with variadic templates. Note that this will likely result in slower code being generated in case of compiling/jitting without optimization. 2) Adds a HistoND function to RDF to fill a THnD with arbitrary number of dimensions. The main issue here was actually that THnT does not have a publicly accessible copy constructor or assignment operator, which are needed for use with RDF. I didn't have the patience to implement this by hand for all the classes in the inheritance chain, so the relevant classes have been migrated from C-style arrays to std::vector such that default copy (and move) constructors and assignment operators can be automatically generated. 3) Appropriate constructors have been added to allow THnT to be used with variable binning.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:909,Modifiability,variab,variable,909,"This PR does a few things; 1) Extends the RDF Fill functionality to support arbitrary types and number of columns and an arbitrary mix of individual objects and containers with variadic templates. Note that this will likely result in slower code being generated in case of compiling/jitting without optimization. 2) Adds a HistoND function to RDF to fill a THnD with arbitrary number of dimensions. The main issue here was actually that THnT does not have a publicly accessible copy constructor or assignment operator, which are needed for use with RDF. I didn't have the patience to implement this by hand for all the classes in the inheritance chain, so the relevant classes have been migrated from C-style arrays to std::vector such that default copy (and move) constructors and assignment operators can be automatically generated. 3) Appropriate constructors have been added to allow THnT to be used with variable binning.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:299,Performance,optimiz,optimization,299,"This PR does a few things; 1) Extends the RDF Fill functionality to support arbitrary types and number of columns and an arbitrary mix of individual objects and containers with variadic templates. Note that this will likely result in slower code being generated in case of compiling/jitting without optimization. 2) Adds a HistoND function to RDF to fill a THnD with arbitrary number of dimensions. The main issue here was actually that THnT does not have a publicly accessible copy constructor or assignment operator, which are needed for use with RDF. I didn't have the patience to implement this by hand for all the classes in the inheritance chain, so the relevant classes have been migrated from C-style arrays to std::vector such that default copy (and move) constructors and assignment operators can be automatically generated. 3) Appropriate constructors have been added to allow THnT to be used with variable binning.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:467,Security,access,accessible,467,"This PR does a few things; 1) Extends the RDF Fill functionality to support arbitrary types and number of columns and an arbitrary mix of individual objects and containers with variadic templates. Note that this will likely result in slower code being generated in case of compiling/jitting without optimization. 2) Adds a HistoND function to RDF to fill a THnD with arbitrary number of dimensions. The main issue here was actually that THnT does not have a publicly accessible copy constructor or assignment operator, which are needed for use with RDF. I didn't have the patience to implement this by hand for all the classes in the inheritance chain, so the relevant classes have been migrated from C-style arrays to std::vector such that default copy (and move) constructors and assignment operators can be automatically generated. 3) Appropriate constructors have been added to allow THnT to be used with variable binning.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/issues/7500:801,Availability,down,downstream,801,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; If attempting to create multiple snapshots simultaneously of some RDF's children nodes, ROOT crashes. This follows up on a discussion in the thread here:; https://root-forum.cern.ch/t/snapshot-shuffles-data-invisibly-with-implicitmt/43473/8?u=nmangane. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Expect that one event loop can be triggered with different nodes (downstream of filters, whether or not they produce exclusive sets of events) writing output to unique files via Snapshot. Without this capability, have to fall back to multiple event loops over extensive amounts of data to separate them into different files, which is not really expected. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; embedded in python script here; I first saw this issue in a more pythonic script (e.g. snapshot options set via cppyy rather than doing everything in the intepreter); ```; import ROOT; ROOT.gInterpreter.ProcessLine(""""""; ROOT::EnableImplicitMT(8);; auto df = ROOT::RDataFrame(10000).Define(""x"", ""rdfentry_"").Define(""y"", ""fabs(rdfentry_ - 5000)"").Define(""z"", ""rdfslot_"");; ROOT::RDF::RSnapshotOptions opts;; opts.fLazy = true;; auto colNames = df.GetColumnNames();; auto c = df.Count();; auto n1 = df.Filter(""x > 2000 && y < 0"").Snapshot(""Events"", ""A.root"", colNames, opts);; auto n4 = df.Filter(""z < 3 && y >= 0"").Snapshot(""Event",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7500
https://github.com/root-project/root/issues/7500:2191,Availability,down,download,2191,"cted behavior; <!--; A clear and concise description of what you expected to happen.; -->; Expect that one event loop can be triggered with different nodes (downstream of filters, whether or not they produce exclusive sets of events) writing output to unique files via Snapshot. Without this capability, have to fall back to multiple event loops over extensive amounts of data to separate them into different files, which is not really expected. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; embedded in python script here; I first saw this issue in a more pythonic script (e.g. snapshot options set via cppyy rather than doing everything in the intepreter); ```; import ROOT; ROOT.gInterpreter.ProcessLine(""""""; ROOT::EnableImplicitMT(8);; auto df = ROOT::RDataFrame(10000).Define(""x"", ""rdfentry_"").Define(""y"", ""fabs(rdfentry_ - 5000)"").Define(""z"", ""rdfslot_"");; ROOT::RDF::RSnapshotOptions opts;; opts.fLazy = true;; auto colNames = df.GetColumnNames();; auto c = df.Count();; auto n1 = df.Filter(""x > 2000 && y < 0"").Snapshot(""Events"", ""A.root"", colNames, opts);; auto n4 = df.Filter(""z < 3 && y >= 0"").Snapshot(""Events"", ""D.root"", colNames);; std::cout << c.GetValue() << std::endl;; """"""); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Any recent root version should behave the same. This was first seen in 6.18, 6.20... now confirmed still present in 6.25 (.../dev3/Sun/... build), as obtained via the LCG stack.; ```; export SCRAM_ARCH=slc7_amd64_gcc830; source /cvmfs/sft.cern.ch/lcg/views/dev3/Sun/x86_64-centos7-gcc8-opt/setup.sh; ```; Reproduced on lxplus (CC7). ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7500
https://github.com/root-project/root/issues/7500:2173,Deployability,install,install,2173,"cted behavior; <!--; A clear and concise description of what you expected to happen.; -->; Expect that one event loop can be triggered with different nodes (downstream of filters, whether or not they produce exclusive sets of events) writing output to unique files via Snapshot. Without this capability, have to fall back to multiple event loops over extensive amounts of data to separate them into different files, which is not really expected. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; embedded in python script here; I first saw this issue in a more pythonic script (e.g. snapshot options set via cppyy rather than doing everything in the intepreter); ```; import ROOT; ROOT.gInterpreter.ProcessLine(""""""; ROOT::EnableImplicitMT(8);; auto df = ROOT::RDataFrame(10000).Define(""x"", ""rdfentry_"").Define(""y"", ""fabs(rdfentry_ - 5000)"").Define(""z"", ""rdfslot_"");; ROOT::RDF::RSnapshotOptions opts;; opts.fLazy = true;; auto colNames = df.GetColumnNames();; auto c = df.Count();; auto n1 = df.Filter(""x > 2000 && y < 0"").Snapshot(""Events"", ""A.root"", colNames, opts);; auto n4 = df.Filter(""z < 3 && y >= 0"").Snapshot(""Events"", ""D.root"", colNames);; std::cout << c.GetValue() << std::endl;; """"""); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Any recent root version should behave the same. This was first seen in 6.18, 6.20... now confirmed still present in 6.25 (.../dev3/Sun/... build), as obtained via the LCG stack.; ```; export SCRAM_ARCH=slc7_amd64_gcc830; source /cvmfs/sft.cern.ch/lcg/views/dev3/Sun/x86_64-centos7-gcc8-opt/setup.sh; ```; Reproduced on lxplus (CC7). ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7500
https://github.com/root-project/root/issues/7500:667,Usability,clear,clear,667,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; If attempting to create multiple snapshots simultaneously of some RDF's children nodes, ROOT crashes. This follows up on a discussion in the thread here:; https://root-forum.cern.ch/t/snapshot-shuffles-data-invisibly-with-implicitmt/43473/8?u=nmangane. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Expect that one event loop can be triggered with different nodes (downstream of filters, whether or not they produce exclusive sets of events) writing output to unique files via Snapshot. Without this capability, have to fall back to multiple event loops over extensive amounts of data to separate them into different files, which is not really expected. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; embedded in python script here; I first saw this issue in a more pythonic script (e.g. snapshot options set via cppyy rather than doing everything in the intepreter); ```; import ROOT; ROOT.gInterpreter.ProcessLine(""""""; ROOT::EnableImplicitMT(8);; auto df = ROOT::RDataFrame(10000).Define(""x"", ""rdfentry_"").Define(""y"", ""fabs(rdfentry_ - 5000)"").Define(""z"", ""rdfslot_"");; ROOT::RDF::RSnapshotOptions opts;; opts.fLazy = true;; auto colNames = df.GetColumnNames();; auto c = df.Count();; auto n1 = df.Filter(""x > 2000 && y < 0"").Snapshot(""Events"", ""A.root"", colNames, opts);; auto n4 = df.Filter(""z < 3 && y >= 0"").Snapshot(""Event",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7500
https://github.com/root-project/root/issues/7501:391,Usability,clear,clear,391,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; C++ class members can be initialized in PyROOT through a constructor but it seems not working through object properties. See details and reproducer in [the forum](https://root-forum.cern.ch/t/problem-initialising-c-class-members-from-pyroot/43970). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; It should be possible to initialize class members through object properties. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; See [forum post]([the forum](https://root-forum.cern.ch/t/problem-initialising-c-class-members-from-pyroot/43970).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7501
https://github.com/root-project/root/issues/7501:738,Usability,clear,clear,738,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; C++ class members can be initialized in PyROOT through a constructor but it seems not working through object properties. See details and reproducer in [the forum](https://root-forum.cern.ch/t/problem-initialising-c-class-members-from-pyroot/43970). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; It should be possible to initialize class members through object properties. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; See [forum post]([the forum](https://root-forum.cern.ch/t/problem-initialising-c-class-members-from-pyroot/43970).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7501
https://github.com/root-project/root/pull/7502:671,Safety,safe,safety,671,"- [x] add ARCHITECTURE.md; - [x] use `fCapacity == -1` to indicate memory-adoption mode; - [x] switch `assert`s to `throw`s; - [x] expose the small buffer size as a template parameter (defaulted to `sizeof(T)*8 > 1024 ? 0 : 8` or similar, see also https://lists.llvm.org/pipermail/llvm-dev/2020-November/146613.html and the way they currently do it in LLVM: https://llvm.org/doxygen/SmallVector_8h_source.html#l01101); - [x] re-check before/after benchmark runtimes (first measurements at https://eguiraud.web.cern.ch/eguiraud/decks/20201112_rvec_redesign_ppp ); - [x] unit test for exceptions thrown during construction or resizing (and add note about lack of exception safety in docs); - [x] confirm that crediting of LLVM is ok (currently only in `math/vecops/ARCHITECTURE.md`)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:131,Security,expose,expose,131,"- [x] add ARCHITECTURE.md; - [x] use `fCapacity == -1` to indicate memory-adoption mode; - [x] switch `assert`s to `throw`s; - [x] expose the small buffer size as a template parameter (defaulted to `sizeof(T)*8 > 1024 ? 0 : 8` or similar, see also https://lists.llvm.org/pipermail/llvm-dev/2020-November/146613.html and the way they currently do it in LLVM: https://llvm.org/doxygen/SmallVector_8h_source.html#l01101); - [x] re-check before/after benchmark runtimes (first measurements at https://eguiraud.web.cern.ch/eguiraud/decks/20201112_rvec_redesign_ppp ); - [x] unit test for exceptions thrown during construction or resizing (and add note about lack of exception safety in docs); - [x] confirm that crediting of LLVM is ok (currently only in `math/vecops/ARCHITECTURE.md`)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:103,Testability,assert,assert,103,"- [x] add ARCHITECTURE.md; - [x] use `fCapacity == -1` to indicate memory-adoption mode; - [x] switch `assert`s to `throw`s; - [x] expose the small buffer size as a template parameter (defaulted to `sizeof(T)*8 > 1024 ? 0 : 8` or similar, see also https://lists.llvm.org/pipermail/llvm-dev/2020-November/146613.html and the way they currently do it in LLVM: https://llvm.org/doxygen/SmallVector_8h_source.html#l01101); - [x] re-check before/after benchmark runtimes (first measurements at https://eguiraud.web.cern.ch/eguiraud/decks/20201112_rvec_redesign_ppp ); - [x] unit test for exceptions thrown during construction or resizing (and add note about lack of exception safety in docs); - [x] confirm that crediting of LLVM is ok (currently only in `math/vecops/ARCHITECTURE.md`)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:447,Testability,benchmark,benchmark,447,"- [x] add ARCHITECTURE.md; - [x] use `fCapacity == -1` to indicate memory-adoption mode; - [x] switch `assert`s to `throw`s; - [x] expose the small buffer size as a template parameter (defaulted to `sizeof(T)*8 > 1024 ? 0 : 8` or similar, see also https://lists.llvm.org/pipermail/llvm-dev/2020-November/146613.html and the way they currently do it in LLVM: https://llvm.org/doxygen/SmallVector_8h_source.html#l01101); - [x] re-check before/after benchmark runtimes (first measurements at https://eguiraud.web.cern.ch/eguiraud/decks/20201112_rvec_redesign_ppp ); - [x] unit test for exceptions thrown during construction or resizing (and add note about lack of exception safety in docs); - [x] confirm that crediting of LLVM is ok (currently only in `math/vecops/ARCHITECTURE.md`)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:574,Testability,test,test,574,"- [x] add ARCHITECTURE.md; - [x] use `fCapacity == -1` to indicate memory-adoption mode; - [x] switch `assert`s to `throw`s; - [x] expose the small buffer size as a template parameter (defaulted to `sizeof(T)*8 > 1024 ? 0 : 8` or similar, see also https://lists.llvm.org/pipermail/llvm-dev/2020-November/146613.html and the way they currently do it in LLVM: https://llvm.org/doxygen/SmallVector_8h_source.html#l01101); - [x] re-check before/after benchmark runtimes (first measurements at https://eguiraud.web.cern.ch/eguiraud/decks/20201112_rvec_redesign_ppp ); - [x] unit test for exceptions thrown during construction or resizing (and add note about lack of exception safety in docs); - [x] confirm that crediting of LLVM is ok (currently only in `math/vecops/ARCHITECTURE.md`)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7506:141,Integrability,inject,injecting,141,"With llvm9, the module ptr gets reset upon emission.; Instead, just look for the symbol in the JIT - where it should be found,; as Init() is injecting it there, and we want to find *that* symbol,; not the one from the binary. Fixes `CodeUnloading/AtExit.C` cling test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7506
https://github.com/root-project/root/pull/7506:141,Security,inject,injecting,141,"With llvm9, the module ptr gets reset upon emission.; Instead, just look for the symbol in the JIT - where it should be found,; as Init() is injecting it there, and we want to find *that* symbol,; not the one from the binary. Fixes `CodeUnloading/AtExit.C` cling test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7506
https://github.com/root-project/root/pull/7506:263,Testability,test,test,263,"With llvm9, the module ptr gets reset upon emission.; Instead, just look for the symbol in the JIT - where it should be found,; as Init() is injecting it there, and we want to find *that* symbol,; not the one from the binary. Fixes `CodeUnloading/AtExit.C` cling test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7506
https://github.com/root-project/root/pull/7509:20,Availability,error,error,20,"I don't understand `error: expected is not a library`, just re-use `error: file not found` when the file doesn't exist, and continue to be helpful (""maybe you meant..."") if the file can be found through `HeaderSearch`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7509
https://github.com/root-project/root/pull/7509:68,Availability,error,error,68,"I don't understand `error: expected is not a library`, just re-use `error: file not found` when the file doesn't exist, and continue to be helpful (""maybe you meant..."") if the file can be found through `HeaderSearch`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7509
https://github.com/root-project/root/pull/7511:68,Integrability,depend,dependencies,68,"pyspark is added to requirements.txt along the other python runtime dependencies. For now it is ignored in `dependency_versions.py` since we already check that pyspark tests can be run in the environment through the `test_distrdf_pyspark` build option. At the same time, on some nodes where `dependency_versions.py` is run (because it's [always activated with the pythonization tests except for windows](https://github.com/root-project/root/blob/296fad253ee07a2e081d68020a9fbf3ad5980a72/bindings/pyroot/pythonizations/test/CMakeLists.txt#L19) ) pyspark could not be present for various reasons. So we resort to using the build option only to check this dependency for now",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7511
https://github.com/root-project/root/pull/7511:653,Integrability,depend,dependency,653,"pyspark is added to requirements.txt along the other python runtime dependencies. For now it is ignored in `dependency_versions.py` since we already check that pyspark tests can be run in the environment through the `test_distrdf_pyspark` build option. At the same time, on some nodes where `dependency_versions.py` is run (because it's [always activated with the pythonization tests except for windows](https://github.com/root-project/root/blob/296fad253ee07a2e081d68020a9fbf3ad5980a72/bindings/pyroot/pythonizations/test/CMakeLists.txt#L19) ) pyspark could not be present for various reasons. So we resort to using the build option only to check this dependency for now",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7511
https://github.com/root-project/root/pull/7511:168,Testability,test,tests,168,"pyspark is added to requirements.txt along the other python runtime dependencies. For now it is ignored in `dependency_versions.py` since we already check that pyspark tests can be run in the environment through the `test_distrdf_pyspark` build option. At the same time, on some nodes where `dependency_versions.py` is run (because it's [always activated with the pythonization tests except for windows](https://github.com/root-project/root/blob/296fad253ee07a2e081d68020a9fbf3ad5980a72/bindings/pyroot/pythonizations/test/CMakeLists.txt#L19) ) pyspark could not be present for various reasons. So we resort to using the build option only to check this dependency for now",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7511
https://github.com/root-project/root/pull/7511:378,Testability,test,tests,378,"pyspark is added to requirements.txt along the other python runtime dependencies. For now it is ignored in `dependency_versions.py` since we already check that pyspark tests can be run in the environment through the `test_distrdf_pyspark` build option. At the same time, on some nodes where `dependency_versions.py` is run (because it's [always activated with the pythonization tests except for windows](https://github.com/root-project/root/blob/296fad253ee07a2e081d68020a9fbf3ad5980a72/bindings/pyroot/pythonizations/test/CMakeLists.txt#L19) ) pyspark could not be present for various reasons. So we resort to using the build option only to check this dependency for now",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7511
https://github.com/root-project/root/pull/7511:518,Testability,test,test,518,"pyspark is added to requirements.txt along the other python runtime dependencies. For now it is ignored in `dependency_versions.py` since we already check that pyspark tests can be run in the environment through the `test_distrdf_pyspark` build option. At the same time, on some nodes where `dependency_versions.py` is run (because it's [always activated with the pythonization tests except for windows](https://github.com/root-project/root/blob/296fad253ee07a2e081d68020a9fbf3ad5980a72/bindings/pyroot/pythonizations/test/CMakeLists.txt#L19) ) pyspark could not be present for various reasons. So we resort to using the build option only to check this dependency for now",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7511
https://github.com/root-project/root/issues/7518:419,Availability,error,error,419,"Cling has already basic support for CUDA: ; The CUDA mode is enable by `cling -xcuda`. A option for root is missing. I tried to start `root.exe` in CUDA mode with the following command: `EXTRA_CLING_ARGS=""-xcuda --cuda-path=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35"" root.exe`. However, the initialization process failed with an error that does not crash root itself. ```C++; $ EXTRA_CLING_ARGS=""-xcuda --cuda-path=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35"" root.exe; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:49:40: error: reference to __device__ function '__nvvm_vote_all' in __host__ function; __DEVICE__ int __all(int __a) { return __nvvm_vote_all(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:49:40: note: '__nvvm_vote_all' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: error: reference to __device__ function '__nvvm_vote_any' in __host__ function; __DEVICE__ int __any(int __a) { return __nvvm_vote_any(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: note: '__nvvm_vote_any' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:51:52: error: reference to __device__ function '__nvvm_vote_ballot' in __host__ function; __DEVICE__ unsigned int __ballot(int __a) { return __nvvm_vote_ballot(__a); }; ^; cling: /home/seh",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:948,Availability,error,error,948,"ode is enable by `cling -xcuda`. A option for root is missing. I tried to start `root.exe` in CUDA mode with the following command: `EXTRA_CLING_ARGS=""-xcuda --cuda-path=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35"" root.exe`. However, the initialization process failed with an error that does not crash root itself. ```C++; $ EXTRA_CLING_ARGS=""-xcuda --cuda-path=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35"" root.exe; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:49:40: error: reference to __device__ function '__nvvm_vote_all' in __host__ function; __DEVICE__ int __all(int __a) { return __nvvm_vote_all(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:49:40: note: '__nvvm_vote_all' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: error: reference to __device__ function '__nvvm_vote_any' in __host__ function; __DEVICE__ int __any(int __a) { return __nvvm_vote_any(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: note: '__nvvm_vote_any' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:51:52: error: reference to __device__ function '__nvvm_vote_ballot' in __host__ function; __DEVICE__ unsigned int __ballot(int __a) { return __nvvm_vote_ballot(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/cla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:1384,Availability,error,error,1384,"da --cuda-path=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35"" root.exe; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:49:40: error: reference to __device__ function '__nvvm_vote_all' in __host__ function; __DEVICE__ int __all(int __a) { return __nvvm_vote_all(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:49:40: note: '__nvvm_vote_all' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: error: reference to __device__ function '__nvvm_vote_any' in __host__ function; __DEVICE__ int __any(int __a) { return __nvvm_vote_any(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: note: '__nvvm_vote_any' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:51:52: error: reference to __device__ function '__nvvm_vote_ballot' in __host__ function; __DEVICE__ unsigned int __ballot(int __a) { return __nvvm_vote_ballot(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:51:52: note: '__nvvm_vote_ballot' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:69:18: error: static declaration of '__cosf' follows non-static declaration; __DEVICE__ float __cosf(float __a) { return __nv_fast_cosf(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls.h:62:1: note: previo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:1820,Availability,error,error,1820,"ons.h:49:40: error: reference to __device__ function '__nvvm_vote_all' in __host__ function; __DEVICE__ int __all(int __a) { return __nvvm_vote_all(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:49:40: note: '__nvvm_vote_all' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: error: reference to __device__ function '__nvvm_vote_any' in __host__ function; __DEVICE__ int __any(int __a) { return __nvvm_vote_any(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: note: '__nvvm_vote_any' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:51:52: error: reference to __device__ function '__nvvm_vote_ballot' in __host__ function; __DEVICE__ unsigned int __ballot(int __a) { return __nvvm_vote_ballot(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:51:52: note: '__nvvm_vote_ballot' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:69:18: error: static declaration of '__cosf' follows non-static declaration; __DEVICE__ float __cosf(float __a) { return __nv_fast_cosf(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls.h:62:1: note: previous declaration is here; __MATHCALL_VEC (cos,, (_Mdouble_ __x));; ^; /usr/include/math.h:266:3: note: expanded from macro '__MATHCALL_VEC'; __MATHCALL (function, suffix, args); ^; /usr/include/math.h:273:3: note: expanded from macro '__MATHCALL'; __MATHDECL (_Mdouble_,function,suffix, args); ^; /usr/include/math.h:276:3: note: expanded from macro '__MATHDECL'; __MATHDECL_1(type, __CONCAT(__,function),suffix, args); ^; /usr/include/math.h:283:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:2277,Availability,error,error,2277,"tions.h:50:40: error: reference to __device__ function '__nvvm_vote_any' in __host__ function; __DEVICE__ int __any(int __a) { return __nvvm_vote_any(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: note: '__nvvm_vote_any' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:51:52: error: reference to __device__ function '__nvvm_vote_ballot' in __host__ function; __DEVICE__ unsigned int __ballot(int __a) { return __nvvm_vote_ballot(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:51:52: note: '__nvvm_vote_ballot' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:69:18: error: static declaration of '__cosf' follows non-static declaration; __DEVICE__ float __cosf(float __a) { return __nv_fast_cosf(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls.h:62:1: note: previous declaration is here; __MATHCALL_VEC (cos,, (_Mdouble_ __x));; ^; /usr/include/math.h:266:3: note: expanded from macro '__MATHCALL_VEC'; __MATHCALL (function, suffix, args); ^; /usr/include/math.h:273:3: note: expanded from macro '__MATHCALL'; __MATHDECL (_Mdouble_,function,suffix, args); ^; /usr/include/math.h:276:3: note: expanded from macro '__MATHDECL'; __MATHDECL_1(type, __CONCAT(__,function),suffix, args); ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr/include/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:180:1: note: expanded from here; __cosf; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:3524,Availability,error,error,3524,"L_VEC'; __MATHCALL (function, suffix, args); ^; /usr/include/math.h:273:3: note: expanded from macro '__MATHCALL'; __MATHDECL (_Mdouble_,function,suffix, args); ^; /usr/include/math.h:276:3: note: expanded from macro '__MATHDECL'; __MATHDECL_1(type, __CONCAT(__,function),suffix, args); ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr/include/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:180:1: note: expanded from here; __cosf; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:71:10: error: reference to __device__ function '__nvvm_atom_add_gen_d' in __host__ function; return __nvvm_atom_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:71:10: note: '__nvvm_atom_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:74:10: error: reference to __device__ function '__nvvm_atom_cta_add_gen_d' in __host__ function; return __nvvm_atom_cta_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:74:10: note: '__nvvm_atom_cta_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:77:10: error: reference to __device__ function '__nvvm_atom_sys_add_gen_d' in __host__ function; return __nvvm_atom_sys_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:3949,Availability,error,error,3949,"clude/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:180:1: note: expanded from here; __cosf; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:71:10: error: reference to __device__ function '__nvvm_atom_add_gen_d' in __host__ function; return __nvvm_atom_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:71:10: note: '__nvvm_atom_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:74:10: error: reference to __device__ function '__nvvm_atom_cta_add_gen_d' in __host__ function; return __nvvm_atom_cta_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:74:10: note: '__nvvm_atom_cta_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:77:10: error: reference to __device__ function '__nvvm_atom_sys_add_gen_d' in __host__ function; return __nvvm_atom_sys_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:77:10: note: '__nvvm_atom_sys_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:192:18: error: static declaration of '__exp10f' follows non-static declaration; __DEVICE__ float __exp10f(float __a) { return __nv_fast_exp10f(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls.h:114:1: note: previous decl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:4386,Availability,error,error,4386,"clang_cuda_device_functions.h:71:10: error: reference to __device__ function '__nvvm_atom_add_gen_d' in __host__ function; return __nvvm_atom_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:71:10: note: '__nvvm_atom_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:74:10: error: reference to __device__ function '__nvvm_atom_cta_add_gen_d' in __host__ function; return __nvvm_atom_cta_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:74:10: note: '__nvvm_atom_cta_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:77:10: error: reference to __device__ function '__nvvm_atom_sys_add_gen_d' in __host__ function; return __nvvm_atom_sys_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:77:10: note: '__nvvm_atom_sys_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:192:18: error: static declaration of '__exp10f' follows non-static declaration; __DEVICE__ float __exp10f(float __a) { return __nv_fast_exp10f(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls.h:114:1: note: previous declaration is here; __MATHCALL (exp10,, (_Mdouble_ __x));; ^; /usr/include/math.h:273:3: note: expanded from macro '__MATHCALL'; __MATHDECL (_Mdouble_,function,suffix, args); ^; /usr/include/math.h:276:3: note: expanded from macro '__MATHDECL'; __MATHDECL_1(type, __CONCAT(__,function),suffix, args); ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:4824,Availability,error,error,4824,"cuda_device_functions.h:74:10: error: reference to __device__ function '__nvvm_atom_cta_add_gen_d' in __host__ function; return __nvvm_atom_cta_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:74:10: note: '__nvvm_atom_cta_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:77:10: error: reference to __device__ function '__nvvm_atom_sys_add_gen_d' in __host__ function; return __nvvm_atom_sys_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:77:10: note: '__nvvm_atom_sys_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:192:18: error: static declaration of '__exp10f' follows non-static declaration; __DEVICE__ float __exp10f(float __a) { return __nv_fast_exp10f(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls.h:114:1: note: previous declaration is here; __MATHCALL (exp10,, (_Mdouble_ __x));; ^; /usr/include/math.h:273:3: note: expanded from macro '__MATHCALL'; __MATHDECL (_Mdouble_,function,suffix, args); ^; /usr/include/math.h:276:3: note: expanded from macro '__MATHDECL'; __MATHDECL_1(type, __CONCAT(__,function),suffix, args); ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr/include/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:237:1: note: expanded from here; __exp10f; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:5968,Availability,error,error,5968,"is here; __MATHCALL (exp10,, (_Mdouble_ __x));; ^; /usr/include/math.h:273:3: note: expanded from macro '__MATHCALL'; __MATHDECL (_Mdouble_,function,suffix, args); ^; /usr/include/math.h:276:3: note: expanded from macro '__MATHDECL'; __MATHDECL_1(type, __CONCAT(__,function),suffix, args); ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr/include/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:237:1: note: expanded from here; __exp10f; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:193:18: error: static declaration of '__expf' follows non-static declaration; __DEVICE__ float __expf(float __a) { return __nv_fast_expf(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls.h:95:1: note: previous declaration is here; __MATHCALL_VEC (exp,, (_Mdouble_ __x));; ^; /usr/include/math.h:266:3: note: expanded from macro '__MATHCALL_VEC'; __MATHCALL (function, suffix, args); ^; /usr/include/math.h:273:3: note: expanded from macro '__MATHCALL'; __MATHDECL (_Mdouble_,function,suffix, args); ^; /usr/include/math.h:276:3: note: expanded from macro '__MATHDECL'; __MATHDECL_1(type, __CONCAT(__,function),suffix, args); ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr/include/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:216:1: note: expanded from here; __expf; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:7216,Availability,error,error,7216,"_VEC'; __MATHCALL (function, suffix, args); ^; /usr/include/math.h:273:3: note: expanded from macro '__MATHCALL'; __MATHDECL (_Mdouble_,function,suffix, args); ^; /usr/include/math.h:276:3: note: expanded from macro '__MATHDECL'; __MATHDECL_1(type, __CONCAT(__,function),suffix, args); ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr/include/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:216:1: note: expanded from here; __expf; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:195:10: error: reference to __device__ function '__nvvm_atom_add_gen_f' in __host__ function; return __nvvm_atom_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:195:10: note: '__nvvm_atom_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:198:10: error: reference to __device__ function '__nvvm_atom_cta_add_gen_f' in __host__ function; return __nvvm_atom_cta_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:198:10: note: '__nvvm_atom_cta_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:201:10: error: reference to __device__ function '__nvvm_atom_sys_add_gen_f' in __host__ function; return __nvvm_atom_sys_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:7643,Availability,error,error,7643,"de/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:216:1: note: expanded from here; __expf; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:195:10: error: reference to __device__ function '__nvvm_atom_add_gen_f' in __host__ function; return __nvvm_atom_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:195:10: note: '__nvvm_atom_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:198:10: error: reference to __device__ function '__nvvm_atom_cta_add_gen_f' in __host__ function; return __nvvm_atom_cta_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:198:10: note: '__nvvm_atom_cta_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:201:10: error: reference to __device__ function '__nvvm_atom_sys_add_gen_f' in __host__ function; return __nvvm_atom_sys_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:201:10: note: '__nvvm_atom_sys_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:205:7: error: reference to __device__ function '__nvvm_atom_xchg_gen_i' in __host__ function; __nvvm_atom_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:8082,Availability,error,error,8082,"_cuda_device_functions.h:195:10: error: reference to __device__ function '__nvvm_atom_add_gen_f' in __host__ function; return __nvvm_atom_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:195:10: note: '__nvvm_atom_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:198:10: error: reference to __device__ function '__nvvm_atom_cta_add_gen_f' in __host__ function; return __nvvm_atom_cta_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:198:10: note: '__nvvm_atom_cta_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:201:10: error: reference to __device__ function '__nvvm_atom_sys_add_gen_f' in __host__ function; return __nvvm_atom_sys_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:201:10: note: '__nvvm_atom_sys_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:205:7: error: reference to __device__ function '__nvvm_atom_xchg_gen_i' in __host__ function; __nvvm_atom_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:205:7: note: '__nvvm_atom_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:209:7: error: reference to __device__ function '__nvvm_atom_cta_xchg_gen_i' in __host__ function; __nvvm_atom_cta_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:8520,Availability,error,error,8520,"ions.h:198:10: error: reference to __device__ function '__nvvm_atom_cta_add_gen_f' in __host__ function; return __nvvm_atom_cta_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:198:10: note: '__nvvm_atom_cta_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:201:10: error: reference to __device__ function '__nvvm_atom_sys_add_gen_f' in __host__ function; return __nvvm_atom_sys_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:201:10: note: '__nvvm_atom_sys_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:205:7: error: reference to __device__ function '__nvvm_atom_xchg_gen_i' in __host__ function; __nvvm_atom_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:205:7: note: '__nvvm_atom_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:209:7: error: reference to __device__ function '__nvvm_atom_cta_xchg_gen_i' in __host__ function; __nvvm_atom_cta_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:209:7: note: '__nvvm_atom_cta_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:213:7: error: reference to __device__ function '__nvvm_atom_sys_xchg_gen_i' in __host__ function; __nvvm_atom_sys_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-projec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:8968,Availability,error,error,8968,": error: reference to __device__ function '__nvvm_atom_sys_add_gen_f' in __host__ function; return __nvvm_atom_sys_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:201:10: note: '__nvvm_atom_sys_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:205:7: error: reference to __device__ function '__nvvm_atom_xchg_gen_i' in __host__ function; __nvvm_atom_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:205:7: note: '__nvvm_atom_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:209:7: error: reference to __device__ function '__nvvm_atom_cta_xchg_gen_i' in __host__ function; __nvvm_atom_cta_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:209:7: note: '__nvvm_atom_cta_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:213:7: error: reference to __device__ function '__nvvm_atom_sys_xchg_gen_i' in __host__ function; __nvvm_atom_sys_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:213:7: note: '__nvvm_atom_sys_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:244:16: error: static declaration of '__finite' follows non-static declaration; __DEVICE__ int __finite(double __a) { return __nv_isfinited(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:9428,Availability,error,error,9428,"__device__ function '__nvvm_atom_xchg_gen_i' in __host__ function; __nvvm_atom_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:205:7: note: '__nvvm_atom_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:209:7: error: reference to __device__ function '__nvvm_atom_cta_xchg_gen_i' in __host__ function; __nvvm_atom_cta_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:209:7: note: '__nvvm_atom_cta_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:213:7: error: reference to __device__ function '__nvvm_atom_sys_xchg_gen_i' in __host__ function; __nvvm_atom_sys_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:213:7: note: '__nvvm_atom_sys_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:244:16: error: static declaration of '__finite' follows non-static declaration; __DEVICE__ int __finite(double __a) { return __nv_isfinited(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:33:20: note: previous declaration is here; __MATHDECL_1 (int, __finite,, (_Mdouble_ __value)) __attribute__ ((__const__));; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:245:16: error: st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:9889,Availability,error,error,9889,"device__ function '__nvvm_atom_cta_xchg_gen_i' in __host__ function; __nvvm_atom_cta_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:209:7: note: '__nvvm_atom_cta_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:213:7: error: reference to __device__ function '__nvvm_atom_sys_xchg_gen_i' in __host__ function; __nvvm_atom_sys_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:213:7: note: '__nvvm_atom_sys_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:244:16: error: static declaration of '__finite' follows non-static declaration; __DEVICE__ int __finite(double __a) { return __nv_isfinited(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:33:20: note: previous declaration is here; __MATHDECL_1 (int, __finite,, (_Mdouble_ __value)) __attribute__ ((__const__));; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:245:16: error: static declaration of '__finitef' follows non-static declaration; __DEVICE__ int __finitef(float __a) { return __nv_finitef(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:33:1: note: previous declaration is here; __MATHDECL_1 (int, __finite,, (_Mdouble_ __value)) __attribute__ ((__const__));; ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:10532,Availability,error,error,10532,"stall/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:213:7: note: '__nvvm_atom_sys_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:244:16: error: static declaration of '__finite' follows non-static declaration; __DEVICE__ int __finite(double __a) { return __nv_isfinited(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:33:20: note: previous declaration is here; __MATHDECL_1 (int, __finite,, (_Mdouble_ __value)) __attribute__ ((__const__));; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:245:16: error: static declaration of '__finitef' follows non-static declaration; __DEVICE__ int __finitef(float __a) { return __nv_finitef(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:33:1: note: previous declaration is here; __MATHDECL_1 (int, __finite,, (_Mdouble_ __value)) __attribute__ ((__const__));; ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr/include/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:160:1: note: expanded from here; __finitef; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:359:10: error: reference to __device__ function '__nvvm_atom_add_gen_i' in __host__ function; return __nvvm_atom_add_gen_i(__p, __v);; ^; cling: /home/s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:11489,Availability,error,error,11489,"tatic declaration; __DEVICE__ int __finitef(float __a) { return __nv_finitef(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:33:1: note: previous declaration is here; __MATHDECL_1 (int, __finite,, (_Mdouble_ __value)) __attribute__ ((__const__));; ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr/include/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:160:1: note: expanded from here; __finitef; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:359:10: error: reference to __device__ function '__nvvm_atom_add_gen_i' in __host__ function; return __nvvm_atom_add_gen_i(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:359:10: note: '__nvvm_atom_add_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:362:3: error: reference to __device__ function '__nvvm_atom_cta_add_gen_i' in __host__ function; __nvvm_atom_cta_add_gen_i(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:362:3: note: '__nvvm_atom_cta_add_gen_i' declared here; cling: fatal error: too many errors emitted, stopping now [-ferror-limit=]; cling: In file included from input_line_4:36:; In file included from /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-9.3.0/gcc-10.2.0-nd7xsa2anuya7be46rjsaxbiobtgguod/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../include/c++/10.2.0/cassert:44:; In file included from /home/sehrig/w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:11915,Availability,error,error,11915,"ude/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:160:1: note: expanded from here; __finitef; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:359:10: error: reference to __device__ function '__nvvm_atom_add_gen_i' in __host__ function; return __nvvm_atom_add_gen_i(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:359:10: note: '__nvvm_atom_add_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:362:3: error: reference to __device__ function '__nvvm_atom_cta_add_gen_i' in __host__ function; __nvvm_atom_cta_add_gen_i(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:362:3: note: '__nvvm_atom_cta_add_gen_i' declared here; cling: fatal error: too many errors emitted, stopping now [-ferror-limit=]; cling: In file included from input_line_4:36:; In file included from /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-9.3.0/gcc-10.2.0-nd7xsa2anuya7be46rjsaxbiobtgguod/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../include/c++/10.2.0/cassert:44:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/assert.h:8:; /usr/include/assert.h:69:13: error: exception specification in declaration does not match previous declaration; extern void __assert_fail (const char *__assertion, const char *__file,; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:349:31: note: previous declaration is here; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:12233,Availability,error,error,12233,"t-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:359:10: error: reference to __device__ function '__nvvm_atom_add_gen_i' in __host__ function; return __nvvm_atom_add_gen_i(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:359:10: note: '__nvvm_atom_add_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:362:3: error: reference to __device__ function '__nvvm_atom_cta_add_gen_i' in __host__ function; __nvvm_atom_cta_add_gen_i(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:362:3: note: '__nvvm_atom_cta_add_gen_i' declared here; cling: fatal error: too many errors emitted, stopping now [-ferror-limit=]; cling: In file included from input_line_4:36:; In file included from /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-9.3.0/gcc-10.2.0-nd7xsa2anuya7be46rjsaxbiobtgguod/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../include/c++/10.2.0/cassert:44:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/assert.h:8:; /usr/include/assert.h:69:13: error: exception specification in declaration does not match previous declaration; extern void __assert_fail (const char *__assertion, const char *__file,; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:349:31: note: previous declaration is here; __device__ static inline void __assert_fail(const char *__message,; ^; cling-ptx: Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:2:19: error: explicit specialization of undeclared template class 'complex'; template <> ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:12249,Availability,error,errors,12249,"t-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:359:10: error: reference to __device__ function '__nvvm_atom_add_gen_i' in __host__ function; return __nvvm_atom_add_gen_i(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:359:10: note: '__nvvm_atom_add_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:362:3: error: reference to __device__ function '__nvvm_atom_cta_add_gen_i' in __host__ function; __nvvm_atom_cta_add_gen_i(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:362:3: note: '__nvvm_atom_cta_add_gen_i' declared here; cling: fatal error: too many errors emitted, stopping now [-ferror-limit=]; cling: In file included from input_line_4:36:; In file included from /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-9.3.0/gcc-10.2.0-nd7xsa2anuya7be46rjsaxbiobtgguod/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../include/c++/10.2.0/cassert:44:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/assert.h:8:; /usr/include/assert.h:69:13: error: exception specification in declaration does not match previous declaration; extern void __assert_fail (const char *__assertion, const char *__file,; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:349:31: note: previous declaration is here; __device__ static inline void __assert_fail(const char *__message,; ^; cling-ptx: Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:2:19: error: explicit specialization of undeclared template class 'complex'; template <> ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:12693,Availability,error,error,12693,"hrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:362:3: error: reference to __device__ function '__nvvm_atom_cta_add_gen_i' in __host__ function; __nvvm_atom_cta_add_gen_i(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:362:3: note: '__nvvm_atom_cta_add_gen_i' declared here; cling: fatal error: too many errors emitted, stopping now [-ferror-limit=]; cling: In file included from input_line_4:36:; In file included from /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-9.3.0/gcc-10.2.0-nd7xsa2anuya7be46rjsaxbiobtgguod/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../include/c++/10.2.0/cassert:44:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/assert.h:8:; /usr/include/assert.h:69:13: error: exception specification in declaration does not match previous declaration; extern void __assert_fail (const char *__assertion, const char *__file,; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:349:31: note: previous declaration is here; __device__ static inline void __assert_fail(const char *__message,; ^; cling-ptx: Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:2:19: error: explicit specialization of undeclared template class 'complex'; template <> class complex<float>;; ^ ~~~~~~~; cling-ptx: Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:3:19: error: explicit specialization of non-template class 'complex'; template <> class complex<double>;; ^ ~~~~~~~~; IncrementalCUDADeviceCompiler::declare(); failed at compile ptx code; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:13198,Availability,error,error,13198,"ng: In file included from input_line_4:36:; In file included from /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-9.3.0/gcc-10.2.0-nd7xsa2anuya7be46rjsaxbiobtgguod/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../include/c++/10.2.0/cassert:44:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/assert.h:8:; /usr/include/assert.h:69:13: error: exception specification in declaration does not match previous declaration; extern void __assert_fail (const char *__assertion, const char *__file,; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:349:31: note: previous declaration is here; __device__ static inline void __assert_fail(const char *__message,; ^; cling-ptx: Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:2:19: error: explicit specialization of undeclared template class 'complex'; template <> class complex<float>;; ^ ~~~~~~~; cling-ptx: Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:3:19: error: explicit specialization of non-template class 'complex'; template <> class complex<double>;; ^ ~~~~~~~~; IncrementalCUDADeviceCompiler::declare(); failed at compile ptx code; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Mar 05 2021, 17:50:00 |; | From heads/master@v6-23-01-RF-binSampling-1125-gd3d7cf0bb6 |; | With g++ (Spack GCC) 10.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] cudaGetLastError(); IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime6gClingE' unresolved while linking [cling interface function]!; You are probably missing the definition of cling::runtime::gCling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:13429,Availability,error,error,13429," included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/assert.h:8:; /usr/include/assert.h:69:13: error: exception specification in declaration does not match previous declaration; extern void __assert_fail (const char *__assertion, const char *__file,; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:349:31: note: previous declaration is here; __device__ static inline void __assert_fail(const char *__message,; ^; cling-ptx: Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:2:19: error: explicit specialization of undeclared template class 'complex'; template <> class complex<float>;; ^ ~~~~~~~; cling-ptx: Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:3:19: error: explicit specialization of non-template class 'complex'; template <> class complex<double>;; ^ ~~~~~~~~; IncrementalCUDADeviceCompiler::declare(); failed at compile ptx code; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Mar 05 2021, 17:50:00 |; | From heads/master@v6-23-01-RF-binSampling-1125-gd3d7cf0bb6 |; | With g++ (Spack GCC) 10.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] cudaGetLastError(); IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime6gClingE' unresolved while linking [cling interface function]!; You are probably missing the definition of cling::runtime::gCling; Maybe you need to load the corresponding shared library?; root [1]; ```; A really interesting observation is that `root.exe` includes and links to the CUDA SDK by default when it is available. ```C++; $ root.exe ; -----------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:14484,Availability,avail,available,14484,": Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:3:19: error: explicit specialization of non-template class 'complex'; template <> class complex<double>;; ^ ~~~~~~~~; IncrementalCUDADeviceCompiler::declare(); failed at compile ptx code; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Mar 05 2021, 17:50:00 |; | From heads/master@v6-23-01-RF-binSampling-1125-gd3d7cf0bb6 |; | With g++ (Spack GCC) 10.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] cudaGetLastError(); IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime6gClingE' unresolved while linking [cling interface function]!; You are probably missing the definition of cling::runtime::gCling; Maybe you need to load the corresponding shared library?; root [1]; ```; A really interesting observation is that `root.exe` includes and links to the CUDA SDK by default when it is available. ```C++; $ root.exe ; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Mar 05 2021, 17:50:00 |; | From heads/master@v6-23-01-RF-binSampling-1125-gd3d7cf0bb6 |; | With g++ (Spack GCC) 10.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] cudaGetLastError(); (cudaError_t) (cudaSuccess) : (unsigned int) 0; root [1] ; ``` ; I think this is related to TMVA using the CUDA library. Unfortunately this is not enough, because without `-xcuda` root cannot compile CUDA specific things like kernel ( `__global__ void kernel(){}`). ### Environment. * Ubuntu 20.04.2; * GCC 10.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:750,Deployability,install,install,750,"Cling has already basic support for CUDA: ; The CUDA mode is enable by `cling -xcuda`. A option for root is missing. I tried to start `root.exe` in CUDA mode with the following command: `EXTRA_CLING_ARGS=""-xcuda --cuda-path=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35"" root.exe`. However, the initialization process failed with an error that does not crash root itself. ```C++; $ EXTRA_CLING_ARGS=""-xcuda --cuda-path=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35"" root.exe; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:49:40: error: reference to __device__ function '__nvvm_vote_all' in __host__ function; __DEVICE__ int __all(int __a) { return __nvvm_vote_all(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:49:40: note: '__nvvm_vote_all' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: error: reference to __device__ function '__nvvm_vote_any' in __host__ function; __DEVICE__ int __any(int __a) { return __nvvm_vote_any(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: note: '__nvvm_vote_any' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:51:52: error: reference to __device__ function '__nvvm_vote_ballot' in __host__ function; __DEVICE__ unsigned int __ballot(int __a) { return __nvvm_vote_ballot(__a); }; ^; cling: /home/seh",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:866,Deployability,install,install,866,"Cling has already basic support for CUDA: ; The CUDA mode is enable by `cling -xcuda`. A option for root is missing. I tried to start `root.exe` in CUDA mode with the following command: `EXTRA_CLING_ARGS=""-xcuda --cuda-path=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35"" root.exe`. However, the initialization process failed with an error that does not crash root itself. ```C++; $ EXTRA_CLING_ARGS=""-xcuda --cuda-path=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35"" root.exe; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:49:40: error: reference to __device__ function '__nvvm_vote_all' in __host__ function; __DEVICE__ int __all(int __a) { return __nvvm_vote_all(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:49:40: note: '__nvvm_vote_all' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: error: reference to __device__ function '__nvvm_vote_any' in __host__ function; __DEVICE__ int __any(int __a) { return __nvvm_vote_any(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: note: '__nvvm_vote_any' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:51:52: error: reference to __device__ function '__nvvm_vote_ballot' in __host__ function; __DEVICE__ unsigned int __ballot(int __a) { return __nvvm_vote_ballot(__a); }; ^; cling: /home/seh",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:1138,Deployability,install,install,1138,"ode is enable by `cling -xcuda`. A option for root is missing. I tried to start `root.exe` in CUDA mode with the following command: `EXTRA_CLING_ARGS=""-xcuda --cuda-path=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35"" root.exe`. However, the initialization process failed with an error that does not crash root itself. ```C++; $ EXTRA_CLING_ARGS=""-xcuda --cuda-path=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35"" root.exe; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:49:40: error: reference to __device__ function '__nvvm_vote_all' in __host__ function; __DEVICE__ int __all(int __a) { return __nvvm_vote_all(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:49:40: note: '__nvvm_vote_all' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: error: reference to __device__ function '__nvvm_vote_any' in __host__ function; __DEVICE__ int __any(int __a) { return __nvvm_vote_any(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: note: '__nvvm_vote_any' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:51:52: error: reference to __device__ function '__nvvm_vote_ballot' in __host__ function; __DEVICE__ unsigned int __ballot(int __a) { return __nvvm_vote_ballot(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/cla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:1302,Deployability,install,install,1302,"512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35"" root.exe`. However, the initialization process failed with an error that does not crash root itself. ```C++; $ EXTRA_CLING_ARGS=""-xcuda --cuda-path=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35"" root.exe; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:49:40: error: reference to __device__ function '__nvvm_vote_all' in __host__ function; __DEVICE__ int __all(int __a) { return __nvvm_vote_all(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:49:40: note: '__nvvm_vote_all' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: error: reference to __device__ function '__nvvm_vote_any' in __host__ function; __DEVICE__ int __any(int __a) { return __nvvm_vote_any(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: note: '__nvvm_vote_any' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:51:52: error: reference to __device__ function '__nvvm_vote_ballot' in __host__ function; __DEVICE__ unsigned int __ballot(int __a) { return __nvvm_vote_ballot(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:51:52: note: '__nvvm_vote_ballot' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:69",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:1574,Deployability,install,install,1574,"da --cuda-path=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35"" root.exe; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:49:40: error: reference to __device__ function '__nvvm_vote_all' in __host__ function; __DEVICE__ int __all(int __a) { return __nvvm_vote_all(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:49:40: note: '__nvvm_vote_all' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: error: reference to __device__ function '__nvvm_vote_any' in __host__ function; __DEVICE__ int __any(int __a) { return __nvvm_vote_any(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: note: '__nvvm_vote_any' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:51:52: error: reference to __device__ function '__nvvm_vote_ballot' in __host__ function; __DEVICE__ unsigned int __ballot(int __a) { return __nvvm_vote_ballot(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:51:52: note: '__nvvm_vote_ballot' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:69:18: error: static declaration of '__cosf' follows non-static declaration; __DEVICE__ float __cosf(float __a) { return __nv_fast_cosf(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls.h:62:1: note: previo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:1738,Deployability,install,install,1738," from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:49:40: error: reference to __device__ function '__nvvm_vote_all' in __host__ function; __DEVICE__ int __all(int __a) { return __nvvm_vote_all(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:49:40: note: '__nvvm_vote_all' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: error: reference to __device__ function '__nvvm_vote_any' in __host__ function; __DEVICE__ int __any(int __a) { return __nvvm_vote_any(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: note: '__nvvm_vote_any' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:51:52: error: reference to __device__ function '__nvvm_vote_ballot' in __host__ function; __DEVICE__ unsigned int __ballot(int __a) { return __nvvm_vote_ballot(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:51:52: note: '__nvvm_vote_ballot' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:69:18: error: static declaration of '__cosf' follows non-static declaration; __DEVICE__ float __cosf(float __a) { return __nv_fast_cosf(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls.h:62:1: note: previous declaration is here; __MATHCALL_VEC (cos,, (_Mdouble_ __x));; ^; /usr/include/math.h:266:3: note: expanded from macro '__MATHCALL_VEC'; __MATHCALL (function, suffix, args); ^; /usr/include/math.h:273:3: note: expand",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:2028,Deployability,install,install,2028,"ons.h:49:40: error: reference to __device__ function '__nvvm_vote_all' in __host__ function; __DEVICE__ int __all(int __a) { return __nvvm_vote_all(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:49:40: note: '__nvvm_vote_all' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: error: reference to __device__ function '__nvvm_vote_any' in __host__ function; __DEVICE__ int __any(int __a) { return __nvvm_vote_any(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: note: '__nvvm_vote_any' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:51:52: error: reference to __device__ function '__nvvm_vote_ballot' in __host__ function; __DEVICE__ unsigned int __ballot(int __a) { return __nvvm_vote_ballot(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:51:52: note: '__nvvm_vote_ballot' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:69:18: error: static declaration of '__cosf' follows non-static declaration; __DEVICE__ float __cosf(float __a) { return __nv_fast_cosf(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls.h:62:1: note: previous declaration is here; __MATHCALL_VEC (cos,, (_Mdouble_ __x));; ^; /usr/include/math.h:266:3: note: expanded from macro '__MATHCALL_VEC'; __MATHCALL (function, suffix, args); ^; /usr/include/math.h:273:3: note: expanded from macro '__MATHCALL'; __MATHDECL (_Mdouble_,function,suffix, args); ^; /usr/include/math.h:276:3: note: expanded from macro '__MATHDECL'; __MATHDECL_1(type, __CONCAT(__,function),suffix, args); ^; /usr/include/math.h:283:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:2195,Deployability,install,install,2195,"ang/9.0.1/include/__clang_cuda_device_functions.h:49:40: note: '__nvvm_vote_all' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: error: reference to __device__ function '__nvvm_vote_any' in __host__ function; __DEVICE__ int __any(int __a) { return __nvvm_vote_any(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: note: '__nvvm_vote_any' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:51:52: error: reference to __device__ function '__nvvm_vote_ballot' in __host__ function; __DEVICE__ unsigned int __ballot(int __a) { return __nvvm_vote_ballot(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:51:52: note: '__nvvm_vote_ballot' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:69:18: error: static declaration of '__cosf' follows non-static declaration; __DEVICE__ float __cosf(float __a) { return __nv_fast_cosf(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls.h:62:1: note: previous declaration is here; __MATHCALL_VEC (cos,, (_Mdouble_ __x));; ^; /usr/include/math.h:266:3: note: expanded from macro '__MATHCALL_VEC'; __MATHCALL (function, suffix, args); ^; /usr/include/math.h:273:3: note: expanded from macro '__MATHCALL'; __MATHDECL (_Mdouble_,function,suffix, args); ^; /usr/include/math.h:276:3: note: expanded from macro '__MATHDECL'; __MATHDECL_1(type, __CONCAT(__,function),suffix, args); ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr/include/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:3326,Deployability,install,install,3326,"ling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:69:18: error: static declaration of '__cosf' follows non-static declaration; __DEVICE__ float __cosf(float __a) { return __nv_fast_cosf(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls.h:62:1: note: previous declaration is here; __MATHCALL_VEC (cos,, (_Mdouble_ __x));; ^; /usr/include/math.h:266:3: note: expanded from macro '__MATHCALL_VEC'; __MATHCALL (function, suffix, args); ^; /usr/include/math.h:273:3: note: expanded from macro '__MATHCALL'; __MATHDECL (_Mdouble_,function,suffix, args); ^; /usr/include/math.h:276:3: note: expanded from macro '__MATHDECL'; __MATHDECL_1(type, __CONCAT(__,function),suffix, args); ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr/include/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:180:1: note: expanded from here; __cosf; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:71:10: error: reference to __device__ function '__nvvm_atom_add_gen_d' in __host__ function; return __nvvm_atom_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:71:10: note: '__nvvm_atom_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:74:10: error: reference to __device__ function '__nvvm_atom_cta_add_gen_d' in __host__ function; return __nvvm_atom_cta_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:74:1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:3442,Deployability,install,install,3442,"de/x86_64-linux-gnu/bits/mathcalls.h:62:1: note: previous declaration is here; __MATHCALL_VEC (cos,, (_Mdouble_ __x));; ^; /usr/include/math.h:266:3: note: expanded from macro '__MATHCALL_VEC'; __MATHCALL (function, suffix, args); ^; /usr/include/math.h:273:3: note: expanded from macro '__MATHCALL'; __MATHDECL (_Mdouble_,function,suffix, args); ^; /usr/include/math.h:276:3: note: expanded from macro '__MATHDECL'; __MATHDECL_1(type, __CONCAT(__,function),suffix, args); ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr/include/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:180:1: note: expanded from here; __cosf; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:71:10: error: reference to __device__ function '__nvvm_atom_add_gen_d' in __host__ function; return __nvvm_atom_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:71:10: note: '__nvvm_atom_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:74:10: error: reference to __device__ function '__nvvm_atom_cta_add_gen_d' in __host__ function; return __nvvm_atom_cta_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:74:10: note: '__nvvm_atom_cta_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:77:10: error: reference to __device__ function '__nvvm_at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:3697,Deployability,install,install,3697,"L_VEC'; __MATHCALL (function, suffix, args); ^; /usr/include/math.h:273:3: note: expanded from macro '__MATHCALL'; __MATHDECL (_Mdouble_,function,suffix, args); ^; /usr/include/math.h:276:3: note: expanded from macro '__MATHDECL'; __MATHDECL_1(type, __CONCAT(__,function),suffix, args); ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr/include/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:180:1: note: expanded from here; __cosf; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:71:10: error: reference to __device__ function '__nvvm_atom_add_gen_d' in __host__ function; return __nvvm_atom_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:71:10: note: '__nvvm_atom_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:74:10: error: reference to __device__ function '__nvvm_atom_cta_add_gen_d' in __host__ function; return __nvvm_atom_cta_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:74:10: note: '__nvvm_atom_cta_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:77:10: error: reference to __device__ function '__nvvm_atom_sys_add_gen_d' in __host__ function; return __nvvm_atom_sys_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:3867,Deployability,install,install,3867,"cro '__MATHDECL'; __MATHDECL_1(type, __CONCAT(__,function),suffix, args); ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr/include/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:180:1: note: expanded from here; __cosf; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:71:10: error: reference to __device__ function '__nvvm_atom_add_gen_d' in __host__ function; return __nvvm_atom_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:71:10: note: '__nvvm_atom_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:74:10: error: reference to __device__ function '__nvvm_atom_cta_add_gen_d' in __host__ function; return __nvvm_atom_cta_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:74:10: note: '__nvvm_atom_cta_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:77:10: error: reference to __device__ function '__nvvm_atom_sys_add_gen_d' in __host__ function; return __nvvm_atom_sys_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:77:10: note: '__nvvm_atom_sys_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:192:18: error: sta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:4130,Deployability,install,install,4130,"clude/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:180:1: note: expanded from here; __cosf; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:71:10: error: reference to __device__ function '__nvvm_atom_add_gen_d' in __host__ function; return __nvvm_atom_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:71:10: note: '__nvvm_atom_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:74:10: error: reference to __device__ function '__nvvm_atom_cta_add_gen_d' in __host__ function; return __nvvm_atom_cta_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:74:10: note: '__nvvm_atom_cta_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:77:10: error: reference to __device__ function '__nvvm_atom_sys_add_gen_d' in __host__ function; return __nvvm_atom_sys_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:77:10: note: '__nvvm_atom_sys_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:192:18: error: static declaration of '__exp10f' follows non-static declaration; __DEVICE__ float __exp10f(float __a) { return __nv_fast_exp10f(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls.h:114:1: note: previous decl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:4304,Deployability,install,install,4304,"n file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:71:10: error: reference to __device__ function '__nvvm_atom_add_gen_d' in __host__ function; return __nvvm_atom_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:71:10: note: '__nvvm_atom_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:74:10: error: reference to __device__ function '__nvvm_atom_cta_add_gen_d' in __host__ function; return __nvvm_atom_cta_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:74:10: note: '__nvvm_atom_cta_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:77:10: error: reference to __device__ function '__nvvm_atom_sys_add_gen_d' in __host__ function; return __nvvm_atom_sys_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:77:10: note: '__nvvm_atom_sys_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:192:18: error: static declaration of '__exp10f' follows non-static declaration; __DEVICE__ float __exp10f(float __a) { return __nv_fast_exp10f(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls.h:114:1: note: previous declaration is here; __MATHCALL (exp10,, (_Mdouble_ __x));; ^; /usr/include/math.h:273:3: note: expanded from macro '__MATHCALL'; __MATHDECL (_Mdouble_,function,suffix, args); ^; /usr/include/math.h:276:3: note: expanded f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:4567,Deployability,install,install,4567,"clang_cuda_device_functions.h:71:10: error: reference to __device__ function '__nvvm_atom_add_gen_d' in __host__ function; return __nvvm_atom_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:71:10: note: '__nvvm_atom_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:74:10: error: reference to __device__ function '__nvvm_atom_cta_add_gen_d' in __host__ function; return __nvvm_atom_cta_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:74:10: note: '__nvvm_atom_cta_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:77:10: error: reference to __device__ function '__nvvm_atom_sys_add_gen_d' in __host__ function; return __nvvm_atom_sys_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:77:10: note: '__nvvm_atom_sys_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:192:18: error: static declaration of '__exp10f' follows non-static declaration; __DEVICE__ float __exp10f(float __a) { return __nv_fast_exp10f(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls.h:114:1: note: previous declaration is here; __MATHCALL (exp10,, (_Mdouble_ __x));; ^; /usr/include/math.h:273:3: note: expanded from macro '__MATHCALL'; __MATHDECL (_Mdouble_,function,suffix, args); ^; /usr/include/math.h:276:3: note: expanded from macro '__MATHDECL'; __MATHDECL_1(type, __CONCAT(__,function),suffix, args); ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:4741,Deployability,install,install,4741,"tc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:71:10: note: '__nvvm_atom_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:74:10: error: reference to __device__ function '__nvvm_atom_cta_add_gen_d' in __host__ function; return __nvvm_atom_cta_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:74:10: note: '__nvvm_atom_cta_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:77:10: error: reference to __device__ function '__nvvm_atom_sys_add_gen_d' in __host__ function; return __nvvm_atom_sys_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:77:10: note: '__nvvm_atom_sys_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:192:18: error: static declaration of '__exp10f' follows non-static declaration; __DEVICE__ float __exp10f(float __a) { return __nv_fast_exp10f(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls.h:114:1: note: previous declaration is here; __MATHCALL (exp10,, (_Mdouble_ __x));; ^; /usr/include/math.h:273:3: note: expanded from macro '__MATHCALL'; __MATHDECL (_Mdouble_,function,suffix, args); ^; /usr/include/math.h:276:3: note: expanded from macro '__MATHDECL'; __MATHDECL_1(type, __CONCAT(__,function),suffix, args); ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr/include/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:237:1: note: expanded from here; __exp10f; ^; cling: In file included from <built-in>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:5769,Deployability,install,install,5769,"te: '__nvvm_atom_sys_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:192:18: error: static declaration of '__exp10f' follows non-static declaration; __DEVICE__ float __exp10f(float __a) { return __nv_fast_exp10f(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls.h:114:1: note: previous declaration is here; __MATHCALL (exp10,, (_Mdouble_ __x));; ^; /usr/include/math.h:273:3: note: expanded from macro '__MATHCALL'; __MATHDECL (_Mdouble_,function,suffix, args); ^; /usr/include/math.h:276:3: note: expanded from macro '__MATHDECL'; __MATHDECL_1(type, __CONCAT(__,function),suffix, args); ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr/include/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:237:1: note: expanded from here; __exp10f; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:193:18: error: static declaration of '__expf' follows non-static declaration; __DEVICE__ float __expf(float __a) { return __nv_fast_expf(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls.h:95:1: note: previous declaration is here; __MATHCALL_VEC (exp,, (_Mdouble_ __x));; ^; /usr/include/math.h:266:3: note: expanded from macro '__MATHCALL_VEC'; __MATHCALL (function, suffix, args); ^; /usr/include/math.h:273:3: note: expanded from macro '__MATHCALL'; __MATHDECL (_Mdouble_,function,suffix, args); ^; /usr/include/math.h:276:3: note: expanded from macro '__MATHDECL'; __MATHDECL_1(type, __CONCAT(__,function),suffix, args); ^; /usr/include/math.h:283:15: note: expanded from m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:5885,Deployability,install,install,5885,"atic declaration; __DEVICE__ float __exp10f(float __a) { return __nv_fast_exp10f(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls.h:114:1: note: previous declaration is here; __MATHCALL (exp10,, (_Mdouble_ __x));; ^; /usr/include/math.h:273:3: note: expanded from macro '__MATHCALL'; __MATHDECL (_Mdouble_,function,suffix, args); ^; /usr/include/math.h:276:3: note: expanded from macro '__MATHDECL'; __MATHDECL_1(type, __CONCAT(__,function),suffix, args); ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr/include/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:237:1: note: expanded from here; __exp10f; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:193:18: error: static declaration of '__expf' follows non-static declaration; __DEVICE__ float __expf(float __a) { return __nv_fast_expf(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls.h:95:1: note: previous declaration is here; __MATHCALL_VEC (exp,, (_Mdouble_ __x));; ^; /usr/include/math.h:266:3: note: expanded from macro '__MATHCALL_VEC'; __MATHCALL (function, suffix, args); ^; /usr/include/math.h:273:3: note: expanded from macro '__MATHCALL'; __MATHDECL (_Mdouble_,function,suffix, args); ^; /usr/include/math.h:276:3: note: expanded from macro '__MATHDECL'; __MATHDECL_1(type, __CONCAT(__,function),suffix, args); ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr/include/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:216:1: n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:7017,Deployability,install,install,7017,"ing/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:193:18: error: static declaration of '__expf' follows non-static declaration; __DEVICE__ float __expf(float __a) { return __nv_fast_expf(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls.h:95:1: note: previous declaration is here; __MATHCALL_VEC (exp,, (_Mdouble_ __x));; ^; /usr/include/math.h:266:3: note: expanded from macro '__MATHCALL_VEC'; __MATHCALL (function, suffix, args); ^; /usr/include/math.h:273:3: note: expanded from macro '__MATHCALL'; __MATHDECL (_Mdouble_,function,suffix, args); ^; /usr/include/math.h:276:3: note: expanded from macro '__MATHDECL'; __MATHDECL_1(type, __CONCAT(__,function),suffix, args); ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr/include/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:216:1: note: expanded from here; __expf; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:195:10: error: reference to __device__ function '__nvvm_atom_add_gen_f' in __host__ function; return __nvvm_atom_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:195:10: note: '__nvvm_atom_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:198:10: error: reference to __device__ function '__nvvm_atom_cta_add_gen_f' in __host__ function; return __nvvm_atom_cta_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:7133,Deployability,install,install,7133,"de/x86_64-linux-gnu/bits/mathcalls.h:95:1: note: previous declaration is here; __MATHCALL_VEC (exp,, (_Mdouble_ __x));; ^; /usr/include/math.h:266:3: note: expanded from macro '__MATHCALL_VEC'; __MATHCALL (function, suffix, args); ^; /usr/include/math.h:273:3: note: expanded from macro '__MATHCALL'; __MATHDECL (_Mdouble_,function,suffix, args); ^; /usr/include/math.h:276:3: note: expanded from macro '__MATHDECL'; __MATHDECL_1(type, __CONCAT(__,function),suffix, args); ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr/include/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:216:1: note: expanded from here; __expf; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:195:10: error: reference to __device__ function '__nvvm_atom_add_gen_f' in __host__ function; return __nvvm_atom_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:195:10: note: '__nvvm_atom_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:198:10: error: reference to __device__ function '__nvvm_atom_cta_add_gen_f' in __host__ function; return __nvvm_atom_cta_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:198:10: note: '__nvvm_atom_cta_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:201:10: error: reference to __device__ function '__nv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:7389,Deployability,install,install,7389,"_VEC'; __MATHCALL (function, suffix, args); ^; /usr/include/math.h:273:3: note: expanded from macro '__MATHCALL'; __MATHDECL (_Mdouble_,function,suffix, args); ^; /usr/include/math.h:276:3: note: expanded from macro '__MATHDECL'; __MATHDECL_1(type, __CONCAT(__,function),suffix, args); ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr/include/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:216:1: note: expanded from here; __expf; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:195:10: error: reference to __device__ function '__nvvm_atom_add_gen_f' in __host__ function; return __nvvm_atom_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:195:10: note: '__nvvm_atom_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:198:10: error: reference to __device__ function '__nvvm_atom_cta_add_gen_f' in __host__ function; return __nvvm_atom_cta_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:198:10: note: '__nvvm_atom_cta_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:201:10: error: reference to __device__ function '__nvvm_atom_sys_add_gen_f' in __host__ function; return __nvvm_atom_sys_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:7560,Deployability,install,install,7560,"ro '__MATHDECL'; __MATHDECL_1(type, __CONCAT(__,function),suffix, args); ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr/include/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:216:1: note: expanded from here; __expf; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:195:10: error: reference to __device__ function '__nvvm_atom_add_gen_f' in __host__ function; return __nvvm_atom_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:195:10: note: '__nvvm_atom_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:198:10: error: reference to __device__ function '__nvvm_atom_cta_add_gen_f' in __host__ function; return __nvvm_atom_cta_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:198:10: note: '__nvvm_atom_cta_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:201:10: error: reference to __device__ function '__nvvm_atom_sys_add_gen_f' in __host__ function; return __nvvm_atom_sys_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:201:10: note: '__nvvm_atom_sys_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:205:7: error: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:7824,Deployability,install,install,7824,"de/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:216:1: note: expanded from here; __expf; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:195:10: error: reference to __device__ function '__nvvm_atom_add_gen_f' in __host__ function; return __nvvm_atom_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:195:10: note: '__nvvm_atom_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:198:10: error: reference to __device__ function '__nvvm_atom_cta_add_gen_f' in __host__ function; return __nvvm_atom_cta_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:198:10: note: '__nvvm_atom_cta_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:201:10: error: reference to __device__ function '__nvvm_atom_sys_add_gen_f' in __host__ function; return __nvvm_atom_sys_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:201:10: note: '__nvvm_atom_sys_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:205:7: error: reference to __device__ function '__nvvm_atom_xchg_gen_i' in __host__ function; __nvvm_atom_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:7999,Deployability,install,install,7999,"ile included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:195:10: error: reference to __device__ function '__nvvm_atom_add_gen_f' in __host__ function; return __nvvm_atom_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:195:10: note: '__nvvm_atom_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:198:10: error: reference to __device__ function '__nvvm_atom_cta_add_gen_f' in __host__ function; return __nvvm_atom_cta_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:198:10: note: '__nvvm_atom_cta_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:201:10: error: reference to __device__ function '__nvvm_atom_sys_add_gen_f' in __host__ function; return __nvvm_atom_sys_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:201:10: note: '__nvvm_atom_sys_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:205:7: error: reference to __device__ function '__nvvm_atom_xchg_gen_i' in __host__ function; __nvvm_atom_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:205:7: note: '__nvvm_atom_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:209",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:8263,Deployability,install,install,8263,"_cuda_device_functions.h:195:10: error: reference to __device__ function '__nvvm_atom_add_gen_f' in __host__ function; return __nvvm_atom_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:195:10: note: '__nvvm_atom_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:198:10: error: reference to __device__ function '__nvvm_atom_cta_add_gen_f' in __host__ function; return __nvvm_atom_cta_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:198:10: note: '__nvvm_atom_cta_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:201:10: error: reference to __device__ function '__nvvm_atom_sys_add_gen_f' in __host__ function; return __nvvm_atom_sys_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:201:10: note: '__nvvm_atom_sys_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:205:7: error: reference to __device__ function '__nvvm_atom_xchg_gen_i' in __host__ function; __nvvm_atom_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:205:7: note: '__nvvm_atom_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:209:7: error: reference to __device__ function '__nvvm_atom_cta_xchg_gen_i' in __host__ function; __nvvm_atom_cta_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:8438,Deployability,install,install,8438,"cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:195:10: note: '__nvvm_atom_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:198:10: error: reference to __device__ function '__nvvm_atom_cta_add_gen_f' in __host__ function; return __nvvm_atom_cta_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:198:10: note: '__nvvm_atom_cta_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:201:10: error: reference to __device__ function '__nvvm_atom_sys_add_gen_f' in __host__ function; return __nvvm_atom_sys_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:201:10: note: '__nvvm_atom_sys_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:205:7: error: reference to __device__ function '__nvvm_atom_xchg_gen_i' in __host__ function; __nvvm_atom_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:205:7: note: '__nvvm_atom_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:209:7: error: reference to __device__ function '__nvvm_atom_cta_xchg_gen_i' in __host__ function; __nvvm_atom_cta_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:209:7: note: '__nvvm_atom_cta_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:8715,Deployability,install,install,8715,"ions.h:198:10: error: reference to __device__ function '__nvvm_atom_cta_add_gen_f' in __host__ function; return __nvvm_atom_cta_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:198:10: note: '__nvvm_atom_cta_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:201:10: error: reference to __device__ function '__nvvm_atom_sys_add_gen_f' in __host__ function; return __nvvm_atom_sys_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:201:10: note: '__nvvm_atom_sys_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:205:7: error: reference to __device__ function '__nvvm_atom_xchg_gen_i' in __host__ function; __nvvm_atom_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:205:7: note: '__nvvm_atom_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:209:7: error: reference to __device__ function '__nvvm_atom_cta_xchg_gen_i' in __host__ function; __nvvm_atom_cta_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:209:7: note: '__nvvm_atom_cta_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:213:7: error: reference to __device__ function '__nvvm_atom_sys_xchg_gen_i' in __host__ function; __nvvm_atom_sys_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-projec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:8886,Deployability,install,install,8886,"/9.0.1/include/__clang_cuda_device_functions.h:198:10: note: '__nvvm_atom_cta_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:201:10: error: reference to __device__ function '__nvvm_atom_sys_add_gen_f' in __host__ function; return __nvvm_atom_sys_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:201:10: note: '__nvvm_atom_sys_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:205:7: error: reference to __device__ function '__nvvm_atom_xchg_gen_i' in __host__ function; __nvvm_atom_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:205:7: note: '__nvvm_atom_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:209:7: error: reference to __device__ function '__nvvm_atom_cta_xchg_gen_i' in __host__ function; __nvvm_atom_cta_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:209:7: note: '__nvvm_atom_cta_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:213:7: error: reference to __device__ function '__nvvm_atom_sys_xchg_gen_i' in __host__ function; __nvvm_atom_sys_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:213:7: note: '__nvvm_atom_sys_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__cl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:9171,Deployability,install,install,9171,": error: reference to __device__ function '__nvvm_atom_sys_add_gen_f' in __host__ function; return __nvvm_atom_sys_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:201:10: note: '__nvvm_atom_sys_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:205:7: error: reference to __device__ function '__nvvm_atom_xchg_gen_i' in __host__ function; __nvvm_atom_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:205:7: note: '__nvvm_atom_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:209:7: error: reference to __device__ function '__nvvm_atom_cta_xchg_gen_i' in __host__ function; __nvvm_atom_cta_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:209:7: note: '__nvvm_atom_cta_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:213:7: error: reference to __device__ function '__nvvm_atom_sys_xchg_gen_i' in __host__ function; __nvvm_atom_sys_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:213:7: note: '__nvvm_atom_sys_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:244:16: error: static declaration of '__finite' follows non-static declaration; __DEVICE__ int __finite(double __a) { return __nv_isfinited(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:9346,Deployability,install,install,9346,"ang_cuda_device_functions.h:201:10: note: '__nvvm_atom_sys_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:205:7: error: reference to __device__ function '__nvvm_atom_xchg_gen_i' in __host__ function; __nvvm_atom_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:205:7: note: '__nvvm_atom_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:209:7: error: reference to __device__ function '__nvvm_atom_cta_xchg_gen_i' in __host__ function; __nvvm_atom_cta_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:209:7: note: '__nvvm_atom_cta_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:213:7: error: reference to __device__ function '__nvvm_atom_sys_xchg_gen_i' in __host__ function; __nvvm_atom_sys_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:213:7: note: '__nvvm_atom_sys_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:244:16: error: static declaration of '__finite' follows non-static declaration; __DEVICE__ int __finite(double __a) { return __nv_isfinited(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:33:20: note: previous declaration is here; __MATHDECL_1 (int, __finite,, (_Mdouble_ __value)) __attribute__ ((__const__));; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:9631,Deployability,install,install,9631,"__device__ function '__nvvm_atom_xchg_gen_i' in __host__ function; __nvvm_atom_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:205:7: note: '__nvvm_atom_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:209:7: error: reference to __device__ function '__nvvm_atom_cta_xchg_gen_i' in __host__ function; __nvvm_atom_cta_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:209:7: note: '__nvvm_atom_cta_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:213:7: error: reference to __device__ function '__nvvm_atom_sys_xchg_gen_i' in __host__ function; __nvvm_atom_sys_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:213:7: note: '__nvvm_atom_sys_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:244:16: error: static declaration of '__finite' follows non-static declaration; __DEVICE__ int __finite(double __a) { return __nv_isfinited(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:33:20: note: previous declaration is here; __MATHDECL_1 (int, __finite,, (_Mdouble_ __value)) __attribute__ ((__const__));; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:245:16: error: st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:9806,Deployability,install,install,9806,"_device_functions.h:205:7: note: '__nvvm_atom_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:209:7: error: reference to __device__ function '__nvvm_atom_cta_xchg_gen_i' in __host__ function; __nvvm_atom_cta_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:209:7: note: '__nvvm_atom_cta_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:213:7: error: reference to __device__ function '__nvvm_atom_sys_xchg_gen_i' in __host__ function; __nvvm_atom_sys_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:213:7: note: '__nvvm_atom_sys_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:244:16: error: static declaration of '__finite' follows non-static declaration; __DEVICE__ int __finite(double __a) { return __nv_isfinited(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:33:20: note: previous declaration is here; __MATHDECL_1 (int, __finite,, (_Mdouble_ __value)) __attribute__ ((__const__));; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:245:16: error: static declaration of '__finitef' follows non-static declaration; __DEVICE__ int __finitef(float __a) { return __nv_finitef(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:33:1: note: previous decl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:10333,Deployability,install,install,10333,"_functions.h:209:7: note: '__nvvm_atom_cta_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:213:7: error: reference to __device__ function '__nvvm_atom_sys_xchg_gen_i' in __host__ function; __nvvm_atom_sys_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:213:7: note: '__nvvm_atom_sys_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:244:16: error: static declaration of '__finite' follows non-static declaration; __DEVICE__ int __finite(double __a) { return __nv_isfinited(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:33:20: note: previous declaration is here; __MATHDECL_1 (int, __finite,, (_Mdouble_ __value)) __attribute__ ((__const__));; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:245:16: error: static declaration of '__finitef' follows non-static declaration; __DEVICE__ int __finitef(float __a) { return __nv_finitef(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:33:1: note: previous declaration is here; __MATHDECL_1 (int, __finite,, (_Mdouble_ __value)) __attribute__ ((__const__));; ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr/include/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:160:1: note: expanded from here; __finitef; ^; cling: In file included from <built-in>:1:; I",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:10449,Deployability,install,install,10449,"ce to __device__ function '__nvvm_atom_sys_xchg_gen_i' in __host__ function; __nvvm_atom_sys_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:213:7: note: '__nvvm_atom_sys_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:244:16: error: static declaration of '__finite' follows non-static declaration; __DEVICE__ int __finite(double __a) { return __nv_isfinited(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:33:20: note: previous declaration is here; __MATHDECL_1 (int, __finite,, (_Mdouble_ __value)) __attribute__ ((__const__));; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:245:16: error: static declaration of '__finitef' follows non-static declaration; __DEVICE__ int __finitef(float __a) { return __nv_finitef(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:33:1: note: previous declaration is here; __MATHDECL_1 (int, __finite,, (_Mdouble_ __value)) __attribute__ ((__const__));; ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr/include/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:160:1: note: expanded from here; __finitef; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:11290,Deployability,install,install,11290,"ite,, (_Mdouble_ __value)) __attribute__ ((__const__));; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:245:16: error: static declaration of '__finitef' follows non-static declaration; __DEVICE__ int __finitef(float __a) { return __nv_finitef(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:33:1: note: previous declaration is here; __MATHDECL_1 (int, __finite,, (_Mdouble_ __value)) __attribute__ ((__const__));; ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr/include/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:160:1: note: expanded from here; __finitef; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:359:10: error: reference to __device__ function '__nvvm_atom_add_gen_i' in __host__ function; return __nvvm_atom_add_gen_i(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:359:10: note: '__nvvm_atom_add_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:362:3: error: reference to __device__ function '__nvvm_atom_cta_add_gen_i' in __host__ function; __nvvm_atom_cta_add_gen_i(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:362:3: n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:11406,Deployability,install,install,11406,"apper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:245:16: error: static declaration of '__finitef' follows non-static declaration; __DEVICE__ int __finitef(float __a) { return __nv_finitef(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:33:1: note: previous declaration is here; __MATHDECL_1 (int, __finite,, (_Mdouble_ __value)) __attribute__ ((__const__));; ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr/include/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:160:1: note: expanded from here; __finitef; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:359:10: error: reference to __device__ function '__nvvm_atom_add_gen_i' in __host__ function; return __nvvm_atom_add_gen_i(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:359:10: note: '__nvvm_atom_add_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:362:3: error: reference to __device__ function '__nvvm_atom_cta_add_gen_i' in __host__ function; __nvvm_atom_cta_add_gen_i(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:362:3: note: '__nvvm_atom_cta_add_gen_i' declared here; cling: fatal error: too many errors emitted, stopping now [-ferror-limit=]; cling: In file included from input_line_4:36:; In file included from /opt/spack-modules/linux-ubuntu20.0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:11662,Deployability,install,install,11662,"tatic declaration; __DEVICE__ int __finitef(float __a) { return __nv_finitef(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:33:1: note: previous declaration is here; __MATHDECL_1 (int, __finite,, (_Mdouble_ __value)) __attribute__ ((__const__));; ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr/include/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:160:1: note: expanded from here; __finitef; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:359:10: error: reference to __device__ function '__nvvm_atom_add_gen_i' in __host__ function; return __nvvm_atom_add_gen_i(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:359:10: note: '__nvvm_atom_add_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:362:3: error: reference to __device__ function '__nvvm_atom_cta_add_gen_i' in __host__ function; __nvvm_atom_cta_add_gen_i(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:362:3: note: '__nvvm_atom_cta_add_gen_i' declared here; cling: fatal error: too many errors emitted, stopping now [-ferror-limit=]; cling: In file included from input_line_4:36:; In file included from /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-9.3.0/gcc-10.2.0-nd7xsa2anuya7be46rjsaxbiobtgguod/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../include/c++/10.2.0/cassert:44:; In file included from /home/sehrig/w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:11833,Deployability,install,install,11833,"1 (int, __finite,, (_Mdouble_ __value)) __attribute__ ((__const__));; ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr/include/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:160:1: note: expanded from here; __finitef; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:359:10: error: reference to __device__ function '__nvvm_atom_add_gen_i' in __host__ function; return __nvvm_atom_add_gen_i(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:359:10: note: '__nvvm_atom_add_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:362:3: error: reference to __device__ function '__nvvm_atom_cta_add_gen_i' in __host__ function; __nvvm_atom_cta_add_gen_i(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:362:3: note: '__nvvm_atom_cta_add_gen_i' declared here; cling: fatal error: too many errors emitted, stopping now [-ferror-limit=]; cling: In file included from input_line_4:36:; In file included from /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-9.3.0/gcc-10.2.0-nd7xsa2anuya7be46rjsaxbiobtgguod/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../include/c++/10.2.0/cassert:44:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/assert.h:8:; /usr/include/assert.h:69:13: error: exception specification in declaration does not match previous declaration; extern void __assert_fai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:12089,Deployability,install,install,12089,"ude/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:160:1: note: expanded from here; __finitef; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:359:10: error: reference to __device__ function '__nvvm_atom_add_gen_i' in __host__ function; return __nvvm_atom_add_gen_i(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:359:10: note: '__nvvm_atom_add_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:362:3: error: reference to __device__ function '__nvvm_atom_cta_add_gen_i' in __host__ function; __nvvm_atom_cta_add_gen_i(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:362:3: note: '__nvvm_atom_cta_add_gen_i' declared here; cling: fatal error: too many errors emitted, stopping now [-ferror-limit=]; cling: In file included from input_line_4:36:; In file included from /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-9.3.0/gcc-10.2.0-nd7xsa2anuya7be46rjsaxbiobtgguod/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../include/c++/10.2.0/cassert:44:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/assert.h:8:; /usr/include/assert.h:69:13: error: exception specification in declaration does not match previous declaration; extern void __assert_fail (const char *__assertion, const char *__file,; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:349:31: note: previous declaration is here; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:12608,Deployability,install,install,12608,"m_atom_add_gen_i(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:359:10: note: '__nvvm_atom_add_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:362:3: error: reference to __device__ function '__nvvm_atom_cta_add_gen_i' in __host__ function; __nvvm_atom_cta_add_gen_i(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:362:3: note: '__nvvm_atom_cta_add_gen_i' declared here; cling: fatal error: too many errors emitted, stopping now [-ferror-limit=]; cling: In file included from input_line_4:36:; In file included from /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-9.3.0/gcc-10.2.0-nd7xsa2anuya7be46rjsaxbiobtgguod/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../include/c++/10.2.0/cassert:44:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/assert.h:8:; /usr/include/assert.h:69:13: error: exception specification in declaration does not match previous declaration; extern void __assert_fail (const char *__assertion, const char *__file,; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:349:31: note: previous declaration is here; __device__ static inline void __assert_fail(const char *__message,; ^; cling-ptx: Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:2:19: error: explicit specialization of undeclared template class 'complex'; template <> class complex<float>;; ^ ~~~~~~~; cling-ptx: Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:3:19: error: explicit specialization of non-template class 'complex'; template <> class complex<double>;; ^ ~~~~~~~~; IncrementalCUDADeviceCompiler::declare(); fail",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:12895,Deployability,install,install,12895,"hrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:362:3: error: reference to __device__ function '__nvvm_atom_cta_add_gen_i' in __host__ function; __nvvm_atom_cta_add_gen_i(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:362:3: note: '__nvvm_atom_cta_add_gen_i' declared here; cling: fatal error: too many errors emitted, stopping now [-ferror-limit=]; cling: In file included from input_line_4:36:; In file included from /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-9.3.0/gcc-10.2.0-nd7xsa2anuya7be46rjsaxbiobtgguod/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../include/c++/10.2.0/cassert:44:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/assert.h:8:; /usr/include/assert.h:69:13: error: exception specification in declaration does not match previous declaration; extern void __assert_fail (const char *__assertion, const char *__file,; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:349:31: note: previous declaration is here; __device__ static inline void __assert_fail(const char *__message,; ^; cling-ptx: Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:2:19: error: explicit specialization of undeclared template class 'complex'; template <> class complex<float>;; ^ ~~~~~~~; cling-ptx: Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:3:19: error: explicit specialization of non-template class 'complex'; template <> class complex<double>;; ^ ~~~~~~~~; IncrementalCUDADeviceCompiler::declare(); failed at compile ptx code; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:13157,Deployability,install,install,13157,"/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:362:3: note: '__nvvm_atom_cta_add_gen_i' declared here; cling: fatal error: too many errors emitted, stopping now [-ferror-limit=]; cling: In file included from input_line_4:36:; In file included from /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-9.3.0/gcc-10.2.0-nd7xsa2anuya7be46rjsaxbiobtgguod/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../include/c++/10.2.0/cassert:44:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/assert.h:8:; /usr/include/assert.h:69:13: error: exception specification in declaration does not match previous declaration; extern void __assert_fail (const char *__assertion, const char *__file,; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:349:31: note: previous declaration is here; __device__ static inline void __assert_fail(const char *__message,; ^; cling-ptx: Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:2:19: error: explicit specialization of undeclared template class 'complex'; template <> class complex<float>;; ^ ~~~~~~~; cling-ptx: Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:3:19: error: explicit specialization of non-template class 'complex'; template <> class complex<double>;; ^ ~~~~~~~~; IncrementalCUDADeviceCompiler::declare(); failed at compile ptx code; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Mar 05 2021, 17:50:00 |; | From heads/master@v6-23-01-RF-binSampling-1125-gd3d7cf0bb6 |; | With g++ (Spack GCC) 10.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; -----------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:13388,Deployability,install,install,13388,"ng: In file included from input_line_4:36:; In file included from /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-9.3.0/gcc-10.2.0-nd7xsa2anuya7be46rjsaxbiobtgguod/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../include/c++/10.2.0/cassert:44:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/assert.h:8:; /usr/include/assert.h:69:13: error: exception specification in declaration does not match previous declaration; extern void __assert_fail (const char *__assertion, const char *__file,; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:349:31: note: previous declaration is here; __device__ static inline void __assert_fail(const char *__message,; ^; cling-ptx: Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:2:19: error: explicit specialization of undeclared template class 'complex'; template <> class complex<float>;; ^ ~~~~~~~; cling-ptx: Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:3:19: error: explicit specialization of non-template class 'complex'; template <> class complex<double>;; ^ ~~~~~~~~; IncrementalCUDADeviceCompiler::declare(); failed at compile ptx code; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Mar 05 2021, 17:50:00 |; | From heads/master@v6-23-01-RF-binSampling-1125-gd3d7cf0bb6 |; | With g++ (Spack GCC) 10.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] cudaGetLastError(); IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime6gClingE' unresolved while linking [cling interface function]!; You are probably missing the definition of cling::runtime::gCling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:14213,Integrability,interface,interface,14213,"e class 'complex'; template <> class complex<float>;; ^ ~~~~~~~; cling-ptx: Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:3:19: error: explicit specialization of non-template class 'complex'; template <> class complex<double>;; ^ ~~~~~~~~; IncrementalCUDADeviceCompiler::declare(); failed at compile ptx code; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Mar 05 2021, 17:50:00 |; | From heads/master@v6-23-01-RF-binSampling-1125-gd3d7cf0bb6 |; | With g++ (Spack GCC) 10.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] cudaGetLastError(); IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime6gClingE' unresolved while linking [cling interface function]!; You are probably missing the definition of cling::runtime::gCling; Maybe you need to load the corresponding shared library?; root [1]; ```; A really interesting observation is that `root.exe` includes and links to the CUDA SDK by default when it is available. ```C++; $ root.exe ; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Mar 05 2021, 17:50:00 |; | From heads/master@v6-23-01-RF-binSampling-1125-gd3d7cf0bb6 |; | With g++ (Spack GCC) 10.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] cudaGetLastError(); (cudaError_t) (cudaSuccess) : (unsigned int) 0; root [1] ; ``` ; I think this is related to TMVA using the CUDA library. Unfortunately this is not enough, because without `-xcuda` root cannot compile CUDA specific things like kernel ( `_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:14320,Performance,load,load,14320,"e class 'complex'; template <> class complex<float>;; ^ ~~~~~~~; cling-ptx: Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:3:19: error: explicit specialization of non-template class 'complex'; template <> class complex<double>;; ^ ~~~~~~~~; IncrementalCUDADeviceCompiler::declare(); failed at compile ptx code; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Mar 05 2021, 17:50:00 |; | From heads/master@v6-23-01-RF-binSampling-1125-gd3d7cf0bb6 |; | With g++ (Spack GCC) 10.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] cudaGetLastError(); IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime6gClingE' unresolved while linking [cling interface function]!; You are probably missing the definition of cling::runtime::gCling; Maybe you need to load the corresponding shared library?; root [1]; ```; A really interesting observation is that `root.exe` includes and links to the CUDA SDK by default when it is available. ```C++; $ root.exe ; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Mar 05 2021, 17:50:00 |; | From heads/master@v6-23-01-RF-binSampling-1125-gd3d7cf0bb6 |; | With g++ (Spack GCC) 10.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] cudaGetLastError(); (cudaError_t) (cudaSuccess) : (unsigned int) 0; root [1] ; ``` ; I think this is related to TMVA using the CUDA library. Unfortunately this is not enough, because without `-xcuda` root cannot compile CUDA specific things like kernel ( `_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:12651,Testability,assert,assert,12651,"root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:359:10: note: '__nvvm_atom_add_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:362:3: error: reference to __device__ function '__nvvm_atom_cta_add_gen_i' in __host__ function; __nvvm_atom_cta_add_gen_i(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:362:3: note: '__nvvm_atom_cta_add_gen_i' declared here; cling: fatal error: too many errors emitted, stopping now [-ferror-limit=]; cling: In file included from input_line_4:36:; In file included from /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-9.3.0/gcc-10.2.0-nd7xsa2anuya7be46rjsaxbiobtgguod/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../include/c++/10.2.0/cassert:44:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/assert.h:8:; /usr/include/assert.h:69:13: error: exception specification in declaration does not match previous declaration; extern void __assert_fail (const char *__assertion, const char *__file,; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:349:31: note: previous declaration is here; __device__ static inline void __assert_fail(const char *__message,; ^; cling-ptx: Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:2:19: error: explicit specialization of undeclared template class 'complex'; template <> class complex<float>;; ^ ~~~~~~~; cling-ptx: Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:3:19: error: explicit specialization of non-template class 'complex'; template <> class complex<double>;; ^ ~~~~~~~~; IncrementalCUDADeviceCompiler::declare(); failed at compile ptx code; ---------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/issues/7518:12677,Testability,assert,assert,12677,"tc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:359:10: note: '__nvvm_atom_add_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:362:3: error: reference to __device__ function '__nvvm_atom_cta_add_gen_i' in __host__ function; __nvvm_atom_cta_add_gen_i(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:362:3: note: '__nvvm_atom_cta_add_gen_i' declared here; cling: fatal error: too many errors emitted, stopping now [-ferror-limit=]; cling: In file included from input_line_4:36:; In file included from /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-9.3.0/gcc-10.2.0-nd7xsa2anuya7be46rjsaxbiobtgguod/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../include/c++/10.2.0/cassert:44:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/assert.h:8:; /usr/include/assert.h:69:13: error: exception specification in declaration does not match previous declaration; extern void __assert_fail (const char *__assertion, const char *__file,; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:349:31: note: previous declaration is here; __device__ static inline void __assert_fail(const char *__message,; ^; cling-ptx: Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:2:19: error: explicit specialization of undeclared template class 'complex'; template <> class complex<float>;; ^ ~~~~~~~; cling-ptx: Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:3:19: error: explicit specialization of non-template class 'complex'; template <> class complex<double>;; ^ ~~~~~~~~; IncrementalCUDADeviceCompiler::declare(); failed at compile ptx code; ------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7518
https://github.com/root-project/root/pull/7520:24,Performance,perform,performance,24,Should slightly improve performance while there is no need to create temporary object instance,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7520
https://github.com/root-project/root/pull/7524:199,Integrability,inject,injecting,199,"https://github.com/root-project/root/pull/7506 for v6-24. With llvm9, the module ptr gets reset upon emission.; Instead, just look for the symbol in the JIT - where it should be found,; as Init() is injecting it there, and we want to find *that* symbol,; not the one from the binary. Fixes `CodeUnloading/AtExit.C` cling test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7524
https://github.com/root-project/root/pull/7524:199,Security,inject,injecting,199,"https://github.com/root-project/root/pull/7506 for v6-24. With llvm9, the module ptr gets reset upon emission.; Instead, just look for the symbol in the JIT - where it should be found,; as Init() is injecting it there, and we want to find *that* symbol,; not the one from the binary. Fixes `CodeUnloading/AtExit.C` cling test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7524
https://github.com/root-project/root/pull/7524:321,Testability,test,test,321,"https://github.com/root-project/root/pull/7506 for v6-24. With llvm9, the module ptr gets reset upon emission.; Instead, just look for the symbol in the JIT - where it should be found,; as Init() is injecting it there, and we want to find *that* symbol,; not the one from the binary. Fixes `CodeUnloading/AtExit.C` cling test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7524
https://github.com/root-project/root/issues/7525:264,Modifiability,portab,portability,264,```; /opt/root_src/core/base/inc/TVersionCheck.h:31:1: warning: non-POD static (TVersionCheck) [clazy-non-pod-global-static]; /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:766:25: warning: Call to 'malloc' has an allocation size of 0 bytes [clang-analyzer-optin.portability.UnixAPI]; 1: Assuming field 'fStmt' is not equal to null in /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:168; 2: expanded from macro 'CheckStmt' in /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:77; 3: Taking false branch in /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:168; 4: expanded from macro 'CheckStmt' in /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:77; 5: Assuming field 'fWorkingMode' is equal to 0 in /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:169; 6: Taking false branch in /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:169; 7: Assuming the condition is false in /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:174; 8: Taking false branch in /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:174; 9: Assuming 'meta' is non-null in /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:179; 10: Taking true branch in /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:179; 11: Value assigned to 'fgAllocSizeLimit' in /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:184; 12: Assuming 'n' is < 'count' in /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:186; 13: Loop condition is true. Entering loop body in /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:186; 14: Assuming the condition is false in /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:187; 15: Calling 'TMySQLStatement::SetSQLParamType' in /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:187; 16: 'npar' is >= 0 in /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:729; 17: Left side of '||' is false in /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:729; 18: Assuming 'npar' is < field 'fNumBuffers' in /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:729; 19: Taking false branch in /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:729; 20: Control,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7525
https://github.com/root-project/root/issues/7525:4559,Performance,load,loaded,4559,"nt.cxx:702; 4: Assuming 'npar' is < field 'fNumBuffers' in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:702; 5: Taking false branch in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:702; 6: Assuming 'maxsize' is < 0 in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:704; 7: Taking true branch in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:704; 8: Assuming the condition is false in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:705; 9: Taking false branch in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:705; 10: Storing null pointer value in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:706; 11: 'isbinary' is false in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:713; 12: '?' condition is false in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:713; 13: 'isbinary' is false in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:714; 14: '?' condition is false in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:714; 15: Returning the value 1 (loaded from 'kTRUE'), which participates in a condition later in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:716; 16: Returning from 'TPgSQLStatement::SetSQLParamType' in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:806; 17: Taking false branch in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:806; 18: Null pointer passed as 1st argument to string copy function in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:808; /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:822:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Assuming 'size' is <= 'maxsize' in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:818; 2: Taking false branch in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:818; 3: Calling 'TPgSQLStatement::SetSQLParamType' in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:820; 4: Assuming 'npar' is >= 0 in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:702; 5: Left side of '||' is false in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:702; 6: A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7525
https://github.com/root-project/root/issues/7525:6542,Performance,load,loaded,6542,"g-analyzer-core.NonNullParamChecker]; 1: Assuming 'size' is <= 'maxsize' in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:818; 2: Taking false branch in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:818; 3: Calling 'TPgSQLStatement::SetSQLParamType' in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:820; 4: Assuming 'npar' is >= 0 in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:702; 5: Left side of '||' is false in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:702; 6: Assuming 'npar' is < field 'fNumBuffers' in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:702; 7: Taking false branch in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:702; 8: Assuming 'maxsize' is < 0 in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:704; 9: Taking true branch in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:704; 10: Assuming the condition is false in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:705; 11: Taking false branch in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:705; 12: Storing null pointer value in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:706; 13: 'isbinary' is true in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:713; 14: '?' condition is true in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:713; 15: 'isbinary' is true in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:714; 16: '?' condition is true in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:714; 17: Returning the value 1 (loaded from 'kTRUE'), which participates in a condition later in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:716; 18: Returning from 'TPgSQLStatement::SetSQLParamType' in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:820; 19: Taking false branch in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:820; 20: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:822; /opt/root_src/core/base/inc/TVersionCheck.h; /opt/root_src/sql/mysql/src/TMySQLStatement.cxx; /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7525
https://github.com/root-project/root/issues/7525:2877,Security,secur,security,2877,c/sql/mysql/src/TMySQLStatement.cxx:729; 19: Taking false branch in /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:729; 20: Control jumps to 'case MYSQL_TYPE_TINY:' at line 745 in /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:741; 21: Execution continues on line 764 in /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:745; 22: Assuming 'allocsize' is > 'fgAllocSizeLimit' in /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:764; 23: Taking true branch in /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:764; 24: The value 0 is assigned to 'allocsize' in /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:764; 25: Call to 'malloc' has an allocation size of 0 bytes in /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:766; /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:940:15: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:940; /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:808:4: warning: Null pointer passed as 1st argument to string copy function [clang-analyzer-unix.cstring.NullArg]; 1: Calling 'TPgSQLStatement::SetSQLParamType' in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:806; 2: Assuming 'npar' is >= 0 in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:702; 3: Left side of '||' is false in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:702; 4: Assuming 'npar' is < field 'fNumBuffers' in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:702; 5: Taking false branch in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:702; 6: Assuming 'maxsize' is < 0 in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:704,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7525
https://github.com/root-project/root/issues/7526:21122,Deployability,release,released,21122,/root_src/tmva/pymva/src/MethodPyTorch.cxx:377; 28: Assuming 'j' is < field 'fNOutputs' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:378; 29: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:378; 30: Use of zero-allocated memory in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:379; /opt/root_src/tmva/tmva/inc/TMVA/BinaryTree.h:83:39: warning: Use of memory after it is freed [clang-analyzer-cplusplus.NewDelete]; 1: Calling 'BinaryTree::Read' in /opt/root_src/tmva/tmva/src/BinaryTree.cxx:206; 2: Assuming 'currentNode' is not equal to null in /opt/root_src/tmva/tmva/src/BinaryTree.cxx:174; 3: Taking false branch in /opt/root_src/tmva/tmva/src/BinaryTree.cxx:174; 4: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/BinaryTree.cxx:179; 5: Assuming the condition is true in /opt/root_src/tmva/tmva/src/BinaryTree.cxx:180; 6: Taking true branch in /opt/root_src/tmva/tmva/src/BinaryTree.cxx:180; 7: Memory is released in /opt/root_src/tmva/tmva/src/BinaryTree.cxx:181; 8: Calling 'BinaryTree::SetTotalTreeDepth' in /opt/root_src/tmva/tmva/src/BinaryTree.cxx:182; 9: 'n' is equal to NULL in /opt/root_src/tmva/tmva/src/BinaryTree.cxx:215; 10: Taking true branch in /opt/root_src/tmva/tmva/src/BinaryTree.cxx:215; 11: Calling 'BinaryTree::GetRoot' in /opt/root_src/tmva/tmva/src/BinaryTree.cxx:216; 12: Use of memory after it is freed in /opt/root_src/tmva/tmva/inc/TMVA/BinaryTree.h:83; /opt/root_src/tmva/tmva/inc/TMVA/DNN/Minimizers.h:187:78: warning: 2 uninitialized fields at the end of the constructor call [clang-analyzer-optin.cplusplus.UninitializedObject]; 1: uninitialized field 'this->fTrainingError' in /opt/root_src/tmva/tmva/inc/TMVA/DNN/Minimizers.h:69; 2: uninitialized field 'this->fTestError' in /opt/root_src/tmva/tmva/inc/TMVA/DNN/Minimizers.h:70; 3: Assuming field 'fInteractive' is null in /opt/root_src/tmva/tmva/src/MethodDNN.cxx:667; 4: Left side of '&&' is false in /opt/root_src/tmva/tmva/src/Metho,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:138715,Deployability,release,released,138715,me.cxx:137; 3: Taking true branch in /opt/root_src/tmva/tmva/src/Volume.cxx:137; 4: Assuming field 'fLower' is null in /opt/root_src/tmva/tmva/src/Volume.cxx:138; 5: Taking false branch in /opt/root_src/tmva/tmva/src/Volume.cxx:138; 6: Assuming field 'fUpper' is null in /opt/root_src/tmva/tmva/src/Volume.cxx:139; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Volume.cxx:139; 8: Forming reference to null pointer in /opt/root_src/tmva/tmva/src/Volume.cxx:140; /opt/root_src/tmva/tmva/src/Volume.cxx:140:20: warning: Use of memory after it is freed [clang-analyzer-cplusplus.NewDelete]; 1: Assuming V == *this in /opt/root_src/tmva/tmva/src/Volume.cxx:135; 2: Assuming field 'fOwnerShip' is true in /opt/root_src/tmva/tmva/src/Volume.cxx:137; 3: Taking true branch in /opt/root_src/tmva/tmva/src/Volume.cxx:137; 4: Assuming field 'fLower' is non-null in /opt/root_src/tmva/tmva/src/Volume.cxx:138; 5: Taking true branch in /opt/root_src/tmva/tmva/src/Volume.cxx:138; 6: Memory is released in /opt/root_src/tmva/tmva/src/Volume.cxx:138; 7: Assuming field 'fUpper' is null in /opt/root_src/tmva/tmva/src/Volume.cxx:139; 8: Taking false branch in /opt/root_src/tmva/tmva/src/Volume.cxx:139; 9: Use of memory after it is freed in /opt/root_src/tmva/tmva/src/Volume.cxx:140; /opt/root_src/tmva/tmvagui/src/BDT_Reg.cxx:312:4: warning: 6th function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]; 1: Assuming the condition is false in /opt/root_src/tmva/tmvagui/src/BDT_Reg.cxx:446; 2: Taking false branch in /opt/root_src/tmva/tmvagui/src/BDT_Reg.cxx:446; 3: Assuming the condition is false in /opt/root_src/tmva/tmvagui/src/BDT_Reg.cxx:450; 4: Taking false branch in /opt/root_src/tmva/tmvagui/src/BDT_Reg.cxx:450; 5: Calling 'StatDialogBDTReg::DrawTree' in /opt/root_src/tmva/tmvagui/src/BDT_Reg.cxx:463; 6: 'vars' declared without an initial value in /opt/root_src/tmva/tmvagui/src/BDT_Reg.cxx:294; 7: Calling 'StatDialogBDTReg::ReadTree' in /opt/root_src/tmva/tmvag,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:81,Energy Efficiency,allocate,allocated,81,```; /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:469:33: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming field 'fModelIsSetup' is true in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:400; 2: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:400; 3: 'i' is < 'nTrainingEvents' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:416; 4: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:416; 5: Assuming 'j' is >= field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:419; 6: Loop condition is false. Execution continues on line 425 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:419; 7: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 8: Left side of '||' is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 9: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 10: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 11: Assuming the condition is true in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:431; 12: Taking true branch in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:431; 13: Assuming 'j' is >= field 'fNOutputs' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:432; 14: Loop condition is false. Execution continues on line 439 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:432; 15: Assuming 'i' is >= 'nTrainingEvents' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:416; 16: Loop condition is false. Execution continues on line 442 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:416; 17: Memory is allocated in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:460; 18: 'i' is < 'nValEvents' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:464; 19: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:464; 20: Assuming 'j' is < field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:468; 21: Loo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:1654,Energy Efficiency,allocate,allocated,1654,/pymva/src/MethodPyKeras.cxx:419; 7: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 8: Left side of '||' is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 9: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 10: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 11: Assuming the condition is true in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:431; 12: Taking true branch in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:431; 13: Assuming 'j' is >= field 'fNOutputs' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:432; 14: Loop condition is false. Execution continues on line 439 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:432; 15: Assuming 'i' is >= 'nTrainingEvents' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:416; 16: Loop condition is false. Execution continues on line 442 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:416; 17: Memory is allocated in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:460; 18: 'i' is < 'nValEvents' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:464; 19: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:464; 20: Assuming 'j' is < field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:468; 21: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:468; 22: Use of zero-allocated memory in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:469; /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:474:39: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming field 'fModelIsSetup' is true in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:400; 2: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:400; 3: 'i' is < 'nTrainingEvents' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:416; 4: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:2112,Energy Efficiency,allocate,allocated,2112,x:431; 12: Taking true branch in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:431; 13: Assuming 'j' is >= field 'fNOutputs' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:432; 14: Loop condition is false. Execution continues on line 439 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:432; 15: Assuming 'i' is >= 'nTrainingEvents' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:416; 16: Loop condition is false. Execution continues on line 442 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:416; 17: Memory is allocated in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:460; 18: 'i' is < 'nValEvents' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:464; 19: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:464; 20: Assuming 'j' is < field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:468; 21: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:468; 22: Use of zero-allocated memory in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:469; /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:474:39: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming field 'fModelIsSetup' is true in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:400; 2: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:400; 3: 'i' is < 'nTrainingEvents' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:416; 4: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:416; 5: Assuming 'j' is >= field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:419; 6: Loop condition is false. Execution continues on line 425 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:419; 7: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 8: Left side of '||' is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 9: Assuming the condition is false in /opt/root_src/tmva/pymva/src/Method,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:2260,Energy Efficiency,allocate,allocated,2260,root_src/tmva/pymva/src/MethodPyKeras.cxx:432; 14: Loop condition is false. Execution continues on line 439 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:432; 15: Assuming 'i' is >= 'nTrainingEvents' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:416; 16: Loop condition is false. Execution continues on line 442 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:416; 17: Memory is allocated in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:460; 18: 'i' is < 'nValEvents' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:464; 19: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:464; 20: Assuming 'j' is < field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:468; 21: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:468; 22: Use of zero-allocated memory in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:469; /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:474:39: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming field 'fModelIsSetup' is true in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:400; 2: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:400; 3: 'i' is < 'nTrainingEvents' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:416; 4: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:416; 5: Assuming 'j' is >= field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:419; 6: Loop condition is false. Execution continues on line 425 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:419; 7: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 8: Left side of '||' is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 9: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 10: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 11: Assuming the condition is true in ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:3833,Energy Efficiency,allocate,allocated,3833,/pymva/src/MethodPyKeras.cxx:419; 7: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 8: Left side of '||' is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 9: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 10: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 11: Assuming the condition is true in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:431; 12: Taking true branch in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:431; 13: Assuming 'j' is >= field 'fNOutputs' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:432; 14: Loop condition is false. Execution continues on line 439 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:432; 15: Assuming 'i' is >= 'nTrainingEvents' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:416; 16: Loop condition is false. Execution continues on line 442 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:416; 17: Memory is allocated in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:461; 18: 'i' is < 'nValEvents' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:464; 19: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:464; 20: Assuming 'j' is >= field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:468; 21: Loop condition is false. Execution continues on line 472 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:468; 22: Assuming the condition is true in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:472; 23: Left side of '||' is true in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:472; 24: Assuming 'j' is < field 'fNOutputs' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:473; 25: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:473; 26: Use of zero-allocated memory in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:474; /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:476:48: warning: Use of zero-allocated memory [clang-,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:4678,Energy Efficiency,allocate,allocated,4678,:416; 16: Loop condition is false. Execution continues on line 442 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:416; 17: Memory is allocated in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:461; 18: 'i' is < 'nValEvents' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:464; 19: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:464; 20: Assuming 'j' is >= field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:468; 21: Loop condition is false. Execution continues on line 472 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:468; 22: Assuming the condition is true in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:472; 23: Left side of '||' is true in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:472; 24: Assuming 'j' is < field 'fNOutputs' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:473; 25: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:473; 26: Use of zero-allocated memory in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:474; /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:476:48: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming field 'fModelIsSetup' is true in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:400; 2: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:400; 3: 'i' is < 'nTrainingEvents' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:416; 4: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:416; 5: Assuming 'j' is >= field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:419; 6: Loop condition is false. Execution continues on line 425 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:419; 7: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 8: Left side of '||' is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 9: Assuming the condition is false in /opt/root_src/tmva/pymva/src/Method,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:4826,Energy Efficiency,allocate,allocated,4826,s allocated in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:461; 18: 'i' is < 'nValEvents' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:464; 19: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:464; 20: Assuming 'j' is >= field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:468; 21: Loop condition is false. Execution continues on line 472 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:468; 22: Assuming the condition is true in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:472; 23: Left side of '||' is true in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:472; 24: Assuming 'j' is < field 'fNOutputs' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:473; 25: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:473; 26: Use of zero-allocated memory in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:474; /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:476:48: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming field 'fModelIsSetup' is true in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:400; 2: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:400; 3: 'i' is < 'nTrainingEvents' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:416; 4: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:416; 5: Assuming 'j' is >= field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:419; 6: Loop condition is false. Execution continues on line 425 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:419; 7: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 8: Left side of '||' is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 9: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 10: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 11: Assuming the condition is true in ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:6399,Energy Efficiency,allocate,allocated,6399,/pymva/src/MethodPyKeras.cxx:419; 7: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 8: Left side of '||' is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 9: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 10: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 11: Assuming the condition is true in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:431; 12: Taking true branch in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:431; 13: Assuming 'j' is >= field 'fNOutputs' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:432; 14: Loop condition is false. Execution continues on line 439 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:432; 15: Assuming 'i' is >= 'nTrainingEvents' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:416; 16: Loop condition is false. Execution continues on line 442 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:416; 17: Memory is allocated in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:461; 18: 'i' is < 'nValEvents' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:464; 19: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:464; 20: Assuming 'j' is >= field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:468; 21: Loop condition is false. Execution continues on line 472 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:468; 22: Assuming the condition is true in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:472; 23: Left side of '||' is true in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:472; 24: Assuming 'j' is >= field 'fNOutputs' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:473; 25: Loop condition is false. Execution continues on line 476 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:473; 26: Use of zero-allocated memory in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:476; /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:480:39: warning: Use of zero-allocated,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:7259,Energy Efficiency,allocate,allocated,7259,condition is false. Execution continues on line 442 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:416; 17: Memory is allocated in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:461; 18: 'i' is < 'nValEvents' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:464; 19: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:464; 20: Assuming 'j' is >= field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:468; 21: Loop condition is false. Execution continues on line 472 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:468; 22: Assuming the condition is true in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:472; 23: Left side of '||' is true in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:472; 24: Assuming 'j' is >= field 'fNOutputs' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:473; 25: Loop condition is false. Execution continues on line 476 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:473; 26: Use of zero-allocated memory in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:476; /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:480:39: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming field 'fModelIsSetup' is true in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:400; 2: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:400; 3: 'i' is < 'nTrainingEvents' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:416; 4: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:416; 5: Assuming 'j' is >= field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:419; 6: Loop condition is false. Execution continues on line 425 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:419; 7: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 8: Left side of '||' is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 9: Assuming the condition is false in /opt/root_src/tmva/pymva/src/Method,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:7407,Energy Efficiency,allocate,allocated,7407,/opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:461; 18: 'i' is < 'nValEvents' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:464; 19: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:464; 20: Assuming 'j' is >= field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:468; 21: Loop condition is false. Execution continues on line 472 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:468; 22: Assuming the condition is true in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:472; 23: Left side of '||' is true in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:472; 24: Assuming 'j' is >= field 'fNOutputs' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:473; 25: Loop condition is false. Execution continues on line 476 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:473; 26: Use of zero-allocated memory in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:476; /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:480:39: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming field 'fModelIsSetup' is true in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:400; 2: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:400; 3: 'i' is < 'nTrainingEvents' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:416; 4: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:416; 5: Assuming 'j' is >= field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:419; 6: Loop condition is false. Execution continues on line 425 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:419; 7: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 8: Left side of '||' is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 9: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 10: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 11: Assuming the condition is true in ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:8980,Energy Efficiency,allocate,allocated,8980,/pymva/src/MethodPyKeras.cxx:419; 7: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 8: Left side of '||' is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 9: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 10: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 11: Assuming the condition is true in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:431; 12: Taking true branch in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:431; 13: Assuming 'j' is >= field 'fNOutputs' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:432; 14: Loop condition is false. Execution continues on line 439 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:432; 15: Assuming 'i' is >= 'nTrainingEvents' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:416; 16: Loop condition is false. Execution continues on line 442 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:416; 17: Memory is allocated in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:461; 18: 'i' is < 'nValEvents' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:464; 19: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:464; 20: Assuming 'j' is >= field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:468; 21: Loop condition is false. Execution continues on line 472 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:468; 22: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:472; 23: Left side of '||' is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:472; 24: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:472; 25: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:472; 26: Assuming the condition is true in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:478; 27: Taking true branch in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:478; 28: Assuming 'j' is < field 'fNOutputs' in /o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:10165,Energy Efficiency,allocate,allocated,10165,t_src/tmva/pymva/src/MethodPyKeras.cxx:464; 20: Assuming 'j' is >= field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:468; 21: Loop condition is false. Execution continues on line 472 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:468; 22: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:472; 23: Left side of '||' is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:472; 24: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:472; 25: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:472; 26: Assuming the condition is true in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:478; 27: Taking true branch in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:478; 28: Assuming 'j' is < field 'fNOutputs' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:479; 29: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:479; 30: Use of zero-allocated memory in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:480; /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:368:33: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming field 'fModelIsSetup' is true in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:298; 2: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:298; 3: 'i' is < 'nTrainingEvents' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 4: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 5: Assuming 'j' is >= field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:318; 6: Loop condition is false. Execution continues on line 324 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:318; 7: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 8: Left side of '||' is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 9: Assuming the condition is false in /opt/root_src/tmva/pymva/src/Method,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:10313,Energy Efficiency,allocate,allocated,10313,8; 21: Loop condition is false. Execution continues on line 472 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:468; 22: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:472; 23: Left side of '||' is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:472; 24: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:472; 25: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:472; 26: Assuming the condition is true in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:478; 27: Taking true branch in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:478; 28: Assuming 'j' is < field 'fNOutputs' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:479; 29: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:479; 30: Use of zero-allocated memory in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:480; /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:368:33: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming field 'fModelIsSetup' is true in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:298; 2: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:298; 3: 'i' is < 'nTrainingEvents' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 4: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 5: Assuming 'j' is >= field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:318; 6: Loop condition is false. Execution continues on line 324 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:318; 7: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 8: Left side of '||' is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 9: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 10: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 11: Assuming the condition is true in ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:11886,Energy Efficiency,allocate,allocated,11886,/pymva/src/MethodPyTorch.cxx:318; 7: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 8: Left side of '||' is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 9: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 10: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 11: Assuming the condition is true in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:330; 12: Taking true branch in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:330; 13: Assuming 'j' is >= field 'fNOutputs' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:331; 14: Loop condition is false. Execution continues on line 338 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:331; 15: Assuming 'i' is >= 'nTrainingEvents' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 16: Loop condition is false. Execution continues on line 341 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 17: Memory is allocated in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:359; 18: 'i' is < 'nValEvents' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:363; 19: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:363; 20: Assuming 'j' is < field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:367; 21: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:367; 22: Use of zero-allocated memory in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:368; /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:373:39: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming field 'fModelIsSetup' is true in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:298; 2: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:298; 3: 'i' is < 'nTrainingEvents' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 4: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:12344,Energy Efficiency,allocate,allocated,12344,x:330; 12: Taking true branch in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:330; 13: Assuming 'j' is >= field 'fNOutputs' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:331; 14: Loop condition is false. Execution continues on line 338 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:331; 15: Assuming 'i' is >= 'nTrainingEvents' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 16: Loop condition is false. Execution continues on line 341 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 17: Memory is allocated in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:359; 18: 'i' is < 'nValEvents' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:363; 19: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:363; 20: Assuming 'j' is < field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:367; 21: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:367; 22: Use of zero-allocated memory in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:368; /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:373:39: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming field 'fModelIsSetup' is true in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:298; 2: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:298; 3: 'i' is < 'nTrainingEvents' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 4: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 5: Assuming 'j' is >= field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:318; 6: Loop condition is false. Execution continues on line 324 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:318; 7: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 8: Left side of '||' is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 9: Assuming the condition is false in /opt/root_src/tmva/pymva/src/Method,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:12492,Energy Efficiency,allocate,allocated,12492,root_src/tmva/pymva/src/MethodPyTorch.cxx:331; 14: Loop condition is false. Execution continues on line 338 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:331; 15: Assuming 'i' is >= 'nTrainingEvents' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 16: Loop condition is false. Execution continues on line 341 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 17: Memory is allocated in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:359; 18: 'i' is < 'nValEvents' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:363; 19: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:363; 20: Assuming 'j' is < field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:367; 21: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:367; 22: Use of zero-allocated memory in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:368; /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:373:39: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming field 'fModelIsSetup' is true in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:298; 2: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:298; 3: 'i' is < 'nTrainingEvents' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 4: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 5: Assuming 'j' is >= field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:318; 6: Loop condition is false. Execution continues on line 324 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:318; 7: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 8: Left side of '||' is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 9: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 10: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 11: Assuming the condition is true in ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:14065,Energy Efficiency,allocate,allocated,14065,/pymva/src/MethodPyTorch.cxx:318; 7: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 8: Left side of '||' is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 9: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 10: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 11: Assuming the condition is true in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:330; 12: Taking true branch in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:330; 13: Assuming 'j' is >= field 'fNOutputs' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:331; 14: Loop condition is false. Execution continues on line 338 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:331; 15: Assuming 'i' is >= 'nTrainingEvents' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 16: Loop condition is false. Execution continues on line 341 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 17: Memory is allocated in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:360; 18: 'i' is < 'nValEvents' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:363; 19: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:363; 20: Assuming 'j' is >= field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:367; 21: Loop condition is false. Execution continues on line 371 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:367; 22: Assuming the condition is true in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:371; 23: Left side of '||' is true in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:371; 24: Assuming 'j' is < field 'fNOutputs' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:372; 25: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:372; 26: Use of zero-allocated memory in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:373; /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:375:48: warning: Use of zero-allocated memory [clang-,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:14910,Energy Efficiency,allocate,allocated,14910,:315; 16: Loop condition is false. Execution continues on line 341 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 17: Memory is allocated in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:360; 18: 'i' is < 'nValEvents' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:363; 19: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:363; 20: Assuming 'j' is >= field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:367; 21: Loop condition is false. Execution continues on line 371 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:367; 22: Assuming the condition is true in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:371; 23: Left side of '||' is true in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:371; 24: Assuming 'j' is < field 'fNOutputs' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:372; 25: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:372; 26: Use of zero-allocated memory in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:373; /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:375:48: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming field 'fModelIsSetup' is true in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:298; 2: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:298; 3: 'i' is < 'nTrainingEvents' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 4: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 5: Assuming 'j' is >= field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:318; 6: Loop condition is false. Execution continues on line 324 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:318; 7: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 8: Left side of '||' is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 9: Assuming the condition is false in /opt/root_src/tmva/pymva/src/Method,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:15058,Energy Efficiency,allocate,allocated,15058,s allocated in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:360; 18: 'i' is < 'nValEvents' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:363; 19: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:363; 20: Assuming 'j' is >= field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:367; 21: Loop condition is false. Execution continues on line 371 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:367; 22: Assuming the condition is true in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:371; 23: Left side of '||' is true in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:371; 24: Assuming 'j' is < field 'fNOutputs' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:372; 25: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:372; 26: Use of zero-allocated memory in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:373; /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:375:48: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming field 'fModelIsSetup' is true in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:298; 2: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:298; 3: 'i' is < 'nTrainingEvents' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 4: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 5: Assuming 'j' is >= field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:318; 6: Loop condition is false. Execution continues on line 324 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:318; 7: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 8: Left side of '||' is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 9: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 10: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 11: Assuming the condition is true in ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:16631,Energy Efficiency,allocate,allocated,16631,/pymva/src/MethodPyTorch.cxx:318; 7: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 8: Left side of '||' is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 9: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 10: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 11: Assuming the condition is true in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:330; 12: Taking true branch in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:330; 13: Assuming 'j' is >= field 'fNOutputs' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:331; 14: Loop condition is false. Execution continues on line 338 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:331; 15: Assuming 'i' is >= 'nTrainingEvents' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 16: Loop condition is false. Execution continues on line 341 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 17: Memory is allocated in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:360; 18: 'i' is < 'nValEvents' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:363; 19: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:363; 20: Assuming 'j' is >= field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:367; 21: Loop condition is false. Execution continues on line 371 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:367; 22: Assuming the condition is true in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:371; 23: Left side of '||' is true in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:371; 24: Assuming 'j' is >= field 'fNOutputs' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:372; 25: Loop condition is false. Execution continues on line 375 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:372; 26: Use of zero-allocated memory in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:375; /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:379:39: warning: Use of zero-allocated,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:17491,Energy Efficiency,allocate,allocated,17491,condition is false. Execution continues on line 341 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 17: Memory is allocated in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:360; 18: 'i' is < 'nValEvents' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:363; 19: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:363; 20: Assuming 'j' is >= field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:367; 21: Loop condition is false. Execution continues on line 371 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:367; 22: Assuming the condition is true in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:371; 23: Left side of '||' is true in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:371; 24: Assuming 'j' is >= field 'fNOutputs' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:372; 25: Loop condition is false. Execution continues on line 375 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:372; 26: Use of zero-allocated memory in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:375; /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:379:39: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming field 'fModelIsSetup' is true in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:298; 2: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:298; 3: 'i' is < 'nTrainingEvents' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 4: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 5: Assuming 'j' is >= field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:318; 6: Loop condition is false. Execution continues on line 324 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:318; 7: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 8: Left side of '||' is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 9: Assuming the condition is false in /opt/root_src/tmva/pymva/src/Method,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:17639,Energy Efficiency,allocate,allocated,17639,/opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:360; 18: 'i' is < 'nValEvents' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:363; 19: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:363; 20: Assuming 'j' is >= field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:367; 21: Loop condition is false. Execution continues on line 371 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:367; 22: Assuming the condition is true in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:371; 23: Left side of '||' is true in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:371; 24: Assuming 'j' is >= field 'fNOutputs' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:372; 25: Loop condition is false. Execution continues on line 375 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:372; 26: Use of zero-allocated memory in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:375; /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:379:39: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming field 'fModelIsSetup' is true in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:298; 2: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:298; 3: 'i' is < 'nTrainingEvents' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 4: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 5: Assuming 'j' is >= field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:318; 6: Loop condition is false. Execution continues on line 324 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:318; 7: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 8: Left side of '||' is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 9: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 10: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 11: Assuming the condition is true in ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:19212,Energy Efficiency,allocate,allocated,19212,/pymva/src/MethodPyTorch.cxx:318; 7: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 8: Left side of '||' is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 9: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 10: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 11: Assuming the condition is true in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:330; 12: Taking true branch in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:330; 13: Assuming 'j' is >= field 'fNOutputs' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:331; 14: Loop condition is false. Execution continues on line 338 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:331; 15: Assuming 'i' is >= 'nTrainingEvents' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 16: Loop condition is false. Execution continues on line 341 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 17: Memory is allocated in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:360; 18: 'i' is < 'nValEvents' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:363; 19: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:363; 20: Assuming 'j' is >= field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:367; 21: Loop condition is false. Execution continues on line 371 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:367; 22: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:371; 23: Left side of '||' is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:371; 24: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:371; 25: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:371; 26: Assuming the condition is true in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:377; 27: Taking true branch in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:377; 28: Assuming 'j' is < field 'fNOutputs' in /o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:20397,Energy Efficiency,allocate,allocated,20397,t_src/tmva/pymva/src/MethodPyTorch.cxx:363; 20: Assuming 'j' is >= field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:367; 21: Loop condition is false. Execution continues on line 371 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:367; 22: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:371; 23: Left side of '||' is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:371; 24: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:371; 25: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:371; 26: Assuming the condition is true in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:377; 27: Taking true branch in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:377; 28: Assuming 'j' is < field 'fNOutputs' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:378; 29: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:378; 30: Use of zero-allocated memory in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:379; /opt/root_src/tmva/tmva/inc/TMVA/BinaryTree.h:83:39: warning: Use of memory after it is freed [clang-analyzer-cplusplus.NewDelete]; 1: Calling 'BinaryTree::Read' in /opt/root_src/tmva/tmva/src/BinaryTree.cxx:206; 2: Assuming 'currentNode' is not equal to null in /opt/root_src/tmva/tmva/src/BinaryTree.cxx:174; 3: Taking false branch in /opt/root_src/tmva/tmva/src/BinaryTree.cxx:174; 4: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/BinaryTree.cxx:179; 5: Assuming the condition is true in /opt/root_src/tmva/tmva/src/BinaryTree.cxx:180; 6: Taking true branch in /opt/root_src/tmva/tmva/src/BinaryTree.cxx:180; 7: Memory is released in /opt/root_src/tmva/tmva/src/BinaryTree.cxx:181; 8: Calling 'BinaryTree::SetTotalTreeDepth' in /opt/root_src/tmva/tmva/src/BinaryTree.cxx:182; 9: 'n' is equal to NULL in /opt/root_src/tmva/tmva/src/BinaryTree.cxx:215; 10: Taking true branch in /opt/root_src/tmva/tmva/src/BinaryTree.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:32428,Energy Efficiency,allocate,allocated,32428,Stores]; 1: Value stored to 'event' during its initialization is never read in /opt/root_src/tmva/tmva/src/DNN/Architectures/Reference/TensorDataLoader.cxx:236; /opt/root_src/tmva/tmva/src/DataInputHandler.cxx:89:8: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Passing value via 1st parameter 'tree' in /opt/root_src/tmva/tmva/src/DataInputHandler.cxx:126; 2: Calling 'DataInputHandler::AddTree' in /opt/root_src/tmva/tmva/src/DataInputHandler.cxx:126; 3: Assuming 'tree' is null in /opt/root_src/tmva/tmva/src/DataInputHandler.cxx:88; 4: Taking true branch in /opt/root_src/tmva/tmva/src/DataInputHandler.cxx:88; 5: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/DataInputHandler.cxx:89; /opt/root_src/tmva/tmva/src/DataLoader.cxx:182:83: warning: Potential leak of memory pointed to by 'handler' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Taking false branch in /opt/root_src/tmva/tmva/src/DataLoader.cxx:150; 2: Memory is allocated in /opt/root_src/tmva/tmva/src/DataLoader.cxx:164; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/DataLoader.cxx:166; 4: Taking false branch in /opt/root_src/tmva/tmva/src/DataLoader.cxx:166; 5: Potential leak of memory pointed to by 'handler' in /opt/root_src/tmva/tmva/src/DataLoader.cxx:182; /opt/root_src/tmva/tmva/src/DataLoader.cxx:362:36: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Passing value via 1st parameter 'tree' in /opt/root_src/tmva/tmva/src/DataLoader.cxx:477; 2: Calling 'DataLoader::AddTree' in /opt/root_src/tmva/tmva/src/DataLoader.cxx:477; 3: Assuming 'tree' is null in /opt/root_src/tmva/tmva/src/DataLoader.cxx:353; 4: Taking true branch in /opt/root_src/tmva/tmva/src/DataLoader.cxx:353; 5: Assuming field 'fAnalysisType' is not equal to kNoAnalysisType in /opt/root_src/tmva/tmva/src/DataLoader.cxx:359; 6: Left side of '&&' is false in /opt/root_src/tmva/tmva/src/DataLoader.cxx:359; 7: Called C++ object pointer is n,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:35048,Energy Efficiency,allocate,allocated,35048,aSetInfo.cxx:485; 6: Taking true branch in /opt/root_src/tmva/tmva/src/DataSetInfo.cxx:485; 7: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/DataSetInfo.cxx:487; /opt/root_src/tmva/tmva/src/DataSetManager.cxx:91:11: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Assuming 'dsi' is non-null in /opt/root_src/tmva/tmva/src/DataSetManager.cxx:86; 2: Taking false branch in /opt/root_src/tmva/tmva/src/DataSetManager.cxx:86; 3: Assuming field 'fDataInput' is null in /opt/root_src/tmva/tmva/src/DataSetManager.cxx:87; 4: Taking true branch in /opt/root_src/tmva/tmva/src/DataSetManager.cxx:87; 5: Assuming field 'fDatasetFactory' is non-null in /opt/root_src/tmva/tmva/src/DataSetManager.cxx:90; 6: Taking false branch in /opt/root_src/tmva/tmva/src/DataSetManager.cxx:90; 7: Forming reference to null pointer in /opt/root_src/tmva/tmva/src/DataSetManager.cxx:91; /opt/root_src/tmva/tmva/src/DecisionTree.cxx:1558:29: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: 'ivar' is <= field 'fNvars' in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:1383; 2: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:1383; 3: Assuming 'ivar' is > field 'fNvars' in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:1383; 4: Loop condition is false. Execution continues on line 1388 in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:1383; 5: Assuming field 'fRandomisedTree' is false in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:1401; 6: Taking false branch in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:1401; 7: Loop condition is false. Execution continues on line 1412 in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:1406; 8: Assuming field 'fUseFisherCuts' is false in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:1416; 9: Taking false branch in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:1416; 10: Field 'fUseFisherCuts' is false in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:1475; 1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:36151,Energy Efficiency,allocate,allocated,36151,ecisionTree.cxx:1383; 2: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:1383; 3: Assuming 'ivar' is > field 'fNvars' in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:1383; 4: Loop condition is false. Execution continues on line 1388 in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:1383; 5: Assuming field 'fRandomisedTree' is false in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:1401; 6: Taking false branch in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:1401; 7: Loop condition is false. Execution continues on line 1412 in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:1406; 8: Assuming field 'fUseFisherCuts' is false in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:1416; 9: Taking false branch in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:1416; 10: Field 'fUseFisherCuts' is false in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:1475; 11: Left side of '&&' is false in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:1475; 12: Memory is allocated in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:1487; 13: Loop condition is false. Execution continues on line 1503 in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:1490; 14: Loop condition is false. Execution continues on line 1542 in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:1503; 15: Calling 'Executor::Map' in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:1576; 16: Taking false branch in /opt/root_src/tmva/tmva/inc/TMVA/Executor.h:140; 17: Calling 'TExecutorCRTP::Map' in /opt/root_src/tmva/tmva/inc/TMVA/Executor.h:141; 18: Calling 'TSequentialExecutor::MapImpl' in /opt/root_src/core/base/inc/ROOT/TExecutorCRTP.hxx:193; 19: Calling 'operator()' in /opt/root_src/core/base/inc/ROOT/TSequentialExecutor.hxx:164; 20: Assuming the condition is true in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:1545; 21: Taking true branch in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:1545; 22: Use of zero-allocated memory in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:1558; /opt/root_src/tmva/tmva/src/Dec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:37064,Energy Efficiency,allocate,allocated,37064,e in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:1475; 12: Memory is allocated in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:1487; 13: Loop condition is false. Execution continues on line 1503 in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:1490; 14: Loop condition is false. Execution continues on line 1542 in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:1503; 15: Calling 'Executor::Map' in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:1576; 16: Taking false branch in /opt/root_src/tmva/tmva/inc/TMVA/Executor.h:140; 17: Calling 'TExecutorCRTP::Map' in /opt/root_src/tmva/tmva/inc/TMVA/Executor.h:141; 18: Calling 'TSequentialExecutor::MapImpl' in /opt/root_src/core/base/inc/ROOT/TExecutorCRTP.hxx:193; 19: Calling 'operator()' in /opt/root_src/core/base/inc/ROOT/TSequentialExecutor.hxx:164; 20: Assuming the condition is true in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:1545; 21: Taking true branch in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:1545; 22: Use of zero-allocated memory in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:1558; /opt/root_src/tmva/tmva/src/DecisionTree.cxx:2698:11: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'current' is non-null in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:2693; 2: Taking false branch in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:2693; 3: Assuming the condition is true in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:2698; 4: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:2698; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:2699; 6: '?' condition is false in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:2699; 7: Value assigned to 'current' in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:2699; 8: Assuming 'current' is null in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:2702; 9: Taking true branch in /opt/root_src/tmva/tmva/src/DecisionTree.cxx:2702; 10: Called C++ object pointer is null in /opt,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:141786,Energy Efficiency,allocate,allocated,141786,"c/BDT_Reg.cxx:309; 20: Taking false branch in /opt/root_src/tmva/tmvagui/src/BDT_Reg.cxx:309; 21: 6th function call argument is an uninitialized value in /opt/root_src/tmva/tmvagui/src/BDT_Reg.cxx:312; /opt/root_src/tmva/tmvagui/src/likelihoodrefs.cxx:54:16: warning: Value stored to 'newCanvas' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'newCanvas' is never read in /opt/root_src/tmva/tmvagui/src/likelihoodrefs.cxx:54; /opt/root_src/tmva/tmvagui/src/likelihoodrefs.cxx:170:1: warning: Potential leak of memory pointed to by 'c' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Assuming 'ninst' is not equal to 0 in /opt/root_src/tmva/tmvagui/src/likelihoodrefs.cxx:184; 2: Taking false branch in /opt/root_src/tmva/tmvagui/src/likelihoodrefs.cxx:184; 3: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmvagui/src/likelihoodrefs.cxx:192; 4: Calling 'likelihoodrefs' in /opt/root_src/tmva/tmvagui/src/likelihoodrefs.cxx:194; 5: Memory is allocated in /opt/root_src/tmva/tmvagui/src/likelihoodrefs.cxx:19; 6: Loop condition is false. Execution continues on line 247 in /opt/root_src/tmva/tmvagui/src/likelihoodrefs.cxx:30; 7: Potential leak of memory pointed to by 'c' in /opt/root_src/tmva/tmvagui/src/likelihoodrefs.cxx:170; /opt/root_src/tmva/tmvagui/src/network.cxx:53:10: warning: Value stored to 'iyc' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'iyc' during its initialization is never read in /opt/root_src/tmva/tmvagui/src/network.cxx:53; /opt/root_src/tmva/tmvagui/src/network.cxx:54:25: warning: Although the value stored to 'iyc' is used in the enclosing expression, the value is never actually read from 'iyc' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'iyc' is used in the enclosing expression, the value is never actually read from 'iyc' in /opt/root_src/tmva/tmvagui/src/network.cxx:54; /opt/root_src/tmva/tmvagui/src/regression_averagedevs.cxx:19:18: warning: V",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:24548,Modifiability,Config,Configurable,24548,"; 1: Calling 'Classification::TrainMethod' in /opt/root_src/tmva/tmva/src/Classification.cxx:374; 2: Calling 'Classification::GetMethod' in /opt/root_src/tmva/tmva/src/Classification.cxx:338; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:388; 4: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:388; 5: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:394; 6: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:398; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:398; 8: Calling 'Classification::GetMethodOptions' in /opt/root_src/tmva/tmva/src/Classification.cxx:405; 9: Value assigned to field 'fModelPersistence', which participates in a condition later in /opt/root_src/tmva/tmva/src/Classification.cxx:236; 10: Returning from 'Classification::GetMethodOptions' in /opt/root_src/tmva/tmva/src/Classification.cxx:405; 11: Calling 'Configurable::DeclareOptionRef' in /opt/root_src/tmva/tmva/src/Classification.cxx:410; 12: Calling constructor for 'Option<int>' in /opt/root_src/tmva/tmva/inc/TMVA/Configurable.h:150; 13: Value assigned to 'boostNum', which participates in a condition later in /opt/root_src/tmva/tmva/inc/TMVA/Option.h:101; 14: Returning from constructor for 'Option<int>' in /opt/root_src/tmva/tmva/inc/TMVA/Configurable.h:150; 15: Returning from 'Configurable::DeclareOptionRef' in /opt/root_src/tmva/tmva/src/Classification.cxx:410; 16: Assuming field 'fModelPersistence' is true in /opt/root_src/tmva/tmva/src/Classification.cxx:415; 17: Taking true branch in /opt/root_src/tmva/tmva/src/Classification.cxx:415; 18: Assuming 'boostNum' is not equal to 0 in /opt/root_src/tmva/tmva/src/Classification.cxx:423; 19: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:423; 20: Value assigned to 'im' in /opt/root_src/tmva/tmva/src/Classification.cxx:429; 21: 'methBoost' initialized here in /opt/root_src/tmva/tmva/src/Class",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:24713,Modifiability,Config,Configurable,24713," Calling 'Classification::GetMethod' in /opt/root_src/tmva/tmva/src/Classification.cxx:338; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:388; 4: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:388; 5: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:394; 6: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:398; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:398; 8: Calling 'Classification::GetMethodOptions' in /opt/root_src/tmva/tmva/src/Classification.cxx:405; 9: Value assigned to field 'fModelPersistence', which participates in a condition later in /opt/root_src/tmva/tmva/src/Classification.cxx:236; 10: Returning from 'Classification::GetMethodOptions' in /opt/root_src/tmva/tmva/src/Classification.cxx:405; 11: Calling 'Configurable::DeclareOptionRef' in /opt/root_src/tmva/tmva/src/Classification.cxx:410; 12: Calling constructor for 'Option<int>' in /opt/root_src/tmva/tmva/inc/TMVA/Configurable.h:150; 13: Value assigned to 'boostNum', which participates in a condition later in /opt/root_src/tmva/tmva/inc/TMVA/Option.h:101; 14: Returning from constructor for 'Option<int>' in /opt/root_src/tmva/tmva/inc/TMVA/Configurable.h:150; 15: Returning from 'Configurable::DeclareOptionRef' in /opt/root_src/tmva/tmva/src/Classification.cxx:410; 16: Assuming field 'fModelPersistence' is true in /opt/root_src/tmva/tmva/src/Classification.cxx:415; 17: Taking true branch in /opt/root_src/tmva/tmva/src/Classification.cxx:415; 18: Assuming 'boostNum' is not equal to 0 in /opt/root_src/tmva/tmva/src/Classification.cxx:423; 19: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:423; 20: Value assigned to 'im' in /opt/root_src/tmva/tmva/src/Classification.cxx:429; 21: 'methBoost' initialized here in /opt/root_src/tmva/tmva/src/Classification.cxx:431; 22: Assuming 'methBoost' is null in /opt/root_src/tmva/tmva/src/Classification.cx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:24942,Modifiability,Config,Configurable,24942,"/tmva/src/Classification.cxx:388; 5: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:394; 6: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:398; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:398; 8: Calling 'Classification::GetMethodOptions' in /opt/root_src/tmva/tmva/src/Classification.cxx:405; 9: Value assigned to field 'fModelPersistence', which participates in a condition later in /opt/root_src/tmva/tmva/src/Classification.cxx:236; 10: Returning from 'Classification::GetMethodOptions' in /opt/root_src/tmva/tmva/src/Classification.cxx:405; 11: Calling 'Configurable::DeclareOptionRef' in /opt/root_src/tmva/tmva/src/Classification.cxx:410; 12: Calling constructor for 'Option<int>' in /opt/root_src/tmva/tmva/inc/TMVA/Configurable.h:150; 13: Value assigned to 'boostNum', which participates in a condition later in /opt/root_src/tmva/tmva/inc/TMVA/Option.h:101; 14: Returning from constructor for 'Option<int>' in /opt/root_src/tmva/tmva/inc/TMVA/Configurable.h:150; 15: Returning from 'Configurable::DeclareOptionRef' in /opt/root_src/tmva/tmva/src/Classification.cxx:410; 16: Assuming field 'fModelPersistence' is true in /opt/root_src/tmva/tmva/src/Classification.cxx:415; 17: Taking true branch in /opt/root_src/tmva/tmva/src/Classification.cxx:415; 18: Assuming 'boostNum' is not equal to 0 in /opt/root_src/tmva/tmva/src/Classification.cxx:423; 19: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:423; 20: Value assigned to 'im' in /opt/root_src/tmva/tmva/src/Classification.cxx:429; 21: 'methBoost' initialized here in /opt/root_src/tmva/tmva/src/Classification.cxx:431; 22: Assuming 'methBoost' is null in /opt/root_src/tmva/tmva/src/Classification.cxx:432; 23: Assuming pointer value is null in /opt/root_src/tmva/tmva/src/Classification.cxx:432; 24: Taking true branch in /opt/root_src/tmva/tmva/src/Classification.cxx:432; 25: Field 'fModelPersistence' is true in /opt/root_s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:24982,Modifiability,Config,Configurable,24982,"x:394; 6: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:398; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:398; 8: Calling 'Classification::GetMethodOptions' in /opt/root_src/tmva/tmva/src/Classification.cxx:405; 9: Value assigned to field 'fModelPersistence', which participates in a condition later in /opt/root_src/tmva/tmva/src/Classification.cxx:236; 10: Returning from 'Classification::GetMethodOptions' in /opt/root_src/tmva/tmva/src/Classification.cxx:405; 11: Calling 'Configurable::DeclareOptionRef' in /opt/root_src/tmva/tmva/src/Classification.cxx:410; 12: Calling constructor for 'Option<int>' in /opt/root_src/tmva/tmva/inc/TMVA/Configurable.h:150; 13: Value assigned to 'boostNum', which participates in a condition later in /opt/root_src/tmva/tmva/inc/TMVA/Option.h:101; 14: Returning from constructor for 'Option<int>' in /opt/root_src/tmva/tmva/inc/TMVA/Configurable.h:150; 15: Returning from 'Configurable::DeclareOptionRef' in /opt/root_src/tmva/tmva/src/Classification.cxx:410; 16: Assuming field 'fModelPersistence' is true in /opt/root_src/tmva/tmva/src/Classification.cxx:415; 17: Taking true branch in /opt/root_src/tmva/tmva/src/Classification.cxx:415; 18: Assuming 'boostNum' is not equal to 0 in /opt/root_src/tmva/tmva/src/Classification.cxx:423; 19: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:423; 20: Value assigned to 'im' in /opt/root_src/tmva/tmva/src/Classification.cxx:429; 21: 'methBoost' initialized here in /opt/root_src/tmva/tmva/src/Classification.cxx:431; 22: Assuming 'methBoost' is null in /opt/root_src/tmva/tmva/src/Classification.cxx:432; 23: Assuming pointer value is null in /opt/root_src/tmva/tmva/src/Classification.cxx:432; 24: Taking true branch in /opt/root_src/tmva/tmva/src/Classification.cxx:432; 25: Field 'fModelPersistence' is true in /opt/root_src/tmva/tmva/src/Classification.cxx:435; 26: Taking true branch in /opt/root_src/tmva/tmva/src/Classifica",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:26956,Modifiability,Config,Configurable,26956,"tmva/tmva/src/Classification.cxx:435; 27: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/Classification.cxx:436; /opt/root_src/tmva/tmva/src/Classification.cxx:437:7: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Calling 'Classification::TrainMethod' in /opt/root_src/tmva/tmva/src/Classification.cxx:374; 2: Calling 'Classification::GetMethod' in /opt/root_src/tmva/tmva/src/Classification.cxx:338; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:388; 4: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:388; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:394; 6: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:394; 7: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:398; 8: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:398; 9: Calling 'Configurable::DeclareOptionRef' in /opt/root_src/tmva/tmva/src/Classification.cxx:410; 10: Calling constructor for 'Option<int>' in /opt/root_src/tmva/tmva/inc/TMVA/Configurable.h:150; 11: Value assigned to 'boostNum', which participates in a condition later in /opt/root_src/tmva/tmva/inc/TMVA/Option.h:101; 12: Returning from constructor for 'Option<int>' in /opt/root_src/tmva/tmva/inc/TMVA/Configurable.h:150; 13: Returning from 'Configurable::DeclareOptionRef' in /opt/root_src/tmva/tmva/src/Classification.cxx:410; 14: Assuming field 'fModelPersistence' is false in /opt/root_src/tmva/tmva/src/Classification.cxx:415; 15: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:415; 16: Assuming 'boostNum' is not equal to 0 in /opt/root_src/tmva/tmva/src/Classification.cxx:423; 17: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:423; 18: Value assigned to 'im' in /opt/root_src/tmva/tmva/src/Classification.cxx:429; 19: 'methBoost' initialized here in /opt/root_src/tmva/tmva/src/Clas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:27121,Modifiability,Config,Configurable,27121,"va/src/Classification.cxx:436; /opt/root_src/tmva/tmva/src/Classification.cxx:437:7: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Calling 'Classification::TrainMethod' in /opt/root_src/tmva/tmva/src/Classification.cxx:374; 2: Calling 'Classification::GetMethod' in /opt/root_src/tmva/tmva/src/Classification.cxx:338; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:388; 4: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:388; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:394; 6: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:394; 7: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:398; 8: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:398; 9: Calling 'Configurable::DeclareOptionRef' in /opt/root_src/tmva/tmva/src/Classification.cxx:410; 10: Calling constructor for 'Option<int>' in /opt/root_src/tmva/tmva/inc/TMVA/Configurable.h:150; 11: Value assigned to 'boostNum', which participates in a condition later in /opt/root_src/tmva/tmva/inc/TMVA/Option.h:101; 12: Returning from constructor for 'Option<int>' in /opt/root_src/tmva/tmva/inc/TMVA/Configurable.h:150; 13: Returning from 'Configurable::DeclareOptionRef' in /opt/root_src/tmva/tmva/src/Classification.cxx:410; 14: Assuming field 'fModelPersistence' is false in /opt/root_src/tmva/tmva/src/Classification.cxx:415; 15: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:415; 16: Assuming 'boostNum' is not equal to 0 in /opt/root_src/tmva/tmva/src/Classification.cxx:423; 17: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:423; 18: Value assigned to 'im' in /opt/root_src/tmva/tmva/src/Classification.cxx:429; 19: 'methBoost' initialized here in /opt/root_src/tmva/tmva/src/Classification.cxx:431; 20: Assuming 'methBoost' is null in /opt/root_src/tmva/tmva/src/Classification.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:27350,Modifiability,Config,Configurable,27350,"va/tmva/src/Classification.cxx:374; 2: Calling 'Classification::GetMethod' in /opt/root_src/tmva/tmva/src/Classification.cxx:338; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:388; 4: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:388; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:394; 6: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:394; 7: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:398; 8: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:398; 9: Calling 'Configurable::DeclareOptionRef' in /opt/root_src/tmva/tmva/src/Classification.cxx:410; 10: Calling constructor for 'Option<int>' in /opt/root_src/tmva/tmva/inc/TMVA/Configurable.h:150; 11: Value assigned to 'boostNum', which participates in a condition later in /opt/root_src/tmva/tmva/inc/TMVA/Option.h:101; 12: Returning from constructor for 'Option<int>' in /opt/root_src/tmva/tmva/inc/TMVA/Configurable.h:150; 13: Returning from 'Configurable::DeclareOptionRef' in /opt/root_src/tmva/tmva/src/Classification.cxx:410; 14: Assuming field 'fModelPersistence' is false in /opt/root_src/tmva/tmva/src/Classification.cxx:415; 15: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:415; 16: Assuming 'boostNum' is not equal to 0 in /opt/root_src/tmva/tmva/src/Classification.cxx:423; 17: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:423; 18: Value assigned to 'im' in /opt/root_src/tmva/tmva/src/Classification.cxx:429; 19: 'methBoost' initialized here in /opt/root_src/tmva/tmva/src/Classification.cxx:431; 20: Assuming 'methBoost' is null in /opt/root_src/tmva/tmva/src/Classification.cxx:432; 21: Assuming pointer value is null in /opt/root_src/tmva/tmva/src/Classification.cxx:432; 22: Taking true branch in /opt/root_src/tmva/tmva/src/Classification.cxx:432; 23: Field 'fModelPersistence' is false in /opt/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:27390,Modifiability,Config,Configurable,27390,"/Classification.cxx:338; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:388; 4: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:388; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:394; 6: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:394; 7: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:398; 8: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:398; 9: Calling 'Configurable::DeclareOptionRef' in /opt/root_src/tmva/tmva/src/Classification.cxx:410; 10: Calling constructor for 'Option<int>' in /opt/root_src/tmva/tmva/inc/TMVA/Configurable.h:150; 11: Value assigned to 'boostNum', which participates in a condition later in /opt/root_src/tmva/tmva/inc/TMVA/Option.h:101; 12: Returning from constructor for 'Option<int>' in /opt/root_src/tmva/tmva/inc/TMVA/Configurable.h:150; 13: Returning from 'Configurable::DeclareOptionRef' in /opt/root_src/tmva/tmva/src/Classification.cxx:410; 14: Assuming field 'fModelPersistence' is false in /opt/root_src/tmva/tmva/src/Classification.cxx:415; 15: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:415; 16: Assuming 'boostNum' is not equal to 0 in /opt/root_src/tmva/tmva/src/Classification.cxx:423; 17: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:423; 18: Value assigned to 'im' in /opt/root_src/tmva/tmva/src/Classification.cxx:429; 19: 'methBoost' initialized here in /opt/root_src/tmva/tmva/src/Classification.cxx:431; 20: Assuming 'methBoost' is null in /opt/root_src/tmva/tmva/src/Classification.cxx:432; 21: Assuming pointer value is null in /opt/root_src/tmva/tmva/src/Classification.cxx:432; 22: Taking true branch in /opt/root_src/tmva/tmva/src/Classification.cxx:432; 23: Field 'fModelPersistence' is false in /opt/root_src/tmva/tmva/src/Classification.cxx:435; 24: Taking false branch in /opt/root_src/tmva/tmva/src/Classi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:55099,Modifiability,variab,variable,55099,src/MethodBase.cxx:2711; 5: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/MethodBase.cxx:2711; 6: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/MethodBase.cxx:2712; /opt/root_src/tmva/tmva/src/MethodBase.cxx:2715:21: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: 'resMulticlass' initialized here in /opt/root_src/tmva/tmva/src/MethodBase.cxx:2707; 2: Assuming 'resMulticlass' is null in /opt/root_src/tmva/tmva/src/MethodBase.cxx:2708; 3: Taking true branch in /opt/root_src/tmva/tmva/src/MethodBase.cxx:2708; 4: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodBase.cxx:2711; 5: Loop condition is false. Execution continues on line 2715 in /opt/root_src/tmva/tmva/src/MethodBase.cxx:2711; 6: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/MethodBase.cxx:2715; /opt/root_src/tmva/tmva/src/MethodBoost.cxx:410:35: warning: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:361; 2: Taking false branch in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:361; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:364; 4: Taking false branch in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:364; 5: Assuming 'varTrafoStart' is <= 0 in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:379; 6: Taking false branch in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:379; 7: Assuming field 'fCurrentMethodIdx' is < field 'fBoostNum' in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:388; 8: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:388; 9: Field 'fCurrentMethodIdx' is <= 0 in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:390; 10: Taking false branch in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:390; 11: 'method' initialized here in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:56892,Modifiability,variab,variable,56892,ntMethodIdx' is <= 0 in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:390; 10: Taking false branch in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:390; 11: 'method' initialized here in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:392; 12: Value assigned to field 'fCurrentMethod' in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:398; 13: Assuming field 'fCurrentMethod' is not equal to null in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:400; 14: Taking false branch in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:400; 15: Assuming the condition is true in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:406; 16: Taking true branch in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:406; 17: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:407; 18: 'methCat' is null in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:408; 19: Taking true branch in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:408; 20: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:410; /opt/root_src/tmva/tmva/src/MethodBoost.cxx:761:13: warning: Value stored to 'sSelCut' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'sSelCut' during its initialization is never read in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:761; /opt/root_src/tmva/tmva/src/MethodBoost.cxx:762:13: warning: Value stored to 'bSelCut' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'bSelCut' during its initialization is never read in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:762; /opt/root_src/tmva/tmva/src/MethodBoost.cxx:787:10: warning: Value stored to 'sSelCut' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'sSelCut' is never read in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:787; /opt/root_src/tmva/tmva/src/MethodBoost.cxx:788:10: warning: Value stored to 'bSelCut' is never read [,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:58087,Modifiability,variab,variable,58087,er-deadcode.DeadStores]; 1: Value stored to 'sSelCut' during its initialization is never read in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:761; /opt/root_src/tmva/tmva/src/MethodBoost.cxx:762:13: warning: Value stored to 'bSelCut' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'bSelCut' during its initialization is never read in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:762; /opt/root_src/tmva/tmva/src/MethodBoost.cxx:787:10: warning: Value stored to 'sSelCut' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'sSelCut' is never read in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:787; /opt/root_src/tmva/tmva/src/MethodBoost.cxx:788:10: warning: Value stored to 'bSelCut' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'bSelCut' is never read in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:788; /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:527:17: warning: Array access (from variable 'xpg') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming 'xpg' is equal to null in /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:516; 2: Taking true branch in /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:516; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:519; 4: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:519; 5: Assuming the condition is true in /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:526; 6: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:526; 7: Array access (from variable 'xpg') results in a null pointer dereference in /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:527; /opt/root_src/tmva/tmva/src/MethodCFMlpANN_Utils.cxx:440:16: warning: The expression is an uninitialized value. The computed value will also be garbage [clang-analyzer-core.uninitialized.Assign]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodC,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:58727,Modifiability,variab,variable,58727,cxx:787; /opt/root_src/tmva/tmva/src/MethodBoost.cxx:788:10: warning: Value stored to 'bSelCut' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'bSelCut' is never read in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:788; /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:527:17: warning: Array access (from variable 'xpg') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming 'xpg' is equal to null in /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:516; 2: Taking true branch in /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:516; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:519; 4: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:519; 5: Assuming the condition is true in /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:526; 6: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:526; 7: Array access (from variable 'xpg') results in a null pointer dereference in /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:527; /opt/root_src/tmva/tmva/src/MethodCFMlpANN_Utils.cxx:440:16: warning: The expression is an uninitialized value. The computed value will also be garbage [clang-analyzer-core.uninitialized.Assign]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodCFMlpANN_Utils.cxx:158; 2: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCFMlpANN_Utils.cxx:158; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodCFMlpANN_Utils.cxx:164; 4: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCFMlpANN_Utils.cxx:164; 5: Assuming the condition is true in /opt/root_src/tmva/tmva/src/MethodCFMlpANN_Utils.cxx:169; 6: Taking true branch in /opt/root_src/tmva/tmva/src/MethodCFMlpANN_Utils.cxx:169; 7: Assuming the condition is true in /opt/root_src/tmva/tmva/src/MethodCFMlpANN_Utils.cxx:174; 8: Taking true branch in /opt/root_src/tmva/tmva/src/MethodCFMlpANN_Utils.cxx:174; 9: Assuming th,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:84616,Modifiability,Variab,Variable,84616,6: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:652; 27: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:656; 28: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:656; 29: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:640; 30: Loop condition is false. Execution continues on line 668 in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:640; 31: 'fitter' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:668; 32: Control jumps to the 'default' case at line 683 in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:670; 33: Assuming field 'fInteractive' is null in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:687; 34: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:687; 35: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:689; /opt/root_src/tmva/tmva/src/MethodCuts.cxx:818:4: warning: Variable 'eff' with floating point type 'Double_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]; 1: Variable 'eff' with floating point type 'Double_t' should not be used as a loop counter in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:818; /opt/root_src/tmva/tmva/src/MethodDL.cxx:1348:52: warning: Division by zero [clang-analyzer-core.DivideZero]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1174; 2: Assuming 'batchDepth' is equal to 'batchSize' in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1219; 3: Left side of '&&' is false in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1219; 4: Assuming 'batchDepth' is not equal to 1 in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1223; 5: Left side of '&&' is false in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1223; 6: 'batchDepth' is equal to 'batchSize' in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1232; 7: Taking true branch in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1232; 8: Assuming the condition is false in /opt/root_src/tmva/tmva/sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:84751,Modifiability,Variab,Variable,84751,thodCuts.cxx:656; 28: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:656; 29: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:640; 30: Loop condition is false. Execution continues on line 668 in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:640; 31: 'fitter' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:668; 32: Control jumps to the 'default' case at line 683 in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:670; 33: Assuming field 'fInteractive' is null in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:687; 34: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:687; 35: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:689; /opt/root_src/tmva/tmva/src/MethodCuts.cxx:818:4: warning: Variable 'eff' with floating point type 'Double_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]; 1: Variable 'eff' with floating point type 'Double_t' should not be used as a loop counter in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:818; /opt/root_src/tmva/tmva/src/MethodDL.cxx:1348:52: warning: Division by zero [clang-analyzer-core.DivideZero]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1174; 2: Assuming 'batchDepth' is equal to 'batchSize' in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1219; 3: Left side of '&&' is false in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1219; 4: Assuming 'batchDepth' is not equal to 1 in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1223; 5: Left side of '&&' is false in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1223; 6: 'batchDepth' is equal to 'batchSize' in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1232; 7: Taking true branch in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1232; 8: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1233; 9: Assuming 'batchHeight' is not equal to 'batchSize' in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1235; 10: Left side of ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:107990,Modifiability,variab,variable,107990,suming 'nbin' is >= 1 in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:187; 14: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:187; 15: Assuming 'h1' is null in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:198; 16: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:198; 17: Value assigned to 'h1' in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:199; 18: Assuming 'h1' is null in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:201; 19: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:201; 20: Assuming 'cell_value' is not equal to kValue in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:202; 21: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:202; 22: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:208; /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:86:36: warning: Access to field 'fLastCe' results in a dereference of a null pointer (loaded from variable 'foam') [clang-analyzer-core.NullDereference]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:81; 2: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:81; 3: Access to field 'fLastCe' results in a dereference of a null pointer (loaded from variable 'foam') in /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:86; /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:112:31: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:79; 2: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:79; 3: Passing null pointer value via 1st parameter 'foam' in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:82; 4: Calling 'PDEFoamKernelLinN::WeightLinNeighbors' in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:82; 5: Called C++ object pointer is null in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:108305,Modifiability,variab,variable,108305,; 17: Value assigned to 'h1' in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:199; 18: Assuming 'h1' is null in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:201; 19: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:201; 20: Assuming 'cell_value' is not equal to kValue in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:202; 21: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:202; 22: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:208; /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:86:36: warning: Access to field 'fLastCe' results in a dereference of a null pointer (loaded from variable 'foam') [clang-analyzer-core.NullDereference]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:81; 2: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:81; 3: Access to field 'fLastCe' results in a dereference of a null pointer (loaded from variable 'foam') in /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:86; /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:112:31: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:79; 2: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:79; 3: Passing null pointer value via 1st parameter 'foam' in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:82; 4: Calling 'PDEFoamKernelLinN::WeightLinNeighbors' in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:82; 5: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:112; /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx:80:30: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx:77; 2: Taking true branch in /opt/root_src/tmva/tmva/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:110076,Modifiability,variab,variable,110076,"KernelTrivial.cxx:80:30: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx:77; 2: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx:77; 3: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx:80; /opt/root_src/tmva/tmva/src/PDF.cxx:267:8: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Passing value via 1st parameter 'hist' in /opt/root_src/tmva/tmva/src/PDF.cxx:188; 2: Calling 'PDF::BuildPDF' in /opt/root_src/tmva/tmva/src/PDF.cxx:188; 3: Assuming 'hist' is equal to NULL in /opt/root_src/tmva/tmva/src/PDF.cxx:264; 4: Taking true branch in /opt/root_src/tmva/tmva/src/PDF.cxx:264; 5: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/PDF.cxx:267; /opt/root_src/tmva/tmva/src/Reader.cxx:384:32: warning: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 2: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 3: Calling 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 4: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:395; 5: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:398; 6: Assuming 'method' is not equal to null in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 8: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 9: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 10: Returning pointer (loaded from 'method'), which participates in a condition later in /opt/root_src/tmva/tmva/src/Reader.cxx:424; 11: Returning pointer (loaded from 'method') in /opt/root_src/tmva/tmva/src/Reader.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:111839,Modifiability,variab,variable,111839,":402; 10: Returning pointer (loaded from 'method'), which participates in a condition later in /opt/root_src/tmva/tmva/src/Reader.cxx:424; 11: Returning pointer (loaded from 'method') in /opt/root_src/tmva/tmva/src/Reader.cxx:424; 12: Returning from 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 13: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 14: 'method' is non-null in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 15: Left side of '&&' is true in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 16: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 17: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 18: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:381; 19: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:382; 20: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:382; 21: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva/tmva/src/Reader.cxx:384; /opt/root_src/tmva/tmva/src/Reader.cxx:406:32: warning: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 2: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 3: Calling 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 4: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:395; 5: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:398; 6: Assuming 'method' is not equal to null in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 9: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 10: 'methCat' initial",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:112052,Modifiability,variab,variable,112052,tmva/tmva/src/Reader.cxx:424; 12: Returning from 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 13: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 14: 'method' is non-null in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 15: Left side of '&&' is true in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 16: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 17: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 18: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:381; 19: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:382; 20: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:382; 21: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva/tmva/src/Reader.cxx:384; /opt/root_src/tmva/tmva/src/Reader.cxx:406:32: warning: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 2: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 3: Calling 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 4: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:395; 5: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:398; 6: Assuming 'method' is not equal to null in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 9: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 10: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:403; 11: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:404; 12: Taking true branch in /opt/root_src/tmva/tmva/src/R,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:113126,Modifiability,variab,variable,113126,rence]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 2: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 3: Calling 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 4: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:395; 5: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:398; 6: Assuming 'method' is not equal to null in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 9: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 10: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:403; 11: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:404; 12: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:404; 13: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva/tmva/src/Reader.cxx:406; /opt/root_src/tmva/tmva/src/Reader.cxx:443:32: warning: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:432; 2: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:435; 3: Assuming 'method' is non-null in /opt/root_src/tmva/tmva/src/Reader.cxx:437; 4: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:437; 5: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:439; 6: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:439; 7: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:440; 8: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:441; 9: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:441; 10: Access to field 'fDat,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:113339,Modifiability,variab,variable,113339,_src/tmva/tmva/src/Reader.cxx:378; 4: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:395; 5: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:398; 6: Assuming 'method' is not equal to null in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 9: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 10: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:403; 11: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:404; 12: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:404; 13: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva/tmva/src/Reader.cxx:406; /opt/root_src/tmva/tmva/src/Reader.cxx:443:32: warning: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:432; 2: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:435; 3: Assuming 'method' is non-null in /opt/root_src/tmva/tmva/src/Reader.cxx:437; 4: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:437; 5: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:439; 6: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:439; 7: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:440; 8: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:441; 9: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:441; 10: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva/tmva/src/Reader.cxx:443; /opt/root_src/tmva/tmva/src/Reader.cxx:535:22: warning: Called C,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:114173,Modifiability,variab,variable,114173,opt/root_src/tmva/tmva/src/Reader.cxx:406; /opt/root_src/tmva/tmva/src/Reader.cxx:443:32: warning: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:432; 2: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:435; 3: Assuming 'method' is non-null in /opt/root_src/tmva/tmva/src/Reader.cxx:437; 4: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:437; 5: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:439; 6: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:439; 7: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:440; 8: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:441; 9: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:441; 10: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva/tmva/src/Reader.cxx:443; /opt/root_src/tmva/tmva/src/Reader.cxx:535:22: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:519; 2: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:519; 3: Value assigned to 'method' in /opt/root_src/tmva/tmva/src/Reader.cxx:526; 4: 'kl' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:528; 5: Assuming 'kl' is equal to null in /opt/root_src/tmva/tmva/src/Reader.cxx:530; 6: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:530; 7: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/Reader.cxx:535; /opt/root_src/tmva/tmva/src/Reader.cxx:584:22: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Calling 'Reader::EvaluateRegression' in /opt/root_src/tmva/tmva/src/Reader.cxx:617; 2: Assuming the condition is fals,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:133420,Modifiability,Variab,VariableDecorrTransform,133420,n /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:894; 7: Assuming the condition is false in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:897; 8: Taking false branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:897; 9: Assuming the condition is false in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:900; 10: Taking false branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:900; 11: Assuming the condition is false in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:903; 12: Taking false branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:903; 13: Assuming the condition is false in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:906; 14: Taking false branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:906; 15: Taking true branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:909; 16: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:915; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139:18: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 2: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 4: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 5: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:122; 6: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 7: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 10: Assuming 'ivar' is < 'nvar' in /opt/root_src/tmv,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:133594,Modifiability,Variab,VariableDecorrTransform,133594,; 8: Taking false branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:897; 9: Assuming the condition is false in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:900; 10: Taking false branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:900; 11: Assuming the condition is false in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:903; 12: Taking false branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:903; 13: Assuming the condition is false in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:906; 14: Taking false branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:906; 15: Taking true branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:909; 16: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:915; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139:18: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 2: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 4: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 5: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:122; 6: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 7: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 10: Assuming 'ivar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 11: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:133688,Modifiability,Variab,VariableDecorrTransform,133688,ng the condition is false in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:900; 10: Taking false branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:900; 11: Assuming the condition is false in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:903; 12: Taking false branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:903; 13: Assuming the condition is false in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:906; 14: Taking false branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:906; 15: Taking true branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:909; 16: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:915; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139:18: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 2: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 4: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 5: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:122; 6: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 7: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 10: Assuming 'ivar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 11: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 12: 'jvar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 13: Loop ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:133787,Modifiability,Variab,VariableDecorrTransform,133787,ng false branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:900; 11: Assuming the condition is false in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:903; 12: Taking false branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:903; 13: Assuming the condition is false in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:906; 14: Taking false branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:906; 15: Taking true branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:909; 16: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:915; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139:18: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 2: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 4: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 5: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:122; 6: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 7: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 10: Assuming 'ivar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 11: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 12: 'jvar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 13: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:133874,Modifiability,Variab,VariableDecorrTransform,133874,e condition is false in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:903; 12: Taking false branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:903; 13: Assuming the condition is false in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:906; 14: Taking false branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:906; 15: Taking true branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:909; 16: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:915; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139:18: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 2: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 4: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 5: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:122; 6: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 7: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 10: Assuming 'ivar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 11: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 12: 'jvar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 13: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 14: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/VariableDecorrTrans,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:133962,Modifiability,Variab,VariableDecorrTransform,133962,aking false branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:903; 13: Assuming the condition is false in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:906; 14: Taking false branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:906; 15: Taking true branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:909; 16: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:915; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139:18: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 2: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 4: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 5: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:122; 6: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 7: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 10: Assuming 'ivar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 11: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 12: 'jvar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 13: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 14: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219:4: warning: F,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:134059,Modifiability,Variab,VariableDecorrTransform,134059,g the condition is false in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:906; 14: Taking false branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:906; 15: Taking true branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:909; 16: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:915; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139:18: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 2: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 4: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 5: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:122; 6: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 7: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 10: Assuming 'ivar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 11: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 12: 'jvar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 13: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 14: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219:4: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:134145,Modifiability,Variab,VariableDecorrTransform,134145,aking false branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:906; 15: Taking true branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:909; 16: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:915; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139:18: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 2: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 4: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 5: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:122; 6: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 7: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 10: Assuming 'ivar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 11: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 12: 'jvar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 13: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 14: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219:4: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 2: Taking,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:134243,Modifiability,Variab,VariableDecorrTransform,134243,true branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:909; 16: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:915; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139:18: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 2: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 4: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 5: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:122; 6: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 7: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 10: Assuming 'ivar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 11: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 12: 'jvar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 13: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 14: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219:4: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 2: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 3: Assuming 'c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:134329,Modifiability,Variab,VariableDecorrTransform,134329,ect pointer is null in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:915; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139:18: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 2: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 4: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 5: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:122; 6: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 7: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 10: Assuming 'ivar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 11: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 12: 'jvar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 13: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 14: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219:4: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 2: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 3: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 4: Left side of ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:134425,Modifiability,Variab,VariableDecorrTransform,134425,_src/tmva/tmva/src/VariableDecorrTransform.cxx:139:18: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 2: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 4: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 5: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:122; 6: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 7: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 10: Assuming 'ivar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 11: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 12: 'jvar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 13: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 14: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219:4: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 2: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 3: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 4: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 5: Assuming t,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:134536,Modifiability,Variab,VariableDecorrTransform,134536,llAndMessage]; 1: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 2: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 4: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 5: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:122; 6: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 7: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 10: Assuming 'ivar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 11: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 12: 'jvar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 13: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 14: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219:4: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 2: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 3: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 4: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 6: Taking false branch in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:134623,Modifiability,Variab,VariableDecorrTransform,134623,ecorrTransform.cxx:120; 2: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 4: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 5: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:122; 6: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 7: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 10: Assuming 'ivar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 11: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 12: 'jvar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 13: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 14: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219:4: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 2: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 3: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 4: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 6: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 7: 'm' initialized here in /op,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:134734,Modifiability,Variab,VariableDecorrTransform,134734, 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 4: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 5: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:122; 6: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 7: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 10: Assuming 'ivar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 11: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 12: 'jvar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 13: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 14: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219:4: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 2: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 3: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 4: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 6: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 7: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:183; 8: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:134836,Modifiability,Variab,VariableDecorrTransform,134836,m.cxx:120; 4: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 5: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:122; 6: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 7: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 10: Assuming 'ivar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 11: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 12: 'jvar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 13: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 14: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219:4: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 2: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 3: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 4: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 6: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 7: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:183; 8: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 9: Taking true branch in /opt/root_src/tmva/tmva/s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:134897,Modifiability,Variab,VariableDecorrTransform,134897,ansform.cxx:120; 5: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:122; 6: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 7: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 10: Assuming 'ivar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 11: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 12: 'jvar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 13: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 14: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219:4: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 2: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 3: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 4: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 6: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 7: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:183; 8: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 10: Assuming the condition is true in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:135084,Modifiability,Variab,VariableDecorrTransform,135084,va/src/VariableDecorrTransform.cxx:123; 7: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 10: Assuming 'ivar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 11: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 12: 'jvar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 13: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 14: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219:4: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 2: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 3: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 4: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 6: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 7: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:183; 8: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 10: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 11: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 12: Assuming field 'f,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:135171,Modifiability,Variab,VariableDecorrTransform,135171,leDecorrTransform.cxx:123; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 10: Assuming 'ivar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 11: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 12: 'jvar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 13: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 14: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219:4: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 2: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 3: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 4: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 6: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 7: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:183; 8: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 10: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 11: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 12: Assuming field 'fTransformedEvent' is not equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:19,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:135261,Modifiability,Variab,VariableDecorrTransform,135261,rc/VariableDecorrTransform.cxx:124; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 10: Assuming 'ivar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 11: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 12: 'jvar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 13: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 14: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219:4: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 2: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 3: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 4: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 6: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 7: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:183; 8: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 10: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 11: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 12: Assuming field 'fTransformedEvent' is not equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 13: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:135355,Modifiability,Variab,VariableDecorrTransform,135355,iableDecorrTransform.cxx:124; 10: Assuming 'ivar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 11: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 12: 'jvar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 13: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 14: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219:4: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 2: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 3: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 4: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 6: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 7: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:183; 8: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 10: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 11: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 12: Assuming field 'fTransformedEvent' is not equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 13: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 14: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:135454,Modifiability,Variab,VariableDecorrTransform,135454,iableDecorrTransform.cxx:136; 11: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 12: 'jvar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 13: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 14: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219:4: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 2: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 3: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 4: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 6: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 7: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:183; 8: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 10: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 11: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 12: Assuming field 'fTransformedEvent' is not equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 13: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 14: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 15: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:135541,Modifiability,Variab,VariableDecorrTransform,135541,/tmva/tmva/src/VariableDecorrTransform.cxx:136; 12: 'jvar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 13: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 14: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219:4: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 2: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 3: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 4: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 6: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 7: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:183; 8: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 10: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 11: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 12: Assuming field 'fTransformedEvent' is not equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 13: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 14: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 15: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 16: Assuming 'hasMaskedEntries' is false in /opt/root_src/tmva/tmva/src/VariableDeco,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:135629,Modifiability,Variab,VariableDecorrTransform,135629,tmva/tmva/src/VariableDecorrTransform.cxx:138; 13: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 14: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219:4: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 2: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 3: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 4: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 6: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 7: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:183; 8: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 10: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 11: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 12: Assuming field 'fTransformedEvent' is not equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 13: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 14: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 15: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 16: Assuming 'hasMaskedEntries' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 17: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:135726,Modifiability,Variab,VariableDecorrTransform,135726,y in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 14: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219:4: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 2: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 3: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 4: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 6: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 7: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:183; 8: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 10: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 11: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 12: Assuming field 'fTransformedEvent' is not equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 13: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 14: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 15: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 16: Assuming 'hasMaskedEntries' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 17: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 18: Assuming 'ivar' is >= 'nvar' in /opt/root_src/tmva/tmva/src/Variabl,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:135812,Modifiability,Variab,VariableDecorrTransform,135812,ter is null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219:4: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 2: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 3: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 4: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 6: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 7: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:183; 8: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 10: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 11: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 12: Assuming field 'fTransformedEvent' is not equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 13: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 14: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 15: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 16: Assuming 'hasMaskedEntries' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 17: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 18: Assuming 'ivar' is >= 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 19: Loop condition is false. Execution continues on line 219 in /,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:135911,Modifiability,Variab,VariableDecorrTransform,135911,va/tmva/src/VariableDecorrTransform.cxx:219:4: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 2: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 3: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 4: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 6: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 7: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:183; 8: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 10: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 11: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 12: Assuming field 'fTransformedEvent' is not equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 13: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 14: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 15: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 16: Assuming 'hasMaskedEntries' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 17: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 18: Assuming 'ivar' is >= 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 19: Loop condition is false. Execution continues on line 219 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 20: Forming reference to null poi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:135998,Modifiability,Variab,VariableDecorrTransform,135998,ang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 2: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 3: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 4: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 6: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 7: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:183; 8: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 10: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 11: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 12: Assuming field 'fTransformedEvent' is not equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 13: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 14: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 15: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 16: Assuming 'hasMaskedEntries' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 17: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 18: Assuming 'ivar' is >= 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 19: Loop condition is false. Execution continues on line 219 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 20: Forming reference to null pointer in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219; /opt/root_src/tmva/tmva/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:136122,Modifiability,Variab,VariableDecorrTransform,136122,VariableDecorrTransform.cxx:169; 2: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 3: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 4: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 6: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 7: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:183; 8: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 10: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 11: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 12: Assuming field 'fTransformedEvent' is not equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 13: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 14: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 15: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 16: Assuming 'hasMaskedEntries' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 17: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 18: Assuming 'ivar' is >= 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 19: Loop condition is false. Execution continues on line 219 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 20: Forming reference to null pointer in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219; /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321:7: warning: Value stored to 'x' is never read [clang-analyzer-deadcode.Dea,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:136217,Modifiability,Variab,VariableDecorrTransform,136217,m.cxx:169; 3: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 4: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 6: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 7: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:183; 8: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 10: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 11: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 12: Assuming field 'fTransformedEvent' is not equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 13: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 14: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 15: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 16: Assuming 'hasMaskedEntries' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 17: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 18: Assuming 'ivar' is >= 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 19: Loop condition is false. Execution continues on line 219 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 20: Forming reference to null pointer in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219; /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321:7: warning: Value stored to 'x' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'x' is never read in /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321; /opt,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:136317,Modifiability,Variab,VariableDecorrTransform,136317,6; 4: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 6: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 7: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:183; 8: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 10: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 11: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 12: Assuming field 'fTransformedEvent' is not equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 13: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 14: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 15: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 16: Assuming 'hasMaskedEntries' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 17: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 18: Assuming 'ivar' is >= 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 19: Loop condition is false. Execution continues on line 219 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 20: Forming reference to null pointer in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219; /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321:7: warning: Value stored to 'x' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'x' is never read in /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321; /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx:216:10: warning: Value stored to 'numIndices' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:136405,Modifiability,Variab,VariableDecorrTransform,136405,6; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 6: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 7: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:183; 8: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 10: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 11: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 12: Assuming field 'fTransformedEvent' is not equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 13: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 14: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 15: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 16: Assuming 'hasMaskedEntries' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 17: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 18: Assuming 'ivar' is >= 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 19: Loop condition is false. Execution continues on line 219 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 20: Forming reference to null pointer in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219; /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321:7: warning: Value stored to 'x' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'x' is never read in /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321; /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx:216:10: warning: Value stored to 'numIndices' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'numIndices' is never re,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:136510,Modifiability,Variab,VariableDecorrTransform,136510,:176; 6: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 7: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:183; 8: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 10: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 11: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 12: Assuming field 'fTransformedEvent' is not equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 13: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 14: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 15: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 16: Assuming 'hasMaskedEntries' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 17: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 18: Assuming 'ivar' is >= 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 19: Loop condition is false. Execution continues on line 219 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 20: Forming reference to null pointer in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219; /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321:7: warning: Value stored to 'x' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'x' is never read in /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321; /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx:216:10: warning: Value stored to 'numIndices' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'numIndices' is never read in /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx:216; /opt/root_src/tmva/tmva/src/Volu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:136598,Modifiability,Variab,VariableDecorrTransform,136598,m' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:183; 8: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 10: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 11: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 12: Assuming field 'fTransformedEvent' is not equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 13: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 14: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 15: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 16: Assuming 'hasMaskedEntries' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 17: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 18: Assuming 'ivar' is >= 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 19: Loop condition is false. Execution continues on line 219 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 20: Forming reference to null pointer in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219; /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321:7: warning: Value stored to 'x' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'x' is never read in /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321; /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx:216:10: warning: Value stored to 'numIndices' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'numIndices' is never read in /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx:216; /opt/root_src/tmva/tmva/src/Volume.cxx:140:20: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamCheck,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:136695,Modifiability,Variab,VariableDecorrTransform,136695,ing 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 10: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 11: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 12: Assuming field 'fTransformedEvent' is not equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 13: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 14: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 15: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 16: Assuming 'hasMaskedEntries' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 17: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 18: Assuming 'ivar' is >= 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 19: Loop condition is false. Execution continues on line 219 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 20: Forming reference to null pointer in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219; /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321:7: warning: Value stored to 'x' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'x' is never read in /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321; /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx:216:10: warning: Value stored to 'numIndices' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'numIndices' is never read in /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx:216; /opt/root_src/tmva/tmva/src/Volume.cxx:140:20: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Assuming V == *this in /opt/root_src/tmva/tmva/src/Volume.cxx:135; 2: Assuming field ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:136820,Modifiability,Variab,VariableDecorrTransform,136820,va/tmva/src/VariableDecorrTransform.cxx:184; 10: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 11: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 12: Assuming field 'fTransformedEvent' is not equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 13: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 14: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 15: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 16: Assuming 'hasMaskedEntries' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 17: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 18: Assuming 'ivar' is >= 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 19: Loop condition is false. Execution continues on line 219 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 20: Forming reference to null pointer in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219; /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321:7: warning: Value stored to 'x' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'x' is never read in /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321; /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx:216:10: warning: Value stored to 'numIndices' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'numIndices' is never read in /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx:216; /opt/root_src/tmva/tmva/src/Volume.cxx:140:20: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Assuming V == *this in /opt/root_src/tmva/tmva/src/Volume.cxx:135; 2: Assuming field 'fOwnerShip' is true in /opt/root_src/tmva/tmva/src/Volume.cxx:137; 3: Taking true branch in /opt/root_src/tmva/tmva/src/Volume.c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:136922,Modifiability,Variab,VariableDecorrTransform,136922,c/tmva/tmva/src/VariableDecorrTransform.cxx:185; 11: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 12: Assuming field 'fTransformedEvent' is not equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 13: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 14: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 15: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 16: Assuming 'hasMaskedEntries' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 17: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 18: Assuming 'ivar' is >= 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 19: Loop condition is false. Execution continues on line 219 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 20: Forming reference to null pointer in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219; /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321:7: warning: Value stored to 'x' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'x' is never read in /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321; /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx:216:10: warning: Value stored to 'numIndices' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'numIndices' is never read in /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx:216; /opt/root_src/tmva/tmva/src/Volume.cxx:140:20: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Assuming V == *this in /opt/root_src/tmva/tmva/src/Volume.cxx:135; 2: Assuming field 'fOwnerShip' is true in /opt/root_src/tmva/tmva/src/Volume.cxx:137; 3: Taking true branch in /opt/root_src/tmva/tmva/src/Volume.cxx:137; 4: Assuming field 'fLower' is null in /opt/root_src/tmva/tmva/src/Volume.cxx:138; 5: Ta,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:136983,Modifiability,Variab,VariableImportance,136983,/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 12: Assuming field 'fTransformedEvent' is not equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 13: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 14: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 15: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 16: Assuming 'hasMaskedEntries' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 17: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 18: Assuming 'ivar' is >= 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 19: Loop condition is false. Execution continues on line 219 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 20: Forming reference to null pointer in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219; /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321:7: warning: Value stored to 'x' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'x' is never read in /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321; /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx:216:10: warning: Value stored to 'numIndices' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'numIndices' is never read in /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx:216; /opt/root_src/tmva/tmva/src/Volume.cxx:140:20: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Assuming V == *this in /opt/root_src/tmva/tmva/src/Volume.cxx:135; 2: Assuming field 'fOwnerShip' is true in /opt/root_src/tmva/tmva/src/Volume.cxx:137; 3: Taking true branch in /opt/root_src/tmva/tmva/src/Volume.cxx:137; 4: Assuming field 'fLower' is null in /opt/root_src/tmva/tmva/src/Volume.cxx:138; 5: Taking false branch in /opt/root_src/tmva/tmva/src/Volume.cxx:138; 6: Assuming fi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:137162,Modifiability,Variab,VariableImportance,137162,ecorrTransform.cxx:193; 13: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 14: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 15: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 16: Assuming 'hasMaskedEntries' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 17: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 18: Assuming 'ivar' is >= 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 19: Loop condition is false. Execution continues on line 219 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 20: Forming reference to null pointer in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219; /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321:7: warning: Value stored to 'x' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'x' is never read in /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321; /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx:216:10: warning: Value stored to 'numIndices' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'numIndices' is never read in /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx:216; /opt/root_src/tmva/tmva/src/Volume.cxx:140:20: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Assuming V == *this in /opt/root_src/tmva/tmva/src/Volume.cxx:135; 2: Assuming field 'fOwnerShip' is true in /opt/root_src/tmva/tmva/src/Volume.cxx:137; 3: Taking true branch in /opt/root_src/tmva/tmva/src/Volume.cxx:137; 4: Assuming field 'fLower' is null in /opt/root_src/tmva/tmva/src/Volume.cxx:138; 5: Taking false branch in /opt/root_src/tmva/tmva/src/Volume.cxx:138; 6: Assuming field 'fUpper' is null in /opt/root_src/tmva/tmva/src/Volume.cxx:139; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Volume.cxx:139; 8: Forming referenc,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:137218,Modifiability,Variab,VariableTransformBase,137218,va/src/VariableDecorrTransform.cxx:193; 14: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 15: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 16: Assuming 'hasMaskedEntries' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 17: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 18: Assuming 'ivar' is >= 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 19: Loop condition is false. Execution continues on line 219 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 20: Forming reference to null pointer in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219; /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321:7: warning: Value stored to 'x' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'x' is never read in /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321; /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx:216:10: warning: Value stored to 'numIndices' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'numIndices' is never read in /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx:216; /opt/root_src/tmva/tmva/src/Volume.cxx:140:20: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Assuming V == *this in /opt/root_src/tmva/tmva/src/Volume.cxx:135; 2: Assuming field 'fOwnerShip' is true in /opt/root_src/tmva/tmva/src/Volume.cxx:137; 3: Taking true branch in /opt/root_src/tmva/tmva/src/Volume.cxx:137; 4: Assuming field 'fLower' is null in /opt/root_src/tmva/tmva/src/Volume.cxx:138; 5: Taking false branch in /opt/root_src/tmva/tmva/src/Volume.cxx:138; 6: Assuming field 'fUpper' is null in /opt/root_src/tmva/tmva/src/Volume.cxx:139; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Volume.cxx:139; 8: Forming reference to null pointer in /opt/root_src/tmva/tmva/src/Volume.cxx:140; /opt/root_src/t,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:137419,Modifiability,Variab,VariableTransformBase,137419,t_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 16: Assuming 'hasMaskedEntries' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 17: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 18: Assuming 'ivar' is >= 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 19: Loop condition is false. Execution continues on line 219 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 20: Forming reference to null pointer in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219; /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321:7: warning: Value stored to 'x' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'x' is never read in /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321; /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx:216:10: warning: Value stored to 'numIndices' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'numIndices' is never read in /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx:216; /opt/root_src/tmva/tmva/src/Volume.cxx:140:20: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Assuming V == *this in /opt/root_src/tmva/tmva/src/Volume.cxx:135; 2: Assuming field 'fOwnerShip' is true in /opt/root_src/tmva/tmva/src/Volume.cxx:137; 3: Taking true branch in /opt/root_src/tmva/tmva/src/Volume.cxx:137; 4: Assuming field 'fLower' is null in /opt/root_src/tmva/tmva/src/Volume.cxx:138; 5: Taking false branch in /opt/root_src/tmva/tmva/src/Volume.cxx:138; 6: Assuming field 'fUpper' is null in /opt/root_src/tmva/tmva/src/Volume.cxx:139; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Volume.cxx:139; 8: Forming reference to null pointer in /opt/root_src/tmva/tmva/src/Volume.cxx:140; /opt/root_src/tmva/tmva/src/Volume.cxx:140:20: warning: Use of memory after it is freed [clang-analyzer-cplusplus.NewDelete]; 1: Assuming V == *this in /opt/root_src/tmva/tmva/src/Volume.cx,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:144427,Modifiability,variab,variables,144427,"urning pointer (loaded from 'img'), which participates in a condition later in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:267; 6: Returning from 'findImage' in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:273; 7: Assuming 'img' is non-null in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:274; 8: Taking false branch in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:274; 9: Calling 'TImage::GetHeight' in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:280; 10: Returning zero in /opt/root_src/graf2d/graf/inc/TImage.h:229; 11: Returning from 'TImage::GetHeight' in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:280; 12: 'h_' initialized to 0 in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:280; 13: Division by zero in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:283; /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:714:16: warning: Value stored to 'dir' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'dir' is never read in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:714; /opt/root_src/tmva/tmvagui/src/variables.cxx:186:7: warning: Value stored to 'createNewFig' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'createNewFig' is never read in /opt/root_src/tmva/tmvagui/src/variables.cxx:186; /opt/root_src/tmva/tmvagui/src/variablesMultiClass.cxx:215:7: warning: Value stored to 'createNewFig' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'createNewFig' is never read in /opt/root_src/tmva/tmvagui/src/variablesMultiClass.cxx:215; /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx; /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx; /opt/root_src/tmva/tmva/inc/TMVA/BinaryTree.h; /opt/root_src/tmva/tmva/inc/TMVA/DNN/Minimizers.h; /opt/root_src/tmva/tmva/src/Classification.cxx; /opt/root_src/tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx; /opt/root_src/tmva/tmva/src/DNN/Architectures/Reference/TensorDataLoader.cxx; /opt/root_src/tmva/tmva/src/DataInputHandler.cxx; /opt/root_src/tmva/tmva/src/DataLoader.cxx; /opt/root_src/tmva/t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:144622,Modifiability,variab,variables,144622,oot_src/tmva/tmvagui/src/tmvaglob.cxx:273; 7: Assuming 'img' is non-null in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:274; 8: Taking false branch in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:274; 9: Calling 'TImage::GetHeight' in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:280; 10: Returning zero in /opt/root_src/graf2d/graf/inc/TImage.h:229; 11: Returning from 'TImage::GetHeight' in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:280; 12: 'h_' initialized to 0 in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:280; 13: Division by zero in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:283; /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:714:16: warning: Value stored to 'dir' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'dir' is never read in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:714; /opt/root_src/tmva/tmvagui/src/variables.cxx:186:7: warning: Value stored to 'createNewFig' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'createNewFig' is never read in /opt/root_src/tmva/tmvagui/src/variables.cxx:186; /opt/root_src/tmva/tmvagui/src/variablesMultiClass.cxx:215:7: warning: Value stored to 'createNewFig' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'createNewFig' is never read in /opt/root_src/tmva/tmvagui/src/variablesMultiClass.cxx:215; /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx; /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx; /opt/root_src/tmva/tmva/inc/TMVA/BinaryTree.h; /opt/root_src/tmva/tmva/inc/TMVA/DNN/Minimizers.h; /opt/root_src/tmva/tmva/src/Classification.cxx; /opt/root_src/tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx; /opt/root_src/tmva/tmva/src/DNN/Architectures/Reference/TensorDataLoader.cxx; /opt/root_src/tmva/tmva/src/DataInputHandler.cxx; /opt/root_src/tmva/tmva/src/DataLoader.cxx; /opt/root_src/tmva/tmva/src/DataSetInfo.cxx; /opt/root_src/tmva/tmva/src/DataSetManager.cxx; /opt/root_src/tmva/tmva/src/DecisionTree.cxx; /opt/root_src/tmva/tmva/src/ExpectedErrorPruneToo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:144672,Modifiability,variab,variablesMultiClass,144672,ot_src/tmva/tmvagui/src/tmvaglob.cxx:274; 8: Taking false branch in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:274; 9: Calling 'TImage::GetHeight' in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:280; 10: Returning zero in /opt/root_src/graf2d/graf/inc/TImage.h:229; 11: Returning from 'TImage::GetHeight' in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:280; 12: 'h_' initialized to 0 in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:280; 13: Division by zero in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:283; /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:714:16: warning: Value stored to 'dir' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'dir' is never read in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:714; /opt/root_src/tmva/tmvagui/src/variables.cxx:186:7: warning: Value stored to 'createNewFig' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'createNewFig' is never read in /opt/root_src/tmva/tmvagui/src/variables.cxx:186; /opt/root_src/tmva/tmvagui/src/variablesMultiClass.cxx:215:7: warning: Value stored to 'createNewFig' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'createNewFig' is never read in /opt/root_src/tmva/tmvagui/src/variablesMultiClass.cxx:215; /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx; /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx; /opt/root_src/tmva/tmva/inc/TMVA/BinaryTree.h; /opt/root_src/tmva/tmva/inc/TMVA/DNN/Minimizers.h; /opt/root_src/tmva/tmva/src/Classification.cxx; /opt/root_src/tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx; /opt/root_src/tmva/tmva/src/DNN/Architectures/Reference/TensorDataLoader.cxx; /opt/root_src/tmva/tmva/src/DataInputHandler.cxx; /opt/root_src/tmva/tmva/src/DataLoader.cxx; /opt/root_src/tmva/tmva/src/DataSetInfo.cxx; /opt/root_src/tmva/tmva/src/DataSetManager.cxx; /opt/root_src/tmva/tmva/src/DecisionTree.cxx; /opt/root_src/tmva/tmva/src/ExpectedErrorPruneTool.cxx; /opt/root_src/tmva/tmva/src/KDEKernel.cxx; /opt/root_src/tmva/tmva/src/Meth,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:144877,Modifiability,variab,variablesMultiClass,144877,/src/tmvaglob.cxx:280; 10: Returning zero in /opt/root_src/graf2d/graf/inc/TImage.h:229; 11: Returning from 'TImage::GetHeight' in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:280; 12: 'h_' initialized to 0 in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:280; 13: Division by zero in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:283; /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:714:16: warning: Value stored to 'dir' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'dir' is never read in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:714; /opt/root_src/tmva/tmvagui/src/variables.cxx:186:7: warning: Value stored to 'createNewFig' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'createNewFig' is never read in /opt/root_src/tmva/tmvagui/src/variables.cxx:186; /opt/root_src/tmva/tmvagui/src/variablesMultiClass.cxx:215:7: warning: Value stored to 'createNewFig' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'createNewFig' is never read in /opt/root_src/tmva/tmvagui/src/variablesMultiClass.cxx:215; /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx; /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx; /opt/root_src/tmva/tmva/inc/TMVA/BinaryTree.h; /opt/root_src/tmva/tmva/inc/TMVA/DNN/Minimizers.h; /opt/root_src/tmva/tmva/src/Classification.cxx; /opt/root_src/tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx; /opt/root_src/tmva/tmva/src/DNN/Architectures/Reference/TensorDataLoader.cxx; /opt/root_src/tmva/tmva/src/DataInputHandler.cxx; /opt/root_src/tmva/tmva/src/DataLoader.cxx; /opt/root_src/tmva/tmva/src/DataSetInfo.cxx; /opt/root_src/tmva/tmva/src/DataSetManager.cxx; /opt/root_src/tmva/tmva/src/DecisionTree.cxx; /opt/root_src/tmva/tmva/src/ExpectedErrorPruneTool.cxx; /opt/root_src/tmva/tmva/src/KDEKernel.cxx; /opt/root_src/tmva/tmva/src/MethodBDT.cxx; /opt/root_src/tmva/tmva/src/MethodBase.cxx; /opt/root_src/tmva/tmva/src/MethodBoost.cxx; /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx; /opt/root_src/tmva/tmva/src/Me,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:147195,Modifiability,Variab,VariableDecorrTransform,147195,pt/root_src/tmva/tmva/src/MethodBoost.cxx; /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx; /opt/root_src/tmva/tmva/src/MethodCFMlpANN_Utils.cxx; /opt/root_src/tmva/tmva/src/MethodCategory.cxx; /opt/root_src/tmva/tmva/src/MethodCompositeBase.cxx; /opt/root_src/tmva/tmva/src/MethodCuts.cxx; /opt/root_src/tmva/tmva/src/MethodDL.cxx; /opt/root_src/tmva/tmva/src/MethodDNN.cxx; /opt/root_src/tmva/tmva/src/MethodKNN.cxx; /opt/root_src/tmva/tmva/src/MethodLikelihood.cxx; /opt/root_src/tmva/tmva/src/MethodPDEFoam.cxx; /opt/root_src/tmva/tmva/src/MethodPDERS.cxx; /opt/root_src/tmva/tmva/src/MethodSVM.cxx; /opt/root_src/tmva/tmva/src/PDEFoam.cxx; /opt/root_src/tmva/tmva/src/PDEFoamDecisionTree.cxx; /opt/root_src/tmva/tmva/src/PDEFoamDensityBase.cxx; /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx; /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx; /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx; /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx; /opt/root_src/tmva/tmva/src/PDF.cxx; /opt/root_src/tmva/tmva/src/Reader.cxx; /opt/root_src/tmva/tmva/src/RuleEnsemble.cxx; /opt/root_src/tmva/tmva/src/RuleFit.cxx; /opt/root_src/tmva/tmva/src/RuleFitAPI.cxx; /opt/root_src/tmva/tmva/src/RuleFitParams.cxx; /opt/root_src/tmva/tmva/src/SVWorkingSet.cxx; /opt/root_src/tmva/tmva/src/SimulatedAnnealing.cxx; /opt/root_src/tmva/tmva/src/TSynapse.cxx; /opt/root_src/tmva/tmva/src/Tools.cxx; /opt/root_src/tmva/tmva/src/TransformationHandler.cxx; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx; /opt/root_src/tmva/tmva/src/VariableImportance.cxx; /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx; /opt/root_src/tmva/tmva/src/Volume.cxx; /opt/root_src/tmva/tmvagui/src/BDT_Reg.cxx; /opt/root_src/tmva/tmvagui/src/likelihoodrefs.cxx; /opt/root_src/tmva/tmvagui/src/network.cxx; /opt/root_src/tmva/tmvagui/src/regression_averagedevs.cxx; /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx; /opt/root_src/tmva/tmvagui/src/variables.cxx; /opt/root_src/tmva/tmvagui/src/variablesMultiClass.cxx; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:147252,Modifiability,Variab,VariableImportance,147252,pt/root_src/tmva/tmva/src/MethodBoost.cxx; /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx; /opt/root_src/tmva/tmva/src/MethodCFMlpANN_Utils.cxx; /opt/root_src/tmva/tmva/src/MethodCategory.cxx; /opt/root_src/tmva/tmva/src/MethodCompositeBase.cxx; /opt/root_src/tmva/tmva/src/MethodCuts.cxx; /opt/root_src/tmva/tmva/src/MethodDL.cxx; /opt/root_src/tmva/tmva/src/MethodDNN.cxx; /opt/root_src/tmva/tmva/src/MethodKNN.cxx; /opt/root_src/tmva/tmva/src/MethodLikelihood.cxx; /opt/root_src/tmva/tmva/src/MethodPDEFoam.cxx; /opt/root_src/tmva/tmva/src/MethodPDERS.cxx; /opt/root_src/tmva/tmva/src/MethodSVM.cxx; /opt/root_src/tmva/tmva/src/PDEFoam.cxx; /opt/root_src/tmva/tmva/src/PDEFoamDecisionTree.cxx; /opt/root_src/tmva/tmva/src/PDEFoamDensityBase.cxx; /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx; /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx; /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx; /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx; /opt/root_src/tmva/tmva/src/PDF.cxx; /opt/root_src/tmva/tmva/src/Reader.cxx; /opt/root_src/tmva/tmva/src/RuleEnsemble.cxx; /opt/root_src/tmva/tmva/src/RuleFit.cxx; /opt/root_src/tmva/tmva/src/RuleFitAPI.cxx; /opt/root_src/tmva/tmva/src/RuleFitParams.cxx; /opt/root_src/tmva/tmva/src/SVWorkingSet.cxx; /opt/root_src/tmva/tmva/src/SimulatedAnnealing.cxx; /opt/root_src/tmva/tmva/src/TSynapse.cxx; /opt/root_src/tmva/tmva/src/Tools.cxx; /opt/root_src/tmva/tmva/src/TransformationHandler.cxx; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx; /opt/root_src/tmva/tmva/src/VariableImportance.cxx; /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx; /opt/root_src/tmva/tmva/src/Volume.cxx; /opt/root_src/tmva/tmvagui/src/BDT_Reg.cxx; /opt/root_src/tmva/tmvagui/src/likelihoodrefs.cxx; /opt/root_src/tmva/tmvagui/src/network.cxx; /opt/root_src/tmva/tmvagui/src/regression_averagedevs.cxx; /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx; /opt/root_src/tmva/tmvagui/src/variables.cxx; /opt/root_src/tmva/tmvagui/src/variablesMultiClass.cxx; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:147304,Modifiability,Variab,VariableTransformBase,147304,pt/root_src/tmva/tmva/src/MethodBoost.cxx; /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx; /opt/root_src/tmva/tmva/src/MethodCFMlpANN_Utils.cxx; /opt/root_src/tmva/tmva/src/MethodCategory.cxx; /opt/root_src/tmva/tmva/src/MethodCompositeBase.cxx; /opt/root_src/tmva/tmva/src/MethodCuts.cxx; /opt/root_src/tmva/tmva/src/MethodDL.cxx; /opt/root_src/tmva/tmva/src/MethodDNN.cxx; /opt/root_src/tmva/tmva/src/MethodKNN.cxx; /opt/root_src/tmva/tmva/src/MethodLikelihood.cxx; /opt/root_src/tmva/tmva/src/MethodPDEFoam.cxx; /opt/root_src/tmva/tmva/src/MethodPDERS.cxx; /opt/root_src/tmva/tmva/src/MethodSVM.cxx; /opt/root_src/tmva/tmva/src/PDEFoam.cxx; /opt/root_src/tmva/tmva/src/PDEFoamDecisionTree.cxx; /opt/root_src/tmva/tmva/src/PDEFoamDensityBase.cxx; /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx; /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx; /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx; /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx; /opt/root_src/tmva/tmva/src/PDF.cxx; /opt/root_src/tmva/tmva/src/Reader.cxx; /opt/root_src/tmva/tmva/src/RuleEnsemble.cxx; /opt/root_src/tmva/tmva/src/RuleFit.cxx; /opt/root_src/tmva/tmva/src/RuleFitAPI.cxx; /opt/root_src/tmva/tmva/src/RuleFitParams.cxx; /opt/root_src/tmva/tmva/src/SVWorkingSet.cxx; /opt/root_src/tmva/tmva/src/SimulatedAnnealing.cxx; /opt/root_src/tmva/tmva/src/TSynapse.cxx; /opt/root_src/tmva/tmva/src/Tools.cxx; /opt/root_src/tmva/tmva/src/TransformationHandler.cxx; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx; /opt/root_src/tmva/tmva/src/VariableImportance.cxx; /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx; /opt/root_src/tmva/tmva/src/Volume.cxx; /opt/root_src/tmva/tmvagui/src/BDT_Reg.cxx; /opt/root_src/tmva/tmvagui/src/likelihoodrefs.cxx; /opt/root_src/tmva/tmvagui/src/network.cxx; /opt/root_src/tmva/tmvagui/src/regression_averagedevs.cxx; /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx; /opt/root_src/tmva/tmvagui/src/variables.cxx; /opt/root_src/tmva/tmvagui/src/variablesMultiClass.cxx; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:147645,Modifiability,variab,variables,147645,pt/root_src/tmva/tmva/src/MethodBoost.cxx; /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx; /opt/root_src/tmva/tmva/src/MethodCFMlpANN_Utils.cxx; /opt/root_src/tmva/tmva/src/MethodCategory.cxx; /opt/root_src/tmva/tmva/src/MethodCompositeBase.cxx; /opt/root_src/tmva/tmva/src/MethodCuts.cxx; /opt/root_src/tmva/tmva/src/MethodDL.cxx; /opt/root_src/tmva/tmva/src/MethodDNN.cxx; /opt/root_src/tmva/tmva/src/MethodKNN.cxx; /opt/root_src/tmva/tmva/src/MethodLikelihood.cxx; /opt/root_src/tmva/tmva/src/MethodPDEFoam.cxx; /opt/root_src/tmva/tmva/src/MethodPDERS.cxx; /opt/root_src/tmva/tmva/src/MethodSVM.cxx; /opt/root_src/tmva/tmva/src/PDEFoam.cxx; /opt/root_src/tmva/tmva/src/PDEFoamDecisionTree.cxx; /opt/root_src/tmva/tmva/src/PDEFoamDensityBase.cxx; /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx; /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx; /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx; /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx; /opt/root_src/tmva/tmva/src/PDF.cxx; /opt/root_src/tmva/tmva/src/Reader.cxx; /opt/root_src/tmva/tmva/src/RuleEnsemble.cxx; /opt/root_src/tmva/tmva/src/RuleFit.cxx; /opt/root_src/tmva/tmva/src/RuleFitAPI.cxx; /opt/root_src/tmva/tmva/src/RuleFitParams.cxx; /opt/root_src/tmva/tmva/src/SVWorkingSet.cxx; /opt/root_src/tmva/tmva/src/SimulatedAnnealing.cxx; /opt/root_src/tmva/tmva/src/TSynapse.cxx; /opt/root_src/tmva/tmva/src/Tools.cxx; /opt/root_src/tmva/tmva/src/TransformationHandler.cxx; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx; /opt/root_src/tmva/tmva/src/VariableImportance.cxx; /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx; /opt/root_src/tmva/tmva/src/Volume.cxx; /opt/root_src/tmva/tmvagui/src/BDT_Reg.cxx; /opt/root_src/tmva/tmvagui/src/likelihoodrefs.cxx; /opt/root_src/tmva/tmvagui/src/network.cxx; /opt/root_src/tmva/tmvagui/src/regression_averagedevs.cxx; /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx; /opt/root_src/tmva/tmvagui/src/variables.cxx; /opt/root_src/tmva/tmvagui/src/variablesMultiClass.cxx; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:147691,Modifiability,variab,variablesMultiClass,147691,pt/root_src/tmva/tmva/src/MethodBoost.cxx; /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx; /opt/root_src/tmva/tmva/src/MethodCFMlpANN_Utils.cxx; /opt/root_src/tmva/tmva/src/MethodCategory.cxx; /opt/root_src/tmva/tmva/src/MethodCompositeBase.cxx; /opt/root_src/tmva/tmva/src/MethodCuts.cxx; /opt/root_src/tmva/tmva/src/MethodDL.cxx; /opt/root_src/tmva/tmva/src/MethodDNN.cxx; /opt/root_src/tmva/tmva/src/MethodKNN.cxx; /opt/root_src/tmva/tmva/src/MethodLikelihood.cxx; /opt/root_src/tmva/tmva/src/MethodPDEFoam.cxx; /opt/root_src/tmva/tmva/src/MethodPDERS.cxx; /opt/root_src/tmva/tmva/src/MethodSVM.cxx; /opt/root_src/tmva/tmva/src/PDEFoam.cxx; /opt/root_src/tmva/tmva/src/PDEFoamDecisionTree.cxx; /opt/root_src/tmva/tmva/src/PDEFoamDensityBase.cxx; /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx; /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx; /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx; /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx; /opt/root_src/tmva/tmva/src/PDF.cxx; /opt/root_src/tmva/tmva/src/Reader.cxx; /opt/root_src/tmva/tmva/src/RuleEnsemble.cxx; /opt/root_src/tmva/tmva/src/RuleFit.cxx; /opt/root_src/tmva/tmva/src/RuleFitAPI.cxx; /opt/root_src/tmva/tmva/src/RuleFitParams.cxx; /opt/root_src/tmva/tmva/src/SVWorkingSet.cxx; /opt/root_src/tmva/tmva/src/SimulatedAnnealing.cxx; /opt/root_src/tmva/tmva/src/TSynapse.cxx; /opt/root_src/tmva/tmva/src/Tools.cxx; /opt/root_src/tmva/tmva/src/TransformationHandler.cxx; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx; /opt/root_src/tmva/tmva/src/VariableImportance.cxx; /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx; /opt/root_src/tmva/tmva/src/Volume.cxx; /opt/root_src/tmva/tmvagui/src/BDT_Reg.cxx; /opt/root_src/tmva/tmvagui/src/likelihoodrefs.cxx; /opt/root_src/tmva/tmvagui/src/network.cxx; /opt/root_src/tmva/tmvagui/src/regression_averagedevs.cxx; /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx; /opt/root_src/tmva/tmvagui/src/variables.cxx; /opt/root_src/tmva/tmvagui/src/variablesMultiClass.cxx; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:55087,Performance,load,loaded,55087,src/MethodBase.cxx:2711; 5: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/MethodBase.cxx:2711; 6: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/MethodBase.cxx:2712; /opt/root_src/tmva/tmva/src/MethodBase.cxx:2715:21: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: 'resMulticlass' initialized here in /opt/root_src/tmva/tmva/src/MethodBase.cxx:2707; 2: Assuming 'resMulticlass' is null in /opt/root_src/tmva/tmva/src/MethodBase.cxx:2708; 3: Taking true branch in /opt/root_src/tmva/tmva/src/MethodBase.cxx:2708; 4: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodBase.cxx:2711; 5: Loop condition is false. Execution continues on line 2715 in /opt/root_src/tmva/tmva/src/MethodBase.cxx:2711; 6: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/MethodBase.cxx:2715; /opt/root_src/tmva/tmva/src/MethodBoost.cxx:410:35: warning: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:361; 2: Taking false branch in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:361; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:364; 4: Taking false branch in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:364; 5: Assuming 'varTrafoStart' is <= 0 in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:379; 6: Taking false branch in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:379; 7: Assuming field 'fCurrentMethodIdx' is < field 'fBoostNum' in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:388; 8: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:388; 9: Field 'fCurrentMethodIdx' is <= 0 in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:390; 10: Taking false branch in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:390; 11: 'method' initialized here in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:56880,Performance,load,loaded,56880,ntMethodIdx' is <= 0 in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:390; 10: Taking false branch in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:390; 11: 'method' initialized here in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:392; 12: Value assigned to field 'fCurrentMethod' in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:398; 13: Assuming field 'fCurrentMethod' is not equal to null in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:400; 14: Taking false branch in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:400; 15: Assuming the condition is true in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:406; 16: Taking true branch in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:406; 17: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:407; 18: 'methCat' is null in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:408; 19: Taking true branch in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:408; 20: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:410; /opt/root_src/tmva/tmva/src/MethodBoost.cxx:761:13: warning: Value stored to 'sSelCut' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'sSelCut' during its initialization is never read in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:761; /opt/root_src/tmva/tmva/src/MethodBoost.cxx:762:13: warning: Value stored to 'bSelCut' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'bSelCut' during its initialization is never read in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:762; /opt/root_src/tmva/tmva/src/MethodBoost.cxx:787:10: warning: Value stored to 'sSelCut' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'sSelCut' is never read in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:787; /opt/root_src/tmva/tmva/src/MethodBoost.cxx:788:10: warning: Value stored to 'bSelCut' is never read [,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:107978,Performance,load,loaded,107978,suming 'nbin' is >= 1 in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:187; 14: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:187; 15: Assuming 'h1' is null in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:198; 16: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:198; 17: Value assigned to 'h1' in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:199; 18: Assuming 'h1' is null in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:201; 19: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:201; 20: Assuming 'cell_value' is not equal to kValue in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:202; 21: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:202; 22: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:208; /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:86:36: warning: Access to field 'fLastCe' results in a dereference of a null pointer (loaded from variable 'foam') [clang-analyzer-core.NullDereference]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:81; 2: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:81; 3: Access to field 'fLastCe' results in a dereference of a null pointer (loaded from variable 'foam') in /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:86; /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:112:31: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:79; 2: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:79; 3: Passing null pointer value via 1st parameter 'foam' in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:82; 4: Calling 'PDEFoamKernelLinN::WeightLinNeighbors' in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:82; 5: Called C++ object pointer is null in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:108293,Performance,load,loaded,108293,; 17: Value assigned to 'h1' in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:199; 18: Assuming 'h1' is null in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:201; 19: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:201; 20: Assuming 'cell_value' is not equal to kValue in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:202; 21: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:202; 22: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:208; /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:86:36: warning: Access to field 'fLastCe' results in a dereference of a null pointer (loaded from variable 'foam') [clang-analyzer-core.NullDereference]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:81; 2: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:81; 3: Access to field 'fLastCe' results in a dereference of a null pointer (loaded from variable 'foam') in /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:86; /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:112:31: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:79; 2: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:79; 3: Passing null pointer value via 1st parameter 'foam' in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:82; 4: Calling 'PDEFoamKernelLinN::WeightLinNeighbors' in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:82; 5: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:112; /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx:80:30: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx:77; 2: Taking true branch in /opt/root_src/tmva/tmva/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:110064,Performance,load,loaded,110064,"KernelTrivial.cxx:80:30: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx:77; 2: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx:77; 3: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx:80; /opt/root_src/tmva/tmva/src/PDF.cxx:267:8: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Passing value via 1st parameter 'hist' in /opt/root_src/tmva/tmva/src/PDF.cxx:188; 2: Calling 'PDF::BuildPDF' in /opt/root_src/tmva/tmva/src/PDF.cxx:188; 3: Assuming 'hist' is equal to NULL in /opt/root_src/tmva/tmva/src/PDF.cxx:264; 4: Taking true branch in /opt/root_src/tmva/tmva/src/PDF.cxx:264; 5: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/PDF.cxx:267; /opt/root_src/tmva/tmva/src/Reader.cxx:384:32: warning: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 2: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 3: Calling 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 4: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:395; 5: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:398; 6: Assuming 'method' is not equal to null in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 8: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 9: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 10: Returning pointer (loaded from 'method'), which participates in a condition later in /opt/root_src/tmva/tmva/src/Reader.cxx:424; 11: Returning pointer (loaded from 'method') in /opt/root_src/tmva/tmva/src/Reader.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:110845,Performance,load,loaded,110845,"s null in /opt/root_src/tmva/tmva/src/PDF.cxx:267; /opt/root_src/tmva/tmva/src/Reader.cxx:384:32: warning: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 2: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 3: Calling 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 4: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:395; 5: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:398; 6: Assuming 'method' is not equal to null in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 8: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 9: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 10: Returning pointer (loaded from 'method'), which participates in a condition later in /opt/root_src/tmva/tmva/src/Reader.cxx:424; 11: Returning pointer (loaded from 'method') in /opt/root_src/tmva/tmva/src/Reader.cxx:424; 12: Returning from 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 13: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 14: 'method' is non-null in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 15: Left side of '&&' is true in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 16: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 17: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 18: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:381; 19: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:382; 20: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:382; 21: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:110978,Performance,load,loaded,110978," to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 2: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 3: Calling 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 4: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:395; 5: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:398; 6: Assuming 'method' is not equal to null in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 8: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 9: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 10: Returning pointer (loaded from 'method'), which participates in a condition later in /opt/root_src/tmva/tmva/src/Reader.cxx:424; 11: Returning pointer (loaded from 'method') in /opt/root_src/tmva/tmva/src/Reader.cxx:424; 12: Returning from 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 13: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 14: 'method' is non-null in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 15: Left side of '&&' is true in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 16: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 17: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 18: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:381; 19: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:382; 20: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:382; 21: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva/tmva/src/Reader.cxx:384; /opt/root_src/tmva/tmva/src/Reader.cxx:406:32: warning: Access to field 'fDataSetManag",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:111827,Performance,load,loaded,111827,":402; 10: Returning pointer (loaded from 'method'), which participates in a condition later in /opt/root_src/tmva/tmva/src/Reader.cxx:424; 11: Returning pointer (loaded from 'method') in /opt/root_src/tmva/tmva/src/Reader.cxx:424; 12: Returning from 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 13: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 14: 'method' is non-null in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 15: Left side of '&&' is true in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 16: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 17: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 18: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:381; 19: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:382; 20: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:382; 21: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva/tmva/src/Reader.cxx:384; /opt/root_src/tmva/tmva/src/Reader.cxx:406:32: warning: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 2: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 3: Calling 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 4: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:395; 5: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:398; 6: Assuming 'method' is not equal to null in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 9: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 10: 'methCat' initial",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:112040,Performance,load,loaded,112040,tmva/tmva/src/Reader.cxx:424; 12: Returning from 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 13: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 14: 'method' is non-null in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 15: Left side of '&&' is true in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 16: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 17: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 18: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:381; 19: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:382; 20: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:382; 21: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva/tmva/src/Reader.cxx:384; /opt/root_src/tmva/tmva/src/Reader.cxx:406:32: warning: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 2: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 3: Calling 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 4: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:395; 5: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:398; 6: Assuming 'method' is not equal to null in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 9: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 10: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:403; 11: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:404; 12: Taking true branch in /opt/root_src/tmva/tmva/src/R,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:113114,Performance,load,loaded,113114,rence]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 2: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 3: Calling 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 4: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:395; 5: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:398; 6: Assuming 'method' is not equal to null in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 9: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 10: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:403; 11: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:404; 12: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:404; 13: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva/tmva/src/Reader.cxx:406; /opt/root_src/tmva/tmva/src/Reader.cxx:443:32: warning: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:432; 2: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:435; 3: Assuming 'method' is non-null in /opt/root_src/tmva/tmva/src/Reader.cxx:437; 4: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:437; 5: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:439; 6: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:439; 7: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:440; 8: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:441; 9: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:441; 10: Access to field 'fDat,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:113327,Performance,load,loaded,113327,_src/tmva/tmva/src/Reader.cxx:378; 4: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:395; 5: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:398; 6: Assuming 'method' is not equal to null in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 9: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 10: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:403; 11: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:404; 12: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:404; 13: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva/tmva/src/Reader.cxx:406; /opt/root_src/tmva/tmva/src/Reader.cxx:443:32: warning: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:432; 2: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:435; 3: Assuming 'method' is non-null in /opt/root_src/tmva/tmva/src/Reader.cxx:437; 4: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:437; 5: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:439; 6: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:439; 7: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:440; 8: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:441; 9: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:441; 10: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva/tmva/src/Reader.cxx:443; /opt/root_src/tmva/tmva/src/Reader.cxx:535:22: warning: Called C,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:114161,Performance,load,loaded,114161,opt/root_src/tmva/tmva/src/Reader.cxx:406; /opt/root_src/tmva/tmva/src/Reader.cxx:443:32: warning: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:432; 2: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:435; 3: Assuming 'method' is non-null in /opt/root_src/tmva/tmva/src/Reader.cxx:437; 4: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:437; 5: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:439; 6: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:439; 7: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:440; 8: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:441; 9: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:441; 10: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva/tmva/src/Reader.cxx:443; /opt/root_src/tmva/tmva/src/Reader.cxx:535:22: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:519; 2: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:519; 3: Value assigned to 'method' in /opt/root_src/tmva/tmva/src/Reader.cxx:526; 4: 'kl' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:528; 5: Assuming 'kl' is equal to null in /opt/root_src/tmva/tmva/src/Reader.cxx:530; 6: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:530; 7: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/Reader.cxx:535; /opt/root_src/tmva/tmva/src/Reader.cxx:584:22: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Calling 'Reader::EvaluateRegression' in /opt/root_src/tmva/tmva/src/Reader.cxx:617; 2: Assuming the condition is fals,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:143428,Performance,load,loaded,143428,"ng expression, the value is never actually read from 'iyc' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'iyc' is used in the enclosing expression, the value is never actually read from 'iyc' in /opt/root_src/tmva/tmvagui/src/network.cxx:54; /opt/root_src/tmva/tmvagui/src/regression_averagedevs.cxx:19:18: warning: Value stored to 'Nevt' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'Nevt' is never read in /opt/root_src/tmva/tmvagui/src/regression_averagedevs.cxx:19; /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:283:18: warning: Division by zero [clang-analyzer-core.DivideZero]; 1: Calling 'findImage' in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:273; 2: Assuming the condition is true in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:260; 3: 'fileFound' is true in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:262; 4: Taking true branch in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:262; 5: Returning pointer (loaded from 'img'), which participates in a condition later in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:267; 6: Returning from 'findImage' in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:273; 7: Assuming 'img' is non-null in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:274; 8: Taking false branch in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:274; 9: Calling 'TImage::GetHeight' in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:280; 10: Returning zero in /opt/root_src/graf2d/graf/inc/TImage.h:229; 11: Returning from 'TImage::GetHeight' in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:280; 12: 'h_' initialized to 0 in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:280; 13: Division by zero in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:283; /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:714:16: warning: Value stored to 'dir' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'dir' is never read in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:714; /opt/root_src/tmva/tmvagui/src/variables.cxx:186:7: warning: Value s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:55009,Security,Access,Access,55009,src/MethodBase.cxx:2711; 5: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/MethodBase.cxx:2711; 6: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/MethodBase.cxx:2712; /opt/root_src/tmva/tmva/src/MethodBase.cxx:2715:21: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: 'resMulticlass' initialized here in /opt/root_src/tmva/tmva/src/MethodBase.cxx:2707; 2: Assuming 'resMulticlass' is null in /opt/root_src/tmva/tmva/src/MethodBase.cxx:2708; 3: Taking true branch in /opt/root_src/tmva/tmva/src/MethodBase.cxx:2708; 4: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodBase.cxx:2711; 5: Loop condition is false. Execution continues on line 2715 in /opt/root_src/tmva/tmva/src/MethodBase.cxx:2711; 6: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/MethodBase.cxx:2715; /opt/root_src/tmva/tmva/src/MethodBoost.cxx:410:35: warning: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:361; 2: Taking false branch in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:361; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:364; 4: Taking false branch in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:364; 5: Assuming 'varTrafoStart' is <= 0 in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:379; 6: Taking false branch in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:379; 7: Assuming field 'fCurrentMethodIdx' is < field 'fBoostNum' in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:388; 8: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:388; 9: Field 'fCurrentMethodIdx' is <= 0 in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:390; 10: Taking false branch in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:390; 11: 'method' initialized here in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:56802,Security,Access,Access,56802,ntMethodIdx' is <= 0 in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:390; 10: Taking false branch in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:390; 11: 'method' initialized here in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:392; 12: Value assigned to field 'fCurrentMethod' in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:398; 13: Assuming field 'fCurrentMethod' is not equal to null in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:400; 14: Taking false branch in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:400; 15: Assuming the condition is true in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:406; 16: Taking true branch in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:406; 17: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:407; 18: 'methCat' is null in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:408; 19: Taking true branch in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:408; 20: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:410; /opt/root_src/tmva/tmva/src/MethodBoost.cxx:761:13: warning: Value stored to 'sSelCut' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'sSelCut' during its initialization is never read in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:761; /opt/root_src/tmva/tmva/src/MethodBoost.cxx:762:13: warning: Value stored to 'bSelCut' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'bSelCut' during its initialization is never read in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:762; /opt/root_src/tmva/tmva/src/MethodBoost.cxx:787:10: warning: Value stored to 'sSelCut' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'sSelCut' is never read in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:787; /opt/root_src/tmva/tmva/src/MethodBoost.cxx:788:10: warning: Value stored to 'bSelCut' is never read [,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:58074,Security,access,access,58074,er-deadcode.DeadStores]; 1: Value stored to 'sSelCut' during its initialization is never read in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:761; /opt/root_src/tmva/tmva/src/MethodBoost.cxx:762:13: warning: Value stored to 'bSelCut' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'bSelCut' during its initialization is never read in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:762; /opt/root_src/tmva/tmva/src/MethodBoost.cxx:787:10: warning: Value stored to 'sSelCut' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'sSelCut' is never read in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:787; /opt/root_src/tmva/tmva/src/MethodBoost.cxx:788:10: warning: Value stored to 'bSelCut' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'bSelCut' is never read in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:788; /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:527:17: warning: Array access (from variable 'xpg') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming 'xpg' is equal to null in /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:516; 2: Taking true branch in /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:516; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:519; 4: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:519; 5: Assuming the condition is true in /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:526; 6: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:526; 7: Array access (from variable 'xpg') results in a null pointer dereference in /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:527; /opt/root_src/tmva/tmva/src/MethodCFMlpANN_Utils.cxx:440:16: warning: The expression is an uninitialized value. The computed value will also be garbage [clang-analyzer-core.uninitialized.Assign]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodC,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:58714,Security,access,access,58714,cxx:787; /opt/root_src/tmva/tmva/src/MethodBoost.cxx:788:10: warning: Value stored to 'bSelCut' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'bSelCut' is never read in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:788; /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:527:17: warning: Array access (from variable 'xpg') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming 'xpg' is equal to null in /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:516; 2: Taking true branch in /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:516; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:519; 4: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:519; 5: Assuming the condition is true in /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:526; 6: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:526; 7: Array access (from variable 'xpg') results in a null pointer dereference in /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:527; /opt/root_src/tmva/tmva/src/MethodCFMlpANN_Utils.cxx:440:16: warning: The expression is an uninitialized value. The computed value will also be garbage [clang-analyzer-core.uninitialized.Assign]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodCFMlpANN_Utils.cxx:158; 2: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCFMlpANN_Utils.cxx:158; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodCFMlpANN_Utils.cxx:164; 4: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCFMlpANN_Utils.cxx:164; 5: Assuming the condition is true in /opt/root_src/tmva/tmva/src/MethodCFMlpANN_Utils.cxx:169; 6: Taking true branch in /opt/root_src/tmva/tmva/src/MethodCFMlpANN_Utils.cxx:169; 7: Assuming the condition is true in /opt/root_src/tmva/tmva/src/MethodCFMlpANN_Utils.cxx:174; 8: Taking true branch in /opt/root_src/tmva/tmva/src/MethodCFMlpANN_Utils.cxx:174; 9: Assuming th,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:75141,Security,access,access,75141,3: Assuming 'i' is < 'nMethods' in /opt/root_src/tmva/tmva/src/MethodCompositeBase.cxx:164; 4: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/MethodCompositeBase.cxx:164; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodCompositeBase.cxx:175; 6: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCompositeBase.cxx:175; 7: 'i' is equal to 0 in /opt/root_src/tmva/tmva/src/MethodCompositeBase.cxx:189; 8: Taking true branch in /opt/root_src/tmva/tmva/src/MethodCompositeBase.cxx:189; 9: 'meth' initialized here in /opt/root_src/tmva/tmva/src/MethodCompositeBase.cxx:197; 10: Assuming 'meth' is equal to null in /opt/root_src/tmva/tmva/src/MethodCompositeBase.cxx:199; 11: Taking true branch in /opt/root_src/tmva/tmva/src/MethodCompositeBase.cxx:199; 12: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/MethodCompositeBase.cxx:204; /opt/root_src/tmva/tmva/src/MethodCuts.cxx:454:45: warning: Array access (via field 'fCutMin') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Value assigned to field 'fCutMin' in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:435; 2: Assuming field 'fCutMin' is equal to NULL in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:438; 3: Left side of '||' is true in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:438; 4: Assuming field 'fTestSignalEff' is > 0 in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:446; 5: Taking true branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:446; 6: Assuming 'ibin' is >= 0 in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:449; 7: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:449; 8: Assuming 'ibin' is < field 'fNbins' in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:450; 9: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:450; 10: Assuming the condition is true in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:453; 11: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:76187,Security,access,access,76187,lDereference]; 1: Value assigned to field 'fCutMin' in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:435; 2: Assuming field 'fCutMin' is equal to NULL in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:438; 3: Left side of '||' is true in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:438; 4: Assuming field 'fTestSignalEff' is > 0 in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:446; 5: Taking true branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:446; 6: Assuming 'ibin' is >= 0 in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:449; 7: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:449; 8: Assuming 'ibin' is < field 'fNbins' in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:450; 9: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:450; 10: Assuming the condition is true in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:453; 11: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:453; 12: Array access (via field 'fCutMin') results in a null pointer dereference in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:454; /opt/root_src/tmva/tmva/src/MethodCuts.cxx:455:45: warning: Array access (via field 'fCutMax') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Value assigned to field 'fCutMax' in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:435; 2: Assuming field 'fCutMin' is not equal to NULL in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:438; 3: Left side of '||' is false in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:438; 4: Assuming field 'fCutMax' is equal to NULL in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:438; 5: Left side of '||' is true in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:438; 6: Assuming field 'fTestSignalEff' is > 0 in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:446; 7: Taking true branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:446; 8: Assuming 'ibin' is >= 0 in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:449; 9: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:76371,Security,access,access,76371,/tmva/src/MethodCuts.cxx:438; 3: Left side of '||' is true in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:438; 4: Assuming field 'fTestSignalEff' is > 0 in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:446; 5: Taking true branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:446; 6: Assuming 'ibin' is >= 0 in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:449; 7: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:449; 8: Assuming 'ibin' is < field 'fNbins' in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:450; 9: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:450; 10: Assuming the condition is true in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:453; 11: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:453; 12: Array access (via field 'fCutMin') results in a null pointer dereference in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:454; /opt/root_src/tmva/tmva/src/MethodCuts.cxx:455:45: warning: Array access (via field 'fCutMax') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Value assigned to field 'fCutMax' in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:435; 2: Assuming field 'fCutMin' is not equal to NULL in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:438; 3: Left side of '||' is false in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:438; 4: Assuming field 'fCutMax' is equal to NULL in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:438; 5: Left side of '||' is true in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:438; 6: Assuming field 'fTestSignalEff' is > 0 in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:446; 7: Taking true branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:446; 8: Assuming 'ibin' is >= 0 in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:449; 9: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:449; 10: Assuming 'ibin' is < field 'fNbins' in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:450; 11: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:4,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:77767,Security,access,access,77767,/tmva/src/MethodCuts.cxx:438; 5: Left side of '||' is true in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:438; 6: Assuming field 'fTestSignalEff' is > 0 in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:446; 7: Taking true branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:446; 8: Assuming 'ibin' is >= 0 in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:449; 9: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:449; 10: Assuming 'ibin' is < field 'fNbins' in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:450; 11: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:450; 12: Assuming the condition is true in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:453; 13: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:453; 14: Assuming the condition is true in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:454; 15: Left side of '&&' is true in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:454; 16: Array access (via field 'fCutMax') results in a null pointer dereference in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:455; /opt/root_src/tmva/tmva/src/MethodCuts.cxx:687:25: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming field 'fEffMethod' is not equal to kUsePDFs in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:580; 2: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:580; 3: Assuming field 'fBinaryTreeS' is equal to null in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:583; 4: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:583; 5: Assuming field 'fBinaryTreeB' is equal to null in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:584; 6: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:584; 7: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:595; 8: Loop condition is false. Execution continues on line 620 in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:595; 9: Assuming 'ibin' is > field 'fNbins' in /opt/root_src/tmva/tmva/s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:84720,Security,secur,security,84720,6: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:652; 27: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:656; 28: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:656; 29: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:640; 30: Loop condition is false. Execution continues on line 668 in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:640; 31: 'fitter' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:668; 32: Control jumps to the 'default' case at line 683 in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:670; 33: Assuming field 'fInteractive' is null in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:687; 34: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:687; 35: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:689; /opt/root_src/tmva/tmva/src/MethodCuts.cxx:818:4: warning: Variable 'eff' with floating point type 'Double_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]; 1: Variable 'eff' with floating point type 'Double_t' should not be used as a loop counter in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:818; /opt/root_src/tmva/tmva/src/MethodDL.cxx:1348:52: warning: Division by zero [clang-analyzer-core.DivideZero]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1174; 2: Assuming 'batchDepth' is equal to 'batchSize' in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1219; 3: Left side of '&&' is false in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1219; 4: Assuming 'batchDepth' is not equal to 1 in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1223; 5: Left side of '&&' is false in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1223; 6: 'batchDepth' is equal to 'batchSize' in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1232; 7: Taking true branch in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1232; 8: Assuming the condition is false in /opt/root_src/tmva/tmva/sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:94340,Security,access,access,94340,.cxx:986:13: warning: Value stored to 'foundParam' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'foundParam' is never read in /opt/root_src/tmva/tmva/src/MethodSVM.cxx:986; /opt/root_src/tmva/tmva/src/MethodSVM.cxx:990:13: warning: Value stored to 'foundParam' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'foundParam' is never read in /opt/root_src/tmva/tmva/src/MethodSVM.cxx:990; /opt/root_src/tmva/tmva/src/MethodSVM.cxx:994:13: warning: Value stored to 'foundParam' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'foundParam' is never read in /opt/root_src/tmva/tmva/src/MethodSVM.cxx:994; /opt/root_src/tmva/tmva/src/MethodSVM.cxx:998:13: warning: Value stored to 'foundParam' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'foundParam' is never read in /opt/root_src/tmva/tmva/src/MethodSVM.cxx:998; /opt/root_src/tmva/tmva/src/PDEFoam.cxx:370:16: warning: Array access (via field 'fCells') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming field 'fPseRan' is not equal to null in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:297; 2: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:297; 3: Assuming field 'fDistr' is not equal to null in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:298; 4: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:298; 5: Assuming field 'fDim' is not equal to 0 in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:299; 6: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:299; 7: Field 'fRvec' is not equal to null in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:306; 8: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:306; 9: Assuming field 'fDim' is <= 0 in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:308; 10: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:308; 11: Assuming field 'fInhiDiv' is not equal to null in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:314; 12: Taking false br,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:96446,Security,access,access,96446,c/tmva/tmva/src/PDEFoam.cxx:319; 14: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:319; 15: 'i' is >= field 'fDim' in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:325; 16: Loop condition is false. Execution continues on line 340 in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:325; 17: Calling 'PDEFoam::InitCells' in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:343; 18: Field 'fCells' is equal to null in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:359; 19: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:359; 20: Value assigned to field 'fCells' in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:364; 21: Assuming field 'fCells' is null in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:365; 22: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:365; 23: Assuming 'i' is < field 'fNCells' in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:369; 24: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:369; 25: Array access (via field 'fCells') results in a null pointer dereference in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:370; /opt/root_src/tmva/tmva/src/PDEFoam.cxx:397:11: warning: Array access (via field 'fCells') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming field 'fPseRan' is not equal to null in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:297; 2: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:297; 3: Assuming field 'fDistr' is not equal to null in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:298; 4: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:298; 5: Assuming field 'fDim' is not equal to 0 in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:299; 6: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:299; 7: Field 'fRvec' is not equal to null in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:306; 8: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:306; 9: Assuming field 'fDim' is <= 0 in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:308; 10: Taking false branch in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:96623,Security,access,access,96623,DEFoam.cxx:325; 16: Loop condition is false. Execution continues on line 340 in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:325; 17: Calling 'PDEFoam::InitCells' in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:343; 18: Field 'fCells' is equal to null in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:359; 19: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:359; 20: Value assigned to field 'fCells' in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:364; 21: Assuming field 'fCells' is null in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:365; 22: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:365; 23: Assuming 'i' is < field 'fNCells' in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:369; 24: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:369; 25: Array access (via field 'fCells') results in a null pointer dereference in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:370; /opt/root_src/tmva/tmva/src/PDEFoam.cxx:397:11: warning: Array access (via field 'fCells') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming field 'fPseRan' is not equal to null in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:297; 2: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:297; 3: Assuming field 'fDistr' is not equal to null in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:298; 4: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:298; 5: Assuming field 'fDim' is not equal to 0 in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:299; 6: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:299; 7: Field 'fRvec' is not equal to null in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:306; 8: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:306; 9: Assuming field 'fDim' is <= 0 in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:308; 10: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:308; 11: Assuming field 'fInhiDiv' is not equal to null in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:314; 12: Taking false br,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:99005,Security,access,access,99005,oam.cxx:325; 17: Calling 'PDEFoam::InitCells' in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:343; 18: Field 'fCells' is equal to null in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:359; 19: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:359; 20: Value assigned to field 'fCells' in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:364; 21: Assuming field 'fCells' is null in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:365; 22: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:365; 23: Assuming 'i' is >= field 'fNCells' in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:369; 24: Loop condition is false. Execution continues on line 377 in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:369; 25: Calling 'PDEFoam::CellFill' in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:377; 26: Assuming field 'fLastCe' is not equal to field 'fNCells' in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:392; 27: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:392; 28: Array access (via field 'fCells') results in a null pointer dereference in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:397; /opt/root_src/tmva/tmva/src/PDEFoam.cxx:1233:31: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:1221; 2: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:1221; 3: Assuming 'h1' is null in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:1227; 4: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:1227; 5: Value assigned to 'h1' in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:1228; 6: Assuming 'h1' is null in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:1230; 7: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:1230; 8: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:1233; /opt/root_src/tmva/tmva/src/PDEFoam.cxx:1304:33: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:107908,Security,Access,Access,107908,suming 'nbin' is >= 1 in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:187; 14: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:187; 15: Assuming 'h1' is null in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:198; 16: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:198; 17: Value assigned to 'h1' in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:199; 18: Assuming 'h1' is null in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:201; 19: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:201; 20: Assuming 'cell_value' is not equal to kValue in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:202; 21: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:202; 22: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:208; /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:86:36: warning: Access to field 'fLastCe' results in a dereference of a null pointer (loaded from variable 'foam') [clang-analyzer-core.NullDereference]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:81; 2: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:81; 3: Access to field 'fLastCe' results in a dereference of a null pointer (loaded from variable 'foam') in /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:86; /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:112:31: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:79; 2: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:79; 3: Passing null pointer value via 1st parameter 'foam' in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:82; 4: Calling 'PDEFoamKernelLinN::WeightLinNeighbors' in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:82; 5: Called C++ object pointer is null in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:108223,Security,Access,Access,108223,; 17: Value assigned to 'h1' in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:199; 18: Assuming 'h1' is null in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:201; 19: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:201; 20: Assuming 'cell_value' is not equal to kValue in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:202; 21: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:202; 22: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:208; /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:86:36: warning: Access to field 'fLastCe' results in a dereference of a null pointer (loaded from variable 'foam') [clang-analyzer-core.NullDereference]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:81; 2: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:81; 3: Access to field 'fLastCe' results in a dereference of a null pointer (loaded from variable 'foam') in /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:86; /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:112:31: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:79; 2: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:79; 3: Passing null pointer value via 1st parameter 'foam' in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:82; 4: Calling 'PDEFoamKernelLinN::WeightLinNeighbors' in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:82; 5: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:112; /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx:80:30: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx:77; 2: Taking true branch in /opt/root_src/tmva/tmva/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:109986,Security,Access,Access,109986,"KernelTrivial.cxx:80:30: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx:77; 2: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx:77; 3: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx:80; /opt/root_src/tmva/tmva/src/PDF.cxx:267:8: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Passing value via 1st parameter 'hist' in /opt/root_src/tmva/tmva/src/PDF.cxx:188; 2: Calling 'PDF::BuildPDF' in /opt/root_src/tmva/tmva/src/PDF.cxx:188; 3: Assuming 'hist' is equal to NULL in /opt/root_src/tmva/tmva/src/PDF.cxx:264; 4: Taking true branch in /opt/root_src/tmva/tmva/src/PDF.cxx:264; 5: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/PDF.cxx:267; /opt/root_src/tmva/tmva/src/Reader.cxx:384:32: warning: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 2: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 3: Calling 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 4: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:395; 5: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:398; 6: Assuming 'method' is not equal to null in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 8: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 9: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 10: Returning pointer (loaded from 'method'), which participates in a condition later in /opt/root_src/tmva/tmva/src/Reader.cxx:424; 11: Returning pointer (loaded from 'method') in /opt/root_src/tmva/tmva/src/Reader.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:111749,Security,Access,Access,111749,":402; 10: Returning pointer (loaded from 'method'), which participates in a condition later in /opt/root_src/tmva/tmva/src/Reader.cxx:424; 11: Returning pointer (loaded from 'method') in /opt/root_src/tmva/tmva/src/Reader.cxx:424; 12: Returning from 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 13: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 14: 'method' is non-null in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 15: Left side of '&&' is true in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 16: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 17: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 18: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:381; 19: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:382; 20: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:382; 21: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva/tmva/src/Reader.cxx:384; /opt/root_src/tmva/tmva/src/Reader.cxx:406:32: warning: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 2: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 3: Calling 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 4: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:395; 5: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:398; 6: Assuming 'method' is not equal to null in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 9: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 10: 'methCat' initial",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:111962,Security,Access,Access,111962,tmva/tmva/src/Reader.cxx:424; 12: Returning from 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 13: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 14: 'method' is non-null in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 15: Left side of '&&' is true in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 16: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 17: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 18: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:381; 19: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:382; 20: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:382; 21: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva/tmva/src/Reader.cxx:384; /opt/root_src/tmva/tmva/src/Reader.cxx:406:32: warning: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 2: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 3: Calling 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 4: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:395; 5: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:398; 6: Assuming 'method' is not equal to null in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 9: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 10: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:403; 11: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:404; 12: Taking true branch in /opt/root_src/tmva/tmva/src/R,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:113036,Security,Access,Access,113036,rence]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 2: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 3: Calling 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 4: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:395; 5: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:398; 6: Assuming 'method' is not equal to null in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 9: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 10: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:403; 11: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:404; 12: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:404; 13: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva/tmva/src/Reader.cxx:406; /opt/root_src/tmva/tmva/src/Reader.cxx:443:32: warning: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:432; 2: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:435; 3: Assuming 'method' is non-null in /opt/root_src/tmva/tmva/src/Reader.cxx:437; 4: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:437; 5: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:439; 6: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:439; 7: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:440; 8: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:441; 9: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:441; 10: Access to field 'fDat,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:113249,Security,Access,Access,113249,_src/tmva/tmva/src/Reader.cxx:378; 4: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:395; 5: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:398; 6: Assuming 'method' is not equal to null in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 9: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 10: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:403; 11: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:404; 12: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:404; 13: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva/tmva/src/Reader.cxx:406; /opt/root_src/tmva/tmva/src/Reader.cxx:443:32: warning: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:432; 2: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:435; 3: Assuming 'method' is non-null in /opt/root_src/tmva/tmva/src/Reader.cxx:437; 4: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:437; 5: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:439; 6: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:439; 7: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:440; 8: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:441; 9: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:441; 10: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva/tmva/src/Reader.cxx:443; /opt/root_src/tmva/tmva/src/Reader.cxx:535:22: warning: Called C,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7526:114083,Security,Access,Access,114083,opt/root_src/tmva/tmva/src/Reader.cxx:406; /opt/root_src/tmva/tmva/src/Reader.cxx:443:32: warning: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:432; 2: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:435; 3: Assuming 'method' is non-null in /opt/root_src/tmva/tmva/src/Reader.cxx:437; 4: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:437; 5: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:439; 6: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:439; 7: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:440; 8: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:441; 9: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:441; 10: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva/tmva/src/Reader.cxx:443; /opt/root_src/tmva/tmva/src/Reader.cxx:535:22: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:519; 2: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:519; 3: Value assigned to 'method' in /opt/root_src/tmva/tmva/src/Reader.cxx:526; 4: 'kl' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:528; 5: Assuming 'kl' is equal to null in /opt/root_src/tmva/tmva/src/Reader.cxx:530; 6: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:530; 7: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/Reader.cxx:535; /opt/root_src/tmva/tmva/src/Reader.cxx:584:22: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Calling 'Reader::EvaluateRegression' in /opt/root_src/tmva/tmva/src/Reader.cxx:617; 2: Assuming the condition is fals,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7526
https://github.com/root-project/root/issues/7527:779,Energy Efficiency,allocate,allocated,779,```; /opt/root_src/rootx/src/rootx.cxx:148:17: warning: Potential leak of memory pointed to by 'env' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Calling 'SetRootSys' in /opt/root_src/rootx/src/rootx.cxx:297; 2: Assuming 'exepath' is non-null in /opt/root_src/rootx/src/rootx.cxx:133; 3: Left side of '&&' is true in /opt/root_src/rootx/src/rootx.cxx:133; 4: Assuming the condition is true in /opt/root_src/rootx/src/rootx.cxx:133; 5: Taking true branch in /opt/root_src/rootx/src/rootx.cxx:133; 6: Assuming 's' is non-null in /opt/root_src/rootx/src/rootx.cxx:138; 7: Taking true branch in /opt/root_src/rootx/src/rootx.cxx:138; 8: Assuming 's' is non-null in /opt/root_src/rootx/src/rootx.cxx:140; 9: Taking true branch in /opt/root_src/rootx/src/rootx.cxx:140; 10: Memory is allocated in /opt/root_src/rootx/src/rootx.cxx:143; 11: Potential leak of memory pointed to by 'env' in /opt/root_src/rootx/src/rootx.cxx:148; /opt/root_src/rootx/src/rootx.cxx:213:1: warning: Potential leak of memory pointed to by 'msg' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Assuming the condition is false in /opt/root_src/rootx/src/rootx.cxx:299; 2: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:299; 3: Assuming 'i' is >= 'argc' in /opt/root_src/rootx/src/rootx.cxx:313; 4: Loop condition is false. Execution continues on line 328 in /opt/root_src/rootx/src/rootx.cxx:313; 5: 'notebook' is <= 0 in /opt/root_src/rootx/src/rootx.cxx:328; 6: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:328; 7: Assuming the condition is false in /opt/root_src/rootx/src/rootx.cxx:358; 8: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:358; 9: 'batch' is false in /opt/root_src/rootx/src/rootx.cxx:362; 10: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:362; 11: 'about' is false in /opt/root_src/rootx/src/rootx.cxx:364; 12: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:364; 13: 'batch' is false in /opt/root_src/rootx/src/rootx.cxx:369; 14: Taking true branch in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7527
https://github.com/root-project/root/issues/7527:2916,Energy Efficiency,allocate,allocated,2916, /opt/root_src/rootx/src/rootx.cxx:369; 14: Taking true branch in /opt/root_src/rootx/src/rootx.cxx:369; 15: 'about' is false in /opt/root_src/rootx/src/rootx.cxx:370; 16: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:370; 17: Assuming 'gNoLogo' is true in /opt/root_src/rootx/src/rootx.cxx:374; 18: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:374; 19: Assuming the condition is false in /opt/root_src/rootx/src/rootx.cxx:420; 20: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:420; 21: Assuming 'gChildpid' is <= 0 in /opt/root_src/rootx/src/rootx.cxx:423; 22: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:423; 23: Loop condition is false. Execution continues on line 457 in /opt/root_src/rootx/src/rootx.cxx:455; 24: Calling 'SetLibraryPath' in /opt/root_src/rootx/src/rootx.cxx:461; 25: Assuming the condition is false in /opt/root_src/rootx/src/rootx.cxx:190; 26: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:190; 27: Memory is allocated in /opt/root_src/rootx/src/rootx.cxx:195; 28: Potential leak of memory pointed to by 'msg' in /opt/root_src/rootx/src/rootx.cxx:213; /opt/root_src/rootx/src/rootx.cxx:351:7: warning: Potential leak of memory pointed to by 'argvv' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Assuming the condition is false in /opt/root_src/rootx/src/rootx.cxx:299; 2: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:299; 3: Assuming 'i' is < 'argc' in /opt/root_src/rootx/src/rootx.cxx:313; 4: Loop condition is true. Entering loop body in /opt/root_src/rootx/src/rootx.cxx:313; 5: Assuming the condition is false in /opt/root_src/rootx/src/rootx.cxx:314; 6: Left side of '||' is false in /opt/root_src/rootx/src/rootx.cxx:314; 7: Assuming the condition is false in /opt/root_src/rootx/src/rootx.cxx:314; 8: Left side of '||' is false in /opt/root_src/rootx/src/rootx.cxx:314; 9: Assuming the condition is false in /opt/root_src/rootx/src/rootx.cxx:315; 10: Taking false branch in /opt/root_src/rootx/src/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7527
https://github.com/root-project/root/issues/7527:5090,Energy Efficiency,allocate,allocated,5090, condition is false in /opt/root_src/rootx/src/rootx.cxx:320; 14: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:320; 15: Assuming the condition is false in /opt/root_src/rootx/src/rootx.cxx:321; 16: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:321; 17: Assuming the condition is false in /opt/root_src/rootx/src/rootx.cxx:322; 18: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:322; 19: Assuming the condition is false in /opt/root_src/rootx/src/rootx.cxx:323; 20: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:323; 21: Assuming the condition is false in /opt/root_src/rootx/src/rootx.cxx:324; 22: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:324; 23: Taking true branch in /opt/root_src/rootx/src/rootx.cxx:325; 24: Execution continues on line 328 in /opt/root_src/rootx/src/rootx.cxx:325; 25: 'notebook' is > 0 in /opt/root_src/rootx/src/rootx.cxx:328; 26: Taking true branch in /opt/root_src/rootx/src/rootx.cxx:328; 27: Memory is allocated in /opt/root_src/rootx/src/rootx.cxx:341; 28: 'i' is < 'numnbargs' in /opt/root_src/rootx/src/rootx.cxx:343; 29: Loop condition is true. Entering loop body in /opt/root_src/rootx/src/rootx.cxx:343; 30: Assuming 'i' is >= 'numnbargs' in /opt/root_src/rootx/src/rootx.cxx:343; 31: Loop condition is false. Execution continues on line 345 in /opt/root_src/rootx/src/rootx.cxx:343; 32: Potential leak of memory pointed to by 'argvv' in /opt/root_src/rootx/src/rootx.cxx:351; /opt/root_src/rootx/src/rootx.cxx:468:4: warning: Potential leak of memory pointed to by 'argvv' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Assuming the condition is false in /opt/root_src/rootx/src/rootx.cxx:299; 2: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:299; 3: Assuming 'i' is >= 'argc' in /opt/root_src/rootx/src/rootx.cxx:313; 4: Loop condition is false. Execution continues on line 328 in /opt/root_src/rootx/src/rootx.cxx:313; 5: 'notebook' is <= 0 in /opt/root_src/rootx/src/rootx.cxx:328; 6: Taking ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7527
https://github.com/root-project/root/issues/7527:7249,Energy Efficiency,allocate,allocated,7249,/rootx/src/rootx.cxx:328; 7: Assuming the condition is false in /opt/root_src/rootx/src/rootx.cxx:358; 8: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:358; 9: 'batch' is false in /opt/root_src/rootx/src/rootx.cxx:362; 10: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:362; 11: 'about' is false in /opt/root_src/rootx/src/rootx.cxx:364; 12: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:364; 13: 'batch' is false in /opt/root_src/rootx/src/rootx.cxx:369; 14: Taking true branch in /opt/root_src/rootx/src/rootx.cxx:369; 15: 'about' is false in /opt/root_src/rootx/src/rootx.cxx:370; 16: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:370; 17: Assuming 'gNoLogo' is true in /opt/root_src/rootx/src/rootx.cxx:374; 18: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:374; 19: Assuming the condition is false in /opt/root_src/rootx/src/rootx.cxx:420; 20: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:420; 21: Assuming 'gChildpid' is <= 0 in /opt/root_src/rootx/src/rootx.cxx:423; 22: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:423; 23: Memory is allocated in /opt/root_src/rootx/src/rootx.cxx:443; 24: Loop condition is false. Execution continues on line 457 in /opt/root_src/rootx/src/rootx.cxx:455; 25: Potential leak of memory pointed to by 'argvv' in /opt/root_src/rootx/src/rootx.cxx:468; /opt/root_src/rootx/src/rootxx.cxx:783:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/rootx/src/rootxx.cxx:783; /opt/root_src/rootx/src/rootx.cxx; /opt/root_src/rootx/src/rootxx.cxx; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7527
https://github.com/root-project/root/issues/7527:7772,Security,secur,security,7772,/rootx/src/rootx.cxx:328; 7: Assuming the condition is false in /opt/root_src/rootx/src/rootx.cxx:358; 8: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:358; 9: 'batch' is false in /opt/root_src/rootx/src/rootx.cxx:362; 10: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:362; 11: 'about' is false in /opt/root_src/rootx/src/rootx.cxx:364; 12: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:364; 13: 'batch' is false in /opt/root_src/rootx/src/rootx.cxx:369; 14: Taking true branch in /opt/root_src/rootx/src/rootx.cxx:369; 15: 'about' is false in /opt/root_src/rootx/src/rootx.cxx:370; 16: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:370; 17: Assuming 'gNoLogo' is true in /opt/root_src/rootx/src/rootx.cxx:374; 18: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:374; 19: Assuming the condition is false in /opt/root_src/rootx/src/rootx.cxx:420; 20: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:420; 21: Assuming 'gChildpid' is <= 0 in /opt/root_src/rootx/src/rootx.cxx:423; 22: Taking false branch in /opt/root_src/rootx/src/rootx.cxx:423; 23: Memory is allocated in /opt/root_src/rootx/src/rootx.cxx:443; 24: Loop condition is false. Execution continues on line 457 in /opt/root_src/rootx/src/rootx.cxx:455; 25: Potential leak of memory pointed to by 'argvv' in /opt/root_src/rootx/src/rootx.cxx:468; /opt/root_src/rootx/src/rootxx.cxx:783:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/rootx/src/rootxx.cxx:783; /opt/root_src/rootx/src/rootx.cxx; /opt/root_src/rootx/src/rootxx.cxx; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7527
https://github.com/root-project/root/issues/7528:81874,Deployability,update,update,81874,[clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:19242; 3: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; /opt/root_src/net/net/src/TNetFile.cxx:697:7: warning: Value stored to 'read' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'read' is never read in /opt/root_src/net/net/src/TNetFile.cxx:697; /opt/root_src/net/net/src/TNetFile.cxx:722:7: warning: Value stored to 'recreate' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'recreate' is never read in /opt/root_src/net/net/src/TNetFile.cxx:722; /opt/root_src/net/net/src/TNetFile.cxx:728:7: warning: Value stored to 'update' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'update' is never read in /opt/root_src/net/net/src/TNetFile.cxx:728; /opt/root_src/net/net/src/TSQLMonitoring.cxx:178:99: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming field 'fDB' is non-null in /opt/root_src/net/net/src/TSQLMonitoring.cxx:89; 2: Taking false branch in /opt/root_src/net/net/src/TSQLMonitoring.cxx:89; 3: Assuming 'values' is non-null in /opt/root_src/net/net/src/TSQLMonitoring.cxx:95; 4: Left side of '||' is false in /opt/root_src/net/net/src/TSQLMonitoring.cxx:95; 5: 'values' is non-null in /opt/root_src/net/net/src/TSQLMonitoring.cxx:95; 6: Left side of '&&' is true in /opt/root_src/net/net/src/TSQLMonitoring.cxx:95; 7: Assuming the condition is false in /opt/root_src/net/net/src/TSQLMonitoring.cxx:95; 8: Taking false branch in /opt/root_src/net/net/src/TSQLMonitoring.cxx:95; 9: Loop condition is true. Entering loop body in /opt/root_src/net/net/sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:81954,Deployability,update,update,81954,oot_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:19242; 3: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; /opt/root_src/net/net/src/TNetFile.cxx:697:7: warning: Value stored to 'read' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'read' is never read in /opt/root_src/net/net/src/TNetFile.cxx:697; /opt/root_src/net/net/src/TNetFile.cxx:722:7: warning: Value stored to 'recreate' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'recreate' is never read in /opt/root_src/net/net/src/TNetFile.cxx:722; /opt/root_src/net/net/src/TNetFile.cxx:728:7: warning: Value stored to 'update' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'update' is never read in /opt/root_src/net/net/src/TNetFile.cxx:728; /opt/root_src/net/net/src/TSQLMonitoring.cxx:178:99: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming field 'fDB' is non-null in /opt/root_src/net/net/src/TSQLMonitoring.cxx:89; 2: Taking false branch in /opt/root_src/net/net/src/TSQLMonitoring.cxx:89; 3: Assuming 'values' is non-null in /opt/root_src/net/net/src/TSQLMonitoring.cxx:95; 4: Left side of '||' is false in /opt/root_src/net/net/src/TSQLMonitoring.cxx:95; 5: 'values' is non-null in /opt/root_src/net/net/src/TSQLMonitoring.cxx:95; 6: Left side of '&&' is true in /opt/root_src/net/net/src/TSQLMonitoring.cxx:95; 7: Assuming the condition is false in /opt/root_src/net/net/src/TSQLMonitoring.cxx:95; 8: Taking false branch in /opt/root_src/net/net/src/TSQLMonitoring.cxx:95; 9: Loop condition is true. Entering loop body in /opt/root_src/net/net/src/TSQLMonitoring.cxx:102; 10: Assuming the condition is true in /opt/root_src/net/net/src,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:8249,Energy Efficiency,allocate,allocated,8249,suming 'gDebug' is <= 3 in /opt/root_src/net/auth/src/TAuthenticate.cxx:2881; 43: Taking false branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:2881; 44: Assuming 'len' is not equal to 0 in /opt/root_src/net/auth/src/TAuthenticate.cxx:2884; 45: Taking false branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:2884; 46: Assuming the condition is false in /opt/root_src/net/auth/src/TAuthenticate.cxx:2887; 47: Taking false branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:2887; 48: Assuming the condition is false in /opt/root_src/net/auth/src/TAuthenticate.cxx:2891; 49: Taking false branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:2891; 50: 'key' is equal to 0 in /opt/root_src/net/auth/src/TAuthenticate.cxx:2893; 51: Taking true branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:2893; 52: 'dec' is equal to 1 in /opt/root_src/net/auth/src/TAuthenticate.cxx:2894; 53: Taking true branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:2894; 54: Memory is allocated in /opt/root_src/net/auth/src/TAuthenticate.cxx:2903; 55: Returned allocated memory via 4th parameter in /opt/root_src/net/auth/src/TAuthenticate.cxx:1615; 56: Taking false branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:1615; 57: Assuming 'slen' is 0 in /opt/root_src/net/auth/src/TAuthenticate.cxx:1622; 58: Taking false branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:1622; 59: Potential leak of memory pointed to by 'tmpsalt' in /opt/root_src/net/auth/src/TAuthenticate.cxx:1648; /opt/root_src/net/auth/src/TAuthenticate.cxx:2925:10: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/net/auth/src/TAuthenticate.cxx:4153; 2: Taking false branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:4153; 3: Assuming 'kind' is equal to kROOTD_RSAKEY in /opt/root_src/net/auth/src/TAuthenticate.cxx:4162; 4: Taking true branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:4162; 5: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:8326,Energy Efficiency,allocate,allocated,8326,alse branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:2881; 44: Assuming 'len' is not equal to 0 in /opt/root_src/net/auth/src/TAuthenticate.cxx:2884; 45: Taking false branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:2884; 46: Assuming the condition is false in /opt/root_src/net/auth/src/TAuthenticate.cxx:2887; 47: Taking false branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:2887; 48: Assuming the condition is false in /opt/root_src/net/auth/src/TAuthenticate.cxx:2891; 49: Taking false branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:2891; 50: 'key' is equal to 0 in /opt/root_src/net/auth/src/TAuthenticate.cxx:2893; 51: Taking true branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:2893; 52: 'dec' is equal to 1 in /opt/root_src/net/auth/src/TAuthenticate.cxx:2894; 53: Taking true branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:2894; 54: Memory is allocated in /opt/root_src/net/auth/src/TAuthenticate.cxx:2903; 55: Returned allocated memory via 4th parameter in /opt/root_src/net/auth/src/TAuthenticate.cxx:1615; 56: Taking false branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:1615; 57: Assuming 'slen' is 0 in /opt/root_src/net/auth/src/TAuthenticate.cxx:1622; 58: Taking false branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:1622; 59: Potential leak of memory pointed to by 'tmpsalt' in /opt/root_src/net/auth/src/TAuthenticate.cxx:1648; /opt/root_src/net/auth/src/TAuthenticate.cxx:2925:10: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/net/auth/src/TAuthenticate.cxx:4153; 2: Taking false branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:4153; 3: Assuming 'kind' is equal to kROOTD_RSAKEY in /opt/root_src/net/auth/src/TAuthenticate.cxx:4162; 4: Taking true branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:4162; 5: Assuming the condition is true in /opt/root_src/net/auth/src/TAuthenticate.cxx:4164; 6: Ta,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:86387,Energy Efficiency,allocate,allocated,86387,"bFile::HttpTerminator' in /opt/root_src/net/net/src/TWebFile.cxx:1274; 8: Assuming 'start' is null in /opt/root_src/net/net/src/TWebFile.cxx:1354; 9: Taking false branch in /opt/root_src/net/net/src/TWebFile.cxx:1354; 10: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/net/net/src/TWebFile.cxx:1355; /opt/root_src/net/rpdutils/src/net.cxx:314:15: warning: Potential leak of memory pointed to by 'tmpbuf' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Calling 'NetRecv' in /opt/root_src/net/rpdutils/src/net.cxx:341; 2: Calling 'NetRecvAllocate' in /opt/root_src/net/rpdutils/src/net.cxx:313; 3: Taking false branch in /opt/root_src/net/rpdutils/src/net.cxx:290; 4: 'len' is >= 0 in /opt/root_src/net/rpdutils/src/net.cxx:294; 5: Taking false branch in /opt/root_src/net/rpdutils/src/net.cxx:294; 6: Assuming 'len' is not equal to 0 in /opt/root_src/net/rpdutils/src/net.cxx:296; 7: Taking true branch in /opt/root_src/net/rpdutils/src/net.cxx:296; 8: Memory is allocated in /opt/root_src/net/rpdutils/src/net.cxx:297; 9: Returned allocated memory in /opt/root_src/net/rpdutils/src/net.cxx:313; 10: Taking true branch in /opt/root_src/net/rpdutils/src/net.cxx:313; 11: Potential leak of memory pointed to by 'tmpbuf' in /opt/root_src/net/rpdutils/src/net.cxx:314; /opt/root_src/net/rpdutils/src/net.cxx:541:4: warning: Value stored to 'port1' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'port1' is never read in /opt/root_src/net/rpdutils/src/net.cxx:541; /opt/root_src/net/rpdutils/src/rpdutils.cxx:668:15: warning: Although the value stored to 'nr' is used in the enclosing expression, the value is never actually read from 'nr' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'nr' is used in the enclosing expression, the value is never actually read from 'nr' in /opt/root_src/net/rpdutils/src/rpdutils.cxx:668; /opt/root_src/net/rpdutils/src/rpdutils.cxx:743:21: warning: Although the value stored to 'nr' is used in the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:86456,Energy Efficiency,allocate,allocated,86456," Assuming 'start' is null in /opt/root_src/net/net/src/TWebFile.cxx:1354; 9: Taking false branch in /opt/root_src/net/net/src/TWebFile.cxx:1354; 10: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/net/net/src/TWebFile.cxx:1355; /opt/root_src/net/rpdutils/src/net.cxx:314:15: warning: Potential leak of memory pointed to by 'tmpbuf' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Calling 'NetRecv' in /opt/root_src/net/rpdutils/src/net.cxx:341; 2: Calling 'NetRecvAllocate' in /opt/root_src/net/rpdutils/src/net.cxx:313; 3: Taking false branch in /opt/root_src/net/rpdutils/src/net.cxx:290; 4: 'len' is >= 0 in /opt/root_src/net/rpdutils/src/net.cxx:294; 5: Taking false branch in /opt/root_src/net/rpdutils/src/net.cxx:294; 6: Assuming 'len' is not equal to 0 in /opt/root_src/net/rpdutils/src/net.cxx:296; 7: Taking true branch in /opt/root_src/net/rpdutils/src/net.cxx:296; 8: Memory is allocated in /opt/root_src/net/rpdutils/src/net.cxx:297; 9: Returned allocated memory in /opt/root_src/net/rpdutils/src/net.cxx:313; 10: Taking true branch in /opt/root_src/net/rpdutils/src/net.cxx:313; 11: Potential leak of memory pointed to by 'tmpbuf' in /opt/root_src/net/rpdutils/src/net.cxx:314; /opt/root_src/net/rpdutils/src/net.cxx:541:4: warning: Value stored to 'port1' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'port1' is never read in /opt/root_src/net/rpdutils/src/net.cxx:541; /opt/root_src/net/rpdutils/src/rpdutils.cxx:668:15: warning: Although the value stored to 'nr' is used in the enclosing expression, the value is never actually read from 'nr' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'nr' is used in the enclosing expression, the value is never actually read from 'nr' in /opt/root_src/net/rpdutils/src/rpdutils.cxx:668; /opt/root_src/net/rpdutils/src/rpdutils.cxx:743:21: warning: Although the value stored to 'nr' is used in the enclosing expression, the value is never actually read from 'nr' [clang-a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:6870,Security,Secur,SecureRecv,6870,o kROOTD_RSAKEY in /opt/root_src/net/auth/src/TAuthenticate.cxx:1592; 26: Left side of '||' is false in /opt/root_src/net/auth/src/TAuthenticate.cxx:1592; 27: Assuming 'stat' is >= 1 in /opt/root_src/net/auth/src/TAuthenticate.cxx:1592; 28: Left side of '||' is false in /opt/root_src/net/auth/src/TAuthenticate.cxx:1592; 29: Assuming 'stat' is <= 2 in /opt/root_src/net/auth/src/TAuthenticate.cxx:1592; 30: Taking false branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:1592; 31: Assuming 'gDebug' is <= 3 in /opt/root_src/net/auth/src/TAuthenticate.cxx:1601; 32: Taking false branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:1601; 33: Assuming the condition is false in /opt/root_src/net/auth/src/TAuthenticate.cxx:1608; 34: Taking false branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:1608; 35: 'needsalt' is 1 in /opt/root_src/net/auth/src/TAuthenticate.cxx:1612; 36: Taking true branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:1612; 37: Calling 'TAuthenticate::SecureRecv' in /opt/root_src/net/auth/src/TAuthenticate.cxx:1615; 38: 'str' is non-null in /opt/root_src/net/auth/src/TAuthenticate.cxx:2874; 39: Taking false branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:2874; 40: Assuming the condition is false in /opt/root_src/net/auth/src/TAuthenticate.cxx:2878; 41: Taking false branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:2878; 42: Assuming 'gDebug' is <= 3 in /opt/root_src/net/auth/src/TAuthenticate.cxx:2881; 43: Taking false branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:2881; 44: Assuming 'len' is not equal to 0 in /opt/root_src/net/auth/src/TAuthenticate.cxx:2884; 45: Taking false branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:2884; 46: Assuming the condition is false in /opt/root_src/net/auth/src/TAuthenticate.cxx:2887; 47: Taking false branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:2887; 48: Assuming the condition is false in /opt/root_src/net/auth/src/TAuthenticate.cxx:2891; 49: Taking false branch in /opt/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:10204,Security,Secur,SecureRecv,10204,t/root_src/net/auth/src/TAuthenticate.cxx:4162; 5: Assuming the condition is true in /opt/root_src/net/auth/src/TAuthenticate.cxx:4164; 6: Taking true branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:4164; 7: Assuming the condition is true in /opt/root_src/net/auth/src/TAuthenticate.cxx:4165; 8: Taking true branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:4165; 9: Assuming the condition is true in /opt/root_src/net/auth/src/TAuthenticate.cxx:4172; 10: Taking true branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:4172; 11: Assuming 'fKey' is non-null in /opt/root_src/net/auth/src/TAuthenticate.cxx:4173; 12: Taking true branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:4173; 13: Assuming 'klen' is > 0 in /opt/root_src/net/auth/src/TAuthenticate.cxx:4175; 14: Taking false branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:4175; 15: 'pwd' initialized to a null pointer value in /opt/root_src/net/auth/src/TAuthenticate.cxx:4193; 16: Calling 'TAuthenticate::SecureRecv' in /opt/root_src/net/auth/src/TAuthenticate.cxx:4194; 17: 'str' is non-null in /opt/root_src/net/auth/src/TAuthenticate.cxx:2874; 18: Taking false branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:2874; 19: Assuming the condition is false in /opt/root_src/net/auth/src/TAuthenticate.cxx:2878; 20: Taking false branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:2878; 21: Assuming 'gDebug' is <= 3 in /opt/root_src/net/auth/src/TAuthenticate.cxx:2881; 22: Taking false branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:2881; 23: Assuming 'len' is not equal to 0 in /opt/root_src/net/auth/src/TAuthenticate.cxx:2884; 24: Taking false branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:2884; 25: Assuming the condition is false in /opt/root_src/net/auth/src/TAuthenticate.cxx:2887; 26: Taking false branch in /opt/root_src/net/auth/src/TAuthenticate.cxx:2887; 27: Assuming the condition is false in /opt/root_src/net/auth/src/TAuthenticate.cxx:2891; 28: Taking false branch in /opt/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:21388,Security,secur,security,21388,e branch in /opt/root_src/net/auth/src/rsalib.cxx:389; 7: Assuming 'bi' is > 0 in /opt/root_src/net/auth/src/rsalib.cxx:393; 8: Loop condition is true. Entering loop body in /opt/root_src/net/auth/src/rsalib.cxx:393; 9: Assuming pointer value is null in /opt/root_src/net/auth/src/rsalib.cxx:394; 10: Assuming 'hp' is non-null in /opt/root_src/net/auth/src/rsalib.cxx:394; 11: Taking true branch in /opt/root_src/net/auth/src/rsalib.cxx:394; 12: Assuming 'ab' is < rsa_MAXBIT in /opt/root_src/net/auth/src/rsalib.cxx:406; 13: Loop condition is false. Execution continues on line 393 in /opt/root_src/net/auth/src/rsalib.cxx:406; 14: Assuming 'bi' is > 0 in /opt/root_src/net/auth/src/rsalib.cxx:393; 15: Loop condition is true. Entering loop body in /opt/root_src/net/auth/src/rsalib.cxx:393; 16: 2nd function call argument is an uninitialized value in /opt/root_src/net/auth/src/rsalib.cxx:394; /opt/root_src/net/http/civetweb/civetweb.c:1635:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:1635; /opt/root_src/net/http/civetweb/civetweb.c:3243:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks intr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:21577,Security,secur,security,21577,ion is true. Entering loop body in /opt/root_src/net/auth/src/rsalib.cxx:393; 9: Assuming pointer value is null in /opt/root_src/net/auth/src/rsalib.cxx:394; 10: Assuming 'hp' is non-null in /opt/root_src/net/auth/src/rsalib.cxx:394; 11: Taking true branch in /opt/root_src/net/auth/src/rsalib.cxx:394; 12: Assuming 'ab' is < rsa_MAXBIT in /opt/root_src/net/auth/src/rsalib.cxx:406; 13: Loop condition is false. Execution continues on line 393 in /opt/root_src/net/auth/src/rsalib.cxx:406; 14: Assuming 'bi' is > 0 in /opt/root_src/net/auth/src/rsalib.cxx:393; 15: Loop condition is true. Entering loop body in /opt/root_src/net/auth/src/rsalib.cxx:393; 16: 2nd function call argument is an uninitialized value in /opt/root_src/net/auth/src/rsalib.cxx:394; /opt/root_src/net/http/civetweb/civetweb.c:1635:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:1635; /opt/root_src/net/http/civetweb/civetweb.c:3243:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:21697,Security,secur,security,21697, Assuming 'hp' is non-null in /opt/root_src/net/auth/src/rsalib.cxx:394; 11: Taking true branch in /opt/root_src/net/auth/src/rsalib.cxx:394; 12: Assuming 'ab' is < rsa_MAXBIT in /opt/root_src/net/auth/src/rsalib.cxx:406; 13: Loop condition is false. Execution continues on line 393 in /opt/root_src/net/auth/src/rsalib.cxx:406; 14: Assuming 'bi' is > 0 in /opt/root_src/net/auth/src/rsalib.cxx:393; 15: Loop condition is true. Entering loop body in /opt/root_src/net/auth/src/rsalib.cxx:393; 16: 2nd function call argument is an uninitialized value in /opt/root_src/net/auth/src/rsalib.cxx:394; /opt/root_src/net/http/civetweb/civetweb.c:1635:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:1635; /opt/root_src/net/http/civetweb/civetweb.c:3243:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3243; /opt/root_src/net/http/civetweb/civetweb.c:3365:11: warning: Call to function 'vsnprintf' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:22043,Security,secur,security,22043,n /opt/root_src/net/auth/src/rsalib.cxx:393; 15: Loop condition is true. Entering loop body in /opt/root_src/net/auth/src/rsalib.cxx:393; 16: 2nd function call argument is an uninitialized value in /opt/root_src/net/auth/src/rsalib.cxx:394; /opt/root_src/net/http/civetweb/civetweb.c:1635:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:1635; /opt/root_src/net/http/civetweb/civetweb.c:3243:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3243; /opt/root_src/net/http/civetweb/civetweb.c:3365:11: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/ci,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:22232,Security,secur,security,22232,6: 2nd function call argument is an uninitialized value in /opt/root_src/net/auth/src/rsalib.cxx:394; /opt/root_src/net/http/civetweb/civetweb.c:1635:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:1635; /opt/root_src/net/http/civetweb/civetweb.c:3243:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3243; /opt/root_src/net/http/civetweb/civetweb.c:3365:11: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace wi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:22352,Security,secur,security,22352, Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:1635; /opt/root_src/net/http/civetweb/civetweb.c:3243:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3243; /opt/root_src/net/http/civetweb/civetweb.c:3365:11: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetwe,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:22702,Security,secur,security,22702,s not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:1635; /opt/root_src/net/http/civetweb/civetweb.c:3243:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3243; /opt/root_src/net/http/civetweb/civetweb.c:3365:11: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3365; 3: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; /opt/root_src/net/http/civetweb/civetweb.c:3502:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary chec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:22894,Security,secur,security,22894,ry checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:1635; /opt/root_src/net/http/civetweb/civetweb.c:3243:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3243; /opt/root_src/net/http/civetweb/civetweb.c:3365:11: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3365; 3: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; /opt/root_src/net/http/civetweb/civetweb.c:3502:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:23108,Security,secur,security,23108,lace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3243; /opt/root_src/net/http/civetweb/civetweb.c:3365:11: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3365; 3: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; /opt/root_src/net/http/civetweb/civetweb.c:3502:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3502; /opt/root_src,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:23548,Security,secur,security,23548,t/root_src/net/http/civetweb/civetweb.c:3243; /opt/root_src/net/http/civetweb/civetweb.c:3365:11: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3365; 3: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; /opt/root_src/net/http/civetweb/civetweb.c:3502:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3502; /opt/root_src/net/http/civetweb/civetweb.c:3633:23: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/ci,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:23737,Security,secur,security,23737,insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3365; 3: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; /opt/root_src/net/http/civetweb/civetweb.c:3502:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3502; /opt/root_src/net/http/civetweb/civetweb.c:3633:23: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; 3: Call to function 'vsnprin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:23857,Security,secur,security,23857,ry checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3365; 3: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; /opt/root_src/net/http/civetweb/civetweb.c:3502:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3502; /opt/root_src/net/http/civetweb/civetweb.c:3633:23: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; 3: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provide,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:24207,Security,secur,security,24207, that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3365; 3: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; /opt/root_src/net/http/civetweb/civetweb.c:3502:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3502; /opt/root_src/net/http/civetweb/civetweb.c:3633:23: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; 3: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3633; 4: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 5: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; /opt/root_src/net/http/civetweb/civetweb.c:3878:5: warning: Cal,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:24399,Security,secur,security,24399,365; 3: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; /opt/root_src/net/http/civetweb/civetweb.c:3502:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3502; /opt/root_src/net/http/civetweb/civetweb.c:3633:23: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; 3: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3633; 4: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 5: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; /opt/root_src/net/http/civetweb/civetweb.c:3878:5: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions th,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:24710,Security,secur,security,24710,memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3502; /opt/root_src/net/http/civetweb/civetweb.c:3633:23: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; 3: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3633; 4: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 5: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; /opt/root_src/net/http/civetweb/civetweb.c:3878:5: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:25248,Security,secur,security,25248,ed in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; 3: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3633; 4: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 5: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; /opt/root_src/net/http/civetweb/civetweb.c:3878:5: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3878; /opt/root_src/net/http/civetweb/civetweb.c:3937:5: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security chec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:25438,Security,secur,security,25438,case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; 3: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3633; 4: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 5: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; /opt/root_src/net/http/civetweb/civetweb.c:3878:5: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3878; /opt/root_src/net/http/civetweb/civetweb.c:3937:5: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:25559,Security,secur,security,25559,vetweb.c:781; 2: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; 3: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3633; 4: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 5: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; /opt/root_src/net/http/civetweb/civetweb.c:3878:5: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3878; /opt/root_src/net/http/civetweb/civetweb.c:3937:5: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3937; /opt/root_src/net/http/civetweb/civetweb.c:5799:2: warning: Call to function 'memset' is ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:25907,Security,secur,security,25907,opt/root_src/net/http/civetweb/civetweb.c:3633; 4: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 5: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; /opt/root_src/net/http/civetweb/civetweb.c:3878:5: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3878; /opt/root_src/net/http/civetweb/civetweb.c:3937:5: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3937; /opt/root_src/net/http/civetweb/civetweb.c:5799:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:26097,Security,secur,security,26097,: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; /opt/root_src/net/http/civetweb/civetweb.c:3878:5: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3878; /opt/root_src/net/http/civetweb/civetweb.c:3937:5: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3937; /opt/root_src/net/http/civetweb/civetweb.c:5799:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:26218,Security,secur,security,26218,to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3878; /opt/root_src/net/http/civetweb/civetweb.c:3937:5: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3937; /opt/root_src/net/http/civetweb/civetweb.c:5799:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:5799; /opt/root_src/net/http/civetweb/civetweb.c:6620:4: warning: Call to function 'memcpy' is inse,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:26565,Security,secur,security,26565,ot provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3878; /opt/root_src/net/http/civetweb/civetweb.c:3937:5: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3937; /opt/root_src/net/http/civetweb/civetweb.c:5799:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:5799; /opt/root_src/net/http/civetweb/civetweb.c:6620:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks intr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:26754,Security,secur,security,26754,ary checks such as 'sprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3878; /opt/root_src/net/http/civetweb/civetweb.c:3937:5: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3937; /opt/root_src/net/http/civetweb/civetweb.c:5799:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:5799; /opt/root_src/net/http/civetweb/civetweb.c:6620:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:26874,Security,secur,security,26874,l to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3937; /opt/root_src/net/http/civetweb/civetweb.c:5799:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:5799; /opt/root_src/net/http/civetweb/civetweb.c:6620:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6620; /opt/root_src/net/http/civetweb/civetweb.c:6829:2: warning: Call to function 'sprintf' is inse,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:27220,Security,secur,security,27220,es not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3937; /opt/root_src/net/http/civetweb/civetweb.c:5799:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:5799; /opt/root_src/net/http/civetweb/civetweb.c:6620:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6620; /opt/root_src/net/http/civetweb/civetweb.c:6829:2: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:27409,Security,secur,security,27409,oundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3937; /opt/root_src/net/http/civetweb/civetweb.c:5799:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:5799; /opt/root_src/net/http/civetweb/civetweb.c:6620:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6620; /opt/root_src/net/http/civetweb/civetweb.c:6829:2: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:27529,Security,secur,security,27529, Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:5799; /opt/root_src/net/http/civetweb/civetweb.c:6620:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6620; /opt/root_src/net/http/civetweb/civetweb.c:6829:2: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6829; /opt/root_src/net/http/civetweb/civetweb.c:6884:9: warning: Call to function 'vsnprintf' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:27876,Security,secur,security,27876,es not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:5799; /opt/root_src/net/http/civetweb/civetweb.c:6620:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6620; /opt/root_src/net/http/civetweb/civetweb.c:6829:2: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6829; /opt/root_src/net/http/civetweb/civetweb.c:6884:9: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:28066,Security,secur,security,28066,undary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:5799; /opt/root_src/net/http/civetweb/civetweb.c:6620:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6620; /opt/root_src/net/http/civetweb/civetweb.c:6829:2: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6829; /opt/root_src/net/http/civetweb/civetweb.c:6884:9: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:28187,Security,secur,security,28187,all to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6620; /opt/root_src/net/http/civetweb/civetweb.c:6829:2: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6829; /opt/root_src/net/http/civetweb/civetweb.c:6884:9: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetwe,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:28537,Security,secur,security,28537,t provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6620; /opt/root_src/net/http/civetweb/civetweb.c:6829:2: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6829; /opt/root_src/net/http/civetweb/civetweb.c:6884:9: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6884; 3: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; /opt/root_src/net/http/civetweb/civetweb.c:6914:8: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:28729,Security,secur,security,28729,checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6620; /opt/root_src/net/http/civetweb/civetweb.c:6829:2: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6829; /opt/root_src/net/http/civetweb/civetweb.c:6884:9: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6884; 3: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; /opt/root_src/net/http/civetweb/civetweb.c:6914:8: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsn,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:28943,Security,secur,security,28943,ce with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6829; /opt/root_src/net/http/civetweb/civetweb.c:6884:9: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6884; 3: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; /opt/root_src/net/http/civetweb/civetweb.c:6914:8: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:29386,Security,secur,security,29386,/root_src/net/http/civetweb/civetweb.c:6829; /opt/root_src/net/http/civetweb/civetweb.c:6884:9: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6884; 3: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; /opt/root_src/net/http/civetweb/civetweb.c:6914:8: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6914; 3: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; /opt/root_src/net/http/civetweb/civetweb.c:6937:7: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:29578,Security,secur,security,29578,ure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6884; 3: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; /opt/root_src/net/http/civetweb/civetweb.c:6914:8: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6914; 3: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; /opt/root_src/net/http/civetweb/civetweb.c:6937:7: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsn,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:29792,Security,secur,security,29792,ling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6884; 3: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; /opt/root_src/net/http/civetweb/civetweb.c:6914:8: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6914; 3: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; /opt/root_src/net/http/civetweb/civetweb.c:6937:7: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; 3: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 sta,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:30235,Security,secur,security,30235,t/root_src/net/http/civetweb/civetweb.c:781; /opt/root_src/net/http/civetweb/civetweb.c:6914:8: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6914; 3: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; /opt/root_src/net/http/civetweb/civetweb.c:6937:7: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; 3: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6937; 4: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 5: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; /opt/root_src/net/http/civetweb/civetweb.c:6945:7: warning: Cal,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:30427,Security,secur,security,30427,ure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6914; 3: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; /opt/root_src/net/http/civetweb/civetweb.c:6937:7: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; 3: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6937; 4: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 5: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; /opt/root_src/net/http/civetweb/civetweb.c:6945:7: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:30738,Security,secur,security,30738, 2: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6914; 3: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; /opt/root_src/net/http/civetweb/civetweb.c:6937:7: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; 3: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6937; 4: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 5: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; /opt/root_src/net/http/civetweb/civetweb.c:6945:7: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; 3: Call to ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:31278,Security,secur,security,31278,d in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; 3: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6937; 4: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 5: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; /opt/root_src/net/http/civetweb/civetweb.c:6945:7: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; 3: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6945; 4: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 5: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; /opt/root_src/net/http/civetweb/civetweb.c:7374:2: warning: Cal,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:31470,Security,secur,security,31470,e of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; 3: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6937; 4: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 5: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; /opt/root_src/net/http/civetweb/civetweb.c:6945:7: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; 3: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6945; 4: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 5: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; /opt/root_src/net/http/civetweb/civetweb.c:7374:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions tha,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:31781,Security,secur,security,31781, the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6937; 4: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 5: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; /opt/root_src/net/http/civetweb/civetweb.c:6945:7: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; 3: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6945; 4: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 5: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; /opt/root_src/net/http/civetweb/civetweb.c:7374:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks su,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:32318,Security,secur,security,32318,ced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; 3: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6945; 4: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 5: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; /opt/root_src/net/http/civetweb/civetweb.c:7374:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7374; /opt/root_src/net/http/civetweb/civetweb.c:7477:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks intr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:32507,Security,secur,security,32507,n case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; 3: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6945; 4: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 5: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; /opt/root_src/net/http/civetweb/civetweb.c:7374:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7374; /opt/root_src/net/http/civetweb/civetweb.c:7477:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:32627,Security,secur,security,32627,civetweb.c:781; 2: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; 3: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6945; 4: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 5: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; /opt/root_src/net/http/civetweb/civetweb.c:7374:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7374; /opt/root_src/net/http/civetweb/civetweb.c:7477:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7477; /opt/root_src/net/http/civetweb/civetweb.c:7535:2: warning: Call to function 'memcpy' is insec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:32973,Security,secur,security,32973, in /opt/root_src/net/http/civetweb/civetweb.c:6945; 4: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 5: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; /opt/root_src/net/http/civetweb/civetweb.c:7374:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7374; /opt/root_src/net/http/civetweb/civetweb.c:7477:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7477; /opt/root_src/net/http/civetweb/civetweb.c:7535:2: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks intr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:33162,Security,secur,security,33162,781; 5: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; /opt/root_src/net/http/civetweb/civetweb.c:7374:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7374; /opt/root_src/net/http/civetweb/civetweb.c:7477:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7477; /opt/root_src/net/http/civetweb/civetweb.c:7535:2: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:33282,Security,secur,security,33282, Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7374; /opt/root_src/net/http/civetweb/civetweb.c:7477:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7477; /opt/root_src/net/http/civetweb/civetweb.c:7535:2: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7535; /opt/root_src/net/http/civetweb/civetweb.c:7556:5: warning: Call to function 'memmove' is inse,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:33628,Security,secur,security,33628,oes not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7374; /opt/root_src/net/http/civetweb/civetweb.c:7477:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7477; /opt/root_src/net/http/civetweb/civetweb.c:7535:2: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7535; /opt/root_src/net/http/civetweb/civetweb.c:7556:5: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:33817,Security,secur,security,33817,boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7374; /opt/root_src/net/http/civetweb/civetweb.c:7477:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7477; /opt/root_src/net/http/civetweb/civetweb.c:7535:2: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7535; /opt/root_src/net/http/civetweb/civetweb.c:7556:5: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:33937,Security,secur,security,33937, Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7477; /opt/root_src/net/http/civetweb/civetweb.c:7535:2: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7535; /opt/root_src/net/http/civetweb/civetweb.c:7556:5: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7556; /opt/root_src/net/http/civetweb/civetweb.c:7631:2: warning: Call to function 'memset' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:34284,Security,secur,security,34284,es not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7477; /opt/root_src/net/http/civetweb/civetweb.c:7535:2: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7535; /opt/root_src/net/http/civetweb/civetweb.c:7556:5: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7556; /opt/root_src/net/http/civetweb/civetweb.c:7631:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:34474,Security,secur,security,34474,undary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7477; /opt/root_src/net/http/civetweb/civetweb.c:7535:2: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7535; /opt/root_src/net/http/civetweb/civetweb.c:7556:5: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7556; /opt/root_src/net/http/civetweb/civetweb.c:7631:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:34595,Security,secur,security,34595,all to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7535; /opt/root_src/net/http/civetweb/civetweb.c:7556:5: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7556; /opt/root_src/net/http/civetweb/civetweb.c:7631:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7631; /opt/root_src/net/http/civetweb/civetweb.c:7708:7: warning: Call to function 'sscanf' is inse,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:34942,Security,secur,security,34942,not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7535; /opt/root_src/net/http/civetweb/civetweb.c:7556:5: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7556; /opt/root_src/net/http/civetweb/civetweb.c:7631:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7631; /opt/root_src/net/http/civetweb/civetweb.c:7708:7: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks intr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:35131,Security,secur,security,35131,dary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7535; /opt/root_src/net/http/civetweb/civetweb.c:7556:5: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7556; /opt/root_src/net/http/civetweb/civetweb.c:7631:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7631; /opt/root_src/net/http/civetweb/civetweb.c:7708:7: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:35251,Security,secur,security,35251,l to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7556; /opt/root_src/net/http/civetweb/civetweb.c:7631:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7631; /opt/root_src/net/http/civetweb/civetweb.c:7708:7: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7708; /opt/root_src/net/http/civetweb/civetweb.c:7717:10: warning: Call to function 'sscanf' is inse,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:35597,Security,secur,security,35597,es not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7556; /opt/root_src/net/http/civetweb/civetweb.c:7631:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7631; /opt/root_src/net/http/civetweb/civetweb.c:7708:7: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7708; /opt/root_src/net/http/civetweb/civetweb.c:7717:10: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks int,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:35786,Security,secur,security,35786,oundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7556; /opt/root_src/net/http/civetweb/civetweb.c:7631:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7631; /opt/root_src/net/http/civetweb/civetweb.c:7708:7: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7708; /opt/root_src/net/http/civetweb/civetweb.c:7717:10: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:35906,Security,secur,security,35906, Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7631; /opt/root_src/net/http/civetweb/civetweb.c:7708:7: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7708; /opt/root_src/net/http/civetweb/civetweb.c:7717:10: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7717; /opt/root_src/net/http/civetweb/civetweb.c:7726:10: warning: Call to function 'sscanf' is ins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:36253,Security,secur,security,36253,es not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7631; /opt/root_src/net/http/civetweb/civetweb.c:7708:7: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7708; /opt/root_src/net/http/civetweb/civetweb.c:7717:10: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7717; /opt/root_src/net/http/civetweb/civetweb.c:7726:10: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:36442,Security,secur,security,36442,oundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7631; /opt/root_src/net/http/civetweb/civetweb.c:7708:7: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7708; /opt/root_src/net/http/civetweb/civetweb.c:7717:10: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7717; /opt/root_src/net/http/civetweb/civetweb.c:7726:10: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:36562,Security,secur,security,36562,Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7708; /opt/root_src/net/http/civetweb/civetweb.c:7717:10: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7717; /opt/root_src/net/http/civetweb/civetweb.c:7726:10: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7726; /opt/root_src/net/http/civetweb/civetweb.c:7735:10: warning: Call to function 'sscanf' is ins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:36909,Security,secur,security,36909,s not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7708; /opt/root_src/net/http/civetweb/civetweb.c:7717:10: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7717; /opt/root_src/net/http/civetweb/civetweb.c:7726:10: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7726; /opt/root_src/net/http/civetweb/civetweb.c:7735:10: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:37098,Security,secur,security,37098,undary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7708; /opt/root_src/net/http/civetweb/civetweb.c:7717:10: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7717; /opt/root_src/net/http/civetweb/civetweb.c:7726:10: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7726; /opt/root_src/net/http/civetweb/civetweb.c:7735:10: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:37218,Security,secur,security,37218,Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7717; /opt/root_src/net/http/civetweb/civetweb.c:7726:10: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7726; /opt/root_src/net/http/civetweb/civetweb.c:7735:10: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7735; /opt/root_src/net/http/civetweb/civetweb.c:7746:4: warning: Call to function 'memset' is inse,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:37565,Security,secur,security,37565,s not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7717; /opt/root_src/net/http/civetweb/civetweb.c:7726:10: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7726; /opt/root_src/net/http/civetweb/civetweb.c:7735:10: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7735; /opt/root_src/net/http/civetweb/civetweb.c:7746:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks int,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:37754,Security,secur,security,37754,undary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7717; /opt/root_src/net/http/civetweb/civetweb.c:7726:10: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7726; /opt/root_src/net/http/civetweb/civetweb.c:7735:10: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7735; /opt/root_src/net/http/civetweb/civetweb.c:7746:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:37874,Security,secur,security,37874,Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7726; /opt/root_src/net/http/civetweb/civetweb.c:7735:10: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7735; /opt/root_src/net/http/civetweb/civetweb.c:7746:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7746; /opt/root_src/net/http/civetweb/civetweb.c:7927:4: warning: Call to function 'memset' is insec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:38220,Security,secur,security,38220,es not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7726; /opt/root_src/net/http/civetweb/civetweb.c:7735:10: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7735; /opt/root_src/net/http/civetweb/civetweb.c:7746:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7746; /opt/root_src/net/http/civetweb/civetweb.c:7927:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks intr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:38409,Security,secur,security,38409,oundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7726; /opt/root_src/net/http/civetweb/civetweb.c:7735:10: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7735; /opt/root_src/net/http/civetweb/civetweb.c:7746:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7746; /opt/root_src/net/http/civetweb/civetweb.c:7927:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:38529,Security,secur,security,38529, Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7735; /opt/root_src/net/http/civetweb/civetweb.c:7746:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7746; /opt/root_src/net/http/civetweb/civetweb.c:7927:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7927; /opt/root_src/net/http/civetweb/civetweb.c:8127:8: warning: Call to function 'memset' is insec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:38875,Security,secur,security,38875,oes not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7735; /opt/root_src/net/http/civetweb/civetweb.c:7746:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7746; /opt/root_src/net/http/civetweb/civetweb.c:7927:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7927; /opt/root_src/net/http/civetweb/civetweb.c:8127:8: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks intr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:39064,Security,secur,security,39064,boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7735; /opt/root_src/net/http/civetweb/civetweb.c:7746:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7746; /opt/root_src/net/http/civetweb/civetweb.c:7927:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7927; /opt/root_src/net/http/civetweb/civetweb.c:8127:8: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:39184,Security,secur,security,39184, Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7746; /opt/root_src/net/http/civetweb/civetweb.c:7927:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7927; /opt/root_src/net/http/civetweb/civetweb.c:8127:8: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8127; /opt/root_src/net/http/civetweb/civetweb.c:8412:2: warning: Call to function 'memset' is insec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:39530,Security,secur,security,39530,oes not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7746; /opt/root_src/net/http/civetweb/civetweb.c:7927:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7927; /opt/root_src/net/http/civetweb/civetweb.c:8127:8: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8127; /opt/root_src/net/http/civetweb/civetweb.c:8412:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks intr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:39719,Security,secur,security,39719,boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7746; /opt/root_src/net/http/civetweb/civetweb.c:7927:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7927; /opt/root_src/net/http/civetweb/civetweb.c:8127:8: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8127; /opt/root_src/net/http/civetweb/civetweb.c:8412:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:39839,Security,secur,security,39839, Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7927; /opt/root_src/net/http/civetweb/civetweb.c:8127:8: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8127; /opt/root_src/net/http/civetweb/civetweb.c:8412:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8412; /opt/root_src/net/http/civetweb/civetweb.c:8637:2: warning: Call to function 'strcpy' is insec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:40185,Security,secur,security,40185,oes not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7927; /opt/root_src/net/http/civetweb/civetweb.c:8127:8: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8127; /opt/root_src/net/http/civetweb/civetweb.c:8412:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8412; /opt/root_src/net/http/civetweb/civetweb.c:8637:2: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with anal,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:40374,Security,secur,security,40374,boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7927; /opt/root_src/net/http/civetweb/civetweb.c:8127:8: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8127; /opt/root_src/net/http/civetweb/civetweb.c:8412:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8412; /opt/root_src/net/http/civetweb/civetweb.c:8637:2: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:8637; /opt/root_src/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:40494,Security,secur,security,40494, Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8127; /opt/root_src/net/http/civetweb/civetweb.c:8412:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8412; /opt/root_src/net/http/civetweb/civetweb.c:8637:2: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:8637; /opt/root_src/net/http/civetweb/civetweb.c:8638:2: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:41002,Security,secur,security,41002,s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8127; /opt/root_src/net/http/civetweb/civetweb.c:8412:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8412; /opt/root_src/net/http/civetweb/civetweb.c:8637:2: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:8637; /opt/root_src/net/http/civetweb/civetweb.c:8638:2: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:8638; /opt/root_src/net/http/civetweb/civetweb.c:8656:7: warning: Call to function 'sscanf' is insecure as it does not provide secu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:41577,Security,secur,security,41577,tions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8412; /opt/root_src/net/http/civetweb/civetweb.c:8637:2: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:8637; /opt/root_src/net/http/civetweb/civetweb.c:8638:2: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:8638; /opt/root_src/net/http/civetweb/civetweb.c:8656:7: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8656; /opt/root_src/net/http/civetweb/civetweb.c:87,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:41990,Security,secur,security,41990,py'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:8637; /opt/root_src/net/http/civetweb/civetweb.c:8638:2: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:8638; /opt/root_src/net/http/civetweb/civetweb.c:8656:7: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8656; /opt/root_src/net/http/civetweb/civetweb.c:8705:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks intr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:42179,Security,secur,security,42179,memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:8637; /opt/root_src/net/http/civetweb/civetweb.c:8638:2: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:8638; /opt/root_src/net/http/civetweb/civetweb.c:8656:7: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8656; /opt/root_src/net/http/civetweb/civetweb.c:8705:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:42299,Security,secur,security,42299,web/civetweb.c:8637; /opt/root_src/net/http/civetweb/civetweb.c:8638:2: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:8638; /opt/root_src/net/http/civetweb/civetweb.c:8656:7: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8656; /opt/root_src/net/http/civetweb/civetweb.c:8705:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8705; /opt/root_src/net/http/civetweb/civetweb.c:8724:4: warning: Call to function 'memcpy' is insec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:42645,Security,secur,security,42645,strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:8638; /opt/root_src/net/http/civetweb/civetweb.c:8656:7: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8656; /opt/root_src/net/http/civetweb/civetweb.c:8705:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8705; /opt/root_src/net/http/civetweb/civetweb.c:8724:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks intr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:42834,Security,secur,security,42834,pport length arguments such as 'strlcat'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:8638; /opt/root_src/net/http/civetweb/civetweb.c:8656:7: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8656; /opt/root_src/net/http/civetweb/civetweb.c:8705:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8705; /opt/root_src/net/http/civetweb/civetweb.c:8724:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:42954,Security,secur,security,42954, Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8656; /opt/root_src/net/http/civetweb/civetweb.c:8705:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8705; /opt/root_src/net/http/civetweb/civetweb.c:8724:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8724; /opt/root_src/net/http/civetweb/civetweb.c:8750:2: warning: Call to function 'memset' is insec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:43300,Security,secur,security,43300,oes not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8656; /opt/root_src/net/http/civetweb/civetweb.c:8705:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8705; /opt/root_src/net/http/civetweb/civetweb.c:8724:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8724; /opt/root_src/net/http/civetweb/civetweb.c:8750:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks intr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:43489,Security,secur,security,43489,boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8656; /opt/root_src/net/http/civetweb/civetweb.c:8705:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8705; /opt/root_src/net/http/civetweb/civetweb.c:8724:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8724; /opt/root_src/net/http/civetweb/civetweb.c:8750:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:43609,Security,secur,security,43609, Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8705; /opt/root_src/net/http/civetweb/civetweb.c:8724:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8724; /opt/root_src/net/http/civetweb/civetweb.c:8750:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8750; /opt/root_src/net/http/civetweb/civetweb.c:9169:4: warning: Call to function 'memset' is insec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:43955,Security,secur,security,43955,oes not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8705; /opt/root_src/net/http/civetweb/civetweb.c:8724:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8724; /opt/root_src/net/http/civetweb/civetweb.c:8750:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8750; /opt/root_src/net/http/civetweb/civetweb.c:9169:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks intr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:44144,Security,secur,security,44144,boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8705; /opt/root_src/net/http/civetweb/civetweb.c:8724:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8724; /opt/root_src/net/http/civetweb/civetweb.c:8750:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8750; /opt/root_src/net/http/civetweb/civetweb.c:9169:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:44264,Security,secur,security,44264, Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8724; /opt/root_src/net/http/civetweb/civetweb.c:8750:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8750; /opt/root_src/net/http/civetweb/civetweb.c:9169:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9169; /opt/root_src/net/http/civetweb/civetweb.c:9223:4: warning: Call to function 'memset' is insec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:44610,Security,secur,security,44610,oes not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8724; /opt/root_src/net/http/civetweb/civetweb.c:8750:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8750; /opt/root_src/net/http/civetweb/civetweb.c:9169:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9169; /opt/root_src/net/http/civetweb/civetweb.c:9223:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks intr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:44799,Security,secur,security,44799,boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8724; /opt/root_src/net/http/civetweb/civetweb.c:8750:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8750; /opt/root_src/net/http/civetweb/civetweb.c:9169:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9169; /opt/root_src/net/http/civetweb/civetweb.c:9223:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:44919,Security,secur,security,44919, Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8750; /opt/root_src/net/http/civetweb/civetweb.c:9169:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9169; /opt/root_src/net/http/civetweb/civetweb.c:9223:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9223; /opt/root_src/net/http/civetweb/civetweb.c:9502:9: warning: Call to function 'sscanf' is insec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:45265,Security,secur,security,45265,oes not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8750; /opt/root_src/net/http/civetweb/civetweb.c:9169:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9169; /opt/root_src/net/http/civetweb/civetweb.c:9223:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9223; /opt/root_src/net/http/civetweb/civetweb.c:9502:9: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks intr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:45454,Security,secur,security,45454,boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8750; /opt/root_src/net/http/civetweb/civetweb.c:9169:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9169; /opt/root_src/net/http/civetweb/civetweb.c:9223:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9223; /opt/root_src/net/http/civetweb/civetweb.c:9502:9: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:45574,Security,secur,security,45574, Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9169; /opt/root_src/net/http/civetweb/civetweb.c:9223:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9223; /opt/root_src/net/http/civetweb/civetweb.c:9502:9: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9502; /opt/root_src/net/http/civetweb/civetweb.c:9911:11: warning: Although the value stored to 'p' ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:45920,Security,secur,security,45920,"oes not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9169; /opt/root_src/net/http/civetweb/civetweb.c:9223:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9223; /opt/root_src/net/http/civetweb/civetweb.c:9502:9: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9502; /opt/root_src/net/http/civetweb/civetweb.c:9911:11: warning: Although the value stored to 'p' is used in the enclosing expression, the value is never actually read from 'p' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'p' is used in the enclosing expression, the value is never actually read from 'p' in /opt/root_src/net/http/civetweb/civetweb.c:9911; /opt/root_src/net/http/civetweb/civetweb.c:9918:3: warning: Call to func",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:46109,Security,secur,security,46109,"boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9169; /opt/root_src/net/http/civetweb/civetweb.c:9223:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9223; /opt/root_src/net/http/civetweb/civetweb.c:9502:9: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9502; /opt/root_src/net/http/civetweb/civetweb.c:9911:11: warning: Although the value stored to 'p' is used in the enclosing expression, the value is never actually read from 'p' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'p' is used in the enclosing expression, the value is never actually read from 'p' in /opt/root_src/net/http/civetweb/civetweb.c:9911; /opt/root_src/net/http/civetweb/civetweb.c:9918:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that supp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:46229,Security,secur,security,46229," Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9223; /opt/root_src/net/http/civetweb/civetweb.c:9502:9: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9502; /opt/root_src/net/http/civetweb/civetweb.c:9911:11: warning: Although the value stored to 'p' is used in the enclosing expression, the value is never actually read from 'p' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'p' is used in the enclosing expression, the value is never actually read from 'p' in /opt/root_src/net/http/civetweb/civetweb.c:9911; /opt/root_src/net/http/civetweb/civetweb.c:9918:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Ca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:46953,Security,secur,security,46953,"introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9502; /opt/root_src/net/http/civetweb/civetweb.c:9911:11: warning: Although the value stored to 'p' is used in the enclosing expression, the value is never actually read from 'p' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'p' is used in the enclosing expression, the value is never actually read from 'p' in /opt/root_src/net/http/civetweb/civetweb.c:9911; /opt/root_src/net/http/civetweb/civetweb.c:9918:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9918; /opt/root_src/net/http/civetweb/civetweb.c:10419:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks int",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:47142,Security,secur,security,47142,"s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9502; /opt/root_src/net/http/civetweb/civetweb.c:9911:11: warning: Although the value stored to 'p' is used in the enclosing expression, the value is never actually read from 'p' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'p' is used in the enclosing expression, the value is never actually read from 'p' in /opt/root_src/net/http/civetweb/civetweb.c:9911; /opt/root_src/net/http/civetweb/civetweb.c:9918:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9918; /opt/root_src/net/http/civetweb/civetweb.c:10419:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:47262,Security,secur,security,47262,"y checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9502; /opt/root_src/net/http/civetweb/civetweb.c:9911:11: warning: Although the value stored to 'p' is used in the enclosing expression, the value is never actually read from 'p' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'p' is used in the enclosing expression, the value is never actually read from 'p' in /opt/root_src/net/http/civetweb/civetweb.c:9911; /opt/root_src/net/http/civetweb/civetweb.c:9918:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9918; /opt/root_src/net/http/civetweb/civetweb.c:10419:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:10419; /opt/root_src/net/http/civetweb/civetweb.c:11294:2: warning: Call to function 'memset' is in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:47609,Security,secur,security,47609,"ue is never actually read from 'p' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'p' is used in the enclosing expression, the value is never actually read from 'p' in /opt/root_src/net/http/civetweb/civetweb.c:9911; /opt/root_src/net/http/civetweb/civetweb.c:9918:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9918; /opt/root_src/net/http/civetweb/civetweb.c:10419:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:10419; /opt/root_src/net/http/civetweb/civetweb.c:11294:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:47798,Security,secur,security,47798,"ssion, the value is never actually read from 'p' in /opt/root_src/net/http/civetweb/civetweb.c:9911; /opt/root_src/net/http/civetweb/civetweb.c:9918:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9918; /opt/root_src/net/http/civetweb/civetweb.c:10419:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:10419; /opt/root_src/net/http/civetweb/civetweb.c:11294:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s'",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:47918,Security,secur,security,47918,Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9918; /opt/root_src/net/http/civetweb/civetweb.c:10419:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:10419; /opt/root_src/net/http/civetweb/civetweb.c:11294:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11294; /opt/root_src/net/http/civetweb/civetweb.c:11508:2: warning: Call to function 'memset' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:48266,Security,secur,security,48266, not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9918; /opt/root_src/net/http/civetweb/civetweb.c:10419:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:10419; /opt/root_src/net/http/civetweb/civetweb.c:11294:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11294; /opt/root_src/net/http/civetweb/civetweb.c:11508:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:48455,Security,secur,security,48455,ndary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9918; /opt/root_src/net/http/civetweb/civetweb.c:10419:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:10419; /opt/root_src/net/http/civetweb/civetweb.c:11294:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11294; /opt/root_src/net/http/civetweb/civetweb.c:11508:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:48575,Security,secur,security,48575,all to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:10419; /opt/root_src/net/http/civetweb/civetweb.c:11294:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11294; /opt/root_src/net/http/civetweb/civetweb.c:11508:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11508; /opt/root_src/net/http/civetweb/civetweb.c:11591:6: warning: Call to function 'sscanf' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:48923,Security,secur,security,48923,not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:10419; /opt/root_src/net/http/civetweb/civetweb.c:11294:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11294; /opt/root_src/net/http/civetweb/civetweb.c:11508:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11508; /opt/root_src/net/http/civetweb/civetweb.c:11591:6: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:49112,Security,secur,security,49112,dary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:10419; /opt/root_src/net/http/civetweb/civetweb.c:11294:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11294; /opt/root_src/net/http/civetweb/civetweb.c:11508:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11508; /opt/root_src/net/http/civetweb/civetweb.c:11591:6: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:49232,Security,secur,security,49232,all to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11294; /opt/root_src/net/http/civetweb/civetweb.c:11508:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11508; /opt/root_src/net/http/civetweb/civetweb.c:11591:6: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11591; /opt/root_src/net/http/civetweb/civetweb.c:11602:13: warning: Call to function 'sscanf' is ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:49580,Security,secur,security,49580,not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11294; /opt/root_src/net/http/civetweb/civetweb.c:11508:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11508; /opt/root_src/net/http/civetweb/civetweb.c:11591:6: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11591; /opt/root_src/net/http/civetweb/civetweb.c:11602:13: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:49769,Security,secur,security,49769,dary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11294; /opt/root_src/net/http/civetweb/civetweb.c:11508:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11508; /opt/root_src/net/http/civetweb/civetweb.c:11591:6: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11591; /opt/root_src/net/http/civetweb/civetweb.c:11602:13: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:49889,Security,secur,security,49889,all to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11508; /opt/root_src/net/http/civetweb/civetweb.c:11591:6: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11591; /opt/root_src/net/http/civetweb/civetweb.c:11602:13: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11602; /opt/root_src/net/http/civetweb/civetweb.c:11609:14: warning: Call to function 'sscanf' is,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:50238,Security,secur,security,50238,not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11508; /opt/root_src/net/http/civetweb/civetweb.c:11591:6: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11591; /opt/root_src/net/http/civetweb/civetweb.c:11602:13: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11602; /opt/root_src/net/http/civetweb/civetweb.c:11609:14: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:50427,Security,secur,security,50427,ary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11508; /opt/root_src/net/http/civetweb/civetweb.c:11591:6: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11591; /opt/root_src/net/http/civetweb/civetweb.c:11602:13: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11602; /opt/root_src/net/http/civetweb/civetweb.c:11609:14: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:50547,Security,secur,security,50547,ll to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11591; /opt/root_src/net/http/civetweb/civetweb.c:11602:13: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11602; /opt/root_src/net/http/civetweb/civetweb.c:11609:14: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11609; /opt/root_src/net/http/civetweb/civetweb.c:11610:17: warning: Call to function 'sscanf' is,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:50896,Security,secur,security,50896,ot provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11591; /opt/root_src/net/http/civetweb/civetweb.c:11602:13: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11602; /opt/root_src/net/http/civetweb/civetweb.c:11609:14: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11609; /opt/root_src/net/http/civetweb/civetweb.c:11610:17: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:51085,Security,secur,security,51085,ry checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11591; /opt/root_src/net/http/civetweb/civetweb.c:11602:13: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11602; /opt/root_src/net/http/civetweb/civetweb.c:11609:14: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11609; /opt/root_src/net/http/civetweb/civetweb.c:11610:17: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:51205,Security,secur,security,51205,ll to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11602; /opt/root_src/net/http/civetweb/civetweb.c:11609:14: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11609; /opt/root_src/net/http/civetweb/civetweb.c:11610:17: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11610; /opt/root_src/net/http/civetweb/civetweb.c:11666:6: warning: Call to function 'sscanf' is ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:51554,Security,secur,security,51554,ot provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11602; /opt/root_src/net/http/civetweb/civetweb.c:11609:14: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11609; /opt/root_src/net/http/civetweb/civetweb.c:11610:17: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11610; /opt/root_src/net/http/civetweb/civetweb.c:11666:6: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:51743,Security,secur,security,51743,ry checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11602; /opt/root_src/net/http/civetweb/civetweb.c:11609:14: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11609; /opt/root_src/net/http/civetweb/civetweb.c:11610:17: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11610; /opt/root_src/net/http/civetweb/civetweb.c:11666:6: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:51863,Security,secur,security,51863,ll to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11609; /opt/root_src/net/http/civetweb/civetweb.c:11610:17: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11610; /opt/root_src/net/http/civetweb/civetweb.c:11666:6: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11666; /opt/root_src/net/http/civetweb/civetweb.c:12186:5: warning: Call to function 'memcpy' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:52211,Security,secur,security,52211,ot provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11609; /opt/root_src/net/http/civetweb/civetweb.c:11610:17: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11610; /opt/root_src/net/http/civetweb/civetweb.c:11666:6: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11666; /opt/root_src/net/http/civetweb/civetweb.c:12186:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:52400,Security,secur,security,52400,ary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11609; /opt/root_src/net/http/civetweb/civetweb.c:11610:17: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11610; /opt/root_src/net/http/civetweb/civetweb.c:11666:6: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11666; /opt/root_src/net/http/civetweb/civetweb.c:12186:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:52520,Security,secur,security,52520,all to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11610; /opt/root_src/net/http/civetweb/civetweb.c:11666:6: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11666; /opt/root_src/net/http/civetweb/civetweb.c:12186:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12186; /opt/root_src/net/http/civetweb/civetweb.c:12187:5: warning: Call to function 'memcpy' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:52868,Security,secur,security,52868,not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11610; /opt/root_src/net/http/civetweb/civetweb.c:11666:6: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11666; /opt/root_src/net/http/civetweb/civetweb.c:12186:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12186; /opt/root_src/net/http/civetweb/civetweb.c:12187:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:53057,Security,secur,security,53057,dary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11610; /opt/root_src/net/http/civetweb/civetweb.c:11666:6: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11666; /opt/root_src/net/http/civetweb/civetweb.c:12186:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12186; /opt/root_src/net/http/civetweb/civetweb.c:12187:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:53177,Security,secur,security,53177,all to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11666; /opt/root_src/net/http/civetweb/civetweb.c:12186:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12186; /opt/root_src/net/http/civetweb/civetweb.c:12187:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12187; /opt/root_src/net/http/civetweb/civetweb.c:12222:5: warning: Call to function 'memcpy' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:53525,Security,secur,security,53525,not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11666; /opt/root_src/net/http/civetweb/civetweb.c:12186:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12186; /opt/root_src/net/http/civetweb/civetweb.c:12187:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12187; /opt/root_src/net/http/civetweb/civetweb.c:12222:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:53714,Security,secur,security,53714,dary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11666; /opt/root_src/net/http/civetweb/civetweb.c:12186:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12186; /opt/root_src/net/http/civetweb/civetweb.c:12187:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12187; /opt/root_src/net/http/civetweb/civetweb.c:12222:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:53834,Security,secur,security,53834,all to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12186; /opt/root_src/net/http/civetweb/civetweb.c:12187:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12187; /opt/root_src/net/http/civetweb/civetweb.c:12222:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12222; /opt/root_src/net/http/civetweb/civetweb.c:12224:5: warning: Call to function 'memset' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:54182,Security,secur,security,54182,not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12186; /opt/root_src/net/http/civetweb/civetweb.c:12187:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12187; /opt/root_src/net/http/civetweb/civetweb.c:12222:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12222; /opt/root_src/net/http/civetweb/civetweb.c:12224:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:54371,Security,secur,security,54371,dary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12186; /opt/root_src/net/http/civetweb/civetweb.c:12187:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12187; /opt/root_src/net/http/civetweb/civetweb.c:12222:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12222; /opt/root_src/net/http/civetweb/civetweb.c:12224:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:54491,Security,secur,security,54491,all to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12187; /opt/root_src/net/http/civetweb/civetweb.c:12222:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12222; /opt/root_src/net/http/civetweb/civetweb.c:12224:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12224; /opt/root_src/net/http/civetweb/civetweb.c:12234:5: warning: Call to function 'memcpy' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:54839,Security,secur,security,54839,not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12187; /opt/root_src/net/http/civetweb/civetweb.c:12222:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12222; /opt/root_src/net/http/civetweb/civetweb.c:12224:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12224; /opt/root_src/net/http/civetweb/civetweb.c:12234:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:55028,Security,secur,security,55028,dary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12187; /opt/root_src/net/http/civetweb/civetweb.c:12222:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12222; /opt/root_src/net/http/civetweb/civetweb.c:12224:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12224; /opt/root_src/net/http/civetweb/civetweb.c:12234:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:55148,Security,secur,security,55148,all to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12222; /opt/root_src/net/http/civetweb/civetweb.c:12224:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12224; /opt/root_src/net/http/civetweb/civetweb.c:12234:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12234; /opt/root_src/net/http/civetweb/civetweb.c:12278:5: warning: Call to function 'memcpy' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:55496,Security,secur,security,55496,not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12222; /opt/root_src/net/http/civetweb/civetweb.c:12224:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12224; /opt/root_src/net/http/civetweb/civetweb.c:12234:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12234; /opt/root_src/net/http/civetweb/civetweb.c:12278:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:55685,Security,secur,security,55685,dary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12222; /opt/root_src/net/http/civetweb/civetweb.c:12224:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12224; /opt/root_src/net/http/civetweb/civetweb.c:12234:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12234; /opt/root_src/net/http/civetweb/civetweb.c:12278:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:55805,Security,secur,security,55805,all to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12224; /opt/root_src/net/http/civetweb/civetweb.c:12234:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12234; /opt/root_src/net/http/civetweb/civetweb.c:12278:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12278; /opt/root_src/net/http/civetweb/civetweb.c:12281:5: warning: Call to function 'memmove' is ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:56153,Security,secur,security,56153,not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12224; /opt/root_src/net/http/civetweb/civetweb.c:12234:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12234; /opt/root_src/net/http/civetweb/civetweb.c:12278:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12278; /opt/root_src/net/http/civetweb/civetweb.c:12281:5: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security check,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:56342,Security,secur,security,56342,dary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12224; /opt/root_src/net/http/civetweb/civetweb.c:12234:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12234; /opt/root_src/net/http/civetweb/civetweb.c:12278:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12278; /opt/root_src/net/http/civetweb/civetweb.c:12281:5: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmov,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:56462,Security,secur,security,56462,all to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12234; /opt/root_src/net/http/civetweb/civetweb.c:12278:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12278; /opt/root_src/net/http/civetweb/civetweb.c:12281:5: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12281; /opt/root_src/net/http/civetweb/civetweb.c:12447:3: warning: Call to function 'memcpy' ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:56811,Security,secur,security,56811,not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12234; /opt/root_src/net/http/civetweb/civetweb.c:12278:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12278; /opt/root_src/net/http/civetweb/civetweb.c:12281:5: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12281; /opt/root_src/net/http/civetweb/civetweb.c:12447:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security check,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:57001,Security,secur,security,57001,ry checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12234; /opt/root_src/net/http/civetweb/civetweb.c:12278:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12278; /opt/root_src/net/http/civetweb/civetweb.c:12281:5: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12281; /opt/root_src/net/http/civetweb/civetweb.c:12447:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
