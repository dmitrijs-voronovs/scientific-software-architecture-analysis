id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/psi4/psi4/pull/872#issuecomment-355744886:154,Testability,test,tests,154,"@loriab I have a couple of reference FCIDUMP files that the HANDE QMC code uses in its tests. I have been checking against those, so I can definitely add tests. I'll add a `compare` function similar to `compare_cubes`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/872#issuecomment-355744886
https://github.com/psi4/psi4/pull/872#issuecomment-355832001:13,Testability,test,test,13,I've added a test case for an FCIDUMP generated from an RHF wavefunction. I doesn't seem to have been picked up by Travis though...,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/872#issuecomment-355832001
https://github.com/psi4/psi4/pull/872#issuecomment-355837812:7,Testability,test,test,7,"If the test is `input.py`/psiapi, it needs to be in `tests/python/fcidump/` to pick up. has to be psithon/`input.dat` to be `tests/fcidump/`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/872#issuecomment-355837812
https://github.com/psi4/psi4/pull/872#issuecomment-355837812:53,Testability,test,tests,53,"If the test is `input.py`/psiapi, it needs to be in `tests/python/fcidump/` to pick up. has to be psithon/`input.dat` to be `tests/fcidump/`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/872#issuecomment-355837812
https://github.com/psi4/psi4/pull/872#issuecomment-355837812:125,Testability,test,tests,125,"If the test is `input.py`/psiapi, it needs to be in `tests/python/fcidump/` to pick up. has to be psithon/`input.dat` to be `tests/fcidump/`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/872#issuecomment-355837812
https://github.com/psi4/psi4/pull/872#issuecomment-355999602:151,Availability,error,error,151,I've added a test for UHF integral dumps. The tests are in both as PsiAPI _and_ as Psithon. The former is failing without any particularly informative error message. Suggestions on how to troubleshoot?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/872#issuecomment-355999602
https://github.com/psi4/psi4/pull/872#issuecomment-355999602:157,Integrability,message,message,157,I've added a test for UHF integral dumps. The tests are in both as PsiAPI _and_ as Psithon. The former is failing without any particularly informative error message. Suggestions on how to troubleshoot?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/872#issuecomment-355999602
https://github.com/psi4/psi4/pull/872#issuecomment-355999602:13,Testability,test,test,13,I've added a test for UHF integral dumps. The tests are in both as PsiAPI _and_ as Psithon. The former is failing without any particularly informative error message. Suggestions on how to troubleshoot?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/872#issuecomment-355999602
https://github.com/psi4/psi4/pull/872#issuecomment-355999602:46,Testability,test,tests,46,I've added a test for UHF integral dumps. The tests are in both as PsiAPI _and_ as Psithon. The former is failing without any particularly informative error message. Suggestions on how to troubleshoot?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/872#issuecomment-355999602
https://github.com/psi4/psi4/pull/872#issuecomment-356018808:113,Availability,error,errors,113,"try running the psiapi test outright, like https://github.com/psi4/psi4/blob/master/.travis.yml#L179 to see more errors. any extra packages needed that the bare travis env doesn't have?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/872#issuecomment-356018808
https://github.com/psi4/psi4/pull/872#issuecomment-356018808:23,Testability,test,test,23,"try running the psiapi test outright, like https://github.com/psi4/psi4/blob/master/.travis.yml#L179 to see more errors. any extra packages needed that the bare travis env doesn't have?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/872#issuecomment-356018808
https://github.com/psi4/psi4/pull/872#issuecomment-356133829:92,Testability,test,test,92,"Well, can't seem to make it work that way either... Should I just pull the `python-fcidump` test out?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/872#issuecomment-356133829
https://github.com/psi4/psi4/pull/872#issuecomment-356134730:48,Deployability,Install,Install,48,You can `PYTHONPATH=./stage/${TRAVIS_BUILD_DIR}/Install/lib python python-fcidump` if you want to keep hammering at it. But fine by me if you want to pull the psiapi. Thanks for adding the tests.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/872#issuecomment-356134730
https://github.com/psi4/psi4/pull/872#issuecomment-356134730:189,Testability,test,tests,189,You can `PYTHONPATH=./stage/${TRAVIS_BUILD_DIR}/Install/lib python python-fcidump` if you want to keep hammering at it. But fine by me if you want to pull the psiapi. Thanks for adding the tests.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/872#issuecomment-356134730
https://github.com/psi4/psi4/pull/872#issuecomment-356219963:50,Testability,test,test,50,"It can't find the reference files. I'll pull this test out since it does not provide additional coverage anyway. Just for my own edification, how would you get it to work? Hardcoding the reference file paths doesn't seem a good solution...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/872#issuecomment-356219963
https://github.com/psi4/psi4/pull/872#issuecomment-369495195:29,Testability,test,tests,29,"No, I didn't. But HANDE CCMC tests are passing when these fcidumps are used; instead of their references. Both for the RHF and UHF integral dumps. On Wed, Feb 28, 2018, 23:23 Daniel Smith <notifications@github.com> wrote:. > @robertodr <https://github.com/robertodr> Did you get a chance to run; > this through the FCI code?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/872#issuecomment-369404382>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/ADiXEZMUPsD83h5I9sIOXp4KIQj7H6shks5tZdHRgaJpZM4QyuVF>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/872#issuecomment-369495195
https://github.com/psi4/psi4/pull/873#issuecomment-348799558:36,Testability,test,test,36,Try ‘ ctest -R dmrg’ or chemps2 for test suite,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/873#issuecomment-348799558
https://github.com/psi4/psi4/pull/873#issuecomment-348803498:29,Testability,test,tests,29,"Thanks, @loriab. All chemps2 tests pass.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/873#issuecomment-348803498
https://github.com/psi4/psi4/issues/874#issuecomment-349096893:165,Integrability,contract,contraction,165,"In the DFOCC case I just forget to use the ""puream false"" option. When I used the ""puream false"" option, I again get the incorrect normalization. Hence, I think the contraction normalization code for cartesian functions might include a bug. As far as I understand, in psi4 there is different shell info codes for ""puream true"" and ""puream false"" options. Am I right? @jturney @loriab",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/874#issuecomment-349096893
https://github.com/psi4/psi4/issues/874#issuecomment-349333069:66,Security,access,access,66,"The lack of normalization was introduced by the CCA. I don't have access to it right now, but I'm fairly sure it's [this paper](http://onlinelibrary.wiley.com/doi/10.1002/jcc.20815/abstract).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/874#issuecomment-349333069
https://github.com/psi4/psi4/issues/874#issuecomment-352020542:30,Usability,clear,clear,30,@bozkaya Does this discussion clear up your questions?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/874#issuecomment-352020542
https://github.com/psi4/psi4/issues/875#issuecomment-349464469:1784,Availability,failure,failure,1784,"s will give better predictions of; molecular properties. C2H4 is not a classic ""symmetry breaking molecule"" to my knowledge, so I'm; surprised that there is a symmetry-breaking solution to the SCF equations. On Tue, Dec 5, 2017 at 3:11 PM, Daniel Smith <notifications@github.com>; wrote:. > I believe we have had this problem in the past. Take a symmetric molecule; > who's optimal wavefunction should contain less symmetry:; >; > import numpy as np; >; > mol = psi4.geometry("""""" 0 1C 0.0 0.0 0.673055C 0.0 0.0 -0.673055H 0.0 0.934981 1.246807H 0.0 -0.934981 1.246807H 0.934981 0.0 -1.246807H -0.934981 0.0 -1.246807symmetry c1""""""); > # Set reference and guess.; > psi4.set_options({; > ""reference"": ""rhf"",; > ""guess"": ""sad"",; > ""basis"": ""DZP"",; > ""soscf"": ""true"",# ""sad_frac_occ"": ""true""; > }); >; > energy = energy('scf')if np.allclose(energy, -77.87781349420317):; > print(""Found non-symmetric minima! Success!"")elif np.allclose(energy, -77.84789770426966):; > print(""Found symmetric minima... failure."")else:; > print(""You found something... wrong.""); >; > The -77.847 result should be found when the molecule is constrained to; > symmetry. However, without that constraint there is a lower SCF result to; > be found. The kicker is even without the symmetry restraint (computation in; > c1) we fairly consistently end up with a symmetric wavefunction. Any; > ideas on how to avoid this?; >; > Note 1: The stability analysis is showing that it is indeed finding the; > wrong answer and there are negative eigenvalues present. We should be able; > to follow these once the py-scf iterations are finished.; >; > Note 2: This is not deterministic for which result we land in (whoo!).; >; > Note 3: Moving an atom out of place by 1e-14 or so seems to ensure we find; > the correct energy. Really any noise lets the diagonalizer break out of its; > self-imposed symmetry constraints.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it o",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/875#issuecomment-349464469
https://github.com/psi4/psi4/issues/875#issuecomment-349464469:285,Energy Efficiency,energy,energy,285,"It's a feature not a bug?. Symmetric molecules are supposed to have symmetric wavefunctions (because; the Hamiltonian commutes with the symmetry operators). Certainly, the; exact wavefunction does has the full point group symmetry. Occasionally,; approximate QM methods can have lower-energy non-symmetric solutions.; Anytime the wavefunction has a lower symmetry than the molecule, this is; usually considered a bad thing and is often called ""artifactual (spatial); symmetry breaking."" Wes Allen and Daniel Crawford have some excellent; papers on this topic (I've made a couple contributions, also). In most applications, generally the high symmetry wavefunction is the one; that is actually desired, although it depends on the situation whether the; symmetric or non-symmetric solutions will give better predictions of; molecular properties. C2H4 is not a classic ""symmetry breaking molecule"" to my knowledge, so I'm; surprised that there is a symmetry-breaking solution to the SCF equations. On Tue, Dec 5, 2017 at 3:11 PM, Daniel Smith <notifications@github.com>; wrote:. > I believe we have had this problem in the past. Take a symmetric molecule; > who's optimal wavefunction should contain less symmetry:; >; > import numpy as np; >; > mol = psi4.geometry("""""" 0 1C 0.0 0.0 0.673055C 0.0 0.0 -0.673055H 0.0 0.934981 1.246807H 0.0 -0.934981 1.246807H 0.934981 0.0 -1.246807H -0.934981 0.0 -1.246807symmetry c1""""""); > # Set reference and guess.; > psi4.set_options({; > ""reference"": ""rhf"",; > ""guess"": ""sad"",; > ""basis"": ""DZP"",; > ""soscf"": ""true"",# ""sad_frac_occ"": ""true""; > }); >; > energy = energy('scf')if np.allclose(energy, -77.87781349420317):; > print(""Found non-symmetric minima! Success!"")elif np.allclose(energy, -77.84789770426966):; > print(""Found symmetric minima... failure."")else:; > print(""You found something... wrong.""); >; > The -77.847 result should be found when the molecule is constrained to; > symmetry. However, without that constraint there is a lower SCF result to; > be",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/875#issuecomment-349464469
https://github.com/psi4/psi4/issues/875#issuecomment-349464469:1588,Energy Efficiency,energy,energy,1588,"; papers on this topic (I've made a couple contributions, also). In most applications, generally the high symmetry wavefunction is the one; that is actually desired, although it depends on the situation whether the; symmetric or non-symmetric solutions will give better predictions of; molecular properties. C2H4 is not a classic ""symmetry breaking molecule"" to my knowledge, so I'm; surprised that there is a symmetry-breaking solution to the SCF equations. On Tue, Dec 5, 2017 at 3:11 PM, Daniel Smith <notifications@github.com>; wrote:. > I believe we have had this problem in the past. Take a symmetric molecule; > who's optimal wavefunction should contain less symmetry:; >; > import numpy as np; >; > mol = psi4.geometry("""""" 0 1C 0.0 0.0 0.673055C 0.0 0.0 -0.673055H 0.0 0.934981 1.246807H 0.0 -0.934981 1.246807H 0.934981 0.0 -1.246807H -0.934981 0.0 -1.246807symmetry c1""""""); > # Set reference and guess.; > psi4.set_options({; > ""reference"": ""rhf"",; > ""guess"": ""sad"",; > ""basis"": ""DZP"",; > ""soscf"": ""true"",# ""sad_frac_occ"": ""true""; > }); >; > energy = energy('scf')if np.allclose(energy, -77.87781349420317):; > print(""Found non-symmetric minima! Success!"")elif np.allclose(energy, -77.84789770426966):; > print(""Found symmetric minima... failure."")else:; > print(""You found something... wrong.""); >; > The -77.847 result should be found when the molecule is constrained to; > symmetry. However, without that constraint there is a lower SCF result to; > be found. The kicker is even without the symmetry restraint (computation in; > c1) we fairly consistently end up with a symmetric wavefunction. Any; > ideas on how to avoid this?; >; > Note 1: The stability analysis is showing that it is indeed finding the; > wrong answer and there are negative eigenvalues present. We should be able; > to follow these once the py-scf iterations are finished.; >; > Note 2: This is not deterministic for which result we land in (whoo!).; >; > Note 3: Moving an atom out of place by 1e-14 or so seems to ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/875#issuecomment-349464469
https://github.com/psi4/psi4/issues/875#issuecomment-349464469:1597,Energy Efficiency,energy,energy,1597,"; papers on this topic (I've made a couple contributions, also). In most applications, generally the high symmetry wavefunction is the one; that is actually desired, although it depends on the situation whether the; symmetric or non-symmetric solutions will give better predictions of; molecular properties. C2H4 is not a classic ""symmetry breaking molecule"" to my knowledge, so I'm; surprised that there is a symmetry-breaking solution to the SCF equations. On Tue, Dec 5, 2017 at 3:11 PM, Daniel Smith <notifications@github.com>; wrote:. > I believe we have had this problem in the past. Take a symmetric molecule; > who's optimal wavefunction should contain less symmetry:; >; > import numpy as np; >; > mol = psi4.geometry("""""" 0 1C 0.0 0.0 0.673055C 0.0 0.0 -0.673055H 0.0 0.934981 1.246807H 0.0 -0.934981 1.246807H 0.934981 0.0 -1.246807H -0.934981 0.0 -1.246807symmetry c1""""""); > # Set reference and guess.; > psi4.set_options({; > ""reference"": ""rhf"",; > ""guess"": ""sad"",; > ""basis"": ""DZP"",; > ""soscf"": ""true"",# ""sad_frac_occ"": ""true""; > }); >; > energy = energy('scf')if np.allclose(energy, -77.87781349420317):; > print(""Found non-symmetric minima! Success!"")elif np.allclose(energy, -77.84789770426966):; > print(""Found symmetric minima... failure."")else:; > print(""You found something... wrong.""); >; > The -77.847 result should be found when the molecule is constrained to; > symmetry. However, without that constraint there is a lower SCF result to; > be found. The kicker is even without the symmetry restraint (computation in; > c1) we fairly consistently end up with a symmetric wavefunction. Any; > ideas on how to avoid this?; >; > Note 1: The stability analysis is showing that it is indeed finding the; > wrong answer and there are negative eigenvalues present. We should be able; > to follow these once the py-scf iterations are finished.; >; > Note 2: This is not deterministic for which result we land in (whoo!).; >; > Note 3: Moving an atom out of place by 1e-14 or so seems to ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/875#issuecomment-349464469
https://github.com/psi4/psi4/issues/875#issuecomment-349464469:1625,Energy Efficiency,energy,energy,1625,"erally the high symmetry wavefunction is the one; that is actually desired, although it depends on the situation whether the; symmetric or non-symmetric solutions will give better predictions of; molecular properties. C2H4 is not a classic ""symmetry breaking molecule"" to my knowledge, so I'm; surprised that there is a symmetry-breaking solution to the SCF equations. On Tue, Dec 5, 2017 at 3:11 PM, Daniel Smith <notifications@github.com>; wrote:. > I believe we have had this problem in the past. Take a symmetric molecule; > who's optimal wavefunction should contain less symmetry:; >; > import numpy as np; >; > mol = psi4.geometry("""""" 0 1C 0.0 0.0 0.673055C 0.0 0.0 -0.673055H 0.0 0.934981 1.246807H 0.0 -0.934981 1.246807H 0.934981 0.0 -1.246807H -0.934981 0.0 -1.246807symmetry c1""""""); > # Set reference and guess.; > psi4.set_options({; > ""reference"": ""rhf"",; > ""guess"": ""sad"",; > ""basis"": ""DZP"",; > ""soscf"": ""true"",# ""sad_frac_occ"": ""true""; > }); >; > energy = energy('scf')if np.allclose(energy, -77.87781349420317):; > print(""Found non-symmetric minima! Success!"")elif np.allclose(energy, -77.84789770426966):; > print(""Found symmetric minima... failure."")else:; > print(""You found something... wrong.""); >; > The -77.847 result should be found when the molecule is constrained to; > symmetry. However, without that constraint there is a lower SCF result to; > be found. The kicker is even without the symmetry restraint (computation in; > c1) we fairly consistently end up with a symmetric wavefunction. Any; > ideas on how to avoid this?; >; > Note 1: The stability analysis is showing that it is indeed finding the; > wrong answer and there are negative eigenvalues present. We should be able; > to follow these once the py-scf iterations are finished.; >; > Note 2: This is not deterministic for which result we land in (whoo!).; >; > Note 3: Moving an atom out of place by 1e-14 or so seems to ensure we find; > the correct energy. Really any noise lets the diagonalizer break out of ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/875#issuecomment-349464469
https://github.com/psi4/psi4/issues/875#issuecomment-349464469:1719,Energy Efficiency,energy,energy,1719,"s on the situation whether the; symmetric or non-symmetric solutions will give better predictions of; molecular properties. C2H4 is not a classic ""symmetry breaking molecule"" to my knowledge, so I'm; surprised that there is a symmetry-breaking solution to the SCF equations. On Tue, Dec 5, 2017 at 3:11 PM, Daniel Smith <notifications@github.com>; wrote:. > I believe we have had this problem in the past. Take a symmetric molecule; > who's optimal wavefunction should contain less symmetry:; >; > import numpy as np; >; > mol = psi4.geometry("""""" 0 1C 0.0 0.0 0.673055C 0.0 0.0 -0.673055H 0.0 0.934981 1.246807H 0.0 -0.934981 1.246807H 0.934981 0.0 -1.246807H -0.934981 0.0 -1.246807symmetry c1""""""); > # Set reference and guess.; > psi4.set_options({; > ""reference"": ""rhf"",; > ""guess"": ""sad"",; > ""basis"": ""DZP"",; > ""soscf"": ""true"",# ""sad_frac_occ"": ""true""; > }); >; > energy = energy('scf')if np.allclose(energy, -77.87781349420317):; > print(""Found non-symmetric minima! Success!"")elif np.allclose(energy, -77.84789770426966):; > print(""Found symmetric minima... failure."")else:; > print(""You found something... wrong.""); >; > The -77.847 result should be found when the molecule is constrained to; > symmetry. However, without that constraint there is a lower SCF result to; > be found. The kicker is even without the symmetry restraint (computation in; > c1) we fairly consistently end up with a symmetric wavefunction. Any; > ideas on how to avoid this?; >; > Note 1: The stability analysis is showing that it is indeed finding the; > wrong answer and there are negative eigenvalues present. We should be able; > to follow these once the py-scf iterations are finished.; >; > Note 2: This is not deterministic for which result we land in (whoo!).; >; > Note 3: Moving an atom out of place by 1e-14 or so seems to ensure we find; > the correct energy. Really any noise lets the diagonalizer break out of its; > self-imposed symmetry constraints.; >; > —; > You are receiving this because you are su",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/875#issuecomment-349464469
https://github.com/psi4/psi4/issues/875#issuecomment-349464469:2567,Energy Efficiency,energy,energy,2567,"he SCF equations. On Tue, Dec 5, 2017 at 3:11 PM, Daniel Smith <notifications@github.com>; wrote:. > I believe we have had this problem in the past. Take a symmetric molecule; > who's optimal wavefunction should contain less symmetry:; >; > import numpy as np; >; > mol = psi4.geometry("""""" 0 1C 0.0 0.0 0.673055C 0.0 0.0 -0.673055H 0.0 0.934981 1.246807H 0.0 -0.934981 1.246807H 0.934981 0.0 -1.246807H -0.934981 0.0 -1.246807symmetry c1""""""); > # Set reference and guess.; > psi4.set_options({; > ""reference"": ""rhf"",; > ""guess"": ""sad"",; > ""basis"": ""DZP"",; > ""soscf"": ""true"",# ""sad_frac_occ"": ""true""; > }); >; > energy = energy('scf')if np.allclose(energy, -77.87781349420317):; > print(""Found non-symmetric minima! Success!"")elif np.allclose(energy, -77.84789770426966):; > print(""Found symmetric minima... failure."")else:; > print(""You found something... wrong.""); >; > The -77.847 result should be found when the molecule is constrained to; > symmetry. However, without that constraint there is a lower SCF result to; > be found. The kicker is even without the symmetry restraint (computation in; > c1) we fairly consistently end up with a symmetric wavefunction. Any; > ideas on how to avoid this?; >; > Note 1: The stability analysis is showing that it is indeed finding the; > wrong answer and there are negative eigenvalues present. We should be able; > to follow these once the py-scf iterations are finished.; >; > Note 2: This is not deterministic for which result we land in (whoo!).; >; > Note 3: Moving an atom out of place by 1e-14 or so seems to ensure we find; > the correct energy. Really any noise lets the diagonalizer break out of its; > self-imposed symmetry constraints.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/875>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AC9QdlmJNWz39F1kSptiR8vFq7913CBnks5s9aN8gaJpZM4Q25IB>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/875#issuecomment-349464469
https://github.com/psi4/psi4/issues/875#issuecomment-349464469:714,Integrability,depend,depends,714,"It's a feature not a bug?. Symmetric molecules are supposed to have symmetric wavefunctions (because; the Hamiltonian commutes with the symmetry operators). Certainly, the; exact wavefunction does has the full point group symmetry. Occasionally,; approximate QM methods can have lower-energy non-symmetric solutions.; Anytime the wavefunction has a lower symmetry than the molecule, this is; usually considered a bad thing and is often called ""artifactual (spatial); symmetry breaking."" Wes Allen and Daniel Crawford have some excellent; papers on this topic (I've made a couple contributions, also). In most applications, generally the high symmetry wavefunction is the one; that is actually desired, although it depends on the situation whether the; symmetric or non-symmetric solutions will give better predictions of; molecular properties. C2H4 is not a classic ""symmetry breaking molecule"" to my knowledge, so I'm; surprised that there is a symmetry-breaking solution to the SCF equations. On Tue, Dec 5, 2017 at 3:11 PM, Daniel Smith <notifications@github.com>; wrote:. > I believe we have had this problem in the past. Take a symmetric molecule; > who's optimal wavefunction should contain less symmetry:; >; > import numpy as np; >; > mol = psi4.geometry("""""" 0 1C 0.0 0.0 0.673055C 0.0 0.0 -0.673055H 0.0 0.934981 1.246807H 0.0 -0.934981 1.246807H 0.934981 0.0 -1.246807H -0.934981 0.0 -1.246807symmetry c1""""""); > # Set reference and guess.; > psi4.set_options({; > ""reference"": ""rhf"",; > ""guess"": ""sad"",; > ""basis"": ""DZP"",; > ""soscf"": ""true"",# ""sad_frac_occ"": ""true""; > }); >; > energy = energy('scf')if np.allclose(energy, -77.87781349420317):; > print(""Found non-symmetric minima! Success!"")elif np.allclose(energy, -77.84789770426966):; > print(""Found symmetric minima... failure."")else:; > print(""You found something... wrong.""); >; > The -77.847 result should be found when the molecule is constrained to; > symmetry. However, without that constraint there is a lower SCF result to; > be",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/875#issuecomment-349464469
https://github.com/psi4/psi4/issues/875#issuecomment-349464469:806,Safety,predict,predictions,806,"It's a feature not a bug?. Symmetric molecules are supposed to have symmetric wavefunctions (because; the Hamiltonian commutes with the symmetry operators). Certainly, the; exact wavefunction does has the full point group symmetry. Occasionally,; approximate QM methods can have lower-energy non-symmetric solutions.; Anytime the wavefunction has a lower symmetry than the molecule, this is; usually considered a bad thing and is often called ""artifactual (spatial); symmetry breaking."" Wes Allen and Daniel Crawford have some excellent; papers on this topic (I've made a couple contributions, also). In most applications, generally the high symmetry wavefunction is the one; that is actually desired, although it depends on the situation whether the; symmetric or non-symmetric solutions will give better predictions of; molecular properties. C2H4 is not a classic ""symmetry breaking molecule"" to my knowledge, so I'm; surprised that there is a symmetry-breaking solution to the SCF equations. On Tue, Dec 5, 2017 at 3:11 PM, Daniel Smith <notifications@github.com>; wrote:. > I believe we have had this problem in the past. Take a symmetric molecule; > who's optimal wavefunction should contain less symmetry:; >; > import numpy as np; >; > mol = psi4.geometry("""""" 0 1C 0.0 0.0 0.673055C 0.0 0.0 -0.673055H 0.0 0.934981 1.246807H 0.0 -0.934981 1.246807H 0.934981 0.0 -1.246807H -0.934981 0.0 -1.246807symmetry c1""""""); > # Set reference and guess.; > psi4.set_options({; > ""reference"": ""rhf"",; > ""guess"": ""sad"",; > ""basis"": ""DZP"",; > ""soscf"": ""true"",# ""sad_frac_occ"": ""true""; > }); >; > energy = energy('scf')if np.allclose(energy, -77.87781349420317):; > print(""Found non-symmetric minima! Success!"")elif np.allclose(energy, -77.84789770426966):; > print(""Found symmetric minima... failure."")else:; > print(""You found something... wrong.""); >; > The -77.847 result should be found when the molecule is constrained to; > symmetry. However, without that constraint there is a lower SCF result to; > be",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/875#issuecomment-349464469
https://github.com/psi4/psi4/issues/875#issuecomment-349464469:2166,Safety,avoid,avoid,2166,"he SCF equations. On Tue, Dec 5, 2017 at 3:11 PM, Daniel Smith <notifications@github.com>; wrote:. > I believe we have had this problem in the past. Take a symmetric molecule; > who's optimal wavefunction should contain less symmetry:; >; > import numpy as np; >; > mol = psi4.geometry("""""" 0 1C 0.0 0.0 0.673055C 0.0 0.0 -0.673055H 0.0 0.934981 1.246807H 0.0 -0.934981 1.246807H 0.934981 0.0 -1.246807H -0.934981 0.0 -1.246807symmetry c1""""""); > # Set reference and guess.; > psi4.set_options({; > ""reference"": ""rhf"",; > ""guess"": ""sad"",; > ""basis"": ""DZP"",; > ""soscf"": ""true"",# ""sad_frac_occ"": ""true""; > }); >; > energy = energy('scf')if np.allclose(energy, -77.87781349420317):; > print(""Found non-symmetric minima! Success!"")elif np.allclose(energy, -77.84789770426966):; > print(""Found symmetric minima... failure."")else:; > print(""You found something... wrong.""); >; > The -77.847 result should be found when the molecule is constrained to; > symmetry. However, without that constraint there is a lower SCF result to; > be found. The kicker is even without the symmetry restraint (computation in; > c1) we fairly consistently end up with a symmetric wavefunction. Any; > ideas on how to avoid this?; >; > Note 1: The stability analysis is showing that it is indeed finding the; > wrong answer and there are negative eigenvalues present. We should be able; > to follow these once the py-scf iterations are finished.; >; > Note 2: This is not deterministic for which result we land in (whoo!).; >; > Note 3: Moving an atom out of place by 1e-14 or so seems to ensure we find; > the correct energy. Really any noise lets the diagonalizer break out of its; > self-imposed symmetry constraints.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/875>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AC9QdlmJNWz39F1kSptiR8vFq7913CBnks5s9aN8gaJpZM4Q25IB>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/875#issuecomment-349464469
https://github.com/psi4/psi4/issues/875#issuecomment-349491583:44,Security,access,accessing,44,"FYI, @wadejong. Are you more concerned with accessing the symmetry-broken sol'n (perhaps through geometry tweaks or stability analysis) or with it being the default sol'n?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/875#issuecomment-349491583
https://github.com/psi4/psi4/issues/875#issuecomment-349492637:315,Energy Efficiency,energy,energy,315,"Communicating with Daniel, the challenge is that the solver somehow was sticking to a symmetry solution inherent in the molecule, this while a no symmetry solution was requested. I would expect a symmetry broken solution if I tell the calculation to assume a symmetry lower than possible (assuming there is a lower energy solution in the symmetry broken case). > On Dec 5, 2017, at 4:46 PM, Lori A. Burns <notifications@github.com> wrote:; > ; > FYI, @wadejong. Are you more concerned with accessing the symmetry-broken sol'n (perhaps through geometry tweaks or stability analysis) or with it being the default sol'n?; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/875#issuecomment-349492637
https://github.com/psi4/psi4/issues/875#issuecomment-349492637:490,Security,access,accessing,490,"Communicating with Daniel, the challenge is that the solver somehow was sticking to a symmetry solution inherent in the molecule, this while a no symmetry solution was requested. I would expect a symmetry broken solution if I tell the calculation to assume a symmetry lower than possible (assuming there is a lower energy solution in the symmetry broken case). > On Dec 5, 2017, at 4:46 PM, Lori A. Burns <notifications@github.com> wrote:; > ; > FYI, @wadejong. Are you more concerned with accessing the symmetry-broken sol'n (perhaps through geometry tweaks or stability analysis) or with it being the default sol'n?; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/875#issuecomment-349492637
https://github.com/psi4/psi4/issues/875#issuecomment-349516046:1176,Energy Efficiency,energy,energy,1176,"@wadejong, the trick is that some of our codes can't handle symmetry, so; frequently users ask for C1 even though they really don't mean it, due to; parts of the code being C1 only (although maybe some recent code I added; fixes this?). Most of these users will want the symmetric solution because; it tends to be more free of unphysical values for properties like; vibrational frequencies. The situation is analogous to running a closed shell molecule with UHF. It; will always give the RHF solution, not a UHF solution, unless the user; intervenes and deliberately breaks the alpha / beta symmetry that is; naturally there. Some programs have special keywords to do this. Or do; you automatically mix alpha and beta in NWChem when a user asks for UHF on; a closed shell molecule?. On Dec 5, 2017 7:52 PM, ""Bert de Jong"" <notifications@github.com> wrote:. Communicating with Daniel, the challenge is that the solver somehow was; sticking to a symmetry solution inherent in the molecule, this while a no; symmetry solution was requested. I would expect a symmetry broken solution; if I tell the calculation to assume a symmetry lower than possible; (assuming there is a lower energy solution in the symmetry broken case). > On Dec 5, 2017, at 4:46 PM, Lori A. Burns <notifications@github.com>; wrote:; >; > FYI, @wadejong. Are you more concerned with accessing the symmetry-broken; sol'n (perhaps through geometry tweaks or stability analysis) or with it; being the default sol'n?; >; > —; > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or mute the thread.; >. —; You are receiving this because you commented. Reply to this email directly, view it on GitHub; <https://github.com/psi4/psi4/issues/875#issuecomment-349492637>, or mute; the thread; <https://github.com/notifications/unsubscribe-auth/AC9Qdkqkvy84OvbrJRm6E6z73AM6ZWBXks5s9eU_gaJpZM4Q25IB>; .",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/875#issuecomment-349516046
https://github.com/psi4/psi4/issues/875#issuecomment-349516046:1351,Security,access,accessing,1351,"@wadejong, the trick is that some of our codes can't handle symmetry, so; frequently users ask for C1 even though they really don't mean it, due to; parts of the code being C1 only (although maybe some recent code I added; fixes this?). Most of these users will want the symmetric solution because; it tends to be more free of unphysical values for properties like; vibrational frequencies. The situation is analogous to running a closed shell molecule with UHF. It; will always give the RHF solution, not a UHF solution, unless the user; intervenes and deliberately breaks the alpha / beta symmetry that is; naturally there. Some programs have special keywords to do this. Or do; you automatically mix alpha and beta in NWChem when a user asks for UHF on; a closed shell molecule?. On Dec 5, 2017 7:52 PM, ""Bert de Jong"" <notifications@github.com> wrote:. Communicating with Daniel, the challenge is that the solver somehow was; sticking to a symmetry solution inherent in the molecule, this while a no; symmetry solution was requested. I would expect a symmetry broken solution; if I tell the calculation to assume a symmetry lower than possible; (assuming there is a lower energy solution in the symmetry broken case). > On Dec 5, 2017, at 4:46 PM, Lori A. Burns <notifications@github.com>; wrote:; >; > FYI, @wadejong. Are you more concerned with accessing the symmetry-broken; sol'n (perhaps through geometry tweaks or stability analysis) or with it; being the default sol'n?; >; > —; > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or mute the thread.; >. —; You are receiving this because you commented. Reply to this email directly, view it on GitHub; <https://github.com/psi4/psi4/issues/875#issuecomment-349492637>, or mute; the thread; <https://github.com/notifications/unsubscribe-auth/AC9Qdkqkvy84OvbrJRm6E6z73AM6ZWBXks5s9eU_gaJpZM4Q25IB>; .",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/875#issuecomment-349516046
https://github.com/psi4/psi4/issues/875#issuecomment-349531240:197,Testability,test,tests,197,"Symmetry affects the rotational_symmetry_number in thermochem. But you're right, on second thought the way for users to influence the rsn is [via option](https://github.com/loriab/psi4/blob/pyvib2/tests/freq-isotope2/input.dat#L77) not Molecule symmetry.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/875#issuecomment-349531240
https://github.com/psi4/psi4/issues/875#issuecomment-349553820:172,Safety,avoid,avoid,172,"I always get the non-sym solution with the given input, but I should not (technically) ?. Isnt the MOM procedure meant to calculate non-ground state SCF solutions? Does it avoid breaking the symmetry? The given twisted ethylene here is triplet?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/875#issuecomment-349553820
https://github.com/psi4/psi4/issues/875#issuecomment-349728151:15,Integrability,depend,depend,15,"@hokru It will depend quite a bit on your eigensolver. MKL seem pretty stable, your milage may vary. @CDSherrill I think your latest work will fix most of the SCF `c1` symmetry issues as SCF is now always run with symmetry and then cast to `c1`. What I really dont like about this is that it's non-deterministic. You can wind up in either minima with no real control over which you land in. Some proposals is something like `scf_density_shake 0.0` where we add a bit of noise to the density to knock it out of any starting symmetry.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/875#issuecomment-349728151
https://github.com/psi4/psi4/issues/875#issuecomment-349737355:661,Energy Efficiency,charge,charges,661,"@hokru Mathematically speaking, you should never get a non-symmetric solution. But, as @dgasmith says, it depends on the math library, whether or not there is tiny numerical noise introduced, etc. Since the computer uses finite precision arithmetic, there is always a chance that noise messes up things. . I investigated this case a little today, since it captured my interest. What's going on is actually even more tricky than has been suggested so far. Normally, we don't like these symmetry-breaking solutions because they do bad things, like give unphysical dipole moments. For example, the symmetry-breaking UHF solution for NO3 radical gives very unequal charges for the O atoms [-0.0867 -0.3789 -0.3789] compared to the symmetric UHF solution [-0.2990 -0.2990 -0.2990]. I think most people would agree the asymmetric solution is just wrong, even though it has a lower energy [-278.774 819 vs -278.757 840] (https://doi.org/10.1016/S0009-2614(99)00206-7). . So, I looked at this 90 degrees twisted C2H4 example, expecting the lower-energy symmetry-broken solution to give an unphysical dipole moment. What I found surprised me. The problem here is that the ""symmetric solution"" that we've been discussing is actually a symmetry-broken solution. At 90 degrees, the true symmetry of the molecule is D2d. Since this is a non-Abelian group, Psi4 (and most codes) can't run it as D2d, so it gets run in a subgroup. Here, there are 2 choices for subgroups, C2v and D2. Psi4 picks C2v, very unfortunately, and in that subgroup, it finds a wavefunction that is very symmetry broken (compared to the full symmetry D2d), and it gets a really large, totally unphysical dipole moment of 3.2 debye. . I haven't yet managed to convince Psi4 that D2 is an acceptable subgroup at the 90 degrees geometry, but if I set the torsion angle to just off of 90 degrees (say, 89.9 deg), the code correctly detects D2 symmetry, and gets a much lower energy solution of -77.87817, which is the same one Daniel and Bert ar",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/875#issuecomment-349737355
https://github.com/psi4/psi4/issues/875#issuecomment-349737355:875,Energy Efficiency,energy,energy,875,"@hokru Mathematically speaking, you should never get a non-symmetric solution. But, as @dgasmith says, it depends on the math library, whether or not there is tiny numerical noise introduced, etc. Since the computer uses finite precision arithmetic, there is always a chance that noise messes up things. . I investigated this case a little today, since it captured my interest. What's going on is actually even more tricky than has been suggested so far. Normally, we don't like these symmetry-breaking solutions because they do bad things, like give unphysical dipole moments. For example, the symmetry-breaking UHF solution for NO3 radical gives very unequal charges for the O atoms [-0.0867 -0.3789 -0.3789] compared to the symmetric UHF solution [-0.2990 -0.2990 -0.2990]. I think most people would agree the asymmetric solution is just wrong, even though it has a lower energy [-278.774 819 vs -278.757 840] (https://doi.org/10.1016/S0009-2614(99)00206-7). . So, I looked at this 90 degrees twisted C2H4 example, expecting the lower-energy symmetry-broken solution to give an unphysical dipole moment. What I found surprised me. The problem here is that the ""symmetric solution"" that we've been discussing is actually a symmetry-broken solution. At 90 degrees, the true symmetry of the molecule is D2d. Since this is a non-Abelian group, Psi4 (and most codes) can't run it as D2d, so it gets run in a subgroup. Here, there are 2 choices for subgroups, C2v and D2. Psi4 picks C2v, very unfortunately, and in that subgroup, it finds a wavefunction that is very symmetry broken (compared to the full symmetry D2d), and it gets a really large, totally unphysical dipole moment of 3.2 debye. . I haven't yet managed to convince Psi4 that D2 is an acceptable subgroup at the 90 degrees geometry, but if I set the torsion angle to just off of 90 degrees (say, 89.9 deg), the code correctly detects D2 symmetry, and gets a much lower energy solution of -77.87817, which is the same one Daniel and Bert ar",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/875#issuecomment-349737355
https://github.com/psi4/psi4/issues/875#issuecomment-349737355:1038,Energy Efficiency,energy,energy,1038,"u should never get a non-symmetric solution. But, as @dgasmith says, it depends on the math library, whether or not there is tiny numerical noise introduced, etc. Since the computer uses finite precision arithmetic, there is always a chance that noise messes up things. . I investigated this case a little today, since it captured my interest. What's going on is actually even more tricky than has been suggested so far. Normally, we don't like these symmetry-breaking solutions because they do bad things, like give unphysical dipole moments. For example, the symmetry-breaking UHF solution for NO3 radical gives very unequal charges for the O atoms [-0.0867 -0.3789 -0.3789] compared to the symmetric UHF solution [-0.2990 -0.2990 -0.2990]. I think most people would agree the asymmetric solution is just wrong, even though it has a lower energy [-278.774 819 vs -278.757 840] (https://doi.org/10.1016/S0009-2614(99)00206-7). . So, I looked at this 90 degrees twisted C2H4 example, expecting the lower-energy symmetry-broken solution to give an unphysical dipole moment. What I found surprised me. The problem here is that the ""symmetric solution"" that we've been discussing is actually a symmetry-broken solution. At 90 degrees, the true symmetry of the molecule is D2d. Since this is a non-Abelian group, Psi4 (and most codes) can't run it as D2d, so it gets run in a subgroup. Here, there are 2 choices for subgroups, C2v and D2. Psi4 picks C2v, very unfortunately, and in that subgroup, it finds a wavefunction that is very symmetry broken (compared to the full symmetry D2d), and it gets a really large, totally unphysical dipole moment of 3.2 debye. . I haven't yet managed to convince Psi4 that D2 is an acceptable subgroup at the 90 degrees geometry, but if I set the torsion angle to just off of 90 degrees (say, 89.9 deg), the code correctly detects D2 symmetry, and gets a much lower energy solution of -77.87817, which is the same one Daniel and Bert are finding for their computations t",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/875#issuecomment-349737355
https://github.com/psi4/psi4/issues/875#issuecomment-349737355:1931,Energy Efficiency,energy,energy,1931," 840] (https://doi.org/10.1016/S0009-2614(99)00206-7). . So, I looked at this 90 degrees twisted C2H4 example, expecting the lower-energy symmetry-broken solution to give an unphysical dipole moment. What I found surprised me. The problem here is that the ""symmetric solution"" that we've been discussing is actually a symmetry-broken solution. At 90 degrees, the true symmetry of the molecule is D2d. Since this is a non-Abelian group, Psi4 (and most codes) can't run it as D2d, so it gets run in a subgroup. Here, there are 2 choices for subgroups, C2v and D2. Psi4 picks C2v, very unfortunately, and in that subgroup, it finds a wavefunction that is very symmetry broken (compared to the full symmetry D2d), and it gets a really large, totally unphysical dipole moment of 3.2 debye. . I haven't yet managed to convince Psi4 that D2 is an acceptable subgroup at the 90 degrees geometry, but if I set the torsion angle to just off of 90 degrees (say, 89.9 deg), the code correctly detects D2 symmetry, and gets a much lower energy solution of -77.87817, which is the same one Daniel and Bert are finding for their computations that turn symmetry off (difference is because of my slightly perturbed geometry). And the dipole moment is pleasantly 0.000 debye, like it's supposed to be. . So, you guys are actually finding a symmetric solution when you use C1 (which is what's supposed to happen), and it's the correct-symmetry solution, unlike the C2v solution that Psi4 is falling into at this geometry. I take some small consolation in the fact that Q-Chem also finds the same C2v solution at 90 degrees, in my quick tests (with or without symmetry turned on). I don't know of a general strategy to teach Psi4 that D2 is a better choice in this case than C2v, because both are legitimate subgroups. And I don't think the idea of running everything in C1 is necessarily a good idea either, since then one is opened up to the possibility of getting unphysical symmetry breaking solutions like in the cas",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/875#issuecomment-349737355
https://github.com/psi4/psi4/issues/875#issuecomment-349737355:106,Integrability,depend,depends,106,"@hokru Mathematically speaking, you should never get a non-symmetric solution. But, as @dgasmith says, it depends on the math library, whether or not there is tiny numerical noise introduced, etc. Since the computer uses finite precision arithmetic, there is always a chance that noise messes up things. . I investigated this case a little today, since it captured my interest. What's going on is actually even more tricky than has been suggested so far. Normally, we don't like these symmetry-breaking solutions because they do bad things, like give unphysical dipole moments. For example, the symmetry-breaking UHF solution for NO3 radical gives very unequal charges for the O atoms [-0.0867 -0.3789 -0.3789] compared to the symmetric UHF solution [-0.2990 -0.2990 -0.2990]. I think most people would agree the asymmetric solution is just wrong, even though it has a lower energy [-278.774 819 vs -278.757 840] (https://doi.org/10.1016/S0009-2614(99)00206-7). . So, I looked at this 90 degrees twisted C2H4 example, expecting the lower-energy symmetry-broken solution to give an unphysical dipole moment. What I found surprised me. The problem here is that the ""symmetric solution"" that we've been discussing is actually a symmetry-broken solution. At 90 degrees, the true symmetry of the molecule is D2d. Since this is a non-Abelian group, Psi4 (and most codes) can't run it as D2d, so it gets run in a subgroup. Here, there are 2 choices for subgroups, C2v and D2. Psi4 picks C2v, very unfortunately, and in that subgroup, it finds a wavefunction that is very symmetry broken (compared to the full symmetry D2d), and it gets a really large, totally unphysical dipole moment of 3.2 debye. . I haven't yet managed to convince Psi4 that D2 is an acceptable subgroup at the 90 degrees geometry, but if I set the torsion angle to just off of 90 degrees (say, 89.9 deg), the code correctly detects D2 symmetry, and gets a much lower energy solution of -77.87817, which is the same one Daniel and Bert ar",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/875#issuecomment-349737355
https://github.com/psi4/psi4/issues/875#issuecomment-349737355:3180,Integrability,depend,depending,3180,"etry-broken solution. At 90 degrees, the true symmetry of the molecule is D2d. Since this is a non-Abelian group, Psi4 (and most codes) can't run it as D2d, so it gets run in a subgroup. Here, there are 2 choices for subgroups, C2v and D2. Psi4 picks C2v, very unfortunately, and in that subgroup, it finds a wavefunction that is very symmetry broken (compared to the full symmetry D2d), and it gets a really large, totally unphysical dipole moment of 3.2 debye. . I haven't yet managed to convince Psi4 that D2 is an acceptable subgroup at the 90 degrees geometry, but if I set the torsion angle to just off of 90 degrees (say, 89.9 deg), the code correctly detects D2 symmetry, and gets a much lower energy solution of -77.87817, which is the same one Daniel and Bert are finding for their computations that turn symmetry off (difference is because of my slightly perturbed geometry). And the dipole moment is pleasantly 0.000 debye, like it's supposed to be. . So, you guys are actually finding a symmetric solution when you use C1 (which is what's supposed to happen), and it's the correct-symmetry solution, unlike the C2v solution that Psi4 is falling into at this geometry. I take some small consolation in the fact that Q-Chem also finds the same C2v solution at 90 degrees, in my quick tests (with or without symmetry turned on). I don't know of a general strategy to teach Psi4 that D2 is a better choice in this case than C2v, because both are legitimate subgroups. And I don't think the idea of running everything in C1 is necessarily a good idea either, since then one is opened up to the possibility of getting unphysical symmetry breaking solutions like in the case of NO3. But, in this case, using symmetry also got us an unphysical symmetry-broken solution because we used the wrong point group. So, I'm not sure of a general strategy for all this, although I share the concern of @dgasmith that the behavior can be non-deterministic depending on small details that shouldn't matter.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/875#issuecomment-349737355
https://github.com/psi4/psi4/issues/875#issuecomment-349737355:1888,Safety,detect,detects,1888," 840] (https://doi.org/10.1016/S0009-2614(99)00206-7). . So, I looked at this 90 degrees twisted C2H4 example, expecting the lower-energy symmetry-broken solution to give an unphysical dipole moment. What I found surprised me. The problem here is that the ""symmetric solution"" that we've been discussing is actually a symmetry-broken solution. At 90 degrees, the true symmetry of the molecule is D2d. Since this is a non-Abelian group, Psi4 (and most codes) can't run it as D2d, so it gets run in a subgroup. Here, there are 2 choices for subgroups, C2v and D2. Psi4 picks C2v, very unfortunately, and in that subgroup, it finds a wavefunction that is very symmetry broken (compared to the full symmetry D2d), and it gets a really large, totally unphysical dipole moment of 3.2 debye. . I haven't yet managed to convince Psi4 that D2 is an acceptable subgroup at the 90 degrees geometry, but if I set the torsion angle to just off of 90 degrees (say, 89.9 deg), the code correctly detects D2 symmetry, and gets a much lower energy solution of -77.87817, which is the same one Daniel and Bert are finding for their computations that turn symmetry off (difference is because of my slightly perturbed geometry). And the dipole moment is pleasantly 0.000 debye, like it's supposed to be. . So, you guys are actually finding a symmetric solution when you use C1 (which is what's supposed to happen), and it's the correct-symmetry solution, unlike the C2v solution that Psi4 is falling into at this geometry. I take some small consolation in the fact that Q-Chem also finds the same C2v solution at 90 degrees, in my quick tests (with or without symmetry turned on). I don't know of a general strategy to teach Psi4 that D2 is a better choice in this case than C2v, because both are legitimate subgroups. And I don't think the idea of running everything in C1 is necessarily a good idea either, since then one is opened up to the possibility of getting unphysical symmetry breaking solutions like in the cas",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/875#issuecomment-349737355
https://github.com/psi4/psi4/issues/875#issuecomment-349737355:2524,Testability,test,tests,2524,"etry-broken solution. At 90 degrees, the true symmetry of the molecule is D2d. Since this is a non-Abelian group, Psi4 (and most codes) can't run it as D2d, so it gets run in a subgroup. Here, there are 2 choices for subgroups, C2v and D2. Psi4 picks C2v, very unfortunately, and in that subgroup, it finds a wavefunction that is very symmetry broken (compared to the full symmetry D2d), and it gets a really large, totally unphysical dipole moment of 3.2 debye. . I haven't yet managed to convince Psi4 that D2 is an acceptable subgroup at the 90 degrees geometry, but if I set the torsion angle to just off of 90 degrees (say, 89.9 deg), the code correctly detects D2 symmetry, and gets a much lower energy solution of -77.87817, which is the same one Daniel and Bert are finding for their computations that turn symmetry off (difference is because of my slightly perturbed geometry). And the dipole moment is pleasantly 0.000 debye, like it's supposed to be. . So, you guys are actually finding a symmetric solution when you use C1 (which is what's supposed to happen), and it's the correct-symmetry solution, unlike the C2v solution that Psi4 is falling into at this geometry. I take some small consolation in the fact that Q-Chem also finds the same C2v solution at 90 degrees, in my quick tests (with or without symmetry turned on). I don't know of a general strategy to teach Psi4 that D2 is a better choice in this case than C2v, because both are legitimate subgroups. And I don't think the idea of running everything in C1 is necessarily a good idea either, since then one is opened up to the possibility of getting unphysical symmetry breaking solutions like in the case of NO3. But, in this case, using symmetry also got us an unphysical symmetry-broken solution because we used the wrong point group. So, I'm not sure of a general strategy for all this, although I share the concern of @dgasmith that the behavior can be non-deterministic depending on small details that shouldn't matter.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/875#issuecomment-349737355
https://github.com/psi4/psi4/issues/875#issuecomment-533548739:13,Availability,down,down,13,Closing this down for now. @wadejong Please open a new PR if you want a specific implementation to get around this issue such as introducing noise to the SCF guess.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/875#issuecomment-533548739
https://github.com/psi4/psi4/pull/877#issuecomment-349727550:22,Testability,test,test,22,"Thanks! Yes, a single test file will be fine (unless multiple is more convenient for you). Just make a dir in `/tests/`, copy in a `CMakeLists.txt` from another test and modify at least the name. Then add your new dir name to the long list in `/tests/CMakeLists.txt`. Model on any of the dft tests and feel free to check in output files from other programs into the test directory for future consultation. If you're trying to do anything that isn't obvious, just post. Are you on the slack channel?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/877#issuecomment-349727550
https://github.com/psi4/psi4/pull/877#issuecomment-349727550:112,Testability,test,tests,112,"Thanks! Yes, a single test file will be fine (unless multiple is more convenient for you). Just make a dir in `/tests/`, copy in a `CMakeLists.txt` from another test and modify at least the name. Then add your new dir name to the long list in `/tests/CMakeLists.txt`. Model on any of the dft tests and feel free to check in output files from other programs into the test directory for future consultation. If you're trying to do anything that isn't obvious, just post. Are you on the slack channel?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/877#issuecomment-349727550
https://github.com/psi4/psi4/pull/877#issuecomment-349727550:161,Testability,test,test,161,"Thanks! Yes, a single test file will be fine (unless multiple is more convenient for you). Just make a dir in `/tests/`, copy in a `CMakeLists.txt` from another test and modify at least the name. Then add your new dir name to the long list in `/tests/CMakeLists.txt`. Model on any of the dft tests and feel free to check in output files from other programs into the test directory for future consultation. If you're trying to do anything that isn't obvious, just post. Are you on the slack channel?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/877#issuecomment-349727550
https://github.com/psi4/psi4/pull/877#issuecomment-349727550:245,Testability,test,tests,245,"Thanks! Yes, a single test file will be fine (unless multiple is more convenient for you). Just make a dir in `/tests/`, copy in a `CMakeLists.txt` from another test and modify at least the name. Then add your new dir name to the long list in `/tests/CMakeLists.txt`. Model on any of the dft tests and feel free to check in output files from other programs into the test directory for future consultation. If you're trying to do anything that isn't obvious, just post. Are you on the slack channel?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/877#issuecomment-349727550
https://github.com/psi4/psi4/pull/877#issuecomment-349727550:292,Testability,test,tests,292,"Thanks! Yes, a single test file will be fine (unless multiple is more convenient for you). Just make a dir in `/tests/`, copy in a `CMakeLists.txt` from another test and modify at least the name. Then add your new dir name to the long list in `/tests/CMakeLists.txt`. Model on any of the dft tests and feel free to check in output files from other programs into the test directory for future consultation. If you're trying to do anything that isn't obvious, just post. Are you on the slack channel?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/877#issuecomment-349727550
https://github.com/psi4/psi4/pull/877#issuecomment-349727550:366,Testability,test,test,366,"Thanks! Yes, a single test file will be fine (unless multiple is more convenient for you). Just make a dir in `/tests/`, copy in a `CMakeLists.txt` from another test and modify at least the name. Then add your new dir name to the long list in `/tests/CMakeLists.txt`. Model on any of the dft tests and feel free to check in output files from other programs into the test directory for future consultation. If you're trying to do anything that isn't obvious, just post. Are you on the slack channel?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/877#issuecomment-349727550
https://github.com/psi4/psi4/pull/877#issuecomment-349731179:474,Security,access,access,474,I think what we need to do is organize the non-XC custom functionals into a series of tests like `tests/test-custom-gga` where all of the custom functionals that we build in `gga_superfuncs.py` should be there. Similar folders for hybrid/double hybrid. Right now its kind of scattered all over the place. If you could start your tests in that manner it would be very helpful. This could be a good project for a new-dev to clean up. @susilehtola One more example why we need access to parameters in LibXC.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/877#issuecomment-349731179
https://github.com/psi4/psi4/pull/877#issuecomment-349731179:86,Testability,test,tests,86,I think what we need to do is organize the non-XC custom functionals into a series of tests like `tests/test-custom-gga` where all of the custom functionals that we build in `gga_superfuncs.py` should be there. Similar folders for hybrid/double hybrid. Right now its kind of scattered all over the place. If you could start your tests in that manner it would be very helpful. This could be a good project for a new-dev to clean up. @susilehtola One more example why we need access to parameters in LibXC.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/877#issuecomment-349731179
https://github.com/psi4/psi4/pull/877#issuecomment-349731179:98,Testability,test,tests,98,I think what we need to do is organize the non-XC custom functionals into a series of tests like `tests/test-custom-gga` where all of the custom functionals that we build in `gga_superfuncs.py` should be there. Similar folders for hybrid/double hybrid. Right now its kind of scattered all over the place. If you could start your tests in that manner it would be very helpful. This could be a good project for a new-dev to clean up. @susilehtola One more example why we need access to parameters in LibXC.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/877#issuecomment-349731179
https://github.com/psi4/psi4/pull/877#issuecomment-349731179:104,Testability,test,test-custom-gga,104,I think what we need to do is organize the non-XC custom functionals into a series of tests like `tests/test-custom-gga` where all of the custom functionals that we build in `gga_superfuncs.py` should be there. Similar folders for hybrid/double hybrid. Right now its kind of scattered all over the place. If you could start your tests in that manner it would be very helpful. This could be a good project for a new-dev to clean up. @susilehtola One more example why we need access to parameters in LibXC.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/877#issuecomment-349731179
https://github.com/psi4/psi4/pull/877#issuecomment-349731179:329,Testability,test,tests,329,I think what we need to do is organize the non-XC custom functionals into a series of tests like `tests/test-custom-gga` where all of the custom functionals that we build in `gga_superfuncs.py` should be there. Similar folders for hybrid/double hybrid. Right now its kind of scattered all over the place. If you could start your tests in that manner it would be very helpful. This could be a good project for a new-dev to clean up. @susilehtola One more example why we need access to parameters in LibXC.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/877#issuecomment-349731179
https://github.com/psi4/psi4/pull/877#issuecomment-349732113:45,Testability,test,tests,45,Also @hokru you might want to check out the `tests/libxc` folder for a list of tests and see if your new functionals are present. We need to hook this up to long tests at some point as well. @bwb314 At some point you added many DFT LibXC tests against Q-Chem that missed the rebasing and was finally closed [here](https://github.com/dgasmith/psi4/pull/18). Do you still have these tests that we can add to Psi4?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/877#issuecomment-349732113
https://github.com/psi4/psi4/pull/877#issuecomment-349732113:79,Testability,test,tests,79,Also @hokru you might want to check out the `tests/libxc` folder for a list of tests and see if your new functionals are present. We need to hook this up to long tests at some point as well. @bwb314 At some point you added many DFT LibXC tests against Q-Chem that missed the rebasing and was finally closed [here](https://github.com/dgasmith/psi4/pull/18). Do you still have these tests that we can add to Psi4?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/877#issuecomment-349732113
https://github.com/psi4/psi4/pull/877#issuecomment-349732113:162,Testability,test,tests,162,Also @hokru you might want to check out the `tests/libxc` folder for a list of tests and see if your new functionals are present. We need to hook this up to long tests at some point as well. @bwb314 At some point you added many DFT LibXC tests against Q-Chem that missed the rebasing and was finally closed [here](https://github.com/dgasmith/psi4/pull/18). Do you still have these tests that we can add to Psi4?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/877#issuecomment-349732113
https://github.com/psi4/psi4/pull/877#issuecomment-349732113:238,Testability,test,tests,238,Also @hokru you might want to check out the `tests/libxc` folder for a list of tests and see if your new functionals are present. We need to hook this up to long tests at some point as well. @bwb314 At some point you added many DFT LibXC tests against Q-Chem that missed the rebasing and was finally closed [here](https://github.com/dgasmith/psi4/pull/18). Do you still have these tests that we can add to Psi4?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/877#issuecomment-349732113
https://github.com/psi4/psi4/pull/877#issuecomment-349732113:381,Testability,test,tests,381,Also @hokru you might want to check out the `tests/libxc` folder for a list of tests and see if your new functionals are present. We need to hook this up to long tests at some point as well. @bwb314 At some point you added many DFT LibXC tests against Q-Chem that missed the rebasing and was finally closed [here](https://github.com/dgasmith/psi4/pull/18). Do you still have these tests that we can add to Psi4?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/877#issuecomment-349732113
https://github.com/psi4/psi4/pull/877#issuecomment-357248136:88,Testability,test,tests,88,"> I think what we need to do is organize the non-XC custom functionals into a series of tests like tests/test-custom-gga where all of the custom functionals that we build in gga_superfuncs.py should be there. . I added tests this way. I still want to add some reference outputs.; ; > Are you on the slack channel?. I am not, I also don't see it mentioned anywhere? I can join if that helps.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/877#issuecomment-357248136
https://github.com/psi4/psi4/pull/877#issuecomment-357248136:99,Testability,test,tests,99,"> I think what we need to do is organize the non-XC custom functionals into a series of tests like tests/test-custom-gga where all of the custom functionals that we build in gga_superfuncs.py should be there. . I added tests this way. I still want to add some reference outputs.; ; > Are you on the slack channel?. I am not, I also don't see it mentioned anywhere? I can join if that helps.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/877#issuecomment-357248136
https://github.com/psi4/psi4/pull/877#issuecomment-357248136:105,Testability,test,test-custom-gga,105,"> I think what we need to do is organize the non-XC custom functionals into a series of tests like tests/test-custom-gga where all of the custom functionals that we build in gga_superfuncs.py should be there. . I added tests this way. I still want to add some reference outputs.; ; > Are you on the slack channel?. I am not, I also don't see it mentioned anywhere? I can join if that helps.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/877#issuecomment-357248136
https://github.com/psi4/psi4/pull/877#issuecomment-357248136:219,Testability,test,tests,219,"> I think what we need to do is organize the non-XC custom functionals into a series of tests like tests/test-custom-gga where all of the custom functionals that we build in gga_superfuncs.py should be there. . I added tests this way. I still want to add some reference outputs.; ; > Are you on the slack channel?. I am not, I also don't see it mentioned anywhere? I can join if that helps.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/877#issuecomment-357248136
https://github.com/psi4/psi4/pull/877#issuecomment-358020075:33,Testability,test,test,33,"@dgasmith and @bwb314, the libxc test case _looks_ like the one mentioned https://github.com/psi4/psi4/pull/877#issuecomment-349732113 . Is it, or does that still need to be added?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/877#issuecomment-358020075
https://github.com/psi4/psi4/pull/877#issuecomment-358351578:37,Testability,test,test,37,"@loriab They are a different kind of test, there may be some overlap however.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/877#issuecomment-358351578
https://github.com/psi4/psi4/pull/878#issuecomment-351194994:141,Integrability,rout,routines,141,"I think the desire to change the name was to reflect that it can be used for other general-purpose (_i.e._ not only evaluated at nuclei) ESP routines, such as grid properties. IIRC, those integrals are just the regular potential ints, modified to allow arbitrary centers to be provided. At one point in time they were strictly Cartesian AO only, to avoid multiple transformations (contraction should be performed with backtransformed D matrices in that case), but I'm not certain that's true anymore.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/878#issuecomment-351194994
https://github.com/psi4/psi4/pull/878#issuecomment-351194994:381,Integrability,contract,contraction,381,"I think the desire to change the name was to reflect that it can be used for other general-purpose (_i.e._ not only evaluated at nuclei) ESP routines, such as grid properties. IIRC, those integrals are just the regular potential ints, modified to allow arbitrary centers to be provided. At one point in time they were strictly Cartesian AO only, to avoid multiple transformations (contraction should be performed with backtransformed D matrices in that case), but I'm not certain that's true anymore.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/878#issuecomment-351194994
https://github.com/psi4/psi4/pull/878#issuecomment-351194994:403,Performance,perform,performed,403,"I think the desire to change the name was to reflect that it can be used for other general-purpose (_i.e._ not only evaluated at nuclei) ESP routines, such as grid properties. IIRC, those integrals are just the regular potential ints, modified to allow arbitrary centers to be provided. At one point in time they were strictly Cartesian AO only, to avoid multiple transformations (contraction should be performed with backtransformed D matrices in that case), but I'm not certain that's true anymore.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/878#issuecomment-351194994
https://github.com/psi4/psi4/pull/878#issuecomment-351194994:349,Safety,avoid,avoid,349,"I think the desire to change the name was to reflect that it can be used for other general-purpose (_i.e._ not only evaluated at nuclei) ESP routines, such as grid properties. IIRC, those integrals are just the regular potential ints, modified to allow arbitrary centers to be provided. At one point in time they were strictly Cartesian AO only, to avoid multiple transformations (contraction should be performed with backtransformed D matrices in that case), but I'm not certain that's true anymore.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/878#issuecomment-351194994
https://github.com/psi4/psi4/pull/878#issuecomment-351198084:327,Integrability,Contract,ContractOverDensityFunctor,327,"Thanks @andysim, I can do that name change. And I think the ""strictly Cartesian"" is still true. This is the way they are used in `psipcm.cc`:; ```; if (basisset_->has_puream()) {; D_carts = std::make_shared<Matrix>(""D carts"", basisset_->nao(), basisset_->nao());; D_carts->back_transform(D, my_aotoso_);; } else; D_carts = D;. ContractOverDensityFunctor contract_density_functor(ntess_, tess_pot_e_, D_carts);; // Add in the electronic contribution to the potential at each tessera; potential_int_->compute(contract_density_functor);; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/878#issuecomment-351198084
https://github.com/psi4/psi4/pull/880#issuecomment-358387786:44,Testability,test,tests,44,"aha, here's where the psi vs libxc vs qchem tests went – knew I had seen them somewhere. this is a simple PR and shouldn't need much work to get it ready to merge when you have the time, @bwb314.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/880#issuecomment-358387786
https://github.com/psi4/psi4/pull/880#issuecomment-358387786:99,Usability,simpl,simple,99,"aha, here's where the psi vs libxc vs qchem tests went – knew I had seen them somewhere. this is a simple PR and shouldn't need much work to get it ready to merge when you have the time, @bwb314.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/880#issuecomment-358387786
https://github.com/psi4/psi4/pull/880#issuecomment-359270820:48,Deployability,release,release,48,"This is quite important to have before the next release. If you will not have a chance to work on this, please let us know and we can open a general issue.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/880#issuecomment-359270820
https://github.com/psi4/psi4/pull/880#issuecomment-359555792:32,Testability,test,test,32,The only real problem with this test (that I'm aware of) is compare_values stops the test if psi4 is not within the given threshold (10^-4 for qchem and 10^-6 for psi4 without libXC). Are these acceptable thresholds?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/880#issuecomment-359555792
https://github.com/psi4/psi4/pull/880#issuecomment-359555792:85,Testability,test,test,85,The only real problem with this test (that I'm aware of) is compare_values stops the test if psi4 is not within the given threshold (10^-4 for qchem and 10^-6 for psi4 without libXC). Are these acceptable thresholds?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/880#issuecomment-359555792
https://github.com/psi4/psi4/pull/880#issuecomment-360958436:43,Energy Efficiency,energy,energy,43,Can you add the water dimer and excitation energy tests back in? Meta-GGA UKS should be fixed in latest master.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/880#issuecomment-360958436
https://github.com/psi4/psi4/pull/880#issuecomment-360958436:50,Testability,test,tests,50,Can you add the water dimer and excitation energy tests back in? Meta-GGA UKS should be fixed in latest master.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/880#issuecomment-360958436
https://github.com/psi4/psi4/pull/880#issuecomment-365470158:328,Testability,test,tests,328,"Hmm, more inclined to trust qchem and libxc here. The old Psi4 probably handled singularities in a different way. I think I’m ok with these differences. . -Daniel Smith; Sent from my iPhone. . > On Feb 11, 2018, at 14:13, PeterKraus <notifications@github.com> wrote:; > ; > @PeterKraus commented on this pull request.; > ; > In tests/libxc/dft-water/input.dat:; > ; > > + 'wB97': -76.3680050769001, #TEST; > +'HCTH120': -76.37568880282406, #TEST; > + 'dlDF': -76.8428069903893, #TEST; > + 'PBE0': -76.30113068157736, #TEST; > + 'B97-1': -76.36001872648792, #TEST; > + 'PW91': -76.35555307829662, #TEST; > + 'B97-D': -76.34490642131334, #TEST; > + 'M05': -76.3495817363072, #TEST; > + 'B3LYP': -76.38509296980465, #TEST; > +'HCTH407': -76.37515280900291, #TEST; > +'HCTH147': -76.37958046443578, #TEST; > + 'SOGGA': -75.97737386477169, #TEST; > + 'B97-2': -76.35924563701468 #TEST; > +} #TEST; > +; > +for func in qchem_data.keys(): #TEST; > I've tried implementing SOGGA, however there's a problem:; > ; > Water test:; > SOGGA Psi4 dev: -75.9775599; > SOGGA Psi4 1.0: -75.9773739; > SOGGA Q-Chem: -75.9775523; > ; > My implementation comfortably passes against Q-Chem, but doesn't pass the tight criterium compared to old Psi4.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/880#issuecomment-365470158
https://github.com/psi4/psi4/pull/880#issuecomment-365470158:400,Testability,TEST,TEST,400,"Hmm, more inclined to trust qchem and libxc here. The old Psi4 probably handled singularities in a different way. I think I’m ok with these differences. . -Daniel Smith; Sent from my iPhone. . > On Feb 11, 2018, at 14:13, PeterKraus <notifications@github.com> wrote:; > ; > @PeterKraus commented on this pull request.; > ; > In tests/libxc/dft-water/input.dat:; > ; > > + 'wB97': -76.3680050769001, #TEST; > +'HCTH120': -76.37568880282406, #TEST; > + 'dlDF': -76.8428069903893, #TEST; > + 'PBE0': -76.30113068157736, #TEST; > + 'B97-1': -76.36001872648792, #TEST; > + 'PW91': -76.35555307829662, #TEST; > + 'B97-D': -76.34490642131334, #TEST; > + 'M05': -76.3495817363072, #TEST; > + 'B3LYP': -76.38509296980465, #TEST; > +'HCTH407': -76.37515280900291, #TEST; > +'HCTH147': -76.37958046443578, #TEST; > + 'SOGGA': -75.97737386477169, #TEST; > + 'B97-2': -76.35924563701468 #TEST; > +} #TEST; > +; > +for func in qchem_data.keys(): #TEST; > I've tried implementing SOGGA, however there's a problem:; > ; > Water test:; > SOGGA Psi4 dev: -75.9775599; > SOGGA Psi4 1.0: -75.9773739; > SOGGA Q-Chem: -75.9775523; > ; > My implementation comfortably passes against Q-Chem, but doesn't pass the tight criterium compared to old Psi4.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/880#issuecomment-365470158
https://github.com/psi4/psi4/pull/880#issuecomment-365470158:441,Testability,TEST,TEST,441,"Hmm, more inclined to trust qchem and libxc here. The old Psi4 probably handled singularities in a different way. I think I’m ok with these differences. . -Daniel Smith; Sent from my iPhone. . > On Feb 11, 2018, at 14:13, PeterKraus <notifications@github.com> wrote:; > ; > @PeterKraus commented on this pull request.; > ; > In tests/libxc/dft-water/input.dat:; > ; > > + 'wB97': -76.3680050769001, #TEST; > +'HCTH120': -76.37568880282406, #TEST; > + 'dlDF': -76.8428069903893, #TEST; > + 'PBE0': -76.30113068157736, #TEST; > + 'B97-1': -76.36001872648792, #TEST; > + 'PW91': -76.35555307829662, #TEST; > + 'B97-D': -76.34490642131334, #TEST; > + 'M05': -76.3495817363072, #TEST; > + 'B3LYP': -76.38509296980465, #TEST; > +'HCTH407': -76.37515280900291, #TEST; > +'HCTH147': -76.37958046443578, #TEST; > + 'SOGGA': -75.97737386477169, #TEST; > + 'B97-2': -76.35924563701468 #TEST; > +} #TEST; > +; > +for func in qchem_data.keys(): #TEST; > I've tried implementing SOGGA, however there's a problem:; > ; > Water test:; > SOGGA Psi4 dev: -75.9775599; > SOGGA Psi4 1.0: -75.9773739; > SOGGA Q-Chem: -75.9775523; > ; > My implementation comfortably passes against Q-Chem, but doesn't pass the tight criterium compared to old Psi4.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/880#issuecomment-365470158
https://github.com/psi4/psi4/pull/880#issuecomment-365470158:479,Testability,TEST,TEST,479,"Hmm, more inclined to trust qchem and libxc here. The old Psi4 probably handled singularities in a different way. I think I’m ok with these differences. . -Daniel Smith; Sent from my iPhone. . > On Feb 11, 2018, at 14:13, PeterKraus <notifications@github.com> wrote:; > ; > @PeterKraus commented on this pull request.; > ; > In tests/libxc/dft-water/input.dat:; > ; > > + 'wB97': -76.3680050769001, #TEST; > +'HCTH120': -76.37568880282406, #TEST; > + 'dlDF': -76.8428069903893, #TEST; > + 'PBE0': -76.30113068157736, #TEST; > + 'B97-1': -76.36001872648792, #TEST; > + 'PW91': -76.35555307829662, #TEST; > + 'B97-D': -76.34490642131334, #TEST; > + 'M05': -76.3495817363072, #TEST; > + 'B3LYP': -76.38509296980465, #TEST; > +'HCTH407': -76.37515280900291, #TEST; > +'HCTH147': -76.37958046443578, #TEST; > + 'SOGGA': -75.97737386477169, #TEST; > + 'B97-2': -76.35924563701468 #TEST; > +} #TEST; > +; > +for func in qchem_data.keys(): #TEST; > I've tried implementing SOGGA, however there's a problem:; > ; > Water test:; > SOGGA Psi4 dev: -75.9775599; > SOGGA Psi4 1.0: -75.9773739; > SOGGA Q-Chem: -75.9775523; > ; > My implementation comfortably passes against Q-Chem, but doesn't pass the tight criterium compared to old Psi4.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/880#issuecomment-365470158
https://github.com/psi4/psi4/pull/880#issuecomment-365470158:518,Testability,TEST,TEST,518,"Hmm, more inclined to trust qchem and libxc here. The old Psi4 probably handled singularities in a different way. I think I’m ok with these differences. . -Daniel Smith; Sent from my iPhone. . > On Feb 11, 2018, at 14:13, PeterKraus <notifications@github.com> wrote:; > ; > @PeterKraus commented on this pull request.; > ; > In tests/libxc/dft-water/input.dat:; > ; > > + 'wB97': -76.3680050769001, #TEST; > +'HCTH120': -76.37568880282406, #TEST; > + 'dlDF': -76.8428069903893, #TEST; > + 'PBE0': -76.30113068157736, #TEST; > + 'B97-1': -76.36001872648792, #TEST; > + 'PW91': -76.35555307829662, #TEST; > + 'B97-D': -76.34490642131334, #TEST; > + 'M05': -76.3495817363072, #TEST; > + 'B3LYP': -76.38509296980465, #TEST; > +'HCTH407': -76.37515280900291, #TEST; > +'HCTH147': -76.37958046443578, #TEST; > + 'SOGGA': -75.97737386477169, #TEST; > + 'B97-2': -76.35924563701468 #TEST; > +} #TEST; > +; > +for func in qchem_data.keys(): #TEST; > I've tried implementing SOGGA, however there's a problem:; > ; > Water test:; > SOGGA Psi4 dev: -75.9775599; > SOGGA Psi4 1.0: -75.9773739; > SOGGA Q-Chem: -75.9775523; > ; > My implementation comfortably passes against Q-Chem, but doesn't pass the tight criterium compared to old Psi4.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/880#issuecomment-365470158
https://github.com/psi4/psi4/pull/880#issuecomment-365470158:558,Testability,TEST,TEST,558,"Hmm, more inclined to trust qchem and libxc here. The old Psi4 probably handled singularities in a different way. I think I’m ok with these differences. . -Daniel Smith; Sent from my iPhone. . > On Feb 11, 2018, at 14:13, PeterKraus <notifications@github.com> wrote:; > ; > @PeterKraus commented on this pull request.; > ; > In tests/libxc/dft-water/input.dat:; > ; > > + 'wB97': -76.3680050769001, #TEST; > +'HCTH120': -76.37568880282406, #TEST; > + 'dlDF': -76.8428069903893, #TEST; > + 'PBE0': -76.30113068157736, #TEST; > + 'B97-1': -76.36001872648792, #TEST; > + 'PW91': -76.35555307829662, #TEST; > + 'B97-D': -76.34490642131334, #TEST; > + 'M05': -76.3495817363072, #TEST; > + 'B3LYP': -76.38509296980465, #TEST; > +'HCTH407': -76.37515280900291, #TEST; > +'HCTH147': -76.37958046443578, #TEST; > + 'SOGGA': -75.97737386477169, #TEST; > + 'B97-2': -76.35924563701468 #TEST; > +} #TEST; > +; > +for func in qchem_data.keys(): #TEST; > I've tried implementing SOGGA, however there's a problem:; > ; > Water test:; > SOGGA Psi4 dev: -75.9775599; > SOGGA Psi4 1.0: -75.9773739; > SOGGA Q-Chem: -75.9775523; > ; > My implementation comfortably passes against Q-Chem, but doesn't pass the tight criterium compared to old Psi4.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/880#issuecomment-365470158
https://github.com/psi4/psi4/pull/880#issuecomment-365470158:597,Testability,TEST,TEST,597,"Hmm, more inclined to trust qchem and libxc here. The old Psi4 probably handled singularities in a different way. I think I’m ok with these differences. . -Daniel Smith; Sent from my iPhone. . > On Feb 11, 2018, at 14:13, PeterKraus <notifications@github.com> wrote:; > ; > @PeterKraus commented on this pull request.; > ; > In tests/libxc/dft-water/input.dat:; > ; > > + 'wB97': -76.3680050769001, #TEST; > +'HCTH120': -76.37568880282406, #TEST; > + 'dlDF': -76.8428069903893, #TEST; > + 'PBE0': -76.30113068157736, #TEST; > + 'B97-1': -76.36001872648792, #TEST; > + 'PW91': -76.35555307829662, #TEST; > + 'B97-D': -76.34490642131334, #TEST; > + 'M05': -76.3495817363072, #TEST; > + 'B3LYP': -76.38509296980465, #TEST; > +'HCTH407': -76.37515280900291, #TEST; > +'HCTH147': -76.37958046443578, #TEST; > + 'SOGGA': -75.97737386477169, #TEST; > + 'B97-2': -76.35924563701468 #TEST; > +} #TEST; > +; > +for func in qchem_data.keys(): #TEST; > I've tried implementing SOGGA, however there's a problem:; > ; > Water test:; > SOGGA Psi4 dev: -75.9775599; > SOGGA Psi4 1.0: -75.9773739; > SOGGA Q-Chem: -75.9775523; > ; > My implementation comfortably passes against Q-Chem, but doesn't pass the tight criterium compared to old Psi4.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/880#issuecomment-365470158
https://github.com/psi4/psi4/pull/880#issuecomment-365470158:637,Testability,TEST,TEST,637,"Hmm, more inclined to trust qchem and libxc here. The old Psi4 probably handled singularities in a different way. I think I’m ok with these differences. . -Daniel Smith; Sent from my iPhone. . > On Feb 11, 2018, at 14:13, PeterKraus <notifications@github.com> wrote:; > ; > @PeterKraus commented on this pull request.; > ; > In tests/libxc/dft-water/input.dat:; > ; > > + 'wB97': -76.3680050769001, #TEST; > +'HCTH120': -76.37568880282406, #TEST; > + 'dlDF': -76.8428069903893, #TEST; > + 'PBE0': -76.30113068157736, #TEST; > + 'B97-1': -76.36001872648792, #TEST; > + 'PW91': -76.35555307829662, #TEST; > + 'B97-D': -76.34490642131334, #TEST; > + 'M05': -76.3495817363072, #TEST; > + 'B3LYP': -76.38509296980465, #TEST; > +'HCTH407': -76.37515280900291, #TEST; > +'HCTH147': -76.37958046443578, #TEST; > + 'SOGGA': -75.97737386477169, #TEST; > + 'B97-2': -76.35924563701468 #TEST; > +} #TEST; > +; > +for func in qchem_data.keys(): #TEST; > I've tried implementing SOGGA, however there's a problem:; > ; > Water test:; > SOGGA Psi4 dev: -75.9775599; > SOGGA Psi4 1.0: -75.9773739; > SOGGA Q-Chem: -75.9775523; > ; > My implementation comfortably passes against Q-Chem, but doesn't pass the tight criterium compared to old Psi4.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/880#issuecomment-365470158
https://github.com/psi4/psi4/pull/880#issuecomment-365470158:674,Testability,TEST,TEST,674,"Hmm, more inclined to trust qchem and libxc here. The old Psi4 probably handled singularities in a different way. I think I’m ok with these differences. . -Daniel Smith; Sent from my iPhone. . > On Feb 11, 2018, at 14:13, PeterKraus <notifications@github.com> wrote:; > ; > @PeterKraus commented on this pull request.; > ; > In tests/libxc/dft-water/input.dat:; > ; > > + 'wB97': -76.3680050769001, #TEST; > +'HCTH120': -76.37568880282406, #TEST; > + 'dlDF': -76.8428069903893, #TEST; > + 'PBE0': -76.30113068157736, #TEST; > + 'B97-1': -76.36001872648792, #TEST; > + 'PW91': -76.35555307829662, #TEST; > + 'B97-D': -76.34490642131334, #TEST; > + 'M05': -76.3495817363072, #TEST; > + 'B3LYP': -76.38509296980465, #TEST; > +'HCTH407': -76.37515280900291, #TEST; > +'HCTH147': -76.37958046443578, #TEST; > + 'SOGGA': -75.97737386477169, #TEST; > + 'B97-2': -76.35924563701468 #TEST; > +} #TEST; > +; > +for func in qchem_data.keys(): #TEST; > I've tried implementing SOGGA, however there's a problem:; > ; > Water test:; > SOGGA Psi4 dev: -75.9775599; > SOGGA Psi4 1.0: -75.9773739; > SOGGA Q-Chem: -75.9775523; > ; > My implementation comfortably passes against Q-Chem, but doesn't pass the tight criterium compared to old Psi4.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/880#issuecomment-365470158
https://github.com/psi4/psi4/pull/880#issuecomment-365470158:714,Testability,TEST,TEST,714,"Hmm, more inclined to trust qchem and libxc here. The old Psi4 probably handled singularities in a different way. I think I’m ok with these differences. . -Daniel Smith; Sent from my iPhone. . > On Feb 11, 2018, at 14:13, PeterKraus <notifications@github.com> wrote:; > ; > @PeterKraus commented on this pull request.; > ; > In tests/libxc/dft-water/input.dat:; > ; > > + 'wB97': -76.3680050769001, #TEST; > +'HCTH120': -76.37568880282406, #TEST; > + 'dlDF': -76.8428069903893, #TEST; > + 'PBE0': -76.30113068157736, #TEST; > + 'B97-1': -76.36001872648792, #TEST; > + 'PW91': -76.35555307829662, #TEST; > + 'B97-D': -76.34490642131334, #TEST; > + 'M05': -76.3495817363072, #TEST; > + 'B3LYP': -76.38509296980465, #TEST; > +'HCTH407': -76.37515280900291, #TEST; > +'HCTH147': -76.37958046443578, #TEST; > + 'SOGGA': -75.97737386477169, #TEST; > + 'B97-2': -76.35924563701468 #TEST; > +} #TEST; > +; > +for func in qchem_data.keys(): #TEST; > I've tried implementing SOGGA, however there's a problem:; > ; > Water test:; > SOGGA Psi4 dev: -75.9775599; > SOGGA Psi4 1.0: -75.9773739; > SOGGA Q-Chem: -75.9775523; > ; > My implementation comfortably passes against Q-Chem, but doesn't pass the tight criterium compared to old Psi4.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/880#issuecomment-365470158
https://github.com/psi4/psi4/pull/880#issuecomment-365470158:755,Testability,TEST,TEST,755,"Hmm, more inclined to trust qchem and libxc here. The old Psi4 probably handled singularities in a different way. I think I’m ok with these differences. . -Daniel Smith; Sent from my iPhone. . > On Feb 11, 2018, at 14:13, PeterKraus <notifications@github.com> wrote:; > ; > @PeterKraus commented on this pull request.; > ; > In tests/libxc/dft-water/input.dat:; > ; > > + 'wB97': -76.3680050769001, #TEST; > +'HCTH120': -76.37568880282406, #TEST; > + 'dlDF': -76.8428069903893, #TEST; > + 'PBE0': -76.30113068157736, #TEST; > + 'B97-1': -76.36001872648792, #TEST; > + 'PW91': -76.35555307829662, #TEST; > + 'B97-D': -76.34490642131334, #TEST; > + 'M05': -76.3495817363072, #TEST; > + 'B3LYP': -76.38509296980465, #TEST; > +'HCTH407': -76.37515280900291, #TEST; > +'HCTH147': -76.37958046443578, #TEST; > + 'SOGGA': -75.97737386477169, #TEST; > + 'B97-2': -76.35924563701468 #TEST; > +} #TEST; > +; > +for func in qchem_data.keys(): #TEST; > I've tried implementing SOGGA, however there's a problem:; > ; > Water test:; > SOGGA Psi4 dev: -75.9775599; > SOGGA Psi4 1.0: -75.9773739; > SOGGA Q-Chem: -75.9775523; > ; > My implementation comfortably passes against Q-Chem, but doesn't pass the tight criterium compared to old Psi4.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/880#issuecomment-365470158
https://github.com/psi4/psi4/pull/880#issuecomment-365470158:796,Testability,TEST,TEST,796,"Hmm, more inclined to trust qchem and libxc here. The old Psi4 probably handled singularities in a different way. I think I’m ok with these differences. . -Daniel Smith; Sent from my iPhone. . > On Feb 11, 2018, at 14:13, PeterKraus <notifications@github.com> wrote:; > ; > @PeterKraus commented on this pull request.; > ; > In tests/libxc/dft-water/input.dat:; > ; > > + 'wB97': -76.3680050769001, #TEST; > +'HCTH120': -76.37568880282406, #TEST; > + 'dlDF': -76.8428069903893, #TEST; > + 'PBE0': -76.30113068157736, #TEST; > + 'B97-1': -76.36001872648792, #TEST; > + 'PW91': -76.35555307829662, #TEST; > + 'B97-D': -76.34490642131334, #TEST; > + 'M05': -76.3495817363072, #TEST; > + 'B3LYP': -76.38509296980465, #TEST; > +'HCTH407': -76.37515280900291, #TEST; > +'HCTH147': -76.37958046443578, #TEST; > + 'SOGGA': -75.97737386477169, #TEST; > + 'B97-2': -76.35924563701468 #TEST; > +} #TEST; > +; > +for func in qchem_data.keys(): #TEST; > I've tried implementing SOGGA, however there's a problem:; > ; > Water test:; > SOGGA Psi4 dev: -75.9775599; > SOGGA Psi4 1.0: -75.9773739; > SOGGA Q-Chem: -75.9775523; > ; > My implementation comfortably passes against Q-Chem, but doesn't pass the tight criterium compared to old Psi4.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/880#issuecomment-365470158
https://github.com/psi4/psi4/pull/880#issuecomment-365470158:836,Testability,TEST,TEST,836,"Hmm, more inclined to trust qchem and libxc here. The old Psi4 probably handled singularities in a different way. I think I’m ok with these differences. . -Daniel Smith; Sent from my iPhone. . > On Feb 11, 2018, at 14:13, PeterKraus <notifications@github.com> wrote:; > ; > @PeterKraus commented on this pull request.; > ; > In tests/libxc/dft-water/input.dat:; > ; > > + 'wB97': -76.3680050769001, #TEST; > +'HCTH120': -76.37568880282406, #TEST; > + 'dlDF': -76.8428069903893, #TEST; > + 'PBE0': -76.30113068157736, #TEST; > + 'B97-1': -76.36001872648792, #TEST; > + 'PW91': -76.35555307829662, #TEST; > + 'B97-D': -76.34490642131334, #TEST; > + 'M05': -76.3495817363072, #TEST; > + 'B3LYP': -76.38509296980465, #TEST; > +'HCTH407': -76.37515280900291, #TEST; > +'HCTH147': -76.37958046443578, #TEST; > + 'SOGGA': -75.97737386477169, #TEST; > + 'B97-2': -76.35924563701468 #TEST; > +} #TEST; > +; > +for func in qchem_data.keys(): #TEST; > I've tried implementing SOGGA, however there's a problem:; > ; > Water test:; > SOGGA Psi4 dev: -75.9775599; > SOGGA Psi4 1.0: -75.9773739; > SOGGA Q-Chem: -75.9775523; > ; > My implementation comfortably passes against Q-Chem, but doesn't pass the tight criterium compared to old Psi4.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/880#issuecomment-365470158
https://github.com/psi4/psi4/pull/880#issuecomment-365470158:875,Testability,TEST,TEST,875,"Hmm, more inclined to trust qchem and libxc here. The old Psi4 probably handled singularities in a different way. I think I’m ok with these differences. . -Daniel Smith; Sent from my iPhone. . > On Feb 11, 2018, at 14:13, PeterKraus <notifications@github.com> wrote:; > ; > @PeterKraus commented on this pull request.; > ; > In tests/libxc/dft-water/input.dat:; > ; > > + 'wB97': -76.3680050769001, #TEST; > +'HCTH120': -76.37568880282406, #TEST; > + 'dlDF': -76.8428069903893, #TEST; > + 'PBE0': -76.30113068157736, #TEST; > + 'B97-1': -76.36001872648792, #TEST; > + 'PW91': -76.35555307829662, #TEST; > + 'B97-D': -76.34490642131334, #TEST; > + 'M05': -76.3495817363072, #TEST; > + 'B3LYP': -76.38509296980465, #TEST; > +'HCTH407': -76.37515280900291, #TEST; > +'HCTH147': -76.37958046443578, #TEST; > + 'SOGGA': -75.97737386477169, #TEST; > + 'B97-2': -76.35924563701468 #TEST; > +} #TEST; > +; > +for func in qchem_data.keys(): #TEST; > I've tried implementing SOGGA, however there's a problem:; > ; > Water test:; > SOGGA Psi4 dev: -75.9775599; > SOGGA Psi4 1.0: -75.9773739; > SOGGA Q-Chem: -75.9775523; > ; > My implementation comfortably passes against Q-Chem, but doesn't pass the tight criterium compared to old Psi4.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/880#issuecomment-365470158
https://github.com/psi4/psi4/pull/880#issuecomment-365470158:887,Testability,TEST,TEST,887,"Hmm, more inclined to trust qchem and libxc here. The old Psi4 probably handled singularities in a different way. I think I’m ok with these differences. . -Daniel Smith; Sent from my iPhone. . > On Feb 11, 2018, at 14:13, PeterKraus <notifications@github.com> wrote:; > ; > @PeterKraus commented on this pull request.; > ; > In tests/libxc/dft-water/input.dat:; > ; > > + 'wB97': -76.3680050769001, #TEST; > +'HCTH120': -76.37568880282406, #TEST; > + 'dlDF': -76.8428069903893, #TEST; > + 'PBE0': -76.30113068157736, #TEST; > + 'B97-1': -76.36001872648792, #TEST; > + 'PW91': -76.35555307829662, #TEST; > + 'B97-D': -76.34490642131334, #TEST; > + 'M05': -76.3495817363072, #TEST; > + 'B3LYP': -76.38509296980465, #TEST; > +'HCTH407': -76.37515280900291, #TEST; > +'HCTH147': -76.37958046443578, #TEST; > + 'SOGGA': -75.97737386477169, #TEST; > + 'B97-2': -76.35924563701468 #TEST; > +} #TEST; > +; > +for func in qchem_data.keys(): #TEST; > I've tried implementing SOGGA, however there's a problem:; > ; > Water test:; > SOGGA Psi4 dev: -75.9775599; > SOGGA Psi4 1.0: -75.9773739; > SOGGA Q-Chem: -75.9775523; > ; > My implementation comfortably passes against Q-Chem, but doesn't pass the tight criterium compared to old Psi4.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/880#issuecomment-365470158
https://github.com/psi4/psi4/pull/880#issuecomment-365470158:933,Testability,TEST,TEST,933,"Hmm, more inclined to trust qchem and libxc here. The old Psi4 probably handled singularities in a different way. I think I’m ok with these differences. . -Daniel Smith; Sent from my iPhone. . > On Feb 11, 2018, at 14:13, PeterKraus <notifications@github.com> wrote:; > ; > @PeterKraus commented on this pull request.; > ; > In tests/libxc/dft-water/input.dat:; > ; > > + 'wB97': -76.3680050769001, #TEST; > +'HCTH120': -76.37568880282406, #TEST; > + 'dlDF': -76.8428069903893, #TEST; > + 'PBE0': -76.30113068157736, #TEST; > + 'B97-1': -76.36001872648792, #TEST; > + 'PW91': -76.35555307829662, #TEST; > + 'B97-D': -76.34490642131334, #TEST; > + 'M05': -76.3495817363072, #TEST; > + 'B3LYP': -76.38509296980465, #TEST; > +'HCTH407': -76.37515280900291, #TEST; > +'HCTH147': -76.37958046443578, #TEST; > + 'SOGGA': -75.97737386477169, #TEST; > + 'B97-2': -76.35924563701468 #TEST; > +} #TEST; > +; > +for func in qchem_data.keys(): #TEST; > I've tried implementing SOGGA, however there's a problem:; > ; > Water test:; > SOGGA Psi4 dev: -75.9775599; > SOGGA Psi4 1.0: -75.9773739; > SOGGA Q-Chem: -75.9775523; > ; > My implementation comfortably passes against Q-Chem, but doesn't pass the tight criterium compared to old Psi4.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/880#issuecomment-365470158
https://github.com/psi4/psi4/pull/880#issuecomment-365470158:1012,Testability,test,test,1012,"Hmm, more inclined to trust qchem and libxc here. The old Psi4 probably handled singularities in a different way. I think I’m ok with these differences. . -Daniel Smith; Sent from my iPhone. . > On Feb 11, 2018, at 14:13, PeterKraus <notifications@github.com> wrote:; > ; > @PeterKraus commented on this pull request.; > ; > In tests/libxc/dft-water/input.dat:; > ; > > + 'wB97': -76.3680050769001, #TEST; > +'HCTH120': -76.37568880282406, #TEST; > + 'dlDF': -76.8428069903893, #TEST; > + 'PBE0': -76.30113068157736, #TEST; > + 'B97-1': -76.36001872648792, #TEST; > + 'PW91': -76.35555307829662, #TEST; > + 'B97-D': -76.34490642131334, #TEST; > + 'M05': -76.3495817363072, #TEST; > + 'B3LYP': -76.38509296980465, #TEST; > +'HCTH407': -76.37515280900291, #TEST; > +'HCTH147': -76.37958046443578, #TEST; > + 'SOGGA': -75.97737386477169, #TEST; > + 'B97-2': -76.35924563701468 #TEST; > +} #TEST; > +; > +for func in qchem_data.keys(): #TEST; > I've tried implementing SOGGA, however there's a problem:; > ; > Water test:; > SOGGA Psi4 dev: -75.9775599; > SOGGA Psi4 1.0: -75.9773739; > SOGGA Q-Chem: -75.9775523; > ; > My implementation comfortably passes against Q-Chem, but doesn't pass the tight criterium compared to old Psi4.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/880#issuecomment-365470158
https://github.com/psi4/psi4/pull/880#issuecomment-368139862:207,Integrability,interface,interface,207,> It appears that the wB97X-D3 is currently being built incorrectly. Yes. Part of the problem will be solved by https://github.com/psi4/psi4/issues/920. The other problem is that the current dashparam-dftd3 interface does not support setting a custom rs8 parameter for D3ZERO (rs8 is 1.0 except in Chai's wB97X-D3 re-fit where s8 is 1.0 and rs8 is fitted). Until above is solved the d3 dict entry should probably be commented out.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/880#issuecomment-368139862
https://github.com/psi4/psi4/pull/880#issuecomment-368146271:449,Testability,test,tests,449,"Oh! That we can fix. My psi is a wreck at present. @bwb314, you want to do as @hokru advises and change [this](https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/dashparam.py#L265) to `dashcoeff['rs8']`, add `rs8: 1.0` to everything [here](https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/dashparam.py#L84-L129) and add `rs8: ??` to wB97X [here](https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/dashparam.py#L130)? Then run tests.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/880#issuecomment-368146271
https://github.com/psi4/psi4/pull/880#issuecomment-369512570:410,Deployability,release,release,410,"PR #922 should address the `DSD-xxx`-class of functionals. I have also modified the `dashparams.py` in that PR, however I plan to expand the dashparams even further (to include references as well and to automatically generate the functionals listed). . It would be really good to get these tests merged. My wish would be to have reference values from Psi4 1.1 (or even 1.2a1.dev781 - which is the latest conda release, if we trust them) in addition to Q-Chem, to make the comparison with PR #922 easier.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/880#issuecomment-369512570
https://github.com/psi4/psi4/pull/880#issuecomment-369512570:290,Testability,test,tests,290,"PR #922 should address the `DSD-xxx`-class of functionals. I have also modified the `dashparams.py` in that PR, however I plan to expand the dashparams even further (to include references as well and to automatically generate the functionals listed). . It would be really good to get these tests merged. My wish would be to have reference values from Psi4 1.1 (or even 1.2a1.dev781 - which is the latest conda release, if we trust them) in addition to Q-Chem, to make the comparison with PR #922 easier.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/880#issuecomment-369512570
https://github.com/psi4/psi4/pull/880#issuecomment-369644222:205,Availability,toler,tolerance,205,"I wanted Brandon to make sure that expected passes were passing, expected fails that we're ok with (e.g., matches Q-Chem exactly but matches Psi 1.1 with fewer decimals) were arranged to pass (back off on tolerance), and expected fails that we're not complacent to (i.e., wB97X-D3 and one other, iirc) were arranged to fail. . I think I'd rather this was pulled in with expected fails failing (to be fixed up later) than to have fake passes. But as soon as pass/fail is straightened out, lgtm.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/880#issuecomment-369644222
https://github.com/psi4/psi4/pull/880#issuecomment-369789472:13,Performance,concurren,concurrence,13,"ok, @bwb314, concurrence on killing off the `libxc/` subfolder.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/880#issuecomment-369789472
https://github.com/psi4/psi4/pull/881#issuecomment-351773593:21,Deployability,update,update,21,"Cool, thanks for the update. Big fan of this.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/881#issuecomment-351773593
https://github.com/psi4/psi4/issues/883#issuecomment-376539966:78,Availability,ping,ping,78,"Note that I've done parts of this (but by no means all) in another branch, so ping me if you'd like to take this up.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/883#issuecomment-376539966
https://github.com/psi4/psi4/issues/883#issuecomment-449694968:239,Modifiability,variab,variable,239,"### Storing data on `Wavefunction` instances. #### Choices (dipole gradient used as example). - (a) store in dedicated slot, `wfn.dipole_gradient_`. access through `wfn.dipole_gradient()`; - (b) store in `wfn.arrays_`. access through `wfn.variable('CURRENT DIPOLE GRADIENT')` or `wfn.variable('MTD DIPOLE GRADIENT')`; - (c) do (b) but also accessible through `wfn.dipole_gradient()` which just performs `wfn.arrays_` lookup; - (d) store in both `wfn.dipole_gradient_` and `wfn.arrays_` (memory-independent copies). access through `wfn.dipole_gradient()` (former) or `wfn.variable('CURRENT DIPOLE GRADIENT')` (latter) or `wfn.variable('MTD DIPOLE GRADIENT')` (latter). #### Present; - E/G/H are (d) and both, either, or neither may be set or consistent. even for energies, these haven’t been thoroughly rolled out past SCF.; - non-E/G/H are (b). #### Future; - E/G/H; - first (v1.4) work on getting data set in both places (reserved slot (e.g., `energy_`) and map (i.e., `variables_`)); - next cycle (v.1.5) do (c); - next next cycle (v1.6) do (b); - non-E/G/H, do (c)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/883#issuecomment-449694968
https://github.com/psi4/psi4/issues/883#issuecomment-449694968:284,Modifiability,variab,variable,284,"### Storing data on `Wavefunction` instances. #### Choices (dipole gradient used as example). - (a) store in dedicated slot, `wfn.dipole_gradient_`. access through `wfn.dipole_gradient()`; - (b) store in `wfn.arrays_`. access through `wfn.variable('CURRENT DIPOLE GRADIENT')` or `wfn.variable('MTD DIPOLE GRADIENT')`; - (c) do (b) but also accessible through `wfn.dipole_gradient()` which just performs `wfn.arrays_` lookup; - (d) store in both `wfn.dipole_gradient_` and `wfn.arrays_` (memory-independent copies). access through `wfn.dipole_gradient()` (former) or `wfn.variable('CURRENT DIPOLE GRADIENT')` (latter) or `wfn.variable('MTD DIPOLE GRADIENT')` (latter). #### Present; - E/G/H are (d) and both, either, or neither may be set or consistent. even for energies, these haven’t been thoroughly rolled out past SCF.; - non-E/G/H are (b). #### Future; - E/G/H; - first (v1.4) work on getting data set in both places (reserved slot (e.g., `energy_`) and map (i.e., `variables_`)); - next cycle (v.1.5) do (c); - next next cycle (v1.6) do (b); - non-E/G/H, do (c)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/883#issuecomment-449694968
https://github.com/psi4/psi4/issues/883#issuecomment-449694968:571,Modifiability,variab,variable,571,"### Storing data on `Wavefunction` instances. #### Choices (dipole gradient used as example). - (a) store in dedicated slot, `wfn.dipole_gradient_`. access through `wfn.dipole_gradient()`; - (b) store in `wfn.arrays_`. access through `wfn.variable('CURRENT DIPOLE GRADIENT')` or `wfn.variable('MTD DIPOLE GRADIENT')`; - (c) do (b) but also accessible through `wfn.dipole_gradient()` which just performs `wfn.arrays_` lookup; - (d) store in both `wfn.dipole_gradient_` and `wfn.arrays_` (memory-independent copies). access through `wfn.dipole_gradient()` (former) or `wfn.variable('CURRENT DIPOLE GRADIENT')` (latter) or `wfn.variable('MTD DIPOLE GRADIENT')` (latter). #### Present; - E/G/H are (d) and both, either, or neither may be set or consistent. even for energies, these haven’t been thoroughly rolled out past SCF.; - non-E/G/H are (b). #### Future; - E/G/H; - first (v1.4) work on getting data set in both places (reserved slot (e.g., `energy_`) and map (i.e., `variables_`)); - next cycle (v.1.5) do (c); - next next cycle (v1.6) do (b); - non-E/G/H, do (c)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/883#issuecomment-449694968
https://github.com/psi4/psi4/issues/883#issuecomment-449694968:625,Modifiability,variab,variable,625,"### Storing data on `Wavefunction` instances. #### Choices (dipole gradient used as example). - (a) store in dedicated slot, `wfn.dipole_gradient_`. access through `wfn.dipole_gradient()`; - (b) store in `wfn.arrays_`. access through `wfn.variable('CURRENT DIPOLE GRADIENT')` or `wfn.variable('MTD DIPOLE GRADIENT')`; - (c) do (b) but also accessible through `wfn.dipole_gradient()` which just performs `wfn.arrays_` lookup; - (d) store in both `wfn.dipole_gradient_` and `wfn.arrays_` (memory-independent copies). access through `wfn.dipole_gradient()` (former) or `wfn.variable('CURRENT DIPOLE GRADIENT')` (latter) or `wfn.variable('MTD DIPOLE GRADIENT')` (latter). #### Present; - E/G/H are (d) and both, either, or neither may be set or consistent. even for energies, these haven’t been thoroughly rolled out past SCF.; - non-E/G/H are (b). #### Future; - E/G/H; - first (v1.4) work on getting data set in both places (reserved slot (e.g., `energy_`) and map (i.e., `variables_`)); - next cycle (v.1.5) do (c); - next next cycle (v1.6) do (b); - non-E/G/H, do (c)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/883#issuecomment-449694968
https://github.com/psi4/psi4/issues/883#issuecomment-449694968:394,Performance,perform,performs,394,"### Storing data on `Wavefunction` instances. #### Choices (dipole gradient used as example). - (a) store in dedicated slot, `wfn.dipole_gradient_`. access through `wfn.dipole_gradient()`; - (b) store in `wfn.arrays_`. access through `wfn.variable('CURRENT DIPOLE GRADIENT')` or `wfn.variable('MTD DIPOLE GRADIENT')`; - (c) do (b) but also accessible through `wfn.dipole_gradient()` which just performs `wfn.arrays_` lookup; - (d) store in both `wfn.dipole_gradient_` and `wfn.arrays_` (memory-independent copies). access through `wfn.dipole_gradient()` (former) or `wfn.variable('CURRENT DIPOLE GRADIENT')` (latter) or `wfn.variable('MTD DIPOLE GRADIENT')` (latter). #### Present; - E/G/H are (d) and both, either, or neither may be set or consistent. even for energies, these haven’t been thoroughly rolled out past SCF.; - non-E/G/H are (b). #### Future; - E/G/H; - first (v1.4) work on getting data set in both places (reserved slot (e.g., `energy_`) and map (i.e., `variables_`)); - next cycle (v.1.5) do (c); - next next cycle (v1.6) do (b); - non-E/G/H, do (c)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/883#issuecomment-449694968
https://github.com/psi4/psi4/issues/883#issuecomment-449694968:149,Security,access,access,149,"### Storing data on `Wavefunction` instances. #### Choices (dipole gradient used as example). - (a) store in dedicated slot, `wfn.dipole_gradient_`. access through `wfn.dipole_gradient()`; - (b) store in `wfn.arrays_`. access through `wfn.variable('CURRENT DIPOLE GRADIENT')` or `wfn.variable('MTD DIPOLE GRADIENT')`; - (c) do (b) but also accessible through `wfn.dipole_gradient()` which just performs `wfn.arrays_` lookup; - (d) store in both `wfn.dipole_gradient_` and `wfn.arrays_` (memory-independent copies). access through `wfn.dipole_gradient()` (former) or `wfn.variable('CURRENT DIPOLE GRADIENT')` (latter) or `wfn.variable('MTD DIPOLE GRADIENT')` (latter). #### Present; - E/G/H are (d) and both, either, or neither may be set or consistent. even for energies, these haven’t been thoroughly rolled out past SCF.; - non-E/G/H are (b). #### Future; - E/G/H; - first (v1.4) work on getting data set in both places (reserved slot (e.g., `energy_`) and map (i.e., `variables_`)); - next cycle (v.1.5) do (c); - next next cycle (v1.6) do (b); - non-E/G/H, do (c)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/883#issuecomment-449694968
https://github.com/psi4/psi4/issues/883#issuecomment-449694968:219,Security,access,access,219,"### Storing data on `Wavefunction` instances. #### Choices (dipole gradient used as example). - (a) store in dedicated slot, `wfn.dipole_gradient_`. access through `wfn.dipole_gradient()`; - (b) store in `wfn.arrays_`. access through `wfn.variable('CURRENT DIPOLE GRADIENT')` or `wfn.variable('MTD DIPOLE GRADIENT')`; - (c) do (b) but also accessible through `wfn.dipole_gradient()` which just performs `wfn.arrays_` lookup; - (d) store in both `wfn.dipole_gradient_` and `wfn.arrays_` (memory-independent copies). access through `wfn.dipole_gradient()` (former) or `wfn.variable('CURRENT DIPOLE GRADIENT')` (latter) or `wfn.variable('MTD DIPOLE GRADIENT')` (latter). #### Present; - E/G/H are (d) and both, either, or neither may be set or consistent. even for energies, these haven’t been thoroughly rolled out past SCF.; - non-E/G/H are (b). #### Future; - E/G/H; - first (v1.4) work on getting data set in both places (reserved slot (e.g., `energy_`) and map (i.e., `variables_`)); - next cycle (v.1.5) do (c); - next next cycle (v1.6) do (b); - non-E/G/H, do (c)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/883#issuecomment-449694968
https://github.com/psi4/psi4/issues/883#issuecomment-449694968:340,Security,access,accessible,340,"### Storing data on `Wavefunction` instances. #### Choices (dipole gradient used as example). - (a) store in dedicated slot, `wfn.dipole_gradient_`. access through `wfn.dipole_gradient()`; - (b) store in `wfn.arrays_`. access through `wfn.variable('CURRENT DIPOLE GRADIENT')` or `wfn.variable('MTD DIPOLE GRADIENT')`; - (c) do (b) but also accessible through `wfn.dipole_gradient()` which just performs `wfn.arrays_` lookup; - (d) store in both `wfn.dipole_gradient_` and `wfn.arrays_` (memory-independent copies). access through `wfn.dipole_gradient()` (former) or `wfn.variable('CURRENT DIPOLE GRADIENT')` (latter) or `wfn.variable('MTD DIPOLE GRADIENT')` (latter). #### Present; - E/G/H are (d) and both, either, or neither may be set or consistent. even for energies, these haven’t been thoroughly rolled out past SCF.; - non-E/G/H are (b). #### Future; - E/G/H; - first (v1.4) work on getting data set in both places (reserved slot (e.g., `energy_`) and map (i.e., `variables_`)); - next cycle (v.1.5) do (c); - next next cycle (v1.6) do (b); - non-E/G/H, do (c)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/883#issuecomment-449694968
https://github.com/psi4/psi4/issues/883#issuecomment-449694968:515,Security,access,access,515,"### Storing data on `Wavefunction` instances. #### Choices (dipole gradient used as example). - (a) store in dedicated slot, `wfn.dipole_gradient_`. access through `wfn.dipole_gradient()`; - (b) store in `wfn.arrays_`. access through `wfn.variable('CURRENT DIPOLE GRADIENT')` or `wfn.variable('MTD DIPOLE GRADIENT')`; - (c) do (b) but also accessible through `wfn.dipole_gradient()` which just performs `wfn.arrays_` lookup; - (d) store in both `wfn.dipole_gradient_` and `wfn.arrays_` (memory-independent copies). access through `wfn.dipole_gradient()` (former) or `wfn.variable('CURRENT DIPOLE GRADIENT')` (latter) or `wfn.variable('MTD DIPOLE GRADIENT')` (latter). #### Present; - E/G/H are (d) and both, either, or neither may be set or consistent. even for energies, these haven’t been thoroughly rolled out past SCF.; - non-E/G/H are (b). #### Future; - E/G/H; - first (v1.4) work on getting data set in both places (reserved slot (e.g., `energy_`) and map (i.e., `variables_`)); - next cycle (v.1.5) do (c); - next next cycle (v1.6) do (b); - non-E/G/H, do (c)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/883#issuecomment-449694968
https://github.com/psi4/psi4/issues/884#issuecomment-352449546:872,Energy Efficiency,reduce,reduced,872,"Moving the finite-difference code into Python seems like a good idea. I'm sure it could be much cleaner. For geometry optimization purposes, one only ever really needs cartesian Hessian -> internal coordinate Hessian. This capability is in the C++ and also now in the Python optking - including the gradient.derivative B term (with the derivative-B matrix elements computed analytically). I think that the challenge I ran into (long ago) in the referenced commented-out code in generating a cartesian Hessian using a finite-difference derivative B matrix for this term was in the Sayvetz/Eckart conditions. The rotations/translations are projected out (now by cdsalc) for the original, undisplaced geometry - but then will not be exactly so at the displaced geometries. I don't recall if my motivation for using finite-difference derivative-B elements at the time was for reduced computational expense, because the analytic derivative-B elements were not yet coded, or to try to avoid discontinuity problems in the derivative formulas. The f-d option might be a good capability to have; I'm not sure offhand if it is worth doing. On the coordinate transformation of course Wesley Allen is the guru.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/884#issuecomment-352449546
https://github.com/psi4/psi4/issues/884#issuecomment-352449546:118,Performance,optimiz,optimization,118,"Moving the finite-difference code into Python seems like a good idea. I'm sure it could be much cleaner. For geometry optimization purposes, one only ever really needs cartesian Hessian -> internal coordinate Hessian. This capability is in the C++ and also now in the Python optking - including the gradient.derivative B term (with the derivative-B matrix elements computed analytically). I think that the challenge I ran into (long ago) in the referenced commented-out code in generating a cartesian Hessian using a finite-difference derivative B matrix for this term was in the Sayvetz/Eckart conditions. The rotations/translations are projected out (now by cdsalc) for the original, undisplaced geometry - but then will not be exactly so at the displaced geometries. I don't recall if my motivation for using finite-difference derivative-B elements at the time was for reduced computational expense, because the analytic derivative-B elements were not yet coded, or to try to avoid discontinuity problems in the derivative formulas. The f-d option might be a good capability to have; I'm not sure offhand if it is worth doing. On the coordinate transformation of course Wesley Allen is the guru.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/884#issuecomment-352449546
https://github.com/psi4/psi4/issues/884#issuecomment-352449546:979,Safety,avoid,avoid,979,"Moving the finite-difference code into Python seems like a good idea. I'm sure it could be much cleaner. For geometry optimization purposes, one only ever really needs cartesian Hessian -> internal coordinate Hessian. This capability is in the C++ and also now in the Python optking - including the gradient.derivative B term (with the derivative-B matrix elements computed analytically). I think that the challenge I ran into (long ago) in the referenced commented-out code in generating a cartesian Hessian using a finite-difference derivative B matrix for this term was in the Sayvetz/Eckart conditions. The rotations/translations are projected out (now by cdsalc) for the original, undisplaced geometry - but then will not be exactly so at the displaced geometries. I don't recall if my motivation for using finite-difference derivative-B elements at the time was for reduced computational expense, because the analytic derivative-B elements were not yet coded, or to try to avoid discontinuity problems in the derivative formulas. The f-d option might be a good capability to have; I'm not sure offhand if it is worth doing. On the coordinate transformation of course Wesley Allen is the guru.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/884#issuecomment-352449546
https://github.com/psi4/psi4/issues/884#issuecomment-353380437:282,Availability,fault,faults,282,"Yes, but that function is only ever called in a single spot AFAIK (`deriv.cc`). It could be better to shift that function signature to require the matrix factory on call. Most `CdSalcList` builds give a empty factory pointer to the constructor call which will cause some lovely seg faults anyway.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/884#issuecomment-353380437
https://github.com/psi4/psi4/issues/884#issuecomment-353685496:36,Usability,simpl,simply,36,"As a note: a great first step is to simply reproduce the C side procedure Python side. After that transformation we can add more complexities to the code. . -Daniel Smith; Sent from my iPhone. . > On Dec 22, 2017, at 17:31, Lori A. Burns <notifications@github.com> wrote:; > ; > Is something like the attached relevant to what you're talking about, @psi-rking ? form A and form B are two geometries for a system. If useful, I've got Fortran code for finding angles and rotating Hessian accordingly.; > ; > ; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/884#issuecomment-353685496
https://github.com/psi4/psi4/issues/884#issuecomment-358800415:104,Availability,down,down,104,"Lori, This is a problem that I have long wished to solve. Perhaps we can do it together. I've scribbled down some notes on the attached pdf. The primary problem is that the transformation to the cartesian hessian is not a linear one at non-stationary points. However, given the constraint that the energy is independent of rotations and translations, we don't have to do the extra displacements. The bad news is that it is not trivial. We need the 'derivative B matrix' or the second derivative of the external coordinates wrt cartesian displacements. Perhaps these are 0 for the COM coordinates, and your scheme will therefore work out of the box. But they are not for rotations. However, if we can find them or figure them out, then we can construct the Cartesian Hessian from a minimal number of displacements. Solving a 6x6 for each element is a good tradeoff I would say. The only real pain I forsee might be accommodating the linear molecules. In those cases one might be able to revert to not projecting the rotations at all as you planned. My notation is an inconsistent compromise between what I'm used to and the notation in WDA, JCP, 98, 1993. [cartesian hessians.pdf](https://github.com/psi4/psi4/files/1644627/cartesian.hessians.pdf)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/884#issuecomment-358800415
https://github.com/psi4/psi4/issues/884#issuecomment-358800415:298,Energy Efficiency,energy,energy,298,"Lori, This is a problem that I have long wished to solve. Perhaps we can do it together. I've scribbled down some notes on the attached pdf. The primary problem is that the transformation to the cartesian hessian is not a linear one at non-stationary points. However, given the constraint that the energy is independent of rotations and translations, we don't have to do the extra displacements. The bad news is that it is not trivial. We need the 'derivative B matrix' or the second derivative of the external coordinates wrt cartesian displacements. Perhaps these are 0 for the COM coordinates, and your scheme will therefore work out of the box. But they are not for rotations. However, if we can find them or figure them out, then we can construct the Cartesian Hessian from a minimal number of displacements. Solving a 6x6 for each element is a good tradeoff I would say. The only real pain I forsee might be accommodating the linear molecules. In those cases one might be able to revert to not projecting the rotations at all as you planned. My notation is an inconsistent compromise between what I'm used to and the notation in WDA, JCP, 98, 1993. [cartesian hessians.pdf](https://github.com/psi4/psi4/files/1644627/cartesian.hessians.pdf)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/884#issuecomment-358800415
https://github.com/psi4/psi4/issues/884#issuecomment-358814330:312,Energy Efficiency,energy,energy,312,"No rush. I've put off doing this for at least 10 years :), and I'm; swamped. I think I've convinced myself your scheme will work after all; (since the derivative B matrix for a COM displacement coordinate is zero).; However, one doesn't need 3N-3 gradients, because there are 3 rotational; degrees for which the energy is invariant. How many programs like C4; exploit this I couldn't say. Ultimately, might be nice to have it either; way. 3 more gradients, or else N_atoms^2 * small matrix operation. --; Dr. Rollin A. King; Professor and Chair of Chemistry; Bethel University; rking@bethel.edu. On Thu, Jan 18, 2018 at 5:08 PM, Lori A. Burns <notifications@github.com>; wrote:. > I'd like to, @psi-rking <https://github.com/psi-rking>, but I really; > don't dare take up anything else until after ACS. Actually seeking the; > minimal stuff to do before sending pyvib2 to general review.; >; > Thanks for the notes. It's a very user-knowledge view, but I'm not; > understanding your ""don't have to do the extra displacements, vs. the; > FD_PROJECT keyword from Cfour; > <http://slater.chemie.uni-mainz.de/cfour/index.php?n=Main.ListOfKeywordsInAlphabeticalOrder>.; > Different strategies?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/884#issuecomment-358812718>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/ADguTFqGHSAeT4cqjgXz_oF86JmR_ccMks5tL87bgaJpZM4REtHr>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/884#issuecomment-358814330
https://github.com/psi4/psi4/issues/884#issuecomment-359053844:143,Energy Efficiency,energy,energy,143,"@psi-rking, my concern is your insistence that the rot SALCs _aren't_ needed at non-stationary geometries (""3 rotational degrees for which the energy is invariant"", ""don't have to do the extra displacements"") vs. Stanton's insistence that they _are_ (""At a stationary point on the potential energy surface, both options will give equivalent harmonic force fields, but OFF [retains the rotational degrees of freedom] should be used at non-stationary points."" Since pyvib2 has to start from Cartesian Hessians (findif or anal.), I'm just trying to gauge what situations the former is valid for.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/884#issuecomment-359053844
https://github.com/psi4/psi4/issues/884#issuecomment-359053844:291,Energy Efficiency,energy,energy,291,"@psi-rking, my concern is your insistence that the rot SALCs _aren't_ needed at non-stationary geometries (""3 rotational degrees for which the energy is invariant"", ""don't have to do the extra displacements"") vs. Stanton's insistence that they _are_ (""At a stationary point on the potential energy surface, both options will give equivalent harmonic force fields, but OFF [retains the rotational degrees of freedom] should be used at non-stationary points."" Since pyvib2 has to start from Cartesian Hessians (findif or anal.), I'm just trying to gauge what situations the former is valid for.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/884#issuecomment-359053844
https://github.com/psi4/psi4/issues/884#issuecomment-359059459:262,Availability,robust,robustness,262,"I'm sure Stanton knows what he is talking about here, but I am not sure; there is a discrepancy between what he is saying and what I am saying.; Perhaps he never coded the minimal displacement approach, as we have never; coded it either. He may have decided the robustness and simplicity of +2/3; gradients was better than the complexity and complication of solving all; these little equations. I don't see a problem with you going ahead as you; are planning for pyvib2. We could revisit to try to reduce the; computational cost slightly at a later time. On Fri, Jan 19, 2018 at 12:43 PM, Lori A. Burns <notifications@github.com>; wrote:. > @psi-rking <https://github.com/psi-rking>, my concern is your insistence; > that the rot SALCs *aren't* needed at non-stationary geometries (""3; > rotational degrees for which the energy is invariant"", ""don't have to do; > the extra displacements"") vs. Stanton's insistence that they *are* (""At a; > stationary point on the potential energy surface, both options will give; > equivalent harmonic force fields, but OFF [retains the rotational degrees; > of freedom] should be used at non-stationary points."" Since pyvib2 has to; > start from Cartesian Hessians (findif or anal.), I'm just trying to gauge; > what situations the former is valid for.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/884#issuecomment-359053844>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/ADguTPrMzI8UDltN7yLjOYyEfycGPrnAks5tMOJIgaJpZM4REtHr>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/884#issuecomment-359059459
https://github.com/psi4/psi4/issues/884#issuecomment-359059459:498,Energy Efficiency,reduce,reduce,498,"I'm sure Stanton knows what he is talking about here, but I am not sure; there is a discrepancy between what he is saying and what I am saying.; Perhaps he never coded the minimal displacement approach, as we have never; coded it either. He may have decided the robustness and simplicity of +2/3; gradients was better than the complexity and complication of solving all; these little equations. I don't see a problem with you going ahead as you; are planning for pyvib2. We could revisit to try to reduce the; computational cost slightly at a later time. On Fri, Jan 19, 2018 at 12:43 PM, Lori A. Burns <notifications@github.com>; wrote:. > @psi-rking <https://github.com/psi-rking>, my concern is your insistence; > that the rot SALCs *aren't* needed at non-stationary geometries (""3; > rotational degrees for which the energy is invariant"", ""don't have to do; > the extra displacements"") vs. Stanton's insistence that they *are* (""At a; > stationary point on the potential energy surface, both options will give; > equivalent harmonic force fields, but OFF [retains the rotational degrees; > of freedom] should be used at non-stationary points."" Since pyvib2 has to; > start from Cartesian Hessians (findif or anal.), I'm just trying to gauge; > what situations the former is valid for.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/884#issuecomment-359053844>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/ADguTPrMzI8UDltN7yLjOYyEfycGPrnAks5tMOJIgaJpZM4REtHr>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/884#issuecomment-359059459
https://github.com/psi4/psi4/issues/884#issuecomment-359059459:821,Energy Efficiency,energy,energy,821,"I'm sure Stanton knows what he is talking about here, but I am not sure; there is a discrepancy between what he is saying and what I am saying.; Perhaps he never coded the minimal displacement approach, as we have never; coded it either. He may have decided the robustness and simplicity of +2/3; gradients was better than the complexity and complication of solving all; these little equations. I don't see a problem with you going ahead as you; are planning for pyvib2. We could revisit to try to reduce the; computational cost slightly at a later time. On Fri, Jan 19, 2018 at 12:43 PM, Lori A. Burns <notifications@github.com>; wrote:. > @psi-rking <https://github.com/psi-rking>, my concern is your insistence; > that the rot SALCs *aren't* needed at non-stationary geometries (""3; > rotational degrees for which the energy is invariant"", ""don't have to do; > the extra displacements"") vs. Stanton's insistence that they *are* (""At a; > stationary point on the potential energy surface, both options will give; > equivalent harmonic force fields, but OFF [retains the rotational degrees; > of freedom] should be used at non-stationary points."" Since pyvib2 has to; > start from Cartesian Hessians (findif or anal.), I'm just trying to gauge; > what situations the former is valid for.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/884#issuecomment-359053844>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/ADguTPrMzI8UDltN7yLjOYyEfycGPrnAks5tMOJIgaJpZM4REtHr>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/884#issuecomment-359059459
https://github.com/psi4/psi4/issues/884#issuecomment-359059459:975,Energy Efficiency,energy,energy,975,"I'm sure Stanton knows what he is talking about here, but I am not sure; there is a discrepancy between what he is saying and what I am saying.; Perhaps he never coded the minimal displacement approach, as we have never; coded it either. He may have decided the robustness and simplicity of +2/3; gradients was better than the complexity and complication of solving all; these little equations. I don't see a problem with you going ahead as you; are planning for pyvib2. We could revisit to try to reduce the; computational cost slightly at a later time. On Fri, Jan 19, 2018 at 12:43 PM, Lori A. Burns <notifications@github.com>; wrote:. > @psi-rking <https://github.com/psi-rking>, my concern is your insistence; > that the rot SALCs *aren't* needed at non-stationary geometries (""3; > rotational degrees for which the energy is invariant"", ""don't have to do; > the extra displacements"") vs. Stanton's insistence that they *are* (""At a; > stationary point on the potential energy surface, both options will give; > equivalent harmonic force fields, but OFF [retains the rotational degrees; > of freedom] should be used at non-stationary points."" Since pyvib2 has to; > start from Cartesian Hessians (findif or anal.), I'm just trying to gauge; > what situations the former is valid for.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/884#issuecomment-359053844>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/ADguTPrMzI8UDltN7yLjOYyEfycGPrnAks5tMOJIgaJpZM4REtHr>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/884#issuecomment-359059459
https://github.com/psi4/psi4/issues/884#issuecomment-359059459:277,Usability,simpl,simplicity,277,"I'm sure Stanton knows what he is talking about here, but I am not sure; there is a discrepancy between what he is saying and what I am saying.; Perhaps he never coded the minimal displacement approach, as we have never; coded it either. He may have decided the robustness and simplicity of +2/3; gradients was better than the complexity and complication of solving all; these little equations. I don't see a problem with you going ahead as you; are planning for pyvib2. We could revisit to try to reduce the; computational cost slightly at a later time. On Fri, Jan 19, 2018 at 12:43 PM, Lori A. Burns <notifications@github.com>; wrote:. > @psi-rking <https://github.com/psi-rking>, my concern is your insistence; > that the rot SALCs *aren't* needed at non-stationary geometries (""3; > rotational degrees for which the energy is invariant"", ""don't have to do; > the extra displacements"") vs. Stanton's insistence that they *are* (""At a; > stationary point on the potential energy surface, both options will give; > equivalent harmonic force fields, but OFF [retains the rotational degrees; > of freedom] should be used at non-stationary points."" Since pyvib2 has to; > start from Cartesian Hessians (findif or anal.), I'm just trying to gauge; > what situations the former is valid for.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/884#issuecomment-359053844>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/ADguTPrMzI8UDltN7yLjOYyEfycGPrnAks5tMOJIgaJpZM4REtHr>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/884#issuecomment-359059459
https://github.com/psi4/psi4/issues/884#issuecomment-359186675:341,Integrability,interface,interface,341,"Yep, which brings us (well, me) to the actual moving. I'm planning on making a PR _very_ early into the development process for this, because the interfacing requirements are murky, and I want to make sure that what I'm preparing is suitable for this ""variety of reasons"" we want this code moved. I'm assuming the limitations of the current interface will be clearer once I start playing with the code. Since I don't have to wrap my head around pointers and references for the rest of this issue, I'm hoping progress will be a bit faster.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/884#issuecomment-359186675
https://github.com/psi4/psi4/issues/884#issuecomment-359186675:425,Integrability,wrap,wrap,425,"Yep, which brings us (well, me) to the actual moving. I'm planning on making a PR _very_ early into the development process for this, because the interfacing requirements are murky, and I want to make sure that what I'm preparing is suitable for this ""variety of reasons"" we want this code moved. I'm assuming the limitations of the current interface will be clearer once I start playing with the code. Since I don't have to wrap my head around pointers and references for the rest of this issue, I'm hoping progress will be a bit faster.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/884#issuecomment-359186675
https://github.com/psi4/psi4/issues/884#issuecomment-359186675:359,Usability,clear,clearer,359,"Yep, which brings us (well, me) to the actual moving. I'm planning on making a PR _very_ early into the development process for this, because the interfacing requirements are murky, and I want to make sure that what I'm preparing is suitable for this ""variety of reasons"" we want this code moved. I'm assuming the limitations of the current interface will be clearer once I start playing with the code. Since I don't have to wrap my head around pointers and references for the rest of this issue, I'm hoping progress will be a bit faster.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/884#issuecomment-359186675
https://github.com/psi4/psi4/issues/884#issuecomment-360926158:293,Availability,down,down,293,"I currently plan to combine the three geometry generators into one because their logic is so similar. Could you be more specific about the interface changes and desired new features _after_ the C++ code is moved over? If combining the geometry generators is obviously going to break something down the road, best to find out now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/884#issuecomment-360926158
https://github.com/psi4/psi4/issues/884#issuecomment-360926158:139,Integrability,interface,interface,139,"I currently plan to combine the three geometry generators into one because their logic is so similar. Could you be more specific about the interface changes and desired new features _after_ the C++ code is moved over? If combining the geometry generators is obviously going to break something down the road, best to find out now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/884#issuecomment-360926158
https://github.com/psi4/psi4/issues/884#issuecomment-360926158:81,Testability,log,logic,81,"I currently plan to combine the three geometry generators into one because their logic is so similar. Could you be more specific about the interface changes and desired new features _after_ the C++ code is moved over? If combining the geometry generators is obviously going to break something down the road, best to find out now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/884#issuecomment-360926158
https://github.com/psi4/psi4/issues/884#issuecomment-360994628:387,Energy Efficiency,schedul,schedule,387,"@dgasmith I understand, though my intuition is that the values in our `geometries` dict should be dicts themselves that store properties at that geometry in addition to the geometry. Definitely agreed on porting the C-side code and worrying about the metadata implementation afterwards. I'll get up a PR when I have the geometry generator ported and tested. The coding isn't bad, but my schedule is.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/884#issuecomment-360994628
https://github.com/psi4/psi4/issues/884#issuecomment-360994628:350,Testability,test,tested,350,"@dgasmith I understand, though my intuition is that the values in our `geometries` dict should be dicts themselves that store properties at that geometry in addition to the geometry. Definitely agreed on porting the C-side code and worrying about the metadata implementation afterwards. I'll get up a PR when I have the geometry generator ported and tested. The coding isn't bad, but my schedule is.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/884#issuecomment-360994628
https://github.com/psi4/psi4/issues/884#issuecomment-360994628:34,Usability,intuit,intuition,34,"@dgasmith I understand, though my intuition is that the values in our `geometries` dict should be dicts themselves that store properties at that geometry in addition to the geometry. Definitely agreed on porting the C-side code and worrying about the metadata implementation afterwards. I'll get up a PR when I have the geometry generator ported and tested. The coding isn't bad, but my schedule is.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/884#issuecomment-360994628
https://github.com/psi4/psi4/issues/884#issuecomment-361005808:297,Testability,test,testing,297,"Yes, Molecule looks roughly [like this](https://github.com/loriab/psi4/blob/pyvib2/psi4/driver/qcdb/molparse/tofrom.py#L50-L99) (roughly b/c I've since killed off `fragment_types`). Works roundtrip among qcdb/psi4.core Molecules except for those that have been `extract_subsets`ed which I'm still testing. By the time pyvib2 is in, this will be pervasive in psi4 courtesy of the BasisSet handover from py-->C++, though not in the actual input-file `molecule {...}`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/884#issuecomment-361005808
https://github.com/psi4/psi4/issues/884#issuecomment-375922757:276,Testability,test,test,276,"For future reference: Under the pyvib2 changes, a gradient will be computed during the course of any hessian() call, to confirm the geometry is stationary. The findif code _just might_ benefit from reusing that. (I discovered this when trying to figure out why the fd-psimrcc test was getting a findif gradient in addition to a findif hessian. Now Mk-MRCC is just taunting me.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/884#issuecomment-375922757
https://github.com/psi4/psi4/issues/884#issuecomment-398727626:197,Testability,test,test,197,"Also for future reference: Although we'd like FINDIF to be compatible with arbitrary molecules, Psi or QCDB, the current state of QCDB makes that difficult. To paraphrase Lori,. > I think a findif test of a qcdb.Mol _at the moment_ would use a qcdb.Mol in `driver_findif.py` to get geometries and to combine the energies/gradients into a gradient/hessian, but would need to transform into a psi.4.core.Mol for the quantum computations. In 1.3dev-qcdb, the transformation to a Psi molecule won't be necessary. As such, I'll be holding off on the QCDB molecule tests until then.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/884#issuecomment-398727626
https://github.com/psi4/psi4/issues/884#issuecomment-398727626:559,Testability,test,tests,559,"Also for future reference: Although we'd like FINDIF to be compatible with arbitrary molecules, Psi or QCDB, the current state of QCDB makes that difficult. To paraphrase Lori,. > I think a findif test of a qcdb.Mol _at the moment_ would use a qcdb.Mol in `driver_findif.py` to get geometries and to combine the energies/gradients into a gradient/hessian, but would need to transform into a psi.4.core.Mol for the quantum computations. In 1.3dev-qcdb, the transformation to a Psi molecule won't be necessary. As such, I'll be holding off on the QCDB molecule tests until then.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/884#issuecomment-398727626
https://github.com/psi4/psi4/issues/888#issuecomment-352274531:656,Availability,avail,available,656,"I would love to see an algorithm for trying to locate the global minimum of the SCF energy, preferably an automated one. This feature would be especially useful for using Psi4 as a backend for _ab-initio_ MD applications. The random orbital rotation scheme (described in [10.1021/acs.jctc.7b00011](https://dx.doi.org/10.1021/acs.jctc.7b00011)) seems like a simple and sensible approach, as it can nudge the SCF out of saddle points, as well as local minima.; This method might also be useful as a last-resort option for cases where the SCF seems impossible to converge: random rotations could be applied to the initial guess. A reference implementation is available at https://github.com/ReiherGroup/OrbitalPerturbation. (under LGPL3, so no worries there)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-352274531
https://github.com/psi4/psi4/issues/888#issuecomment-352274531:84,Energy Efficiency,energy,energy,84,"I would love to see an algorithm for trying to locate the global minimum of the SCF energy, preferably an automated one. This feature would be especially useful for using Psi4 as a backend for _ab-initio_ MD applications. The random orbital rotation scheme (described in [10.1021/acs.jctc.7b00011](https://dx.doi.org/10.1021/acs.jctc.7b00011)) seems like a simple and sensible approach, as it can nudge the SCF out of saddle points, as well as local minima.; This method might also be useful as a last-resort option for cases where the SCF seems impossible to converge: random rotations could be applied to the initial guess. A reference implementation is available at https://github.com/ReiherGroup/OrbitalPerturbation. (under LGPL3, so no worries there)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-352274531
https://github.com/psi4/psi4/issues/888#issuecomment-352274531:357,Usability,simpl,simple,357,"I would love to see an algorithm for trying to locate the global minimum of the SCF energy, preferably an automated one. This feature would be especially useful for using Psi4 as a backend for _ab-initio_ MD applications. The random orbital rotation scheme (described in [10.1021/acs.jctc.7b00011](https://dx.doi.org/10.1021/acs.jctc.7b00011)) seems like a simple and sensible approach, as it can nudge the SCF out of saddle points, as well as local minima.; This method might also be useful as a last-resort option for cases where the SCF seems impossible to converge: random rotations could be applied to the initial guess. A reference implementation is available at https://github.com/ReiherGroup/OrbitalPerturbation. (under LGPL3, so no worries there)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-352274531
https://github.com/psi4/psi4/issues/888#issuecomment-352287278:329,Energy Efficiency,energy,energy,329,"@susilehtola Applying random perturbations to the initial guess (without having a converged SCF solution) was just pure conjecture from my part.; Of course in general, applying the random rotation scheme may lead to a number of different outcomes, the SCF procedure may converge to the same solution, a solution with a different energy or not converge at all.; So ideally, one would first obtain a converged SCF solution, then use the random rotations to generate a few (say, 3-15, user configurable) perturbed initial guesses from it, run SCF on all of them, and see if any of them converges to a lower minima.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-352287278
https://github.com/psi4/psi4/issues/888#issuecomment-352287278:487,Modifiability,config,configurable,487,"@susilehtola Applying random perturbations to the initial guess (without having a converged SCF solution) was just pure conjecture from my part.; Of course in general, applying the random rotation scheme may lead to a number of different outcomes, the SCF procedure may converge to the same solution, a solution with a different energy or not converge at all.; So ideally, one would first obtain a converged SCF solution, then use the random rotations to generate a few (say, 3-15, user configurable) perturbed initial guesses from it, run SCF on all of them, and see if any of them converges to a lower minima.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-352287278
https://github.com/psi4/psi4/issues/888#issuecomment-409789827:158,Integrability,rout,routine,158,"@andysim, any recollection of what system inspired the [brokensymmetry](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/proc.py#L1180-L1189) routine?. All, am I right that castup and brokensymmetry that are currently in `def scf_helper` should ultimately end up in the smartsolver? And that scf_helper should ultimately make only one call to scf? That is, all attempts at control logic are moving to `procrouting/scf/` (andy trick 2.0 from c-side and castup from scf_helper).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-409789827
https://github.com/psi4/psi4/issues/888#issuecomment-409789827:397,Testability,log,logic,397,"@andysim, any recollection of what system inspired the [brokensymmetry](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/proc.py#L1180-L1189) routine?. All, am I right that castup and brokensymmetry that are currently in `def scf_helper` should ultimately end up in the smartsolver? And that scf_helper should ultimately make only one call to scf? That is, all attempts at control logic are moving to `procrouting/scf/` (andy trick 2.0 from c-side and castup from scf_helper).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-409789827
https://github.com/psi4/psi4/issues/888#issuecomment-432221848:244,Performance,optimiz,optimization,244,"sorry, yes I use PBE with def2-SV(P) - with basis_guess I can get the first 2 or 3 iterations to converge but then it also fails SCF converge. without basis_guess it fails on first iteration. and like the other example HF converges fine a full optimization.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-432221848
https://github.com/psi4/psi4/issues/888#issuecomment-432294556:55,Performance,optimiz,optimization,55,"@TermeHansen so you are furthermore running a geometry optimization, not just SCF..?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-432294556
https://github.com/psi4/psi4/issues/888#issuecomment-432321135:93,Energy Efficiency,energy,energy,93,"yes I want to optimize this molecule, but even:; ```; set scf_type df; set BASIS def2-SV(P); energy('pbe'); ```; fail to converge.; with ""set basis_guess True"" it will converge energy (but not in optimization after 2-3 iterations); optimize('HF') converges fine",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-432321135
https://github.com/psi4/psi4/issues/888#issuecomment-432321135:177,Energy Efficiency,energy,energy,177,"yes I want to optimize this molecule, but even:; ```; set scf_type df; set BASIS def2-SV(P); energy('pbe'); ```; fail to converge.; with ""set basis_guess True"" it will converge energy (but not in optimization after 2-3 iterations); optimize('HF') converges fine",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-432321135
https://github.com/psi4/psi4/issues/888#issuecomment-432321135:14,Performance,optimiz,optimize,14,"yes I want to optimize this molecule, but even:; ```; set scf_type df; set BASIS def2-SV(P); energy('pbe'); ```; fail to converge.; with ""set basis_guess True"" it will converge energy (but not in optimization after 2-3 iterations); optimize('HF') converges fine",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-432321135
https://github.com/psi4/psi4/issues/888#issuecomment-432321135:196,Performance,optimiz,optimization,196,"yes I want to optimize this molecule, but even:; ```; set scf_type df; set BASIS def2-SV(P); energy('pbe'); ```; fail to converge.; with ""set basis_guess True"" it will converge energy (but not in optimization after 2-3 iterations); optimize('HF') converges fine",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-432321135
https://github.com/psi4/psi4/issues/888#issuecomment-432321135:232,Performance,optimiz,optimize,232,"yes I want to optimize this molecule, but even:; ```; set scf_type df; set BASIS def2-SV(P); energy('pbe'); ```; fail to converge.; with ""set basis_guess True"" it will converge energy (but not in optimization after 2-3 iterations); optimize('HF') converges fine",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-432321135
https://github.com/psi4/psi4/issues/888#issuecomment-432344773:192,Availability,down,down,192,"Something is ... not right. I'm looking into this now, but the basis guess gives a PBE energy of `-13988.27302270776818` Eh, both on my workstation and on our cluster ... trying to track this down now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-432344773
https://github.com/psi4/psi4/issues/888#issuecomment-432344773:87,Energy Efficiency,energy,energy,87,"Something is ... not right. I'm looking into this now, but the basis guess gives a PBE energy of `-13988.27302270776818` Eh, both on my workstation and on our cluster ... trying to track this down now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-432344773
https://github.com/psi4/psi4/issues/888#issuecomment-432353409:88,Energy Efficiency,energy,energy,88,"Jonathon has pointed out that def2-svp has an ECP but 3-21G does not, hence the massive energy difference, so no issue there. My bad.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-432353409
https://github.com/psi4/psi4/issues/888#issuecomment-432353839:35,Testability,test,tests,35,"Step 1 would be to try some of the tests. If you self-compiled, then `ctest -L smoke -j N` in `$objdir` will run N simultaneous tests from the ""smoke"" test suite (which has only 19 tests, should take about a minute on 4 threads), that will catch whether something is obviously wrong.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-432353839
https://github.com/psi4/psi4/issues/888#issuecomment-432353839:128,Testability,test,tests,128,"Step 1 would be to try some of the tests. If you self-compiled, then `ctest -L smoke -j N` in `$objdir` will run N simultaneous tests from the ""smoke"" test suite (which has only 19 tests, should take about a minute on 4 threads), that will catch whether something is obviously wrong.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-432353839
https://github.com/psi4/psi4/issues/888#issuecomment-432353839:151,Testability,test,test,151,"Step 1 would be to try some of the tests. If you self-compiled, then `ctest -L smoke -j N` in `$objdir` will run N simultaneous tests from the ""smoke"" test suite (which has only 19 tests, should take about a minute on 4 threads), that will catch whether something is obviously wrong.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-432353839
https://github.com/psi4/psi4/issues/888#issuecomment-432353839:181,Testability,test,tests,181,"Step 1 would be to try some of the tests. If you self-compiled, then `ctest -L smoke -j N` in `$objdir` will run N simultaneous tests from the ""smoke"" test suite (which has only 19 tests, should take about a minute on 4 threads), that will catch whether something is obviously wrong.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-432353839
https://github.com/psi4/psi4/issues/888#issuecomment-432532178:322,Integrability,message,message,322,"Thanks @PeterKraus, I'm pretty sure I was also trying all the guess algorithms but probably with the basis_guess also - annoying... -and that is probably the root of the problem -> basis_guess from non-ECP to ECP basis set. (@PeterKraus I have sent you a PM on forum.psicode.org on related/unrelated stuff, as there is no message option here on github?!?)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-432532178
https://github.com/psi4/psi4/issues/888#issuecomment-450748956:71,Energy Efficiency,energy,energy,71,"OK. I'm also not sure about the automatic root following bit... If the energy has converged, the Fock gradient *has to* be small, since it is the orbital gradient. This is if you use DIIS. If, however, you use orbital rotation techniques with gradient descent methods, this can happen in case the preconditioning isn't working properly. But even in such cases most chemical models don't cause problems; it's orbital-dependent models that tend to be hairy.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-450748956
https://github.com/psi4/psi4/issues/888#issuecomment-450748956:416,Integrability,depend,dependent,416,"OK. I'm also not sure about the automatic root following bit... If the energy has converged, the Fock gradient *has to* be small, since it is the orbital gradient. This is if you use DIIS. If, however, you use orbital rotation techniques with gradient descent methods, this can happen in case the preconditioning isn't working properly. But even in such cases most chemical models don't cause problems; it's orbital-dependent models that tend to be hairy.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-450748956
https://github.com/psi4/psi4/issues/888#issuecomment-509672801:189,Energy Efficiency,energy,energy,189,"Another problematic case:; ```; molecule {; 0 2; C 0.000000000000 0.000000000000 -0.645482303943; N 0.000000000000 0.000000000000 0.553149090326; }. set basis cc-pcvdz; set reference uhf . energy('scf'); ```. I can converge the SCF if I delay DIIS start until a few iterations in, but I cannot converge the SCF with the default settings.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-509672801
https://github.com/psi4/psi4/issues/888#issuecomment-512354183:388,Energy Efficiency,energy,energy,388,"Another small test case, from the W4-11 benchmark set of atomisation energies.; Converges with `SOSCF` just fine, but otherwise struggles. . ```; molecule mol {; 0 2; O 1.143943 0.075354 0.000000; O 0.000000 0.576945 0.000000; O -1.082114 -0.493872 0.000000; H -0.494634 -1.267419 0.000000; }. memory 2 GiB; set {; ints_tolerance 1e-12; basis aug-cc-pVTZ; # soscf true; reference uhf; }; energy('scf'); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-512354183
https://github.com/psi4/psi4/issues/888#issuecomment-512354183:14,Testability,test,test,14,"Another small test case, from the W4-11 benchmark set of atomisation energies.; Converges with `SOSCF` just fine, but otherwise struggles. . ```; molecule mol {; 0 2; O 1.143943 0.075354 0.000000; O 0.000000 0.576945 0.000000; O -1.082114 -0.493872 0.000000; H -0.494634 -1.267419 0.000000; }. memory 2 GiB; set {; ints_tolerance 1e-12; basis aug-cc-pVTZ; # soscf true; reference uhf; }; energy('scf'); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-512354183
https://github.com/psi4/psi4/issues/888#issuecomment-512354183:40,Testability,benchmark,benchmark,40,"Another small test case, from the W4-11 benchmark set of atomisation energies.; Converges with `SOSCF` just fine, but otherwise struggles. . ```; molecule mol {; 0 2; O 1.143943 0.075354 0.000000; O 0.000000 0.576945 0.000000; O -1.082114 -0.493872 0.000000; H -0.494634 -1.267419 0.000000; }. memory 2 GiB; set {; ints_tolerance 1e-12; basis aug-cc-pVTZ; # soscf true; reference uhf; }; energy('scf'); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-512354183
https://github.com/psi4/psi4/issues/888#issuecomment-565805641:132,Availability,avail,available,132,"The newest release of ADF implements something called ""MESA"", which has been developed in http://dx.doi.org/10.14288/1.0372885 (pdf available at https://www.scm.com/wp-content/uploads/Thesis-MiguelGarciaChavez.pdf). It's basically a combination of several individual acceleration methods (in ADF: ADIIS, fDIIS, LISTb, LISTf, LISTi, and SDIIS), and the way it works is simply by forming trials of all the methods, and picking the one for which the extrapolated Fock matrix results in the least change of the density from the input.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-565805641
https://github.com/psi4/psi4/issues/888#issuecomment-565805641:11,Deployability,release,release,11,"The newest release of ADF implements something called ""MESA"", which has been developed in http://dx.doi.org/10.14288/1.0372885 (pdf available at https://www.scm.com/wp-content/uploads/Thesis-MiguelGarciaChavez.pdf). It's basically a combination of several individual acceleration methods (in ADF: ADIIS, fDIIS, LISTb, LISTf, LISTi, and SDIIS), and the way it works is simply by forming trials of all the methods, and picking the one for which the extrapolated Fock matrix results in the least change of the density from the input.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-565805641
https://github.com/psi4/psi4/issues/888#issuecomment-565805641:368,Usability,simpl,simply,368,"The newest release of ADF implements something called ""MESA"", which has been developed in http://dx.doi.org/10.14288/1.0372885 (pdf available at https://www.scm.com/wp-content/uploads/Thesis-MiguelGarciaChavez.pdf). It's basically a combination of several individual acceleration methods (in ADF: ADIIS, fDIIS, LISTb, LISTf, LISTi, and SDIIS), and the way it works is simply by forming trials of all the methods, and picking the one for which the extrapolated Fock matrix results in the least change of the density from the input.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-565805641
https://github.com/psi4/psi4/issues/888#issuecomment-619287285:689,Energy Efficiency,energy,energy,689,[From forums.](http://forum.psicode.org/t/difficulties-converging-uks-energies/1757/2). ```; set_num_threads(8). molecule mol {; 1 2; C 0.81874699 0.86417234 0.18828612; H 1.46611361 1.71666767 0.34472141; C 1.36899712 -0.39052394 -0.06669818; H 2.44303637 -0.51186194 -0.11057444; C 0.53437860 -1.48849320 -0.27188804; H 0.96084825 -2.46156422 -0.47550749; C -0.84911561 -1.33050735 -0.21989643; H -1.49706942 -2.18186028 -0.37955321; C -1.39948546 -0.07603020 0.04043417; H -2.47268667 0.04490778 0.09338206; C -0.56529230 1.02140336 0.24227921; H -0.99255667 1.99366131 0.44625817; unit angstrom; }. set basis cc-pVDZ; set d_convergence 1e-9; set e_convergence 1e-9; set reference uks. energy('PBE0'); ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-619287285
https://github.com/psi4/psi4/issues/888#issuecomment-619347930:273,Energy Efficiency,energy,energy,273,`c-hooo` from the W4-17 database fails to converge in many basis sets; here pcseg-0 for example:; ```; molecule {; 0 2; O 1.14394 0.07535 0.00000; O 0.00000 0.57695 0.00000; O -1.08211 -0.49387 0.00000; H -0.49463 -1.26742 0.00000; }. set basis pcseg-0; set reference uhf; energy('scf'); ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-619347930
https://github.com/psi4/psi4/issues/888#issuecomment-869208826:58,Usability,clear,clear,58,"Unmarked as a good `new_dev` issue. It isn't sufficiently clear to me what exactly the smart SCF solver will do. As somebody who was _there_ when a first-year CCQC student tried to implement this, the list of possible tricks are just too big without a crystal clear list of what tricks to implement, and when.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-869208826
https://github.com/psi4/psi4/issues/888#issuecomment-869208826:260,Usability,clear,clear,260,"Unmarked as a good `new_dev` issue. It isn't sufficiently clear to me what exactly the smart SCF solver will do. As somebody who was _there_ when a first-year CCQC student tried to implement this, the list of possible tricks are just too big without a crystal clear list of what tricks to implement, and when.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-869208826
https://github.com/psi4/psi4/issues/888#issuecomment-869292864:382,Energy Efficiency,energy,energy,382,"So, this Ni(CO)3 calculation from #2209 currently fails in at least in STO-3G, def2-SVP, def2-QZVP and pcseg-0; ```; memory 8 gb. molecule {; Ni -0.593245 2.410696 -0.537392; C 0.947231 2.245835 0.358715; C -0.875896 1.446101 -2.018123; C -1.856239 3.533688 0.051349; O -1.061878 0.818754 -2.971879; O 1.943046 2.139891 0.937442; O -2.673940 4.257626 0.432247; }. set basis STO-3G; energy('pbe'); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-869292864
https://github.com/psi4/psi4/issues/888#issuecomment-869728286:76,Availability,error,error,76,"Here's another case where the energy stagnates but there's still large DIIS error. I don't really understand how this is possible.; ```; memory 8 gb. molecule {; Cr 0.47834117238031 0.45636471654971 0.09285402419506; O 1.55111099616190 1.09138241759496 -0.82993325785254; O -0.61796524632964 1.38903190796852 0.67056903439165; Cl -0.44331553251777 -1.03073713008178 -0.94412856229465; Cl 1.43568861030522 -0.43101191203143 1.65244876156047; }. set basis 6-31G**; set df_basis_scf def2-svp-jfit; set geom_maxiter 250. # Use a (75,302) quadrature grid; set dft_radial_points 75; set dft_spherical_points 302. my_dft = {; ""name"": ""my lda"",; ""x_functionals"": {""lda_x"": {}},; ""c_functionals"": {""lda_c_pw"": {}}; }; energy('scf', dft_functional=my_dft); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-869728286
https://github.com/psi4/psi4/issues/888#issuecomment-869728286:30,Energy Efficiency,energy,energy,30,"Here's another case where the energy stagnates but there's still large DIIS error. I don't really understand how this is possible.; ```; memory 8 gb. molecule {; Cr 0.47834117238031 0.45636471654971 0.09285402419506; O 1.55111099616190 1.09138241759496 -0.82993325785254; O -0.61796524632964 1.38903190796852 0.67056903439165; Cl -0.44331553251777 -1.03073713008178 -0.94412856229465; Cl 1.43568861030522 -0.43101191203143 1.65244876156047; }. set basis 6-31G**; set df_basis_scf def2-svp-jfit; set geom_maxiter 250. # Use a (75,302) quadrature grid; set dft_radial_points 75; set dft_spherical_points 302. my_dft = {; ""name"": ""my lda"",; ""x_functionals"": {""lda_x"": {}},; ""c_functionals"": {""lda_c_pw"": {}}; }; energy('scf', dft_functional=my_dft); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-869728286
https://github.com/psi4/psi4/issues/888#issuecomment-869728286:709,Energy Efficiency,energy,energy,709,"Here's another case where the energy stagnates but there's still large DIIS error. I don't really understand how this is possible.; ```; memory 8 gb. molecule {; Cr 0.47834117238031 0.45636471654971 0.09285402419506; O 1.55111099616190 1.09138241759496 -0.82993325785254; O -0.61796524632964 1.38903190796852 0.67056903439165; Cl -0.44331553251777 -1.03073713008178 -0.94412856229465; Cl 1.43568861030522 -0.43101191203143 1.65244876156047; }. set basis 6-31G**; set df_basis_scf def2-svp-jfit; set geom_maxiter 250. # Use a (75,302) quadrature grid; set dft_radial_points 75; set dft_spherical_points 302. my_dft = {; ""name"": ""my lda"",; ""x_functionals"": {""lda_x"": {}},; ""c_functionals"": {""lda_c_pw"": {}}; }; energy('scf', dft_functional=my_dft); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-869728286
https://github.com/psi4/psi4/issues/888#issuecomment-874494530:266,Availability,down,down,266,"Since the energy usually goes up from the SAD value in the first iteration, I would take the first update step from GDM; otherwise I'd use ADIIS/EDIIS+DIIS by default (see discussion in #2235). However, there should be also a setting that if the energy hasn't going down in N consecutive iterations (N=2 or N=3 are reasonable values) that the program should automatically switch to GDM.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-874494530
https://github.com/psi4/psi4/issues/888#issuecomment-874494530:99,Deployability,update,update,99,"Since the energy usually goes up from the SAD value in the first iteration, I would take the first update step from GDM; otherwise I'd use ADIIS/EDIIS+DIIS by default (see discussion in #2235). However, there should be also a setting that if the energy hasn't going down in N consecutive iterations (N=2 or N=3 are reasonable values) that the program should automatically switch to GDM.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-874494530
https://github.com/psi4/psi4/issues/888#issuecomment-874494530:10,Energy Efficiency,energy,energy,10,"Since the energy usually goes up from the SAD value in the first iteration, I would take the first update step from GDM; otherwise I'd use ADIIS/EDIIS+DIIS by default (see discussion in #2235). However, there should be also a setting that if the energy hasn't going down in N consecutive iterations (N=2 or N=3 are reasonable values) that the program should automatically switch to GDM.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-874494530
https://github.com/psi4/psi4/issues/888#issuecomment-874494530:246,Energy Efficiency,energy,energy,246,"Since the energy usually goes up from the SAD value in the first iteration, I would take the first update step from GDM; otherwise I'd use ADIIS/EDIIS+DIIS by default (see discussion in #2235). However, there should be also a setting that if the energy hasn't going down in N consecutive iterations (N=2 or N=3 are reasonable values) that the program should automatically switch to GDM.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-874494530
https://github.com/psi4/psi4/issues/888#issuecomment-874638315:272,Testability,stub,stubborn,272,"I do not know if this is possible in Psi4, but in Molpro and Orca one can (ab)use the CASSCF program to do HF calculations, and they tend to have very different convergence properties. I have recently found that doing this in Molpro 2015 really helps converging some very stubborn ROHF calculations.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-874638315
https://github.com/psi4/psi4/issues/888#issuecomment-879347426:79,Deployability,configurat,configurations,79,"One smart feature would be to check whether the energy decreases when changing configurations. This could be a configurable setting in the solver. That is, when the Aufbau principle would lead to changing the configuration, the program should check whether the new occupations lead to a lower energy with the current orbitals than the old occupations with the same orbitals. Although this requires one additional energy evaluation, it probably saves quite a bit of iterations by preventing switches to less-good occupations.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-879347426
https://github.com/psi4/psi4/issues/888#issuecomment-879347426:209,Deployability,configurat,configuration,209,"One smart feature would be to check whether the energy decreases when changing configurations. This could be a configurable setting in the solver. That is, when the Aufbau principle would lead to changing the configuration, the program should check whether the new occupations lead to a lower energy with the current orbitals than the old occupations with the same orbitals. Although this requires one additional energy evaluation, it probably saves quite a bit of iterations by preventing switches to less-good occupations.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-879347426
https://github.com/psi4/psi4/issues/888#issuecomment-879347426:48,Energy Efficiency,energy,energy,48,"One smart feature would be to check whether the energy decreases when changing configurations. This could be a configurable setting in the solver. That is, when the Aufbau principle would lead to changing the configuration, the program should check whether the new occupations lead to a lower energy with the current orbitals than the old occupations with the same orbitals. Although this requires one additional energy evaluation, it probably saves quite a bit of iterations by preventing switches to less-good occupations.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-879347426
https://github.com/psi4/psi4/issues/888#issuecomment-879347426:293,Energy Efficiency,energy,energy,293,"One smart feature would be to check whether the energy decreases when changing configurations. This could be a configurable setting in the solver. That is, when the Aufbau principle would lead to changing the configuration, the program should check whether the new occupations lead to a lower energy with the current orbitals than the old occupations with the same orbitals. Although this requires one additional energy evaluation, it probably saves quite a bit of iterations by preventing switches to less-good occupations.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-879347426
https://github.com/psi4/psi4/issues/888#issuecomment-879347426:413,Energy Efficiency,energy,energy,413,"One smart feature would be to check whether the energy decreases when changing configurations. This could be a configurable setting in the solver. That is, when the Aufbau principle would lead to changing the configuration, the program should check whether the new occupations lead to a lower energy with the current orbitals than the old occupations with the same orbitals. Although this requires one additional energy evaluation, it probably saves quite a bit of iterations by preventing switches to less-good occupations.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-879347426
https://github.com/psi4/psi4/issues/888#issuecomment-879347426:79,Modifiability,config,configurations,79,"One smart feature would be to check whether the energy decreases when changing configurations. This could be a configurable setting in the solver. That is, when the Aufbau principle would lead to changing the configuration, the program should check whether the new occupations lead to a lower energy with the current orbitals than the old occupations with the same orbitals. Although this requires one additional energy evaluation, it probably saves quite a bit of iterations by preventing switches to less-good occupations.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-879347426
https://github.com/psi4/psi4/issues/888#issuecomment-879347426:111,Modifiability,config,configurable,111,"One smart feature would be to check whether the energy decreases when changing configurations. This could be a configurable setting in the solver. That is, when the Aufbau principle would lead to changing the configuration, the program should check whether the new occupations lead to a lower energy with the current orbitals than the old occupations with the same orbitals. Although this requires one additional energy evaluation, it probably saves quite a bit of iterations by preventing switches to less-good occupations.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-879347426
https://github.com/psi4/psi4/issues/888#issuecomment-879347426:209,Modifiability,config,configuration,209,"One smart feature would be to check whether the energy decreases when changing configurations. This could be a configurable setting in the solver. That is, when the Aufbau principle would lead to changing the configuration, the program should check whether the new occupations lead to a lower energy with the current orbitals than the old occupations with the same orbitals. Although this requires one additional energy evaluation, it probably saves quite a bit of iterations by preventing switches to less-good occupations.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-879347426
https://github.com/psi4/psi4/issues/888#issuecomment-1221579303:872,Energy Efficiency,energy,energy,872,"As per Slack conversation (@JonathonMisiewicz) here is a tough example where finding the lowest ROHF solution is challenging:; [psi4_recalc1.log](https://github.com/psi4/psi4/files/9389493/psi4_recalc1.log). Psi4 goes into an oscillation far from the lowest solution and never converges anywhere. This cannot be solved by any amount of damping, I have tried 99% (!!) and it still oscillated, which is strange.; [psi4_recalc1_damp.log](https://github.com/psi4/psi4/files/9389567/psi4_recalc1_damp.log). I think I managed to get convergence to an unstable solution with a combination of SOSCF and 90% damping, but I don't have the exact parameters on hand. The set of known (but possibly unstable) HF solutions found via Molpro 2015 for this geometry/basis are:; ```; -190.0232936; -190.0354652; -189.8590420; -190.0766531; -190.1033611; -189.9953074; ```; The lowest known energy is -190.103361091599, and here are its orbital energies and other details:; ```; !RHF STATE 1.1 Energy -190.103361091599; Nuclear energy 39.33359221; One-electron energy -337.18531326; Two-electron energy 107.74835997; Virial quotient -1.00211661; !RHF STATE 1.1 Dipole moment 51.33626033 0.20512167 -0.68287708; Dipole moment /Debye 130.47521252 0.52133315 -1.73558673. Orbital energies:. 1.1 2.1 3.1 4.1 5.1 6.1 7.1 8.1 9.1 10.1; -20.681373 -20.622776 -11.413662 -1.456025 -1.307146 -0.981471 -0.775682 -0.689298 -0.660029 -0.644029. 11.1 12.1 13.1 14.1 15.1 16.1; -0.579569 -0.536873 -0.172695 -0.647339 -0.168304 0.026142; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-1221579303
https://github.com/psi4/psi4/issues/888#issuecomment-1221579303:975,Energy Efficiency,Energy,Energy,975,"As per Slack conversation (@JonathonMisiewicz) here is a tough example where finding the lowest ROHF solution is challenging:; [psi4_recalc1.log](https://github.com/psi4/psi4/files/9389493/psi4_recalc1.log). Psi4 goes into an oscillation far from the lowest solution and never converges anywhere. This cannot be solved by any amount of damping, I have tried 99% (!!) and it still oscillated, which is strange.; [psi4_recalc1_damp.log](https://github.com/psi4/psi4/files/9389567/psi4_recalc1_damp.log). I think I managed to get convergence to an unstable solution with a combination of SOSCF and 90% damping, but I don't have the exact parameters on hand. The set of known (but possibly unstable) HF solutions found via Molpro 2015 for this geometry/basis are:; ```; -190.0232936; -190.0354652; -189.8590420; -190.0766531; -190.1033611; -189.9953074; ```; The lowest known energy is -190.103361091599, and here are its orbital energies and other details:; ```; !RHF STATE 1.1 Energy -190.103361091599; Nuclear energy 39.33359221; One-electron energy -337.18531326; Two-electron energy 107.74835997; Virial quotient -1.00211661; !RHF STATE 1.1 Dipole moment 51.33626033 0.20512167 -0.68287708; Dipole moment /Debye 130.47521252 0.52133315 -1.73558673. Orbital energies:. 1.1 2.1 3.1 4.1 5.1 6.1 7.1 8.1 9.1 10.1; -20.681373 -20.622776 -11.413662 -1.456025 -1.307146 -0.981471 -0.775682 -0.689298 -0.660029 -0.644029. 11.1 12.1 13.1 14.1 15.1 16.1; -0.579569 -0.536873 -0.172695 -0.647339 -0.168304 0.026142; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-1221579303
https://github.com/psi4/psi4/issues/888#issuecomment-1221579303:1009,Energy Efficiency,energy,energy,1009,"As per Slack conversation (@JonathonMisiewicz) here is a tough example where finding the lowest ROHF solution is challenging:; [psi4_recalc1.log](https://github.com/psi4/psi4/files/9389493/psi4_recalc1.log). Psi4 goes into an oscillation far from the lowest solution and never converges anywhere. This cannot be solved by any amount of damping, I have tried 99% (!!) and it still oscillated, which is strange.; [psi4_recalc1_damp.log](https://github.com/psi4/psi4/files/9389567/psi4_recalc1_damp.log). I think I managed to get convergence to an unstable solution with a combination of SOSCF and 90% damping, but I don't have the exact parameters on hand. The set of known (but possibly unstable) HF solutions found via Molpro 2015 for this geometry/basis are:; ```; -190.0232936; -190.0354652; -189.8590420; -190.0766531; -190.1033611; -189.9953074; ```; The lowest known energy is -190.103361091599, and here are its orbital energies and other details:; ```; !RHF STATE 1.1 Energy -190.103361091599; Nuclear energy 39.33359221; One-electron energy -337.18531326; Two-electron energy 107.74835997; Virial quotient -1.00211661; !RHF STATE 1.1 Dipole moment 51.33626033 0.20512167 -0.68287708; Dipole moment /Debye 130.47521252 0.52133315 -1.73558673. Orbital energies:. 1.1 2.1 3.1 4.1 5.1 6.1 7.1 8.1 9.1 10.1; -20.681373 -20.622776 -11.413662 -1.456025 -1.307146 -0.981471 -0.775682 -0.689298 -0.660029 -0.644029. 11.1 12.1 13.1 14.1 15.1 16.1; -0.579569 -0.536873 -0.172695 -0.647339 -0.168304 0.026142; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-1221579303
https://github.com/psi4/psi4/issues/888#issuecomment-1221579303:1042,Energy Efficiency,energy,energy,1042,"As per Slack conversation (@JonathonMisiewicz) here is a tough example where finding the lowest ROHF solution is challenging:; [psi4_recalc1.log](https://github.com/psi4/psi4/files/9389493/psi4_recalc1.log). Psi4 goes into an oscillation far from the lowest solution and never converges anywhere. This cannot be solved by any amount of damping, I have tried 99% (!!) and it still oscillated, which is strange.; [psi4_recalc1_damp.log](https://github.com/psi4/psi4/files/9389567/psi4_recalc1_damp.log). I think I managed to get convergence to an unstable solution with a combination of SOSCF and 90% damping, but I don't have the exact parameters on hand. The set of known (but possibly unstable) HF solutions found via Molpro 2015 for this geometry/basis are:; ```; -190.0232936; -190.0354652; -189.8590420; -190.0766531; -190.1033611; -189.9953074; ```; The lowest known energy is -190.103361091599, and here are its orbital energies and other details:; ```; !RHF STATE 1.1 Energy -190.103361091599; Nuclear energy 39.33359221; One-electron energy -337.18531326; Two-electron energy 107.74835997; Virial quotient -1.00211661; !RHF STATE 1.1 Dipole moment 51.33626033 0.20512167 -0.68287708; Dipole moment /Debye 130.47521252 0.52133315 -1.73558673. Orbital energies:. 1.1 2.1 3.1 4.1 5.1 6.1 7.1 8.1 9.1 10.1; -20.681373 -20.622776 -11.413662 -1.456025 -1.307146 -0.981471 -0.775682 -0.689298 -0.660029 -0.644029. 11.1 12.1 13.1 14.1 15.1 16.1; -0.579569 -0.536873 -0.172695 -0.647339 -0.168304 0.026142; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-1221579303
https://github.com/psi4/psi4/issues/888#issuecomment-1221579303:1077,Energy Efficiency,energy,energy,1077,"As per Slack conversation (@JonathonMisiewicz) here is a tough example where finding the lowest ROHF solution is challenging:; [psi4_recalc1.log](https://github.com/psi4/psi4/files/9389493/psi4_recalc1.log). Psi4 goes into an oscillation far from the lowest solution and never converges anywhere. This cannot be solved by any amount of damping, I have tried 99% (!!) and it still oscillated, which is strange.; [psi4_recalc1_damp.log](https://github.com/psi4/psi4/files/9389567/psi4_recalc1_damp.log). I think I managed to get convergence to an unstable solution with a combination of SOSCF and 90% damping, but I don't have the exact parameters on hand. The set of known (but possibly unstable) HF solutions found via Molpro 2015 for this geometry/basis are:; ```; -190.0232936; -190.0354652; -189.8590420; -190.0766531; -190.1033611; -189.9953074; ```; The lowest known energy is -190.103361091599, and here are its orbital energies and other details:; ```; !RHF STATE 1.1 Energy -190.103361091599; Nuclear energy 39.33359221; One-electron energy -337.18531326; Two-electron energy 107.74835997; Virial quotient -1.00211661; !RHF STATE 1.1 Dipole moment 51.33626033 0.20512167 -0.68287708; Dipole moment /Debye 130.47521252 0.52133315 -1.73558673. Orbital energies:. 1.1 2.1 3.1 4.1 5.1 6.1 7.1 8.1 9.1 10.1; -20.681373 -20.622776 -11.413662 -1.456025 -1.307146 -0.981471 -0.775682 -0.689298 -0.660029 -0.644029. 11.1 12.1 13.1 14.1 15.1 16.1; -0.579569 -0.536873 -0.172695 -0.647339 -0.168304 0.026142; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-1221579303
https://github.com/psi4/psi4/issues/888#issuecomment-1221579303:141,Testability,log,log,141,"As per Slack conversation (@JonathonMisiewicz) here is a tough example where finding the lowest ROHF solution is challenging:; [psi4_recalc1.log](https://github.com/psi4/psi4/files/9389493/psi4_recalc1.log). Psi4 goes into an oscillation far from the lowest solution and never converges anywhere. This cannot be solved by any amount of damping, I have tried 99% (!!) and it still oscillated, which is strange.; [psi4_recalc1_damp.log](https://github.com/psi4/psi4/files/9389567/psi4_recalc1_damp.log). I think I managed to get convergence to an unstable solution with a combination of SOSCF and 90% damping, but I don't have the exact parameters on hand. The set of known (but possibly unstable) HF solutions found via Molpro 2015 for this geometry/basis are:; ```; -190.0232936; -190.0354652; -189.8590420; -190.0766531; -190.1033611; -189.9953074; ```; The lowest known energy is -190.103361091599, and here are its orbital energies and other details:; ```; !RHF STATE 1.1 Energy -190.103361091599; Nuclear energy 39.33359221; One-electron energy -337.18531326; Two-electron energy 107.74835997; Virial quotient -1.00211661; !RHF STATE 1.1 Dipole moment 51.33626033 0.20512167 -0.68287708; Dipole moment /Debye 130.47521252 0.52133315 -1.73558673. Orbital energies:. 1.1 2.1 3.1 4.1 5.1 6.1 7.1 8.1 9.1 10.1; -20.681373 -20.622776 -11.413662 -1.456025 -1.307146 -0.981471 -0.775682 -0.689298 -0.660029 -0.644029. 11.1 12.1 13.1 14.1 15.1 16.1; -0.579569 -0.536873 -0.172695 -0.647339 -0.168304 0.026142; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-1221579303
https://github.com/psi4/psi4/issues/888#issuecomment-1221579303:202,Testability,log,log,202,"As per Slack conversation (@JonathonMisiewicz) here is a tough example where finding the lowest ROHF solution is challenging:; [psi4_recalc1.log](https://github.com/psi4/psi4/files/9389493/psi4_recalc1.log). Psi4 goes into an oscillation far from the lowest solution and never converges anywhere. This cannot be solved by any amount of damping, I have tried 99% (!!) and it still oscillated, which is strange.; [psi4_recalc1_damp.log](https://github.com/psi4/psi4/files/9389567/psi4_recalc1_damp.log). I think I managed to get convergence to an unstable solution with a combination of SOSCF and 90% damping, but I don't have the exact parameters on hand. The set of known (but possibly unstable) HF solutions found via Molpro 2015 for this geometry/basis are:; ```; -190.0232936; -190.0354652; -189.8590420; -190.0766531; -190.1033611; -189.9953074; ```; The lowest known energy is -190.103361091599, and here are its orbital energies and other details:; ```; !RHF STATE 1.1 Energy -190.103361091599; Nuclear energy 39.33359221; One-electron energy -337.18531326; Two-electron energy 107.74835997; Virial quotient -1.00211661; !RHF STATE 1.1 Dipole moment 51.33626033 0.20512167 -0.68287708; Dipole moment /Debye 130.47521252 0.52133315 -1.73558673. Orbital energies:. 1.1 2.1 3.1 4.1 5.1 6.1 7.1 8.1 9.1 10.1; -20.681373 -20.622776 -11.413662 -1.456025 -1.307146 -0.981471 -0.775682 -0.689298 -0.660029 -0.644029. 11.1 12.1 13.1 14.1 15.1 16.1; -0.579569 -0.536873 -0.172695 -0.647339 -0.168304 0.026142; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-1221579303
https://github.com/psi4/psi4/issues/888#issuecomment-1221579303:430,Testability,log,log,430,"As per Slack conversation (@JonathonMisiewicz) here is a tough example where finding the lowest ROHF solution is challenging:; [psi4_recalc1.log](https://github.com/psi4/psi4/files/9389493/psi4_recalc1.log). Psi4 goes into an oscillation far from the lowest solution and never converges anywhere. This cannot be solved by any amount of damping, I have tried 99% (!!) and it still oscillated, which is strange.; [psi4_recalc1_damp.log](https://github.com/psi4/psi4/files/9389567/psi4_recalc1_damp.log). I think I managed to get convergence to an unstable solution with a combination of SOSCF and 90% damping, but I don't have the exact parameters on hand. The set of known (but possibly unstable) HF solutions found via Molpro 2015 for this geometry/basis are:; ```; -190.0232936; -190.0354652; -189.8590420; -190.0766531; -190.1033611; -189.9953074; ```; The lowest known energy is -190.103361091599, and here are its orbital energies and other details:; ```; !RHF STATE 1.1 Energy -190.103361091599; Nuclear energy 39.33359221; One-electron energy -337.18531326; Two-electron energy 107.74835997; Virial quotient -1.00211661; !RHF STATE 1.1 Dipole moment 51.33626033 0.20512167 -0.68287708; Dipole moment /Debye 130.47521252 0.52133315 -1.73558673. Orbital energies:. 1.1 2.1 3.1 4.1 5.1 6.1 7.1 8.1 9.1 10.1; -20.681373 -20.622776 -11.413662 -1.456025 -1.307146 -0.981471 -0.775682 -0.689298 -0.660029 -0.644029. 11.1 12.1 13.1 14.1 15.1 16.1; -0.579569 -0.536873 -0.172695 -0.647339 -0.168304 0.026142; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-1221579303
https://github.com/psi4/psi4/issues/888#issuecomment-1221579303:496,Testability,log,log,496,"As per Slack conversation (@JonathonMisiewicz) here is a tough example where finding the lowest ROHF solution is challenging:; [psi4_recalc1.log](https://github.com/psi4/psi4/files/9389493/psi4_recalc1.log). Psi4 goes into an oscillation far from the lowest solution and never converges anywhere. This cannot be solved by any amount of damping, I have tried 99% (!!) and it still oscillated, which is strange.; [psi4_recalc1_damp.log](https://github.com/psi4/psi4/files/9389567/psi4_recalc1_damp.log). I think I managed to get convergence to an unstable solution with a combination of SOSCF and 90% damping, but I don't have the exact parameters on hand. The set of known (but possibly unstable) HF solutions found via Molpro 2015 for this geometry/basis are:; ```; -190.0232936; -190.0354652; -189.8590420; -190.0766531; -190.1033611; -189.9953074; ```; The lowest known energy is -190.103361091599, and here are its orbital energies and other details:; ```; !RHF STATE 1.1 Energy -190.103361091599; Nuclear energy 39.33359221; One-electron energy -337.18531326; Two-electron energy 107.74835997; Virial quotient -1.00211661; !RHF STATE 1.1 Dipole moment 51.33626033 0.20512167 -0.68287708; Dipole moment /Debye 130.47521252 0.52133315 -1.73558673. Orbital energies:. 1.1 2.1 3.1 4.1 5.1 6.1 7.1 8.1 9.1 10.1; -20.681373 -20.622776 -11.413662 -1.456025 -1.307146 -0.981471 -0.775682 -0.689298 -0.660029 -0.644029. 11.1 12.1 13.1 14.1 15.1 16.1; -0.579569 -0.536873 -0.172695 -0.647339 -0.168304 0.026142; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-1221579303
https://github.com/psi4/psi4/issues/890#issuecomment-356218786:53,Availability,error,error,53,"When I compile psi4 with simint, using gcc v6.3. The error appears during the simint compilation part.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-356218786
https://github.com/psi4/psi4/issues/890#issuecomment-356726977:10,Availability,error,error,10,"Different error, same module, so I'll add to this issue. Building simint afresh through psi4 on Mac w/`AppleClang 7.0.0.7000176` yields . ```; [ 0%] Building C object simint/CMakeFiles/simint.dir/ostei/gen/ostei_s_s_s_s.c.o; In file included from /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external/simint/ostei/gen/ostei_s_s_s_s.c:1:; In file included from /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external/simint/boys/boys.h:3:; In file included from /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external/simint/vectorization/vectorization.h:11:; /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external/simint/vectorization/intrinsics_avx.h:110:26: warning: ; implicit declaration of function '_mm256_set_m128d' is invalid in C99 [-Wimplicit-function-declaration]; __m256d t3 = _mm256_set_m128d( _mm256_extractf128_pd(t2, 0) + _mm256_extractf128_pd(t2, 1),; ^; /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external/simint/vectorization/intrinsics_avx.h:110:21: error: ; initializing '__m256d' (vector of 4 'double' values) with an expression of incompatible type 'int'; __m256d t3 = _mm256_set_m128d( _mm256_extractf128_pd(t2, 0) + _mm256_extractf128_pd(t2, 1),; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external/simint/vectorization/intrinsics_avx.h:165:21: error: ; initializing '__m256d' (vector of 4 'double' values) with an expression of incompatible type 'int'; __m256d t3 = _mm256_set_m128d( _mm256_extractf128_pd(t2, 0) + _mm256_extractf128_pd(t2, 1),; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 1 warning and 2 errors",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-356726977
https://github.com/psi4/psi4/issues/890#issuecomment-356726977:1252,Availability,error,error,1252,"same module, so I'll add to this issue. Building simint afresh through psi4 on Mac w/`AppleClang 7.0.0.7000176` yields . ```; [ 0%] Building C object simint/CMakeFiles/simint.dir/ostei/gen/ostei_s_s_s_s.c.o; In file included from /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external/simint/ostei/gen/ostei_s_s_s_s.c:1:; In file included from /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external/simint/boys/boys.h:3:; In file included from /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external/simint/vectorization/vectorization.h:11:; /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external/simint/vectorization/intrinsics_avx.h:110:26: warning: ; implicit declaration of function '_mm256_set_m128d' is invalid in C99 [-Wimplicit-function-declaration]; __m256d t3 = _mm256_set_m128d( _mm256_extractf128_pd(t2, 0) + _mm256_extractf128_pd(t2, 1),; ^; /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external/simint/vectorization/intrinsics_avx.h:110:21: error: ; initializing '__m256d' (vector of 4 'double' values) with an expression of incompatible type 'int'; __m256d t3 = _mm256_set_m128d( _mm256_extractf128_pd(t2, 0) + _mm256_extractf128_pd(t2, 1),; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external/simint/vectorization/intrinsics_avx.h:165:21: error: ; initializing '__m256d' (vector of 4 'double' values) with an expression of incompatible type 'int'; __m256d t3 = _mm256_set_m128d( _mm256_extractf128_pd(t2, 0) + _mm256_extractf128_pd(t2, 1),; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 1 warning and 2 errors generated.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-356726977
https://github.com/psi4/psi4/issues/890#issuecomment-356726977:1694,Availability,error,error,1694,"same module, so I'll add to this issue. Building simint afresh through psi4 on Mac w/`AppleClang 7.0.0.7000176` yields . ```; [ 0%] Building C object simint/CMakeFiles/simint.dir/ostei/gen/ostei_s_s_s_s.c.o; In file included from /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external/simint/ostei/gen/ostei_s_s_s_s.c:1:; In file included from /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external/simint/boys/boys.h:3:; In file included from /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external/simint/vectorization/vectorization.h:11:; /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external/simint/vectorization/intrinsics_avx.h:110:26: warning: ; implicit declaration of function '_mm256_set_m128d' is invalid in C99 [-Wimplicit-function-declaration]; __m256d t3 = _mm256_set_m128d( _mm256_extractf128_pd(t2, 0) + _mm256_extractf128_pd(t2, 1),; ^; /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external/simint/vectorization/intrinsics_avx.h:110:21: error: ; initializing '__m256d' (vector of 4 'double' values) with an expression of incompatible type 'int'; __m256d t3 = _mm256_set_m128d( _mm256_extractf128_pd(t2, 0) + _mm256_extractf128_pd(t2, 1),; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external/simint/vectorization/intrinsics_avx.h:165:21: error: ; initializing '__m256d' (vector of 4 'double' values) with an expression of incompatible type 'int'; __m256d t3 = _mm256_set_m128d( _mm256_extractf128_pd(t2, 0) + _mm256_extractf128_pd(t2, 1),; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 1 warning and 2 errors generated.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-356726977
https://github.com/psi4/psi4/issues/890#issuecomment-356726977:1995,Availability,error,errors,1995,"same module, so I'll add to this issue. Building simint afresh through psi4 on Mac w/`AppleClang 7.0.0.7000176` yields . ```; [ 0%] Building C object simint/CMakeFiles/simint.dir/ostei/gen/ostei_s_s_s_s.c.o; In file included from /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external/simint/ostei/gen/ostei_s_s_s_s.c:1:; In file included from /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external/simint/boys/boys.h:3:; In file included from /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external/simint/vectorization/vectorization.h:11:; /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external/simint/vectorization/intrinsics_avx.h:110:26: warning: ; implicit declaration of function '_mm256_set_m128d' is invalid in C99 [-Wimplicit-function-declaration]; __m256d t3 = _mm256_set_m128d( _mm256_extractf128_pd(t2, 0) + _mm256_extractf128_pd(t2, 1),; ^; /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external/simint/vectorization/intrinsics_avx.h:110:21: error: ; initializing '__m256d' (vector of 4 'double' values) with an expression of incompatible type 'int'; __m256d t3 = _mm256_set_m128d( _mm256_extractf128_pd(t2, 0) + _mm256_extractf128_pd(t2, 1),; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external/simint/vectorization/intrinsics_avx.h:165:21: error: ; initializing '__m256d' (vector of 4 'double' values) with an expression of incompatible type 'int'; __m256d t3 = _mm256_set_m128d( _mm256_extractf128_pd(t2, 0) + _mm256_extractf128_pd(t2, 1),; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 1 warning and 2 errors generated.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-356726977
https://github.com/psi4/psi4/issues/890#issuecomment-356756916:328,Testability,test,tests,328,"@andysim is correct. @loriab Could you check your `avxintrin.h` file and see if it has `_mm256_set_m128d`? My version of clang does (but is 9.0.0 (clang-900.0.39.2)). For the original issue: I will see if I can reproduce, but nothing is jumping out at me as being incorrect. That file should only be included when compiling the tests in simint, but the paths all look correct.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-356756916
https://github.com/psi4/psi4/issues/890#issuecomment-356761851:148,Availability,error,error,148,"Of the dozen or so headers on my computer by that name, only the ones supplied by the conda clang compilers (which I'm not using) have that set. So error makes some sense. Only thing I can think of is I haven't done a simint build on this machine since the default switched from `sse` to `avx`, though, as that happened 9 months ago, shows that I've been _really_ linux or mac-psinet bound of late. ##### psi4 cmake; ```; -- Setting (unspecified) option SIMINT_VECTOR: avx; ```. ##### simint cmake; ```; -- Maximum AM: 6; -- Maximum Derivative: 0; -- CMAKE_C_FLAGS: -march=native; -- CMAKE_CXX_FLAGS: -stdlib=libc++ -march=native; -- SIMINT_C_INCLUDES: /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external;/Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external-build/stage; -- SIMINT_C_FLAGS: -std=c99;-Wall;-Wextra;-pedantic;-Wno-unused-parameter;-Wno-unused-variable;-mavx; -- SIMINT_LINK_FLAGS: ; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-356761851
https://github.com/psi4/psi4/issues/890#issuecomment-356761851:974,Modifiability,variab,variable,974,"Of the dozen or so headers on my computer by that name, only the ones supplied by the conda clang compilers (which I'm not using) have that set. So error makes some sense. Only thing I can think of is I haven't done a simint build on this machine since the default switched from `sse` to `avx`, though, as that happened 9 months ago, shows that I've been _really_ linux or mac-psinet bound of late. ##### psi4 cmake; ```; -- Setting (unspecified) option SIMINT_VECTOR: avx; ```. ##### simint cmake; ```; -- Maximum AM: 6; -- Maximum Derivative: 0; -- CMAKE_C_FLAGS: -march=native; -- CMAKE_CXX_FLAGS: -stdlib=libc++ -march=native; -- SIMINT_C_INCLUDES: /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external;/Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external-build/stage; -- SIMINT_C_FLAGS: -std=c99;-Wall;-Wextra;-pedantic;-Wno-unused-parameter;-Wno-unused-variable;-mavx; -- SIMINT_LINK_FLAGS: ; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-356761851
https://github.com/psi4/psi4/issues/890#issuecomment-356782049:778,Availability,error,error,778,"Switching to `sse` on my Mac, simint builds fine through p4. But then in mints, . ```; [ 10%] Building CXX object src/psi4/libmints/CMakeFiles/mints.dir/integral.cc.o; In file included from /Users/loriab/linux/psihub/hrw-temp/psi4/src/psi4/libmints/integral.cc:55:; In file included from /Users/loriab/linux/psihub/hrw-temp/psi4/src/psi4/libmints/siminteri.h:34:; In file included from /Users/loriab/linux/miniconda3/envs/p4dev36/include/simint/simint.h:4:; In file included from /Users/loriab/linux/miniconda3/envs/p4dev36/include/simint/ostei/ostei_config.h:3:; In file included from /Users/loriab/linux/miniconda3/envs/p4dev36/include/simint/vectorization/vectorization.h:11:; /Users/loriab/linux/miniconda3/envs/p4dev36/include/simint/vectorization/intrinsics_avx.h:110:26: error: use of undeclared identifier; '_mm256_set_m128d'; __m256d t3 = _mm256_set_m128d( _mm256_extractf128_pd(t2, 0) + _mm256_extractf128_pd(t2, 1),; ^; /Users/loriab/linux/miniconda3/envs/p4dev36/include/simint/vectorization/intrinsics_avx.h:165:26: error: use of undeclared identifier; '_mm256_set_m128d'; __m256d t3 = _mm256_set_m128d( _mm256_extractf128_pd(t2, 0) + _mm256_extractf128_pd(t2, 1),; ^; In file included from /Users/loriab/linux/psihub/hrw-temp/psi4/src/psi4/libmints/integral.cc:55:; ```. Should those be hidden for `sse`? Or is my header set just too old for words and the problem should be considered wholly on my side. Sorry to have disrupted your issue, @hokru.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-356782049
https://github.com/psi4/psi4/issues/890#issuecomment-356782049:1029,Availability,error,error,1029,"Switching to `sse` on my Mac, simint builds fine through p4. But then in mints, . ```; [ 10%] Building CXX object src/psi4/libmints/CMakeFiles/mints.dir/integral.cc.o; In file included from /Users/loriab/linux/psihub/hrw-temp/psi4/src/psi4/libmints/integral.cc:55:; In file included from /Users/loriab/linux/psihub/hrw-temp/psi4/src/psi4/libmints/siminteri.h:34:; In file included from /Users/loriab/linux/miniconda3/envs/p4dev36/include/simint/simint.h:4:; In file included from /Users/loriab/linux/miniconda3/envs/p4dev36/include/simint/ostei/ostei_config.h:3:; In file included from /Users/loriab/linux/miniconda3/envs/p4dev36/include/simint/vectorization/vectorization.h:11:; /Users/loriab/linux/miniconda3/envs/p4dev36/include/simint/vectorization/intrinsics_avx.h:110:26: error: use of undeclared identifier; '_mm256_set_m128d'; __m256d t3 = _mm256_set_m128d( _mm256_extractf128_pd(t2, 0) + _mm256_extractf128_pd(t2, 1),; ^; /Users/loriab/linux/miniconda3/envs/p4dev36/include/simint/vectorization/intrinsics_avx.h:165:26: error: use of undeclared identifier; '_mm256_set_m128d'; __m256d t3 = _mm256_set_m128d( _mm256_extractf128_pd(t2, 0) + _mm256_extractf128_pd(t2, 1),; ^; In file included from /Users/loriab/linux/psihub/hrw-temp/psi4/src/psi4/libmints/integral.cc:55:; ```. Should those be hidden for `sse`? Or is my header set just too old for words and the problem should be considered wholly on my side. Sorry to have disrupted your issue, @hokru.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-356782049
https://github.com/psi4/psi4/issues/890#issuecomment-356792009:13,Security,access,access,13,"I don't have access to check right now, but I don't think `intrinsics_avx.h` should ever be included for SSE builds.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-356792009
https://github.com/psi4/psi4/issues/890#issuecomment-356793933:19,Deployability,install,installed,19,"@andysim Yes. The 'installed' simint library should have a file `include/simint/vectorization/vector_config.h`. There is also one under the (simint) build directory under `stage`. This should define which vectorization you are using. @loriab Maybe you didn't completely clear out the build directory before switching the vectorization type? I still think that would work, though.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-356793933
https://github.com/psi4/psi4/issues/890#issuecomment-356793933:270,Usability,clear,clear,270,"@andysim Yes. The 'installed' simint library should have a file `include/simint/vectorization/vector_config.h`. There is also one under the (simint) build directory under `stage`. This should define which vectorization you are using. @loriab Maybe you didn't completely clear out the build directory before switching the vectorization type? I still think that would work, though.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-356793933
https://github.com/psi4/psi4/issues/890#issuecomment-356840364:326,Deployability,install,installed,326,"Diagnosis: simint is sly (or, you can't defeat the header search). Completely fresh build dir, configured from the start to build simint locally with sse (`-DCMAKE_DISABLE_FIND_PACKAGE_simint=ON -DSIMINT_VECTOR=sse`). Consequently every signal in sight (see below) is set to local build and sse. _But_, there's still a simint installed alongside libint, etc. and that simint is avxfma. And it is those simint headers that show up in `./psi4-core-prefix/src/psi4-core-build/src/psi4/libmints/CMakeFiles/mints.dir/CXX.includecache` and are presumably defining SIMINT_AVX and thus triggering the offending `intrinsics_avx.h` inclusion. In the end, the same trouble as with multiple pybind11's – CMake can't trump native C++ header-seeking, so one has to keep any interferences out of sight. Resolved, sorry for the wild goose chase. ```; #pragma once; #define SIMINT_SSE; ```. ```; >>> grep -ir simint_VECTOR .; ./CMakeCache.txt:SIMINT_VECTOR:STRING=sse; ./external/upstream/simint/CMakeFiles/simint_external.dir/build.make:	cd /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external-build && /Users/loriab/linux/miniconda3/envs/p4dev36/bin/cmake -DCMAKE_INSTALL_PREFIX=/usr/local/psi4 -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++ -DCMAKE_INSTALL_LIBDIR=lib -DCMAKE_INSTALL_INCLUDEDIR=include -DBUILD_SHARED_LIBS=OFF -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DSIMINT_STANDALONE=OFF -DENABLE_TESTS=OFF -DSIMINT_VECTOR=sse -DSIMINT_MAXAM=6 -C/Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/tmp/simint_external-cache-Release.cmake ""-GUnix Makefiles"" /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external; ./external/upstream/simint/simint_external-prefix/src/simint_external-build/CMakeCache.txt:SIMINT_VECTOR:STRING=sse; ./external/upstream/simint/simint_external-prefix/src/simint_external-build/simi",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-356840364
https://github.com/psi4/psi4/issues/890#issuecomment-356840364:1257,Deployability,Release,Release,1257,"side libint, etc. and that simint is avxfma. And it is those simint headers that show up in `./psi4-core-prefix/src/psi4-core-build/src/psi4/libmints/CMakeFiles/mints.dir/CXX.includecache` and are presumably defining SIMINT_AVX and thus triggering the offending `intrinsics_avx.h` inclusion. In the end, the same trouble as with multiple pybind11's – CMake can't trump native C++ header-seeking, so one has to keep any interferences out of sight. Resolved, sorry for the wild goose chase. ```; #pragma once; #define SIMINT_SSE; ```. ```; >>> grep -ir simint_VECTOR .; ./CMakeCache.txt:SIMINT_VECTOR:STRING=sse; ./external/upstream/simint/CMakeFiles/simint_external.dir/build.make:	cd /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external-build && /Users/loriab/linux/miniconda3/envs/p4dev36/bin/cmake -DCMAKE_INSTALL_PREFIX=/usr/local/psi4 -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++ -DCMAKE_INSTALL_LIBDIR=lib -DCMAKE_INSTALL_INCLUDEDIR=include -DBUILD_SHARED_LIBS=OFF -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DSIMINT_STANDALONE=OFF -DENABLE_TESTS=OFF -DSIMINT_VECTOR=sse -DSIMINT_MAXAM=6 -C/Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/tmp/simint_external-cache-Release.cmake ""-GUnix Makefiles"" /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external; ./external/upstream/simint/simint_external-prefix/src/simint_external-build/CMakeCache.txt:SIMINT_VECTOR:STRING=sse; ./external/upstream/simint/simint_external-prefix/src/simint_external-build/simintConfig.cmake:set(simint_VECTOR sse); ./external/upstream/simint/simint_external-prefix/tmp/simint_external-cfgcmd.txt:cmd='/Users/loriab/linux/miniconda3/envs/p4dev36/bin/cmake;-DCMAKE_INSTALL_PREFIX=/usr/local/psi4;-DCMAKE_BUILD_TYPE=Release;-DCMAKE_C_COMPILER=/usr/bin/clang;-DCMAKE_CXX_COMPILER=/usr/bin/clang++;-DCMAKE_INSTALL_LIBDIR=l",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-356840364
https://github.com/psi4/psi4/issues/890#issuecomment-356840364:1659,Deployability,Release,Release,1659,"side libint, etc. and that simint is avxfma. And it is those simint headers that show up in `./psi4-core-prefix/src/psi4-core-build/src/psi4/libmints/CMakeFiles/mints.dir/CXX.includecache` and are presumably defining SIMINT_AVX and thus triggering the offending `intrinsics_avx.h` inclusion. In the end, the same trouble as with multiple pybind11's – CMake can't trump native C++ header-seeking, so one has to keep any interferences out of sight. Resolved, sorry for the wild goose chase. ```; #pragma once; #define SIMINT_SSE; ```. ```; >>> grep -ir simint_VECTOR .; ./CMakeCache.txt:SIMINT_VECTOR:STRING=sse; ./external/upstream/simint/CMakeFiles/simint_external.dir/build.make:	cd /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external-build && /Users/loriab/linux/miniconda3/envs/p4dev36/bin/cmake -DCMAKE_INSTALL_PREFIX=/usr/local/psi4 -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++ -DCMAKE_INSTALL_LIBDIR=lib -DCMAKE_INSTALL_INCLUDEDIR=include -DBUILD_SHARED_LIBS=OFF -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DSIMINT_STANDALONE=OFF -DENABLE_TESTS=OFF -DSIMINT_VECTOR=sse -DSIMINT_MAXAM=6 -C/Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/tmp/simint_external-cache-Release.cmake ""-GUnix Makefiles"" /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external; ./external/upstream/simint/simint_external-prefix/src/simint_external-build/CMakeCache.txt:SIMINT_VECTOR:STRING=sse; ./external/upstream/simint/simint_external-prefix/src/simint_external-build/simintConfig.cmake:set(simint_VECTOR sse); ./external/upstream/simint/simint_external-prefix/tmp/simint_external-cfgcmd.txt:cmd='/Users/loriab/linux/miniconda3/envs/p4dev36/bin/cmake;-DCMAKE_INSTALL_PREFIX=/usr/local/psi4;-DCMAKE_BUILD_TYPE=Release;-DCMAKE_C_COMPILER=/usr/bin/clang;-DCMAKE_CXX_COMPILER=/usr/bin/clang++;-DCMAKE_INSTALL_LIBDIR=l",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-356840364
https://github.com/psi4/psi4/issues/890#issuecomment-356840364:2238,Deployability,Release,Release,2238,"```; >>> grep -ir simint_VECTOR .; ./CMakeCache.txt:SIMINT_VECTOR:STRING=sse; ./external/upstream/simint/CMakeFiles/simint_external.dir/build.make:	cd /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external-build && /Users/loriab/linux/miniconda3/envs/p4dev36/bin/cmake -DCMAKE_INSTALL_PREFIX=/usr/local/psi4 -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++ -DCMAKE_INSTALL_LIBDIR=lib -DCMAKE_INSTALL_INCLUDEDIR=include -DBUILD_SHARED_LIBS=OFF -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DSIMINT_STANDALONE=OFF -DENABLE_TESTS=OFF -DSIMINT_VECTOR=sse -DSIMINT_MAXAM=6 -C/Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/tmp/simint_external-cache-Release.cmake ""-GUnix Makefiles"" /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external; ./external/upstream/simint/simint_external-prefix/src/simint_external-build/CMakeCache.txt:SIMINT_VECTOR:STRING=sse; ./external/upstream/simint/simint_external-prefix/src/simint_external-build/simintConfig.cmake:set(simint_VECTOR sse); ./external/upstream/simint/simint_external-prefix/tmp/simint_external-cfgcmd.txt:cmd='/Users/loriab/linux/miniconda3/envs/p4dev36/bin/cmake;-DCMAKE_INSTALL_PREFIX=/usr/local/psi4;-DCMAKE_BUILD_TYPE=Release;-DCMAKE_C_COMPILER=/usr/bin/clang;-DCMAKE_CXX_COMPILER=/usr/bin/clang++;-DCMAKE_INSTALL_LIBDIR=lib;-DCMAKE_INSTALL_INCLUDEDIR=include;-DBUILD_SHARED_LIBS=OFF;-DCMAKE_POSITION_INDEPENDENT_CODE=ON;-DSIMINT_STANDALONE=OFF;-DENABLE_TESTS=OFF;-DSIMINT_VECTOR=sse;-DSIMINT_MAXAM=6;-C/Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/tmp/simint_external-cache-$<CONFIG>.cmake;-GUnix Makefiles;/Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external'; ./stage/usr/local/psi4/share/cmake/simint/simintConfig.cmake:set(simint_VECTOR sse); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-356840364
https://github.com/psi4/psi4/issues/890#issuecomment-356840364:95,Modifiability,config,configured,95,"Diagnosis: simint is sly (or, you can't defeat the header search). Completely fresh build dir, configured from the start to build simint locally with sse (`-DCMAKE_DISABLE_FIND_PACKAGE_simint=ON -DSIMINT_VECTOR=sse`). Consequently every signal in sight (see below) is set to local build and sse. _But_, there's still a simint installed alongside libint, etc. and that simint is avxfma. And it is those simint headers that show up in `./psi4-core-prefix/src/psi4-core-build/src/psi4/libmints/CMakeFiles/mints.dir/CXX.includecache` and are presumably defining SIMINT_AVX and thus triggering the offending `intrinsics_avx.h` inclusion. In the end, the same trouble as with multiple pybind11's – CMake can't trump native C++ header-seeking, so one has to keep any interferences out of sight. Resolved, sorry for the wild goose chase. ```; #pragma once; #define SIMINT_SSE; ```. ```; >>> grep -ir simint_VECTOR .; ./CMakeCache.txt:SIMINT_VECTOR:STRING=sse; ./external/upstream/simint/CMakeFiles/simint_external.dir/build.make:	cd /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external-build && /Users/loriab/linux/miniconda3/envs/p4dev36/bin/cmake -DCMAKE_INSTALL_PREFIX=/usr/local/psi4 -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++ -DCMAKE_INSTALL_LIBDIR=lib -DCMAKE_INSTALL_INCLUDEDIR=include -DBUILD_SHARED_LIBS=OFF -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DSIMINT_STANDALONE=OFF -DENABLE_TESTS=OFF -DSIMINT_VECTOR=sse -DSIMINT_MAXAM=6 -C/Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/tmp/simint_external-cache-Release.cmake ""-GUnix Makefiles"" /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external; ./external/upstream/simint/simint_external-prefix/src/simint_external-build/CMakeCache.txt:SIMINT_VECTOR:STRING=sse; ./external/upstream/simint/simint_external-prefix/src/simint_external-build/simi",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-356840364
https://github.com/psi4/psi4/issues/890#issuecomment-356840364:2642,Modifiability,CONFIG,CONFIG,2642,"```; >>> grep -ir simint_VECTOR .; ./CMakeCache.txt:SIMINT_VECTOR:STRING=sse; ./external/upstream/simint/CMakeFiles/simint_external.dir/build.make:	cd /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external-build && /Users/loriab/linux/miniconda3/envs/p4dev36/bin/cmake -DCMAKE_INSTALL_PREFIX=/usr/local/psi4 -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++ -DCMAKE_INSTALL_LIBDIR=lib -DCMAKE_INSTALL_INCLUDEDIR=include -DBUILD_SHARED_LIBS=OFF -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DSIMINT_STANDALONE=OFF -DENABLE_TESTS=OFF -DSIMINT_VECTOR=sse -DSIMINT_MAXAM=6 -C/Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/tmp/simint_external-cache-Release.cmake ""-GUnix Makefiles"" /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external; ./external/upstream/simint/simint_external-prefix/src/simint_external-build/CMakeCache.txt:SIMINT_VECTOR:STRING=sse; ./external/upstream/simint/simint_external-prefix/src/simint_external-build/simintConfig.cmake:set(simint_VECTOR sse); ./external/upstream/simint/simint_external-prefix/tmp/simint_external-cfgcmd.txt:cmd='/Users/loriab/linux/miniconda3/envs/p4dev36/bin/cmake;-DCMAKE_INSTALL_PREFIX=/usr/local/psi4;-DCMAKE_BUILD_TYPE=Release;-DCMAKE_C_COMPILER=/usr/bin/clang;-DCMAKE_CXX_COMPILER=/usr/bin/clang++;-DCMAKE_INSTALL_LIBDIR=lib;-DCMAKE_INSTALL_INCLUDEDIR=include;-DBUILD_SHARED_LIBS=OFF;-DCMAKE_POSITION_INDEPENDENT_CODE=ON;-DSIMINT_STANDALONE=OFF;-DENABLE_TESTS=OFF;-DSIMINT_VECTOR=sse;-DSIMINT_MAXAM=6;-C/Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/tmp/simint_external-cache-$<CONFIG>.cmake;-GUnix Makefiles;/Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external'; ./stage/usr/local/psi4/share/cmake/simint/simintConfig.cmake:set(simint_VECTOR sse); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-356840364
https://github.com/psi4/psi4/issues/890#issuecomment-356840364:1653,Performance,cache,cache-Release,1653,"side libint, etc. and that simint is avxfma. And it is those simint headers that show up in `./psi4-core-prefix/src/psi4-core-build/src/psi4/libmints/CMakeFiles/mints.dir/CXX.includecache` and are presumably defining SIMINT_AVX and thus triggering the offending `intrinsics_avx.h` inclusion. In the end, the same trouble as with multiple pybind11's – CMake can't trump native C++ header-seeking, so one has to keep any interferences out of sight. Resolved, sorry for the wild goose chase. ```; #pragma once; #define SIMINT_SSE; ```. ```; >>> grep -ir simint_VECTOR .; ./CMakeCache.txt:SIMINT_VECTOR:STRING=sse; ./external/upstream/simint/CMakeFiles/simint_external.dir/build.make:	cd /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external-build && /Users/loriab/linux/miniconda3/envs/p4dev36/bin/cmake -DCMAKE_INSTALL_PREFIX=/usr/local/psi4 -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++ -DCMAKE_INSTALL_LIBDIR=lib -DCMAKE_INSTALL_INCLUDEDIR=include -DBUILD_SHARED_LIBS=OFF -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DSIMINT_STANDALONE=OFF -DENABLE_TESTS=OFF -DSIMINT_VECTOR=sse -DSIMINT_MAXAM=6 -C/Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/tmp/simint_external-cache-Release.cmake ""-GUnix Makefiles"" /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external; ./external/upstream/simint/simint_external-prefix/src/simint_external-build/CMakeCache.txt:SIMINT_VECTOR:STRING=sse; ./external/upstream/simint/simint_external-prefix/src/simint_external-build/simintConfig.cmake:set(simint_VECTOR sse); ./external/upstream/simint/simint_external-prefix/tmp/simint_external-cfgcmd.txt:cmd='/Users/loriab/linux/miniconda3/envs/p4dev36/bin/cmake;-DCMAKE_INSTALL_PREFIX=/usr/local/psi4;-DCMAKE_BUILD_TYPE=Release;-DCMAKE_C_COMPILER=/usr/bin/clang;-DCMAKE_CXX_COMPILER=/usr/bin/clang++;-DCMAKE_INSTALL_LIBDIR=l",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-356840364
https://github.com/psi4/psi4/issues/890#issuecomment-356840364:2634,Performance,cache,cache,2634,"```; >>> grep -ir simint_VECTOR .; ./CMakeCache.txt:SIMINT_VECTOR:STRING=sse; ./external/upstream/simint/CMakeFiles/simint_external.dir/build.make:	cd /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external-build && /Users/loriab/linux/miniconda3/envs/p4dev36/bin/cmake -DCMAKE_INSTALL_PREFIX=/usr/local/psi4 -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++ -DCMAKE_INSTALL_LIBDIR=lib -DCMAKE_INSTALL_INCLUDEDIR=include -DBUILD_SHARED_LIBS=OFF -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DSIMINT_STANDALONE=OFF -DENABLE_TESTS=OFF -DSIMINT_VECTOR=sse -DSIMINT_MAXAM=6 -C/Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/tmp/simint_external-cache-Release.cmake ""-GUnix Makefiles"" /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external; ./external/upstream/simint/simint_external-prefix/src/simint_external-build/CMakeCache.txt:SIMINT_VECTOR:STRING=sse; ./external/upstream/simint/simint_external-prefix/src/simint_external-build/simintConfig.cmake:set(simint_VECTOR sse); ./external/upstream/simint/simint_external-prefix/tmp/simint_external-cfgcmd.txt:cmd='/Users/loriab/linux/miniconda3/envs/p4dev36/bin/cmake;-DCMAKE_INSTALL_PREFIX=/usr/local/psi4;-DCMAKE_BUILD_TYPE=Release;-DCMAKE_C_COMPILER=/usr/bin/clang;-DCMAKE_CXX_COMPILER=/usr/bin/clang++;-DCMAKE_INSTALL_LIBDIR=lib;-DCMAKE_INSTALL_INCLUDEDIR=include;-DBUILD_SHARED_LIBS=OFF;-DCMAKE_POSITION_INDEPENDENT_CODE=ON;-DSIMINT_STANDALONE=OFF;-DENABLE_TESTS=OFF;-DSIMINT_VECTOR=sse;-DSIMINT_MAXAM=6;-C/Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/tmp/simint_external-cache-$<CONFIG>.cmake;-GUnix Makefiles;/Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external'; ./stage/usr/local/psi4/share/cmake/simint/simintConfig.cmake:set(simint_VECTOR sse); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-356840364
https://github.com/psi4/psi4/issues/890#issuecomment-356928723:87,Availability,error,error,87,"CMake is still back magic too me, but i just tried again from scratch and actually the error occurs when making psi4-core. The Simint library is installed before and cmake finds it in the correct path. ```; [ 10%] Building CXX object src/psi4/libmints/CMakeFiles/mints.dir/gshell.cc.o; [ 10%] Building CXX object src/psi4/libmints/CMakeFiles/mints.dir/integral.cc.o; In file included from /home/kruse/Progs/psi4.custom/objdir2/stage/home/kruse/Progs/psi4.deleteme/include/simint/vectorization/intrinsics_avx.h:7:0,; from /home/kruse/Progs/psi4.custom/objdir2/stage/home/kruse/Progs/psi4.deleteme/include/simint/vectorization/vectorization.h:11,; from /home/kruse/Progs/psi4.custom/objdir2/stage/home/kruse/Progs/psi4.deleteme/include/simint/ostei/ostei_config.h:3,; from /home/kruse/Progs/psi4.custom/objdir2/stage/home/kruse/Progs/psi4.deleteme/include/simint/simint.h:4,; from /home/kruse/Progs/psi4.custom/psi4/src/psi4/libmints/siminteri.h:34,; from /home/kruse/Progs/psi4.custom/psi4/src/psi4/libmints/integral.cc:55:; /home/kruse/Progs/psi4.custom/objdir2/stage/home/kruse/Progs/psi4.deleteme/include/simint/vectorization/intrinsics_sse.h:7:35: fatal error: simint/cpp_restrict.hpp: No such file or directory; #include ""simint/cpp_restrict.hpp""; ^; compilation terminated.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-356928723
https://github.com/psi4/psi4/issues/890#issuecomment-356928723:1157,Availability,error,error,1157,"CMake is still back magic too me, but i just tried again from scratch and actually the error occurs when making psi4-core. The Simint library is installed before and cmake finds it in the correct path. ```; [ 10%] Building CXX object src/psi4/libmints/CMakeFiles/mints.dir/gshell.cc.o; [ 10%] Building CXX object src/psi4/libmints/CMakeFiles/mints.dir/integral.cc.o; In file included from /home/kruse/Progs/psi4.custom/objdir2/stage/home/kruse/Progs/psi4.deleteme/include/simint/vectorization/intrinsics_avx.h:7:0,; from /home/kruse/Progs/psi4.custom/objdir2/stage/home/kruse/Progs/psi4.deleteme/include/simint/vectorization/vectorization.h:11,; from /home/kruse/Progs/psi4.custom/objdir2/stage/home/kruse/Progs/psi4.deleteme/include/simint/ostei/ostei_config.h:3,; from /home/kruse/Progs/psi4.custom/objdir2/stage/home/kruse/Progs/psi4.deleteme/include/simint/simint.h:4,; from /home/kruse/Progs/psi4.custom/psi4/src/psi4/libmints/siminteri.h:34,; from /home/kruse/Progs/psi4.custom/psi4/src/psi4/libmints/integral.cc:55:; /home/kruse/Progs/psi4.custom/objdir2/stage/home/kruse/Progs/psi4.deleteme/include/simint/vectorization/intrinsics_sse.h:7:35: fatal error: simint/cpp_restrict.hpp: No such file or directory; #include ""simint/cpp_restrict.hpp""; ^; compilation terminated.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-356928723
https://github.com/psi4/psi4/issues/890#issuecomment-356928723:145,Deployability,install,installed,145,"CMake is still back magic too me, but i just tried again from scratch and actually the error occurs when making psi4-core. The Simint library is installed before and cmake finds it in the correct path. ```; [ 10%] Building CXX object src/psi4/libmints/CMakeFiles/mints.dir/gshell.cc.o; [ 10%] Building CXX object src/psi4/libmints/CMakeFiles/mints.dir/integral.cc.o; In file included from /home/kruse/Progs/psi4.custom/objdir2/stage/home/kruse/Progs/psi4.deleteme/include/simint/vectorization/intrinsics_avx.h:7:0,; from /home/kruse/Progs/psi4.custom/objdir2/stage/home/kruse/Progs/psi4.deleteme/include/simint/vectorization/vectorization.h:11,; from /home/kruse/Progs/psi4.custom/objdir2/stage/home/kruse/Progs/psi4.deleteme/include/simint/ostei/ostei_config.h:3,; from /home/kruse/Progs/psi4.custom/objdir2/stage/home/kruse/Progs/psi4.deleteme/include/simint/simint.h:4,; from /home/kruse/Progs/psi4.custom/psi4/src/psi4/libmints/siminteri.h:34,; from /home/kruse/Progs/psi4.custom/psi4/src/psi4/libmints/integral.cc:55:; /home/kruse/Progs/psi4.custom/objdir2/stage/home/kruse/Progs/psi4.deleteme/include/simint/vectorization/intrinsics_sse.h:7:35: fatal error: simint/cpp_restrict.hpp: No such file or directory; #include ""simint/cpp_restrict.hpp""; ^; compilation terminated.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-356928723
https://github.com/psi4/psi4/issues/890#issuecomment-357041900:31,Deployability,install,installing,31,"Hmm, I see the same – `.h` are installing but `.hpp` are not. @bennybp, [this line](https://github.com/simint-chem/simint-generator/blob/master/skel/simint/CMakeLists.txt#L92) doesn't seem to be functioning. The simint conda package has the cpp_restrict.hpp file installed, though, so once upon a time it worked. ```; >>> (objdir) find . -name ""cpp_restrict.hpp""; ./external/upstream/simint/simint_external-prefix/src/simint_external/simint/cpp_restrict.hpp; >>> (objdir) ll ./external/upstream/simint/simint_external-prefix/src/simint_external/simint; total 64; -rw-r--r-- 1 loriab staff 2451 Mar 22 2017 CMakeLists.txt; drwxr-xr-x 8 loriab staff 272 Mar 22 2017 boys; -rw-r--r-- 1 loriab staff 332 Jan 24 2017 constants.h; -rw-r--r-- 1 loriab staff 165 Mar 22 2017 cpp_restrict.hpp; drwxr-xr-x 14 loriab staff 476 Mar 28 2017 ostei; drwxr-xr-x 8 loriab staff 272 Mar 22 2017 shell; -rw-r--r-- 1 loriab staff 138 Feb 2 2017 simint.h; -rw-r--r-- 1 loriab staff 831 Feb 2 2017 simint_eri.c; -rw-r--r-- 1 loriab staff 1927 Mar 22 2017 simint_eri.h; -rw-r--r-- 1 loriab staff 253 Jan 24 2017 simint_init.c; -rw-r--r-- 1 loriab staff 1148 Mar 22 2017 simint_init.h; drwxr-xr-x 8 loriab staff 272 Mar 22 2017 vectorization; >>> objdir: ll stage/usr/local/psi4/include/simint/; total 32; drwxr-xr-x 7 loriab staff 238 Jan 11 01:05 boys; -rw-r--r-- 1 loriab staff 332 Jan 24 2017 constants.h; drwxr-xr-x 8 loriab staff 272 Jan 11 01:05 ostei; drwxr-xr-x 5 loriab staff 170 Jan 11 01:05 shell; -rw-r--r-- 1 loriab staff 138 Feb 2 2017 simint.h; -rw-r--r-- 1 loriab staff 1927 Mar 22 2017 simint_eri.h; -rw-r--r-- 1 loriab staff 1148 Mar 22 2017 simint_init.h; drwxr-xr-x 8 loriab staff 272 Jan 11 01:05 vectorization; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-357041900
https://github.com/psi4/psi4/issues/890#issuecomment-357041900:263,Deployability,install,installed,263,"Hmm, I see the same – `.h` are installing but `.hpp` are not. @bennybp, [this line](https://github.com/simint-chem/simint-generator/blob/master/skel/simint/CMakeLists.txt#L92) doesn't seem to be functioning. The simint conda package has the cpp_restrict.hpp file installed, though, so once upon a time it worked. ```; >>> (objdir) find . -name ""cpp_restrict.hpp""; ./external/upstream/simint/simint_external-prefix/src/simint_external/simint/cpp_restrict.hpp; >>> (objdir) ll ./external/upstream/simint/simint_external-prefix/src/simint_external/simint; total 64; -rw-r--r-- 1 loriab staff 2451 Mar 22 2017 CMakeLists.txt; drwxr-xr-x 8 loriab staff 272 Mar 22 2017 boys; -rw-r--r-- 1 loriab staff 332 Jan 24 2017 constants.h; -rw-r--r-- 1 loriab staff 165 Mar 22 2017 cpp_restrict.hpp; drwxr-xr-x 14 loriab staff 476 Mar 28 2017 ostei; drwxr-xr-x 8 loriab staff 272 Mar 22 2017 shell; -rw-r--r-- 1 loriab staff 138 Feb 2 2017 simint.h; -rw-r--r-- 1 loriab staff 831 Feb 2 2017 simint_eri.c; -rw-r--r-- 1 loriab staff 1927 Mar 22 2017 simint_eri.h; -rw-r--r-- 1 loriab staff 253 Jan 24 2017 simint_init.c; -rw-r--r-- 1 loriab staff 1148 Mar 22 2017 simint_init.h; drwxr-xr-x 8 loriab staff 272 Mar 22 2017 vectorization; >>> objdir: ll stage/usr/local/psi4/include/simint/; total 32; drwxr-xr-x 7 loriab staff 238 Jan 11 01:05 boys; -rw-r--r-- 1 loriab staff 332 Jan 24 2017 constants.h; drwxr-xr-x 8 loriab staff 272 Jan 11 01:05 ostei; drwxr-xr-x 5 loriab staff 170 Jan 11 01:05 shell; -rw-r--r-- 1 loriab staff 138 Feb 2 2017 simint.h; -rw-r--r-- 1 loriab staff 1927 Mar 22 2017 simint_eri.h; -rw-r--r-- 1 loriab staff 1148 Mar 22 2017 simint_init.h; drwxr-xr-x 8 loriab staff 272 Jan 11 01:05 vectorization; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-357041900
https://github.com/psi4/psi4/issues/890#issuecomment-357044640:146,Deployability,release,release,146,"Ok starting to see the problem, although I don't know how it happened. v0.7 that is posted doesn't have this commit, which fixed it just prior to release: https://github.com/simint-chem/simint-generator/commit/7ea0109da8fe756903eed48b79f772ec2646b69a#diff-5a855f00d19271887654b21b58214a87. I have a feeling this was due to a change in the way I build my website... @loriab you wouldn't happen to have a simint-v.0.7 tarball from your conda builds, do you?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-357044640
https://github.com/psi4/psi4/issues/890#issuecomment-357065803:109,Performance,cache,cached,109,I've reuploaded a tarball that should have the fix. Hopefully it should work now. You may need to delete any cached versions of `simint-v0.7.tar.bz2` that you have in your build directory (or just delete your build directory and start from scratch).,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-357065803
https://github.com/psi4/psi4/issues/892#issuecomment-356276924:675,Deployability,install,installable,675,"I sympathize, but enough would break that a non-psi-theme-psi-docs is probably best built by hand. psi_theme has a couple sphinx extensions, and psi_theme is a light tweak on cloud_theme which also has extensions psi uses. And all the api autodoc-ing uses extensions from astropy. So if you change the theme and comment out enough from [here](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/conf.py.in#L67-L86), you can get a docs build with a built-in theme (I've done it), but it's definitely incomplete. There came to be so many external requirements that I thought it was better practice to add psi_theme to the list and just make sure they were all easily installable (https://github.com/psi4/psi4/blob/master/doc/sphinxman/CMakeLists.txt#L18-L21). How intent are you on evading psi_theme?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/892#issuecomment-356276924
https://github.com/psi4/psi4/issues/892#issuecomment-356291068:46,Integrability,depend,dependency,46,"I don't mind, but it's an additional external dependency I have to package in order to ship the manual along with the Debian packages. And those packages need to get manually approved, so it takes a while. I think I'll just drop the manual for now, upload 1.1 to Debian and then see about the psi theme in order to reactivate the manual. I do think it's a useful local resource to have, though.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/892#issuecomment-356291068
https://github.com/psi4/psi4/issues/893#issuecomment-358038326:55,Safety,predict,predict,55,"I have no chance to run our input right now. But I can predict that it is due to the misusage of freeze-core true option. Due to that option DFOCC expects some frozen core orbitals but there is not any in reality. If you delete the freeze- core true option, then it will work. @wardence",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/893#issuecomment-358038326
https://github.com/psi4/psi4/issues/893#issuecomment-358041068:165,Availability,error,error,165,"Very true, @bozkaya, and we've done that. We'd really like to be able to run _any_ molecule through a code, though. If the code absolutely can't handle the case, an error is the way to go. But preferably, if the code's contribution is `0.` or unit matrix or anything predictable, I'd really appreciate it if that trivial return could be programmed in. This would greatly help high-throughput calcs or in @wardence's case, multi-stage single calcs.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/893#issuecomment-358041068
https://github.com/psi4/psi4/issues/893#issuecomment-358041068:381,Performance,throughput,throughput,381,"Very true, @bozkaya, and we've done that. We'd really like to be able to run _any_ molecule through a code, though. If the code absolutely can't handle the case, an error is the way to go. But preferably, if the code's contribution is `0.` or unit matrix or anything predictable, I'd really appreciate it if that trivial return could be programmed in. This would greatly help high-throughput calcs or in @wardence's case, multi-stage single calcs.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/893#issuecomment-358041068
https://github.com/psi4/psi4/issues/893#issuecomment-358041068:267,Safety,predict,predictable,267,"Very true, @bozkaya, and we've done that. We'd really like to be able to run _any_ molecule through a code, though. If the code absolutely can't handle the case, an error is the way to go. But preferably, if the code's contribution is `0.` or unit matrix or anything predictable, I'd really appreciate it if that trivial return could be programmed in. This would greatly help high-throughput calcs or in @wardence's case, multi-stage single calcs.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/893#issuecomment-358041068
https://github.com/psi4/psi4/issues/893#issuecomment-358043177:28,Safety,Safe,Safe,28,"Thanks very much, @bozkaya. Safe travels!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/893#issuecomment-358043177
https://github.com/psi4/psi4/issues/893#issuecomment-359186553:112,Testability,test,testing,112,"Thanks very much, @bozkaya! For reference, the commit is ebb63a8a1df9f9f9c270835752f873de7a564b94. @wardence is testing, and she can close this issue after confirmation.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/893#issuecomment-359186553
https://github.com/psi4/psi4/pull/895#issuecomment-358783231:146,Integrability,rout,route,146,"In terms of the print function, `""{0:b}"".format(needed_irreps)` would give the binary representation. Perhaps that's the cleanest. If you go that route, you'd have to ensure that only the trailing `nirreps` characters are printing, which is easy to do using Python's slicing syntax.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/895#issuecomment-358783231
https://github.com/psi4/psi4/pull/897#issuecomment-361602213:188,Energy Efficiency,energy,energy,188,"Dear @dgasmith: currently, optimisations with VV10, LC-VV10 and B97M-V fail due to the lack of the analytical gradients for VV10. This can be, of course, circumvented by passing `dertype=""energy""` to the optimize command. However, it's not necessary to do this for wB97M-V and wB97M-X - they do numerical gradients automatically. I was wondering if it's possible to set the default for VV10 etc. in the meantime?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/897#issuecomment-361602213
https://github.com/psi4/psi4/pull/897#issuecomment-361602213:204,Performance,optimiz,optimize,204,"Dear @dgasmith: currently, optimisations with VV10, LC-VV10 and B97M-V fail due to the lack of the analytical gradients for VV10. This can be, of course, circumvented by passing `dertype=""energy""` to the optimize command. However, it's not necessary to do this for wB97M-V and wB97M-X - they do numerical gradients automatically. I was wondering if it's possible to set the default for VV10 etc. in the meantime?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/897#issuecomment-361602213
https://github.com/psi4/psi4/issues/899#issuecomment-360224837:92,Energy Efficiency,energy,energy,92,"I looked into this yesterday. On my laptop when I disable DKH, I still obtain a large total energy difference:. ```; @ROHF Final Energy: -1262.91530042362160; @ROHF Final Energy: -1259.00365041946634; ```. I emailed one of the issue reporters directly and waiting to hear a response. At least with my compilation (master/debug) it doesn't appear to be a DKH issue.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/899#issuecomment-360224837
https://github.com/psi4/psi4/issues/899#issuecomment-360224837:129,Energy Efficiency,Energy,Energy,129,"I looked into this yesterday. On my laptop when I disable DKH, I still obtain a large total energy difference:. ```; @ROHF Final Energy: -1262.91530042362160; @ROHF Final Energy: -1259.00365041946634; ```. I emailed one of the issue reporters directly and waiting to hear a response. At least with my compilation (master/debug) it doesn't appear to be a DKH issue.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/899#issuecomment-360224837
https://github.com/psi4/psi4/issues/899#issuecomment-360224837:171,Energy Efficiency,Energy,Energy,171,"I looked into this yesterday. On my laptop when I disable DKH, I still obtain a large total energy difference:. ```; @ROHF Final Energy: -1262.91530042362160; @ROHF Final Energy: -1259.00365041946634; ```. I emailed one of the issue reporters directly and waiting to hear a response. At least with my compilation (master/debug) it doesn't appear to be a DKH issue.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/899#issuecomment-360224837
https://github.com/psi4/psi4/issues/899#issuecomment-360370142:1795,Availability,error,error,1795,"e appropriate state. However, the multireference character results in low-lying LUMOs. So if PSI4 was populating the wrong orbitals, we would see the energy of the larger basis set ROHF increasing by (this is all back-of-the-envelope, btw) 5 mEh. We know that the smaller basis set (cc-pwCVDZ-DK, which is explicitly defined in the input file because that basis set is not in the PSI4 library for iron) is converging to the right state. . If DZ->TZ projection is going wrong by 3 Hartrees, then there is something totally haywire with PSI4. Molpro's SCF guess from atomic densities sucks, but I have never seen it crap the bed with incorrect states on the order of Hartrees! . Try this test: run the ROHF energy calculation using just the TZ set, with no DZ step and no ""set scf guess read""; When I do this, I get ; @ROHF Final Energy: -1271.65162910275285. HERE is where PSI4 has the incorrect state. I haven't run an orbital stability analysis, but I can tell by looking at the MO coefficients (thanks Yukio!) --- 10A1 (doubly occupied d2+) needs to be swapped with 14A1 (singly occupied d0) to change the excited Phi state to the correct Pi state. Another clue that leads me to believe there's an actual bug somewhere: look at the SCF orbital energies for the initial DZ guess versus the screwed up TZ projection. The only significant difference is; DZ ROHF:; 1A1 -263.972182; and; TZ ROHF:; 1A1 -261.966897. Since 1A1 is doubly occupied, there's your 4 Hartrees worth of error. ; Looking at the MO coefficients; DZ ROHF:; FE1 s0 0.9825555 (duh, first orbital should be iron 1s). TZ ROHF:; 1 FE1 s0 0.8531471 0.3343274 0.0000000 0.0000000 0.0003960; 2 FE1 s0 -0.5169916 1.4108806 0.0000000 0.0000000 0.0017387; All sorts of crazy mixing of 1s/2s iron basis functions in the first two MOs. To me, something messed up with core s orbitals in the SCF indicates a problem with the basis set projection, a problem with the DKH, or perhaps even an index start error if only the first MO is wrong. ; Fun!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/899#issuecomment-360370142
https://github.com/psi4/psi4/issues/899#issuecomment-360370142:2277,Availability,error,error,2277,"e appropriate state. However, the multireference character results in low-lying LUMOs. So if PSI4 was populating the wrong orbitals, we would see the energy of the larger basis set ROHF increasing by (this is all back-of-the-envelope, btw) 5 mEh. We know that the smaller basis set (cc-pwCVDZ-DK, which is explicitly defined in the input file because that basis set is not in the PSI4 library for iron) is converging to the right state. . If DZ->TZ projection is going wrong by 3 Hartrees, then there is something totally haywire with PSI4. Molpro's SCF guess from atomic densities sucks, but I have never seen it crap the bed with incorrect states on the order of Hartrees! . Try this test: run the ROHF energy calculation using just the TZ set, with no DZ step and no ""set scf guess read""; When I do this, I get ; @ROHF Final Energy: -1271.65162910275285. HERE is where PSI4 has the incorrect state. I haven't run an orbital stability analysis, but I can tell by looking at the MO coefficients (thanks Yukio!) --- 10A1 (doubly occupied d2+) needs to be swapped with 14A1 (singly occupied d0) to change the excited Phi state to the correct Pi state. Another clue that leads me to believe there's an actual bug somewhere: look at the SCF orbital energies for the initial DZ guess versus the screwed up TZ projection. The only significant difference is; DZ ROHF:; 1A1 -263.972182; and; TZ ROHF:; 1A1 -261.966897. Since 1A1 is doubly occupied, there's your 4 Hartrees worth of error. ; Looking at the MO coefficients; DZ ROHF:; FE1 s0 0.9825555 (duh, first orbital should be iron 1s). TZ ROHF:; 1 FE1 s0 0.8531471 0.3343274 0.0000000 0.0000000 0.0003960; 2 FE1 s0 -0.5169916 1.4108806 0.0000000 0.0000000 0.0017387; All sorts of crazy mixing of 1s/2s iron basis functions in the first two MOs. To me, something messed up with core s orbitals in the SCF indicates a problem with the basis set projection, a problem with the DKH, or perhaps even an index start error if only the first MO is wrong. ; Fun!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/899#issuecomment-360370142
https://github.com/psi4/psi4/issues/899#issuecomment-360370142:470,Energy Efficiency,energy,energy,470,"hey all! I don't think at all think this is fundamentally an issue with the SCF converging to the wrong state, even if the stability analysis is showing a negative eigenvalue. IMO, there could be an issue with the basis set projection. . For this electronic state in this system, it is indeed difficult to converge to the appropriate state. However, the multireference character results in low-lying LUMOs. So if PSI4 was populating the wrong orbitals, we would see the energy of the larger basis set ROHF increasing by (this is all back-of-the-envelope, btw) 5 mEh. We know that the smaller basis set (cc-pwCVDZ-DK, which is explicitly defined in the input file because that basis set is not in the PSI4 library for iron) is converging to the right state. . If DZ->TZ projection is going wrong by 3 Hartrees, then there is something totally haywire with PSI4. Molpro's SCF guess from atomic densities sucks, but I have never seen it crap the bed with incorrect states on the order of Hartrees! . Try this test: run the ROHF energy calculation using just the TZ set, with no DZ step and no ""set scf guess read""; When I do this, I get ; @ROHF Final Energy: -1271.65162910275285. HERE is where PSI4 has the incorrect state. I haven't run an orbital stability analysis, but I can tell by looking at the MO coefficients (thanks Yukio!) --- 10A1 (doubly occupied d2+) needs to be swapped with 14A1 (singly occupied d0) to change the excited Phi state to the correct Pi state. Another clue that leads me to believe there's an actual bug somewhere: look at the SCF orbital energies for the initial DZ guess versus the screwed up TZ projection. The only significant difference is; DZ ROHF:; 1A1 -263.972182; and; TZ ROHF:; 1A1 -261.966897. Since 1A1 is doubly occupied, there's your 4 Hartrees worth of error. ; Looking at the MO coefficients; DZ ROHF:; FE1 s0 0.9825555 (duh, first orbital should be iron 1s). TZ ROHF:; 1 FE1 s0 0.8531471 0.3343274 0.0000000 0.0000000 0.0003960; 2 FE1 s0 -0.5169916 1.410880",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/899#issuecomment-360370142
https://github.com/psi4/psi4/issues/899#issuecomment-360370142:1025,Energy Efficiency,energy,energy,1025," converging to the wrong state, even if the stability analysis is showing a negative eigenvalue. IMO, there could be an issue with the basis set projection. . For this electronic state in this system, it is indeed difficult to converge to the appropriate state. However, the multireference character results in low-lying LUMOs. So if PSI4 was populating the wrong orbitals, we would see the energy of the larger basis set ROHF increasing by (this is all back-of-the-envelope, btw) 5 mEh. We know that the smaller basis set (cc-pwCVDZ-DK, which is explicitly defined in the input file because that basis set is not in the PSI4 library for iron) is converging to the right state. . If DZ->TZ projection is going wrong by 3 Hartrees, then there is something totally haywire with PSI4. Molpro's SCF guess from atomic densities sucks, but I have never seen it crap the bed with incorrect states on the order of Hartrees! . Try this test: run the ROHF energy calculation using just the TZ set, with no DZ step and no ""set scf guess read""; When I do this, I get ; @ROHF Final Energy: -1271.65162910275285. HERE is where PSI4 has the incorrect state. I haven't run an orbital stability analysis, but I can tell by looking at the MO coefficients (thanks Yukio!) --- 10A1 (doubly occupied d2+) needs to be swapped with 14A1 (singly occupied d0) to change the excited Phi state to the correct Pi state. Another clue that leads me to believe there's an actual bug somewhere: look at the SCF orbital energies for the initial DZ guess versus the screwed up TZ projection. The only significant difference is; DZ ROHF:; 1A1 -263.972182; and; TZ ROHF:; 1A1 -261.966897. Since 1A1 is doubly occupied, there's your 4 Hartrees worth of error. ; Looking at the MO coefficients; DZ ROHF:; FE1 s0 0.9825555 (duh, first orbital should be iron 1s). TZ ROHF:; 1 FE1 s0 0.8531471 0.3343274 0.0000000 0.0000000 0.0003960; 2 FE1 s0 -0.5169916 1.4108806 0.0000000 0.0000000 0.0017387; All sorts of crazy mixing of 1s/2s iron basis",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/899#issuecomment-360370142
https://github.com/psi4/psi4/issues/899#issuecomment-360370142:1148,Energy Efficiency,Energy,Energy,1148," converging to the wrong state, even if the stability analysis is showing a negative eigenvalue. IMO, there could be an issue with the basis set projection. . For this electronic state in this system, it is indeed difficult to converge to the appropriate state. However, the multireference character results in low-lying LUMOs. So if PSI4 was populating the wrong orbitals, we would see the energy of the larger basis set ROHF increasing by (this is all back-of-the-envelope, btw) 5 mEh. We know that the smaller basis set (cc-pwCVDZ-DK, which is explicitly defined in the input file because that basis set is not in the PSI4 library for iron) is converging to the right state. . If DZ->TZ projection is going wrong by 3 Hartrees, then there is something totally haywire with PSI4. Molpro's SCF guess from atomic densities sucks, but I have never seen it crap the bed with incorrect states on the order of Hartrees! . Try this test: run the ROHF energy calculation using just the TZ set, with no DZ step and no ""set scf guess read""; When I do this, I get ; @ROHF Final Energy: -1271.65162910275285. HERE is where PSI4 has the incorrect state. I haven't run an orbital stability analysis, but I can tell by looking at the MO coefficients (thanks Yukio!) --- 10A1 (doubly occupied d2+) needs to be swapped with 14A1 (singly occupied d0) to change the excited Phi state to the correct Pi state. Another clue that leads me to believe there's an actual bug somewhere: look at the SCF orbital energies for the initial DZ guess versus the screwed up TZ projection. The only significant difference is; DZ ROHF:; 1A1 -263.972182; and; TZ ROHF:; 1A1 -261.966897. Since 1A1 is doubly occupied, there's your 4 Hartrees worth of error. ; Looking at the MO coefficients; DZ ROHF:; FE1 s0 0.9825555 (duh, first orbital should be iron 1s). TZ ROHF:; 1 FE1 s0 0.8531471 0.3343274 0.0000000 0.0000000 0.0003960; 2 FE1 s0 -0.5169916 1.4108806 0.0000000 0.0000000 0.0017387; All sorts of crazy mixing of 1s/2s iron basis",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/899#issuecomment-360370142
https://github.com/psi4/psi4/issues/899#issuecomment-360370142:1006,Testability,test,test,1006," converging to the wrong state, even if the stability analysis is showing a negative eigenvalue. IMO, there could be an issue with the basis set projection. . For this electronic state in this system, it is indeed difficult to converge to the appropriate state. However, the multireference character results in low-lying LUMOs. So if PSI4 was populating the wrong orbitals, we would see the energy of the larger basis set ROHF increasing by (this is all back-of-the-envelope, btw) 5 mEh. We know that the smaller basis set (cc-pwCVDZ-DK, which is explicitly defined in the input file because that basis set is not in the PSI4 library for iron) is converging to the right state. . If DZ->TZ projection is going wrong by 3 Hartrees, then there is something totally haywire with PSI4. Molpro's SCF guess from atomic densities sucks, but I have never seen it crap the bed with incorrect states on the order of Hartrees! . Try this test: run the ROHF energy calculation using just the TZ set, with no DZ step and no ""set scf guess read""; When I do this, I get ; @ROHF Final Energy: -1271.65162910275285. HERE is where PSI4 has the incorrect state. I haven't run an orbital stability analysis, but I can tell by looking at the MO coefficients (thanks Yukio!) --- 10A1 (doubly occupied d2+) needs to be swapped with 14A1 (singly occupied d0) to change the excited Phi state to the correct Pi state. Another clue that leads me to believe there's an actual bug somewhere: look at the SCF orbital energies for the initial DZ guess versus the screwed up TZ projection. The only significant difference is; DZ ROHF:; 1A1 -263.972182; and; TZ ROHF:; 1A1 -261.966897. Since 1A1 is doubly occupied, there's your 4 Hartrees worth of error. ; Looking at the MO coefficients; DZ ROHF:; FE1 s0 0.9825555 (duh, first orbital should be iron 1s). TZ ROHF:; 1 FE1 s0 0.8531471 0.3343274 0.0000000 0.0000000 0.0003960; 2 FE1 s0 -0.5169916 1.4108806 0.0000000 0.0000000 0.0017387; All sorts of crazy mixing of 1s/2s iron basis",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/899#issuecomment-360370142
https://github.com/psi4/psi4/issues/899#issuecomment-360834609:176,Availability,error,error,176,"Justin, can you send me the input where you disabled DKH? An SCF read of converged orbitals from the same molecule should never provide such a bad guess that you get an energy error on the order of Hartrees. Even if it's a naughty molecule like FeH. This points to an error in the way that PSI4 is reading orbitals for the set scf guess read procedure.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/899#issuecomment-360834609
https://github.com/psi4/psi4/issues/899#issuecomment-360834609:268,Availability,error,error,268,"Justin, can you send me the input where you disabled DKH? An SCF read of converged orbitals from the same molecule should never provide such a bad guess that you get an energy error on the order of Hartrees. Even if it's a naughty molecule like FeH. This points to an error in the way that PSI4 is reading orbitals for the set scf guess read procedure.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/899#issuecomment-360834609
https://github.com/psi4/psi4/issues/899#issuecomment-360834609:169,Energy Efficiency,energy,energy,169,"Justin, can you send me the input where you disabled DKH? An SCF read of converged orbitals from the same molecule should never provide such a bad guess that you get an energy error on the order of Hartrees. Even if it's a naughty molecule like FeH. This points to an error in the way that PSI4 is reading orbitals for the set scf guess read procedure.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/899#issuecomment-360834609
https://github.com/psi4/psi4/issues/899#issuecomment-431644324:496,Usability,simpl,simple,496,"I had a look at the basis projection code in psi4/src/psi4/libmints/wavefunction.cc, and I don't really understand why it is so complicated. Namely, the whole point about the basis set projection is that you use the resolution of the identity; ```; \sum_{UV} |U> <U|V>^{-1} <V|; ```; to project between basis sets. That is, given orbitals in an original basis; ```; c_{ui} |u>; ```; you get the new orbitals as; ```; c_{ui} |U> <U|V>^{-1} <V|u>; = [<U|V>^{-1} <V|u> c_{ui} ] |U>; ```; that is, a simple matrix multiply; ```; CA = [X_A^2 S_{AB} C_B ]; ```; where ```X_A``` is the orthogonalizing matrix in the new basis, ```S_{AB}``` is the overlap between the old and new bases, and ```C_B``` are the coefficients in the old basis. Now, the real question is just what you have to do when the dimension of the basis changes. When the new basis is smaller than the old one, there's no problem. If it's bigger than the old one, you just need to run a SVD on ```CSX``` and pad these to the end of the MO coefficient matrix.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/899#issuecomment-431644324
https://github.com/psi4/psi4/issues/900#issuecomment-360582523:262,Availability,error,error,262,"Confirmed to also be broken on `1.2a1.dev508` which is pre-DFHelper and pre-gau2grid. Psi's `molinstance.Z(atomindex)` returns nuclear charge (so `0.0` for ghosts), not atomic number (as one might think from the function name), so I can see room for programming error there. But I'm not seeing anywhere that CAM is singled out from other functional, so I share your confusion.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/900#issuecomment-360582523
https://github.com/psi4/psi4/issues/900#issuecomment-360582523:135,Energy Efficiency,charge,charge,135,"Confirmed to also be broken on `1.2a1.dev508` which is pre-DFHelper and pre-gau2grid. Psi's `molinstance.Z(atomindex)` returns nuclear charge (so `0.0` for ghosts), not atomic number (as one might think from the function name), so I can see room for programming error there. But I'm not seeing anywhere that CAM is singled out from other functional, so I share your confusion.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/900#issuecomment-360582523
https://github.com/psi4/psi4/issues/900#issuecomment-360585139:55,Energy Efficiency,energy,energy,55,"The farther the waters are apart the more positive the energy gets. Energy also stays essentially constant then. ```; @DF-RKS iter 4: -76.32981119020519 -1.12735e-04 7.24826e-05 DIIS; @DF-RKS iter 5: 119.53415655216450 1.95864e+02 4.45340e-01 DIIS; @DF-RKS iter 6: 119.53415655216457 7.10543e-14 4.45340e-01 DIIS; @DF-RKS iter 7: 119.53415655216453 -4.26326e-14 4.45340e-01 DIIS. ```. They are 5 A apart in the original example, quite far already. Putting them at 3 A leads to SCF convergence.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/900#issuecomment-360585139
https://github.com/psi4/psi4/issues/900#issuecomment-360585139:68,Energy Efficiency,Energy,Energy,68,"The farther the waters are apart the more positive the energy gets. Energy also stays essentially constant then. ```; @DF-RKS iter 4: -76.32981119020519 -1.12735e-04 7.24826e-05 DIIS; @DF-RKS iter 5: 119.53415655216450 1.95864e+02 4.45340e-01 DIIS; @DF-RKS iter 6: 119.53415655216457 7.10543e-14 4.45340e-01 DIIS; @DF-RKS iter 7: 119.53415655216453 -4.26326e-14 4.45340e-01 DIIS. ```. They are 5 A apart in the original example, quite far already. Putting them at 3 A leads to SCF convergence.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/900#issuecomment-360585139
https://github.com/psi4/psi4/issues/900#issuecomment-360596788:38,Energy Efficiency,energy,energy,38,"If you're using libxc's camb3lyp, the energy should be something like -76.32981537.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/900#issuecomment-360596788
https://github.com/psi4/psi4/issues/900#issuecomment-379370522:18,Availability,down,down,18,"I've tracked this down to ""GGA_X_ITYH"", which is the range-separated GGA part - this exchange functional just doesn't converge for the above system, even when I run something like 100% X_ITYH + 100% C_VWN without range separation. @susilehtola, is there any reason the 3.0.0 version could be broken?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/900#issuecomment-379370522
https://github.com/psi4/psi4/issues/900#issuecomment-379371277:131,Availability,down,down,131,"I'm going to put together a psi-hosted libxc 4.0 + patch for psi to build from, in case that's helpful. Congrats for tracking that down.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/900#issuecomment-379371277
https://github.com/psi4/psi4/issues/900#issuecomment-379371277:51,Deployability,patch,patch,51,"I'm going to put together a psi-hosted libxc 4.0 + patch for psi to build from, in case that's helpful. Congrats for tracking that down.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/900#issuecomment-379371277
https://github.com/psi4/psi4/issues/900#issuecomment-383093887:64,Testability,test,test,64,"Confirmed fixed in #802, so this is a LibXC 3.0 issue. Adding a test case to catch this regression in the future.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/900#issuecomment-383093887
https://github.com/psi4/psi4/issues/901#issuecomment-360894371:1009,Deployability,patch,patch,1009,"It took me getting flu to find the time to look into this, and here's my initial finding. If I optimize the geometry and dump it into an input file; ```; molecule h2o {; O 0.000000000000 -0.000000000000 0.063771204693; H -0.000000000000 0.748825894352 -0.506047648051; H 0.000000000000 -0.748825894352 -0.506047648051; }. set basis 6-311G**; set e_convergence 9; set g_convergence gau_verytight; set scf_type pk. scf_e, scf_wfn = frequencies('scf', dertype='hessian', return_wfn=True); ```; I get ; ``` No. Vib. Freq. [cm^-1] Vib. Temp. [K]; 1 1750.945 2519.217; 2 4142.103 5959.555; 3 4237.372 6096.625; ```; If I permute the first two rows of the geometry, per the bug report, I get:; ``` No. Vib. Freq. [cm^-1] Vib. Temp. [K]; 1 1731.766 2491.623; 2 4136.243 5951.124; 3 4232.474 6089.579; ```; This is clearly wrong, but it does at least mean that the hessian code is for the most part correct. I'm trying to figure out where the atom and/or basis function ordering issue is introduced and hope to have a patch soon. Thanks for the report.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/901#issuecomment-360894371
https://github.com/psi4/psi4/issues/901#issuecomment-360894371:95,Performance,optimiz,optimize,95,"It took me getting flu to find the time to look into this, and here's my initial finding. If I optimize the geometry and dump it into an input file; ```; molecule h2o {; O 0.000000000000 -0.000000000000 0.063771204693; H -0.000000000000 0.748825894352 -0.506047648051; H 0.000000000000 -0.748825894352 -0.506047648051; }. set basis 6-311G**; set e_convergence 9; set g_convergence gau_verytight; set scf_type pk. scf_e, scf_wfn = frequencies('scf', dertype='hessian', return_wfn=True); ```; I get ; ``` No. Vib. Freq. [cm^-1] Vib. Temp. [K]; 1 1750.945 2519.217; 2 4142.103 5959.555; 3 4237.372 6096.625; ```; If I permute the first two rows of the geometry, per the bug report, I get:; ``` No. Vib. Freq. [cm^-1] Vib. Temp. [K]; 1 1731.766 2491.623; 2 4136.243 5951.124; 3 4232.474 6089.579; ```; This is clearly wrong, but it does at least mean that the hessian code is for the most part correct. I'm trying to figure out where the atom and/or basis function ordering issue is introduced and hope to have a patch soon. Thanks for the report.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/901#issuecomment-360894371
https://github.com/psi4/psi4/issues/901#issuecomment-360894371:806,Usability,clear,clearly,806,"It took me getting flu to find the time to look into this, and here's my initial finding. If I optimize the geometry and dump it into an input file; ```; molecule h2o {; O 0.000000000000 -0.000000000000 0.063771204693; H -0.000000000000 0.748825894352 -0.506047648051; H 0.000000000000 -0.748825894352 -0.506047648051; }. set basis 6-311G**; set e_convergence 9; set g_convergence gau_verytight; set scf_type pk. scf_e, scf_wfn = frequencies('scf', dertype='hessian', return_wfn=True); ```; I get ; ``` No. Vib. Freq. [cm^-1] Vib. Temp. [K]; 1 1750.945 2519.217; 2 4142.103 5959.555; 3 4237.372 6096.625; ```; If I permute the first two rows of the geometry, per the bug report, I get:; ``` No. Vib. Freq. [cm^-1] Vib. Temp. [K]; 1 1731.766 2491.623; 2 4136.243 5951.124; 3 4232.474 6089.579; ```; This is clearly wrong, but it does at least mean that the hessian code is for the most part correct. I'm trying to figure out where the atom and/or basis function ordering issue is introduced and hope to have a patch soon. Thanks for the report.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/901#issuecomment-360894371
https://github.com/psi4/psi4/issues/901#issuecomment-361268770:124,Availability,ping,ping,124,"This should be fixed in #903 (the comment in that PR was supposed to close this ticket, but didn't for some reason). Please ping back if you have any more problems.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/901#issuecomment-361268770
https://github.com/psi4/psi4/pull/903#issuecomment-361030347:86,Availability,down,down,86,"It was tested with higher angular momentum, which is why I’m confused. Lori and I sat down at the last hackathon to try and find problem cases, but couldn’t reproduce the error. What I’m really struggling with is the origin of the importance of atom order in the test provided in #901. It’s probably related to the fact that I only take derivatives on center A and use translational invariance relations to get the rest, but my flu addled brain is failing me right now. For the same reason, yes, this took me a while to track down. Oh well, hopefully this is the last bug we ever have in the hessians. Or anywhere... > On Jan 27, 2018, at 8:16 PM, Daniel Smith <notifications@github.com> wrote:; > ; > @dgasmith commented on this pull request.; > ; > Awesome.; > ; > In psi4/src/psi4/libmints/overlap.cc:; > ; > > @@ -336,7 +336,7 @@ void OverlapInt::compute_pair_deriv2(const GaussianShell& s1, const GaussianShel; > buffer_[(0*size)+ao12] += (4.0*a1*a1*x[l1+2][l2]*y[m1][m2]*z[n1][n2] -; > 2.0*a1*(2*l1+1)*x[l1][l2]*y[m1][m2]*z[n1][n2]) * over_pf;; > if (l1 > 1); > Hmm, I think you just never tested anything beyond P orbitals. This if statement will not be hit without D or higher.; > ; > I wish we could put weights on commits so that we could crank this one up. Three lines changed, but I am sure quite a bit of time looking into it.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/903#issuecomment-361030347
https://github.com/psi4/psi4/pull/903#issuecomment-361030347:171,Availability,error,error,171,"It was tested with higher angular momentum, which is why I’m confused. Lori and I sat down at the last hackathon to try and find problem cases, but couldn’t reproduce the error. What I’m really struggling with is the origin of the importance of atom order in the test provided in #901. It’s probably related to the fact that I only take derivatives on center A and use translational invariance relations to get the rest, but my flu addled brain is failing me right now. For the same reason, yes, this took me a while to track down. Oh well, hopefully this is the last bug we ever have in the hessians. Or anywhere... > On Jan 27, 2018, at 8:16 PM, Daniel Smith <notifications@github.com> wrote:; > ; > @dgasmith commented on this pull request.; > ; > Awesome.; > ; > In psi4/src/psi4/libmints/overlap.cc:; > ; > > @@ -336,7 +336,7 @@ void OverlapInt::compute_pair_deriv2(const GaussianShell& s1, const GaussianShel; > buffer_[(0*size)+ao12] += (4.0*a1*a1*x[l1+2][l2]*y[m1][m2]*z[n1][n2] -; > 2.0*a1*(2*l1+1)*x[l1][l2]*y[m1][m2]*z[n1][n2]) * over_pf;; > if (l1 > 1); > Hmm, I think you just never tested anything beyond P orbitals. This if statement will not be hit without D or higher.; > ; > I wish we could put weights on commits so that we could crank this one up. Three lines changed, but I am sure quite a bit of time looking into it.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/903#issuecomment-361030347
https://github.com/psi4/psi4/pull/903#issuecomment-361030347:526,Availability,down,down,526,"It was tested with higher angular momentum, which is why I’m confused. Lori and I sat down at the last hackathon to try and find problem cases, but couldn’t reproduce the error. What I’m really struggling with is the origin of the importance of atom order in the test provided in #901. It’s probably related to the fact that I only take derivatives on center A and use translational invariance relations to get the rest, but my flu addled brain is failing me right now. For the same reason, yes, this took me a while to track down. Oh well, hopefully this is the last bug we ever have in the hessians. Or anywhere... > On Jan 27, 2018, at 8:16 PM, Daniel Smith <notifications@github.com> wrote:; > ; > @dgasmith commented on this pull request.; > ; > Awesome.; > ; > In psi4/src/psi4/libmints/overlap.cc:; > ; > > @@ -336,7 +336,7 @@ void OverlapInt::compute_pair_deriv2(const GaussianShell& s1, const GaussianShel; > buffer_[(0*size)+ao12] += (4.0*a1*a1*x[l1+2][l2]*y[m1][m2]*z[n1][n2] -; > 2.0*a1*(2*l1+1)*x[l1][l2]*y[m1][m2]*z[n1][n2]) * over_pf;; > if (l1 > 1); > Hmm, I think you just never tested anything beyond P orbitals. This if statement will not be hit without D or higher.; > ; > I wish we could put weights on commits so that we could crank this one up. Three lines changed, but I am sure quite a bit of time looking into it.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/903#issuecomment-361030347
https://github.com/psi4/psi4/pull/903#issuecomment-361030347:7,Testability,test,tested,7,"It was tested with higher angular momentum, which is why I’m confused. Lori and I sat down at the last hackathon to try and find problem cases, but couldn’t reproduce the error. What I’m really struggling with is the origin of the importance of atom order in the test provided in #901. It’s probably related to the fact that I only take derivatives on center A and use translational invariance relations to get the rest, but my flu addled brain is failing me right now. For the same reason, yes, this took me a while to track down. Oh well, hopefully this is the last bug we ever have in the hessians. Or anywhere... > On Jan 27, 2018, at 8:16 PM, Daniel Smith <notifications@github.com> wrote:; > ; > @dgasmith commented on this pull request.; > ; > Awesome.; > ; > In psi4/src/psi4/libmints/overlap.cc:; > ; > > @@ -336,7 +336,7 @@ void OverlapInt::compute_pair_deriv2(const GaussianShell& s1, const GaussianShel; > buffer_[(0*size)+ao12] += (4.0*a1*a1*x[l1+2][l2]*y[m1][m2]*z[n1][n2] -; > 2.0*a1*(2*l1+1)*x[l1][l2]*y[m1][m2]*z[n1][n2]) * over_pf;; > if (l1 > 1); > Hmm, I think you just never tested anything beyond P orbitals. This if statement will not be hit without D or higher.; > ; > I wish we could put weights on commits so that we could crank this one up. Three lines changed, but I am sure quite a bit of time looking into it.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/903#issuecomment-361030347
https://github.com/psi4/psi4/pull/903#issuecomment-361030347:263,Testability,test,test,263,"It was tested with higher angular momentum, which is why I’m confused. Lori and I sat down at the last hackathon to try and find problem cases, but couldn’t reproduce the error. What I’m really struggling with is the origin of the importance of atom order in the test provided in #901. It’s probably related to the fact that I only take derivatives on center A and use translational invariance relations to get the rest, but my flu addled brain is failing me right now. For the same reason, yes, this took me a while to track down. Oh well, hopefully this is the last bug we ever have in the hessians. Or anywhere... > On Jan 27, 2018, at 8:16 PM, Daniel Smith <notifications@github.com> wrote:; > ; > @dgasmith commented on this pull request.; > ; > Awesome.; > ; > In psi4/src/psi4/libmints/overlap.cc:; > ; > > @@ -336,7 +336,7 @@ void OverlapInt::compute_pair_deriv2(const GaussianShell& s1, const GaussianShel; > buffer_[(0*size)+ao12] += (4.0*a1*a1*x[l1+2][l2]*y[m1][m2]*z[n1][n2] -; > 2.0*a1*(2*l1+1)*x[l1][l2]*y[m1][m2]*z[n1][n2]) * over_pf;; > if (l1 > 1); > Hmm, I think you just never tested anything beyond P orbitals. This if statement will not be hit without D or higher.; > ; > I wish we could put weights on commits so that we could crank this one up. Three lines changed, but I am sure quite a bit of time looking into it.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/903#issuecomment-361030347
https://github.com/psi4/psi4/pull/903#issuecomment-361030347:1096,Testability,test,tested,1096,"It was tested with higher angular momentum, which is why I’m confused. Lori and I sat down at the last hackathon to try and find problem cases, but couldn’t reproduce the error. What I’m really struggling with is the origin of the importance of atom order in the test provided in #901. It’s probably related to the fact that I only take derivatives on center A and use translational invariance relations to get the rest, but my flu addled brain is failing me right now. For the same reason, yes, this took me a while to track down. Oh well, hopefully this is the last bug we ever have in the hessians. Or anywhere... > On Jan 27, 2018, at 8:16 PM, Daniel Smith <notifications@github.com> wrote:; > ; > @dgasmith commented on this pull request.; > ; > Awesome.; > ; > In psi4/src/psi4/libmints/overlap.cc:; > ; > > @@ -336,7 +336,7 @@ void OverlapInt::compute_pair_deriv2(const GaussianShell& s1, const GaussianShel; > buffer_[(0*size)+ao12] += (4.0*a1*a1*x[l1+2][l2]*y[m1][m2]*z[n1][n2] -; > 2.0*a1*(2*l1+1)*x[l1][l2]*y[m1][m2]*z[n1][n2]) * over_pf;; > if (l1 > 1); > Hmm, I think you just never tested anything beyond P orbitals. This if statement will not be hit without D or higher.; > ; > I wish we could put weights on commits so that we could crank this one up. Three lines changed, but I am sure quite a bit of time looking into it.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/903#issuecomment-361030347
https://github.com/psi4/psi4/pull/903#issuecomment-361037317:59,Availability,error,errors,59,"Looking great, @andysim! Gone from 1 pass, 1 fail w/normco errors in the tenths, and 3 radically fail to 4 pass and 1 fail with normco errors in the ten thousandths. Systems are formaldehyde, ammonia, methane, ethene, carbon dioxide. I think HOOH was the original suspicious one, so I'll dig that up.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/903#issuecomment-361037317
https://github.com/psi4/psi4/pull/903#issuecomment-361037317:135,Availability,error,errors,135,"Looking great, @andysim! Gone from 1 pass, 1 fail w/normco errors in the tenths, and 3 radically fail to 4 pass and 1 fail with normco errors in the ten thousandths. Systems are formaldehyde, ammonia, methane, ethene, carbon dioxide. I think HOOH was the original suspicious one, so I'll dig that up.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/903#issuecomment-361037317
https://github.com/psi4/psi4/pull/903#issuecomment-361040047:19,Availability,error,errors,19,"Here's some of the errors in frequencies pre-fix; max is for HOOH TS. I've cherry-picked the commit into pyvib2, and the tests, if handy, are [here](https://github.com/loriab/psi4/blob/a4219be5e605a8f3f92fde127fdac4c187eaa70e/tests/python/vibanalysis/input.py). * CO2; ```; 	exp: [ 761.1526 761.1526 1513.3122 2580.1495]; 	obs: [ 765.97192061+0.j 954.84604992+0.j 1511.98600598+0.j; 2577.29764966+0.j]; 	dif: [ 4.81932061+0.j 193.69344992+0.j -1.32619402+0.j -2.85185034+0.j]; ```; * Ethene; ```; 	exp: [ 885.4386 1073.4306 1080.4104 1135.9390 1328.7166 1467.8428; 1565.5328 1831.6445 3287.3173 3312.1889 3371.7974 3399.4232]; 	obs: [ 885.43769105+0.j 1073.42980093+0.j 1080.48361108+0.j; 1135.93848940+0.j 1341.57874983+0.j 1467.71701985+0.j; 1565.53257843+0.j 1831.21804884+0.j 3287.31942795+0.j; 3312.16817472+0.j 3373.24482206+0.j 3399.42544494+0.j]; 	dif: [ -9.08947590e-04+0.j -7.99067003e-04+0.j 7.32110847e-02+0.j; -5.10595379e-04+0.j 1.28621498e+01+0.j -1.25780152e-01+0.j; -2.21567931e-04+0.j -4.26451164e-01+0.j 2.12794906e-03+0.j; -2.07252822e-02+0.j 1.44742206e+00+0.j 2.24494358e-03+0.j]; ```; * CH3 & NH3 ok; * Formaldehyde; ```; 	exp: [ 1325.3286 1359.7579 1637.4774 2013.4255 3108.9786 3183.3975]; 	obs: [ 1325.82947096+0.j 1376.06130208+0.j 1637.37151242+0.j; 2010.83034420+0.j 3108.93196717+0.j 3185.06227338+0.j]; 	dif: [ 0.50087096+0.j 16.30340208+0.j -0.10588758+0.j -2.59515580+0.j; -0.04663283+0.j 1.66477338+0.j]; ```; * HOOH TS; ```; 	exp: [ 0.0000+278.6136j 1128.8155 +0.j 1364.3495 +0.j; 1698.2924 +0.j 4140.0257 +0.j 4146.4749 +0.j ]; 	obs: [ 0.00000000+273.62786912j 1122.20829758 +0.j 1385.41184315 +0.j; 1715.97750485 +0.j 4143.48648522 +0.j 4306.47193962 +0.j ]; 	dif: [ 0.00000000-4.98573088j -6.60720242+0.j 21.06234315+0.j; 17.68510485+0.j 3.46078522+0.j 159.99703962+0.j ]; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/903#issuecomment-361040047
https://github.com/psi4/psi4/pull/903#issuecomment-361040047:121,Testability,test,tests,121,"Here's some of the errors in frequencies pre-fix; max is for HOOH TS. I've cherry-picked the commit into pyvib2, and the tests, if handy, are [here](https://github.com/loriab/psi4/blob/a4219be5e605a8f3f92fde127fdac4c187eaa70e/tests/python/vibanalysis/input.py). * CO2; ```; 	exp: [ 761.1526 761.1526 1513.3122 2580.1495]; 	obs: [ 765.97192061+0.j 954.84604992+0.j 1511.98600598+0.j; 2577.29764966+0.j]; 	dif: [ 4.81932061+0.j 193.69344992+0.j -1.32619402+0.j -2.85185034+0.j]; ```; * Ethene; ```; 	exp: [ 885.4386 1073.4306 1080.4104 1135.9390 1328.7166 1467.8428; 1565.5328 1831.6445 3287.3173 3312.1889 3371.7974 3399.4232]; 	obs: [ 885.43769105+0.j 1073.42980093+0.j 1080.48361108+0.j; 1135.93848940+0.j 1341.57874983+0.j 1467.71701985+0.j; 1565.53257843+0.j 1831.21804884+0.j 3287.31942795+0.j; 3312.16817472+0.j 3373.24482206+0.j 3399.42544494+0.j]; 	dif: [ -9.08947590e-04+0.j -7.99067003e-04+0.j 7.32110847e-02+0.j; -5.10595379e-04+0.j 1.28621498e+01+0.j -1.25780152e-01+0.j; -2.21567931e-04+0.j -4.26451164e-01+0.j 2.12794906e-03+0.j; -2.07252822e-02+0.j 1.44742206e+00+0.j 2.24494358e-03+0.j]; ```; * CH3 & NH3 ok; * Formaldehyde; ```; 	exp: [ 1325.3286 1359.7579 1637.4774 2013.4255 3108.9786 3183.3975]; 	obs: [ 1325.82947096+0.j 1376.06130208+0.j 1637.37151242+0.j; 2010.83034420+0.j 3108.93196717+0.j 3185.06227338+0.j]; 	dif: [ 0.50087096+0.j 16.30340208+0.j -0.10588758+0.j -2.59515580+0.j; -0.04663283+0.j 1.66477338+0.j]; ```; * HOOH TS; ```; 	exp: [ 0.0000+278.6136j 1128.8155 +0.j 1364.3495 +0.j; 1698.2924 +0.j 4140.0257 +0.j 4146.4749 +0.j ]; 	obs: [ 0.00000000+273.62786912j 1122.20829758 +0.j 1385.41184315 +0.j; 1715.97750485 +0.j 4143.48648522 +0.j 4306.47193962 +0.j ]; 	dif: [ 0.00000000-4.98573088j -6.60720242+0.j 21.06234315+0.j; 17.68510485+0.j 3.46078522+0.j 159.99703962+0.j ]; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/903#issuecomment-361040047
https://github.com/psi4/psi4/pull/903#issuecomment-361040047:226,Testability,test,tests,226,"Here's some of the errors in frequencies pre-fix; max is for HOOH TS. I've cherry-picked the commit into pyvib2, and the tests, if handy, are [here](https://github.com/loriab/psi4/blob/a4219be5e605a8f3f92fde127fdac4c187eaa70e/tests/python/vibanalysis/input.py). * CO2; ```; 	exp: [ 761.1526 761.1526 1513.3122 2580.1495]; 	obs: [ 765.97192061+0.j 954.84604992+0.j 1511.98600598+0.j; 2577.29764966+0.j]; 	dif: [ 4.81932061+0.j 193.69344992+0.j -1.32619402+0.j -2.85185034+0.j]; ```; * Ethene; ```; 	exp: [ 885.4386 1073.4306 1080.4104 1135.9390 1328.7166 1467.8428; 1565.5328 1831.6445 3287.3173 3312.1889 3371.7974 3399.4232]; 	obs: [ 885.43769105+0.j 1073.42980093+0.j 1080.48361108+0.j; 1135.93848940+0.j 1341.57874983+0.j 1467.71701985+0.j; 1565.53257843+0.j 1831.21804884+0.j 3287.31942795+0.j; 3312.16817472+0.j 3373.24482206+0.j 3399.42544494+0.j]; 	dif: [ -9.08947590e-04+0.j -7.99067003e-04+0.j 7.32110847e-02+0.j; -5.10595379e-04+0.j 1.28621498e+01+0.j -1.25780152e-01+0.j; -2.21567931e-04+0.j -4.26451164e-01+0.j 2.12794906e-03+0.j; -2.07252822e-02+0.j 1.44742206e+00+0.j 2.24494358e-03+0.j]; ```; * CH3 & NH3 ok; * Formaldehyde; ```; 	exp: [ 1325.3286 1359.7579 1637.4774 2013.4255 3108.9786 3183.3975]; 	obs: [ 1325.82947096+0.j 1376.06130208+0.j 1637.37151242+0.j; 2010.83034420+0.j 3108.93196717+0.j 3185.06227338+0.j]; 	dif: [ 0.50087096+0.j 16.30340208+0.j -0.10588758+0.j -2.59515580+0.j; -0.04663283+0.j 1.66477338+0.j]; ```; * HOOH TS; ```; 	exp: [ 0.0000+278.6136j 1128.8155 +0.j 1364.3495 +0.j; 1698.2924 +0.j 4140.0257 +0.j 4146.4749 +0.j ]; 	obs: [ 0.00000000+273.62786912j 1122.20829758 +0.j 1385.41184315 +0.j; 1715.97750485 +0.j 4143.48648522 +0.j 4306.47193962 +0.j ]; 	dif: [ 0.00000000-4.98573088j -6.60720242+0.j 21.06234315+0.j; 17.68510485+0.j 3.46078522+0.j 159.99703962+0.j ]; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/903#issuecomment-361040047
https://github.com/psi4/psi4/pull/903#issuecomment-361080182:706,Availability,error,error,706,"Alrighty, this one should be ready to go now. I tried to cook up a simple test using f orbitals, but they're all too costly; in the end I just added a permutation to the atom ordering in our existing cc-pVDZ water test, because this is enough to reveal the bug. The fact that we've always had a working cc-pVDZ test case shows how subtle the bug is; the affected d components in water must be zero by symmetry. I did have a distorted water in my test suite to check that case, but didn't detect problems. Oh well, live and learn I guess. This should be a trivial review, and it clearly helps to address a couple of high priority tickets, so please have at it whenever you get a chance. Sorry again for the error. Next time you see me, I'll be at a chalkboard, writing ""I will not cut and paste"", à la Bart in the Simpsons opening credits. Except, instead of writing it, I'll be cutting and pasting it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/903#issuecomment-361080182
https://github.com/psi4/psi4/pull/903#issuecomment-361080182:488,Safety,detect,detect,488,"Alrighty, this one should be ready to go now. I tried to cook up a simple test using f orbitals, but they're all too costly; in the end I just added a permutation to the atom ordering in our existing cc-pVDZ water test, because this is enough to reveal the bug. The fact that we've always had a working cc-pVDZ test case shows how subtle the bug is; the affected d components in water must be zero by symmetry. I did have a distorted water in my test suite to check that case, but didn't detect problems. Oh well, live and learn I guess. This should be a trivial review, and it clearly helps to address a couple of high priority tickets, so please have at it whenever you get a chance. Sorry again for the error. Next time you see me, I'll be at a chalkboard, writing ""I will not cut and paste"", à la Bart in the Simpsons opening credits. Except, instead of writing it, I'll be cutting and pasting it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/903#issuecomment-361080182
https://github.com/psi4/psi4/pull/903#issuecomment-361080182:74,Testability,test,test,74,"Alrighty, this one should be ready to go now. I tried to cook up a simple test using f orbitals, but they're all too costly; in the end I just added a permutation to the atom ordering in our existing cc-pVDZ water test, because this is enough to reveal the bug. The fact that we've always had a working cc-pVDZ test case shows how subtle the bug is; the affected d components in water must be zero by symmetry. I did have a distorted water in my test suite to check that case, but didn't detect problems. Oh well, live and learn I guess. This should be a trivial review, and it clearly helps to address a couple of high priority tickets, so please have at it whenever you get a chance. Sorry again for the error. Next time you see me, I'll be at a chalkboard, writing ""I will not cut and paste"", à la Bart in the Simpsons opening credits. Except, instead of writing it, I'll be cutting and pasting it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/903#issuecomment-361080182
https://github.com/psi4/psi4/pull/903#issuecomment-361080182:214,Testability,test,test,214,"Alrighty, this one should be ready to go now. I tried to cook up a simple test using f orbitals, but they're all too costly; in the end I just added a permutation to the atom ordering in our existing cc-pVDZ water test, because this is enough to reveal the bug. The fact that we've always had a working cc-pVDZ test case shows how subtle the bug is; the affected d components in water must be zero by symmetry. I did have a distorted water in my test suite to check that case, but didn't detect problems. Oh well, live and learn I guess. This should be a trivial review, and it clearly helps to address a couple of high priority tickets, so please have at it whenever you get a chance. Sorry again for the error. Next time you see me, I'll be at a chalkboard, writing ""I will not cut and paste"", à la Bart in the Simpsons opening credits. Except, instead of writing it, I'll be cutting and pasting it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/903#issuecomment-361080182
https://github.com/psi4/psi4/pull/903#issuecomment-361080182:311,Testability,test,test,311,"Alrighty, this one should be ready to go now. I tried to cook up a simple test using f orbitals, but they're all too costly; in the end I just added a permutation to the atom ordering in our existing cc-pVDZ water test, because this is enough to reveal the bug. The fact that we've always had a working cc-pVDZ test case shows how subtle the bug is; the affected d components in water must be zero by symmetry. I did have a distorted water in my test suite to check that case, but didn't detect problems. Oh well, live and learn I guess. This should be a trivial review, and it clearly helps to address a couple of high priority tickets, so please have at it whenever you get a chance. Sorry again for the error. Next time you see me, I'll be at a chalkboard, writing ""I will not cut and paste"", à la Bart in the Simpsons opening credits. Except, instead of writing it, I'll be cutting and pasting it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/903#issuecomment-361080182
https://github.com/psi4/psi4/pull/903#issuecomment-361080182:446,Testability,test,test,446,"Alrighty, this one should be ready to go now. I tried to cook up a simple test using f orbitals, but they're all too costly; in the end I just added a permutation to the atom ordering in our existing cc-pVDZ water test, because this is enough to reveal the bug. The fact that we've always had a working cc-pVDZ test case shows how subtle the bug is; the affected d components in water must be zero by symmetry. I did have a distorted water in my test suite to check that case, but didn't detect problems. Oh well, live and learn I guess. This should be a trivial review, and it clearly helps to address a couple of high priority tickets, so please have at it whenever you get a chance. Sorry again for the error. Next time you see me, I'll be at a chalkboard, writing ""I will not cut and paste"", à la Bart in the Simpsons opening credits. Except, instead of writing it, I'll be cutting and pasting it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/903#issuecomment-361080182
https://github.com/psi4/psi4/pull/903#issuecomment-361080182:67,Usability,simpl,simple,67,"Alrighty, this one should be ready to go now. I tried to cook up a simple test using f orbitals, but they're all too costly; in the end I just added a permutation to the atom ordering in our existing cc-pVDZ water test, because this is enough to reveal the bug. The fact that we've always had a working cc-pVDZ test case shows how subtle the bug is; the affected d components in water must be zero by symmetry. I did have a distorted water in my test suite to check that case, but didn't detect problems. Oh well, live and learn I guess. This should be a trivial review, and it clearly helps to address a couple of high priority tickets, so please have at it whenever you get a chance. Sorry again for the error. Next time you see me, I'll be at a chalkboard, writing ""I will not cut and paste"", à la Bart in the Simpsons opening credits. Except, instead of writing it, I'll be cutting and pasting it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/903#issuecomment-361080182
https://github.com/psi4/psi4/pull/903#issuecomment-361080182:523,Usability,learn,learn,523,"Alrighty, this one should be ready to go now. I tried to cook up a simple test using f orbitals, but they're all too costly; in the end I just added a permutation to the atom ordering in our existing cc-pVDZ water test, because this is enough to reveal the bug. The fact that we've always had a working cc-pVDZ test case shows how subtle the bug is; the affected d components in water must be zero by symmetry. I did have a distorted water in my test suite to check that case, but didn't detect problems. Oh well, live and learn I guess. This should be a trivial review, and it clearly helps to address a couple of high priority tickets, so please have at it whenever you get a chance. Sorry again for the error. Next time you see me, I'll be at a chalkboard, writing ""I will not cut and paste"", à la Bart in the Simpsons opening credits. Except, instead of writing it, I'll be cutting and pasting it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/903#issuecomment-361080182
https://github.com/psi4/psi4/pull/903#issuecomment-361080182:578,Usability,clear,clearly,578,"Alrighty, this one should be ready to go now. I tried to cook up a simple test using f orbitals, but they're all too costly; in the end I just added a permutation to the atom ordering in our existing cc-pVDZ water test, because this is enough to reveal the bug. The fact that we've always had a working cc-pVDZ test case shows how subtle the bug is; the affected d components in water must be zero by symmetry. I did have a distorted water in my test suite to check that case, but didn't detect problems. Oh well, live and learn I guess. This should be a trivial review, and it clearly helps to address a couple of high priority tickets, so please have at it whenever you get a chance. Sorry again for the error. Next time you see me, I'll be at a chalkboard, writing ""I will not cut and paste"", à la Bart in the Simpsons opening credits. Except, instead of writing it, I'll be cutting and pasting it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/903#issuecomment-361080182
https://github.com/psi4/psi4/pull/904#issuecomment-362349573:69,Security,access,access,69,"@dgasmith, is just the Ne test enough? I don't have ORCA, but I have access to G09.D01 (SOGGA, SOGGA11-X, M06-L, MN12-L) and a colleague of mine has G16 (MN15, MN15-L and PBE0-DH), that should be good enough.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/904#issuecomment-362349573
https://github.com/psi4/psi4/pull/904#issuecomment-362349573:26,Testability,test,test,26,"@dgasmith, is just the Ne test enough? I don't have ORCA, but I have access to G09.D01 (SOGGA, SOGGA11-X, M06-L, MN12-L) and a colleague of mine has G16 (MN15, MN15-L and PBE0-DH), that should be good enough.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/904#issuecomment-362349573
https://github.com/psi4/psi4/issues/905#issuecomment-361802078:338,Availability,error,error,338,"Yeah, I actually just separated the dft-custom-functional into two tests, w/ and w/o gcp. . Are you sure it was either building v2rdm internally or finding a recent enough (early Dec) one? Psi keeps breaking API so v2rdm keeps needing updates. I just tried it locally and v2rdm3 passes (others fail, but that's `for_realloc_lhs`, a build error), so I don't think it's wholly broken. If your psi was picking up a old v2rdm lying around, I can believe it would thoroughly fail, as you see. Thanks for the report!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/905#issuecomment-361802078
https://github.com/psi4/psi4/issues/905#issuecomment-361802078:235,Deployability,update,updates,235,"Yeah, I actually just separated the dft-custom-functional into two tests, w/ and w/o gcp. . Are you sure it was either building v2rdm internally or finding a recent enough (early Dec) one? Psi keeps breaking API so v2rdm keeps needing updates. I just tried it locally and v2rdm3 passes (others fail, but that's `for_realloc_lhs`, a build error), so I don't think it's wholly broken. If your psi was picking up a old v2rdm lying around, I can believe it would thoroughly fail, as you see. Thanks for the report!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/905#issuecomment-361802078
https://github.com/psi4/psi4/issues/905#issuecomment-361802078:67,Testability,test,tests,67,"Yeah, I actually just separated the dft-custom-functional into two tests, w/ and w/o gcp. . Are you sure it was either building v2rdm internally or finding a recent enough (early Dec) one? Psi keeps breaking API so v2rdm keeps needing updates. I just tried it locally and v2rdm3 passes (others fail, but that's `for_realloc_lhs`, a build error), so I don't think it's wholly broken. If your psi was picking up a old v2rdm lying around, I can believe it would thoroughly fail, as you see. Thanks for the report!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/905#issuecomment-361802078
https://github.com/psi4/psi4/issues/905#issuecomment-361848285:101,Testability,test,tests,101,"So I was pretty sure that I built v2rdm internally, but I rebuilt Psi4 just in case, and now all the tests are passing. So I must have had some old version lying around indeed. Thanks for the tip, everything is good now. Closing.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/905#issuecomment-361848285
https://github.com/psi4/psi4/issues/905#issuecomment-361935414:95,Testability,test,test,95,"Glad it worked out easily, but thanks for letting us know anyway. It's difficult to thoroughly test all combinations of systems, so reports like this are extremely helpful for identifying bugs.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/905#issuecomment-361935414
https://github.com/psi4/psi4/pull/908#issuecomment-362872366:335,Energy Efficiency,energy,energy,335,"`NO_RESPONSE` is only for SAPT0, that's right. The open-shell SAPT0 uses a different implementation and a different variable (I think it's `COUPLED_INDUCTION`) that already issues the proper warning, so I thought it would be more consistent to have closed-shell SAPT0 do the same. Currently, when induction is uncoupled, the induction energy gets put in both an UNCOUPLED and a COUPLED induction Psivar, with a warning in the output file. Would you rather have us not set the COUPLED variables ? We could then delete the warning.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-362872366
https://github.com/psi4/psi4/pull/908#issuecomment-362872366:116,Modifiability,variab,variable,116,"`NO_RESPONSE` is only for SAPT0, that's right. The open-shell SAPT0 uses a different implementation and a different variable (I think it's `COUPLED_INDUCTION`) that already issues the proper warning, so I thought it would be more consistent to have closed-shell SAPT0 do the same. Currently, when induction is uncoupled, the induction energy gets put in both an UNCOUPLED and a COUPLED induction Psivar, with a warning in the output file. Would you rather have us not set the COUPLED variables ? We could then delete the warning.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-362872366
https://github.com/psi4/psi4/pull/908#issuecomment-362872366:484,Modifiability,variab,variables,484,"`NO_RESPONSE` is only for SAPT0, that's right. The open-shell SAPT0 uses a different implementation and a different variable (I think it's `COUPLED_INDUCTION`) that already issues the proper warning, so I thought it would be more consistent to have closed-shell SAPT0 do the same. Currently, when induction is uncoupled, the induction energy gets put in both an UNCOUPLED and a COUPLED induction Psivar, with a warning in the output file. Would you rather have us not set the COUPLED variables ? We could then delete the warning.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-362872366
https://github.com/psi4/psi4/pull/908#issuecomment-363350484:36,Modifiability,variab,variables,36,I'd rather just not set the coupled variables if we do not compute them. I guess the argument the other way is folks might have a script expecting these values either in the printing or psivars. I still think not setting the coupled variables is a bit cleaner overall.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-363350484
https://github.com/psi4/psi4/pull/908#issuecomment-363350484:233,Modifiability,variab,variables,233,I'd rather just not set the coupled variables if we do not compute them. I guess the argument the other way is folks might have a script expecting these values either in the printing or psivars. I still think not setting the coupled variables is a bit cleaner overall.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-363350484
https://github.com/psi4/psi4/pull/908#issuecomment-364637354:47,Modifiability,variab,variable,47,"@dgasmith : Do you mean set up empty `Ind20,u` variable in case it's not computed ? As it is, the closed-shell SAPT0 code either computes coupled or uncoupled induction.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-364637354
https://github.com/psi4/psi4/pull/908#issuecomment-364640527:134,Availability,avail,available,134,"Well, I needed to add a commit so that the code compiles, so I also made sure the `Ind20,u` Psivars are filled up whenever Ind20,u is available (i.e. always except in the closed-shell SAPT0 code). Also, I added all the energy components Psivars in the FISAPT code. Once the tests are done I'll commit.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-364640527
https://github.com/psi4/psi4/pull/908#issuecomment-364640527:219,Energy Efficiency,energy,energy,219,"Well, I needed to add a commit so that the code compiles, so I also made sure the `Ind20,u` Psivars are filled up whenever Ind20,u is available (i.e. always except in the closed-shell SAPT0 code). Also, I added all the energy components Psivars in the FISAPT code. Once the tests are done I'll commit.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-364640527
https://github.com/psi4/psi4/pull/908#issuecomment-364640527:274,Testability,test,tests,274,"Well, I needed to add a commit so that the code compiles, so I also made sure the `Ind20,u` Psivars are filled up whenever Ind20,u is available (i.e. always except in the closed-shell SAPT0 code). Also, I added all the energy components Psivars in the FISAPT code. Once the tests are done I'll commit.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-364640527
https://github.com/psi4/psi4/pull/908#issuecomment-364643141:390,Availability,avail,available,390,I noticed that sapt8 test case is broken (no idea if it's because of me or not). It has 0.0 stored in `SAPT IND ENERGY` Psivar instead of the actual uncoupled value. I tried to modify sapt_util.py to make it compute the uncoupled induction energy for `SAPT IND ENERGY`but that did not fix the test case. I don't see where else `SAPT IND ENERGY` is set. Are the uncoupled energy values even available to sapt_util.py ?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-364643141
https://github.com/psi4/psi4/pull/908#issuecomment-364643141:112,Energy Efficiency,ENERGY,ENERGY,112,I noticed that sapt8 test case is broken (no idea if it's because of me or not). It has 0.0 stored in `SAPT IND ENERGY` Psivar instead of the actual uncoupled value. I tried to modify sapt_util.py to make it compute the uncoupled induction energy for `SAPT IND ENERGY`but that did not fix the test case. I don't see where else `SAPT IND ENERGY` is set. Are the uncoupled energy values even available to sapt_util.py ?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-364643141
https://github.com/psi4/psi4/pull/908#issuecomment-364643141:240,Energy Efficiency,energy,energy,240,I noticed that sapt8 test case is broken (no idea if it's because of me or not). It has 0.0 stored in `SAPT IND ENERGY` Psivar instead of the actual uncoupled value. I tried to modify sapt_util.py to make it compute the uncoupled induction energy for `SAPT IND ENERGY`but that did not fix the test case. I don't see where else `SAPT IND ENERGY` is set. Are the uncoupled energy values even available to sapt_util.py ?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-364643141
https://github.com/psi4/psi4/pull/908#issuecomment-364643141:261,Energy Efficiency,ENERGY,ENERGY,261,I noticed that sapt8 test case is broken (no idea if it's because of me or not). It has 0.0 stored in `SAPT IND ENERGY` Psivar instead of the actual uncoupled value. I tried to modify sapt_util.py to make it compute the uncoupled induction energy for `SAPT IND ENERGY`but that did not fix the test case. I don't see where else `SAPT IND ENERGY` is set. Are the uncoupled energy values even available to sapt_util.py ?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-364643141
https://github.com/psi4/psi4/pull/908#issuecomment-364643141:337,Energy Efficiency,ENERGY,ENERGY,337,I noticed that sapt8 test case is broken (no idea if it's because of me or not). It has 0.0 stored in `SAPT IND ENERGY` Psivar instead of the actual uncoupled value. I tried to modify sapt_util.py to make it compute the uncoupled induction energy for `SAPT IND ENERGY`but that did not fix the test case. I don't see where else `SAPT IND ENERGY` is set. Are the uncoupled energy values even available to sapt_util.py ?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-364643141
https://github.com/psi4/psi4/pull/908#issuecomment-364643141:371,Energy Efficiency,energy,energy,371,I noticed that sapt8 test case is broken (no idea if it's because of me or not). It has 0.0 stored in `SAPT IND ENERGY` Psivar instead of the actual uncoupled value. I tried to modify sapt_util.py to make it compute the uncoupled induction energy for `SAPT IND ENERGY`but that did not fix the test case. I don't see where else `SAPT IND ENERGY` is set. Are the uncoupled energy values even available to sapt_util.py ?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-364643141
https://github.com/psi4/psi4/pull/908#issuecomment-364643141:21,Testability,test,test,21,I noticed that sapt8 test case is broken (no idea if it's because of me or not). It has 0.0 stored in `SAPT IND ENERGY` Psivar instead of the actual uncoupled value. I tried to modify sapt_util.py to make it compute the uncoupled induction energy for `SAPT IND ENERGY`but that did not fix the test case. I don't see where else `SAPT IND ENERGY` is set. Are the uncoupled energy values even available to sapt_util.py ?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-364643141
https://github.com/psi4/psi4/pull/908#issuecomment-364643141:293,Testability,test,test,293,I noticed that sapt8 test case is broken (no idea if it's because of me or not). It has 0.0 stored in `SAPT IND ENERGY` Psivar instead of the actual uncoupled value. I tried to modify sapt_util.py to make it compute the uncoupled induction energy for `SAPT IND ENERGY`but that did not fix the test case. I don't see where else `SAPT IND ENERGY` is set. Are the uncoupled energy values even available to sapt_util.py ?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-364643141
https://github.com/psi4/psi4/pull/908#issuecomment-364674066:45,Modifiability,variab,variables,45,"In `sapt_jk_terms.py` we build the following variables:. ```python; ret[""Ind20,u (A<-B)""] = unc_ind_ab; ret[""Ind20,u (A->B)""] = unc_ind_ba; ret[""Ind20,u""] = unc_ind_ab + unc_ind_ba; ret[""Exch-Ind20,u (A<-B)""] = unc_indexch_ab; ret[""Exch-Ind20,u (A->B)""] = unc_indexch_ba; ret[""Exch-Ind20,u""] = unc_indexch_ba + unc_indexch_ab; ```. There are also the associated `r` terms as well. Hmm, SAPT8 passes on my laptop with current master.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-364674066
https://github.com/psi4/psi4/pull/908#issuecomment-364678447:145,Energy Efficiency,ENERGY,ENERGY,145,"I confirmed that sapt8 got broken because we stopped storing `Ind20,u` in the `Ind20,r` variable in usapt0.cc. I am not sure where the `SAPT IND ENERGY` variable that is used for the test is defined. Does open-shell SAPT0 even go through `sapt_jk_terms.py` ? It seems like the code flow changed a bit since I implemented it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-364678447
https://github.com/psi4/psi4/pull/908#issuecomment-364678447:88,Modifiability,variab,variable,88,"I confirmed that sapt8 got broken because we stopped storing `Ind20,u` in the `Ind20,r` variable in usapt0.cc. I am not sure where the `SAPT IND ENERGY` variable that is used for the test is defined. Does open-shell SAPT0 even go through `sapt_jk_terms.py` ? It seems like the code flow changed a bit since I implemented it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-364678447
https://github.com/psi4/psi4/pull/908#issuecomment-364678447:153,Modifiability,variab,variable,153,"I confirmed that sapt8 got broken because we stopped storing `Ind20,u` in the `Ind20,r` variable in usapt0.cc. I am not sure where the `SAPT IND ENERGY` variable that is used for the test is defined. Does open-shell SAPT0 even go through `sapt_jk_terms.py` ? It seems like the code flow changed a bit since I implemented it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-364678447
https://github.com/psi4/psi4/pull/908#issuecomment-364678447:183,Testability,test,test,183,"I confirmed that sapt8 got broken because we stopped storing `Ind20,u` in the `Ind20,r` variable in usapt0.cc. I am not sure where the `SAPT IND ENERGY` variable that is used for the test is defined. Does open-shell SAPT0 even go through `sapt_jk_terms.py` ? It seems like the code flow changed a bit since I implemented it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-364678447
https://github.com/psi4/psi4/pull/908#issuecomment-364679625:65,Energy Efficiency,ENERGY,ENERGY,65,"Ok, the problem arises because in `psivardefs.py` the `SAPT0 IND ENERGY` variable is always defined in terms of coupled induction. I remember we had discussions about that at the time. Since usapt0.cc does not put uncoupled induction in the coupled induction variables, the `SAPT0 IND ENERGY` is not defined properly any more. Possible solution: define uncoupled variants of the variables in `psivardefs.py`, and when we create `SAPT IND ENERGY` (in `proc.py`) we copy `SAPT0 IND,U ENERGY` value if `SAPT0 IND ENERGY` is not defined. ; - Would that work ?; - Is there a way to check whether a Psivar is defined other than checking if it is exactly 0 ?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-364679625
https://github.com/psi4/psi4/pull/908#issuecomment-364679625:285,Energy Efficiency,ENERGY,ENERGY,285,"Ok, the problem arises because in `psivardefs.py` the `SAPT0 IND ENERGY` variable is always defined in terms of coupled induction. I remember we had discussions about that at the time. Since usapt0.cc does not put uncoupled induction in the coupled induction variables, the `SAPT0 IND ENERGY` is not defined properly any more. Possible solution: define uncoupled variants of the variables in `psivardefs.py`, and when we create `SAPT IND ENERGY` (in `proc.py`) we copy `SAPT0 IND,U ENERGY` value if `SAPT0 IND ENERGY` is not defined. ; - Would that work ?; - Is there a way to check whether a Psivar is defined other than checking if it is exactly 0 ?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-364679625
https://github.com/psi4/psi4/pull/908#issuecomment-364679625:438,Energy Efficiency,ENERGY,ENERGY,438,"Ok, the problem arises because in `psivardefs.py` the `SAPT0 IND ENERGY` variable is always defined in terms of coupled induction. I remember we had discussions about that at the time. Since usapt0.cc does not put uncoupled induction in the coupled induction variables, the `SAPT0 IND ENERGY` is not defined properly any more. Possible solution: define uncoupled variants of the variables in `psivardefs.py`, and when we create `SAPT IND ENERGY` (in `proc.py`) we copy `SAPT0 IND,U ENERGY` value if `SAPT0 IND ENERGY` is not defined. ; - Would that work ?; - Is there a way to check whether a Psivar is defined other than checking if it is exactly 0 ?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-364679625
https://github.com/psi4/psi4/pull/908#issuecomment-364679625:482,Energy Efficiency,ENERGY,ENERGY,482,"Ok, the problem arises because in `psivardefs.py` the `SAPT0 IND ENERGY` variable is always defined in terms of coupled induction. I remember we had discussions about that at the time. Since usapt0.cc does not put uncoupled induction in the coupled induction variables, the `SAPT0 IND ENERGY` is not defined properly any more. Possible solution: define uncoupled variants of the variables in `psivardefs.py`, and when we create `SAPT IND ENERGY` (in `proc.py`) we copy `SAPT0 IND,U ENERGY` value if `SAPT0 IND ENERGY` is not defined. ; - Would that work ?; - Is there a way to check whether a Psivar is defined other than checking if it is exactly 0 ?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-364679625
https://github.com/psi4/psi4/pull/908#issuecomment-364679625:510,Energy Efficiency,ENERGY,ENERGY,510,"Ok, the problem arises because in `psivardefs.py` the `SAPT0 IND ENERGY` variable is always defined in terms of coupled induction. I remember we had discussions about that at the time. Since usapt0.cc does not put uncoupled induction in the coupled induction variables, the `SAPT0 IND ENERGY` is not defined properly any more. Possible solution: define uncoupled variants of the variables in `psivardefs.py`, and when we create `SAPT IND ENERGY` (in `proc.py`) we copy `SAPT0 IND,U ENERGY` value if `SAPT0 IND ENERGY` is not defined. ; - Would that work ?; - Is there a way to check whether a Psivar is defined other than checking if it is exactly 0 ?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-364679625
https://github.com/psi4/psi4/pull/908#issuecomment-364679625:73,Modifiability,variab,variable,73,"Ok, the problem arises because in `psivardefs.py` the `SAPT0 IND ENERGY` variable is always defined in terms of coupled induction. I remember we had discussions about that at the time. Since usapt0.cc does not put uncoupled induction in the coupled induction variables, the `SAPT0 IND ENERGY` is not defined properly any more. Possible solution: define uncoupled variants of the variables in `psivardefs.py`, and when we create `SAPT IND ENERGY` (in `proc.py`) we copy `SAPT0 IND,U ENERGY` value if `SAPT0 IND ENERGY` is not defined. ; - Would that work ?; - Is there a way to check whether a Psivar is defined other than checking if it is exactly 0 ?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-364679625
https://github.com/psi4/psi4/pull/908#issuecomment-364679625:259,Modifiability,variab,variables,259,"Ok, the problem arises because in `psivardefs.py` the `SAPT0 IND ENERGY` variable is always defined in terms of coupled induction. I remember we had discussions about that at the time. Since usapt0.cc does not put uncoupled induction in the coupled induction variables, the `SAPT0 IND ENERGY` is not defined properly any more. Possible solution: define uncoupled variants of the variables in `psivardefs.py`, and when we create `SAPT IND ENERGY` (in `proc.py`) we copy `SAPT0 IND,U ENERGY` value if `SAPT0 IND ENERGY` is not defined. ; - Would that work ?; - Is there a way to check whether a Psivar is defined other than checking if it is exactly 0 ?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-364679625
https://github.com/psi4/psi4/pull/908#issuecomment-364679625:379,Modifiability,variab,variables,379,"Ok, the problem arises because in `psivardefs.py` the `SAPT0 IND ENERGY` variable is always defined in terms of coupled induction. I remember we had discussions about that at the time. Since usapt0.cc does not put uncoupled induction in the coupled induction variables, the `SAPT0 IND ENERGY` is not defined properly any more. Possible solution: define uncoupled variants of the variables in `psivardefs.py`, and when we create `SAPT IND ENERGY` (in `proc.py`) we copy `SAPT0 IND,U ENERGY` value if `SAPT0 IND ENERGY` is not defined. ; - Would that work ?; - Is there a way to check whether a Psivar is defined other than checking if it is exactly 0 ?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-364679625
https://github.com/psi4/psi4/pull/908#issuecomment-364689483:324,Integrability,interface,interface,324,"Currently only SAPT(DFT) goes through `sapt_jk_terms.py`. I kind of hope that we can move more of the SAPT0 code over to something similar with Disp staying fully C++. We are going to gain a lot of SAPT0 capabilities soon like spin-flip SAPT, Sinf Exch-Ind and Exch-Disp, regularized SAPT, ISA Exch etc and the Python level interface should make it easier to handle without performance degradation. I think the proposed would work fine. You can use either of the following:; ```python; >>> psi4.core.get_variables() # Returns a dict of all variables; >>> psi4.core.has_variable(""CURRENT DIPOLE X"") # Returns a bool checking if the variable is set; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-364689483
https://github.com/psi4/psi4/pull/908#issuecomment-364689483:540,Modifiability,variab,variables,540,"Currently only SAPT(DFT) goes through `sapt_jk_terms.py`. I kind of hope that we can move more of the SAPT0 code over to something similar with Disp staying fully C++. We are going to gain a lot of SAPT0 capabilities soon like spin-flip SAPT, Sinf Exch-Ind and Exch-Disp, regularized SAPT, ISA Exch etc and the Python level interface should make it easier to handle without performance degradation. I think the proposed would work fine. You can use either of the following:; ```python; >>> psi4.core.get_variables() # Returns a dict of all variables; >>> psi4.core.has_variable(""CURRENT DIPOLE X"") # Returns a bool checking if the variable is set; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-364689483
https://github.com/psi4/psi4/pull/908#issuecomment-364689483:631,Modifiability,variab,variable,631,"Currently only SAPT(DFT) goes through `sapt_jk_terms.py`. I kind of hope that we can move more of the SAPT0 code over to something similar with Disp staying fully C++. We are going to gain a lot of SAPT0 capabilities soon like spin-flip SAPT, Sinf Exch-Ind and Exch-Disp, regularized SAPT, ISA Exch etc and the Python level interface should make it easier to handle without performance degradation. I think the proposed would work fine. You can use either of the following:; ```python; >>> psi4.core.get_variables() # Returns a dict of all variables; >>> psi4.core.has_variable(""CURRENT DIPOLE X"") # Returns a bool checking if the variable is set; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-364689483
https://github.com/psi4/psi4/pull/908#issuecomment-364689483:374,Performance,perform,performance,374,"Currently only SAPT(DFT) goes through `sapt_jk_terms.py`. I kind of hope that we can move more of the SAPT0 code over to something similar with Disp staying fully C++. We are going to gain a lot of SAPT0 capabilities soon like spin-flip SAPT, Sinf Exch-Ind and Exch-Disp, regularized SAPT, ISA Exch etc and the Python level interface should make it easier to handle without performance degradation. I think the proposed would work fine. You can use either of the following:; ```python; >>> psi4.core.get_variables() # Returns a dict of all variables; >>> psi4.core.has_variable(""CURRENT DIPOLE X"") # Returns a bool checking if the variable is set; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-364689483
https://github.com/psi4/psi4/pull/908#issuecomment-369358445:23,Safety,timeout,timeouts,23,Restarted. The land of timeouts is annoying. Is the build time going back up?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-369358445
https://github.com/psi4/psi4/issues/909#issuecomment-362856324:596,Energy Efficiency,charge,charge,596,"Your analysis of inconsistency and proposed fix are totally reasonable. But I disagree and rather have the opposite complaint about the Molecule class – that Z returns 0 instead of atomic number for ghost atoms so that function is actually conflating two independent quantities. mass is doing the right thing. The reason nonzero quantities are stored for ghost atoms in a CoordEntry is because the atoms can change their ghostedness upon `extract_subsets`, `activate_all_fragments`, etc. This leads to two tiers of ghostedness. The first are those that are read in as ghosts `@C` and get 0 Z and charge from the start. The others are those that are read in as real, then have their ghostedness changed on the fly. Note that Molecule internal fns sometimes have to check both `Molecule.fragment_types_` and `CoordEntry.ghost_` to get the full state of the Molecule. I've taken the back-away-slowly approach to ghosts in Molecule. And I have some memory of full-real-mol --> ghost-fragment-mol --> full-real-mol not actually being able to accomplish that last step. We tend to clone-manipulate-discard Mols these days rather than transform them internally, so our tests may not have noticed. In the [molrec dictionary repr](https://github.com/loriab/psi4/blob/pyvib2/psi4/driver/qcdb/molparse/tofrom.py#L78-L113) of a molecule, I've dropped fragment_types and consolidated the ghostedness. I've tried to keep the fields either totally independent (Z from real) or tied together (Z and symbol; to a lesser extent A, Z, symbol, mass). As far as getting things working for you, i'm inclined to suggest letting sleeping ghosts lie as far as internal Molecule structure. But go ahead and write a `molecular_weight` fn that accounts for both types of ghostedness internally and has a required bool argument as to whether or not mass of ghosts should be accounted for. Other opinions or rebuttals welcome.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-362856324
https://github.com/psi4/psi4/issues/909#issuecomment-362856324:1162,Testability,test,tests,1162,"Your analysis of inconsistency and proposed fix are totally reasonable. But I disagree and rather have the opposite complaint about the Molecule class – that Z returns 0 instead of atomic number for ghost atoms so that function is actually conflating two independent quantities. mass is doing the right thing. The reason nonzero quantities are stored for ghost atoms in a CoordEntry is because the atoms can change their ghostedness upon `extract_subsets`, `activate_all_fragments`, etc. This leads to two tiers of ghostedness. The first are those that are read in as ghosts `@C` and get 0 Z and charge from the start. The others are those that are read in as real, then have their ghostedness changed on the fly. Note that Molecule internal fns sometimes have to check both `Molecule.fragment_types_` and `CoordEntry.ghost_` to get the full state of the Molecule. I've taken the back-away-slowly approach to ghosts in Molecule. And I have some memory of full-real-mol --> ghost-fragment-mol --> full-real-mol not actually being able to accomplish that last step. We tend to clone-manipulate-discard Mols these days rather than transform them internally, so our tests may not have noticed. In the [molrec dictionary repr](https://github.com/loriab/psi4/blob/pyvib2/psi4/driver/qcdb/molparse/tofrom.py#L78-L113) of a molecule, I've dropped fragment_types and consolidated the ghostedness. I've tried to keep the fields either totally independent (Z from real) or tied together (Z and symbol; to a lesser extent A, Z, symbol, mass). As far as getting things working for you, i'm inclined to suggest letting sleeping ghosts lie as far as internal Molecule structure. But go ahead and write a `molecular_weight` fn that accounts for both types of ghostedness internally and has a required bool argument as to whether or not mass of ghosts should be accounted for. Other opinions or rebuttals welcome.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-362856324
https://github.com/psi4/psi4/issues/909#issuecomment-362954523:394,Availability,down,down,394,"You're right, the inconsistency could be fixed the other way around by ""fixing"" the Z values instead. Though even if a new `molecular_weight` fn were implemented in `molecule` that lets me circumvent the mass issue when necessary, the problem is that there may be places other than `optrot.cc` that are returning incorrect masses without even knowing it. I suppose these codes could be tracked down and updated with some hunting. I'd be more than happy to make a PR and add such a function, and keep my eyes out for codes calculating molecular weight. However, I'm still not sure I understand the utility of retaining masses for ghosted atoms. With some testing, it looks like real -> ghost -> real is still possible using `extract_subsets` even if I set the mass of ghost atoms to zero. I tested this just by editing `Molecule::mass` in the way described above. What doesn't seem to be possible, on the other hand, is ghost -> real (where the atoms are read in originally as ghosts `Gh(C)`), but that doesn't seem to work right now anyway (not really sure why that is, may look into this if I have time). I'm very unfamiliar with how masses and fragment identities are passed around. Is there a case in which having the ghost masses zero would keep you from making a properly-massed all-real-atoms copy of that molecule? That would definitely preclude any option of setting them zero permanently.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-362954523
https://github.com/psi4/psi4/issues/909#issuecomment-362954523:403,Deployability,update,updated,403,"You're right, the inconsistency could be fixed the other way around by ""fixing"" the Z values instead. Though even if a new `molecular_weight` fn were implemented in `molecule` that lets me circumvent the mass issue when necessary, the problem is that there may be places other than `optrot.cc` that are returning incorrect masses without even knowing it. I suppose these codes could be tracked down and updated with some hunting. I'd be more than happy to make a PR and add such a function, and keep my eyes out for codes calculating molecular weight. However, I'm still not sure I understand the utility of retaining masses for ghosted atoms. With some testing, it looks like real -> ghost -> real is still possible using `extract_subsets` even if I set the mass of ghost atoms to zero. I tested this just by editing `Molecule::mass` in the way described above. What doesn't seem to be possible, on the other hand, is ghost -> real (where the atoms are read in originally as ghosts `Gh(C)`), but that doesn't seem to work right now anyway (not really sure why that is, may look into this if I have time). I'm very unfamiliar with how masses and fragment identities are passed around. Is there a case in which having the ghost masses zero would keep you from making a properly-massed all-real-atoms copy of that molecule? That would definitely preclude any option of setting them zero permanently.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-362954523
https://github.com/psi4/psi4/issues/909#issuecomment-362954523:654,Testability,test,testing,654,"You're right, the inconsistency could be fixed the other way around by ""fixing"" the Z values instead. Though even if a new `molecular_weight` fn were implemented in `molecule` that lets me circumvent the mass issue when necessary, the problem is that there may be places other than `optrot.cc` that are returning incorrect masses without even knowing it. I suppose these codes could be tracked down and updated with some hunting. I'd be more than happy to make a PR and add such a function, and keep my eyes out for codes calculating molecular weight. However, I'm still not sure I understand the utility of retaining masses for ghosted atoms. With some testing, it looks like real -> ghost -> real is still possible using `extract_subsets` even if I set the mass of ghost atoms to zero. I tested this just by editing `Molecule::mass` in the way described above. What doesn't seem to be possible, on the other hand, is ghost -> real (where the atoms are read in originally as ghosts `Gh(C)`), but that doesn't seem to work right now anyway (not really sure why that is, may look into this if I have time). I'm very unfamiliar with how masses and fragment identities are passed around. Is there a case in which having the ghost masses zero would keep you from making a properly-massed all-real-atoms copy of that molecule? That would definitely preclude any option of setting them zero permanently.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-362954523
https://github.com/psi4/psi4/issues/909#issuecomment-362954523:790,Testability,test,tested,790,"You're right, the inconsistency could be fixed the other way around by ""fixing"" the Z values instead. Though even if a new `molecular_weight` fn were implemented in `molecule` that lets me circumvent the mass issue when necessary, the problem is that there may be places other than `optrot.cc` that are returning incorrect masses without even knowing it. I suppose these codes could be tracked down and updated with some hunting. I'd be more than happy to make a PR and add such a function, and keep my eyes out for codes calculating molecular weight. However, I'm still not sure I understand the utility of retaining masses for ghosted atoms. With some testing, it looks like real -> ghost -> real is still possible using `extract_subsets` even if I set the mass of ghost atoms to zero. I tested this just by editing `Molecule::mass` in the way described above. What doesn't seem to be possible, on the other hand, is ghost -> real (where the atoms are read in originally as ghosts `Gh(C)`), but that doesn't seem to work right now anyway (not really sure why that is, may look into this if I have time). I'm very unfamiliar with how masses and fragment identities are passed around. Is there a case in which having the ghost masses zero would keep you from making a properly-massed all-real-atoms copy of that molecule? That would definitely preclude any option of setting them zero permanently.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-362954523
https://github.com/psi4/psi4/issues/909#issuecomment-363463003:266,Availability,failure,failures,266,"I have no horse in this race in terms of is the behavior of `Molecule.mass` or `Molecule.Z` acting strangely, but the inconstancy is a problem. If we took every property test in the suite and added a test where ghost atoms are involved I think we would turn up some failures since the way molecular weight is calculated in `optrot.cc` as @bgpeyton described does not properly ignore ghosted atoms and i wouldn't be surprised if there were others.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-363463003
https://github.com/psi4/psi4/issues/909#issuecomment-363463003:170,Testability,test,test,170,"I have no horse in this race in terms of is the behavior of `Molecule.mass` or `Molecule.Z` acting strangely, but the inconstancy is a problem. If we took every property test in the suite and added a test where ghost atoms are involved I think we would turn up some failures since the way molecular weight is calculated in `optrot.cc` as @bgpeyton described does not properly ignore ghosted atoms and i wouldn't be surprised if there were others.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-363463003
https://github.com/psi4/psi4/issues/909#issuecomment-363463003:200,Testability,test,test,200,"I have no horse in this race in terms of is the behavior of `Molecule.mass` or `Molecule.Z` acting strangely, but the inconstancy is a problem. If we took every property test in the suite and added a test where ghost atoms are involved I think we would turn up some failures since the way molecular weight is calculated in `optrot.cc` as @bgpeyton described does not properly ignore ghosted atoms and i wouldn't be surprised if there were others.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-363463003
https://github.com/psi4/psi4/issues/909#issuecomment-363473061:343,Availability,down,down,343,"I completely agree with @bgpeyton and @amjames that there are probably misuses of Z & mass in the code resulting from unclear or inconsistent definitions (I think there's even cases where the `Mol.property()` fn differs in behavior from the `Mol.fproperty()` fn (that includes dummy atoms). It would be great to survey the code and hunt these down. My trepidation comes in because Mol is delicate w/the two versions of ghosting (type A (not reversible): `@C`, type B (reversible): `extract_subset(1, 2)`) and I worry that changes would start an avalanche. In fact I definitely recommend _not_ ""fixing"" `Mol.Z()` the way I would like (`C` and `@C` both return 6) because lots of places in the Mol code depend on using that fn as a test for type A ghostedness. > I'm very unfamiliar with how masses and fragment identities are passed around. Is there a case in which having the ghost masses zero would keep you from making a properly-massed all-real-atoms copy of that molecule? That would definitely preclude any option of setting them zero permanently. What happens is that every atom at parse-time gets read into a CoordEntry object that holds Z, ghost, charge, mass, element symbol, coords, etc. If the atom is type-A ghost, then Z, ghost, and charge get set accordingly. There is no other info so type-A is not eligible to return to reality. The fragmentation pattern is also stored at parse-time with all-`Real`. For a trimer, when you `extract_subsets(1, 2)`, the `Mol.fragment_types_` gets reset to `[Real, Ghost, Absent]`. The CoordEntries don't change, but every function in Mol is trained to iterate over the frags, and handle Ghost or Absent differently, so that in the fn output, they _appear_ ghosted (type B) or absent. Because the mass, Z info in the CoordEntry is unchanged, this ghostedness is reversible. So in the type B sense, mass must not be set to 0 permanently b/c then type B would be irreversible. I suppose you're advocating zeroing mass for type A? That'd be more consistent",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-363473061
https://github.com/psi4/psi4/issues/909#issuecomment-363473061:2296,Availability,down,downstream,2296,"mmend _not_ ""fixing"" `Mol.Z()` the way I would like (`C` and `@C` both return 6) because lots of places in the Mol code depend on using that fn as a test for type A ghostedness. > I'm very unfamiliar with how masses and fragment identities are passed around. Is there a case in which having the ghost masses zero would keep you from making a properly-massed all-real-atoms copy of that molecule? That would definitely preclude any option of setting them zero permanently. What happens is that every atom at parse-time gets read into a CoordEntry object that holds Z, ghost, charge, mass, element symbol, coords, etc. If the atom is type-A ghost, then Z, ghost, and charge get set accordingly. There is no other info so type-A is not eligible to return to reality. The fragmentation pattern is also stored at parse-time with all-`Real`. For a trimer, when you `extract_subsets(1, 2)`, the `Mol.fragment_types_` gets reset to `[Real, Ghost, Absent]`. The CoordEntries don't change, but every function in Mol is trained to iterate over the frags, and handle Ghost or Absent differently, so that in the fn output, they _appear_ ghosted (type B) or absent. Because the mass, Z info in the CoordEntry is unchanged, this ghostedness is reversible. So in the type B sense, mass must not be set to 0 permanently b/c then type B would be irreversible. I suppose you're advocating zeroing mass for type A? That'd be more consistent, but its effects on COM, inertial frame, symmetry, etc. would need to be probed. Or maybe our moments of inertia are even now wrong in the presence of ghosts. Summary: I would love a rationalization pass through the Mol accessor fns. But what I value more than that is (1) Mol not breaking for downstream code we don't control, (2) a pass through the psi codebase making sure `Z` and `mass` are being used in accordance with the programmers' intentions (apparently not in optrot), and (3) you not going down a Mol rabbit hole. Maybe we should talk more at the conf call tomorrow.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-363473061
https://github.com/psi4/psi4/issues/909#issuecomment-363473061:2505,Availability,down,down,2505,"mmend _not_ ""fixing"" `Mol.Z()` the way I would like (`C` and `@C` both return 6) because lots of places in the Mol code depend on using that fn as a test for type A ghostedness. > I'm very unfamiliar with how masses and fragment identities are passed around. Is there a case in which having the ghost masses zero would keep you from making a properly-massed all-real-atoms copy of that molecule? That would definitely preclude any option of setting them zero permanently. What happens is that every atom at parse-time gets read into a CoordEntry object that holds Z, ghost, charge, mass, element symbol, coords, etc. If the atom is type-A ghost, then Z, ghost, and charge get set accordingly. There is no other info so type-A is not eligible to return to reality. The fragmentation pattern is also stored at parse-time with all-`Real`. For a trimer, when you `extract_subsets(1, 2)`, the `Mol.fragment_types_` gets reset to `[Real, Ghost, Absent]`. The CoordEntries don't change, but every function in Mol is trained to iterate over the frags, and handle Ghost or Absent differently, so that in the fn output, they _appear_ ghosted (type B) or absent. Because the mass, Z info in the CoordEntry is unchanged, this ghostedness is reversible. So in the type B sense, mass must not be set to 0 permanently b/c then type B would be irreversible. I suppose you're advocating zeroing mass for type A? That'd be more consistent, but its effects on COM, inertial frame, symmetry, etc. would need to be probed. Or maybe our moments of inertia are even now wrong in the presence of ghosts. Summary: I would love a rationalization pass through the Mol accessor fns. But what I value more than that is (1) Mol not breaking for downstream code we don't control, (2) a pass through the psi codebase making sure `Z` and `mass` are being used in accordance with the programmers' intentions (apparently not in optrot), and (3) you not going down a Mol rabbit hole. Maybe we should talk more at the conf call tomorrow.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-363473061
https://github.com/psi4/psi4/issues/909#issuecomment-363473061:1155,Energy Efficiency,charge,charge,1155,"r or inconsistent definitions (I think there's even cases where the `Mol.property()` fn differs in behavior from the `Mol.fproperty()` fn (that includes dummy atoms). It would be great to survey the code and hunt these down. My trepidation comes in because Mol is delicate w/the two versions of ghosting (type A (not reversible): `@C`, type B (reversible): `extract_subset(1, 2)`) and I worry that changes would start an avalanche. In fact I definitely recommend _not_ ""fixing"" `Mol.Z()` the way I would like (`C` and `@C` both return 6) because lots of places in the Mol code depend on using that fn as a test for type A ghostedness. > I'm very unfamiliar with how masses and fragment identities are passed around. Is there a case in which having the ghost masses zero would keep you from making a properly-massed all-real-atoms copy of that molecule? That would definitely preclude any option of setting them zero permanently. What happens is that every atom at parse-time gets read into a CoordEntry object that holds Z, ghost, charge, mass, element symbol, coords, etc. If the atom is type-A ghost, then Z, ghost, and charge get set accordingly. There is no other info so type-A is not eligible to return to reality. The fragmentation pattern is also stored at parse-time with all-`Real`. For a trimer, when you `extract_subsets(1, 2)`, the `Mol.fragment_types_` gets reset to `[Real, Ghost, Absent]`. The CoordEntries don't change, but every function in Mol is trained to iterate over the frags, and handle Ghost or Absent differently, so that in the fn output, they _appear_ ghosted (type B) or absent. Because the mass, Z info in the CoordEntry is unchanged, this ghostedness is reversible. So in the type B sense, mass must not be set to 0 permanently b/c then type B would be irreversible. I suppose you're advocating zeroing mass for type A? That'd be more consistent, but its effects on COM, inertial frame, symmetry, etc. would need to be probed. Or maybe our moments of inertia are even n",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-363473061
https://github.com/psi4/psi4/issues/909#issuecomment-363473061:1246,Energy Efficiency,charge,charge,1246,"m the `Mol.fproperty()` fn (that includes dummy atoms). It would be great to survey the code and hunt these down. My trepidation comes in because Mol is delicate w/the two versions of ghosting (type A (not reversible): `@C`, type B (reversible): `extract_subset(1, 2)`) and I worry that changes would start an avalanche. In fact I definitely recommend _not_ ""fixing"" `Mol.Z()` the way I would like (`C` and `@C` both return 6) because lots of places in the Mol code depend on using that fn as a test for type A ghostedness. > I'm very unfamiliar with how masses and fragment identities are passed around. Is there a case in which having the ghost masses zero would keep you from making a properly-massed all-real-atoms copy of that molecule? That would definitely preclude any option of setting them zero permanently. What happens is that every atom at parse-time gets read into a CoordEntry object that holds Z, ghost, charge, mass, element symbol, coords, etc. If the atom is type-A ghost, then Z, ghost, and charge get set accordingly. There is no other info so type-A is not eligible to return to reality. The fragmentation pattern is also stored at parse-time with all-`Real`. For a trimer, when you `extract_subsets(1, 2)`, the `Mol.fragment_types_` gets reset to `[Real, Ghost, Absent]`. The CoordEntries don't change, but every function in Mol is trained to iterate over the frags, and handle Ghost or Absent differently, so that in the fn output, they _appear_ ghosted (type B) or absent. Because the mass, Z info in the CoordEntry is unchanged, this ghostedness is reversible. So in the type B sense, mass must not be set to 0 permanently b/c then type B would be irreversible. I suppose you're advocating zeroing mass for type A? That'd be more consistent, but its effects on COM, inertial frame, symmetry, etc. would need to be probed. Or maybe our moments of inertia are even now wrong in the presence of ghosts. Summary: I would love a rationalization pass through the Mol accessor fns.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-363473061
https://github.com/psi4/psi4/issues/909#issuecomment-363473061:701,Integrability,depend,depend,701,"I completely agree with @bgpeyton and @amjames that there are probably misuses of Z & mass in the code resulting from unclear or inconsistent definitions (I think there's even cases where the `Mol.property()` fn differs in behavior from the `Mol.fproperty()` fn (that includes dummy atoms). It would be great to survey the code and hunt these down. My trepidation comes in because Mol is delicate w/the two versions of ghosting (type A (not reversible): `@C`, type B (reversible): `extract_subset(1, 2)`) and I worry that changes would start an avalanche. In fact I definitely recommend _not_ ""fixing"" `Mol.Z()` the way I would like (`C` and `@C` both return 6) because lots of places in the Mol code depend on using that fn as a test for type A ghostedness. > I'm very unfamiliar with how masses and fragment identities are passed around. Is there a case in which having the ghost masses zero would keep you from making a properly-massed all-real-atoms copy of that molecule? That would definitely preclude any option of setting them zero permanently. What happens is that every atom at parse-time gets read into a CoordEntry object that holds Z, ghost, charge, mass, element symbol, coords, etc. If the atom is type-A ghost, then Z, ghost, and charge get set accordingly. There is no other info so type-A is not eligible to return to reality. The fragmentation pattern is also stored at parse-time with all-`Real`. For a trimer, when you `extract_subsets(1, 2)`, the `Mol.fragment_types_` gets reset to `[Real, Ghost, Absent]`. The CoordEntries don't change, but every function in Mol is trained to iterate over the frags, and handle Ghost or Absent differently, so that in the fn output, they _appear_ ghosted (type B) or absent. Because the mass, Z info in the CoordEntry is unchanged, this ghostedness is reversible. So in the type B sense, mass must not be set to 0 permanently b/c then type B would be irreversible. I suppose you're advocating zeroing mass for type A? That'd be more consistent",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-363473061
https://github.com/psi4/psi4/issues/909#issuecomment-363473061:2222,Security,access,accessor,2222,"mmend _not_ ""fixing"" `Mol.Z()` the way I would like (`C` and `@C` both return 6) because lots of places in the Mol code depend on using that fn as a test for type A ghostedness. > I'm very unfamiliar with how masses and fragment identities are passed around. Is there a case in which having the ghost masses zero would keep you from making a properly-massed all-real-atoms copy of that molecule? That would definitely preclude any option of setting them zero permanently. What happens is that every atom at parse-time gets read into a CoordEntry object that holds Z, ghost, charge, mass, element symbol, coords, etc. If the atom is type-A ghost, then Z, ghost, and charge get set accordingly. There is no other info so type-A is not eligible to return to reality. The fragmentation pattern is also stored at parse-time with all-`Real`. For a trimer, when you `extract_subsets(1, 2)`, the `Mol.fragment_types_` gets reset to `[Real, Ghost, Absent]`. The CoordEntries don't change, but every function in Mol is trained to iterate over the frags, and handle Ghost or Absent differently, so that in the fn output, they _appear_ ghosted (type B) or absent. Because the mass, Z info in the CoordEntry is unchanged, this ghostedness is reversible. So in the type B sense, mass must not be set to 0 permanently b/c then type B would be irreversible. I suppose you're advocating zeroing mass for type A? That'd be more consistent, but its effects on COM, inertial frame, symmetry, etc. would need to be probed. Or maybe our moments of inertia are even now wrong in the presence of ghosts. Summary: I would love a rationalization pass through the Mol accessor fns. But what I value more than that is (1) Mol not breaking for downstream code we don't control, (2) a pass through the psi codebase making sure `Z` and `mass` are being used in accordance with the programmers' intentions (apparently not in optrot), and (3) you not going down a Mol rabbit hole. Maybe we should talk more at the conf call tomorrow.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-363473061
https://github.com/psi4/psi4/issues/909#issuecomment-363473061:730,Testability,test,test,730,"I completely agree with @bgpeyton and @amjames that there are probably misuses of Z & mass in the code resulting from unclear or inconsistent definitions (I think there's even cases where the `Mol.property()` fn differs in behavior from the `Mol.fproperty()` fn (that includes dummy atoms). It would be great to survey the code and hunt these down. My trepidation comes in because Mol is delicate w/the two versions of ghosting (type A (not reversible): `@C`, type B (reversible): `extract_subset(1, 2)`) and I worry that changes would start an avalanche. In fact I definitely recommend _not_ ""fixing"" `Mol.Z()` the way I would like (`C` and `@C` both return 6) because lots of places in the Mol code depend on using that fn as a test for type A ghostedness. > I'm very unfamiliar with how masses and fragment identities are passed around. Is there a case in which having the ghost masses zero would keep you from making a properly-massed all-real-atoms copy of that molecule? That would definitely preclude any option of setting them zero permanently. What happens is that every atom at parse-time gets read into a CoordEntry object that holds Z, ghost, charge, mass, element symbol, coords, etc. If the atom is type-A ghost, then Z, ghost, and charge get set accordingly. There is no other info so type-A is not eligible to return to reality. The fragmentation pattern is also stored at parse-time with all-`Real`. For a trimer, when you `extract_subsets(1, 2)`, the `Mol.fragment_types_` gets reset to `[Real, Ghost, Absent]`. The CoordEntries don't change, but every function in Mol is trained to iterate over the frags, and handle Ghost or Absent differently, so that in the fn output, they _appear_ ghosted (type B) or absent. Because the mass, Z info in the CoordEntry is unchanged, this ghostedness is reversible. So in the type B sense, mass must not be set to 0 permanently b/c then type B would be irreversible. I suppose you're advocating zeroing mass for type A? That'd be more consistent",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-363473061
https://github.com/psi4/psi4/issues/909#issuecomment-363476390:248,Availability,down,downstream,248,"Note that I have no doubt Mol was thoroughly tested for all these things in its development and was in pristine working order. But we didn't have the notion of preserving those unit tests for a future refactoring. So I'm just trying to convey that downstream may rely on the inconsistency and changes that in class development may have been a ""fix"" are now a ""refactoring"".",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-363476390
https://github.com/psi4/psi4/issues/909#issuecomment-363476390:201,Modifiability,refactor,refactoring,201,"Note that I have no doubt Mol was thoroughly tested for all these things in its development and was in pristine working order. But we didn't have the notion of preserving those unit tests for a future refactoring. So I'm just trying to convey that downstream may rely on the inconsistency and changes that in class development may have been a ""fix"" are now a ""refactoring"".",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-363476390
https://github.com/psi4/psi4/issues/909#issuecomment-363476390:360,Modifiability,refactor,refactoring,360,"Note that I have no doubt Mol was thoroughly tested for all these things in its development and was in pristine working order. But we didn't have the notion of preserving those unit tests for a future refactoring. So I'm just trying to convey that downstream may rely on the inconsistency and changes that in class development may have been a ""fix"" are now a ""refactoring"".",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-363476390
https://github.com/psi4/psi4/issues/909#issuecomment-363476390:45,Testability,test,tested,45,"Note that I have no doubt Mol was thoroughly tested for all these things in its development and was in pristine working order. But we didn't have the notion of preserving those unit tests for a future refactoring. So I'm just trying to convey that downstream may rely on the inconsistency and changes that in class development may have been a ""fix"" are now a ""refactoring"".",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-363476390
https://github.com/psi4/psi4/issues/909#issuecomment-363476390:182,Testability,test,tests,182,"Note that I have no doubt Mol was thoroughly tested for all these things in its development and was in pristine working order. But we didn't have the notion of preserving those unit tests for a future refactoring. So I'm just trying to convey that downstream may rely on the inconsistency and changes that in class development may have been a ""fix"" are now a ""refactoring"".",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-363476390
https://github.com/psi4/psi4/issues/909#issuecomment-363484400:315,Energy Efficiency,charge,charge,315,"One reason ghosted masses may be nonzero is we didn't want the frame to change btwn a fully real dimer and its counterpoise variants? wouldn't be surprised if sapt relies on this. That brings to mind a question I had on the Hessian analysis of whether frame should be changing upon isotopic substitution. Center of charge frame would solve that but not a frame-change-upon-ghosting issue. Upshot is that some uses require ghost Z be zero (nuclear repulsion energy), some require ghost Z be atomic number (reading off element identity), some require ghost mass be zero (molecular mass), some require ghost mass be real (frame stability for dimer subsetting). So may as well provide a Mol function with a required argument to choose each case (like ACS & DGAS recently imposed for nuclear_repulsion_energy) to make sure consumers are aware of the differences and are using the right one. Python export can defuault to something sensible (hopefully the current behavior).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-363484400
https://github.com/psi4/psi4/issues/909#issuecomment-363484400:457,Energy Efficiency,energy,energy,457,"One reason ghosted masses may be nonzero is we didn't want the frame to change btwn a fully real dimer and its counterpoise variants? wouldn't be surprised if sapt relies on this. That brings to mind a question I had on the Hessian analysis of whether frame should be changing upon isotopic substitution. Center of charge frame would solve that but not a frame-change-upon-ghosting issue. Upshot is that some uses require ghost Z be zero (nuclear repulsion energy), some require ghost Z be atomic number (reading off element identity), some require ghost mass be zero (molecular mass), some require ghost mass be real (frame stability for dimer subsetting). So may as well provide a Mol function with a required argument to choose each case (like ACS & DGAS recently imposed for nuclear_repulsion_energy) to make sure consumers are aware of the differences and are using the right one. Python export can defuault to something sensible (hopefully the current behavior).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-363484400
https://github.com/psi4/psi4/issues/909#issuecomment-363495902:229,Availability,down,downstream,229,"I see that this goes a lot further than I was expecting it to; some day that will stop surprising me. It's a shame about the apparent necessity to keep the inconsistent definitions, but you're probably right when you say lots of downstream code is going to rely on the current behavior, whether or not we see it as ""correct."" The dual-identity of type-A and type-B ghosts only complicates matters further, though I definitely see the need for it. It would almost be better if type-A ghosts didn't exist and at parse-time any ""default"" ghosts are treated as type-B ghosts somehow, but this is likely more complicated then it sounds. Either way, the ability to go back-and-forth between real and ghost is absolutely necessary, and type-B is the only one that can consistently do that. . Fixing only type-A ghosts to return zero mass may only confuse things further. If nothing else, the functions should at least do the same thing for type-A and type-B ghosts. Consistency between `Molecule.mass` and `Molecule.Z` could be worked on later, though as you pointed out it's probably not a good idea to change `Molecule.Z`. . As for a new `Molecule` function to ensure the user knows what they're going to get, are you referring specifically to a `molecular_weight` function or more generally a function to return either the mass or Z val as either zero or real depending on input? I could get behind either of those, though with `molecular_weight` I would suggest simply setting a default for ghost atoms to return zero mass as I can't imagine anyone would want a molecular weight including ghost atom masses. . EDIT: I just saw what you said about ACS and DGAS nre edit in [#844](https://github.com/psi4/psi4/pull/844). That could work, requiring the argument c-side and giving a default py-side, though I wonder how many places we'd have to update c-side calls to conform to this. Might be the best answer with the least pain involved.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-363495902
https://github.com/psi4/psi4/issues/909#issuecomment-363495902:1838,Deployability,update,update,1838,"I see that this goes a lot further than I was expecting it to; some day that will stop surprising me. It's a shame about the apparent necessity to keep the inconsistent definitions, but you're probably right when you say lots of downstream code is going to rely on the current behavior, whether or not we see it as ""correct."" The dual-identity of type-A and type-B ghosts only complicates matters further, though I definitely see the need for it. It would almost be better if type-A ghosts didn't exist and at parse-time any ""default"" ghosts are treated as type-B ghosts somehow, but this is likely more complicated then it sounds. Either way, the ability to go back-and-forth between real and ghost is absolutely necessary, and type-B is the only one that can consistently do that. . Fixing only type-A ghosts to return zero mass may only confuse things further. If nothing else, the functions should at least do the same thing for type-A and type-B ghosts. Consistency between `Molecule.mass` and `Molecule.Z` could be worked on later, though as you pointed out it's probably not a good idea to change `Molecule.Z`. . As for a new `Molecule` function to ensure the user knows what they're going to get, are you referring specifically to a `molecular_weight` function or more generally a function to return either the mass or Z val as either zero or real depending on input? I could get behind either of those, though with `molecular_weight` I would suggest simply setting a default for ghost atoms to return zero mass as I can't imagine anyone would want a molecular weight including ghost atom masses. . EDIT: I just saw what you said about ACS and DGAS nre edit in [#844](https://github.com/psi4/psi4/pull/844). That could work, requiring the argument c-side and giving a default py-side, though I wonder how many places we'd have to update c-side calls to conform to this. Might be the best answer with the least pain involved.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-363495902
https://github.com/psi4/psi4/issues/909#issuecomment-363495902:1356,Integrability,depend,depending,1356,"I see that this goes a lot further than I was expecting it to; some day that will stop surprising me. It's a shame about the apparent necessity to keep the inconsistent definitions, but you're probably right when you say lots of downstream code is going to rely on the current behavior, whether or not we see it as ""correct."" The dual-identity of type-A and type-B ghosts only complicates matters further, though I definitely see the need for it. It would almost be better if type-A ghosts didn't exist and at parse-time any ""default"" ghosts are treated as type-B ghosts somehow, but this is likely more complicated then it sounds. Either way, the ability to go back-and-forth between real and ghost is absolutely necessary, and type-B is the only one that can consistently do that. . Fixing only type-A ghosts to return zero mass may only confuse things further. If nothing else, the functions should at least do the same thing for type-A and type-B ghosts. Consistency between `Molecule.mass` and `Molecule.Z` could be worked on later, though as you pointed out it's probably not a good idea to change `Molecule.Z`. . As for a new `Molecule` function to ensure the user knows what they're going to get, are you referring specifically to a `molecular_weight` function or more generally a function to return either the mass or Z val as either zero or real depending on input? I could get behind either of those, though with `molecular_weight` I would suggest simply setting a default for ghost atoms to return zero mass as I can't imagine anyone would want a molecular weight including ghost atom masses. . EDIT: I just saw what you said about ACS and DGAS nre edit in [#844](https://github.com/psi4/psi4/pull/844). That could work, requiring the argument c-side and giving a default py-side, though I wonder how many places we'd have to update c-side calls to conform to this. Might be the best answer with the least pain involved.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-363495902
https://github.com/psi4/psi4/issues/909#issuecomment-363495902:1459,Usability,simpl,simply,1459,"I see that this goes a lot further than I was expecting it to; some day that will stop surprising me. It's a shame about the apparent necessity to keep the inconsistent definitions, but you're probably right when you say lots of downstream code is going to rely on the current behavior, whether or not we see it as ""correct."" The dual-identity of type-A and type-B ghosts only complicates matters further, though I definitely see the need for it. It would almost be better if type-A ghosts didn't exist and at parse-time any ""default"" ghosts are treated as type-B ghosts somehow, but this is likely more complicated then it sounds. Either way, the ability to go back-and-forth between real and ghost is absolutely necessary, and type-B is the only one that can consistently do that. . Fixing only type-A ghosts to return zero mass may only confuse things further. If nothing else, the functions should at least do the same thing for type-A and type-B ghosts. Consistency between `Molecule.mass` and `Molecule.Z` could be worked on later, though as you pointed out it's probably not a good idea to change `Molecule.Z`. . As for a new `Molecule` function to ensure the user knows what they're going to get, are you referring specifically to a `molecular_weight` function or more generally a function to return either the mass or Z val as either zero or real depending on input? I could get behind either of those, though with `molecular_weight` I would suggest simply setting a default for ghost atoms to return zero mass as I can't imagine anyone would want a molecular weight including ghost atom masses. . EDIT: I just saw what you said about ACS and DGAS nre edit in [#844](https://github.com/psi4/psi4/pull/844). That could work, requiring the argument c-side and giving a default py-side, though I wonder how many places we'd have to update c-side calls to conform to this. Might be the best answer with the least pain involved.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-363495902
https://github.com/psi4/psi4/issues/909#issuecomment-363502006:20,Deployability,update,update,20,"If you are doing an update of the documentation for Molecule.Z, it might be useful to consider possible user confusion between Molecule.Z (capital, gives the charge) and Molecule.z (lowercase, gives the z-coordinate). Both return floats, so no type mismatch, and it's not an obvious typo visually. Maybe a warning in the API would be helpful.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-363502006
https://github.com/psi4/psi4/issues/909#issuecomment-363502006:158,Energy Efficiency,charge,charge,158,"If you are doing an update of the documentation for Molecule.Z, it might be useful to consider possible user confusion between Molecule.Z (capital, gives the charge) and Molecule.z (lowercase, gives the z-coordinate). Both return floats, so no type mismatch, and it's not an obvious typo visually. Maybe a warning in the API would be helpful.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-363502006
https://github.com/psi4/psi4/issues/909#issuecomment-363503391:930,Availability,down,downstream,930,"> It would almost be better if type-A ghosts didn't exist and at parse-time any ""default"" ghosts are treated as type-B ghosts somehow. That's what I do for the json molecule record – there's a list `real = [True, False, True, False, False, False]` and a separate `fragment_separators = [3]` that decouples what would be the following in psi. Ghosting types A & B are collapsed. . ```; molecule {; C; @C; C; --; C; C; C; }; extract_subsets(1, 2); ```. > As for a new Molecule function to ensure the user knows what they're going to get, are you referring specifically to a molecular_weight function or more generally a function to return either the mass or Z val as either zero or real depending on input?. I think I've settled on recommending changing the signature of `Molecule.Z()` and `Molecule.mass()` to take a required argument `bool zero_ghost`. The recompile will force consideration of which was wanted everywhere (incl. downstream). At the same time, I think leave `CoordEntry.Z()` and `CoordEntry.mass()` alone in their probably inconsistent state. Most of the `Z()` calls in Mol are probably to `CoordEntry.Z()` and have the gh=0 factored into the logic. Should definitely get consensus tomorrow before diving in.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-363503391
https://github.com/psi4/psi4/issues/909#issuecomment-363503391:685,Integrability,depend,depending,685,"> It would almost be better if type-A ghosts didn't exist and at parse-time any ""default"" ghosts are treated as type-B ghosts somehow. That's what I do for the json molecule record – there's a list `real = [True, False, True, False, False, False]` and a separate `fragment_separators = [3]` that decouples what would be the following in psi. Ghosting types A & B are collapsed. . ```; molecule {; C; @C; C; --; C; C; C; }; extract_subsets(1, 2); ```. > As for a new Molecule function to ensure the user knows what they're going to get, are you referring specifically to a molecular_weight function or more generally a function to return either the mass or Z val as either zero or real depending on input?. I think I've settled on recommending changing the signature of `Molecule.Z()` and `Molecule.mass()` to take a required argument `bool zero_ghost`. The recompile will force consideration of which was wanted everywhere (incl. downstream). At the same time, I think leave `CoordEntry.Z()` and `CoordEntry.mass()` alone in their probably inconsistent state. Most of the `Z()` calls in Mol are probably to `CoordEntry.Z()` and have the gh=0 factored into the logic. Should definitely get consensus tomorrow before diving in.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-363503391
https://github.com/psi4/psi4/issues/909#issuecomment-363503391:1160,Testability,log,logic,1160,"> It would almost be better if type-A ghosts didn't exist and at parse-time any ""default"" ghosts are treated as type-B ghosts somehow. That's what I do for the json molecule record – there's a list `real = [True, False, True, False, False, False]` and a separate `fragment_separators = [3]` that decouples what would be the following in psi. Ghosting types A & B are collapsed. . ```; molecule {; C; @C; C; --; C; C; C; }; extract_subsets(1, 2); ```. > As for a new Molecule function to ensure the user knows what they're going to get, are you referring specifically to a molecular_weight function or more generally a function to return either the mass or Z val as either zero or real depending on input?. I think I've settled on recommending changing the signature of `Molecule.Z()` and `Molecule.mass()` to take a required argument `bool zero_ghost`. The recompile will force consideration of which was wanted everywhere (incl. downstream). At the same time, I think leave `CoordEntry.Z()` and `CoordEntry.mass()` alone in their probably inconsistent state. Most of the `Z()` calls in Mol are probably to `CoordEntry.Z()` and have the gh=0 factored into the logic. Should definitely get consensus tomorrow before diving in.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-363503391
https://github.com/psi4/psi4/issues/909#issuecomment-363505467:124,Energy Efficiency,charge,charge,124,"@tsexton, yes, it's a pity that the name `Z` which should properly be `int` atomic number has devolved into `float` nuclear charge. I support all documentation clarifications. You can even edit [them](https://github.com/psi4/psi4/blob/master/psi4/src/export_mints.cc#L985-L993) online with the little pencil. GH will turn your edits into a pull request.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-363505467
https://github.com/psi4/psi4/issues/910#issuecomment-363350044:81,Usability,guid,guide,81,"[Here](https://gist.github.com/Chaser324/ce0505fbed06b947d962) is a pretty quick guide on the standard PR cycle. Effectively, you need to make a new ""feature"" branch with the change, push that change to your GitHub fork, and then make a PR to our psi4/psi4:master. I can go into more detail if needed.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/910#issuecomment-363350044
https://github.com/psi4/psi4/issues/911#issuecomment-363237714:12,Usability,simpl,simple,12,"Yea, pretty simple fix. The JK object only thinks it needs to do J when it needs both J and K. Just need to flip a switch. Ill get this one.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/911#issuecomment-363237714
https://github.com/psi4/psi4/pull/914#issuecomment-364091920:658,Availability,error,errors,658,"Not sure what you exactly mean. Setting vv10_b in the superfunctional is straightforward. I followed what was done for the LRC omega. . Ideally the user has not do anything for the pre-defined functionals once I get the -nl dashparam to work. The manual setting is more for developers who want to fit the vv10_b for a new functional. Using DFT-NL should be like using DFT-D. Having the vv10 integrator exposed to python and supplying a user-defined density would be nice. And for a post-scf VV10 correction that is probably the way to go for the scfitertopy implementation. Though this pybind is currently a level too much for me, i dont even understand the errors i get. Small steps for me ;-)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/914#issuecomment-364091920
https://github.com/psi4/psi4/pull/914#issuecomment-364091920:391,Deployability,integrat,integrator,391,"Not sure what you exactly mean. Setting vv10_b in the superfunctional is straightforward. I followed what was done for the LRC omega. . Ideally the user has not do anything for the pre-defined functionals once I get the -nl dashparam to work. The manual setting is more for developers who want to fit the vv10_b for a new functional. Using DFT-NL should be like using DFT-D. Having the vv10 integrator exposed to python and supplying a user-defined density would be nice. And for a post-scf VV10 correction that is probably the way to go for the scfitertopy implementation. Though this pybind is currently a level too much for me, i dont even understand the errors i get. Small steps for me ;-)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/914#issuecomment-364091920
https://github.com/psi4/psi4/pull/914#issuecomment-364091920:391,Integrability,integrat,integrator,391,"Not sure what you exactly mean. Setting vv10_b in the superfunctional is straightforward. I followed what was done for the LRC omega. . Ideally the user has not do anything for the pre-defined functionals once I get the -nl dashparam to work. The manual setting is more for developers who want to fit the vv10_b for a new functional. Using DFT-NL should be like using DFT-D. Having the vv10 integrator exposed to python and supplying a user-defined density would be nice. And for a post-scf VV10 correction that is probably the way to go for the scfitertopy implementation. Though this pybind is currently a level too much for me, i dont even understand the errors i get. Small steps for me ;-)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/914#issuecomment-364091920
https://github.com/psi4/psi4/pull/914#issuecomment-364091920:402,Security,expose,exposed,402,"Not sure what you exactly mean. Setting vv10_b in the superfunctional is straightforward. I followed what was done for the LRC omega. . Ideally the user has not do anything for the pre-defined functionals once I get the -nl dashparam to work. The manual setting is more for developers who want to fit the vv10_b for a new functional. Using DFT-NL should be like using DFT-D. Having the vv10 integrator exposed to python and supplying a user-defined density would be nice. And for a post-scf VV10 correction that is probably the way to go for the scfitertopy implementation. Though this pybind is currently a level too much for me, i dont even understand the errors i get. Small steps for me ;-)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/914#issuecomment-364091920
https://github.com/psi4/psi4/pull/914#issuecomment-364107454:222,Availability,ping,ping,222,"As a general note, if you are working on Psi4 please drop us a line if you are having issues. Contributing should be an easy process and we are here to help! I believe you are on our Slack channel, feel free to comment or ping me there. If not we can certainly shoot out an invite (thats general to anyone reading this).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/914#issuecomment-364107454
https://github.com/psi4/psi4/pull/914#issuecomment-364430092:276,Availability,error,errors,276,"The planned functionality works and my code does no longer cause obvious trouble in the various tests. However, especially some of the modifications in`empirical_dispersion.py` seem not elegant. I force `return 0 `in the compute_energy/gradient/hessian parts. Otherwise I get errors like:; `AttributeError: 'NoneType' object has no attribute 'compute_energy`; Here I would need advice if the solution is not acceptable. I will come with questions in slacks soon enough ;)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/914#issuecomment-364430092
https://github.com/psi4/psi4/pull/914#issuecomment-364430092:96,Testability,test,tests,96,"The planned functionality works and my code does no longer cause obvious trouble in the various tests. However, especially some of the modifications in`empirical_dispersion.py` seem not elegant. I force `return 0 `in the compute_energy/gradient/hessian parts. Otherwise I get errors like:; `AttributeError: 'NoneType' object has no attribute 'compute_energy`; Here I would need advice if the solution is not acceptable. I will come with questions in slacks soon enough ;)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/914#issuecomment-364430092
https://github.com/psi4/psi4/pull/914#issuecomment-364492929:162,Integrability,interface,interface,162,"Yea, this one is on us. We need to talk a bit about how to make operations like you are showing easier. We were only thinking of -D when originally building this interface, but allowing a bit more flexibility when mixing these functionals together would be useful. The other option is to use a function generator in `custom_hyb_funcs.py` or `superfuncs.py` that loops over all nl `dash_params`, generates a new function, and appends it the dictionary.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/914#issuecomment-364492929
https://github.com/psi4/psi4/pull/914#issuecomment-369515257:45,Usability,simpl,simply,45,"@hokru the idea is that the functional would simply specify:; ```; ...; ""dispersion"": {""type"": ""nl"", ""params"": {""b"": X, ""c"": Y}, ""citation"": ""My Tetrahedron Letters Paper""},; ...; ```; The type is obviously up for discussion - `nl == VV10` or `rVV10` etc. The builder would then set all the required parameters. If this gets merged before PR #922 , and there's at least one superfunctional that uses this path, I can fix the other PR to work with this new code.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/914#issuecomment-369515257
https://github.com/psi4/psi4/pull/914#issuecomment-369527099:80,Energy Efficiency,energy,energy,80,"Yes, but that needs to be done automatically when the user specifies -nl in the energy call.; I just cant picture all the work flow in my head right now. Maybe next week I have more time for this. As a side note: the current changes in compute_gradient+hessian in empirical_dispersion.py are not working correctly. (they should never be called since we need numerical gradients, but still...)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/914#issuecomment-369527099
https://github.com/psi4/psi4/pull/914#issuecomment-379694122:395,Testability,test,testing,395,"Oh sweet madness that is everything DSD double-hybrid... All DSD-DHDF-NL versions I put in will use the frozen-core parameters and will also use the D3BJ variants. No matter what others have done. This makes the most sense and brings some needed consistency. The description does mention what is used. The impact of these small variations are very minimal from my experience anyway. No thorough testing was done of course. I think it is less severe than different LDA versions for GGAs, where are often ignored. I hope everyone agrees. For the sake of future users all DHDF should use frozen-core by default, imo. This is done already for standard DF-MP2, but I cannot find how.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/914#issuecomment-379694122
https://github.com/psi4/psi4/pull/914#issuecomment-385183176:121,Safety,avoid,avoiding,121,upcoming changes:. - [x] formatting request; - [x] modifying tests; - [x] NL_DISPERSION_PARAMETERS name; - [x] partially avoiding EmpiricalDispersion,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/914#issuecomment-385183176
https://github.com/psi4/psi4/pull/914#issuecomment-385183176:61,Testability,test,tests,61,upcoming changes:. - [x] formatting request; - [x] modifying tests; - [x] NL_DISPERSION_PARAMETERS name; - [x] partially avoiding EmpiricalDispersion,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/914#issuecomment-385183176
https://github.com/psi4/psi4/pull/914#issuecomment-385265092:261,Availability,error,error,261,"@dgasmith: I don't know the ""citation"", ""description"" and also [""dispersion""][""citation""] maximum lengths. However, it shouldn't be too difficult to ""pad"" all three of these strings with the right number of leading spaces, and throw a warning (or even raise an error) if they are too long. However, perhaps not in this PR? If you make an issue (and tell me the limits), I can tackle this next week.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/914#issuecomment-385265092
https://github.com/psi4/psi4/pull/914#issuecomment-385627521:617,Testability,test,tests,617,"Yeah, I think in print outs (ie. sup.name) we want ""uppercase"" (in general it makes sense to set the ""name"" in the dictionary to the preferred spelling, ie. ""wB97X-D"" as opposed to all-uppercase). Internally, I've modified all lookup calls (which use ""name"" and ""alias"" entries) to lowercase, but I might've been overzealous. The rest of the code uses lowercase names of methods internally. Then there are the ""PBEh-3c"" and ""HF-3c"" cases, where dftd3/gcp require the dashes to be stripped, but the functionals as defined in the papers have a dash. In all changes to these upper/lower mechanics, the `gcp` and `dftd3` tests should be checked; `dft-smoke` is not enough.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/914#issuecomment-385627521
https://github.com/psi4/psi4/pull/914#issuecomment-385654990:137,Safety,Timeout,Timeout,137,All test but these pass:; ```; 368 - dft-custom-gga (Failed) (see https://github.com/psi4/psi4/issues/994); 370 - dft-bench-interaction (Timeout); 372 - pywrap-align (Failed); 373 - pywrap-align-chiral (Failed). ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/914#issuecomment-385654990
https://github.com/psi4/psi4/pull/914#issuecomment-385654990:4,Testability,test,test,4,All test but these pass:; ```; 368 - dft-custom-gga (Failed) (see https://github.com/psi4/psi4/issues/994); 370 - dft-bench-interaction (Timeout); 372 - pywrap-align (Failed); 373 - pywrap-align-chiral (Failed). ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/914#issuecomment-385654990
https://github.com/psi4/psi4/pull/916#issuecomment-364766180:115,Availability,fault,fault,115,While you are at it. Could you change `camb3lyp` to `cam-b3lyp` and remove one of the `b2gpplyp-d3bj` entries. (my fault to add it twice). And I guess `lcwpbe` is `lcr-wpbe` in libxc?; I think these are the remaining name inconsistencies. Adding the citation where the parameters are from is a nice touch!,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/916#issuecomment-364766180
https://github.com/psi4/psi4/pull/916#issuecomment-364769227:370,Testability,test,tests,370,"I fixed the `cam-b3lyp` and removed duplicate `b2gpplyp`. However, I'm not sure about the `LC-wPBE` vs `LRC-wPBE` question: the first one is by [Vydrov and Scuseria](https://doi.org/10.1063/1.2409292), the second one is by [Rohrdanz et al.]( https://doi.org/10.1063/1.3073302). Confusing nomenclature. Also, it might be helpful to merge PR #880 before merging this one, tests for N12, N12-SX ans MN12-SX are in there.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/916#issuecomment-364769227
https://github.com/psi4/psi4/pull/916#issuecomment-364777118:66,Testability,test,test,66,All three of the new functionals now pass the water + water dimer test from PR #880.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/916#issuecomment-364777118
https://github.com/psi4/psi4/pull/916#issuecomment-365273795:27,Availability,avail,available,27,"But.. those parameters are available also in the presently used version of libxc. Just query cam_omega, cam_alpha and cam_beta from libxc, these will give you all the range separation parameters.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/916#issuecomment-365273795
https://github.com/psi4/psi4/pull/916#issuecomment-365321499:516,Integrability,depend,depending,516,"libxc defines cam_alpha = full exact exchange and cam_beta = short-range only exact exchange.; So, in the long range you have cam_alpha, and in the short range you have cam_alpha+cam_beta. For N12-SX the code in libxc reads; ```; case XC_HYB_GGA_X_N12_SX:; params->CC = CC_N12_SX;; p->cam_alpha = 0.00;; p->cam_beta = 0.25;; p->cam_omega = 0.11;; ```; where cam_beta is the one you have above, and the minus sign comes from the convention used in Psi4. (You can define F = H0 + J(P) + K(P), or F = H0 + J(P) - K(P), depending how you define your exchange matirx. The former choice is more physical as it includes the minus sign within K.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/916#issuecomment-365321499
https://github.com/psi4/psi4/issues/917#issuecomment-364853728:85,Availability,down,download,85,I have updated my psi4 program and still got the message BasisSetNotFound; How can I download and install new basis set list,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/917#issuecomment-364853728
https://github.com/psi4/psi4/issues/917#issuecomment-364853728:7,Deployability,update,updated,7,I have updated my psi4 program and still got the message BasisSetNotFound; How can I download and install new basis set list,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/917#issuecomment-364853728
https://github.com/psi4/psi4/issues/917#issuecomment-364853728:98,Deployability,install,install,98,I have updated my psi4 program and still got the message BasisSetNotFound; How can I download and install new basis set list,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/917#issuecomment-364853728
https://github.com/psi4/psi4/issues/917#issuecomment-364853728:49,Integrability,message,message,49,I have updated my psi4 program and still got the message BasisSetNotFound; How can I download and install new basis set list,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/917#issuecomment-364853728
https://github.com/psi4/psi4/issues/917#issuecomment-364864174:25,Deployability,install,installed,25,Replace the file in your installed `share/psi4/basis` with the one I linked.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/917#issuecomment-364864174
https://github.com/psi4/psi4/issues/918#issuecomment-365455796:115,Usability,responsiv,responsive,115,File 180 is in transition right now from its longstanding form (which was under psio indexing and control and thus responsive to psi4_io commands) to a numpy version that's more suited to python interaction (and that's under a different retention control). For now you can get 180 by commenting out [this line](https://github.com/psi4/psi4/blob/master/psi4/extras.py#L45).,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/918#issuecomment-365455796
https://github.com/psi4/psi4/issues/918#issuecomment-365643972:89,Energy Efficiency,energy,energy,89,"Thanks for your answer! But can I use this file for a restart? This seems not to work:. `energy('scf',restart_file=""./output.default.17274.180.npz""); ` . thanks,; Christopher",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/918#issuecomment-365643972
https://github.com/psi4/psi4/issues/918#issuecomment-370243678:27,Deployability,patch,patched,27,"Your right, this should be patched up in #918. As a note you will need to add a `set guess read` in your input file for this to work.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/918#issuecomment-370243678
https://github.com/psi4/psi4/issues/920#issuecomment-365856686:1153,Performance,tune,tuned,1153,"I had a bit more of a look and here's what I'd propose:. 1) Introduce a new handler into `psi4.driver.dft_funcs.build_superfunctional` at line 175, that returns `sup = (func, False)` for non-dispersion funcs and `sup = (func, (""custom"", dispersion_type, dispersion_params))`. 2) The new handler should apply default parameters (alpha, beta, omega, references) from LibXC, unless overridden in the functional definition:; ```; func_dict[""PBE0""] = {; ""name"": ""PBE0"",; ""xc_functionals"": {""HYB_GGA_XC_PBEH"": {}}, # XC functional defined - all parameters should be in LibXC; }; func_dict[""MN15""] = {; ""name"": ""MN15"",; ""c_functionals"": {""MGGA_C_MN15"": {}},; ""x_functionals"": {""HYB_MGGA_X_MN15"": {}}, # HYB without alpha, parameter sourced from LibXC; }; func_dict[""B2PLYP""] = {; ""name"": ""B2PLYP"",; ""c_functionals"": {""GGA_C_LYP"": {""alpha"": 0.73}}, # C alpha implies C_MP2 = 1 - C_GGA; ""x_functionals"": {""GGA_X_B88"": {""alpha"": 0.47}}, # X alpha implies X_HF = 1 - X_GGA; ""citation"": ""..."",; }; func_dict[""DSD-BLYP-D2""] = {; ""name"": ""DSD-BLYP-D2"",; ""c_functionals"": {; ""GGA_C_LYP"": {""alpha"": 0.55}, ; ""C_MP2"": {""alpha"": 1.0, ""ss"": 0.43, ""os"": 0.46}, # SS and OS tuned for -D2; },; ""x_functionals"": {""GGA_X_B88"": {""alpha"": 0.29}},; ""citation"": ""..."",; ""dispersion"": {; ""type"": ""-D2"", ; ""params"": {""s6"": 0.35},; ""citation"": ""..."", ; },; }; ```; 3) The class `EmpiricalDispersion` will need to be adjusted to process the provided parameters accordingly. All possible parameters for the `dispersion_type` should be passed into `EmpiricalDispersion` from the handler above, so that `self.dash_params = dispersion_params`, with defaults already filled into `dispersion_params` for missing parameters (eg. `""s6"": 1.0, ""alpha6"": 14.0` for `-d3zero`). Perhaps using a switch (such as `alias == ""custom""` suggested above)?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/920#issuecomment-365856686
https://github.com/psi4/psi4/issues/920#issuecomment-366111314:345,Safety,detect,detect,345,"A few notes:; 1) Why does the dispersion string need to be expanded? Not opposed just curious.; 2) Im not a fan of the transparent assumptions of what HF alpha and MP2 components should be. Would prefer if we specific them explicitly in other parts of the spec. On this note it is a bit hard to pick up something like `HYB_MGGA_X_MN15` and auto detect the need to pull parameters from the underlying function. In addition, what happens if someone does a silly operation like mixing multiple HYB functionals? We likely want to specify *something* to indicate that we should pull exchange parameters from a given functional.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/920#issuecomment-366111314
https://github.com/psi4/psi4/issues/920#issuecomment-366177398:827,Usability,simpl,simply,827,"> 1. Why does the dispersion string need to be expanded? Not opposed just curious. I'm not sure how to handle the dispersion part, actually. It makes sense to keep current ``dashparams``, as the dict-based method seems inconvenient (but not impossible) for implementing functionals that require a lot of tweaks, such as `PWPB95`, and the old method uses dashparams. On the other hand, it makes sense to have the definition of a functional in one place - the dictionary - as opposed to splitting it across files. That means having the dashparams in the functional dictionary, and passing them into `EmpiricalDispersion`. > 2. Im not a fan of the transparent assumptions of what HF alpha and MP2 components should be. Would prefer if we specific them explicitly in other parts of the spec. The spec could (some might say should) simply be ""use LibXC defaults, unless overridden"". > In addition, what happens if someone does a silly operation like mixing multiple HYB functionals?. Fair point. If somebody were to do:; ```; junk = {; ""x_functionals"": {{""HYB_MGGA_X_MN15"": {}, ""HYB_MGGA_M06"": {}}; ...; }; ```; we should probably catch that and crash gracefully, as it's not clear which libxc-provided `ALPHA` should be used for `X_HF`. However, if somebody wants to do something like:. ```; junk = {; ""x_functionals"": {{""HYB_MGGA_X_MN15"": {""alpha"": 0.5}, ""HYB_MGGA_M06"": {""alpha"":0.5}, ""X_HF"":{""alpha"": 0.27}}; ...; }; ```; that should be allowed, and is quite clear: 50% MN15 GGA exchange + 50% M06 GGA exchange + 27% HF exchange. Perhaps we could simply enforce that if ``len(x_functionals) >= 2`` then ``""X_HF"" in x_functionals`` must be true. I'm not sure how this works with range separation. It should be, in theory, possible to combine two range-separated hybrids, with different ``OMEGA``'s.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/920#issuecomment-366177398
https://github.com/psi4/psi4/issues/920#issuecomment-366177398:1171,Usability,clear,clear,1171,"> 1. Why does the dispersion string need to be expanded? Not opposed just curious. I'm not sure how to handle the dispersion part, actually. It makes sense to keep current ``dashparams``, as the dict-based method seems inconvenient (but not impossible) for implementing functionals that require a lot of tweaks, such as `PWPB95`, and the old method uses dashparams. On the other hand, it makes sense to have the definition of a functional in one place - the dictionary - as opposed to splitting it across files. That means having the dashparams in the functional dictionary, and passing them into `EmpiricalDispersion`. > 2. Im not a fan of the transparent assumptions of what HF alpha and MP2 components should be. Would prefer if we specific them explicitly in other parts of the spec. The spec could (some might say should) simply be ""use LibXC defaults, unless overridden"". > In addition, what happens if someone does a silly operation like mixing multiple HYB functionals?. Fair point. If somebody were to do:; ```; junk = {; ""x_functionals"": {{""HYB_MGGA_X_MN15"": {}, ""HYB_MGGA_M06"": {}}; ...; }; ```; we should probably catch that and crash gracefully, as it's not clear which libxc-provided `ALPHA` should be used for `X_HF`. However, if somebody wants to do something like:. ```; junk = {; ""x_functionals"": {{""HYB_MGGA_X_MN15"": {""alpha"": 0.5}, ""HYB_MGGA_M06"": {""alpha"":0.5}, ""X_HF"":{""alpha"": 0.27}}; ...; }; ```; that should be allowed, and is quite clear: 50% MN15 GGA exchange + 50% M06 GGA exchange + 27% HF exchange. Perhaps we could simply enforce that if ``len(x_functionals) >= 2`` then ``""X_HF"" in x_functionals`` must be true. I'm not sure how this works with range separation. It should be, in theory, possible to combine two range-separated hybrids, with different ``OMEGA``'s.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/920#issuecomment-366177398
https://github.com/psi4/psi4/issues/920#issuecomment-366177398:1458,Usability,clear,clear,1458,"> 1. Why does the dispersion string need to be expanded? Not opposed just curious. I'm not sure how to handle the dispersion part, actually. It makes sense to keep current ``dashparams``, as the dict-based method seems inconvenient (but not impossible) for implementing functionals that require a lot of tweaks, such as `PWPB95`, and the old method uses dashparams. On the other hand, it makes sense to have the definition of a functional in one place - the dictionary - as opposed to splitting it across files. That means having the dashparams in the functional dictionary, and passing them into `EmpiricalDispersion`. > 2. Im not a fan of the transparent assumptions of what HF alpha and MP2 components should be. Would prefer if we specific them explicitly in other parts of the spec. The spec could (some might say should) simply be ""use LibXC defaults, unless overridden"". > In addition, what happens if someone does a silly operation like mixing multiple HYB functionals?. Fair point. If somebody were to do:; ```; junk = {; ""x_functionals"": {{""HYB_MGGA_X_MN15"": {}, ""HYB_MGGA_M06"": {}}; ...; }; ```; we should probably catch that and crash gracefully, as it's not clear which libxc-provided `ALPHA` should be used for `X_HF`. However, if somebody wants to do something like:. ```; junk = {; ""x_functionals"": {{""HYB_MGGA_X_MN15"": {""alpha"": 0.5}, ""HYB_MGGA_M06"": {""alpha"":0.5}, ""X_HF"":{""alpha"": 0.27}}; ...; }; ```; that should be allowed, and is quite clear: 50% MN15 GGA exchange + 50% M06 GGA exchange + 27% HF exchange. Perhaps we could simply enforce that if ``len(x_functionals) >= 2`` then ``""X_HF"" in x_functionals`` must be true. I'm not sure how this works with range separation. It should be, in theory, possible to combine two range-separated hybrids, with different ``OMEGA``'s.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/920#issuecomment-366177398
https://github.com/psi4/psi4/issues/920#issuecomment-366177398:1546,Usability,simpl,simply,1546,"> 1. Why does the dispersion string need to be expanded? Not opposed just curious. I'm not sure how to handle the dispersion part, actually. It makes sense to keep current ``dashparams``, as the dict-based method seems inconvenient (but not impossible) for implementing functionals that require a lot of tweaks, such as `PWPB95`, and the old method uses dashparams. On the other hand, it makes sense to have the definition of a functional in one place - the dictionary - as opposed to splitting it across files. That means having the dashparams in the functional dictionary, and passing them into `EmpiricalDispersion`. > 2. Im not a fan of the transparent assumptions of what HF alpha and MP2 components should be. Would prefer if we specific them explicitly in other parts of the spec. The spec could (some might say should) simply be ""use LibXC defaults, unless overridden"". > In addition, what happens if someone does a silly operation like mixing multiple HYB functionals?. Fair point. If somebody were to do:; ```; junk = {; ""x_functionals"": {{""HYB_MGGA_X_MN15"": {}, ""HYB_MGGA_M06"": {}}; ...; }; ```; we should probably catch that and crash gracefully, as it's not clear which libxc-provided `ALPHA` should be used for `X_HF`. However, if somebody wants to do something like:. ```; junk = {; ""x_functionals"": {{""HYB_MGGA_X_MN15"": {""alpha"": 0.5}, ""HYB_MGGA_M06"": {""alpha"":0.5}, ""X_HF"":{""alpha"": 0.27}}; ...; }; ```; that should be allowed, and is quite clear: 50% MN15 GGA exchange + 50% M06 GGA exchange + 27% HF exchange. Perhaps we could simply enforce that if ``len(x_functionals) >= 2`` then ``""X_HF"" in x_functionals`` must be true. I'm not sure how this works with range separation. It should be, in theory, possible to combine two range-separated hybrids, with different ``OMEGA``'s.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/920#issuecomment-366177398
https://github.com/psi4/psi4/issues/920#issuecomment-366219242:482,Testability,log,logic,482,"For dashparams I think it makes sense to leave these in place and we would build new dictionaries on the fly. For example B3LYP would look like the following:. ```python; funcs = {...} # All of the normal functionals; for dash in dash_params:; tmp = copy.deepcopy(funcs[""B3LYP""]); tmp[""dispersion""] = (""D3"", ""Zero"", param1, param2, ...); tmp[""name""] = ""B3LYP-D3""; funcs[tmp[""name""]] = tmp; ```. Special D3 functionals could then be built by hand. This would also make all of the if logic in the building a functional simpler I think. > The spec could (some might say should) simply be ""use LibXC defaults, unless overridden"". I would prefer if we would just specify something like ""use_xc_params"" to make it clear that something like ""HYB_GGA_X_MN15"" has parameters that we can pull from to help setup the functional, but ""GGA_C_PBE"" does not. In this way something like:. ```; junk = {; ""x_functionals"": {{""HYB_MGGA_X_MN15"": {""use_xc_params"": True}, ""HYB_MGGA_M06"": {}}; ...; }; ```. would still work out.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/920#issuecomment-366219242
https://github.com/psi4/psi4/issues/920#issuecomment-366219242:517,Usability,simpl,simpler,517,"For dashparams I think it makes sense to leave these in place and we would build new dictionaries on the fly. For example B3LYP would look like the following:. ```python; funcs = {...} # All of the normal functionals; for dash in dash_params:; tmp = copy.deepcopy(funcs[""B3LYP""]); tmp[""dispersion""] = (""D3"", ""Zero"", param1, param2, ...); tmp[""name""] = ""B3LYP-D3""; funcs[tmp[""name""]] = tmp; ```. Special D3 functionals could then be built by hand. This would also make all of the if logic in the building a functional simpler I think. > The spec could (some might say should) simply be ""use LibXC defaults, unless overridden"". I would prefer if we would just specify something like ""use_xc_params"" to make it clear that something like ""HYB_GGA_X_MN15"" has parameters that we can pull from to help setup the functional, but ""GGA_C_PBE"" does not. In this way something like:. ```; junk = {; ""x_functionals"": {{""HYB_MGGA_X_MN15"": {""use_xc_params"": True}, ""HYB_MGGA_M06"": {}}; ...; }; ```. would still work out.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/920#issuecomment-366219242
https://github.com/psi4/psi4/issues/920#issuecomment-366219242:575,Usability,simpl,simply,575,"For dashparams I think it makes sense to leave these in place and we would build new dictionaries on the fly. For example B3LYP would look like the following:. ```python; funcs = {...} # All of the normal functionals; for dash in dash_params:; tmp = copy.deepcopy(funcs[""B3LYP""]); tmp[""dispersion""] = (""D3"", ""Zero"", param1, param2, ...); tmp[""name""] = ""B3LYP-D3""; funcs[tmp[""name""]] = tmp; ```. Special D3 functionals could then be built by hand. This would also make all of the if logic in the building a functional simpler I think. > The spec could (some might say should) simply be ""use LibXC defaults, unless overridden"". I would prefer if we would just specify something like ""use_xc_params"" to make it clear that something like ""HYB_GGA_X_MN15"" has parameters that we can pull from to help setup the functional, but ""GGA_C_PBE"" does not. In this way something like:. ```; junk = {; ""x_functionals"": {{""HYB_MGGA_X_MN15"": {""use_xc_params"": True}, ""HYB_MGGA_M06"": {}}; ...; }; ```. would still work out.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/920#issuecomment-366219242
https://github.com/psi4/psi4/issues/920#issuecomment-366219242:708,Usability,clear,clear,708,"For dashparams I think it makes sense to leave these in place and we would build new dictionaries on the fly. For example B3LYP would look like the following:. ```python; funcs = {...} # All of the normal functionals; for dash in dash_params:; tmp = copy.deepcopy(funcs[""B3LYP""]); tmp[""dispersion""] = (""D3"", ""Zero"", param1, param2, ...); tmp[""name""] = ""B3LYP-D3""; funcs[tmp[""name""]] = tmp; ```. Special D3 functionals could then be built by hand. This would also make all of the if logic in the building a functional simpler I think. > The spec could (some might say should) simply be ""use LibXC defaults, unless overridden"". I would prefer if we would just specify something like ""use_xc_params"" to make it clear that something like ""HYB_GGA_X_MN15"" has parameters that we can pull from to help setup the functional, but ""GGA_C_PBE"" does not. In this way something like:. ```; junk = {; ""x_functionals"": {{""HYB_MGGA_X_MN15"": {""use_xc_params"": True}, ""HYB_MGGA_M06"": {}}; ...; }; ```. would still work out.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/920#issuecomment-366219242
https://github.com/psi4/psi4/pull/921#issuecomment-366087579:369,Energy Efficiency,ENERGY,ENERGY,369,"@dgasmith Uggh. And to think that DFT-SAPT is worse ... For reference, alpha is presently incorporated into the psivar name (https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/psivardefs.py#L42). The way I'd frame the question is:; * Is `S^2`/`S^inf` an _option_ that modifies the infinite-precision value of the same physical quantity (like `PK`/`DF` `HF TOTAL ENERGY`)?; * or Are `S^2`/`S^inf` terms distinctly different physical quantities computed (e.g., Ind20/Ind30 or singlet/triplet MP2 correlation energy). * Another point, is there ever safe mixing of s2/sinf?; * Can we compute Sinf terms and incorporate them into post-0 SAPT?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/921#issuecomment-366087579
https://github.com/psi4/psi4/pull/921#issuecomment-366087579:513,Energy Efficiency,energy,energy,513,"@dgasmith Uggh. And to think that DFT-SAPT is worse ... For reference, alpha is presently incorporated into the psivar name (https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/psivardefs.py#L42). The way I'd frame the question is:; * Is `S^2`/`S^inf` an _option_ that modifies the infinite-precision value of the same physical quantity (like `PK`/`DF` `HF TOTAL ENERGY`)?; * or Are `S^2`/`S^inf` terms distinctly different physical quantities computed (e.g., Ind20/Ind30 or singlet/triplet MP2 correlation energy). * Another point, is there ever safe mixing of s2/sinf?; * Can we compute Sinf terms and incorporate them into post-0 SAPT?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/921#issuecomment-366087579
https://github.com/psi4/psi4/pull/921#issuecomment-366087579:553,Safety,safe,safe,553,"@dgasmith Uggh. And to think that DFT-SAPT is worse ... For reference, alpha is presently incorporated into the psivar name (https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/psivardefs.py#L42). The way I'd frame the question is:; * Is `S^2`/`S^inf` an _option_ that modifies the infinite-precision value of the same physical quantity (like `PK`/`DF` `HF TOTAL ENERGY`)?; * or Are `S^2`/`S^inf` terms distinctly different physical quantities computed (e.g., Ind20/Ind30 or singlet/triplet MP2 correlation energy). * Another point, is there ever safe mixing of s2/sinf?; * Can we compute Sinf terms and incorporate them into post-0 SAPT?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/921#issuecomment-366087579
https://github.com/psi4/psi4/pull/921#issuecomment-366112364:421,Availability,ping,ping,421,"- No S^2 vs S^Inf is, in some ways, a different level theory.; - S^2/S^Inf are separate quantities; - Mixing is as safe as any other mixing in SAPT. Our current version is fine, but S^Inf should help more for charged complexes. Exch/Ind-Exch at S^Inf and Disp-Exch at S^2 is probably quite reasonable.; - Yes and no. S^Inf is limited to SAPT0 for the time being, higher levels could get quite complex. One more person to ping and can correct me: @ajmisquitta",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/921#issuecomment-366112364
https://github.com/psi4/psi4/pull/921#issuecomment-366112364:209,Energy Efficiency,charge,charged,209,"- No S^2 vs S^Inf is, in some ways, a different level theory.; - S^2/S^Inf are separate quantities; - Mixing is as safe as any other mixing in SAPT. Our current version is fine, but S^Inf should help more for charged complexes. Exch/Ind-Exch at S^Inf and Disp-Exch at S^2 is probably quite reasonable.; - Yes and no. S^Inf is limited to SAPT0 for the time being, higher levels could get quite complex. One more person to ping and can correct me: @ajmisquitta",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/921#issuecomment-366112364
https://github.com/psi4/psi4/pull/921#issuecomment-366112364:115,Safety,safe,safe,115,"- No S^2 vs S^Inf is, in some ways, a different level theory.; - S^2/S^Inf are separate quantities; - Mixing is as safe as any other mixing in SAPT. Our current version is fine, but S^Inf should help more for charged complexes. Exch/Ind-Exch at S^Inf and Disp-Exch at S^2 is probably quite reasonable.; - Yes and no. S^Inf is limited to SAPT0 for the time being, higher levels could get quite complex. One more person to ping and can correct me: @ajmisquitta",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/921#issuecomment-366112364
https://github.com/psi4/psi4/pull/921#issuecomment-369403851:558,Testability,test,test,558,"In `psi4/src/read_options.cc:847` can you add the following lines:. ```; /*- For SAPT(DFT) computes the S^inf Exchange-Induction terms !expert -*/; options.add_bool(""DO_IND_EXCH_SINF"",false);; ```. and in `psi4/driver/procrouting/sapt/sapt_proc.py:165` change the induction call there to:. ```; ind = sapt_jk_terms.induction(; hf_cache,; sapt_jk,; True,; maxiter=core.get_option(""SAPT"", ""MAXITER""),; conv=core.get_option(""SAPT"", ""D_CONVERGENCE""),; Sinf=core.get_option(""SAPT"", ""DO_IND_EXCH_SINF"")); ```. Recompile the code. You should now be able to run the test by setting `DO_IND_EXCH_SINF True` in the options block.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/921#issuecomment-369403851
https://github.com/psi4/psi4/pull/921#issuecomment-369674861:15,Testability,test,test,15,"Great, so that test case should work now?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/921#issuecomment-369674861
https://github.com/psi4/psi4/pull/921#issuecomment-369678429:167,Deployability,integrat,integrate,167,As the code is in place and we have a long test for it I say lets go ahead and get this in. This is a good unit of work currently and I think the discussion on how to integrate this properly into Psi4 is a long one.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/921#issuecomment-369678429
https://github.com/psi4/psi4/pull/921#issuecomment-369678429:167,Integrability,integrat,integrate,167,As the code is in place and we have a long test for it I say lets go ahead and get this in. This is a good unit of work currently and I think the discussion on how to integrate this properly into Psi4 is a long one.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/921#issuecomment-369678429
https://github.com/psi4/psi4/pull/921#issuecomment-369678429:43,Testability,test,test,43,As the code is in place and we have a long test for it I say lets go ahead and get this in. This is a good unit of work currently and I think the discussion on how to integrate this properly into Psi4 is a long one.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/921#issuecomment-369678429
https://github.com/psi4/psi4/pull/922#issuecomment-370175873:1452,Testability,test,tests,1452,"Dear all, I had another bash at this. It's rather a large amount of changes, but here's the current workflow:. - functionals get defined in `dict_*.py`, including aliases for the base names (M06-2X = M062X, wPBE = LC-WPBE = LCWPBE etc.); - special cases of dispersion-corrected functionals are defined there (B97-D and friends, OPBE-D, HF3C etc.); - all this stuff gets combined into a single dict `dict_functionals` in `dict_builder.py`.; - aliases for dispersion names (D2 = D = D2P4) are defined as `dispersion_names` (VV10 should go here); - we loop through the proto-functionals in `dict_functionals`, figure out all base functional aliases, add them into the final dict `functionals`; - if the base functional is *not* dispersion corrected, we look through `psi4.driver.qcdb.dashparam.dashcoeff` for a matching dispersion correction; we match all base aliases (so M062X-D3 and M06-2X-D3ZERO are equivalent); - the newly generated dispersion corrected functional gets added (incl. aliases); - the `build_superfunctional` function in `superfuncs.py` now has to find the requested functional in `dict_builder.functionals`, if there is a match, we build the `(sup, dispersion)` tuple; - the `disp_type` assigned in `proc.py` is a `dict()`, so we don't need to match against length; - we pass this onto an `EmpiricalDispersion()` constructor. The handling of the latter two points is not quite figured out yet. I'm sure it could be simplified. As for tests, compared to `master`, the following fail:; ```; OPBE-D: wrong dispersion; B97-D: wrong dispersion (B97-D2, -D3 and other variants work); OTPSS-D: wrong dispersion; HF3C, HF3C-D3BJ: wrong dispersion; DSD-* and co: expected to fail; WB97X-D3 and -D3ZERO: expected to fail; ```; I will try to figure those out later, but I'm assuming it is just the dispersion component that is misassigned.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-370175873
https://github.com/psi4/psi4/pull/922#issuecomment-370175873:1433,Usability,simpl,simplified,1433,"Dear all, I had another bash at this. It's rather a large amount of changes, but here's the current workflow:. - functionals get defined in `dict_*.py`, including aliases for the base names (M06-2X = M062X, wPBE = LC-WPBE = LCWPBE etc.); - special cases of dispersion-corrected functionals are defined there (B97-D and friends, OPBE-D, HF3C etc.); - all this stuff gets combined into a single dict `dict_functionals` in `dict_builder.py`.; - aliases for dispersion names (D2 = D = D2P4) are defined as `dispersion_names` (VV10 should go here); - we loop through the proto-functionals in `dict_functionals`, figure out all base functional aliases, add them into the final dict `functionals`; - if the base functional is *not* dispersion corrected, we look through `psi4.driver.qcdb.dashparam.dashcoeff` for a matching dispersion correction; we match all base aliases (so M062X-D3 and M06-2X-D3ZERO are equivalent); - the newly generated dispersion corrected functional gets added (incl. aliases); - the `build_superfunctional` function in `superfuncs.py` now has to find the requested functional in `dict_builder.functionals`, if there is a match, we build the `(sup, dispersion)` tuple; - the `disp_type` assigned in `proc.py` is a `dict()`, so we don't need to match against length; - we pass this onto an `EmpiricalDispersion()` constructor. The handling of the latter two points is not quite figured out yet. I'm sure it could be simplified. As for tests, compared to `master`, the following fail:; ```; OPBE-D: wrong dispersion; B97-D: wrong dispersion (B97-D2, -D3 and other variants work); OTPSS-D: wrong dispersion; HF3C, HF3C-D3BJ: wrong dispersion; DSD-* and co: expected to fail; WB97X-D3 and -D3ZERO: expected to fail; ```; I will try to figure those out later, but I'm assuming it is just the dispersion component that is misassigned.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-370175873
https://github.com/psi4/psi4/pull/922#issuecomment-370239589:125,Availability,error,error,125,This continues to look better and better IMO. Please do poke me if you need help on specific parts. For HF3C do you know the error here? Is it just a an issue with the correction dispersion.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-370239589
https://github.com/psi4/psi4/pull/922#issuecomment-370255974:132,Testability,test,tests,132,"@dgasmith: the HF3C fail is weird - the dispersion is set correctly, but something about the functional is wrong. Hence the failing tests. I think the problem is related to dispersion, or GCP - lines 195 - 208 in `EmpiricalDispersion` would be my guess. The OPBE-D and OTPSS-D: I need to check which dispersion they are actually meant to have. In master, they currently have none, as far as I see.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-370255974
https://github.com/psi4/psi4/pull/922#issuecomment-370256118:54,Energy Efficiency,energy,energy,54,"Hmm, might want to just print the alias when you call energy to see what is printed out. For the other two functionals we popped them out of the functional list as we do not have dispersion terms from them I think.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-370256118
https://github.com/psi4/psi4/pull/922#issuecomment-370327984:51,Testability,test,tests,51,"I think this is on the final stretch. Once the new tests are in, I'll go through the functionals again and make sure they match Q-Chem. I don't particularly like the way YAPF formats the dictionaries - sometimes the name is on the next line, which is a bit odd. . Also, the B97-D case is weird. It seems that in `master`, calling B97-D doesn't apply dispersion at all!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-370327984
https://github.com/psi4/psi4/pull/922#issuecomment-370332915:328,Deployability,update,update,328,"Just a quick note on the failing tests so I don't forget: `dft-smoke` fails because it includes DSD-PBEP86 (which was parametrised for -D2, now is parametrised without it); `dftd3-energy` fails because of `dashparams['sr8']` not being passed in. It would make sense to generalise that interface somewhat - set defaults and then update from the passed-in dict.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-370332915
https://github.com/psi4/psi4/pull/922#issuecomment-370332915:180,Energy Efficiency,energy,energy,180,"Just a quick note on the failing tests so I don't forget: `dft-smoke` fails because it includes DSD-PBEP86 (which was parametrised for -D2, now is parametrised without it); `dftd3-energy` fails because of `dashparams['sr8']` not being passed in. It would make sense to generalise that interface somewhat - set defaults and then update from the passed-in dict.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-370332915
https://github.com/psi4/psi4/pull/922#issuecomment-370332915:285,Integrability,interface,interface,285,"Just a quick note on the failing tests so I don't forget: `dft-smoke` fails because it includes DSD-PBEP86 (which was parametrised for -D2, now is parametrised without it); `dftd3-energy` fails because of `dashparams['sr8']` not being passed in. It would make sense to generalise that interface somewhat - set defaults and then update from the passed-in dict.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-370332915
https://github.com/psi4/psi4/pull/922#issuecomment-370332915:33,Testability,test,tests,33,"Just a quick note on the failing tests so I don't forget: `dft-smoke` fails because it includes DSD-PBEP86 (which was parametrised for -D2, now is parametrised without it); `dftd3-energy` fails because of `dashparams['sr8']` not being passed in. It would make sense to generalise that interface somewhat - set defaults and then update from the passed-in dict.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-370332915
https://github.com/psi4/psi4/pull/922#issuecomment-371075180:127,Deployability,patch,patch,127,"@loriab @dgasmith Thanks for merging PR #880, the tests are very helpful. All of the original funcs pass with this `dict_func` patch - only wB97X doesn't match the old pre-libxc psi4 value. Unfortunately, wB97X-D3 requires tweaks to the underlying functional and I'm not sure whats wrong with O3LYP, both of which are expected fails against Q-Chem. . From the funcs I implemented in the meantime (SOGGA, SOGGA11, revPBE, MN12-L, M06-L, MN15-L, SOGGA11-X, MN12-SX), all pass against Q-Chem and only SOGGA fails against old psi4, but we knew that already. A lot of the other functionals, especially DSD-hybrids, do not have a reference value for the water ionisation energy. This is related to the crash in the `dft-smoke` test, as DSD-PBEP86 is part of it. Gaussian 2016 implements the ""Kozuch 2011"" version of DSD-PBEP86, I am not sure it includes any dispersion in their form: it would be prudent to have our implementation of that one match G16. Alternatively, we can stick to Kozuch's 2013 paper (where he supplies non-, D2-, D3- and D3BJ- forms of at least 10 DSD functionals); but then we're on our own. . In any case I suggest replacing DSD-PBEP86 in `dft-smoke` by a more widely used functional - B2PLYP or PBE0-2 or PBE0-DH come to mind; even though they are not spin-component-scaled.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-371075180
https://github.com/psi4/psi4/pull/922#issuecomment-371075180:665,Energy Efficiency,energy,energy,665,"@loriab @dgasmith Thanks for merging PR #880, the tests are very helpful. All of the original funcs pass with this `dict_func` patch - only wB97X doesn't match the old pre-libxc psi4 value. Unfortunately, wB97X-D3 requires tweaks to the underlying functional and I'm not sure whats wrong with O3LYP, both of which are expected fails against Q-Chem. . From the funcs I implemented in the meantime (SOGGA, SOGGA11, revPBE, MN12-L, M06-L, MN15-L, SOGGA11-X, MN12-SX), all pass against Q-Chem and only SOGGA fails against old psi4, but we knew that already. A lot of the other functionals, especially DSD-hybrids, do not have a reference value for the water ionisation energy. This is related to the crash in the `dft-smoke` test, as DSD-PBEP86 is part of it. Gaussian 2016 implements the ""Kozuch 2011"" version of DSD-PBEP86, I am not sure it includes any dispersion in their form: it would be prudent to have our implementation of that one match G16. Alternatively, we can stick to Kozuch's 2013 paper (where he supplies non-, D2-, D3- and D3BJ- forms of at least 10 DSD functionals); but then we're on our own. . In any case I suggest replacing DSD-PBEP86 in `dft-smoke` by a more widely used functional - B2PLYP or PBE0-2 or PBE0-DH come to mind; even though they are not spin-component-scaled.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-371075180
https://github.com/psi4/psi4/pull/922#issuecomment-371075180:50,Testability,test,tests,50,"@loriab @dgasmith Thanks for merging PR #880, the tests are very helpful. All of the original funcs pass with this `dict_func` patch - only wB97X doesn't match the old pre-libxc psi4 value. Unfortunately, wB97X-D3 requires tweaks to the underlying functional and I'm not sure whats wrong with O3LYP, both of which are expected fails against Q-Chem. . From the funcs I implemented in the meantime (SOGGA, SOGGA11, revPBE, MN12-L, M06-L, MN15-L, SOGGA11-X, MN12-SX), all pass against Q-Chem and only SOGGA fails against old psi4, but we knew that already. A lot of the other functionals, especially DSD-hybrids, do not have a reference value for the water ionisation energy. This is related to the crash in the `dft-smoke` test, as DSD-PBEP86 is part of it. Gaussian 2016 implements the ""Kozuch 2011"" version of DSD-PBEP86, I am not sure it includes any dispersion in their form: it would be prudent to have our implementation of that one match G16. Alternatively, we can stick to Kozuch's 2013 paper (where he supplies non-, D2-, D3- and D3BJ- forms of at least 10 DSD functionals); but then we're on our own. . In any case I suggest replacing DSD-PBEP86 in `dft-smoke` by a more widely used functional - B2PLYP or PBE0-2 or PBE0-DH come to mind; even though they are not spin-component-scaled.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-371075180
https://github.com/psi4/psi4/pull/922#issuecomment-371075180:721,Testability,test,test,721,"@loriab @dgasmith Thanks for merging PR #880, the tests are very helpful. All of the original funcs pass with this `dict_func` patch - only wB97X doesn't match the old pre-libxc psi4 value. Unfortunately, wB97X-D3 requires tweaks to the underlying functional and I'm not sure whats wrong with O3LYP, both of which are expected fails against Q-Chem. . From the funcs I implemented in the meantime (SOGGA, SOGGA11, revPBE, MN12-L, M06-L, MN15-L, SOGGA11-X, MN12-SX), all pass against Q-Chem and only SOGGA fails against old psi4, but we knew that already. A lot of the other functionals, especially DSD-hybrids, do not have a reference value for the water ionisation energy. This is related to the crash in the `dft-smoke` test, as DSD-PBEP86 is part of it. Gaussian 2016 implements the ""Kozuch 2011"" version of DSD-PBEP86, I am not sure it includes any dispersion in their form: it would be prudent to have our implementation of that one match G16. Alternatively, we can stick to Kozuch's 2013 paper (where he supplies non-, D2-, D3- and D3BJ- forms of at least 10 DSD functionals); but then we're on our own. . In any case I suggest replacing DSD-PBEP86 in `dft-smoke` by a more widely used functional - B2PLYP or PBE0-2 or PBE0-DH come to mind; even though they are not spin-component-scaled.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-371075180
https://github.com/psi4/psi4/pull/922#issuecomment-371221109:543,Deployability,update,update,543,"i remember the omega issue from a forum post: http://forum.psicode.org/t/wb97x-definition-bug/480. I think ORCA was used for all the DSD developments. There you can defined DHDF compositions in the input file (see e.g. my reference outputs). If manual defining parameters for another program really counts as a good test is perhaps debatable because typos never come alone ;). Are the non-dispersion forms of DSD-PBEP86 from both papers really different? I hope not...; Anyway, I'd stick with the 2013 paper in doubt because it is the latest ""update"".",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-371221109
https://github.com/psi4/psi4/pull/922#issuecomment-371221109:316,Testability,test,test,316,"i remember the omega issue from a forum post: http://forum.psicode.org/t/wb97x-definition-bug/480. I think ORCA was used for all the DSD developments. There you can defined DHDF compositions in the input file (see e.g. my reference outputs). If manual defining parameters for another program really counts as a good test is perhaps debatable because typos never come alone ;). Are the non-dispersion forms of DSD-PBEP86 from both papers really different? I hope not...; Anyway, I'd stick with the 2013 paper in doubt because it is the latest ""update"".",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-371221109
https://github.com/psi4/psi4/pull/922#issuecomment-371238262:1094,Testability,test,test,1094,"Yes, they are different. To add insult to injury, the G16 manual references DSD-PBEP86 as [Kozuch2011](http://dx.doi.org/10.1039/C1CP22592H), however the implementation is the DSD-PBEP86-D3BJ version (including dispersion!) from the [SI](http://onlinelibrary.wiley.com/wol1/doi/10.1002/jcc.23391/suppinfo) in [Kozuch2013](http://dx.doi.org/10.1002/jcc.23391):. ```; code: G16 K. 2011 K. 2013; gga_x: 0.31 0.30 0.31; gga_c: 0.44 0.43 0.44; mp2_ss: 0.22 0.25 0.22 ; mp2_os: 0.52 0.53 0.52; d3bj_s6: -??- 0.418 0.48; d3bj_a2: -??- 5.65 5.6; d3bj_s8: -??- 0.0 0.0; d3bj_a1: -??- 0.0 0.0; ------------------------------------; code: G16 K. 2013; E_GGA: -76.1911169141 -76.1910816827; E_D3(BJ): -0.0002162453 -0.0002162500; E_MP2: -0.1114294518 -0.1124581459; E_DSD: -76.3025463659 -76.3035398286; ```; G16 output is cryptic enough that it doesn't show the dispersion coefficients, but the D3(BJ) component is almost the same, so I'm assuming it's the 2013 values. The disagreement with G16 is already at the GGA component, which is somewhat annoying - hopefully it's just numerics. The water cation test passes to 4 D.P. (12 µeH difference):. ````; G16 psi4 Kozuch2013; neutral -76.2031337 -76.2035504; cation -75.7571549 -75.7575598; IE 0.4459788 0.4459906 ; ````. I'd suggest:; 1) use Kozuch's 2013 functionals throughout and forget the 2011 paper exists; 2) use DSD-PBEP86-D3BJ as a test in `dft-smoke`; 3) set DSD-PBEP86 and DSDPBEP86 to return the formulation without dispersion correction (unlike G16)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-371238262
https://github.com/psi4/psi4/pull/922#issuecomment-371238262:1381,Testability,test,test,1381,"Yes, they are different. To add insult to injury, the G16 manual references DSD-PBEP86 as [Kozuch2011](http://dx.doi.org/10.1039/C1CP22592H), however the implementation is the DSD-PBEP86-D3BJ version (including dispersion!) from the [SI](http://onlinelibrary.wiley.com/wol1/doi/10.1002/jcc.23391/suppinfo) in [Kozuch2013](http://dx.doi.org/10.1002/jcc.23391):. ```; code: G16 K. 2011 K. 2013; gga_x: 0.31 0.30 0.31; gga_c: 0.44 0.43 0.44; mp2_ss: 0.22 0.25 0.22 ; mp2_os: 0.52 0.53 0.52; d3bj_s6: -??- 0.418 0.48; d3bj_a2: -??- 5.65 5.6; d3bj_s8: -??- 0.0 0.0; d3bj_a1: -??- 0.0 0.0; ------------------------------------; code: G16 K. 2013; E_GGA: -76.1911169141 -76.1910816827; E_D3(BJ): -0.0002162453 -0.0002162500; E_MP2: -0.1114294518 -0.1124581459; E_DSD: -76.3025463659 -76.3035398286; ```; G16 output is cryptic enough that it doesn't show the dispersion coefficients, but the D3(BJ) component is almost the same, so I'm assuming it's the 2013 values. The disagreement with G16 is already at the GGA component, which is somewhat annoying - hopefully it's just numerics. The water cation test passes to 4 D.P. (12 µeH difference):. ````; G16 psi4 Kozuch2013; neutral -76.2031337 -76.2035504; cation -75.7571549 -75.7575598; IE 0.4459788 0.4459906 ; ````. I'd suggest:; 1) use Kozuch's 2013 functionals throughout and forget the 2011 paper exists; 2) use DSD-PBEP86-D3BJ as a test in `dft-smoke`; 3) set DSD-PBEP86 and DSDPBEP86 to return the formulation without dispersion correction (unlike G16)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-371238262
https://github.com/psi4/psi4/pull/922#issuecomment-371240538:1001,Deployability,update,update,1001,"I have vague memories about some of the DSD methods changing parameters; from one paper to another. I discussed this with Jan Martin way back when; via email, and thought the situation was somewhat confusing. Without; remembering this any more clearly than I do, I suppose Holger's idea of; using the more recent paper is probably a good one. On Wed, Mar 7, 2018 at 12:43 PM, Holger Kruse <notifications@github.com>; wrote:. > i remember the omega issue from a forum post: http://forum.psicode.org/t/; > wb97x-definition-bug/480; >; > I think ORCA was used for all the DSD developments. There you can defined; > DHDF compositions in the input file (see e.g. my reference outputs). If; > manual defining parameters for another program really counts as a good test; > is perhaps debatable because typos never come alone ;); >; > Are the non-dispersion forms of DSD-PBEP86 from both papers really; > different? I hope not...; > Anyway, I'd stick with the 2013 paper in doubt because it is the latest; > ""update"".; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/922#issuecomment-371221109>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AC9QdkpodkciT2JkrcNFW-gbLDLpUy4Mks5tcBwzgaJpZM4SJ0Uw>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-371240538
https://github.com/psi4/psi4/pull/922#issuecomment-371240538:758,Testability,test,test,758,"I have vague memories about some of the DSD methods changing parameters; from one paper to another. I discussed this with Jan Martin way back when; via email, and thought the situation was somewhat confusing. Without; remembering this any more clearly than I do, I suppose Holger's idea of; using the more recent paper is probably a good one. On Wed, Mar 7, 2018 at 12:43 PM, Holger Kruse <notifications@github.com>; wrote:. > i remember the omega issue from a forum post: http://forum.psicode.org/t/; > wb97x-definition-bug/480; >; > I think ORCA was used for all the DSD developments. There you can defined; > DHDF compositions in the input file (see e.g. my reference outputs). If; > manual defining parameters for another program really counts as a good test; > is perhaps debatable because typos never come alone ;); >; > Are the non-dispersion forms of DSD-PBEP86 from both papers really; > different? I hope not...; > Anyway, I'd stick with the 2013 paper in doubt because it is the latest; > ""update"".; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/922#issuecomment-371221109>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AC9QdkpodkciT2JkrcNFW-gbLDLpUy4Mks5tcBwzgaJpZM4SJ0Uw>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-371240538
https://github.com/psi4/psi4/pull/922#issuecomment-371240538:244,Usability,clear,clearly,244,"I have vague memories about some of the DSD methods changing parameters; from one paper to another. I discussed this with Jan Martin way back when; via email, and thought the situation was somewhat confusing. Without; remembering this any more clearly than I do, I suppose Holger's idea of; using the more recent paper is probably a good one. On Wed, Mar 7, 2018 at 12:43 PM, Holger Kruse <notifications@github.com>; wrote:. > i remember the omega issue from a forum post: http://forum.psicode.org/t/; > wb97x-definition-bug/480; >; > I think ORCA was used for all the DSD developments. There you can defined; > DHDF compositions in the input file (see e.g. my reference outputs). If; > manual defining parameters for another program really counts as a good test; > is perhaps debatable because typos never come alone ;); >; > Are the non-dispersion forms of DSD-PBEP86 from both papers really; > different? I hope not...; > Anyway, I'd stick with the 2013 paper in doubt because it is the latest; > ""update"".; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/922#issuecomment-371221109>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AC9QdkpodkciT2JkrcNFW-gbLDLpUy4Mks5tcBwzgaJpZM4SJ0Uw>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-371240538
https://github.com/psi4/psi4/pull/922#issuecomment-371240541:1656,Testability,test,test,1656,"the method). On Wed, Mar 7, 2018 at 1:35 PM, Peter Kraus <notifications@github.com>; wrote:. > Yes, they are different. To add insult to injury, the G16 manual; > references DSD-PBEP86 as Kozuch2011 <http://dx.doi.org/10.1039/C1CP22592H>,; > however the implementation is the DSD-PBEP86-D3BJ version (including; > dispersion!) from the SI; > <http://onlinelibrary.wiley.com/wol1/doi/10.1002/jcc.23391/suppinfo> in; > Kozuch2013 <http://dx.doi.org/10.1002/jcc.23391>:; >; > code: G16 K. 2011 K. 2013; > gga_x: 0.31 0.30 0.31; > gga_c: 0.44 0.43 0.44; > mp2_ss: 0.22 0.25 0.22; > mp2_os: 0.52 0.53 0.52; > d3bj_s6: -??- 0.418 0.48; > d3bj_a2: -??- 5.65 5.6; > d3bj_s8: -??- 0.0 0.0; > d3bj_a1: -??- 0.0 0.0; > ------------------------------------; > code: G16 K. 2013; > E_GGA: -76.1911169141 -76.1910816827; > E_D3(BJ): -0.0002162453 -0.0002162500; > E_MP2: -0.1114294518 -0.1124581459; > E_DSD: -76.3025463659 -76.3035398286; >; > G16 output is cryptic enough that it doesn't show the dispersion; > coefficients, but the D3(BJ) component is almost the same, so I'm assuming; > it's the 2013 values. The disagreement with G16 is already at the GGA; > component, which is somewhat annoying - hopefully it's just numerics.; >; > The water cation test passes to 4 D.P. (12 meH difference):; >; > G16 psi4 Kozuch2013; > neutral -76.2031337 -76.2035504; > cation -75.7571549 -75.7575598; > IE 0.4459788 0.4459906; >; > I'd suggest:; >; > 1. use Kozuch's 2013 functionals throughout and forget the 2011 paper; > exists; > 2. use DSD-PBEP86-D3BJ as a test in dft-smoke; > 3. set DSD-PBEP86 and DSDPBEP86 to return the formulation without; > dispersion correction (unlike G16); >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/922#issuecomment-371238262>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AC9QdiNlBXjxDyTT77JtjwXnizxYehr5ks5tcChdgaJpZM4SJ0Uw>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-371240541
https://github.com/psi4/psi4/pull/922#issuecomment-371240541:1956,Testability,test,test,1956,"the method). On Wed, Mar 7, 2018 at 1:35 PM, Peter Kraus <notifications@github.com>; wrote:. > Yes, they are different. To add insult to injury, the G16 manual; > references DSD-PBEP86 as Kozuch2011 <http://dx.doi.org/10.1039/C1CP22592H>,; > however the implementation is the DSD-PBEP86-D3BJ version (including; > dispersion!) from the SI; > <http://onlinelibrary.wiley.com/wol1/doi/10.1002/jcc.23391/suppinfo> in; > Kozuch2013 <http://dx.doi.org/10.1002/jcc.23391>:; >; > code: G16 K. 2011 K. 2013; > gga_x: 0.31 0.30 0.31; > gga_c: 0.44 0.43 0.44; > mp2_ss: 0.22 0.25 0.22; > mp2_os: 0.52 0.53 0.52; > d3bj_s6: -??- 0.418 0.48; > d3bj_a2: -??- 5.65 5.6; > d3bj_s8: -??- 0.0 0.0; > d3bj_a1: -??- 0.0 0.0; > ------------------------------------; > code: G16 K. 2013; > E_GGA: -76.1911169141 -76.1910816827; > E_D3(BJ): -0.0002162453 -0.0002162500; > E_MP2: -0.1114294518 -0.1124581459; > E_DSD: -76.3025463659 -76.3035398286; >; > G16 output is cryptic enough that it doesn't show the dispersion; > coefficients, but the D3(BJ) component is almost the same, so I'm assuming; > it's the 2013 values. The disagreement with G16 is already at the GGA; > component, which is somewhat annoying - hopefully it's just numerics.; >; > The water cation test passes to 4 D.P. (12 meH difference):; >; > G16 psi4 Kozuch2013; > neutral -76.2031337 -76.2035504; > cation -75.7571549 -75.7575598; > IE 0.4459788 0.4459906; >; > I'd suggest:; >; > 1. use Kozuch's 2013 functionals throughout and forget the 2011 paper; > exists; > 2. use DSD-PBEP86-D3BJ as a test in dft-smoke; > 3. set DSD-PBEP86 and DSDPBEP86 to return the formulation without; > dispersion correction (unlike G16); >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/922#issuecomment-371238262>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AC9QdiNlBXjxDyTT77JtjwXnizxYehr5ks5tcChdgaJpZM4SJ0Uw>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-371240541
https://github.com/psi4/psi4/pull/922#issuecomment-371245880:23,Testability,test,test,23,For the dft-custom-gga test I used Turbomole's PBE value because G09's one was too different. It just really sometimes matters a lot to which decimal points all the constant and conversion factors are defined. Don't know about q-chem. Just to have it asked: same frozen core treatment in MP2?. > would a user asking for DSD-PBEP86 be expecting a -D correction to be; automatically included? . I dont think so.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-371245880
https://github.com/psi4/psi4/pull/922#issuecomment-375392872:811,Integrability,interface,interface,811,"I am not 100% convinced the dispersion handling - the way it's currently implemented - is very good. I'd propose the following:. - move all method and functional specific parameters from elsewhere into `qcdb/dashparam.py`. This includes citation handling that's currently done in `procrouting/empirical_dispersion.py`. - the rest of psi4 python-side should be ""parameter-agnostic"", ie there are obvious differences whether the dispersion _type_ is das2009, d2, or d3 (or later vv10) - this should get figured out (as it currently is) in `procrouting/empirical_dispersion.py` accordingly. . - the parameters and citations should be passed into the `EmpiricalDispersion` class from outside, whether it's the functional's dictionary or user overrides or dashparams database. It might be helpful to settle on _one_ interface as opposed to the currently-used two (tuple_params tuple or dashparams dict in kwargs). In fact, EmpiricalDispersion class shouldn't be doing any parameter lookup on its own. The `dashparam.dashcoeff` dict is already trawled through in `procrouding/dft_funcs/dict_builder`, where we modify the method's name and aliases, the dispersion `dashparam` dict can (should?) be appended too. However, I have a feeling that this is a little bit of a scope creep. I'm quite happy with the functional part as it is now and wouldn't mind having this merged as is (if the tests pass), and leave the empirical / non-local dispersion re-work for eg. the VV10 implementation...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-375392872
https://github.com/psi4/psi4/pull/922#issuecomment-375392872:1380,Testability,test,tests,1380,"I am not 100% convinced the dispersion handling - the way it's currently implemented - is very good. I'd propose the following:. - move all method and functional specific parameters from elsewhere into `qcdb/dashparam.py`. This includes citation handling that's currently done in `procrouting/empirical_dispersion.py`. - the rest of psi4 python-side should be ""parameter-agnostic"", ie there are obvious differences whether the dispersion _type_ is das2009, d2, or d3 (or later vv10) - this should get figured out (as it currently is) in `procrouting/empirical_dispersion.py` accordingly. . - the parameters and citations should be passed into the `EmpiricalDispersion` class from outside, whether it's the functional's dictionary or user overrides or dashparams database. It might be helpful to settle on _one_ interface as opposed to the currently-used two (tuple_params tuple or dashparams dict in kwargs). In fact, EmpiricalDispersion class shouldn't be doing any parameter lookup on its own. The `dashparam.dashcoeff` dict is already trawled through in `procrouding/dft_funcs/dict_builder`, where we modify the method's name and aliases, the dispersion `dashparam` dict can (should?) be appended too. However, I have a feeling that this is a little bit of a scope creep. I'm quite happy with the functional part as it is now and wouldn't mind having this merged as is (if the tests pass), and leave the empirical / non-local dispersion re-work for eg. the VV10 implementation...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-375392872
https://github.com/psi4/psi4/pull/922#issuecomment-375711730:156,Performance,bottleneck,bottleneck,156,"This is fantastic! I really like the design; kudos for coming up with such a clean scheme. I know that these functions will not even be close to becoming a bottleneck but it would be nice to have the `for X in A.keys()` replaced with `for X in A:`. Unless I'm mistaken (likely) the latter is faster, and more Pythonic (this could well have changed with Py3's change to the `keys()` method). I think the shorter version is also easier to read.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-375711730
https://github.com/psi4/psi4/pull/922#issuecomment-376409454:217,Energy Efficiency,energy,energy,217,"One feature I'd like to add (later) is the ability to do something like:. ```; my_new_method = { ""name"": ""my_func"", ... functional_dictionary ... }; my_superfunctional = add_functional_from_dictionary(my_new_method); energy(""my_func""); ```; That way one can fit dispersion parameters or benchmark functionals in a simple loop... However, I think it is a bit of work, so I'd prefer to leave that for later. The PR can be pulled in as is from my point of view.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-376409454
https://github.com/psi4/psi4/pull/922#issuecomment-376409454:287,Testability,benchmark,benchmark,287,"One feature I'd like to add (later) is the ability to do something like:. ```; my_new_method = { ""name"": ""my_func"", ... functional_dictionary ... }; my_superfunctional = add_functional_from_dictionary(my_new_method); energy(""my_func""); ```; That way one can fit dispersion parameters or benchmark functionals in a simple loop... However, I think it is a bit of work, so I'd prefer to leave that for later. The PR can be pulled in as is from my point of view.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-376409454
https://github.com/psi4/psi4/pull/922#issuecomment-376409454:314,Usability,simpl,simple,314,"One feature I'd like to add (later) is the ability to do something like:. ```; my_new_method = { ""name"": ""my_func"", ... functional_dictionary ... }; my_superfunctional = add_functional_from_dictionary(my_new_method); energy(""my_func""); ```; That way one can fit dispersion parameters or benchmark functionals in a simple loop... However, I think it is a bit of work, so I'd prefer to leave that for later. The PR can be pulled in as is from my point of view.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-376409454
https://github.com/psi4/psi4/issues/923#issuecomment-368651645:22,Availability,error,error,22,"I'm hitting a similar error message with `dcft_gradient_UHF.cc` but it reports that the error is in `libmints/matrix.h`. Reducing the optimization level was the only way I could get it to compile. Even compiling with -O2 gives the error, -O1 is the only way to resolve it. I see no issue with the compiler- and file-specific flags for this.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/923#issuecomment-368651645
https://github.com/psi4/psi4/issues/923#issuecomment-368651645:88,Availability,error,error,88,"I'm hitting a similar error message with `dcft_gradient_UHF.cc` but it reports that the error is in `libmints/matrix.h`. Reducing the optimization level was the only way I could get it to compile. Even compiling with -O2 gives the error, -O1 is the only way to resolve it. I see no issue with the compiler- and file-specific flags for this.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/923#issuecomment-368651645
https://github.com/psi4/psi4/issues/923#issuecomment-368651645:231,Availability,error,error,231,"I'm hitting a similar error message with `dcft_gradient_UHF.cc` but it reports that the error is in `libmints/matrix.h`. Reducing the optimization level was the only way I could get it to compile. Even compiling with -O2 gives the error, -O1 is the only way to resolve it. I see no issue with the compiler- and file-specific flags for this.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/923#issuecomment-368651645
https://github.com/psi4/psi4/issues/923#issuecomment-368651645:28,Integrability,message,message,28,"I'm hitting a similar error message with `dcft_gradient_UHF.cc` but it reports that the error is in `libmints/matrix.h`. Reducing the optimization level was the only way I could get it to compile. Even compiling with -O2 gives the error, -O1 is the only way to resolve it. I see no issue with the compiler- and file-specific flags for this.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/923#issuecomment-368651645
https://github.com/psi4/psi4/issues/923#issuecomment-368651645:134,Performance,optimiz,optimization,134,"I'm hitting a similar error message with `dcft_gradient_UHF.cc` but it reports that the error is in `libmints/matrix.h`. Reducing the optimization level was the only way I could get it to compile. Even compiling with -O2 gives the error, -O1 is the only way to resolve it. I see no issue with the compiler- and file-specific flags for this.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/923#issuecomment-368651645
https://github.com/psi4/psi4/issues/923#issuecomment-368659317:115,Availability,down,down,115,"I don't have a chance to compile with icpc 18 right now, but we do have it; at NIH. One way to narrow this problem down is to wrap half of the; matrix.h functions in preprocessor pragmas to kill optimization (; https://software.intel.com/en-us/node/524550), leaving the rest compiled as; normal with -O2 or higher. By eliminating half of the functions'; optimization each time, it should be quite easy to figure out which; function is causing problems by bisection. On Mon, Feb 26, 2018 at 4:11 PM, Justin Turney <notifications@github.com>; wrote:. > I'm hitting a similar error message with dcft_gradient_UHF.cc but it; > reports that the error is in libmints/matrix.h. Reducing the optimization; > level was the only way I could get it to compile. Even compiling with -O2; > gives the error, -O1 is the only way to resolve it.; >; > I see no issue with the compiler- and file-specific flags for this.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/923#issuecomment-368651645>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AAMUmdYwvJwuQd4BJz52tlrgzOg8dBWUks5tYx3YgaJpZM4SPiMy>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/923#issuecomment-368659317
https://github.com/psi4/psi4/issues/923#issuecomment-368659317:573,Availability,error,error,573,"I don't have a chance to compile with icpc 18 right now, but we do have it; at NIH. One way to narrow this problem down is to wrap half of the; matrix.h functions in preprocessor pragmas to kill optimization (; https://software.intel.com/en-us/node/524550), leaving the rest compiled as; normal with -O2 or higher. By eliminating half of the functions'; optimization each time, it should be quite easy to figure out which; function is causing problems by bisection. On Mon, Feb 26, 2018 at 4:11 PM, Justin Turney <notifications@github.com>; wrote:. > I'm hitting a similar error message with dcft_gradient_UHF.cc but it; > reports that the error is in libmints/matrix.h. Reducing the optimization; > level was the only way I could get it to compile. Even compiling with -O2; > gives the error, -O1 is the only way to resolve it.; >; > I see no issue with the compiler- and file-specific flags for this.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/923#issuecomment-368651645>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AAMUmdYwvJwuQd4BJz52tlrgzOg8dBWUks5tYx3YgaJpZM4SPiMy>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/923#issuecomment-368659317
https://github.com/psi4/psi4/issues/923#issuecomment-368659317:640,Availability,error,error,640,"I don't have a chance to compile with icpc 18 right now, but we do have it; at NIH. One way to narrow this problem down is to wrap half of the; matrix.h functions in preprocessor pragmas to kill optimization (; https://software.intel.com/en-us/node/524550), leaving the rest compiled as; normal with -O2 or higher. By eliminating half of the functions'; optimization each time, it should be quite easy to figure out which; function is causing problems by bisection. On Mon, Feb 26, 2018 at 4:11 PM, Justin Turney <notifications@github.com>; wrote:. > I'm hitting a similar error message with dcft_gradient_UHF.cc but it; > reports that the error is in libmints/matrix.h. Reducing the optimization; > level was the only way I could get it to compile. Even compiling with -O2; > gives the error, -O1 is the only way to resolve it.; >; > I see no issue with the compiler- and file-specific flags for this.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/923#issuecomment-368651645>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AAMUmdYwvJwuQd4BJz52tlrgzOg8dBWUks5tYx3YgaJpZM4SPiMy>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/923#issuecomment-368659317
https://github.com/psi4/psi4/issues/923#issuecomment-368659317:787,Availability,error,error,787,"I don't have a chance to compile with icpc 18 right now, but we do have it; at NIH. One way to narrow this problem down is to wrap half of the; matrix.h functions in preprocessor pragmas to kill optimization (; https://software.intel.com/en-us/node/524550), leaving the rest compiled as; normal with -O2 or higher. By eliminating half of the functions'; optimization each time, it should be quite easy to figure out which; function is causing problems by bisection. On Mon, Feb 26, 2018 at 4:11 PM, Justin Turney <notifications@github.com>; wrote:. > I'm hitting a similar error message with dcft_gradient_UHF.cc but it; > reports that the error is in libmints/matrix.h. Reducing the optimization; > level was the only way I could get it to compile. Even compiling with -O2; > gives the error, -O1 is the only way to resolve it.; >; > I see no issue with the compiler- and file-specific flags for this.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/923#issuecomment-368651645>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AAMUmdYwvJwuQd4BJz52tlrgzOg8dBWUks5tYx3YgaJpZM4SPiMy>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/923#issuecomment-368659317
https://github.com/psi4/psi4/issues/923#issuecomment-368659317:126,Integrability,wrap,wrap,126,"I don't have a chance to compile with icpc 18 right now, but we do have it; at NIH. One way to narrow this problem down is to wrap half of the; matrix.h functions in preprocessor pragmas to kill optimization (; https://software.intel.com/en-us/node/524550), leaving the rest compiled as; normal with -O2 or higher. By eliminating half of the functions'; optimization each time, it should be quite easy to figure out which; function is causing problems by bisection. On Mon, Feb 26, 2018 at 4:11 PM, Justin Turney <notifications@github.com>; wrote:. > I'm hitting a similar error message with dcft_gradient_UHF.cc but it; > reports that the error is in libmints/matrix.h. Reducing the optimization; > level was the only way I could get it to compile. Even compiling with -O2; > gives the error, -O1 is the only way to resolve it.; >; > I see no issue with the compiler- and file-specific flags for this.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/923#issuecomment-368651645>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AAMUmdYwvJwuQd4BJz52tlrgzOg8dBWUks5tYx3YgaJpZM4SPiMy>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/923#issuecomment-368659317
https://github.com/psi4/psi4/issues/923#issuecomment-368659317:579,Integrability,message,message,579,"I don't have a chance to compile with icpc 18 right now, but we do have it; at NIH. One way to narrow this problem down is to wrap half of the; matrix.h functions in preprocessor pragmas to kill optimization (; https://software.intel.com/en-us/node/524550), leaving the rest compiled as; normal with -O2 or higher. By eliminating half of the functions'; optimization each time, it should be quite easy to figure out which; function is causing problems by bisection. On Mon, Feb 26, 2018 at 4:11 PM, Justin Turney <notifications@github.com>; wrote:. > I'm hitting a similar error message with dcft_gradient_UHF.cc but it; > reports that the error is in libmints/matrix.h. Reducing the optimization; > level was the only way I could get it to compile. Even compiling with -O2; > gives the error, -O1 is the only way to resolve it.; >; > I see no issue with the compiler- and file-specific flags for this.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/923#issuecomment-368651645>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AAMUmdYwvJwuQd4BJz52tlrgzOg8dBWUks5tYx3YgaJpZM4SPiMy>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/923#issuecomment-368659317
https://github.com/psi4/psi4/issues/923#issuecomment-368659317:195,Performance,optimiz,optimization,195,"I don't have a chance to compile with icpc 18 right now, but we do have it; at NIH. One way to narrow this problem down is to wrap half of the; matrix.h functions in preprocessor pragmas to kill optimization (; https://software.intel.com/en-us/node/524550), leaving the rest compiled as; normal with -O2 or higher. By eliminating half of the functions'; optimization each time, it should be quite easy to figure out which; function is causing problems by bisection. On Mon, Feb 26, 2018 at 4:11 PM, Justin Turney <notifications@github.com>; wrote:. > I'm hitting a similar error message with dcft_gradient_UHF.cc but it; > reports that the error is in libmints/matrix.h. Reducing the optimization; > level was the only way I could get it to compile. Even compiling with -O2; > gives the error, -O1 is the only way to resolve it.; >; > I see no issue with the compiler- and file-specific flags for this.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/923#issuecomment-368651645>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AAMUmdYwvJwuQd4BJz52tlrgzOg8dBWUks5tYx3YgaJpZM4SPiMy>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/923#issuecomment-368659317
https://github.com/psi4/psi4/issues/923#issuecomment-368659317:354,Performance,optimiz,optimization,354,"I don't have a chance to compile with icpc 18 right now, but we do have it; at NIH. One way to narrow this problem down is to wrap half of the; matrix.h functions in preprocessor pragmas to kill optimization (; https://software.intel.com/en-us/node/524550), leaving the rest compiled as; normal with -O2 or higher. By eliminating half of the functions'; optimization each time, it should be quite easy to figure out which; function is causing problems by bisection. On Mon, Feb 26, 2018 at 4:11 PM, Justin Turney <notifications@github.com>; wrote:. > I'm hitting a similar error message with dcft_gradient_UHF.cc but it; > reports that the error is in libmints/matrix.h. Reducing the optimization; > level was the only way I could get it to compile. Even compiling with -O2; > gives the error, -O1 is the only way to resolve it.; >; > I see no issue with the compiler- and file-specific flags for this.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/923#issuecomment-368651645>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AAMUmdYwvJwuQd4BJz52tlrgzOg8dBWUks5tYx3YgaJpZM4SPiMy>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/923#issuecomment-368659317
https://github.com/psi4/psi4/issues/923#issuecomment-368659317:684,Performance,optimiz,optimization,684,"I don't have a chance to compile with icpc 18 right now, but we do have it; at NIH. One way to narrow this problem down is to wrap half of the; matrix.h functions in preprocessor pragmas to kill optimization (; https://software.intel.com/en-us/node/524550), leaving the rest compiled as; normal with -O2 or higher. By eliminating half of the functions'; optimization each time, it should be quite easy to figure out which; function is causing problems by bisection. On Mon, Feb 26, 2018 at 4:11 PM, Justin Turney <notifications@github.com>; wrote:. > I'm hitting a similar error message with dcft_gradient_UHF.cc but it; > reports that the error is in libmints/matrix.h. Reducing the optimization; > level was the only way I could get it to compile. Even compiling with -O2; > gives the error, -O1 is the only way to resolve it.; >; > I see no issue with the compiler- and file-specific flags for this.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/923#issuecomment-368651645>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AAMUmdYwvJwuQd4BJz52tlrgzOg8dBWUks5tYx3YgaJpZM4SPiMy>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/923#issuecomment-368659317
https://github.com/psi4/psi4/issues/923#issuecomment-368927971:121,Availability,error,error,121,That loop looks about as simple as it gets. What kills me is the loop structure ~10 lines above is nearly identical. Any error message on the crash?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/923#issuecomment-368927971
https://github.com/psi4/psi4/issues/923#issuecomment-368927971:127,Integrability,message,message,127,That loop looks about as simple as it gets. What kills me is the loop structure ~10 lines above is nearly identical. Any error message on the crash?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/923#issuecomment-368927971
https://github.com/psi4/psi4/issues/923#issuecomment-368927971:25,Usability,simpl,simple,25,That loop looks about as simple as it gets. What kills me is the loop structure ~10 lines above is nearly identical. Any error message on the crash?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/923#issuecomment-368927971
https://github.com/psi4/psi4/issues/923#issuecomment-368940098:6,Availability,error,error,6,> Any error message on the crash?. No.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/923#issuecomment-368940098
https://github.com/psi4/psi4/issues/923#issuecomment-368940098:12,Integrability,message,message,12,> Any error message on the crash?. No.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/923#issuecomment-368940098
https://github.com/psi4/psi4/issues/923#issuecomment-368940788:9,Availability,error,error,9,And that error code (`20000_6805`) doesn't turn up anything on google either.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/923#issuecomment-368940788
https://github.com/psi4/psi4/issues/923#issuecomment-368940820:119,Availability,error,error,119,"Same here, just ; /edfs/users/deprince/software/psi4/psi4/src/psi4/dcft/dcft_gradient_UHF.cc(3903) (col. 72): internal error: 20000_6805. > On Feb 27, 2018, at 11:34 AM, Robert T. McGibbon <notifications@github.com> wrote:; > ; > Any error message on the crash?; > ; > No.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/psi4/psi4/issues/923#issuecomment-368940098>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AClSGpwnGu_Xbo1lZTU4IJZALbsctYGNks5tZC6bgaJpZM4SPiMy>.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/923#issuecomment-368940820
https://github.com/psi4/psi4/issues/923#issuecomment-368940820:234,Availability,error,error,234,"Same here, just ; /edfs/users/deprince/software/psi4/psi4/src/psi4/dcft/dcft_gradient_UHF.cc(3903) (col. 72): internal error: 20000_6805. > On Feb 27, 2018, at 11:34 AM, Robert T. McGibbon <notifications@github.com> wrote:; > ; > Any error message on the crash?; > ; > No.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/psi4/psi4/issues/923#issuecomment-368940098>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AClSGpwnGu_Xbo1lZTU4IJZALbsctYGNks5tZC6bgaJpZM4SPiMy>.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/923#issuecomment-368940820
https://github.com/psi4/psi4/issues/923#issuecomment-368940820:240,Integrability,message,message,240,"Same here, just ; /edfs/users/deprince/software/psi4/psi4/src/psi4/dcft/dcft_gradient_UHF.cc(3903) (col. 72): internal error: 20000_6805. > On Feb 27, 2018, at 11:34 AM, Robert T. McGibbon <notifications@github.com> wrote:; > ; > Any error message on the crash?; > ; > No.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/psi4/psi4/issues/923#issuecomment-368940098>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AClSGpwnGu_Xbo1lZTU4IJZALbsctYGNks5tZC6bgaJpZM4SPiMy>.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/923#issuecomment-368940820
https://github.com/psi4/psi4/issues/923#issuecomment-369781907:48,Availability,error,error,48,"With ICC 17 and CMake 3.5.1 I get the following error:; ```; CMake Error at src/psi4/dcft/CMakeLists.txt:4 (if):; if given arguments:. ""CMAKE_CXX_COMPILER_ID"" ""STREQUAL"" ""Intel"" ""AND"" ""CMAKE_CXX_COMPILER_VERSION"" ""VERSION_LESS"" ""18.1"" ""AND"" ""CMAKE_CXX_COMPILER_VERSION"" ""VERSION_GREATER_EQUAL"" ""18.0"". Unknown arguments specified; ```. From @loriab's guesses either `STREQUAL` should `MATCHES` or we need a parentheses around each part.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/923#issuecomment-369781907
https://github.com/psi4/psi4/issues/923#issuecomment-369781907:67,Availability,Error,Error,67,"With ICC 17 and CMake 3.5.1 I get the following error:; ```; CMake Error at src/psi4/dcft/CMakeLists.txt:4 (if):; if given arguments:. ""CMAKE_CXX_COMPILER_ID"" ""STREQUAL"" ""Intel"" ""AND"" ""CMAKE_CXX_COMPILER_VERSION"" ""VERSION_LESS"" ""18.1"" ""AND"" ""CMAKE_CXX_COMPILER_VERSION"" ""VERSION_GREATER_EQUAL"" ""18.0"". Unknown arguments specified; ```. From @loriab's guesses either `STREQUAL` should `MATCHES` or we need a parentheses around each part.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/923#issuecomment-369781907
https://github.com/psi4/psi4/issues/923#issuecomment-369958097:119,Deployability,release,release,119,"Ouch, sorry @dgasmith. It looks like I used VERSION_GREATER_EQUAL which was added in https://cmake.org/cmake/help/v3.7/release/3.7.html",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/923#issuecomment-369958097
https://github.com/psi4/psi4/issues/926#issuecomment-370134225:44,Integrability,contract,contraction,44,Possible fixes for the angular momentum and contraction coefficients are here:. https://github.com/psi4/psi4/compare/master...PeterKraus:ecp_fix,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/926#issuecomment-370134225
https://github.com/psi4/psi4/issues/926#issuecomment-370246164:8,Availability,failure,failure,8,"For the failure at the end, check out `driver/driver_nbody.py:471`. Which looks like `wfn = core.Wavefunction.build(molecule, 'sto-3g')`. This should be replaced with `wfn = core.Wavefunction.build(molecule)` so that the global basis set is picked up. You may want to try a fix more like `[x if x > 1.e-10 else x + 1.e10 for x in values]` to be a bit more canonical.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/926#issuecomment-370246164
https://github.com/psi4/psi4/issues/927#issuecomment-370153860:144,Deployability,release,release,144,"Thanks for the report!. I suspect you've been caught out by our rapidly changing DFT code. If you're using psi4conda, that's the last published release, so 1.1, which uses our home-grown DFT functionals before we switched out to Libxc (and added nifty things like `energy(..., dft_functional='b3lyp')`). You can check to confirm with `psi4 --version`. The 1.1 manual is at http://www.psicode.org/psi4manual/1.1/dft.html#advanced-functional-use-and-manipulation. See [here](http://psicode.org/psi4manual/master/conda.html#how-to-install-a-psi4-binary-into-an-ana-miniconda-distribution) for updating (still with conda) to the pre-1.2 development branch, for which your two commands should behave differently.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/927#issuecomment-370153860
https://github.com/psi4/psi4/issues/927#issuecomment-370153860:528,Deployability,install,install-a-,528,"Thanks for the report!. I suspect you've been caught out by our rapidly changing DFT code. If you're using psi4conda, that's the last published release, so 1.1, which uses our home-grown DFT functionals before we switched out to Libxc (and added nifty things like `energy(..., dft_functional='b3lyp')`). You can check to confirm with `psi4 --version`. The 1.1 manual is at http://www.psicode.org/psi4manual/1.1/dft.html#advanced-functional-use-and-manipulation. See [here](http://psicode.org/psi4manual/master/conda.html#how-to-install-a-psi4-binary-into-an-ana-miniconda-distribution) for updating (still with conda) to the pre-1.2 development branch, for which your two commands should behave differently.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/927#issuecomment-370153860
https://github.com/psi4/psi4/issues/927#issuecomment-370153860:265,Energy Efficiency,energy,energy,265,"Thanks for the report!. I suspect you've been caught out by our rapidly changing DFT code. If you're using psi4conda, that's the last published release, so 1.1, which uses our home-grown DFT functionals before we switched out to Libxc (and added nifty things like `energy(..., dft_functional='b3lyp')`). You can check to confirm with `psi4 --version`. The 1.1 manual is at http://www.psicode.org/psi4manual/1.1/dft.html#advanced-functional-use-and-manipulation. See [here](http://psicode.org/psi4manual/master/conda.html#how-to-install-a-psi4-binary-into-an-ana-miniconda-distribution) for updating (still with conda) to the pre-1.2 development branch, for which your two commands should behave differently.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/927#issuecomment-370153860
https://github.com/psi4/psi4/issues/927#issuecomment-370160912:23,Deployability,update,update,23,"well, I've done; conda update psi4 -c psi4/label/dev; which got ; gau2grid: 0.1-0 psi4/label/dev; psi4: 1.1+add49b9-py36_0 psi4 --> 1.2a1.dev781+837e345-py36_0 psi4/label/dev; psi4-lt-mp: 1.1-py36_0 psi4 --> 1.2a1.dev5-py36_0 psi4/label/dev; But now psi4 doesn't work from my Anaconda Python3:; Traceback (most recent call last):; File ""/opt/anaconda3/lib/python3.6/site-packages/psi4/__init__.py"", line 54, in <module>; from . import core; ImportError: /opt/anaconda3/lib/python3.6/site-packages/psi4/core.so: undefined symbol: __svml_sin4. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""cc4.py"", line 1, in <module>; import psi4; File ""/opt/anaconda3/lib/python3.6/site-packages/psi4/__init__.py"", line 59, in <module>; raise ImportError(""{0}"".format(err)); ImportError: /opt/anaconda3/lib/python3.6/site-packages/psi4/core.so: undefined symbol: __svml_sin4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/927#issuecomment-370160912
https://github.com/psi4/psi4/issues/927#issuecomment-370161881:297,Availability,error,error,297,"You’re def in the newly created env? . Away from computer but do “conda list”. Then try “conda install <pkg> -c psi4/label/dev -c psi4” for every pkg that is psi4 channel in origin. That is, things like libxc, chemps2 etc. also make sure you have defaults numpy to provide mkl (which is what your error is about). . Sent from my iPhone. > On Mar 3, 2018, at 11:34 AM, timn2008 <notifications@github.com> wrote:; > ; > well, I've done; > conda update psi4 -c psi4/label/dev; > which got; > gau2grid: 0.1-0 psi4/label/dev; > psi4: 1.1+add49b9-py36_0 psi4 --> 1.2a1.dev781+837e345-py36_0 psi4/label/dev; > psi4-lt-mp: 1.1-py36_0 psi4 --> 1.2a1.dev5-py36_0 psi4/label/dev; > But now psi4 doesn't work from my Anaconda Python3:; > Traceback (most recent call last):; > File ""/opt/anaconda3/lib/python3.6/site-packages/psi4/init.py"", line 54, in ; > from . import core; > ImportError: /opt/anaconda3/lib/python3.6/site-packages/psi4/core.so: undefined symbol: __svml_sin4; > ; > During handling of the above exception, another exception occurred:; > ; > Traceback (most recent call last):; > File ""cc4.py"", line 1, in ; > import psi4; > File ""/opt/anaconda3/lib/python3.6/site-packages/psi4/init.py"", line 59, in ; > raise ImportError(""{0}"".format(err)); > ImportError: /opt/anaconda3/lib/python3.6/site-packages/psi4/core.so: undefined symbol: __svml_sin4; > ; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/927#issuecomment-370161881
https://github.com/psi4/psi4/issues/927#issuecomment-370161881:95,Deployability,install,install,95,"You’re def in the newly created env? . Away from computer but do “conda list”. Then try “conda install <pkg> -c psi4/label/dev -c psi4” for every pkg that is psi4 channel in origin. That is, things like libxc, chemps2 etc. also make sure you have defaults numpy to provide mkl (which is what your error is about). . Sent from my iPhone. > On Mar 3, 2018, at 11:34 AM, timn2008 <notifications@github.com> wrote:; > ; > well, I've done; > conda update psi4 -c psi4/label/dev; > which got; > gau2grid: 0.1-0 psi4/label/dev; > psi4: 1.1+add49b9-py36_0 psi4 --> 1.2a1.dev781+837e345-py36_0 psi4/label/dev; > psi4-lt-mp: 1.1-py36_0 psi4 --> 1.2a1.dev5-py36_0 psi4/label/dev; > But now psi4 doesn't work from my Anaconda Python3:; > Traceback (most recent call last):; > File ""/opt/anaconda3/lib/python3.6/site-packages/psi4/init.py"", line 54, in ; > from . import core; > ImportError: /opt/anaconda3/lib/python3.6/site-packages/psi4/core.so: undefined symbol: __svml_sin4; > ; > During handling of the above exception, another exception occurred:; > ; > Traceback (most recent call last):; > File ""cc4.py"", line 1, in ; > import psi4; > File ""/opt/anaconda3/lib/python3.6/site-packages/psi4/init.py"", line 59, in ; > raise ImportError(""{0}"".format(err)); > ImportError: /opt/anaconda3/lib/python3.6/site-packages/psi4/core.so: undefined symbol: __svml_sin4; > ; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/927#issuecomment-370161881
https://github.com/psi4/psi4/issues/927#issuecomment-370161881:443,Deployability,update,update,443,"You’re def in the newly created env? . Away from computer but do “conda list”. Then try “conda install <pkg> -c psi4/label/dev -c psi4” for every pkg that is psi4 channel in origin. That is, things like libxc, chemps2 etc. also make sure you have defaults numpy to provide mkl (which is what your error is about). . Sent from my iPhone. > On Mar 3, 2018, at 11:34 AM, timn2008 <notifications@github.com> wrote:; > ; > well, I've done; > conda update psi4 -c psi4/label/dev; > which got; > gau2grid: 0.1-0 psi4/label/dev; > psi4: 1.1+add49b9-py36_0 psi4 --> 1.2a1.dev781+837e345-py36_0 psi4/label/dev; > psi4-lt-mp: 1.1-py36_0 psi4 --> 1.2a1.dev5-py36_0 psi4/label/dev; > But now psi4 doesn't work from my Anaconda Python3:; > Traceback (most recent call last):; > File ""/opt/anaconda3/lib/python3.6/site-packages/psi4/init.py"", line 54, in ; > from . import core; > ImportError: /opt/anaconda3/lib/python3.6/site-packages/psi4/core.so: undefined symbol: __svml_sin4; > ; > During handling of the above exception, another exception occurred:; > ; > Traceback (most recent call last):; > File ""cc4.py"", line 1, in ; > import psi4; > File ""/opt/anaconda3/lib/python3.6/site-packages/psi4/init.py"", line 59, in ; > raise ImportError(""{0}"".format(err)); > ImportError: /opt/anaconda3/lib/python3.6/site-packages/psi4/core.so: undefined symbol: __svml_sin4; > ; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/927#issuecomment-370161881
https://github.com/psi4/psi4/pull/931#issuecomment-370890288:17,Deployability,release,release,17,If Intel were to release 18.0.1 for instance?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/931#issuecomment-370890288
https://github.com/psi4/psi4/issues/932#issuecomment-376539445:19,Usability,clear,cleared,19,I think this one's cleared up. Please reopen if necessary.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/932#issuecomment-376539445
https://github.com/psi4/psi4/issues/933#issuecomment-371308270:4,Energy Efficiency,Power,PowerShell,4,"Is ""PowerShell"" the Ubuntu Shell or Windows Subsystem for Linux? No, no real plans to try a native compile. Build is cmake, so at least that's windows friendly. Need c++11, so newish compiler. That should be ok if dropped py2. So no obvious barrier to Windows, but the dev community has no need or experience. I take it that Windows would be useful? By the way, would you be pained if py2.7 was dropped and min moved to 3.5?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-371308270
https://github.com/psi4/psi4/issues/933#issuecomment-381701562:135,Safety,hazard,hazard,135,I think this would be great to do and probably doable with a bit of help from someone who has experience with Windows builds. I would (hazard) to guess the total sum of hours the Psi team has touched MSVC can be counted on a single hand.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-381701562
https://github.com/psi4/psi4/issues/933#issuecomment-381751281:633,Deployability,integrat,integration,633,"@dgasmith MSVC is not a must for building stuff on Windows. So far I have only had negative experiences with it, and I tend to use GCC on Windows as well. (MinGW-w64, in the form of TDM-GCC, sadly TDM-GCC seems abandoned, but as long as GCC 5.1.0 is OK, it is probably one of the easiest solutions). . At the moment I do not have time to look into this, but in general it should be doable, make and CMake does work on Windows, so as far as the C++/Fortran side is concerned I expect no issues that would be impossible to overcome. (I/O may or may not need some ifdefs and Windows specific code). I have no idea though how the python integration would work, maybe it would work relatively painlessly, maybe it would turn out to be a nightmare. The world of python dependencies and especially numpy/BLAS/LAPACK interactions can be a royal pain in the arse to work out, even on Linux, in my experience.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-381751281
https://github.com/psi4/psi4/issues/933#issuecomment-381751281:633,Integrability,integrat,integration,633,"@dgasmith MSVC is not a must for building stuff on Windows. So far I have only had negative experiences with it, and I tend to use GCC on Windows as well. (MinGW-w64, in the form of TDM-GCC, sadly TDM-GCC seems abandoned, but as long as GCC 5.1.0 is OK, it is probably one of the easiest solutions). . At the moment I do not have time to look into this, but in general it should be doable, make and CMake does work on Windows, so as far as the C++/Fortran side is concerned I expect no issues that would be impossible to overcome. (I/O may or may not need some ifdefs and Windows specific code). I have no idea though how the python integration would work, maybe it would work relatively painlessly, maybe it would turn out to be a nightmare. The world of python dependencies and especially numpy/BLAS/LAPACK interactions can be a royal pain in the arse to work out, even on Linux, in my experience.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-381751281
https://github.com/psi4/psi4/issues/933#issuecomment-381751281:763,Integrability,depend,dependencies,763,"@dgasmith MSVC is not a must for building stuff on Windows. So far I have only had negative experiences with it, and I tend to use GCC on Windows as well. (MinGW-w64, in the form of TDM-GCC, sadly TDM-GCC seems abandoned, but as long as GCC 5.1.0 is OK, it is probably one of the easiest solutions). . At the moment I do not have time to look into this, but in general it should be doable, make and CMake does work on Windows, so as far as the C++/Fortran side is concerned I expect no issues that would be impossible to overcome. (I/O may or may not need some ifdefs and Windows specific code). I have no idea though how the python integration would work, maybe it would work relatively painlessly, maybe it would turn out to be a nightmare. The world of python dependencies and especially numpy/BLAS/LAPACK interactions can be a royal pain in the arse to work out, even on Linux, in my experience.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-381751281
https://github.com/psi4/psi4/issues/933#issuecomment-381759781:166,Availability,avail,available,166,"I'm not sure how big of an issue numpy/BLAS/LAPACK would be for windows, because it would appear that mkl-linked numpy, mkl, and mkl-dev packages for windows are all available on the intel conda channel. So if numpy is able to link correctly I'm sure we would be able to as well. . I think @TiborGY thoughts on I/O related code are spot on, but I don't think we would have that much code elsewhere that would be incompatible, maybe some assumptions are made in driver code about how paths are formatted and those would be fairly simple to find/fix. . I actually don't think it would be terribly difficult for us to get psi working at least with *some* compiler on windows, really the only serious obstacle I see is that none of the developers have windows hardware to do the necessary leg work to get things working. Once things are set up we can probably rely on CI testing for windows keeping things working.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-381759781
https://github.com/psi4/psi4/issues/933#issuecomment-381759781:867,Testability,test,testing,867,"I'm not sure how big of an issue numpy/BLAS/LAPACK would be for windows, because it would appear that mkl-linked numpy, mkl, and mkl-dev packages for windows are all available on the intel conda channel. So if numpy is able to link correctly I'm sure we would be able to as well. . I think @TiborGY thoughts on I/O related code are spot on, but I don't think we would have that much code elsewhere that would be incompatible, maybe some assumptions are made in driver code about how paths are formatted and those would be fairly simple to find/fix. . I actually don't think it would be terribly difficult for us to get psi working at least with *some* compiler on windows, really the only serious obstacle I see is that none of the developers have windows hardware to do the necessary leg work to get things working. Once things are set up we can probably rely on CI testing for windows keeping things working.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-381759781
https://github.com/psi4/psi4/issues/933#issuecomment-381759781:529,Usability,simpl,simple,529,"I'm not sure how big of an issue numpy/BLAS/LAPACK would be for windows, because it would appear that mkl-linked numpy, mkl, and mkl-dev packages for windows are all available on the intel conda channel. So if numpy is able to link correctly I'm sure we would be able to as well. . I think @TiborGY thoughts on I/O related code are spot on, but I don't think we would have that much code elsewhere that would be incompatible, maybe some assumptions are made in driver code about how paths are formatted and those would be fairly simple to find/fix. . I actually don't think it would be terribly difficult for us to get psi working at least with *some* compiler on windows, really the only serious obstacle I see is that none of the developers have windows hardware to do the necessary leg work to get things working. Once things are set up we can probably rely on CI testing for windows keeping things working.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-381759781
https://github.com/psi4/psi4/issues/933#issuecomment-382036025:99,Testability,test,tested,99,Sounds good. Let's just wait until at least the Linux conda packages are out so you can have smoke-tested them with htmd.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-382036025
https://github.com/psi4/psi4/issues/933#issuecomment-383499846:148,Integrability,interface,interface,148,The dftd3 and gcp system calls (and others like that) will need to checked by someone familiar with the windows shell.; When I made the ORCA-to-gcp interface it gave all sorts of trouble on Windows with escape characters.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-383499846
https://github.com/psi4/psi4/issues/933#issuecomment-383884299:15,Usability,feedback,feedback,15,"thanks for the feedback @hokru, that seems like an important point",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-383884299
https://github.com/psi4/psi4/issues/933#issuecomment-390236786:825,Deployability,configurat,configuration,825,"I had a bit of time to work on Windows build. Current status of dependencies:; - *libint*: with some hacking (https://github.com/raimis/libint/tree/win) I have manged to build it (https://ci.appveyor.com/project/raimis/libint). There are no tests, so high probability of not detected issues.; - *libxc*: with some more hacking (https://github.com/raimis/libxc/tree/win) I have to managed to build it too (https://ci.appveyor.com/project/raimis/libxc).; - *gau2grid*: it need just a few changes (https://github.com/raimis/gau2grid/tree/win) to compile (https://ci.appveyor.com/project/raimis/gau2grid). Though I have not managed to make the test to work. It seems, `ctypes` behave differently on Windows. Finally, I have reached a point to stat building *Psi4* (https://github.com/raimis/psi4/tree/win) and got stuck with MKL configuration and other `cmake` related problems (https://ci.appveyor.com/project/raimis/psi4). @loriab, for Linux builds, do you use MKL from `conda` or install it manually?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-390236786
https://github.com/psi4/psi4/issues/933#issuecomment-390236786:979,Deployability,install,install,979,"I had a bit of time to work on Windows build. Current status of dependencies:; - *libint*: with some hacking (https://github.com/raimis/libint/tree/win) I have manged to build it (https://ci.appveyor.com/project/raimis/libint). There are no tests, so high probability of not detected issues.; - *libxc*: with some more hacking (https://github.com/raimis/libxc/tree/win) I have to managed to build it too (https://ci.appveyor.com/project/raimis/libxc).; - *gau2grid*: it need just a few changes (https://github.com/raimis/gau2grid/tree/win) to compile (https://ci.appveyor.com/project/raimis/gau2grid). Though I have not managed to make the test to work. It seems, `ctypes` behave differently on Windows. Finally, I have reached a point to stat building *Psi4* (https://github.com/raimis/psi4/tree/win) and got stuck with MKL configuration and other `cmake` related problems (https://ci.appveyor.com/project/raimis/psi4). @loriab, for Linux builds, do you use MKL from `conda` or install it manually?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-390236786
https://github.com/psi4/psi4/issues/933#issuecomment-390236786:64,Integrability,depend,dependencies,64,"I had a bit of time to work on Windows build. Current status of dependencies:; - *libint*: with some hacking (https://github.com/raimis/libint/tree/win) I have manged to build it (https://ci.appveyor.com/project/raimis/libint). There are no tests, so high probability of not detected issues.; - *libxc*: with some more hacking (https://github.com/raimis/libxc/tree/win) I have to managed to build it too (https://ci.appveyor.com/project/raimis/libxc).; - *gau2grid*: it need just a few changes (https://github.com/raimis/gau2grid/tree/win) to compile (https://ci.appveyor.com/project/raimis/gau2grid). Though I have not managed to make the test to work. It seems, `ctypes` behave differently on Windows. Finally, I have reached a point to stat building *Psi4* (https://github.com/raimis/psi4/tree/win) and got stuck with MKL configuration and other `cmake` related problems (https://ci.appveyor.com/project/raimis/psi4). @loriab, for Linux builds, do you use MKL from `conda` or install it manually?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-390236786
https://github.com/psi4/psi4/issues/933#issuecomment-390236786:825,Modifiability,config,configuration,825,"I had a bit of time to work on Windows build. Current status of dependencies:; - *libint*: with some hacking (https://github.com/raimis/libint/tree/win) I have manged to build it (https://ci.appveyor.com/project/raimis/libint). There are no tests, so high probability of not detected issues.; - *libxc*: with some more hacking (https://github.com/raimis/libxc/tree/win) I have to managed to build it too (https://ci.appveyor.com/project/raimis/libxc).; - *gau2grid*: it need just a few changes (https://github.com/raimis/gau2grid/tree/win) to compile (https://ci.appveyor.com/project/raimis/gau2grid). Though I have not managed to make the test to work. It seems, `ctypes` behave differently on Windows. Finally, I have reached a point to stat building *Psi4* (https://github.com/raimis/psi4/tree/win) and got stuck with MKL configuration and other `cmake` related problems (https://ci.appveyor.com/project/raimis/psi4). @loriab, for Linux builds, do you use MKL from `conda` or install it manually?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-390236786
https://github.com/psi4/psi4/issues/933#issuecomment-390236786:275,Safety,detect,detected,275,"I had a bit of time to work on Windows build. Current status of dependencies:; - *libint*: with some hacking (https://github.com/raimis/libint/tree/win) I have manged to build it (https://ci.appveyor.com/project/raimis/libint). There are no tests, so high probability of not detected issues.; - *libxc*: with some more hacking (https://github.com/raimis/libxc/tree/win) I have to managed to build it too (https://ci.appveyor.com/project/raimis/libxc).; - *gau2grid*: it need just a few changes (https://github.com/raimis/gau2grid/tree/win) to compile (https://ci.appveyor.com/project/raimis/gau2grid). Though I have not managed to make the test to work. It seems, `ctypes` behave differently on Windows. Finally, I have reached a point to stat building *Psi4* (https://github.com/raimis/psi4/tree/win) and got stuck with MKL configuration and other `cmake` related problems (https://ci.appveyor.com/project/raimis/psi4). @loriab, for Linux builds, do you use MKL from `conda` or install it manually?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-390236786
https://github.com/psi4/psi4/issues/933#issuecomment-390236786:241,Testability,test,tests,241,"I had a bit of time to work on Windows build. Current status of dependencies:; - *libint*: with some hacking (https://github.com/raimis/libint/tree/win) I have manged to build it (https://ci.appveyor.com/project/raimis/libint). There are no tests, so high probability of not detected issues.; - *libxc*: with some more hacking (https://github.com/raimis/libxc/tree/win) I have to managed to build it too (https://ci.appveyor.com/project/raimis/libxc).; - *gau2grid*: it need just a few changes (https://github.com/raimis/gau2grid/tree/win) to compile (https://ci.appveyor.com/project/raimis/gau2grid). Though I have not managed to make the test to work. It seems, `ctypes` behave differently on Windows. Finally, I have reached a point to stat building *Psi4* (https://github.com/raimis/psi4/tree/win) and got stuck with MKL configuration and other `cmake` related problems (https://ci.appveyor.com/project/raimis/psi4). @loriab, for Linux builds, do you use MKL from `conda` or install it manually?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-390236786
https://github.com/psi4/psi4/issues/933#issuecomment-390236786:640,Testability,test,test,640,"I had a bit of time to work on Windows build. Current status of dependencies:; - *libint*: with some hacking (https://github.com/raimis/libint/tree/win) I have manged to build it (https://ci.appveyor.com/project/raimis/libint). There are no tests, so high probability of not detected issues.; - *libxc*: with some more hacking (https://github.com/raimis/libxc/tree/win) I have to managed to build it too (https://ci.appveyor.com/project/raimis/libxc).; - *gau2grid*: it need just a few changes (https://github.com/raimis/gau2grid/tree/win) to compile (https://ci.appveyor.com/project/raimis/gau2grid). Though I have not managed to make the test to work. It seems, `ctypes` behave differently on Windows. Finally, I have reached a point to stat building *Psi4* (https://github.com/raimis/psi4/tree/win) and got stuck with MKL configuration and other `cmake` related problems (https://ci.appveyor.com/project/raimis/psi4). @loriab, for Linux builds, do you use MKL from `conda` or install it manually?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-390236786
https://github.com/psi4/psi4/issues/933#issuecomment-390243811:265,Integrability,depend,dependency,265,"Hi, sorry in advance for commenting knowing next to nothing. Looking at this commit: https://github.com/raimis/gau2grid/commit/0a6678572b9c9589320c3df0f277e88e6a572252 . I assume it's generating code which will be compiled at runtime with MSVC, which will become a dependency. Is it correct?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-390243811
https://github.com/psi4/psi4/issues/933#issuecomment-390251325:97,Integrability,depend,dependency,97,"No, the code is generated and compiled during the build. There is no compilation at run time and dependency on MSVC.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-390251325
https://github.com/psi4/psi4/issues/933#issuecomment-390254118:417,Availability,avail,available,417,"At a conf, so won’t be able to examine links in depth, only respond to comments. . Neat! Yes, I commonly pull all non-qc department from conda, incl. pybind11 (-c conda-forge), mkl (defaults channel, repackaged direct from intel distribution), numpy (defaults, built with mkl). . If win is like linux and Mac, you can get the compilers from conda, and yes that will impart runtime lib deps, which presumably are also available.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-390254118
https://github.com/psi4/psi4/issues/933#issuecomment-401782072:58,Testability,test,tests,58,"I have got a working *Psi4* build on Windows! Though many tests still failing due to hard-coded paths and other platform specific stuff, which I will fix eventually. The porting requires many small code changes as MSVC don't support several non-standard features present in GCC and clang. So, I will start with several trivial to PRs, to make future merging easier.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-401782072
https://github.com/psi4/psi4/issues/933#issuecomment-403818314:342,Integrability,depend,depended,342,"I have made almost all PRs for easy/trivial code changes, which is ~80% of overall. For further progress, the easiest way is to use *Boost* library for:; - User/system time in `fnocc`, `libciomr`, and `libqt`; - File operations in `libfilesystem`; - Stacktrace printing in `libpsi4utils`. Actually, I'm a bit surprised that *Psi4* is not yet depended on *Boost*. What is *Psi4* policy on the new dependencies?. So there are two options:; 1. Use *Boost* for these cross-platform functionalities.; 2. Make a conditional compilation, so *Boost* dependency is only *Windows*. This will increase code complexity, but will avoid the new dependency on *Linux*.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-403818314
https://github.com/psi4/psi4/issues/933#issuecomment-403818314:396,Integrability,depend,dependencies,396,"I have made almost all PRs for easy/trivial code changes, which is ~80% of overall. For further progress, the easiest way is to use *Boost* library for:; - User/system time in `fnocc`, `libciomr`, and `libqt`; - File operations in `libfilesystem`; - Stacktrace printing in `libpsi4utils`. Actually, I'm a bit surprised that *Psi4* is not yet depended on *Boost*. What is *Psi4* policy on the new dependencies?. So there are two options:; 1. Use *Boost* for these cross-platform functionalities.; 2. Make a conditional compilation, so *Boost* dependency is only *Windows*. This will increase code complexity, but will avoid the new dependency on *Linux*.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-403818314
https://github.com/psi4/psi4/issues/933#issuecomment-403818314:542,Integrability,depend,dependency,542,"I have made almost all PRs for easy/trivial code changes, which is ~80% of overall. For further progress, the easiest way is to use *Boost* library for:; - User/system time in `fnocc`, `libciomr`, and `libqt`; - File operations in `libfilesystem`; - Stacktrace printing in `libpsi4utils`. Actually, I'm a bit surprised that *Psi4* is not yet depended on *Boost*. What is *Psi4* policy on the new dependencies?. So there are two options:; 1. Use *Boost* for these cross-platform functionalities.; 2. Make a conditional compilation, so *Boost* dependency is only *Windows*. This will increase code complexity, but will avoid the new dependency on *Linux*.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-403818314
https://github.com/psi4/psi4/issues/933#issuecomment-403818314:631,Integrability,depend,dependency,631,"I have made almost all PRs for easy/trivial code changes, which is ~80% of overall. For further progress, the easiest way is to use *Boost* library for:; - User/system time in `fnocc`, `libciomr`, and `libqt`; - File operations in `libfilesystem`; - Stacktrace printing in `libpsi4utils`. Actually, I'm a bit surprised that *Psi4* is not yet depended on *Boost*. What is *Psi4* policy on the new dependencies?. So there are two options:; 1. Use *Boost* for these cross-platform functionalities.; 2. Make a conditional compilation, so *Boost* dependency is only *Windows*. This will increase code complexity, but will avoid the new dependency on *Linux*.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-403818314
https://github.com/psi4/psi4/issues/933#issuecomment-403818314:617,Safety,avoid,avoid,617,"I have made almost all PRs for easy/trivial code changes, which is ~80% of overall. For further progress, the easiest way is to use *Boost* library for:; - User/system time in `fnocc`, `libciomr`, and `libqt`; - File operations in `libfilesystem`; - Stacktrace printing in `libpsi4utils`. Actually, I'm a bit surprised that *Psi4* is not yet depended on *Boost*. What is *Psi4* policy on the new dependencies?. So there are two options:; 1. Use *Boost* for these cross-platform functionalities.; 2. Make a conditional compilation, so *Boost* dependency is only *Windows*. This will increase code complexity, but will avoid the new dependency on *Linux*.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-403818314
https://github.com/psi4/psi4/issues/933#issuecomment-403834794:439,Availability,avail,available,439,"Hi, @raimis. We did use Boost until a couple of years ago. Its primary role was to link the C++ layer to Python, but it became extremely annoying to support and we ripped it out, using the header-only Pybind11 instead. A *lot* of users ran into build problems with mismatches in the boost versions found at configure time and that linked at compile time. These kinds of problems are easy to encounter if multiple boost implementations are available on a system, and the errors that result are very cryptic. For this reason, we went to a lot of trouble to remove all traces of Boost and it would be best not to reintroduce if possible. Looking at the list of problematic features quickly, they seem like they could be handled in C++11 (chrono library) or in the python layer. Would it be easy in your estimation to just compile away the time reporting for MSVC builds, and we can make a different PR later on to reintroduce them by using C++11 instead? Same for the stack trace. I'm not sure how/where the filesystem is used, so that could be a trickier one to handle - I'll look at it when I get a chance. We were trying to migrate OS interactions like filesystem stuff from C++ to Python where possible, so this could be good motivation for us to start seriously looking at doing so. Thanks again for your hard work with the MSVC conversion - it looks like you've had a lot of work to do. I'm not trying to make life harder for you, but I think it's fair to say that our experience with Boost was quite negative in the later years, so it is worth debating alternatives.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-403834794
https://github.com/psi4/psi4/issues/933#issuecomment-403834794:470,Availability,error,errors,470,"Hi, @raimis. We did use Boost until a couple of years ago. Its primary role was to link the C++ layer to Python, but it became extremely annoying to support and we ripped it out, using the header-only Pybind11 instead. A *lot* of users ran into build problems with mismatches in the boost versions found at configure time and that linked at compile time. These kinds of problems are easy to encounter if multiple boost implementations are available on a system, and the errors that result are very cryptic. For this reason, we went to a lot of trouble to remove all traces of Boost and it would be best not to reintroduce if possible. Looking at the list of problematic features quickly, they seem like they could be handled in C++11 (chrono library) or in the python layer. Would it be easy in your estimation to just compile away the time reporting for MSVC builds, and we can make a different PR later on to reintroduce them by using C++11 instead? Same for the stack trace. I'm not sure how/where the filesystem is used, so that could be a trickier one to handle - I'll look at it when I get a chance. We were trying to migrate OS interactions like filesystem stuff from C++ to Python where possible, so this could be good motivation for us to start seriously looking at doing so. Thanks again for your hard work with the MSVC conversion - it looks like you've had a lot of work to do. I'm not trying to make life harder for you, but I think it's fair to say that our experience with Boost was quite negative in the later years, so it is worth debating alternatives.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-403834794
https://github.com/psi4/psi4/issues/933#issuecomment-403834794:307,Modifiability,config,configure,307,"Hi, @raimis. We did use Boost until a couple of years ago. Its primary role was to link the C++ layer to Python, but it became extremely annoying to support and we ripped it out, using the header-only Pybind11 instead. A *lot* of users ran into build problems with mismatches in the boost versions found at configure time and that linked at compile time. These kinds of problems are easy to encounter if multiple boost implementations are available on a system, and the errors that result are very cryptic. For this reason, we went to a lot of trouble to remove all traces of Boost and it would be best not to reintroduce if possible. Looking at the list of problematic features quickly, they seem like they could be handled in C++11 (chrono library) or in the python layer. Would it be easy in your estimation to just compile away the time reporting for MSVC builds, and we can make a different PR later on to reintroduce them by using C++11 instead? Same for the stack trace. I'm not sure how/where the filesystem is used, so that could be a trickier one to handle - I'll look at it when I get a chance. We were trying to migrate OS interactions like filesystem stuff from C++ to Python where possible, so this could be good motivation for us to start seriously looking at doing so. Thanks again for your hard work with the MSVC conversion - it looks like you've had a lot of work to do. I'm not trying to make life harder for you, but I think it's fair to say that our experience with Boost was quite negative in the later years, so it is worth debating alternatives.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-403834794
https://github.com/psi4/psi4/issues/933#issuecomment-404110082:282,Usability,simpl,simply,282,"@andysim I see your point. I like *Boost*, but I agree, it is problematic to compile. I'm already using `std::chrono` in some places, but it is a subset of `boost::chrono`. So for the system/user timers, I will conditionally disable them on Windows. For the stack trace, I can also simply disable it on Windows. I looked into `std::libfilesystem`, as @tonigi suggested, but it is C++17 feature, which is not yet supported on MSVC (Visual Studio 2015). It seems that some `psi::filesystem` functions are already dead code. So I will try to come up with some hack!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404110082
https://github.com/psi4/psi4/issues/933#issuecomment-404163414:387,Usability,learn,learned,387,"From what I can tell, gcc requires [-lstdc++fs](https://stackoverflow.com/questions/48729328/cant-use-any-filesystem-members-in-c17-gcc-7) and [MSVC 2015](https://msdn.microsoft.com/it-it/library/hh874694.aspx) also has it -- both still ""std::experimental"". I don't quite see however if this complication is necessary - isn't path.cc already working fine in appveyor? By the way, I just learned that windows accepts / as path separators just fine.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404163414
https://github.com/psi4/psi4/issues/933#issuecomment-404166121:335,Availability,fault,fault,335,"@TiborGY *Conda* package for *Windows* have to be built with VS 2015 (https://conda.io/docs/user-guide/tutorials/build-windows.html#microsoft-visual-studio). So I'm doing that to avoid compatibility problems and make later deployment easy. @tonigi I hacked a bit `psi::libfilesystem` to compile, but is making a lot of test to segment fault. Yes, I also found `std::experimental::filesystem` and it looks as good option.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404166121
https://github.com/psi4/psi4/issues/933#issuecomment-404166121:223,Deployability,deploy,deployment,223,"@TiborGY *Conda* package for *Windows* have to be built with VS 2015 (https://conda.io/docs/user-guide/tutorials/build-windows.html#microsoft-visual-studio). So I'm doing that to avoid compatibility problems and make later deployment easy. @tonigi I hacked a bit `psi::libfilesystem` to compile, but is making a lot of test to segment fault. Yes, I also found `std::experimental::filesystem` and it looks as good option.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404166121
https://github.com/psi4/psi4/issues/933#issuecomment-404166121:179,Safety,avoid,avoid,179,"@TiborGY *Conda* package for *Windows* have to be built with VS 2015 (https://conda.io/docs/user-guide/tutorials/build-windows.html#microsoft-visual-studio). So I'm doing that to avoid compatibility problems and make later deployment easy. @tonigi I hacked a bit `psi::libfilesystem` to compile, but is making a lot of test to segment fault. Yes, I also found `std::experimental::filesystem` and it looks as good option.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404166121
https://github.com/psi4/psi4/issues/933#issuecomment-404166121:319,Testability,test,test,319,"@TiborGY *Conda* package for *Windows* have to be built with VS 2015 (https://conda.io/docs/user-guide/tutorials/build-windows.html#microsoft-visual-studio). So I'm doing that to avoid compatibility problems and make later deployment easy. @tonigi I hacked a bit `psi::libfilesystem` to compile, but is making a lot of test to segment fault. Yes, I also found `std::experimental::filesystem` and it looks as good option.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404166121
https://github.com/psi4/psi4/issues/933#issuecomment-404166121:97,Usability,guid,guide,97,"@TiborGY *Conda* package for *Windows* have to be built with VS 2015 (https://conda.io/docs/user-guide/tutorials/build-windows.html#microsoft-visual-studio). So I'm doing that to avoid compatibility problems and make later deployment easy. @tonigi I hacked a bit `psi::libfilesystem` to compile, but is making a lot of test to segment fault. Yes, I also found `std::experimental::filesystem` and it looks as good option.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404166121
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:92,Availability,failure,failure,92,"```; (base) C:\Users\User\psi4.git\win_build>ctest -C Debug -L dft -E dft-bench --output-on-failure; Test project C:/Users/User/psi4.git/win_build; Start 155: dft-b2plyp; 1/24 Test #155: dft-b2plyp ....................... Passed 37.71 sec; Start 156: dft-grac; 2/24 Test #156: dft-grac ......................... Passed 7.52 sec; Start 157: dft-ghost; 3/24 Test #157: dft-ghost ........................ Passed 23.36 sec; Start 158: dft-grad-meta; 4/24 Test #158: dft-grad-meta .................... Passed 76.39 sec; Start 159: dft-freq; 5/24 Test #159: dft-freq ......................... Passed 83.74 sec; Start 160: dft-grad1; 6/24 Test #160: dft-grad1 ........................ Passed 43.94 sec; Start 161: dft-grad2; 7/24 Test #161: dft-grad2 ........................ Passed 33.06 sec; Start 162: dft-psivar; 8/24 Test #162: dft-psivar ....................... Passed 103.28 sec; Start 163: dft-b3lyp; 9/24 Test #163: dft-b3lyp ........................ Passed 164.98 sec; Start 164: dft1; 10/24 Test #164: dft1 ............................. Passed 414.86 sec; Start 165: dft-vv10; 11/24 Test #165: dft-vv10 ......................... Passed 80.01 sec; Start 166: dft1-alt; 12/24 Test #166: dft1-alt ......................... Passed 191.52 sec; Start 167: dft2; 13/24 Test #167: dft2 ............................. Passed 22.00 sec; Start 168: dft3; 14/24 Test #168: dft3 .............................***Failed 20.54 sec; 	Closed-shell wB97 Energy (PK).....................................PASSED; 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 42, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:5382,Availability,Error,Error,5382,"psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	PBE0-2: Water: computed value (-150.8272119) does not match (-152.6486355) to 6 digits.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). Start 367: dft-custom-hybrid; 22/24 Test #367: dft-custom-hybrid ................ Passed 46.21 sec; Start 368: dft-custom-mgga; 23/24 Test #368: dft-custom-mgga .................. Passed 244.44 sec; Start 369: dft-custom-gga; 24/24 Test #369: dft-custom-gga ...................***Failed 171.36 sec; 	Ne: BLYP..........................................................PASSED; 	Ne: SVWN..........................................................PASSED; 	Ne: PBE...........................................................PASSED; 	Ne: PW91..........................................................PASSED; 	Ne: MPWPW.........................................................PASSED; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 44, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(). RuntimeError: ; Fatal Error: Iterations did not converge.; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112. Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). 88% tests passed, 3 tests failed out of 24. Label Time ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:6131,Availability,Error,Error,6131,"....... Passed 46.21 sec; Start 368: dft-custom-mgga; 23/24 Test #368: dft-custom-mgga .................. Passed 244.44 sec; Start 369: dft-custom-gga; 24/24 Test #369: dft-custom-gga ...................***Failed 171.36 sec; 	Ne: BLYP..........................................................PASSED; 	Ne: SVWN..........................................................PASSED; 	Ne: PBE...........................................................PASSED; 	Ne: PW91..........................................................PASSED; 	Ne: MPWPW.........................................................PASSED; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 44, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(). RuntimeError: ; Fatal Error: Iterations did not converge.; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112. Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). 88% tests passed, 3 tests failed out of 24. Label Time Summary:; cart = 233.39 sec (4 tests); dft = 2298.14 sec (24 tests); mp2 = 16.23 sec (1 test); psi = 2298.14 sec (24 tests); quicktests = 144.78 sec (2 tests); scf = 2298.14 sec (24 tests); shorttests = 129.39 sec (3 tests). Total Test time (real) = 2303.35 sec. The following tests FAILED:; 	168 - dft3 (Failed); 	366 - dft-custom-dhdf (Failed); 	369 - dft-custom-gga (Failed); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:6168,Availability,Error,Error,6168,"....... Passed 46.21 sec; Start 368: dft-custom-mgga; 23/24 Test #368: dft-custom-mgga .................. Passed 244.44 sec; Start 369: dft-custom-gga; 24/24 Test #369: dft-custom-gga ...................***Failed 171.36 sec; 	Ne: BLYP..........................................................PASSED; 	Ne: SVWN..........................................................PASSED; 	Ne: PBE...........................................................PASSED; 	Ne: PW91..........................................................PASSED; 	Ne: MPWPW.........................................................PASSED; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 44, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(). RuntimeError: ; Fatal Error: Iterations did not converge.; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112. Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). 88% tests passed, 3 tests failed out of 24. Label Time Summary:; cart = 233.39 sec (4 tests); dft = 2298.14 sec (24 tests); mp2 = 16.23 sec (1 test); psi = 2298.14 sec (24 tests); quicktests = 144.78 sec (2 tests); scf = 2298.14 sec (24 tests); shorttests = 129.39 sec (3 tests). Total Test time (real) = 2303.35 sec. The following tests FAILED:; 	168 - dft3 (Failed); 	366 - dft-custom-dhdf (Failed); 	369 - dft-custom-gga (Failed); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:1438,Energy Efficiency,Energy,Energy,1438," dft-grad-meta; 4/24 Test #158: dft-grad-meta .................... Passed 76.39 sec; Start 159: dft-freq; 5/24 Test #159: dft-freq ......................... Passed 83.74 sec; Start 160: dft-grad1; 6/24 Test #160: dft-grad1 ........................ Passed 43.94 sec; Start 161: dft-grad2; 7/24 Test #161: dft-grad2 ........................ Passed 33.06 sec; Start 162: dft-psivar; 8/24 Test #162: dft-psivar ....................... Passed 103.28 sec; Start 163: dft-b3lyp; 9/24 Test #163: dft-b3lyp ........................ Passed 164.98 sec; Start 164: dft1; 10/24 Test #164: dft1 ............................. Passed 414.86 sec; Start 165: dft-vv10; 11/24 Test #165: dft-vv10 ......................... Passed 80.01 sec; Start 166: dft1-alt; 12/24 Test #166: dft1-alt ......................... Passed 191.52 sec; Start 167: dft2; 13/24 Test #167: dft2 ............................. Passed 22.00 sec; Start 168: dft3; 14/24 Test #168: dft3 .............................***Failed 20.54 sec; 	Closed-shell wB97 Energy (PK).....................................PASSED; 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 42, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). Start 169: dft-omega; 15/24 Test #169: dft-omega ........................ Passed 70.41 sec; Start 338: soscf-dft; 16/24 Test #338: soscf-dft ........................ Passed 88.82 sec; Start 345: dft-custom; 17/24 Test #345: dft-custom ....................... Passed 66.89 sec; Start 346: dft-reference; 18/24 Test",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:1513,Energy Efficiency,Energy,Energy,1513," 159: dft-freq; 5/24 Test #159: dft-freq ......................... Passed 83.74 sec; Start 160: dft-grad1; 6/24 Test #160: dft-grad1 ........................ Passed 43.94 sec; Start 161: dft-grad2; 7/24 Test #161: dft-grad2 ........................ Passed 33.06 sec; Start 162: dft-psivar; 8/24 Test #162: dft-psivar ....................... Passed 103.28 sec; Start 163: dft-b3lyp; 9/24 Test #163: dft-b3lyp ........................ Passed 164.98 sec; Start 164: dft1; 10/24 Test #164: dft1 ............................. Passed 414.86 sec; Start 165: dft-vv10; 11/24 Test #165: dft-vv10 ......................... Passed 80.01 sec; Start 166: dft1-alt; 12/24 Test #166: dft1-alt ......................... Passed 191.52 sec; Start 167: dft2; 13/24 Test #167: dft2 ............................. Passed 22.00 sec; Start 168: dft3; 14/24 Test #168: dft3 .............................***Failed 20.54 sec; 	Closed-shell wB97 Energy (PK).....................................PASSED; 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 42, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). Start 169: dft-omega; 15/24 Test #169: dft-omega ........................ Passed 70.41 sec; Start 338: soscf-dft; 16/24 Test #338: soscf-dft ........................ Passed 88.82 sec; Start 345: dft-custom; 17/24 Test #345: dft-custom ....................... Passed 66.89 sec; Start 346: dft-reference; 18/24 Test #346: dft-reference .................... Passed 16.23 sec; Start 361: dft-smoke; 19/24 T",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:1948,Energy Efficiency,Energy,Energy,1948,".... Passed 164.98 sec; Start 164: dft1; 10/24 Test #164: dft1 ............................. Passed 414.86 sec; Start 165: dft-vv10; 11/24 Test #165: dft-vv10 ......................... Passed 80.01 sec; Start 166: dft1-alt; 12/24 Test #166: dft1-alt ......................... Passed 191.52 sec; Start 167: dft2; 13/24 Test #167: dft2 ............................. Passed 22.00 sec; Start 168: dft3; 14/24 Test #168: dft3 .............................***Failed 20.54 sec; 	Closed-shell wB97 Energy (PK).....................................PASSED; 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 42, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). Start 169: dft-omega; 15/24 Test #169: dft-omega ........................ Passed 70.41 sec; Start 338: soscf-dft; 16/24 Test #338: soscf-dft ........................ Passed 88.82 sec; Start 345: dft-custom; 17/24 Test #345: dft-custom ....................... Passed 66.89 sec; Start 346: dft-reference; 18/24 Test #346: dft-reference .................... Passed 16.23 sec; Start 361: dft-smoke; 19/24 Test #361: dft-smoke ........................ Passed 64.78 sec; Start 364: dft-jk; 20/24 Test #364: dft-jk ........................... Passed 32.41 sec; Start 366: dft-custom-dhdf; 21/24 Test #366: dft-custom-dhdf ..................***Failed 193.71 sec; 	Ne: B2PLYP_DFT....................................................PASSED; 	Ne: B2PLYP_PT2....................................................PASSED; 	Ne: B2PLYP..............",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:5727,Energy Efficiency,energy,energy,5727,"............... Passed 46.21 sec; Start 368: dft-custom-mgga; 23/24 Test #368: dft-custom-mgga .................. Passed 244.44 sec; Start 369: dft-custom-gga; 24/24 Test #369: dft-custom-gga ...................***Failed 171.36 sec; 	Ne: BLYP..........................................................PASSED; 	Ne: SVWN..........................................................PASSED; 	Ne: PBE...........................................................PASSED; 	Ne: PW91..........................................................PASSED; 	Ne: MPWPW.........................................................PASSED; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 44, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(). RuntimeError: ; Fatal Error: Iterations did not converge.; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112. Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). 88% tests passed, 3 tests failed out of 24. Label Time Summary:; cart = 233.39 sec (4 tests); dft = 2298.14 sec (24 tests); mp2 = 16.23 sec (1 test); psi = 2298.14 sec (24 tests); quicktests = 144.78 sec (2 tests); scf = 2298.14 sec (24 tests); shorttests = 129.39 sec (3 tests). Total Test time (real) = 2303.35 sec. The following tests FAILED:; 	168 - dft3 (Failed); 	366 - dft-custom-dhdf (Failed); 	369 - dft-custom-gga (Fail",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:5753,Energy Efficiency,energy,energy,5753,"............... Passed 46.21 sec; Start 368: dft-custom-mgga; 23/24 Test #368: dft-custom-mgga .................. Passed 244.44 sec; Start 369: dft-custom-gga; 24/24 Test #369: dft-custom-gga ...................***Failed 171.36 sec; 	Ne: BLYP..........................................................PASSED; 	Ne: SVWN..........................................................PASSED; 	Ne: PBE...........................................................PASSED; 	Ne: PW91..........................................................PASSED; 	Ne: MPWPW.........................................................PASSED; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 44, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(). RuntimeError: ; Fatal Error: Iterations did not converge.; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112. Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). 88% tests passed, 3 tests failed out of 24. Label Time Summary:; cart = 233.39 sec (4 tests); dft = 2298.14 sec (24 tests); mp2 = 16.23 sec (1 test); psi = 2298.14 sec (24 tests); quicktests = 144.78 sec (2 tests); scf = 2298.14 sec (24 tests); shorttests = 129.39 sec (3 tests). Total Test time (real) = 2303.35 sec. The following tests FAILED:; 	168 - dft3 (Failed); 	366 - dft-custom-dhdf (Failed); 	369 - dft-custom-gga (Fail",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:1898,Integrability,message,message,1898,"28 sec; Start 163: dft-b3lyp; 9/24 Test #163: dft-b3lyp ........................ Passed 164.98 sec; Start 164: dft1; 10/24 Test #164: dft1 ............................. Passed 414.86 sec; Start 165: dft-vv10; 11/24 Test #165: dft-vv10 ......................... Passed 80.01 sec; Start 166: dft1-alt; 12/24 Test #166: dft1-alt ......................... Passed 191.52 sec; Start 167: dft2; 13/24 Test #167: dft2 ............................. Passed 22.00 sec; Start 168: dft3; 14/24 Test #168: dft3 .............................***Failed 20.54 sec; 	Closed-shell wB97 Energy (PK).....................................PASSED; 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 42, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). Start 169: dft-omega; 15/24 Test #169: dft-omega ........................ Passed 70.41 sec; Start 338: soscf-dft; 16/24 Test #338: soscf-dft ........................ Passed 88.82 sec; Start 345: dft-custom; 17/24 Test #345: dft-custom ....................... Passed 66.89 sec; Start 346: dft-reference; 18/24 Test #346: dft-reference .................... Passed 16.23 sec; Start 361: dft-smoke; 19/24 Test #361: dft-smoke ........................ Passed 64.78 sec; Start 364: dft-jk; 20/24 Test #364: dft-jk ........................... Passed 32.41 sec; Start 366: dft-custom-dhdf; 21/24 Test #366: dft-custom-dhdf ..................***Failed 193.71 sec; 	Ne: B2PLYP_DFT....................................................PASSED; 	Ne: B2PLYP_PT2..........",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:4508,Integrability,message,message,4508,".................................PASSED; 	Ne: PWPB95_PT2....................................................PASSED; 	Ne: PWPB95........................................................PASSED; 	Ne: DSD-BLYP_DFT..................................................PASSED; 	Ne: DSD-BLYP_PT2..................................................PASSED; 	Ne: DSD-BLYP......................................................PASSED; 	Ne: PBE0-DH DFT...................................................PASSED; 	Ne: PBE0-DH PT2...................................................PASSED; 	Ne: PBE0-DH.......................................................PASSED; 	PBE0-2: Water: computed value (-150.8272119) does not match (-152.6486355) to 6 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 109, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	PBE0-2: Water: computed value (-150.8272119) does not match (-152.6486355) to 6 digits.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). Start 367: dft-custom-hybrid; 22/24 Test #367: dft-custom-hybrid ................ Passed 46.21 sec; Start 368: dft-custom-mgga; 23/24 Test #368: dft-custom-mgga .................. Passed 244.44 sec; Start 369: dft-custom-gga; 24/24 Test #369: dft-custom-gga ...................***Failed 171.36 sec; 	Ne: BLYP..........................................................PASSED; 	Ne: SVWN..........................................................PASSED; 	Ne: PBE...........................................................PASSED; 	Ne: PW91..........................................................PASSED; 	Ne: MPWPW.........................................................PASSED; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112; Tra",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:101,Testability,Test,Test,101,"```; (base) C:\Users\User\psi4.git\win_build>ctest -C Debug -L dft -E dft-bench --output-on-failure; Test project C:/Users/User/psi4.git/win_build; Start 155: dft-b2plyp; 1/24 Test #155: dft-b2plyp ....................... Passed 37.71 sec; Start 156: dft-grac; 2/24 Test #156: dft-grac ......................... Passed 7.52 sec; Start 157: dft-ghost; 3/24 Test #157: dft-ghost ........................ Passed 23.36 sec; Start 158: dft-grad-meta; 4/24 Test #158: dft-grad-meta .................... Passed 76.39 sec; Start 159: dft-freq; 5/24 Test #159: dft-freq ......................... Passed 83.74 sec; Start 160: dft-grad1; 6/24 Test #160: dft-grad1 ........................ Passed 43.94 sec; Start 161: dft-grad2; 7/24 Test #161: dft-grad2 ........................ Passed 33.06 sec; Start 162: dft-psivar; 8/24 Test #162: dft-psivar ....................... Passed 103.28 sec; Start 163: dft-b3lyp; 9/24 Test #163: dft-b3lyp ........................ Passed 164.98 sec; Start 164: dft1; 10/24 Test #164: dft1 ............................. Passed 414.86 sec; Start 165: dft-vv10; 11/24 Test #165: dft-vv10 ......................... Passed 80.01 sec; Start 166: dft1-alt; 12/24 Test #166: dft1-alt ......................... Passed 191.52 sec; Start 167: dft2; 13/24 Test #167: dft2 ............................. Passed 22.00 sec; Start 168: dft3; 14/24 Test #168: dft3 .............................***Failed 20.54 sec; 	Closed-shell wB97 Energy (PK).....................................PASSED; 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 42, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:176,Testability,Test,Test,176,"```; (base) C:\Users\User\psi4.git\win_build>ctest -C Debug -L dft -E dft-bench --output-on-failure; Test project C:/Users/User/psi4.git/win_build; Start 155: dft-b2plyp; 1/24 Test #155: dft-b2plyp ....................... Passed 37.71 sec; Start 156: dft-grac; 2/24 Test #156: dft-grac ......................... Passed 7.52 sec; Start 157: dft-ghost; 3/24 Test #157: dft-ghost ........................ Passed 23.36 sec; Start 158: dft-grad-meta; 4/24 Test #158: dft-grad-meta .................... Passed 76.39 sec; Start 159: dft-freq; 5/24 Test #159: dft-freq ......................... Passed 83.74 sec; Start 160: dft-grad1; 6/24 Test #160: dft-grad1 ........................ Passed 43.94 sec; Start 161: dft-grad2; 7/24 Test #161: dft-grad2 ........................ Passed 33.06 sec; Start 162: dft-psivar; 8/24 Test #162: dft-psivar ....................... Passed 103.28 sec; Start 163: dft-b3lyp; 9/24 Test #163: dft-b3lyp ........................ Passed 164.98 sec; Start 164: dft1; 10/24 Test #164: dft1 ............................. Passed 414.86 sec; Start 165: dft-vv10; 11/24 Test #165: dft-vv10 ......................... Passed 80.01 sec; Start 166: dft1-alt; 12/24 Test #166: dft1-alt ......................... Passed 191.52 sec; Start 167: dft2; 13/24 Test #167: dft2 ............................. Passed 22.00 sec; Start 168: dft3; 14/24 Test #168: dft3 .............................***Failed 20.54 sec; 	Closed-shell wB97 Energy (PK).....................................PASSED; 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 42, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:266,Testability,Test,Test,266,"```; (base) C:\Users\User\psi4.git\win_build>ctest -C Debug -L dft -E dft-bench --output-on-failure; Test project C:/Users/User/psi4.git/win_build; Start 155: dft-b2plyp; 1/24 Test #155: dft-b2plyp ....................... Passed 37.71 sec; Start 156: dft-grac; 2/24 Test #156: dft-grac ......................... Passed 7.52 sec; Start 157: dft-ghost; 3/24 Test #157: dft-ghost ........................ Passed 23.36 sec; Start 158: dft-grad-meta; 4/24 Test #158: dft-grad-meta .................... Passed 76.39 sec; Start 159: dft-freq; 5/24 Test #159: dft-freq ......................... Passed 83.74 sec; Start 160: dft-grad1; 6/24 Test #160: dft-grad1 ........................ Passed 43.94 sec; Start 161: dft-grad2; 7/24 Test #161: dft-grad2 ........................ Passed 33.06 sec; Start 162: dft-psivar; 8/24 Test #162: dft-psivar ....................... Passed 103.28 sec; Start 163: dft-b3lyp; 9/24 Test #163: dft-b3lyp ........................ Passed 164.98 sec; Start 164: dft1; 10/24 Test #164: dft1 ............................. Passed 414.86 sec; Start 165: dft-vv10; 11/24 Test #165: dft-vv10 ......................... Passed 80.01 sec; Start 166: dft1-alt; 12/24 Test #166: dft1-alt ......................... Passed 191.52 sec; Start 167: dft2; 13/24 Test #167: dft2 ............................. Passed 22.00 sec; Start 168: dft3; 14/24 Test #168: dft3 .............................***Failed 20.54 sec; 	Closed-shell wB97 Energy (PK).....................................PASSED; 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 42, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:356,Testability,Test,Test,356,"```; (base) C:\Users\User\psi4.git\win_build>ctest -C Debug -L dft -E dft-bench --output-on-failure; Test project C:/Users/User/psi4.git/win_build; Start 155: dft-b2plyp; 1/24 Test #155: dft-b2plyp ....................... Passed 37.71 sec; Start 156: dft-grac; 2/24 Test #156: dft-grac ......................... Passed 7.52 sec; Start 157: dft-ghost; 3/24 Test #157: dft-ghost ........................ Passed 23.36 sec; Start 158: dft-grad-meta; 4/24 Test #158: dft-grad-meta .................... Passed 76.39 sec; Start 159: dft-freq; 5/24 Test #159: dft-freq ......................... Passed 83.74 sec; Start 160: dft-grad1; 6/24 Test #160: dft-grad1 ........................ Passed 43.94 sec; Start 161: dft-grad2; 7/24 Test #161: dft-grad2 ........................ Passed 33.06 sec; Start 162: dft-psivar; 8/24 Test #162: dft-psivar ....................... Passed 103.28 sec; Start 163: dft-b3lyp; 9/24 Test #163: dft-b3lyp ........................ Passed 164.98 sec; Start 164: dft1; 10/24 Test #164: dft1 ............................. Passed 414.86 sec; Start 165: dft-vv10; 11/24 Test #165: dft-vv10 ......................... Passed 80.01 sec; Start 166: dft1-alt; 12/24 Test #166: dft1-alt ......................... Passed 191.52 sec; Start 167: dft2; 13/24 Test #167: dft2 ............................. Passed 22.00 sec; Start 168: dft3; 14/24 Test #168: dft3 .............................***Failed 20.54 sec; 	Closed-shell wB97 Energy (PK).....................................PASSED; 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 42, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:451,Testability,Test,Test,451,"```; (base) C:\Users\User\psi4.git\win_build>ctest -C Debug -L dft -E dft-bench --output-on-failure; Test project C:/Users/User/psi4.git/win_build; Start 155: dft-b2plyp; 1/24 Test #155: dft-b2plyp ....................... Passed 37.71 sec; Start 156: dft-grac; 2/24 Test #156: dft-grac ......................... Passed 7.52 sec; Start 157: dft-ghost; 3/24 Test #157: dft-ghost ........................ Passed 23.36 sec; Start 158: dft-grad-meta; 4/24 Test #158: dft-grad-meta .................... Passed 76.39 sec; Start 159: dft-freq; 5/24 Test #159: dft-freq ......................... Passed 83.74 sec; Start 160: dft-grad1; 6/24 Test #160: dft-grad1 ........................ Passed 43.94 sec; Start 161: dft-grad2; 7/24 Test #161: dft-grad2 ........................ Passed 33.06 sec; Start 162: dft-psivar; 8/24 Test #162: dft-psivar ....................... Passed 103.28 sec; Start 163: dft-b3lyp; 9/24 Test #163: dft-b3lyp ........................ Passed 164.98 sec; Start 164: dft1; 10/24 Test #164: dft1 ............................. Passed 414.86 sec; Start 165: dft-vv10; 11/24 Test #165: dft-vv10 ......................... Passed 80.01 sec; Start 166: dft1-alt; 12/24 Test #166: dft1-alt ......................... Passed 191.52 sec; Start 167: dft2; 13/24 Test #167: dft2 ............................. Passed 22.00 sec; Start 168: dft3; 14/24 Test #168: dft3 .............................***Failed 20.54 sec; 	Closed-shell wB97 Energy (PK).....................................PASSED; 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 42, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:541,Testability,Test,Test,541,"```; (base) C:\Users\User\psi4.git\win_build>ctest -C Debug -L dft -E dft-bench --output-on-failure; Test project C:/Users/User/psi4.git/win_build; Start 155: dft-b2plyp; 1/24 Test #155: dft-b2plyp ....................... Passed 37.71 sec; Start 156: dft-grac; 2/24 Test #156: dft-grac ......................... Passed 7.52 sec; Start 157: dft-ghost; 3/24 Test #157: dft-ghost ........................ Passed 23.36 sec; Start 158: dft-grad-meta; 4/24 Test #158: dft-grad-meta .................... Passed 76.39 sec; Start 159: dft-freq; 5/24 Test #159: dft-freq ......................... Passed 83.74 sec; Start 160: dft-grad1; 6/24 Test #160: dft-grad1 ........................ Passed 43.94 sec; Start 161: dft-grad2; 7/24 Test #161: dft-grad2 ........................ Passed 33.06 sec; Start 162: dft-psivar; 8/24 Test #162: dft-psivar ....................... Passed 103.28 sec; Start 163: dft-b3lyp; 9/24 Test #163: dft-b3lyp ........................ Passed 164.98 sec; Start 164: dft1; 10/24 Test #164: dft1 ............................. Passed 414.86 sec; Start 165: dft-vv10; 11/24 Test #165: dft-vv10 ......................... Passed 80.01 sec; Start 166: dft1-alt; 12/24 Test #166: dft1-alt ......................... Passed 191.52 sec; Start 167: dft2; 13/24 Test #167: dft2 ............................. Passed 22.00 sec; Start 168: dft3; 14/24 Test #168: dft3 .............................***Failed 20.54 sec; 	Closed-shell wB97 Energy (PK).....................................PASSED; 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 42, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:632,Testability,Test,Test,632,"```; (base) C:\Users\User\psi4.git\win_build>ctest -C Debug -L dft -E dft-bench --output-on-failure; Test project C:/Users/User/psi4.git/win_build; Start 155: dft-b2plyp; 1/24 Test #155: dft-b2plyp ....................... Passed 37.71 sec; Start 156: dft-grac; 2/24 Test #156: dft-grac ......................... Passed 7.52 sec; Start 157: dft-ghost; 3/24 Test #157: dft-ghost ........................ Passed 23.36 sec; Start 158: dft-grad-meta; 4/24 Test #158: dft-grad-meta .................... Passed 76.39 sec; Start 159: dft-freq; 5/24 Test #159: dft-freq ......................... Passed 83.74 sec; Start 160: dft-grad1; 6/24 Test #160: dft-grad1 ........................ Passed 43.94 sec; Start 161: dft-grad2; 7/24 Test #161: dft-grad2 ........................ Passed 33.06 sec; Start 162: dft-psivar; 8/24 Test #162: dft-psivar ....................... Passed 103.28 sec; Start 163: dft-b3lyp; 9/24 Test #163: dft-b3lyp ........................ Passed 164.98 sec; Start 164: dft1; 10/24 Test #164: dft1 ............................. Passed 414.86 sec; Start 165: dft-vv10; 11/24 Test #165: dft-vv10 ......................... Passed 80.01 sec; Start 166: dft1-alt; 12/24 Test #166: dft1-alt ......................... Passed 191.52 sec; Start 167: dft2; 13/24 Test #167: dft2 ............................. Passed 22.00 sec; Start 168: dft3; 14/24 Test #168: dft3 .............................***Failed 20.54 sec; 	Closed-shell wB97 Energy (PK).....................................PASSED; 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 42, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:723,Testability,Test,Test,723,"```; (base) C:\Users\User\psi4.git\win_build>ctest -C Debug -L dft -E dft-bench --output-on-failure; Test project C:/Users/User/psi4.git/win_build; Start 155: dft-b2plyp; 1/24 Test #155: dft-b2plyp ....................... Passed 37.71 sec; Start 156: dft-grac; 2/24 Test #156: dft-grac ......................... Passed 7.52 sec; Start 157: dft-ghost; 3/24 Test #157: dft-ghost ........................ Passed 23.36 sec; Start 158: dft-grad-meta; 4/24 Test #158: dft-grad-meta .................... Passed 76.39 sec; Start 159: dft-freq; 5/24 Test #159: dft-freq ......................... Passed 83.74 sec; Start 160: dft-grad1; 6/24 Test #160: dft-grad1 ........................ Passed 43.94 sec; Start 161: dft-grad2; 7/24 Test #161: dft-grad2 ........................ Passed 33.06 sec; Start 162: dft-psivar; 8/24 Test #162: dft-psivar ....................... Passed 103.28 sec; Start 163: dft-b3lyp; 9/24 Test #163: dft-b3lyp ........................ Passed 164.98 sec; Start 164: dft1; 10/24 Test #164: dft1 ............................. Passed 414.86 sec; Start 165: dft-vv10; 11/24 Test #165: dft-vv10 ......................... Passed 80.01 sec; Start 166: dft1-alt; 12/24 Test #166: dft1-alt ......................... Passed 191.52 sec; Start 167: dft2; 13/24 Test #167: dft2 ............................. Passed 22.00 sec; Start 168: dft3; 14/24 Test #168: dft3 .............................***Failed 20.54 sec; 	Closed-shell wB97 Energy (PK).....................................PASSED; 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 42, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:815,Testability,Test,Test,815,"```; (base) C:\Users\User\psi4.git\win_build>ctest -C Debug -L dft -E dft-bench --output-on-failure; Test project C:/Users/User/psi4.git/win_build; Start 155: dft-b2plyp; 1/24 Test #155: dft-b2plyp ....................... Passed 37.71 sec; Start 156: dft-grac; 2/24 Test #156: dft-grac ......................... Passed 7.52 sec; Start 157: dft-ghost; 3/24 Test #157: dft-ghost ........................ Passed 23.36 sec; Start 158: dft-grad-meta; 4/24 Test #158: dft-grad-meta .................... Passed 76.39 sec; Start 159: dft-freq; 5/24 Test #159: dft-freq ......................... Passed 83.74 sec; Start 160: dft-grad1; 6/24 Test #160: dft-grad1 ........................ Passed 43.94 sec; Start 161: dft-grad2; 7/24 Test #161: dft-grad2 ........................ Passed 33.06 sec; Start 162: dft-psivar; 8/24 Test #162: dft-psivar ....................... Passed 103.28 sec; Start 163: dft-b3lyp; 9/24 Test #163: dft-b3lyp ........................ Passed 164.98 sec; Start 164: dft1; 10/24 Test #164: dft1 ............................. Passed 414.86 sec; Start 165: dft-vv10; 11/24 Test #165: dft-vv10 ......................... Passed 80.01 sec; Start 166: dft1-alt; 12/24 Test #166: dft1-alt ......................... Passed 191.52 sec; Start 167: dft2; 13/24 Test #167: dft2 ............................. Passed 22.00 sec; Start 168: dft3; 14/24 Test #168: dft3 .............................***Failed 20.54 sec; 	Closed-shell wB97 Energy (PK).....................................PASSED; 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 42, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:907,Testability,Test,Test,907,"```; (base) C:\Users\User\psi4.git\win_build>ctest -C Debug -L dft -E dft-bench --output-on-failure; Test project C:/Users/User/psi4.git/win_build; Start 155: dft-b2plyp; 1/24 Test #155: dft-b2plyp ....................... Passed 37.71 sec; Start 156: dft-grac; 2/24 Test #156: dft-grac ......................... Passed 7.52 sec; Start 157: dft-ghost; 3/24 Test #157: dft-ghost ........................ Passed 23.36 sec; Start 158: dft-grad-meta; 4/24 Test #158: dft-grad-meta .................... Passed 76.39 sec; Start 159: dft-freq; 5/24 Test #159: dft-freq ......................... Passed 83.74 sec; Start 160: dft-grad1; 6/24 Test #160: dft-grad1 ........................ Passed 43.94 sec; Start 161: dft-grad2; 7/24 Test #161: dft-grad2 ........................ Passed 33.06 sec; Start 162: dft-psivar; 8/24 Test #162: dft-psivar ....................... Passed 103.28 sec; Start 163: dft-b3lyp; 9/24 Test #163: dft-b3lyp ........................ Passed 164.98 sec; Start 164: dft1; 10/24 Test #164: dft1 ............................. Passed 414.86 sec; Start 165: dft-vv10; 11/24 Test #165: dft-vv10 ......................... Passed 80.01 sec; Start 166: dft1-alt; 12/24 Test #166: dft1-alt ......................... Passed 191.52 sec; Start 167: dft2; 13/24 Test #167: dft2 ............................. Passed 22.00 sec; Start 168: dft3; 14/24 Test #168: dft3 .............................***Failed 20.54 sec; 	Closed-shell wB97 Energy (PK).....................................PASSED; 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 42, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:995,Testability,Test,Test,995,"```; (base) C:\Users\User\psi4.git\win_build>ctest -C Debug -L dft -E dft-bench --output-on-failure; Test project C:/Users/User/psi4.git/win_build; Start 155: dft-b2plyp; 1/24 Test #155: dft-b2plyp ....................... Passed 37.71 sec; Start 156: dft-grac; 2/24 Test #156: dft-grac ......................... Passed 7.52 sec; Start 157: dft-ghost; 3/24 Test #157: dft-ghost ........................ Passed 23.36 sec; Start 158: dft-grad-meta; 4/24 Test #158: dft-grad-meta .................... Passed 76.39 sec; Start 159: dft-freq; 5/24 Test #159: dft-freq ......................... Passed 83.74 sec; Start 160: dft-grad1; 6/24 Test #160: dft-grad1 ........................ Passed 43.94 sec; Start 161: dft-grad2; 7/24 Test #161: dft-grad2 ........................ Passed 33.06 sec; Start 162: dft-psivar; 8/24 Test #162: dft-psivar ....................... Passed 103.28 sec; Start 163: dft-b3lyp; 9/24 Test #163: dft-b3lyp ........................ Passed 164.98 sec; Start 164: dft1; 10/24 Test #164: dft1 ............................. Passed 414.86 sec; Start 165: dft-vv10; 11/24 Test #165: dft-vv10 ......................... Passed 80.01 sec; Start 166: dft1-alt; 12/24 Test #166: dft1-alt ......................... Passed 191.52 sec; Start 167: dft2; 13/24 Test #167: dft2 ............................. Passed 22.00 sec; Start 168: dft3; 14/24 Test #168: dft3 .............................***Failed 20.54 sec; 	Closed-shell wB97 Energy (PK).....................................PASSED; 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 42, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:1087,Testability,Test,Test,1087,"--output-on-failure; Test project C:/Users/User/psi4.git/win_build; Start 155: dft-b2plyp; 1/24 Test #155: dft-b2plyp ....................... Passed 37.71 sec; Start 156: dft-grac; 2/24 Test #156: dft-grac ......................... Passed 7.52 sec; Start 157: dft-ghost; 3/24 Test #157: dft-ghost ........................ Passed 23.36 sec; Start 158: dft-grad-meta; 4/24 Test #158: dft-grad-meta .................... Passed 76.39 sec; Start 159: dft-freq; 5/24 Test #159: dft-freq ......................... Passed 83.74 sec; Start 160: dft-grad1; 6/24 Test #160: dft-grad1 ........................ Passed 43.94 sec; Start 161: dft-grad2; 7/24 Test #161: dft-grad2 ........................ Passed 33.06 sec; Start 162: dft-psivar; 8/24 Test #162: dft-psivar ....................... Passed 103.28 sec; Start 163: dft-b3lyp; 9/24 Test #163: dft-b3lyp ........................ Passed 164.98 sec; Start 164: dft1; 10/24 Test #164: dft1 ............................. Passed 414.86 sec; Start 165: dft-vv10; 11/24 Test #165: dft-vv10 ......................... Passed 80.01 sec; Start 166: dft1-alt; 12/24 Test #166: dft1-alt ......................... Passed 191.52 sec; Start 167: dft2; 13/24 Test #167: dft2 ............................. Passed 22.00 sec; Start 168: dft3; 14/24 Test #168: dft3 .............................***Failed 20.54 sec; 	Closed-shell wB97 Energy (PK).....................................PASSED; 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 42, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Exit Status: infile ( 1 ); autotest ( Non",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:1178,Testability,Test,Test,1178,"1/24 Test #155: dft-b2plyp ....................... Passed 37.71 sec; Start 156: dft-grac; 2/24 Test #156: dft-grac ......................... Passed 7.52 sec; Start 157: dft-ghost; 3/24 Test #157: dft-ghost ........................ Passed 23.36 sec; Start 158: dft-grad-meta; 4/24 Test #158: dft-grad-meta .................... Passed 76.39 sec; Start 159: dft-freq; 5/24 Test #159: dft-freq ......................... Passed 83.74 sec; Start 160: dft-grad1; 6/24 Test #160: dft-grad1 ........................ Passed 43.94 sec; Start 161: dft-grad2; 7/24 Test #161: dft-grad2 ........................ Passed 33.06 sec; Start 162: dft-psivar; 8/24 Test #162: dft-psivar ....................... Passed 103.28 sec; Start 163: dft-b3lyp; 9/24 Test #163: dft-b3lyp ........................ Passed 164.98 sec; Start 164: dft1; 10/24 Test #164: dft1 ............................. Passed 414.86 sec; Start 165: dft-vv10; 11/24 Test #165: dft-vv10 ......................... Passed 80.01 sec; Start 166: dft1-alt; 12/24 Test #166: dft1-alt ......................... Passed 191.52 sec; Start 167: dft2; 13/24 Test #167: dft2 ............................. Passed 22.00 sec; Start 168: dft3; 14/24 Test #168: dft3 .............................***Failed 20.54 sec; 	Closed-shell wB97 Energy (PK).....................................PASSED; 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 42, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). Start 169: dft-omega; 15/24 Test #169: dft-omega ....",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:1266,Testability,Test,Test,1266,"; 2/24 Test #156: dft-grac ......................... Passed 7.52 sec; Start 157: dft-ghost; 3/24 Test #157: dft-ghost ........................ Passed 23.36 sec; Start 158: dft-grad-meta; 4/24 Test #158: dft-grad-meta .................... Passed 76.39 sec; Start 159: dft-freq; 5/24 Test #159: dft-freq ......................... Passed 83.74 sec; Start 160: dft-grad1; 6/24 Test #160: dft-grad1 ........................ Passed 43.94 sec; Start 161: dft-grad2; 7/24 Test #161: dft-grad2 ........................ Passed 33.06 sec; Start 162: dft-psivar; 8/24 Test #162: dft-psivar ....................... Passed 103.28 sec; Start 163: dft-b3lyp; 9/24 Test #163: dft-b3lyp ........................ Passed 164.98 sec; Start 164: dft1; 10/24 Test #164: dft1 ............................. Passed 414.86 sec; Start 165: dft-vv10; 11/24 Test #165: dft-vv10 ......................... Passed 80.01 sec; Start 166: dft1-alt; 12/24 Test #166: dft1-alt ......................... Passed 191.52 sec; Start 167: dft2; 13/24 Test #167: dft2 ............................. Passed 22.00 sec; Start 168: dft3; 14/24 Test #168: dft3 .............................***Failed 20.54 sec; 	Closed-shell wB97 Energy (PK).....................................PASSED; 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 42, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). Start 169: dft-omega; 15/24 Test #169: dft-omega ........................ Passed 70.41 sec; Start 338: soscf-dft; 16/24 Test #338: soscf-dft ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:1353,Testability,Test,Test,1353,"ost; 3/24 Test #157: dft-ghost ........................ Passed 23.36 sec; Start 158: dft-grad-meta; 4/24 Test #158: dft-grad-meta .................... Passed 76.39 sec; Start 159: dft-freq; 5/24 Test #159: dft-freq ......................... Passed 83.74 sec; Start 160: dft-grad1; 6/24 Test #160: dft-grad1 ........................ Passed 43.94 sec; Start 161: dft-grad2; 7/24 Test #161: dft-grad2 ........................ Passed 33.06 sec; Start 162: dft-psivar; 8/24 Test #162: dft-psivar ....................... Passed 103.28 sec; Start 163: dft-b3lyp; 9/24 Test #163: dft-b3lyp ........................ Passed 164.98 sec; Start 164: dft1; 10/24 Test #164: dft1 ............................. Passed 414.86 sec; Start 165: dft-vv10; 11/24 Test #165: dft-vv10 ......................... Passed 80.01 sec; Start 166: dft1-alt; 12/24 Test #166: dft1-alt ......................... Passed 191.52 sec; Start 167: dft2; 13/24 Test #167: dft2 ............................. Passed 22.00 sec; Start 168: dft3; 14/24 Test #168: dft3 .............................***Failed 20.54 sec; 	Closed-shell wB97 Energy (PK).....................................PASSED; 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 42, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). Start 169: dft-omega; 15/24 Test #169: dft-omega ........................ Passed 70.41 sec; Start 338: soscf-dft; 16/24 Test #338: soscf-dft ........................ Passed 88.82 sec; Start 345: dft-custom; 17/24 Test #345: dft-",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:1878,Testability,Test,TestComparisonError,1878,"28 sec; Start 163: dft-b3lyp; 9/24 Test #163: dft-b3lyp ........................ Passed 164.98 sec; Start 164: dft1; 10/24 Test #164: dft1 ............................. Passed 414.86 sec; Start 165: dft-vv10; 11/24 Test #165: dft-vv10 ......................... Passed 80.01 sec; Start 166: dft1-alt; 12/24 Test #166: dft1-alt ......................... Passed 191.52 sec; Start 167: dft2; 13/24 Test #167: dft2 ............................. Passed 22.00 sec; Start 168: dft3; 14/24 Test #168: dft3 .............................***Failed 20.54 sec; 	Closed-shell wB97 Energy (PK).....................................PASSED; 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 42, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). Start 169: dft-omega; 15/24 Test #169: dft-omega ........................ Passed 70.41 sec; Start 338: soscf-dft; 16/24 Test #338: soscf-dft ........................ Passed 88.82 sec; Start 345: dft-custom; 17/24 Test #345: dft-custom ....................... Passed 66.89 sec; Start 346: dft-reference; 18/24 Test #346: dft-reference .................... Passed 16.23 sec; Start 361: dft-smoke; 19/24 Test #361: dft-smoke ........................ Passed 64.78 sec; Start 364: dft-jk; 20/24 Test #364: dft-jk ........................... Passed 32.41 sec; Start 366: dft-custom-dhdf; 21/24 Test #366: dft-custom-dhdf ..................***Failed 193.71 sec; 	Ne: B2PLYP_DFT....................................................PASSED; 	Ne: B2PLYP_PT2..........",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:1908,Testability,Test,TestComparisonError,1908,".... Passed 164.98 sec; Start 164: dft1; 10/24 Test #164: dft1 ............................. Passed 414.86 sec; Start 165: dft-vv10; 11/24 Test #165: dft-vv10 ......................... Passed 80.01 sec; Start 166: dft1-alt; 12/24 Test #166: dft1-alt ......................... Passed 191.52 sec; Start 167: dft2; 13/24 Test #167: dft2 ............................. Passed 22.00 sec; Start 168: dft3; 14/24 Test #168: dft3 .............................***Failed 20.54 sec; 	Closed-shell wB97 Energy (PK).....................................PASSED; 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 42, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). Start 169: dft-omega; 15/24 Test #169: dft-omega ........................ Passed 70.41 sec; Start 338: soscf-dft; 16/24 Test #338: soscf-dft ........................ Passed 88.82 sec; Start 345: dft-custom; 17/24 Test #345: dft-custom ....................... Passed 66.89 sec; Start 346: dft-reference; 18/24 Test #346: dft-reference .................... Passed 16.23 sec; Start 361: dft-smoke; 19/24 Test #361: dft-smoke ........................ Passed 64.78 sec; Start 364: dft-jk; 20/24 Test #364: dft-jk ........................... Passed 32.41 sec; Start 366: dft-custom-dhdf; 21/24 Test #366: dft-custom-dhdf ..................***Failed 193.71 sec; 	Ne: B2PLYP_DFT....................................................PASSED; 	Ne: B2PLYP_PT2....................................................PASSED; 	Ne: B2PLYP..............",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:2146,Testability,Test,Test,2146,".01 sec; Start 166: dft1-alt; 12/24 Test #166: dft1-alt ......................... Passed 191.52 sec; Start 167: dft2; 13/24 Test #167: dft2 ............................. Passed 22.00 sec; Start 168: dft3; 14/24 Test #168: dft3 .............................***Failed 20.54 sec; 	Closed-shell wB97 Energy (PK).....................................PASSED; 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 42, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). Start 169: dft-omega; 15/24 Test #169: dft-omega ........................ Passed 70.41 sec; Start 338: soscf-dft; 16/24 Test #338: soscf-dft ........................ Passed 88.82 sec; Start 345: dft-custom; 17/24 Test #345: dft-custom ....................... Passed 66.89 sec; Start 346: dft-reference; 18/24 Test #346: dft-reference .................... Passed 16.23 sec; Start 361: dft-smoke; 19/24 Test #361: dft-smoke ........................ Passed 64.78 sec; Start 364: dft-jk; 20/24 Test #364: dft-jk ........................... Passed 32.41 sec; Start 366: dft-custom-dhdf; 21/24 Test #366: dft-custom-dhdf ..................***Failed 193.71 sec; 	Ne: B2PLYP_DFT....................................................PASSED; 	Ne: B2PLYP_PT2....................................................PASSED; 	Ne: B2PLYP........................................................PASSED; 	Ne: B2GPPLYP_DFT..................................................PASSED; 	Ne: B2GPPLYP_PT2..................................................PAS",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:2238,Testability,Test,Test,2238,"191.52 sec; Start 167: dft2; 13/24 Test #167: dft2 ............................. Passed 22.00 sec; Start 168: dft3; 14/24 Test #168: dft3 .............................***Failed 20.54 sec; 	Closed-shell wB97 Energy (PK).....................................PASSED; 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 42, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). Start 169: dft-omega; 15/24 Test #169: dft-omega ........................ Passed 70.41 sec; Start 338: soscf-dft; 16/24 Test #338: soscf-dft ........................ Passed 88.82 sec; Start 345: dft-custom; 17/24 Test #345: dft-custom ....................... Passed 66.89 sec; Start 346: dft-reference; 18/24 Test #346: dft-reference .................... Passed 16.23 sec; Start 361: dft-smoke; 19/24 Test #361: dft-smoke ........................ Passed 64.78 sec; Start 364: dft-jk; 20/24 Test #364: dft-jk ........................... Passed 32.41 sec; Start 366: dft-custom-dhdf; 21/24 Test #366: dft-custom-dhdf ..................***Failed 193.71 sec; 	Ne: B2PLYP_DFT....................................................PASSED; 	Ne: B2PLYP_PT2....................................................PASSED; 	Ne: B2PLYP........................................................PASSED; 	Ne: B2GPPLYP_DFT..................................................PASSED; 	Ne: B2GPPLYP_PT2..................................................PASSED; 	Ne: B2GPPLYP......................................................PASSED; 	Ne: PTP",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:2331,Testability,Test,Test,2331," sec; Start 168: dft3; 14/24 Test #168: dft3 .............................***Failed 20.54 sec; 	Closed-shell wB97 Energy (PK).....................................PASSED; 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 42, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). Start 169: dft-omega; 15/24 Test #169: dft-omega ........................ Passed 70.41 sec; Start 338: soscf-dft; 16/24 Test #338: soscf-dft ........................ Passed 88.82 sec; Start 345: dft-custom; 17/24 Test #345: dft-custom ....................... Passed 66.89 sec; Start 346: dft-reference; 18/24 Test #346: dft-reference .................... Passed 16.23 sec; Start 361: dft-smoke; 19/24 Test #361: dft-smoke ........................ Passed 64.78 sec; Start 364: dft-jk; 20/24 Test #364: dft-jk ........................... Passed 32.41 sec; Start 366: dft-custom-dhdf; 21/24 Test #366: dft-custom-dhdf ..................***Failed 193.71 sec; 	Ne: B2PLYP_DFT....................................................PASSED; 	Ne: B2PLYP_PT2....................................................PASSED; 	Ne: B2PLYP........................................................PASSED; 	Ne: B2GPPLYP_DFT..................................................PASSED; 	Ne: B2GPPLYP_PT2..................................................PASSED; 	Ne: B2GPPLYP......................................................PASSED; 	Ne: PTPSS_DFT.....................................................PASSED; 	Ne: PTPSS_PT2............",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:2427,Testability,Test,Test,2427,"Closed-shell wB97 Energy (PK).....................................PASSED; 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 42, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). Start 169: dft-omega; 15/24 Test #169: dft-omega ........................ Passed 70.41 sec; Start 338: soscf-dft; 16/24 Test #338: soscf-dft ........................ Passed 88.82 sec; Start 345: dft-custom; 17/24 Test #345: dft-custom ....................... Passed 66.89 sec; Start 346: dft-reference; 18/24 Test #346: dft-reference .................... Passed 16.23 sec; Start 361: dft-smoke; 19/24 Test #361: dft-smoke ........................ Passed 64.78 sec; Start 364: dft-jk; 20/24 Test #364: dft-jk ........................... Passed 32.41 sec; Start 366: dft-custom-dhdf; 21/24 Test #366: dft-custom-dhdf ..................***Failed 193.71 sec; 	Ne: B2PLYP_DFT....................................................PASSED; 	Ne: B2PLYP_PT2....................................................PASSED; 	Ne: B2PLYP........................................................PASSED; 	Ne: B2GPPLYP_DFT..................................................PASSED; 	Ne: B2GPPLYP_PT2..................................................PASSED; 	Ne: B2GPPLYP......................................................PASSED; 	Ne: PTPSS_DFT.....................................................PASSED; 	Ne: PTPSS_PT2.....................................................PASSED; 	Ne: PTPSS.....................................",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:2519,Testability,Test,Test,2519," Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 42, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). Start 169: dft-omega; 15/24 Test #169: dft-omega ........................ Passed 70.41 sec; Start 338: soscf-dft; 16/24 Test #338: soscf-dft ........................ Passed 88.82 sec; Start 345: dft-custom; 17/24 Test #345: dft-custom ....................... Passed 66.89 sec; Start 346: dft-reference; 18/24 Test #346: dft-reference .................... Passed 16.23 sec; Start 361: dft-smoke; 19/24 Test #361: dft-smoke ........................ Passed 64.78 sec; Start 364: dft-jk; 20/24 Test #364: dft-jk ........................... Passed 32.41 sec; Start 366: dft-custom-dhdf; 21/24 Test #366: dft-custom-dhdf ..................***Failed 193.71 sec; 	Ne: B2PLYP_DFT....................................................PASSED; 	Ne: B2PLYP_PT2....................................................PASSED; 	Ne: B2PLYP........................................................PASSED; 	Ne: B2GPPLYP_DFT..................................................PASSED; 	Ne: B2GPPLYP_PT2..................................................PASSED; 	Ne: B2GPPLYP......................................................PASSED; 	Ne: PTPSS_DFT.....................................................PASSED; 	Ne: PTPSS_PT2.....................................................PASSED; 	Ne: PTPSS.........................................................PASSED; 	Ne: PWPB95_DFT.................................................",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:2608,Testability,Test,Test,2608,".; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 42, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). Start 169: dft-omega; 15/24 Test #169: dft-omega ........................ Passed 70.41 sec; Start 338: soscf-dft; 16/24 Test #338: soscf-dft ........................ Passed 88.82 sec; Start 345: dft-custom; 17/24 Test #345: dft-custom ....................... Passed 66.89 sec; Start 346: dft-reference; 18/24 Test #346: dft-reference .................... Passed 16.23 sec; Start 361: dft-smoke; 19/24 Test #361: dft-smoke ........................ Passed 64.78 sec; Start 364: dft-jk; 20/24 Test #364: dft-jk ........................... Passed 32.41 sec; Start 366: dft-custom-dhdf; 21/24 Test #366: dft-custom-dhdf ..................***Failed 193.71 sec; 	Ne: B2PLYP_DFT....................................................PASSED; 	Ne: B2PLYP_PT2....................................................PASSED; 	Ne: B2PLYP........................................................PASSED; 	Ne: B2GPPLYP_DFT..................................................PASSED; 	Ne: B2GPPLYP_PT2..................................................PASSED; 	Ne: B2GPPLYP......................................................PASSED; 	Ne: PTPSS_DFT.....................................................PASSED; 	Ne: PTPSS_PT2.....................................................PASSED; 	Ne: PTPSS.........................................................PASSED; 	Ne: PWPB95_DFT....................................................PASSED; 	Ne: PWPB95_PT2....................................................PASSED; 	Ne",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:2706,Testability,Test,Test,2706,"4, in <module>; exec(content); File ""<string>"", line 42, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). Start 169: dft-omega; 15/24 Test #169: dft-omega ........................ Passed 70.41 sec; Start 338: soscf-dft; 16/24 Test #338: soscf-dft ........................ Passed 88.82 sec; Start 345: dft-custom; 17/24 Test #345: dft-custom ....................... Passed 66.89 sec; Start 346: dft-reference; 18/24 Test #346: dft-reference .................... Passed 16.23 sec; Start 361: dft-smoke; 19/24 Test #361: dft-smoke ........................ Passed 64.78 sec; Start 364: dft-jk; 20/24 Test #364: dft-jk ........................... Passed 32.41 sec; Start 366: dft-custom-dhdf; 21/24 Test #366: dft-custom-dhdf ..................***Failed 193.71 sec; 	Ne: B2PLYP_DFT....................................................PASSED; 	Ne: B2PLYP_PT2....................................................PASSED; 	Ne: B2PLYP........................................................PASSED; 	Ne: B2GPPLYP_DFT..................................................PASSED; 	Ne: B2GPPLYP_PT2..................................................PASSED; 	Ne: B2GPPLYP......................................................PASSED; 	Ne: PTPSS_DFT.....................................................PASSED; 	Ne: PTPSS_PT2.....................................................PASSED; 	Ne: PTPSS.........................................................PASSED; 	Ne: PWPB95_DFT....................................................PASSED; 	Ne: PWPB95_PT2....................................................PASSED; 	Ne: PWPB95........................................................PASSED; 	Ne: DSD-BLYP_DFT.........",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:4488,Testability,Test,TestComparisonError,4488,".................................PASSED; 	Ne: PWPB95_PT2....................................................PASSED; 	Ne: PWPB95........................................................PASSED; 	Ne: DSD-BLYP_DFT..................................................PASSED; 	Ne: DSD-BLYP_PT2..................................................PASSED; 	Ne: DSD-BLYP......................................................PASSED; 	Ne: PBE0-DH DFT...................................................PASSED; 	Ne: PBE0-DH PT2...................................................PASSED; 	Ne: PBE0-DH.......................................................PASSED; 	PBE0-2: Water: computed value (-150.8272119) does not match (-152.6486355) to 6 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 109, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	PBE0-2: Water: computed value (-150.8272119) does not match (-152.6486355) to 6 digits.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). Start 367: dft-custom-hybrid; 22/24 Test #367: dft-custom-hybrid ................ Passed 46.21 sec; Start 368: dft-custom-mgga; 23/24 Test #368: dft-custom-mgga .................. Passed 244.44 sec; Start 369: dft-custom-gga; 24/24 Test #369: dft-custom-gga ...................***Failed 171.36 sec; 	Ne: BLYP..........................................................PASSED; 	Ne: SVWN..........................................................PASSED; 	Ne: PBE...........................................................PASSED; 	Ne: PW91..........................................................PASSED; 	Ne: MPWPW.........................................................PASSED; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112; Tra",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:4518,Testability,Test,TestComparisonError,4518,"............................................PASSED; 	Ne: PWPB95........................................................PASSED; 	Ne: DSD-BLYP_DFT..................................................PASSED; 	Ne: DSD-BLYP_PT2..................................................PASSED; 	Ne: DSD-BLYP......................................................PASSED; 	Ne: PBE0-DH DFT...................................................PASSED; 	Ne: PBE0-DH PT2...................................................PASSED; 	Ne: PBE0-DH.......................................................PASSED; 	PBE0-2: Water: computed value (-150.8272119) does not match (-152.6486355) to 6 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 109, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	PBE0-2: Water: computed value (-150.8272119) does not match (-152.6486355) to 6 digits.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). Start 367: dft-custom-hybrid; 22/24 Test #367: dft-custom-hybrid ................ Passed 46.21 sec; Start 368: dft-custom-mgga; 23/24 Test #368: dft-custom-mgga .................. Passed 244.44 sec; Start 369: dft-custom-gga; 24/24 Test #369: dft-custom-gga ...................***Failed 171.36 sec; 	Ne: BLYP..........................................................PASSED; 	Ne: SVWN..........................................................PASSED; 	Ne: PBE...........................................................PASSED; 	Ne: PW91..........................................................PASSED; 	Ne: MPWPW.........................................................PASSED; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/wi",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:4744,Testability,Test,Test,4744,"PASSED; 	Ne: DSD-BLYP_PT2..................................................PASSED; 	Ne: DSD-BLYP......................................................PASSED; 	Ne: PBE0-DH DFT...................................................PASSED; 	Ne: PBE0-DH PT2...................................................PASSED; 	Ne: PBE0-DH.......................................................PASSED; 	PBE0-2: Water: computed value (-150.8272119) does not match (-152.6486355) to 6 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 109, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	PBE0-2: Water: computed value (-150.8272119) does not match (-152.6486355) to 6 digits.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). Start 367: dft-custom-hybrid; 22/24 Test #367: dft-custom-hybrid ................ Passed 46.21 sec; Start 368: dft-custom-mgga; 23/24 Test #368: dft-custom-mgga .................. Passed 244.44 sec; Start 369: dft-custom-gga; 24/24 Test #369: dft-custom-gga ...................***Failed 171.36 sec; 	Ne: BLYP..........................................................PASSED; 	Ne: SVWN..........................................................PASSED; 	Ne: PBE...........................................................PASSED; 	Ne: PW91..........................................................PASSED; 	Ne: MPWPW.........................................................PASSED; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 44, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\driver.py"", line 492, in energy; wfn = ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:4842,Testability,Test,Test,4842,"P......................................................PASSED; 	Ne: PBE0-DH DFT...................................................PASSED; 	Ne: PBE0-DH PT2...................................................PASSED; 	Ne: PBE0-DH.......................................................PASSED; 	PBE0-2: Water: computed value (-150.8272119) does not match (-152.6486355) to 6 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 109, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	PBE0-2: Water: computed value (-150.8272119) does not match (-152.6486355) to 6 digits.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). Start 367: dft-custom-hybrid; 22/24 Test #367: dft-custom-hybrid ................ Passed 46.21 sec; Start 368: dft-custom-mgga; 23/24 Test #368: dft-custom-mgga .................. Passed 244.44 sec; Start 369: dft-custom-gga; 24/24 Test #369: dft-custom-gga ...................***Failed 171.36 sec; 	Ne: BLYP..........................................................PASSED; 	Ne: SVWN..........................................................PASSED; 	Ne: PBE...........................................................PASSED; 	Ne: PW91..........................................................PASSED; 	Ne: MPWPW.........................................................PASSED; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 44, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""C:\Users\User\p",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:4940,Testability,Test,Test,4940,"................................PASSED; 	Ne: PBE0-DH PT2...................................................PASSED; 	Ne: PBE0-DH.......................................................PASSED; 	PBE0-2: Water: computed value (-150.8272119) does not match (-152.6486355) to 6 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 109, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	PBE0-2: Water: computed value (-150.8272119) does not match (-152.6486355) to 6 digits.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). Start 367: dft-custom-hybrid; 22/24 Test #367: dft-custom-hybrid ................ Passed 46.21 sec; Start 368: dft-custom-mgga; 23/24 Test #368: dft-custom-mgga .................. Passed 244.44 sec; Start 369: dft-custom-gga; 24/24 Test #369: dft-custom-gga ...................***Failed 171.36 sec; 	Ne: BLYP..........................................................PASSED; 	Ne: SVWN..........................................................PASSED; 	Ne: PBE...........................................................PASSED; 	Ne: PW91..........................................................PASSED; 	Ne: MPWPW.........................................................PASSED; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 44, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 2038, in run_scf; scf_wfn = scf_hel",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:6349,Testability,test,tests,6349,"....... Passed 46.21 sec; Start 368: dft-custom-mgga; 23/24 Test #368: dft-custom-mgga .................. Passed 244.44 sec; Start 369: dft-custom-gga; 24/24 Test #369: dft-custom-gga ...................***Failed 171.36 sec; 	Ne: BLYP..........................................................PASSED; 	Ne: SVWN..........................................................PASSED; 	Ne: PBE...........................................................PASSED; 	Ne: PW91..........................................................PASSED; 	Ne: MPWPW.........................................................PASSED; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 44, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(). RuntimeError: ; Fatal Error: Iterations did not converge.; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112. Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). 88% tests passed, 3 tests failed out of 24. Label Time Summary:; cart = 233.39 sec (4 tests); dft = 2298.14 sec (24 tests); mp2 = 16.23 sec (1 test); psi = 2298.14 sec (24 tests); quicktests = 144.78 sec (2 tests); scf = 2298.14 sec (24 tests); shorttests = 129.39 sec (3 tests). Total Test time (real) = 2303.35 sec. The following tests FAILED:; 	168 - dft3 (Failed); 	366 - dft-custom-dhdf (Failed); 	369 - dft-custom-gga (Failed); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:6365,Testability,test,tests,6365,"....... Passed 46.21 sec; Start 368: dft-custom-mgga; 23/24 Test #368: dft-custom-mgga .................. Passed 244.44 sec; Start 369: dft-custom-gga; 24/24 Test #369: dft-custom-gga ...................***Failed 171.36 sec; 	Ne: BLYP..........................................................PASSED; 	Ne: SVWN..........................................................PASSED; 	Ne: PBE...........................................................PASSED; 	Ne: PW91..........................................................PASSED; 	Ne: MPWPW.........................................................PASSED; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 44, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(). RuntimeError: ; Fatal Error: Iterations did not converge.; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112. Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). 88% tests passed, 3 tests failed out of 24. Label Time Summary:; cart = 233.39 sec (4 tests); dft = 2298.14 sec (24 tests); mp2 = 16.23 sec (1 test); psi = 2298.14 sec (24 tests); quicktests = 144.78 sec (2 tests); scf = 2298.14 sec (24 tests); shorttests = 129.39 sec (3 tests). Total Test time (real) = 2303.35 sec. The following tests FAILED:; 	168 - dft3 (Failed); 	366 - dft-custom-dhdf (Failed); 	369 - dft-custom-gga (Failed); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:6431,Testability,test,tests,6431,"....... Passed 46.21 sec; Start 368: dft-custom-mgga; 23/24 Test #368: dft-custom-mgga .................. Passed 244.44 sec; Start 369: dft-custom-gga; 24/24 Test #369: dft-custom-gga ...................***Failed 171.36 sec; 	Ne: BLYP..........................................................PASSED; 	Ne: SVWN..........................................................PASSED; 	Ne: PBE...........................................................PASSED; 	Ne: PW91..........................................................PASSED; 	Ne: MPWPW.........................................................PASSED; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 44, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(). RuntimeError: ; Fatal Error: Iterations did not converge.; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112. Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). 88% tests passed, 3 tests failed out of 24. Label Time Summary:; cart = 233.39 sec (4 tests); dft = 2298.14 sec (24 tests); mp2 = 16.23 sec (1 test); psi = 2298.14 sec (24 tests); quicktests = 144.78 sec (2 tests); scf = 2298.14 sec (24 tests); shorttests = 129.39 sec (3 tests). Total Test time (real) = 2303.35 sec. The following tests FAILED:; 	168 - dft3 (Failed); 	366 - dft-custom-dhdf (Failed); 	369 - dft-custom-gga (Failed); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:6461,Testability,test,tests,6461,"....... Passed 46.21 sec; Start 368: dft-custom-mgga; 23/24 Test #368: dft-custom-mgga .................. Passed 244.44 sec; Start 369: dft-custom-gga; 24/24 Test #369: dft-custom-gga ...................***Failed 171.36 sec; 	Ne: BLYP..........................................................PASSED; 	Ne: SVWN..........................................................PASSED; 	Ne: PBE...........................................................PASSED; 	Ne: PW91..........................................................PASSED; 	Ne: MPWPW.........................................................PASSED; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 44, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(). RuntimeError: ; Fatal Error: Iterations did not converge.; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112. Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). 88% tests passed, 3 tests failed out of 24. Label Time Summary:; cart = 233.39 sec (4 tests); dft = 2298.14 sec (24 tests); mp2 = 16.23 sec (1 test); psi = 2298.14 sec (24 tests); quicktests = 144.78 sec (2 tests); scf = 2298.14 sec (24 tests); shorttests = 129.39 sec (3 tests). Total Test time (real) = 2303.35 sec. The following tests FAILED:; 	168 - dft3 (Failed); 	366 - dft-custom-dhdf (Failed); 	369 - dft-custom-gga (Failed); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:6488,Testability,test,test,6488,"....... Passed 46.21 sec; Start 368: dft-custom-mgga; 23/24 Test #368: dft-custom-mgga .................. Passed 244.44 sec; Start 369: dft-custom-gga; 24/24 Test #369: dft-custom-gga ...................***Failed 171.36 sec; 	Ne: BLYP..........................................................PASSED; 	Ne: SVWN..........................................................PASSED; 	Ne: PBE...........................................................PASSED; 	Ne: PW91..........................................................PASSED; 	Ne: MPWPW.........................................................PASSED; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 44, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(). RuntimeError: ; Fatal Error: Iterations did not converge.; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112. Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). 88% tests passed, 3 tests failed out of 24. Label Time Summary:; cart = 233.39 sec (4 tests); dft = 2298.14 sec (24 tests); mp2 = 16.23 sec (1 test); psi = 2298.14 sec (24 tests); quicktests = 144.78 sec (2 tests); scf = 2298.14 sec (24 tests); shorttests = 129.39 sec (3 tests). Total Test time (real) = 2303.35 sec. The following tests FAILED:; 	168 - dft3 (Failed); 	366 - dft-custom-dhdf (Failed); 	369 - dft-custom-gga (Failed); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:6517,Testability,test,tests,6517,"....... Passed 46.21 sec; Start 368: dft-custom-mgga; 23/24 Test #368: dft-custom-mgga .................. Passed 244.44 sec; Start 369: dft-custom-gga; 24/24 Test #369: dft-custom-gga ...................***Failed 171.36 sec; 	Ne: BLYP..........................................................PASSED; 	Ne: SVWN..........................................................PASSED; 	Ne: PBE...........................................................PASSED; 	Ne: PW91..........................................................PASSED; 	Ne: MPWPW.........................................................PASSED; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 44, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(). RuntimeError: ; Fatal Error: Iterations did not converge.; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112. Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). 88% tests passed, 3 tests failed out of 24. Label Time Summary:; cart = 233.39 sec (4 tests); dft = 2298.14 sec (24 tests); mp2 = 16.23 sec (1 test); psi = 2298.14 sec (24 tests); quicktests = 144.78 sec (2 tests); scf = 2298.14 sec (24 tests); shorttests = 129.39 sec (3 tests). Total Test time (real) = 2303.35 sec. The following tests FAILED:; 	168 - dft3 (Failed); 	366 - dft-custom-dhdf (Failed); 	369 - dft-custom-gga (Failed); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:6552,Testability,test,tests,6552,"....... Passed 46.21 sec; Start 368: dft-custom-mgga; 23/24 Test #368: dft-custom-mgga .................. Passed 244.44 sec; Start 369: dft-custom-gga; 24/24 Test #369: dft-custom-gga ...................***Failed 171.36 sec; 	Ne: BLYP..........................................................PASSED; 	Ne: SVWN..........................................................PASSED; 	Ne: PBE...........................................................PASSED; 	Ne: PW91..........................................................PASSED; 	Ne: MPWPW.........................................................PASSED; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 44, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(). RuntimeError: ; Fatal Error: Iterations did not converge.; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112. Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). 88% tests passed, 3 tests failed out of 24. Label Time Summary:; cart = 233.39 sec (4 tests); dft = 2298.14 sec (24 tests); mp2 = 16.23 sec (1 test); psi = 2298.14 sec (24 tests); quicktests = 144.78 sec (2 tests); scf = 2298.14 sec (24 tests); shorttests = 129.39 sec (3 tests). Total Test time (real) = 2303.35 sec. The following tests FAILED:; 	168 - dft3 (Failed); 	366 - dft-custom-dhdf (Failed); 	369 - dft-custom-gga (Failed); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:6582,Testability,test,tests,6582,"....... Passed 46.21 sec; Start 368: dft-custom-mgga; 23/24 Test #368: dft-custom-mgga .................. Passed 244.44 sec; Start 369: dft-custom-gga; 24/24 Test #369: dft-custom-gga ...................***Failed 171.36 sec; 	Ne: BLYP..........................................................PASSED; 	Ne: SVWN..........................................................PASSED; 	Ne: PBE...........................................................PASSED; 	Ne: PW91..........................................................PASSED; 	Ne: MPWPW.........................................................PASSED; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 44, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(). RuntimeError: ; Fatal Error: Iterations did not converge.; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112. Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). 88% tests passed, 3 tests failed out of 24. Label Time Summary:; cart = 233.39 sec (4 tests); dft = 2298.14 sec (24 tests); mp2 = 16.23 sec (1 test); psi = 2298.14 sec (24 tests); quicktests = 144.78 sec (2 tests); scf = 2298.14 sec (24 tests); shorttests = 129.39 sec (3 tests). Total Test time (real) = 2303.35 sec. The following tests FAILED:; 	168 - dft3 (Failed); 	366 - dft-custom-dhdf (Failed); 	369 - dft-custom-gga (Failed); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:6617,Testability,test,tests,6617,"....... Passed 46.21 sec; Start 368: dft-custom-mgga; 23/24 Test #368: dft-custom-mgga .................. Passed 244.44 sec; Start 369: dft-custom-gga; 24/24 Test #369: dft-custom-gga ...................***Failed 171.36 sec; 	Ne: BLYP..........................................................PASSED; 	Ne: SVWN..........................................................PASSED; 	Ne: PBE...........................................................PASSED; 	Ne: PW91..........................................................PASSED; 	Ne: MPWPW.........................................................PASSED; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 44, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(). RuntimeError: ; Fatal Error: Iterations did not converge.; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112. Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). 88% tests passed, 3 tests failed out of 24. Label Time Summary:; cart = 233.39 sec (4 tests); dft = 2298.14 sec (24 tests); mp2 = 16.23 sec (1 test); psi = 2298.14 sec (24 tests); quicktests = 144.78 sec (2 tests); scf = 2298.14 sec (24 tests); shorttests = 129.39 sec (3 tests). Total Test time (real) = 2303.35 sec. The following tests FAILED:; 	168 - dft3 (Failed); 	366 - dft-custom-dhdf (Failed); 	369 - dft-custom-gga (Failed); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:6631,Testability,Test,Test,6631,"....... Passed 46.21 sec; Start 368: dft-custom-mgga; 23/24 Test #368: dft-custom-mgga .................. Passed 244.44 sec; Start 369: dft-custom-gga; 24/24 Test #369: dft-custom-gga ...................***Failed 171.36 sec; 	Ne: BLYP..........................................................PASSED; 	Ne: SVWN..........................................................PASSED; 	Ne: PBE...........................................................PASSED; 	Ne: PW91..........................................................PASSED; 	Ne: MPWPW.........................................................PASSED; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 44, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(). RuntimeError: ; Fatal Error: Iterations did not converge.; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112. Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). 88% tests passed, 3 tests failed out of 24. Label Time Summary:; cart = 233.39 sec (4 tests); dft = 2298.14 sec (24 tests); mp2 = 16.23 sec (1 test); psi = 2298.14 sec (24 tests); quicktests = 144.78 sec (2 tests); scf = 2298.14 sec (24 tests); shorttests = 129.39 sec (3 tests). Total Test time (real) = 2303.35 sec. The following tests FAILED:; 	168 - dft3 (Failed); 	366 - dft-custom-dhdf (Failed); 	369 - dft-custom-gga (Failed); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404224014:6677,Testability,test,tests,6677,"....... Passed 46.21 sec; Start 368: dft-custom-mgga; 23/24 Test #368: dft-custom-mgga .................. Passed 244.44 sec; Start 369: dft-custom-gga; 24/24 Test #369: dft-custom-gga ...................***Failed 171.36 sec; 	Ne: BLYP..........................................................PASSED; 	Ne: SVWN..........................................................PASSED; 	Ne: PBE...........................................................PASSED; 	Ne: PW91..........................................................PASSED; 	Ne: MPWPW.........................................................PASSED; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 44, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(). RuntimeError: ; Fatal Error: Iterations did not converge.; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112. Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). 88% tests passed, 3 tests failed out of 24. Label Time Summary:; cart = 233.39 sec (4 tests); dft = 2298.14 sec (24 tests); mp2 = 16.23 sec (1 test); psi = 2298.14 sec (24 tests); quicktests = 144.78 sec (2 tests); scf = 2298.14 sec (24 tests); shorttests = 129.39 sec (3 tests). Total Test time (real) = 2303.35 sec. The following tests FAILED:; 	168 - dft3 (Failed); 	366 - dft-custom-dhdf (Failed); 	369 - dft-custom-gga (Failed); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014
https://github.com/psi4/psi4/issues/933#issuecomment-404225219:80,Availability,fault,fault,80,"With some glitches DFT works on *Windows*!. Annoyingly many other tests segment fault *Python* and crash *CTest*, so it is impossible to run all tests at once. Most likely `psi4::filesystem` is to blame.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404225219
https://github.com/psi4/psi4/issues/933#issuecomment-404225219:66,Testability,test,tests,66,"With some glitches DFT works on *Windows*!. Annoyingly many other tests segment fault *Python* and crash *CTest*, so it is impossible to run all tests at once. Most likely `psi4::filesystem` is to blame.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404225219
https://github.com/psi4/psi4/issues/933#issuecomment-404225219:145,Testability,test,tests,145,"With some glitches DFT works on *Windows*!. Annoyingly many other tests segment fault *Python* and crash *CTest*, so it is impossible to run all tests at once. Most likely `psi4::filesystem` is to blame.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404225219
https://github.com/psi4/psi4/issues/933#issuecomment-406507542:178,Integrability,depend,dependency,178,"#### filesystem. By my survey, libfilesystem occurs at:; - [ ] plugins. due for an overhaul. Skipping plugin use on Windows until overhaul seems reasonable to me.; - [x] fisapt. dependency removed in #1098 ; - [x] libcubeprop/cubeprop. dependency removed in #1098 ; - [x] libefp. libefp itself removed from c-side in #953 ; - [ ] libcubeprop/csg. libfilesystem dependency remains. The libcubeprop/csg filesys calls are harder to migrate because they're at the bottom of the call stack. But I also recall that you had cubeprop test cases working already on Windows. Is it worth finishing off libcubeprop/csg? Or is the situation as outlined stable?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-406507542
https://github.com/psi4/psi4/issues/933#issuecomment-406507542:236,Integrability,depend,dependency,236,"#### filesystem. By my survey, libfilesystem occurs at:; - [ ] plugins. due for an overhaul. Skipping plugin use on Windows until overhaul seems reasonable to me.; - [x] fisapt. dependency removed in #1098 ; - [x] libcubeprop/cubeprop. dependency removed in #1098 ; - [x] libefp. libefp itself removed from c-side in #953 ; - [ ] libcubeprop/csg. libfilesystem dependency remains. The libcubeprop/csg filesys calls are harder to migrate because they're at the bottom of the call stack. But I also recall that you had cubeprop test cases working already on Windows. Is it worth finishing off libcubeprop/csg? Or is the situation as outlined stable?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-406507542
https://github.com/psi4/psi4/issues/933#issuecomment-406507542:361,Integrability,depend,dependency,361,"#### filesystem. By my survey, libfilesystem occurs at:; - [ ] plugins. due for an overhaul. Skipping plugin use on Windows until overhaul seems reasonable to me.; - [x] fisapt. dependency removed in #1098 ; - [x] libcubeprop/cubeprop. dependency removed in #1098 ; - [x] libefp. libefp itself removed from c-side in #953 ; - [ ] libcubeprop/csg. libfilesystem dependency remains. The libcubeprop/csg filesys calls are harder to migrate because they're at the bottom of the call stack. But I also recall that you had cubeprop test cases working already on Windows. Is it worth finishing off libcubeprop/csg? Or is the situation as outlined stable?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-406507542
https://github.com/psi4/psi4/issues/933#issuecomment-406507542:63,Modifiability,plugin,plugins,63,"#### filesystem. By my survey, libfilesystem occurs at:; - [ ] plugins. due for an overhaul. Skipping plugin use on Windows until overhaul seems reasonable to me.; - [x] fisapt. dependency removed in #1098 ; - [x] libcubeprop/cubeprop. dependency removed in #1098 ; - [x] libefp. libefp itself removed from c-side in #953 ; - [ ] libcubeprop/csg. libfilesystem dependency remains. The libcubeprop/csg filesys calls are harder to migrate because they're at the bottom of the call stack. But I also recall that you had cubeprop test cases working already on Windows. Is it worth finishing off libcubeprop/csg? Or is the situation as outlined stable?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-406507542
https://github.com/psi4/psi4/issues/933#issuecomment-406507542:102,Modifiability,plugin,plugin,102,"#### filesystem. By my survey, libfilesystem occurs at:; - [ ] plugins. due for an overhaul. Skipping plugin use on Windows until overhaul seems reasonable to me.; - [x] fisapt. dependency removed in #1098 ; - [x] libcubeprop/cubeprop. dependency removed in #1098 ; - [x] libefp. libefp itself removed from c-side in #953 ; - [ ] libcubeprop/csg. libfilesystem dependency remains. The libcubeprop/csg filesys calls are harder to migrate because they're at the bottom of the call stack. But I also recall that you had cubeprop test cases working already on Windows. Is it worth finishing off libcubeprop/csg? Or is the situation as outlined stable?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-406507542
https://github.com/psi4/psi4/issues/933#issuecomment-406507542:526,Testability,test,test,526,"#### filesystem. By my survey, libfilesystem occurs at:; - [ ] plugins. due for an overhaul. Skipping plugin use on Windows until overhaul seems reasonable to me.; - [x] fisapt. dependency removed in #1098 ; - [x] libcubeprop/cubeprop. dependency removed in #1098 ; - [x] libefp. libefp itself removed from c-side in #953 ; - [ ] libcubeprop/csg. libfilesystem dependency remains. The libcubeprop/csg filesys calls are harder to migrate because they're at the bottom of the call stack. But I also recall that you had cubeprop test cases working already on Windows. Is it worth finishing off libcubeprop/csg? Or is the situation as outlined stable?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-406507542
https://github.com/psi4/psi4/issues/933#issuecomment-407100752:26,Deployability,deploy,deploying,26,"we are looking forward to deploying it, so the sooner the better. gianni de fabritiis. On Mon, Jul 23, 2018 at 11:18 AM, Lori A. Burns <notifications@github.com>; wrote:. > @raimis <https://github.com/raimis>, it might be good to assess the; > state-of-the-port. That is, are we waiting on you to check ""ready for; > merge"", or are you waiting on us for reviews, or are you waiting on us for; > code changes to do away with linux-bound code? On the last point, #953; > <https://github.com/psi4/psi4/pull/953> and #1098; > <https://github.com/psi4/psi4/pull/1098> are candidates (see question at; > preceding comment), but to spare you the rebase, it'd be nice to get your; > PRs in first, unless you need the changes.; >; > Thanks very much for all your work on porting psi. I just want to make; > sure we're not at a polite impasse.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/933#issuecomment-407095142>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AHaqOtQlJAAnmrtgpTrfN9o8lC6qsA3Wks5uJelFgaJpZM4ShQlu>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-407100752
https://github.com/psi4/psi4/issues/933#issuecomment-407357786:399,Testability,test,tests,399,"@loriab . The state of my PRs:; - ~~#1067 -- needs some work, **waiting for reviews**~~; - ~~#1071 -- almost ready to merge~~; - ~~#1075 -- needs some work, **waiting for reviews**~~; - ~~#1077 -- needs some fixes~~; - ~~#1078 -- needs some fixes, **waiting for reviews**~~; - ~~#1087 -- **waiting for reviews**~~; - ~~#1089 -- **waiting for reviews**~~; - ~~#1090 -- **waiting for reviews**, needs tests~~; - ~~#1091 -- **waiting for reviews**, needs tests, **can be merged**~~; - ~~#1092 -- **waiting for reviews**, needs tests~~; - ~~#1112 -- **waiting for reviews**~~",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-407357786
https://github.com/psi4/psi4/issues/933#issuecomment-407357786:452,Testability,test,tests,452,"@loriab . The state of my PRs:; - ~~#1067 -- needs some work, **waiting for reviews**~~; - ~~#1071 -- almost ready to merge~~; - ~~#1075 -- needs some work, **waiting for reviews**~~; - ~~#1077 -- needs some fixes~~; - ~~#1078 -- needs some fixes, **waiting for reviews**~~; - ~~#1087 -- **waiting for reviews**~~; - ~~#1089 -- **waiting for reviews**~~; - ~~#1090 -- **waiting for reviews**, needs tests~~; - ~~#1091 -- **waiting for reviews**, needs tests, **can be merged**~~; - ~~#1092 -- **waiting for reviews**, needs tests~~; - ~~#1112 -- **waiting for reviews**~~",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-407357786
https://github.com/psi4/psi4/issues/933#issuecomment-407357786:524,Testability,test,tests,524,"@loriab . The state of my PRs:; - ~~#1067 -- needs some work, **waiting for reviews**~~; - ~~#1071 -- almost ready to merge~~; - ~~#1075 -- needs some work, **waiting for reviews**~~; - ~~#1077 -- needs some fixes~~; - ~~#1078 -- needs some fixes, **waiting for reviews**~~; - ~~#1087 -- **waiting for reviews**~~; - ~~#1089 -- **waiting for reviews**~~; - ~~#1090 -- **waiting for reviews**, needs tests~~; - ~~#1091 -- **waiting for reviews**, needs tests, **can be merged**~~; - ~~#1092 -- **waiting for reviews**, needs tests~~; - ~~#1112 -- **waiting for reviews**~~",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-407357786
https://github.com/psi4/psi4/issues/933#issuecomment-408884434:16,Testability,test,tests,16,Just finish the tests!,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-408884434
https://github.com/psi4/psi4/issues/933#issuecomment-417611281:503,Deployability,deploy,deployment,503,"We are one step closer: *Psi4* compiles and runs on Appveyor (https://ci.appveyor.com/project/loriab/psi4/build/1.0.15). Remaining tasks/issues:; - Fix threading; - MSVC supports only OpenMP 2.0, but *Psi4* needs higher at some parts. So some conditional compilation needed.; - `cctriples` and `libdpd` use `pthread` directly, but its port to Windows (`pthread-win32`) is a bit questionable quality. So need to change to use OpenMP.; - Debug 30+ failing tests; - Build `conda` packages; - Start initial deployment on *GPUGrid* (@tonigi, @stefdoerr)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-417611281
https://github.com/psi4/psi4/issues/933#issuecomment-417611281:454,Testability,test,tests,454,"We are one step closer: *Psi4* compiles and runs on Appveyor (https://ci.appveyor.com/project/loriab/psi4/build/1.0.15). Remaining tasks/issues:; - Fix threading; - MSVC supports only OpenMP 2.0, but *Psi4* needs higher at some parts. So some conditional compilation needed.; - `cctriples` and `libdpd` use `pthread` directly, but its port to Windows (`pthread-win32`) is a bit questionable quality. So need to change to use OpenMP.; - Debug 30+ failing tests; - Build `conda` packages; - Start initial deployment on *GPUGrid* (@tonigi, @stefdoerr)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-417611281
https://github.com/psi4/psi4/issues/933#issuecomment-423183802:550,Energy Efficiency,adapt,adapt,550,"*OpenMP* issue!. It seems will be no better support of *OpenMP* in *MSVC* soon. So I was looking for an alternative solution as it is increasing code complexity and will add too much burden to keep *Psi4* compatible with *OpenMP* 2.0. One options is `clang-cl`, *MSVC* compatibility layer of *LLVM* (http://clang.llvm.org/docs/MSVCCompatibility.html), which supports *OpenMP* 4.0. After some hacking of *CMake* and *Psi4*, I managed to compile and pass the tests (https://ci.appveyor.com/project/raimis/psi4/build/1.0.601). So I will make new PRs to adapt `clang-cl` and close #1200, #1224, #1225, #1226, #1228, #1229, and #1230. Also, #1231 could be reverted.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-423183802
https://github.com/psi4/psi4/issues/933#issuecomment-423183802:550,Modifiability,adapt,adapt,550,"*OpenMP* issue!. It seems will be no better support of *OpenMP* in *MSVC* soon. So I was looking for an alternative solution as it is increasing code complexity and will add too much burden to keep *Psi4* compatible with *OpenMP* 2.0. One options is `clang-cl`, *MSVC* compatibility layer of *LLVM* (http://clang.llvm.org/docs/MSVCCompatibility.html), which supports *OpenMP* 4.0. After some hacking of *CMake* and *Psi4*, I managed to compile and pass the tests (https://ci.appveyor.com/project/raimis/psi4/build/1.0.601). So I will make new PRs to adapt `clang-cl` and close #1200, #1224, #1225, #1226, #1228, #1229, and #1230. Also, #1231 could be reverted.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-423183802
https://github.com/psi4/psi4/issues/933#issuecomment-423183802:457,Testability,test,tests,457,"*OpenMP* issue!. It seems will be no better support of *OpenMP* in *MSVC* soon. So I was looking for an alternative solution as it is increasing code complexity and will add too much burden to keep *Psi4* compatible with *OpenMP* 2.0. One options is `clang-cl`, *MSVC* compatibility layer of *LLVM* (http://clang.llvm.org/docs/MSVCCompatibility.html), which supports *OpenMP* 4.0. After some hacking of *CMake* and *Psi4*, I managed to compile and pass the tests (https://ci.appveyor.com/project/raimis/psi4/build/1.0.601). So I will make new PRs to adapt `clang-cl` and close #1200, #1224, #1225, #1226, #1228, #1229, and #1230. Also, #1231 could be reverted.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-423183802
https://github.com/psi4/psi4/issues/933#issuecomment-423186874:128,Availability,robust,robust,128,Great! I believe we will also explore ICC on top of MSVC incase the clang/MSVC compatibility with default conda channels is not robust.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-423186874
https://github.com/psi4/psi4/issues/933#issuecomment-433666463:240,Safety,timeout,timeout,240,"PR #1289 marks the `opt-full-hess-every` test as disabled on AppVeyor. As I commented in the AppVeyor file, that test requires angular momentum 6, due to the form that second derivative skeleton integrals take. Given AppVeyor's tendency to timeout, I opted to just exclude that test, rather than compile with higher angular momentum and make the timeout problem worse.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-433666463
https://github.com/psi4/psi4/issues/933#issuecomment-433666463:346,Safety,timeout,timeout,346,"PR #1289 marks the `opt-full-hess-every` test as disabled on AppVeyor. As I commented in the AppVeyor file, that test requires angular momentum 6, due to the form that second derivative skeleton integrals take. Given AppVeyor's tendency to timeout, I opted to just exclude that test, rather than compile with higher angular momentum and make the timeout problem worse.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-433666463
https://github.com/psi4/psi4/issues/933#issuecomment-433666463:41,Testability,test,test,41,"PR #1289 marks the `opt-full-hess-every` test as disabled on AppVeyor. As I commented in the AppVeyor file, that test requires angular momentum 6, due to the form that second derivative skeleton integrals take. Given AppVeyor's tendency to timeout, I opted to just exclude that test, rather than compile with higher angular momentum and make the timeout problem worse.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-433666463
https://github.com/psi4/psi4/issues/933#issuecomment-433666463:113,Testability,test,test,113,"PR #1289 marks the `opt-full-hess-every` test as disabled on AppVeyor. As I commented in the AppVeyor file, that test requires angular momentum 6, due to the form that second derivative skeleton integrals take. Given AppVeyor's tendency to timeout, I opted to just exclude that test, rather than compile with higher angular momentum and make the timeout problem worse.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-433666463
https://github.com/psi4/psi4/issues/933#issuecomment-433666463:278,Testability,test,test,278,"PR #1289 marks the `opt-full-hess-every` test as disabled on AppVeyor. As I commented in the AppVeyor file, that test requires angular momentum 6, due to the form that second derivative skeleton integrals take. Given AppVeyor's tendency to timeout, I opted to just exclude that test, rather than compile with higher angular momentum and make the timeout problem worse.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-433666463
https://github.com/psi4/psi4/issues/933#issuecomment-445293936:747,Deployability,install,install,747,"Finally, I have built an experimental *Psi4* package for *Windows*: https://anaconda.org/raimis/psi4. Limitations/issues:; - Minimal functionality: no addons and plugins; - Slow: not optimized and with debugging instrumentation; - ~~Can be used as a *Python* package only (i.e. `psi4` command is not working)~~ -- #1420; - ~~`PSI_SCRATCH` has to be set, otherwise it will crash~~ -- #1413; - A few tests are failing:; - ~~`cbs-parser`~~ -- #1442; - ~~`ci-property`~~ -- #1440; - ~~`cc46`~~ -- #1422; - ~~`cc47`~~ -- #1422; - ~~`cc53`~~ -- #1438; - ~~`fci-tdm`~~ -- #1441; - ~~`fci-tdm-2`~~ -- #1441; - ~~`psimrcc-fd-freq2`~~ -- #1427; - ~~`psithon2`~~ -- #1410. If you are a *Windows* user, could you try and give feed back, please:; ```; > conda install -c raimis -c psi4 -c conda-forge psi4; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-445293936
https://github.com/psi4/psi4/issues/933#issuecomment-445293936:162,Modifiability,plugin,plugins,162,"Finally, I have built an experimental *Psi4* package for *Windows*: https://anaconda.org/raimis/psi4. Limitations/issues:; - Minimal functionality: no addons and plugins; - Slow: not optimized and with debugging instrumentation; - ~~Can be used as a *Python* package only (i.e. `psi4` command is not working)~~ -- #1420; - ~~`PSI_SCRATCH` has to be set, otherwise it will crash~~ -- #1413; - A few tests are failing:; - ~~`cbs-parser`~~ -- #1442; - ~~`ci-property`~~ -- #1440; - ~~`cc46`~~ -- #1422; - ~~`cc47`~~ -- #1422; - ~~`cc53`~~ -- #1438; - ~~`fci-tdm`~~ -- #1441; - ~~`fci-tdm-2`~~ -- #1441; - ~~`psimrcc-fd-freq2`~~ -- #1427; - ~~`psithon2`~~ -- #1410. If you are a *Windows* user, could you try and give feed back, please:; ```; > conda install -c raimis -c psi4 -c conda-forge psi4; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-445293936
https://github.com/psi4/psi4/issues/933#issuecomment-445293936:183,Performance,optimiz,optimized,183,"Finally, I have built an experimental *Psi4* package for *Windows*: https://anaconda.org/raimis/psi4. Limitations/issues:; - Minimal functionality: no addons and plugins; - Slow: not optimized and with debugging instrumentation; - ~~Can be used as a *Python* package only (i.e. `psi4` command is not working)~~ -- #1420; - ~~`PSI_SCRATCH` has to be set, otherwise it will crash~~ -- #1413; - A few tests are failing:; - ~~`cbs-parser`~~ -- #1442; - ~~`ci-property`~~ -- #1440; - ~~`cc46`~~ -- #1422; - ~~`cc47`~~ -- #1422; - ~~`cc53`~~ -- #1438; - ~~`fci-tdm`~~ -- #1441; - ~~`fci-tdm-2`~~ -- #1441; - ~~`psimrcc-fd-freq2`~~ -- #1427; - ~~`psithon2`~~ -- #1410. If you are a *Windows* user, could you try and give feed back, please:; ```; > conda install -c raimis -c psi4 -c conda-forge psi4; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-445293936
https://github.com/psi4/psi4/issues/933#issuecomment-445293936:398,Testability,test,tests,398,"Finally, I have built an experimental *Psi4* package for *Windows*: https://anaconda.org/raimis/psi4. Limitations/issues:; - Minimal functionality: no addons and plugins; - Slow: not optimized and with debugging instrumentation; - ~~Can be used as a *Python* package only (i.e. `psi4` command is not working)~~ -- #1420; - ~~`PSI_SCRATCH` has to be set, otherwise it will crash~~ -- #1413; - A few tests are failing:; - ~~`cbs-parser`~~ -- #1442; - ~~`ci-property`~~ -- #1440; - ~~`cc46`~~ -- #1422; - ~~`cc47`~~ -- #1422; - ~~`cc53`~~ -- #1438; - ~~`fci-tdm`~~ -- #1441; - ~~`fci-tdm-2`~~ -- #1441; - ~~`psimrcc-fd-freq2`~~ -- #1427; - ~~`psithon2`~~ -- #1410. If you are a *Windows* user, could you try and give feed back, please:; ```; > conda install -c raimis -c psi4 -c conda-forge psi4; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-445293936
https://github.com/psi4/psi4/issues/933#issuecomment-446192665:10,Availability,ping,ping,10,"Could you ping me when you have a PR that makes `cc53` run on Windows? It will probably close #1376 as well, and I'd like to check myself.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-446192665
https://github.com/psi4/psi4/issues/933#issuecomment-446601070:44,Testability,test,test,44,`I` get a crash on problems larger than the test ones. Possibly due to limits on scratch file sizes arising owing to different int size. Attaching a test. [crash.py.txt](https://github.com/psi4/psi4/files/2672185/crash.py.txt),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-446601070
https://github.com/psi4/psi4/issues/933#issuecomment-446601070:149,Testability,test,test,149,`I` get a crash on problems larger than the test ones. Possibly due to limits on scratch file sizes arising owing to different int size. Attaching a test. [crash.py.txt](https://github.com/psi4/psi4/files/2672185/crash.py.txt),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-446601070
https://github.com/psi4/psi4/issues/933#issuecomment-447383378:138,Energy Efficiency,energy,energy,138,@tonigi 's problem can be reproduced with just:; ```python; import psi4; psi4.geometry('\n'.join(f'Ne 0 0 {i}' for i in range(40))); psi4.energy('HF/6-311++G**'); ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-447383378
https://github.com/psi4/psi4/issues/933#issuecomment-453056799:57,Integrability,depend,dependencies,57,"I'm stuck at this exception, possibly related to version dependencies or other recent changes ... before I delve in the debugging, has anybody seen it already? Thanks. ```; File ""C:\Users\Toni\mc3\envs\gg\lib\site-packages\psi4\driver\qcdb\psiutil.py"", line 231, in compare_molrecs; xptd = massage_dicts(xptd); File ""C:\Users\Toni\mc3\envs\gg\lib\site-packages\psi4\driver\qcdb\psiutil.py"", line 227, in massage_dicts; prov.pop('version'); AttributeError: 'str' object has no attribute 'pop'; ```. Edit: got it: a change in qcelemental 0.1.2 -> 3",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-453056799
https://github.com/psi4/psi4/issues/933#issuecomment-461430448:118,Deployability,pipeline,pipeline,118,*Psi4* debugging is almost finished on *Windows*!. The remaining tasks:; - [x] Streamline testing. A specific *Azure* pipeline can be triggered to run all the tests before release and after significant changes. -- #1527 ; - [x] Production level builds. A specific *Azure* pipeline can be triggered to build optimized binaries with a big `MAX_AM_ERI`. -- #1539 ; - [x] Conda package. A specific *Azure* pipeline can be triggered to create a conda package and publish it on *Azure* artefacts. -- #1560,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-461430448
https://github.com/psi4/psi4/issues/933#issuecomment-461430448:172,Deployability,release,release,172,*Psi4* debugging is almost finished on *Windows*!. The remaining tasks:; - [x] Streamline testing. A specific *Azure* pipeline can be triggered to run all the tests before release and after significant changes. -- #1527 ; - [x] Production level builds. A specific *Azure* pipeline can be triggered to build optimized binaries with a big `MAX_AM_ERI`. -- #1539 ; - [x] Conda package. A specific *Azure* pipeline can be triggered to create a conda package and publish it on *Azure* artefacts. -- #1560,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-461430448
https://github.com/psi4/psi4/issues/933#issuecomment-461430448:272,Deployability,pipeline,pipeline,272,*Psi4* debugging is almost finished on *Windows*!. The remaining tasks:; - [x] Streamline testing. A specific *Azure* pipeline can be triggered to run all the tests before release and after significant changes. -- #1527 ; - [x] Production level builds. A specific *Azure* pipeline can be triggered to build optimized binaries with a big `MAX_AM_ERI`. -- #1539 ; - [x] Conda package. A specific *Azure* pipeline can be triggered to create a conda package and publish it on *Azure* artefacts. -- #1560,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-461430448
https://github.com/psi4/psi4/issues/933#issuecomment-461430448:402,Deployability,pipeline,pipeline,402,*Psi4* debugging is almost finished on *Windows*!. The remaining tasks:; - [x] Streamline testing. A specific *Azure* pipeline can be triggered to run all the tests before release and after significant changes. -- #1527 ; - [x] Production level builds. A specific *Azure* pipeline can be triggered to build optimized binaries with a big `MAX_AM_ERI`. -- #1539 ; - [x] Conda package. A specific *Azure* pipeline can be triggered to create a conda package and publish it on *Azure* artefacts. -- #1560,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-461430448
https://github.com/psi4/psi4/issues/933#issuecomment-461430448:307,Performance,optimiz,optimized,307,*Psi4* debugging is almost finished on *Windows*!. The remaining tasks:; - [x] Streamline testing. A specific *Azure* pipeline can be triggered to run all the tests before release and after significant changes. -- #1527 ; - [x] Production level builds. A specific *Azure* pipeline can be triggered to build optimized binaries with a big `MAX_AM_ERI`. -- #1539 ; - [x] Conda package. A specific *Azure* pipeline can be triggered to create a conda package and publish it on *Azure* artefacts. -- #1560,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-461430448
https://github.com/psi4/psi4/issues/933#issuecomment-461430448:90,Testability,test,testing,90,*Psi4* debugging is almost finished on *Windows*!. The remaining tasks:; - [x] Streamline testing. A specific *Azure* pipeline can be triggered to run all the tests before release and after significant changes. -- #1527 ; - [x] Production level builds. A specific *Azure* pipeline can be triggered to build optimized binaries with a big `MAX_AM_ERI`. -- #1539 ; - [x] Conda package. A specific *Azure* pipeline can be triggered to create a conda package and publish it on *Azure* artefacts. -- #1560,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-461430448
https://github.com/psi4/psi4/issues/933#issuecomment-461430448:159,Testability,test,tests,159,*Psi4* debugging is almost finished on *Windows*!. The remaining tasks:; - [x] Streamline testing. A specific *Azure* pipeline can be triggered to run all the tests before release and after significant changes. -- #1527 ; - [x] Production level builds. A specific *Azure* pipeline can be triggered to build optimized binaries with a big `MAX_AM_ERI`. -- #1539 ; - [x] Conda package. A specific *Azure* pipeline can be triggered to create a conda package and publish it on *Azure* artefacts. -- #1560,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-461430448
https://github.com/psi4/psi4/issues/933#issuecomment-474864291:57,Deployability,install,install,57,I have built *Psi4* 1.3 packages for *Windows*!. You can install:; ```; conda install -c raimis -c conda-forge psi4=1.3; ```; The 1.3 version for *Windows* is actually: `v1.3` + #1560 + #1571 = https://github.com/raimis/psi4/commit/a13da3b642abd02b943abce4984876070e85473b. For reference: ; - Build for *Python* 3.6: https://dev.azure.com/raimisg/psi4/_build/results?buildId=606; - Build for *Python* 3.7: https://dev.azure.com/raimisg/psi4/_build/results?buildId=607. We try to deploy and see how do they behave in comparison with the *Linux* packages.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-474864291
https://github.com/psi4/psi4/issues/933#issuecomment-474864291:78,Deployability,install,install,78,I have built *Psi4* 1.3 packages for *Windows*!. You can install:; ```; conda install -c raimis -c conda-forge psi4=1.3; ```; The 1.3 version for *Windows* is actually: `v1.3` + #1560 + #1571 = https://github.com/raimis/psi4/commit/a13da3b642abd02b943abce4984876070e85473b. For reference: ; - Build for *Python* 3.6: https://dev.azure.com/raimisg/psi4/_build/results?buildId=606; - Build for *Python* 3.7: https://dev.azure.com/raimisg/psi4/_build/results?buildId=607. We try to deploy and see how do they behave in comparison with the *Linux* packages.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-474864291
https://github.com/psi4/psi4/issues/933#issuecomment-474864291:479,Deployability,deploy,deploy,479,I have built *Psi4* 1.3 packages for *Windows*!. You can install:; ```; conda install -c raimis -c conda-forge psi4=1.3; ```; The 1.3 version for *Windows* is actually: `v1.3` + #1560 + #1571 = https://github.com/raimis/psi4/commit/a13da3b642abd02b943abce4984876070e85473b. For reference: ; - Build for *Python* 3.6: https://dev.azure.com/raimisg/psi4/_build/results?buildId=606; - Build for *Python* 3.7: https://dev.azure.com/raimisg/psi4/_build/results?buildId=607. We try to deploy and see how do they behave in comparison with the *Linux* packages.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-474864291
https://github.com/psi4/psi4/issues/933#issuecomment-492353928:137,Availability,error,error,137,"@raimis This was working for me fine before, but when I do a clean install now on Windows 10 (1809) with Miniconda3, I get the following error when I try to run a simple test job:. `ValueError: Object arrays cannot be loaded when allow_pickle=False`. Are you seeing this? Happy to discuss on Psi4 Slack if real time discussion would be helpful.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-492353928
https://github.com/psi4/psi4/issues/933#issuecomment-492353928:67,Deployability,install,install,67,"@raimis This was working for me fine before, but when I do a clean install now on Windows 10 (1809) with Miniconda3, I get the following error when I try to run a simple test job:. `ValueError: Object arrays cannot be loaded when allow_pickle=False`. Are you seeing this? Happy to discuss on Psi4 Slack if real time discussion would be helpful.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-492353928
https://github.com/psi4/psi4/issues/933#issuecomment-492353928:218,Performance,load,loaded,218,"@raimis This was working for me fine before, but when I do a clean install now on Windows 10 (1809) with Miniconda3, I get the following error when I try to run a simple test job:. `ValueError: Object arrays cannot be loaded when allow_pickle=False`. Are you seeing this? Happy to discuss on Psi4 Slack if real time discussion would be helpful.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-492353928
https://github.com/psi4/psi4/issues/933#issuecomment-492353928:170,Testability,test,test,170,"@raimis This was working for me fine before, but when I do a clean install now on Windows 10 (1809) with Miniconda3, I get the following error when I try to run a simple test job:. `ValueError: Object arrays cannot be loaded when allow_pickle=False`. Are you seeing this? Happy to discuss on Psi4 Slack if real time discussion would be helpful.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-492353928
https://github.com/psi4/psi4/issues/933#issuecomment-492353928:163,Usability,simpl,simple,163,"@raimis This was working for me fine before, but when I do a clean install now on Windows 10 (1809) with Miniconda3, I get the following error when I try to run a simple test job:. `ValueError: Object arrays cannot be loaded when allow_pickle=False`. Are you seeing this? Happy to discuss on Psi4 Slack if real time discussion would be helpful.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-492353928
https://github.com/psi4/psi4/issues/933#issuecomment-492354867:113,Availability,down,downstream,113,"Ah, NumPy issue. Needs a rebuild after Psi4 1.3.2 release since NumPy fixed a security bug and broke quite a few downstream repos. You can try downgraded NumPy by one patch version.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-492354867
https://github.com/psi4/psi4/issues/933#issuecomment-492354867:143,Availability,down,downgraded,143,"Ah, NumPy issue. Needs a rebuild after Psi4 1.3.2 release since NumPy fixed a security bug and broke quite a few downstream repos. You can try downgraded NumPy by one patch version.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-492354867
https://github.com/psi4/psi4/issues/933#issuecomment-492354867:50,Deployability,release,release,50,"Ah, NumPy issue. Needs a rebuild after Psi4 1.3.2 release since NumPy fixed a security bug and broke quite a few downstream repos. You can try downgraded NumPy by one patch version.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-492354867
https://github.com/psi4/psi4/issues/933#issuecomment-492354867:167,Deployability,patch,patch,167,"Ah, NumPy issue. Needs a rebuild after Psi4 1.3.2 release since NumPy fixed a security bug and broke quite a few downstream repos. You can try downgraded NumPy by one patch version.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-492354867
https://github.com/psi4/psi4/issues/933#issuecomment-492354867:78,Security,secur,security,78,"Ah, NumPy issue. Needs a rebuild after Psi4 1.3.2 release since NumPy fixed a security bug and broke quite a few downstream repos. You can try downgraded NumPy by one patch version.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-492354867
https://github.com/psi4/psi4/issues/933#issuecomment-492357454:167,Deployability,install,install,167,"@dgasmith OK, that works. Just trying to get things sorted for an upcoming workshop (mid-July) and come up with an ""authoritative"" set of commands for the students to install everything.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-492357454
https://github.com/psi4/psi4/issues/933#issuecomment-494087443:12,Availability,avail,available,12,`v1.3.2` is available for Windows via `conda install psi4 -c raimis`. Please report back if you give it a try. We'll copy it to `-c psi4` (I think) after a few positive reports from the wild.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-494087443
https://github.com/psi4/psi4/issues/933#issuecomment-494087443:45,Deployability,install,install,45,`v1.3.2` is available for Windows via `conda install psi4 -c raimis`. Please report back if you give it a try. We'll copy it to `-c psi4` (I think) after a few positive reports from the wild.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-494087443
https://github.com/psi4/psi4/issues/933#issuecomment-494354023:38,Deployability,Install,Installation,38,*Psi4* 1.3.2 packages for *Windows*!. Installation:; ```; conda install -c raimis -c psi4 -c conda-forge psi4=1.3.2; ```; The 1.3.2 version for *Windows* is actually: https://github.com/psi4/psi4/tree/v1.3.2 + #1648 = https://github.com/raimis/psi4/commit/82e852b7e61f9813a665e1f6f35203d01e5fb1b9. Build logs:; - *Python* 3.6: https://dev.azure.com/raimisg/psi4/_build/results?buildId=737; - *Python* 3.7: https://dev.azure.com/raimisg/psi4/_build/results?buildId=738,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-494354023
https://github.com/psi4/psi4/issues/933#issuecomment-494354023:64,Deployability,install,install,64,*Psi4* 1.3.2 packages for *Windows*!. Installation:; ```; conda install -c raimis -c psi4 -c conda-forge psi4=1.3.2; ```; The 1.3.2 version for *Windows* is actually: https://github.com/psi4/psi4/tree/v1.3.2 + #1648 = https://github.com/raimis/psi4/commit/82e852b7e61f9813a665e1f6f35203d01e5fb1b9. Build logs:; - *Python* 3.6: https://dev.azure.com/raimisg/psi4/_build/results?buildId=737; - *Python* 3.7: https://dev.azure.com/raimisg/psi4/_build/results?buildId=738,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-494354023
https://github.com/psi4/psi4/issues/933#issuecomment-494354023:304,Testability,log,logs,304,*Psi4* 1.3.2 packages for *Windows*!. Installation:; ```; conda install -c raimis -c psi4 -c conda-forge psi4=1.3.2; ```; The 1.3.2 version for *Windows* is actually: https://github.com/psi4/psi4/tree/v1.3.2 + #1648 = https://github.com/raimis/psi4/commit/82e852b7e61f9813a665e1f6f35203d01e5fb1b9. Build logs:; - *Python* 3.6: https://dev.azure.com/raimisg/psi4/_build/results?buildId=737; - *Python* 3.7: https://dev.azure.com/raimisg/psi4/_build/results?buildId=738,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-494354023
https://github.com/psi4/psi4/issues/933#issuecomment-499999284:145,Deployability,install,installed,145,Everything works fine for me. The only issue I noticed in my small series of test jobs was that `nan` is printed for the user and system time. I installed via:; `conda create -n psi4env python=3.7`; `conda activate psi4env`; `conda install -c raimis -c psi4 -c conda-forge psi4=1.3.2`,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-499999284
https://github.com/psi4/psi4/issues/933#issuecomment-499999284:232,Deployability,install,install,232,Everything works fine for me. The only issue I noticed in my small series of test jobs was that `nan` is printed for the user and system time. I installed via:; `conda create -n psi4env python=3.7`; `conda activate psi4env`; `conda install -c raimis -c psi4 -c conda-forge psi4=1.3.2`,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-499999284
https://github.com/psi4/psi4/issues/933#issuecomment-499999284:77,Testability,test,test,77,Everything works fine for me. The only issue I noticed in my small series of test jobs was that `nan` is printed for the user and system time. I installed via:; `conda create -n psi4env python=3.7`; `conda activate psi4env`; `conda install -c raimis -c psi4 -c conda-forge psi4=1.3.2`,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-499999284
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:222,Availability,error,errors,222,"Hello @raimis @loriab , I built psi4-v1.3.2 with visual studio 2019，I have changed the compilation option -openmp to -openmp:experimental(Although it does not fully support the syntax of openmp4.0), and fixed some include errors in the src。I compiled all the dependency libraries successfully，but at the end of the link an error occurred. I found that `FC_SYMBOL ""The type of Fortran name mangling"" 2`，I changed the value to 1 and get the same error. It looks like a problem with the calling interface of fortran, but i have no idea to solve it. Can you give me some ideas to solve this problem, thanks. ```; Error log:; [1262/1263] Linking CXX static library src\psi4\scfgrad\scfgrad.lib; [1263/1263] Linking CXX shared library src\core.cp37-win_amd64.pyd; FAILED: src/core.cp37-win_amd64.pyd src/core.lib ; cmd.exe /C ""cd . && ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe"" -E vs_link_dll --intdir=src\CMakeFiles\core.dir --rc=""D:\Windows Kits\10\bin\10.0.17763.0\x64\rc.exe"" --mt=""D:\Windows Kits\10\bin\10.0.17763.0\x64\mt.exe"" --manifests -- C:\PROGRA~2\MICROS~3\2019\COMMUN~1\VC\Tools\MSVC\1421~1.277\bin\Hostx64\x64\link.exe /nologo src\CMakeFiles\core.dir\export_benchmarks.cc.obj src\CMakeFiles\core.dir\export_blas_lapack.cc.obj src\CMakeFiles\core.dir\export_cubeprop.cc.obj src\CMakeFiles\core.dir\export_diis.cc.obj src\CMakeFiles\core.dir\export_fock.cc.obj src\CMakeFiles\core.dir\export_functional.cc.obj src\CMakeFiles\core.dir\export_mints.cc.obj src\CMakeFiles\core.dir\export_misc.cc.obj src\CMakeFiles\core.dir\export_oeprop.cc.obj src\CMakeFiles\core.dir\export_pcm.cc.obj src\CMakeFiles\core.dir\export_plugins.cc.obj src\CMakeFiles\core.dir\export_psio.cc.obj src\CMakeFiles\core.dir\export_trans.cc.obj src\CMakeFiles\core.dir\export_wavefunction.cc.obj src\CMakeFiles\core.dir\export_options.cc.obj src\CMakeFiles\core.dir\create_new_plugin.cc.obj src\CMakeFiles\core.dir\read_options.cc.obj s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:323,Availability,error,error,323,"Hello @raimis @loriab , I built psi4-v1.3.2 with visual studio 2019，I have changed the compilation option -openmp to -openmp:experimental(Although it does not fully support the syntax of openmp4.0), and fixed some include errors in the src。I compiled all the dependency libraries successfully，but at the end of the link an error occurred. I found that `FC_SYMBOL ""The type of Fortran name mangling"" 2`，I changed the value to 1 and get the same error. It looks like a problem with the calling interface of fortran, but i have no idea to solve it. Can you give me some ideas to solve this problem, thanks. ```; Error log:; [1262/1263] Linking CXX static library src\psi4\scfgrad\scfgrad.lib; [1263/1263] Linking CXX shared library src\core.cp37-win_amd64.pyd; FAILED: src/core.cp37-win_amd64.pyd src/core.lib ; cmd.exe /C ""cd . && ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe"" -E vs_link_dll --intdir=src\CMakeFiles\core.dir --rc=""D:\Windows Kits\10\bin\10.0.17763.0\x64\rc.exe"" --mt=""D:\Windows Kits\10\bin\10.0.17763.0\x64\mt.exe"" --manifests -- C:\PROGRA~2\MICROS~3\2019\COMMUN~1\VC\Tools\MSVC\1421~1.277\bin\Hostx64\x64\link.exe /nologo src\CMakeFiles\core.dir\export_benchmarks.cc.obj src\CMakeFiles\core.dir\export_blas_lapack.cc.obj src\CMakeFiles\core.dir\export_cubeprop.cc.obj src\CMakeFiles\core.dir\export_diis.cc.obj src\CMakeFiles\core.dir\export_fock.cc.obj src\CMakeFiles\core.dir\export_functional.cc.obj src\CMakeFiles\core.dir\export_mints.cc.obj src\CMakeFiles\core.dir\export_misc.cc.obj src\CMakeFiles\core.dir\export_oeprop.cc.obj src\CMakeFiles\core.dir\export_pcm.cc.obj src\CMakeFiles\core.dir\export_plugins.cc.obj src\CMakeFiles\core.dir\export_psio.cc.obj src\CMakeFiles\core.dir\export_trans.cc.obj src\CMakeFiles\core.dir\export_wavefunction.cc.obj src\CMakeFiles\core.dir\export_options.cc.obj src\CMakeFiles\core.dir\create_new_plugin.cc.obj src\CMakeFiles\core.dir\read_options.cc.obj s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:444,Availability,error,error,444,"Hello @raimis @loriab , I built psi4-v1.3.2 with visual studio 2019，I have changed the compilation option -openmp to -openmp:experimental(Although it does not fully support the syntax of openmp4.0), and fixed some include errors in the src。I compiled all the dependency libraries successfully，but at the end of the link an error occurred. I found that `FC_SYMBOL ""The type of Fortran name mangling"" 2`，I changed the value to 1 and get the same error. It looks like a problem with the calling interface of fortran, but i have no idea to solve it. Can you give me some ideas to solve this problem, thanks. ```; Error log:; [1262/1263] Linking CXX static library src\psi4\scfgrad\scfgrad.lib; [1263/1263] Linking CXX shared library src\core.cp37-win_amd64.pyd; FAILED: src/core.cp37-win_amd64.pyd src/core.lib ; cmd.exe /C ""cd . && ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe"" -E vs_link_dll --intdir=src\CMakeFiles\core.dir --rc=""D:\Windows Kits\10\bin\10.0.17763.0\x64\rc.exe"" --mt=""D:\Windows Kits\10\bin\10.0.17763.0\x64\mt.exe"" --manifests -- C:\PROGRA~2\MICROS~3\2019\COMMUN~1\VC\Tools\MSVC\1421~1.277\bin\Hostx64\x64\link.exe /nologo src\CMakeFiles\core.dir\export_benchmarks.cc.obj src\CMakeFiles\core.dir\export_blas_lapack.cc.obj src\CMakeFiles\core.dir\export_cubeprop.cc.obj src\CMakeFiles\core.dir\export_diis.cc.obj src\CMakeFiles\core.dir\export_fock.cc.obj src\CMakeFiles\core.dir\export_functional.cc.obj src\CMakeFiles\core.dir\export_mints.cc.obj src\CMakeFiles\core.dir\export_misc.cc.obj src\CMakeFiles\core.dir\export_oeprop.cc.obj src\CMakeFiles\core.dir\export_pcm.cc.obj src\CMakeFiles\core.dir\export_plugins.cc.obj src\CMakeFiles\core.dir\export_psio.cc.obj src\CMakeFiles\core.dir\export_trans.cc.obj src\CMakeFiles\core.dir\export_wavefunction.cc.obj src\CMakeFiles\core.dir\export_options.cc.obj src\CMakeFiles\core.dir\create_new_plugin.cc.obj src\CMakeFiles\core.dir\read_options.cc.obj s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:609,Availability,Error,Error,609,"Hello @raimis @loriab , I built psi4-v1.3.2 with visual studio 2019，I have changed the compilation option -openmp to -openmp:experimental(Although it does not fully support the syntax of openmp4.0), and fixed some include errors in the src。I compiled all the dependency libraries successfully，but at the end of the link an error occurred. I found that `FC_SYMBOL ""The type of Fortran name mangling"" 2`，I changed the value to 1 and get the same error. It looks like a problem with the calling interface of fortran, but i have no idea to solve it. Can you give me some ideas to solve this problem, thanks. ```; Error log:; [1262/1263] Linking CXX static library src\psi4\scfgrad\scfgrad.lib; [1263/1263] Linking CXX shared library src\core.cp37-win_amd64.pyd; FAILED: src/core.cp37-win_amd64.pyd src/core.lib ; cmd.exe /C ""cd . && ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe"" -E vs_link_dll --intdir=src\CMakeFiles\core.dir --rc=""D:\Windows Kits\10\bin\10.0.17763.0\x64\rc.exe"" --mt=""D:\Windows Kits\10\bin\10.0.17763.0\x64\mt.exe"" --manifests -- C:\PROGRA~2\MICROS~3\2019\COMMUN~1\VC\Tools\MSVC\1421~1.277\bin\Hostx64\x64\link.exe /nologo src\CMakeFiles\core.dir\export_benchmarks.cc.obj src\CMakeFiles\core.dir\export_blas_lapack.cc.obj src\CMakeFiles\core.dir\export_cubeprop.cc.obj src\CMakeFiles\core.dir\export_diis.cc.obj src\CMakeFiles\core.dir\export_fock.cc.obj src\CMakeFiles\core.dir\export_functional.cc.obj src\CMakeFiles\core.dir\export_mints.cc.obj src\CMakeFiles\core.dir\export_misc.cc.obj src\CMakeFiles\core.dir\export_oeprop.cc.obj src\CMakeFiles\core.dir\export_pcm.cc.obj src\CMakeFiles\core.dir\export_plugins.cc.obj src\CMakeFiles\core.dir\export_psio.cc.obj src\CMakeFiles\core.dir\export_trans.cc.obj src\CMakeFiles\core.dir\export_wavefunction.cc.obj src\CMakeFiles\core.dir\export_options.cc.obj src\CMakeFiles\core.dir\create_new_plugin.cc.obj src\CMakeFiles\core.dir\read_options.cc.obj s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:6782,Availability,error,error,6782,"il.lib src\psi4\libpsio\psio.lib src\psi4\libqt\qt.lib src\psi4\libsapt_solver\sapt_solver.lib src\psi4\libscf_solver\scf_solver.lib src\psi4\libtrans\trans.lib Ws2_32.lib C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\Extensions\Microsoft\Python\Miniconda\Miniconda3-x64\libs\Python37.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\gg.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\xc.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\deriv.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\int.lib D:\OpenBLAS\lib\openblas.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:src\CMakeFiles\core.dir/intermediate.manifest src\CMakeFiles\core.dir/manifest.res"" failed (exit code 1120) with the following output:; 正在创建库 src\core.lib 和对象 src\core.exp; F:\fnocc.lib(diis.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv_，该符号在函数 ""void __cdecl psi::fnocc::DGESV(long &,long &,double *,long &,long *,double *,long &,long &)"" (?DGESV@fnocc@psi@@YAXAEAJ0PEAN0PEAJ100@Z) 中被引用; F:\mcscf.lib(scf_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv_，该符号在函数 ""void __cdecl psi::fnocc::DGEMV(char &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMV@fnocc@psi@@YAXAEADAEAJ1AEANPEAN131231@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm_，该符号在函数 ""void __cdecl psi::fnocc::DGEMM(char &,char &,long &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMM@fnocc@psi@@YAXAEAD0AEAJ11AEANPEAN131231@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(algebra_interface.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(operation_contraction.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:6996,Availability,error,error,6996,"4\libtrans\trans.lib Ws2_32.lib C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\Extensions\Microsoft\Python\Miniconda\Miniconda3-x64\libs\Python37.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\gg.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\xc.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\deriv.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\int.lib D:\OpenBLAS\lib\openblas.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:src\CMakeFiles\core.dir/intermediate.manifest src\CMakeFiles\core.dir/manifest.res"" failed (exit code 1120) with the following output:; 正在创建库 src\core.lib 和对象 src\core.exp; F:\fnocc.lib(diis.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv_，该符号在函数 ""void __cdecl psi::fnocc::DGESV(long &,long &,double *,long &,long *,double *,long &,long &)"" (?DGESV@fnocc@psi@@YAXAEAJ0PEAN0PEAJ100@Z) 中被引用; F:\mcscf.lib(scf_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv_，该符号在函数 ""void __cdecl psi::fnocc::DGEMV(char &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMV@fnocc@psi@@YAXAEADAEAJ1AEANPEAN131231@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm_，该符号在函数 ""void __cdecl psi::fnocc::DGEMM(char &,char &,long &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMM@fnocc@psi@@YAXAEAD0AEAJ11AEANPEAN131231@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(algebra_interface.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(operation_contraction.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev_，该符号在函数 ""void __cdecl psi::fnocc::DSYEV(char &,char &,long &,double *,long &,double *,double *,long &,long &)"" (?DSYEV@fnocc@psi",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:7064,Availability,error,error,7064,"sual Studio\2019\Community\Common7\IDE\Extensions\Microsoft\Python\Miniconda\Miniconda3-x64\libs\Python37.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\gg.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\xc.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\deriv.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\int.lib D:\OpenBLAS\lib\openblas.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:src\CMakeFiles\core.dir/intermediate.manifest src\CMakeFiles\core.dir/manifest.res"" failed (exit code 1120) with the following output:; 正在创建库 src\core.lib 和对象 src\core.exp; F:\fnocc.lib(diis.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv_，该符号在函数 ""void __cdecl psi::fnocc::DGESV(long &,long &,double *,long &,long *,double *,long &,long &)"" (?DGESV@fnocc@psi@@YAXAEAJ0PEAN0PEAJ100@Z) 中被引用; F:\mcscf.lib(scf_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv_，该符号在函数 ""void __cdecl psi::fnocc::DGEMV(char &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMV@fnocc@psi@@YAXAEADAEAJ1AEANPEAN131231@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm_，该符号在函数 ""void __cdecl psi::fnocc::DGEMM(char &,char &,long &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMM@fnocc@psi@@YAXAEAD0AEAJ11AEANPEAN131231@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(algebra_interface.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(operation_contraction.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev_，该符号在函数 ""void __cdecl psi::fnocc::DSYEV(char &,char &,long &,double *,long &,double *,double *,long &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.o",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:7125,Availability,error,error,7125,"\lib\gg.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\xc.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\deriv.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\int.lib D:\OpenBLAS\lib\openblas.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:src\CMakeFiles\core.dir/intermediate.manifest src\CMakeFiles\core.dir/manifest.res"" failed (exit code 1120) with the following output:; 正在创建库 src\core.lib 和对象 src\core.exp; F:\fnocc.lib(diis.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv_，该符号在函数 ""void __cdecl psi::fnocc::DGESV(long &,long &,double *,long &,long *,double *,long &,long &)"" (?DGESV@fnocc@psi@@YAXAEAJ0PEAN0PEAJ100@Z) 中被引用; F:\mcscf.lib(scf_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv_，该符号在函数 ""void __cdecl psi::fnocc::DGEMV(char &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMV@fnocc@psi@@YAXAEADAEAJ1AEANPEAN131231@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm_，该符号在函数 ""void __cdecl psi::fnocc::DGEMM(char &,char &,long &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMM@fnocc@psi@@YAXAEAD0AEAJ11AEANPEAN131231@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(algebra_interface.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(operation_contraction.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev_，该符号在函数 ""void __cdecl psi::fnocc::DSYEV(char &,char &,long &,double *,long &,double *,double *,long &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dsyev_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dspev_，该符号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:7368,Availability,error,error,7368,"b shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:src\CMakeFiles\core.dir/intermediate.manifest src\CMakeFiles\core.dir/manifest.res"" failed (exit code 1120) with the following output:; 正在创建库 src\core.lib 和对象 src\core.exp; F:\fnocc.lib(diis.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv_，该符号在函数 ""void __cdecl psi::fnocc::DGESV(long &,long &,double *,long &,long *,double *,long &,long &)"" (?DGESV@fnocc@psi@@YAXAEAJ0PEAN0PEAJ100@Z) 中被引用; F:\mcscf.lib(scf_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv_，该符号在函数 ""void __cdecl psi::fnocc::DGEMV(char &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMV@fnocc@psi@@YAXAEADAEAJ1AEANPEAN131231@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm_，该符号在函数 ""void __cdecl psi::fnocc::DGEMM(char &,char &,long &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMM@fnocc@psi@@YAXAEAD0AEAJ11AEANPEAN131231@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(algebra_interface.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(operation_contraction.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev_，该符号在函数 ""void __cdecl psi::fnocc::DSYEV(char &,char &,long &,double *,long &,double *,double *,long &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dsyev_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dspev_，该符号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,long &,double *,double *,double *,long &,double *,long &)"" (?DSPEV@fnocc@psi@@YAXAEAD0AEAJPEAN22121@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:7639,Availability,error,error,7639,"st.res"" failed (exit code 1120) with the following output:; 正在创建库 src\core.lib 和对象 src\core.exp; F:\fnocc.lib(diis.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv_，该符号在函数 ""void __cdecl psi::fnocc::DGESV(long &,long &,double *,long &,long *,double *,long &,long &)"" (?DGESV@fnocc@psi@@YAXAEAJ0PEAN0PEAJ100@Z) 中被引用; F:\mcscf.lib(scf_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv_，该符号在函数 ""void __cdecl psi::fnocc::DGEMV(char &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMV@fnocc@psi@@YAXAEADAEAJ1AEANPEAN131231@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm_，该符号在函数 ""void __cdecl psi::fnocc::DGEMM(char &,char &,long &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMM@fnocc@psi@@YAXAEAD0AEAJ11AEANPEAN131231@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(algebra_interface.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(operation_contraction.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev_，该符号在函数 ""void __cdecl psi::fnocc::DSYEV(char &,char &,long &,double *,long &,double *,double *,long &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dsyev_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dspev_，该符号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,long &,double *,double *,double *,long &,double *,long &)"" (?DSPEV@fnocc@psi@@YAXAEAD0AEAJPEAN22121@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long &,double *,double *,long &,double *,long &,double *,long &,long &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LN",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:7715,Availability,error,error,7715,"ib 和对象 src\core.exp; F:\fnocc.lib(diis.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv_，该符号在函数 ""void __cdecl psi::fnocc::DGESV(long &,long &,double *,long &,long *,double *,long &,long &)"" (?DGESV@fnocc@psi@@YAXAEAJ0PEAN0PEAJ100@Z) 中被引用; F:\mcscf.lib(scf_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv_，该符号在函数 ""void __cdecl psi::fnocc::DGEMV(char &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMV@fnocc@psi@@YAXAEADAEAJ1AEANPEAN131231@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm_，该符号在函数 ""void __cdecl psi::fnocc::DGEMM(char &,char &,long &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMM@fnocc@psi@@YAXAEAD0AEAJ11AEANPEAN131231@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(algebra_interface.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(operation_contraction.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev_，该符号在函数 ""void __cdecl psi::fnocc::DSYEV(char &,char &,long &,double *,long &,double *,double *,long &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dsyev_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dspev_，该符号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,long &,double *,double *,double *,long &,double *,long &)"" (?DSPEV@fnocc@psi@@YAXAEAD0AEAJPEAN22121@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long &,double *,double *,long &,double *,long &,double *,long &,long &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev_，该符号在函数 opt_asymm_matrix_eig 中被引用; F:\psimrcc.lib(man",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:7795,Availability,error,error,7795,"_，该符号在函数 ""void __cdecl psi::fnocc::DGESV(long &,long &,double *,long &,long *,double *,long &,long &)"" (?DGESV@fnocc@psi@@YAXAEAJ0PEAN0PEAJ100@Z) 中被引用; F:\mcscf.lib(scf_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv_，该符号在函数 ""void __cdecl psi::fnocc::DGEMV(char &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMV@fnocc@psi@@YAXAEADAEAJ1AEANPEAN131231@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm_，该符号在函数 ""void __cdecl psi::fnocc::DGEMM(char &,char &,long &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMM@fnocc@psi@@YAXAEAD0AEAJ11AEANPEAN131231@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(algebra_interface.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(operation_contraction.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev_，该符号在函数 ""void __cdecl psi::fnocc::DSYEV(char &,char &,long &,double *,long &,double *,double *,long &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dsyev_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dspev_，该符号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,long &,double *,double *,double *,long &,double *,long &)"" (?DSPEV@fnocc@psi@@YAXAEAD0AEAJPEAN22121@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long &,double *,double *,long &,double *,long &,double *,long &,long &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev_，该符号在函数 opt_asymm_matrix_eig 中被引用; F:\psimrcc.lib(manybody.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(heff_diagonaliz",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:7856,Availability,error,error,7856,"@Z) 中被引用; F:\mcscf.lib(scf_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv_，该符号在函数 ""void __cdecl psi::fnocc::DGEMV(char &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMV@fnocc@psi@@YAXAEADAEAJ1AEANPEAN131231@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm_，该符号在函数 ""void __cdecl psi::fnocc::DGEMM(char &,char &,long &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMM@fnocc@psi@@YAXAEAD0AEAJ11AEANPEAN131231@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(algebra_interface.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(operation_contraction.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev_，该符号在函数 ""void __cdecl psi::fnocc::DSYEV(char &,char &,long &,double *,long &,double *,double *,long &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dsyev_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dspev_，该符号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,long &,double *,double *,double *,long &,double *,long &)"" (?DSPEV@fnocc@psi@@YAXAEAD0AEAJPEAN22121@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long &,double *,double *,long &,double *,long &,double *,long &,long &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev_，该符号在函数 opt_asymm_matrix_eig 中被引用; F:\psimrcc.lib(manybody.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(heff_diagonalize.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2019: 无法解析的外部符号 ddot_，该符号在函数 ""public: void __cdecl p",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:8088,Availability,error,error,8088,".lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv_，该符号在函数 ""void __cdecl psi::fnocc::DGEMV(char &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMV@fnocc@psi@@YAXAEADAEAJ1AEANPEAN131231@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm_，该符号在函数 ""void __cdecl psi::fnocc::DGEMM(char &,char &,long &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMM@fnocc@psi@@YAXAEAD0AEAJ11AEANPEAN131231@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(algebra_interface.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(operation_contraction.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev_，该符号在函数 ""void __cdecl psi::fnocc::DSYEV(char &,char &,long &,double *,long &,double *,double *,long &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dsyev_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dspev_，该符号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,long &,double *,double *,double *,long &,double *,long &)"" (?DSPEV@fnocc@psi@@YAXAEAD0AEAJPEAN22121@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long &,double *,double *,long &,double *,long &,double *,long &,long &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev_，该符号在函数 opt_asymm_matrix_eig 中被引用; F:\psimrcc.lib(manybody.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(heff_diagonalize.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2019: 无法解析的外部符号 ddot_，该符号在函数 ""public: void __cdecl psi::psimrcc::CCBLAS::diis(int,double,enum psi::psimrcc::DiisType)"" (?diis@CCBLAS@psimrcc@psi@@QEAAXHNW4DiisType@23@@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:8149,Availability,error,error,8149,"e *,long &,double &,double *,long &)"" (?DGEMV@fnocc@psi@@YAXAEADAEAJ1AEANPEAN131231@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm_，该符号在函数 ""void __cdecl psi::fnocc::DGEMM(char &,char &,long &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMM@fnocc@psi@@YAXAEAD0AEAJ11AEANPEAN131231@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(algebra_interface.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(operation_contraction.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev_，该符号在函数 ""void __cdecl psi::fnocc::DSYEV(char &,char &,long &,double *,long &,double *,double *,long &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dsyev_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dspev_，该符号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,long &,double *,double *,double *,long &,double *,long &)"" (?DSPEV@fnocc@psi@@YAXAEAD0AEAJPEAN22121@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long &,double *,double *,long &,double *,long &,double *,long &,long &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev_，该符号在函数 opt_asymm_matrix_eig 中被引用; F:\psimrcc.lib(manybody.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(heff_diagonalize.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2019: 无法解析的外部符号 ddot_，该符号在函数 ""public: void __cdecl psi::psimrcc::CCBLAS::diis(int,double,enum psi::psimrcc::DiisType)"" (?diis@CCBLAS@psimrcc@psi@@QEAAXHNW4DiisType@23@@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dswap，该符号在函数 ""void __cdecl psi::C_DSWAP(unsigned __int64,double *,int,double *,int)"" (?C_DSWAP@psi@@YAX_KPEANH1H",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:8371,Availability,error,error,8371,"long &,double *,long &,double &,double *,long &)"" (?DGEMM@fnocc@psi@@YAXAEAD0AEAJ11AEANPEAN131231@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(algebra_interface.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(operation_contraction.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev_，该符号在函数 ""void __cdecl psi::fnocc::DSYEV(char &,char &,long &,double *,long &,double *,double *,long &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dsyev_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dspev_，该符号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,long &,double *,double *,double *,long &,double *,long &)"" (?DSPEV@fnocc@psi@@YAXAEAD0AEAJPEAN22121@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long &,double *,double *,long &,double *,long &,double *,long &,long &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev_，该符号在函数 opt_asymm_matrix_eig 中被引用; F:\psimrcc.lib(manybody.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(heff_diagonalize.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2019: 无法解析的外部符号 ddot_，该符号在函数 ""public: void __cdecl psi::psimrcc::CCBLAS::diis(int,double,enum psi::psimrcc::DiisType)"" (?diis@CCBLAS@psimrcc@psi@@QEAAXHNW4DiisType@23@@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dswap，该符号在函数 ""void __cdecl psi::C_DSWAP(unsigned __int64,double *,int,double *,int)"" (?C_DSWAP@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 daxpy，该符号在函数 ""void __cdecl psi::C_DAXPY(unsigned __int64,double,double *,int,double *,int)"" (?C_DAXPY@psi@@YAX_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:8650,Availability,error,error,8650,"b(algebra_interface.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(operation_contraction.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev_，该符号在函数 ""void __cdecl psi::fnocc::DSYEV(char &,char &,long &,double *,long &,double *,double *,long &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dsyev_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dspev_，该符号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,long &,double *,double *,double *,long &,double *,long &)"" (?DSPEV@fnocc@psi@@YAXAEAD0AEAJPEAN22121@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long &,double *,double *,long &,double *,long &,double *,long &,long &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev_，该符号在函数 opt_asymm_matrix_eig 中被引用; F:\psimrcc.lib(manybody.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(heff_diagonalize.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2019: 无法解析的外部符号 ddot_，该符号在函数 ""public: void __cdecl psi::psimrcc::CCBLAS::diis(int,double,enum psi::psimrcc::DiisType)"" (?diis@CCBLAS@psimrcc@psi@@QEAAXHNW4DiisType@23@@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dswap，该符号在函数 ""void __cdecl psi::C_DSWAP(unsigned __int64,double *,int,double *,int)"" (?C_DSWAP@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 daxpy，该符号在函数 ""void __cdecl psi::C_DAXPY(unsigned __int64,double,double *,int,double *,int)"" (?C_DAXPY@psi@@YAX_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dcopy，该符号在函数 ""void __cdecl psi::C_DCOPY(unsigned __int64,double *,int,double *,int)"" (?C_DCOPY@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:8750,Availability,error,error,8750,"tion_contraction.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev_，该符号在函数 ""void __cdecl psi::fnocc::DSYEV(char &,char &,long &,double *,long &,double *,double *,long &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dsyev_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dspev_，该符号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,long &,double *,double *,double *,long &,double *,long &)"" (?DSPEV@fnocc@psi@@YAXAEAD0AEAJPEAN22121@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long &,double *,double *,long &,double *,long &,double *,long &,long &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev_，该符号在函数 opt_asymm_matrix_eig 中被引用; F:\psimrcc.lib(manybody.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(heff_diagonalize.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2019: 无法解析的外部符号 ddot_，该符号在函数 ""public: void __cdecl psi::psimrcc::CCBLAS::diis(int,double,enum psi::psimrcc::DiisType)"" (?diis@CCBLAS@psimrcc@psi@@QEAAXHNW4DiisType@23@@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dswap，该符号在函数 ""void __cdecl psi::C_DSWAP(unsigned __int64,double *,int,double *,int)"" (?C_DSWAP@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 daxpy，该符号在函数 ""void __cdecl psi::C_DAXPY(unsigned __int64,double,double *,int,double *,int)"" (?C_DAXPY@psi@@YAX_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dcopy，该符号在函数 ""void __cdecl psi::C_DCOPY(unsigned __int64,double *,int,double *,int)"" (?C_DCOPY@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号在函数 ""void __cdecl psi::C_DROT(unsigned __int64,double *,int,double *,int,double,doub",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:8825,Availability,error,error,8825,"as.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev_，该符号在函数 ""void __cdecl psi::fnocc::DSYEV(char &,char &,long &,double *,long &,double *,double *,long &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dsyev_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dspev_，该符号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,long &,double *,double *,double *,long &,double *,long &)"" (?DSPEV@fnocc@psi@@YAXAEAD0AEAJPEAN22121@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long &,double *,double *,long &,double *,long &,double *,long &,long &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev_，该符号在函数 opt_asymm_matrix_eig 中被引用; F:\psimrcc.lib(manybody.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(heff_diagonalize.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2019: 无法解析的外部符号 ddot_，该符号在函数 ""public: void __cdecl psi::psimrcc::CCBLAS::diis(int,double,enum psi::psimrcc::DiisType)"" (?diis@CCBLAS@psimrcc@psi@@QEAAXHNW4DiisType@23@@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dswap，该符号在函数 ""void __cdecl psi::C_DSWAP(unsigned __int64,double *,int,double *,int)"" (?C_DSWAP@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 daxpy，该符号在函数 ""void __cdecl psi::C_DAXPY(unsigned __int64,double,double *,int,double *,int)"" (?C_DAXPY@psi@@YAX_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dcopy，该符号在函数 ""void __cdecl psi::C_DCOPY(unsigned __int64,double *,int,double *,int)"" (?C_DCOPY@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号在函数 ""void __cdecl psi::C_DROT(unsigned __int64,double *,int,double *,int,double,double)"" (?C_DROT@psi@@YAX_KPEANH1HNN@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : e",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:8893,Availability,error,error,8893,"g &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dsyev_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dspev_，该符号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,long &,double *,double *,double *,long &,double *,long &)"" (?DSPEV@fnocc@psi@@YAXAEAD0AEAJPEAN22121@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long &,double *,double *,long &,double *,long &,double *,long &,long &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev_，该符号在函数 opt_asymm_matrix_eig 中被引用; F:\psimrcc.lib(manybody.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(heff_diagonalize.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2019: 无法解析的外部符号 ddot_，该符号在函数 ""public: void __cdecl psi::psimrcc::CCBLAS::diis(int,double,enum psi::psimrcc::DiisType)"" (?diis@CCBLAS@psimrcc@psi@@QEAAXHNW4DiisType@23@@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dswap，该符号在函数 ""void __cdecl psi::C_DSWAP(unsigned __int64,double *,int,double *,int)"" (?C_DSWAP@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 daxpy，该符号在函数 ""void __cdecl psi::C_DAXPY(unsigned __int64,double,double *,int,double *,int)"" (?C_DAXPY@psi@@YAX_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dcopy，该符号在函数 ""void __cdecl psi::C_DCOPY(unsigned __int64,double *,int,double *,int)"" (?C_DCOPY@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号在函数 ""void __cdecl psi::C_DROT(unsigned __int64,double *,int,double *,int,double,double)"" (?C_DROT@psi@@YAX_KPEANH1HNN@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dscal，该符号在函数 ""void __cdecl psi::C_DSCAL(unsigned __int64,double,double *,int)"" (?C_DSCAL@psi@@YAX_KNPEANH@Z) 中被引用; F:\",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:9110,Availability,error,error,9110,"号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,long &,double *,double *,double *,long &,double *,long &)"" (?DSPEV@fnocc@psi@@YAXAEAD0AEAJPEAN22121@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long &,double *,double *,long &,double *,long &,double *,long &,long &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev_，该符号在函数 opt_asymm_matrix_eig 中被引用; F:\psimrcc.lib(manybody.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(heff_diagonalize.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2019: 无法解析的外部符号 ddot_，该符号在函数 ""public: void __cdecl psi::psimrcc::CCBLAS::diis(int,double,enum psi::psimrcc::DiisType)"" (?diis@CCBLAS@psimrcc@psi@@QEAAXHNW4DiisType@23@@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dswap，该符号在函数 ""void __cdecl psi::C_DSWAP(unsigned __int64,double *,int,double *,int)"" (?C_DSWAP@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 daxpy，该符号在函数 ""void __cdecl psi::C_DAXPY(unsigned __int64,double,double *,int,double *,int)"" (?C_DAXPY@psi@@YAX_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dcopy，该符号在函数 ""void __cdecl psi::C_DCOPY(unsigned __int64,double *,int,double *,int)"" (?C_DCOPY@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号在函数 ""void __cdecl psi::C_DROT(unsigned __int64,double *,int,double *,int,double,double)"" (?C_DROT@psi@@YAX_KPEANH1HNN@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dscal，该符号在函数 ""void __cdecl psi::C_DSCAL(unsigned __int64,double,double *,int)"" (?C_DSCAL@psi@@YAX_KNPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddot，该符号在函数 ""double __cdecl psi::C_DDOT(unsigned __int64,double *,int,double *,int)"" (?C_DDOT@psi@@YAN_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:9288,Availability,error,error,9288,"bj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long &,double *,double *,long &,double *,long &,double *,long &,long &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev_，该符号在函数 opt_asymm_matrix_eig 中被引用; F:\psimrcc.lib(manybody.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(heff_diagonalize.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2019: 无法解析的外部符号 ddot_，该符号在函数 ""public: void __cdecl psi::psimrcc::CCBLAS::diis(int,double,enum psi::psimrcc::DiisType)"" (?diis@CCBLAS@psimrcc@psi@@QEAAXHNW4DiisType@23@@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dswap，该符号在函数 ""void __cdecl psi::C_DSWAP(unsigned __int64,double *,int,double *,int)"" (?C_DSWAP@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 daxpy，该符号在函数 ""void __cdecl psi::C_DAXPY(unsigned __int64,double,double *,int,double *,int)"" (?C_DAXPY@psi@@YAX_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dcopy，该符号在函数 ""void __cdecl psi::C_DCOPY(unsigned __int64,double *,int,double *,int)"" (?C_DCOPY@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号在函数 ""void __cdecl psi::C_DROT(unsigned __int64,double *,int,double *,int,double,double)"" (?C_DROT@psi@@YAX_KPEANH1HNN@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dscal，该符号在函数 ""void __cdecl psi::C_DSCAL(unsigned __int64,double,double *,int)"" (?C_DSCAL@psi@@YAX_KNPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddot，该符号在函数 ""double __cdecl psi::C_DDOT(unsigned __int64,double *,int,double *,int)"" (?C_DDOT@psi@@YAN_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dnrm2，该符号在函数 ""double __cdecl psi::C_DNRM2(unsigned __int64,double *,int)"" (?C_DNRM2@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:9474,Availability,error,error,9474,"ng &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev_，该符号在函数 opt_asymm_matrix_eig 中被引用; F:\psimrcc.lib(manybody.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(heff_diagonalize.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2019: 无法解析的外部符号 ddot_，该符号在函数 ""public: void __cdecl psi::psimrcc::CCBLAS::diis(int,double,enum psi::psimrcc::DiisType)"" (?diis@CCBLAS@psimrcc@psi@@QEAAXHNW4DiisType@23@@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dswap，该符号在函数 ""void __cdecl psi::C_DSWAP(unsigned __int64,double *,int,double *,int)"" (?C_DSWAP@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 daxpy，该符号在函数 ""void __cdecl psi::C_DAXPY(unsigned __int64,double,double *,int,double *,int)"" (?C_DAXPY@psi@@YAX_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dcopy，该符号在函数 ""void __cdecl psi::C_DCOPY(unsigned __int64,double *,int,double *,int)"" (?C_DCOPY@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号在函数 ""void __cdecl psi::C_DROT(unsigned __int64,double *,int,double *,int,double,double)"" (?C_DROT@psi@@YAX_KPEANH1HNN@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dscal，该符号在函数 ""void __cdecl psi::C_DSCAL(unsigned __int64,double,double *,int)"" (?C_DSCAL@psi@@YAX_KNPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddot，该符号在函数 ""double __cdecl psi::C_DDOT(unsigned __int64,double *,int,double *,int)"" (?C_DDOT@psi@@YAN_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dnrm2，该符号在函数 ""double __cdecl psi::C_DNRM2(unsigned __int64,double *,int)"" (?C_DNRM2@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dasum，该符号在函数 ""double __cdecl psi::C_DASUM(unsigned __int64,double *,int)"" (?C_DASUM@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 i",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:9652,Availability,error,error,9652,"manybody.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(heff_diagonalize.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2019: 无法解析的外部符号 ddot_，该符号在函数 ""public: void __cdecl psi::psimrcc::CCBLAS::diis(int,double,enum psi::psimrcc::DiisType)"" (?diis@CCBLAS@psimrcc@psi@@QEAAXHNW4DiisType@23@@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dswap，该符号在函数 ""void __cdecl psi::C_DSWAP(unsigned __int64,double *,int,double *,int)"" (?C_DSWAP@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 daxpy，该符号在函数 ""void __cdecl psi::C_DAXPY(unsigned __int64,double,double *,int,double *,int)"" (?C_DAXPY@psi@@YAX_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dcopy，该符号在函数 ""void __cdecl psi::C_DCOPY(unsigned __int64,double *,int,double *,int)"" (?C_DCOPY@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号在函数 ""void __cdecl psi::C_DROT(unsigned __int64,double *,int,double *,int,double,double)"" (?C_DROT@psi@@YAX_KPEANH1HNN@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dscal，该符号在函数 ""void __cdecl psi::C_DSCAL(unsigned __int64,double,double *,int)"" (?C_DSCAL@psi@@YAX_KNPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddot，该符号在函数 ""double __cdecl psi::C_DDOT(unsigned __int64,double *,int,double *,int)"" (?C_DDOT@psi@@YAN_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dnrm2，该符号在函数 ""double __cdecl psi::C_DNRM2(unsigned __int64,double *,int)"" (?C_DNRM2@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dasum，该符号在函数 ""double __cdecl psi::C_DASUM(unsigned __int64,double *,int)"" (?C_DASUM@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 idamax，该符号在函数 ""unsigned __int64 __cdecl psi::C_IDAMAX(unsigned __int64,double *,int)"" (?C_IDAMAX@psi@@YA_K_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgbmv",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:9843,Availability,error,error,9843,"的外部符号 ddot_，该符号在函数 ""public: void __cdecl psi::psimrcc::CCBLAS::diis(int,double,enum psi::psimrcc::DiisType)"" (?diis@CCBLAS@psimrcc@psi@@QEAAXHNW4DiisType@23@@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dswap，该符号在函数 ""void __cdecl psi::C_DSWAP(unsigned __int64,double *,int,double *,int)"" (?C_DSWAP@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 daxpy，该符号在函数 ""void __cdecl psi::C_DAXPY(unsigned __int64,double,double *,int,double *,int)"" (?C_DAXPY@psi@@YAX_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dcopy，该符号在函数 ""void __cdecl psi::C_DCOPY(unsigned __int64,double *,int,double *,int)"" (?C_DCOPY@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号在函数 ""void __cdecl psi::C_DROT(unsigned __int64,double *,int,double *,int,double,double)"" (?C_DROT@psi@@YAX_KPEANH1HNN@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dscal，该符号在函数 ""void __cdecl psi::C_DSCAL(unsigned __int64,double,double *,int)"" (?C_DSCAL@psi@@YAX_KNPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddot，该符号在函数 ""double __cdecl psi::C_DDOT(unsigned __int64,double *,int,double *,int)"" (?C_DDOT@psi@@YAN_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dnrm2，该符号在函数 ""double __cdecl psi::C_DNRM2(unsigned __int64,double *,int)"" (?C_DNRM2@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dasum，该符号在函数 ""double __cdecl psi::C_DASUM(unsigned __int64,double *,int)"" (?C_DASUM@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 idamax，该符号在函数 ""unsigned __int64 __cdecl psi::C_IDAMAX(unsigned __int64,double *,int)"" (?C_IDAMAX@psi@@YA_K_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgbmv，该符号在函数 ""void __cdecl psi::C_DGBMV(char,int,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGBMV@psi@@YAXDHHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:10014,Availability,error,error,10014,"ib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dswap，该符号在函数 ""void __cdecl psi::C_DSWAP(unsigned __int64,double *,int,double *,int)"" (?C_DSWAP@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 daxpy，该符号在函数 ""void __cdecl psi::C_DAXPY(unsigned __int64,double,double *,int,double *,int)"" (?C_DAXPY@psi@@YAX_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dcopy，该符号在函数 ""void __cdecl psi::C_DCOPY(unsigned __int64,double *,int,double *,int)"" (?C_DCOPY@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号在函数 ""void __cdecl psi::C_DROT(unsigned __int64,double *,int,double *,int,double,double)"" (?C_DROT@psi@@YAX_KPEANH1HNN@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dscal，该符号在函数 ""void __cdecl psi::C_DSCAL(unsigned __int64,double,double *,int)"" (?C_DSCAL@psi@@YAX_KNPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddot，该符号在函数 ""double __cdecl psi::C_DDOT(unsigned __int64,double *,int,double *,int)"" (?C_DDOT@psi@@YAN_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dnrm2，该符号在函数 ""double __cdecl psi::C_DNRM2(unsigned __int64,double *,int)"" (?C_DNRM2@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dasum，该符号在函数 ""double __cdecl psi::C_DASUM(unsigned __int64,double *,int)"" (?C_DASUM@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 idamax，该符号在函数 ""unsigned __int64 __cdecl psi::C_IDAMAX(unsigned __int64,double *,int)"" (?C_IDAMAX@psi@@YA_K_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgbmv，该符号在函数 ""void __cdecl psi::C_DGBMV(char,int,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGBMV@psi@@YAXDHHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm，该符号在函数 ""void __cdecl psi::C_DGEMM(char,char,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMM@psi@@YAXDDHHHNP",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:10191,Availability,error,error,10191,"F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 daxpy，该符号在函数 ""void __cdecl psi::C_DAXPY(unsigned __int64,double,double *,int,double *,int)"" (?C_DAXPY@psi@@YAX_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dcopy，该符号在函数 ""void __cdecl psi::C_DCOPY(unsigned __int64,double *,int,double *,int)"" (?C_DCOPY@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号在函数 ""void __cdecl psi::C_DROT(unsigned __int64,double *,int,double *,int,double,double)"" (?C_DROT@psi@@YAX_KPEANH1HNN@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dscal，该符号在函数 ""void __cdecl psi::C_DSCAL(unsigned __int64,double,double *,int)"" (?C_DSCAL@psi@@YAX_KNPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddot，该符号在函数 ""double __cdecl psi::C_DDOT(unsigned __int64,double *,int,double *,int)"" (?C_DDOT@psi@@YAN_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dnrm2，该符号在函数 ""double __cdecl psi::C_DNRM2(unsigned __int64,double *,int)"" (?C_DNRM2@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dasum，该符号在函数 ""double __cdecl psi::C_DASUM(unsigned __int64,double *,int)"" (?C_DASUM@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 idamax，该符号在函数 ""unsigned __int64 __cdecl psi::C_IDAMAX(unsigned __int64,double *,int)"" (?C_IDAMAX@psi@@YA_K_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgbmv，该符号在函数 ""void __cdecl psi::C_DGBMV(char,int,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGBMV@psi@@YAXDHHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm，该符号在函数 ""void __cdecl psi::C_DGEMM(char,char,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMM@psi@@YAXDDHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv，该符号在函数 ""void __cdecl psi::C_DGEMV(char,int,int,double,double *,int,double *,int,double,d",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:10356,Availability,error,error,10356,"X_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dcopy，该符号在函数 ""void __cdecl psi::C_DCOPY(unsigned __int64,double *,int,double *,int)"" (?C_DCOPY@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号在函数 ""void __cdecl psi::C_DROT(unsigned __int64,double *,int,double *,int,double,double)"" (?C_DROT@psi@@YAX_KPEANH1HNN@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dscal，该符号在函数 ""void __cdecl psi::C_DSCAL(unsigned __int64,double,double *,int)"" (?C_DSCAL@psi@@YAX_KNPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddot，该符号在函数 ""double __cdecl psi::C_DDOT(unsigned __int64,double *,int,double *,int)"" (?C_DDOT@psi@@YAN_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dnrm2，该符号在函数 ""double __cdecl psi::C_DNRM2(unsigned __int64,double *,int)"" (?C_DNRM2@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dasum，该符号在函数 ""double __cdecl psi::C_DASUM(unsigned __int64,double *,int)"" (?C_DASUM@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 idamax，该符号在函数 ""unsigned __int64 __cdecl psi::C_IDAMAX(unsigned __int64,double *,int)"" (?C_IDAMAX@psi@@YA_K_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgbmv，该符号在函数 ""void __cdecl psi::C_DGBMV(char,int,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGBMV@psi@@YAXDHHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm，该符号在函数 ""void __cdecl psi::C_DGEMM(char,char,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMM@psi@@YAXDDHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv，该符号在函数 ""void __cdecl psi::C_DGEMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dger，该符号在函数 ""void __cdecl psi::C_DGER(int,int,doubl",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:10521,Availability,error,error,10521,"psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号在函数 ""void __cdecl psi::C_DROT(unsigned __int64,double *,int,double *,int,double,double)"" (?C_DROT@psi@@YAX_KPEANH1HNN@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dscal，该符号在函数 ""void __cdecl psi::C_DSCAL(unsigned __int64,double,double *,int)"" (?C_DSCAL@psi@@YAX_KNPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddot，该符号在函数 ""double __cdecl psi::C_DDOT(unsigned __int64,double *,int,double *,int)"" (?C_DDOT@psi@@YAN_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dnrm2，该符号在函数 ""double __cdecl psi::C_DNRM2(unsigned __int64,double *,int)"" (?C_DNRM2@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dasum，该符号在函数 ""double __cdecl psi::C_DASUM(unsigned __int64,double *,int)"" (?C_DASUM@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 idamax，该符号在函数 ""unsigned __int64 __cdecl psi::C_IDAMAX(unsigned __int64,double *,int)"" (?C_IDAMAX@psi@@YA_K_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgbmv，该符号在函数 ""void __cdecl psi::C_DGBMV(char,int,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGBMV@psi@@YAXDHHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm，该符号在函数 ""void __cdecl psi::C_DGEMM(char,char,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMM@psi@@YAXDDHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv，该符号在函数 ""void __cdecl psi::C_DGEMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dger，该符号在函数 ""void __cdecl psi::C_DGER(int,int,double,double *,int,double *,int,double *,int)"" (?C_DGER@psi@@YAXHHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsbmv，该符号在函数 ""void __cdecl psi::",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:10702,Availability,error,error,10702,"EANH1HNN@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dscal，该符号在函数 ""void __cdecl psi::C_DSCAL(unsigned __int64,double,double *,int)"" (?C_DSCAL@psi@@YAX_KNPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddot，该符号在函数 ""double __cdecl psi::C_DDOT(unsigned __int64,double *,int,double *,int)"" (?C_DDOT@psi@@YAN_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dnrm2，该符号在函数 ""double __cdecl psi::C_DNRM2(unsigned __int64,double *,int)"" (?C_DNRM2@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dasum，该符号在函数 ""double __cdecl psi::C_DASUM(unsigned __int64,double *,int)"" (?C_DASUM@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 idamax，该符号在函数 ""unsigned __int64 __cdecl psi::C_IDAMAX(unsigned __int64,double *,int)"" (?C_IDAMAX@psi@@YA_K_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgbmv，该符号在函数 ""void __cdecl psi::C_DGBMV(char,int,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGBMV@psi@@YAXDHHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm，该符号在函数 ""void __cdecl psi::C_DGEMM(char,char,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMM@psi@@YAXDDHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv，该符号在函数 ""void __cdecl psi::C_DGEMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dger，该符号在函数 ""void __cdecl psi::C_DGER(int,int,double,double *,int,double *,int,double *,int)"" (?C_DGER@psi@@YAXHHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsbmv，该符号在函数 ""void __cdecl psi::C_DSBMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSBMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspmv，该符号在函数 ""void __cd",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:10920,Availability,error,error,10920,": error LNK2019: 无法解析的外部符号 ddot，该符号在函数 ""double __cdecl psi::C_DDOT(unsigned __int64,double *,int,double *,int)"" (?C_DDOT@psi@@YAN_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dnrm2，该符号在函数 ""double __cdecl psi::C_DNRM2(unsigned __int64,double *,int)"" (?C_DNRM2@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dasum，该符号在函数 ""double __cdecl psi::C_DASUM(unsigned __int64,double *,int)"" (?C_DASUM@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 idamax，该符号在函数 ""unsigned __int64 __cdecl psi::C_IDAMAX(unsigned __int64,double *,int)"" (?C_IDAMAX@psi@@YA_K_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgbmv，该符号在函数 ""void __cdecl psi::C_DGBMV(char,int,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGBMV@psi@@YAXDHHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm，该符号在函数 ""void __cdecl psi::C_DGEMM(char,char,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMM@psi@@YAXDDHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv，该符号在函数 ""void __cdecl psi::C_DGEMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dger，该符号在函数 ""void __cdecl psi::C_DGER(int,int,double,double *,int,double *,int,double *,int)"" (?C_DGER@psi@@YAXHHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsbmv，该符号在函数 ""void __cdecl psi::C_DSBMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSBMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspmv，该符号在函数 ""void __cdecl psi::C_DSPMV(char,int,double,double *,double *,int,double,double *,int)"" (?C_DSPMV@psi@@YAXDHNPEAN0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr，该符号在函数 ""void __cdecl psi::C_DSPR(char,i",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:11139,Availability,error,error,11139,"函数 ""double __cdecl psi::C_DNRM2(unsigned __int64,double *,int)"" (?C_DNRM2@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dasum，该符号在函数 ""double __cdecl psi::C_DASUM(unsigned __int64,double *,int)"" (?C_DASUM@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 idamax，该符号在函数 ""unsigned __int64 __cdecl psi::C_IDAMAX(unsigned __int64,double *,int)"" (?C_IDAMAX@psi@@YA_K_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgbmv，该符号在函数 ""void __cdecl psi::C_DGBMV(char,int,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGBMV@psi@@YAXDHHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm，该符号在函数 ""void __cdecl psi::C_DGEMM(char,char,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMM@psi@@YAXDDHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv，该符号在函数 ""void __cdecl psi::C_DGEMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dger，该符号在函数 ""void __cdecl psi::C_DGER(int,int,double,double *,int,double *,int,double *,int)"" (?C_DGER@psi@@YAXHHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsbmv，该符号在函数 ""void __cdecl psi::C_DSBMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSBMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspmv，该符号在函数 ""void __cdecl psi::C_DSPMV(char,int,double,double *,double *,int,double,double *,int)"" (?C_DSPMV@psi@@YAXDHNPEAN0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr，该符号在函数 ""void __cdecl psi::C_DSPR(char,int,double,double *,int,double *)"" (?C_DSPR@psi@@YAXDHNPEANH0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr2，该符号在函数 ""void __cdecl psi::C_DSPR2(char,int,double,double *,int,double *,int,dou",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:11347,Availability,error,error,11347,"signed __int64,double *,int)"" (?C_DASUM@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 idamax，该符号在函数 ""unsigned __int64 __cdecl psi::C_IDAMAX(unsigned __int64,double *,int)"" (?C_IDAMAX@psi@@YA_K_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgbmv，该符号在函数 ""void __cdecl psi::C_DGBMV(char,int,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGBMV@psi@@YAXDHHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm，该符号在函数 ""void __cdecl psi::C_DGEMM(char,char,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMM@psi@@YAXDDHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv，该符号在函数 ""void __cdecl psi::C_DGEMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dger，该符号在函数 ""void __cdecl psi::C_DGER(int,int,double,double *,int,double *,int,double *,int)"" (?C_DGER@psi@@YAXHHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsbmv，该符号在函数 ""void __cdecl psi::C_DSBMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSBMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspmv，该符号在函数 ""void __cdecl psi::C_DSPMV(char,int,double,double *,double *,int,double,double *,int)"" (?C_DSPMV@psi@@YAXDHNPEAN0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr，该符号在函数 ""void __cdecl psi::C_DSPR(char,int,double,double *,int,double *)"" (?C_DSPR@psi@@YAXDHNPEANH0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr2，该符号在函数 ""void __cdecl psi::C_DSPR2(char,int,double,double *,int,double *,int,double *)"" (?C_DSPR2@psi@@YAXDHNPEANH0H0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymm，该符号在函数 ""void __cdecl psi::C_DSYMM(char,char,int,int,double,double *,int,double *,int,doub",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:11538,Availability,error,error,11538,",int)"" (?C_IDAMAX@psi@@YA_K_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgbmv，该符号在函数 ""void __cdecl psi::C_DGBMV(char,int,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGBMV@psi@@YAXDHHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm，该符号在函数 ""void __cdecl psi::C_DGEMM(char,char,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMM@psi@@YAXDDHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv，该符号在函数 ""void __cdecl psi::C_DGEMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dger，该符号在函数 ""void __cdecl psi::C_DGER(int,int,double,double *,int,double *,int,double *,int)"" (?C_DGER@psi@@YAXHHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsbmv，该符号在函数 ""void __cdecl psi::C_DSBMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSBMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspmv，该符号在函数 ""void __cdecl psi::C_DSPMV(char,int,double,double *,double *,int,double,double *,int)"" (?C_DSPMV@psi@@YAXDHNPEAN0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr，该符号在函数 ""void __cdecl psi::C_DSPR(char,int,double,double *,int,double *)"" (?C_DSPR@psi@@YAXDHNPEANH0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr2，该符号在函数 ""void __cdecl psi::C_DSPR2(char,int,double,double *,int,double *,int,double *)"" (?C_DSPR2@psi@@YAXDHNPEANH0H0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymm，该符号在函数 ""void __cdecl psi::C_DSYMM(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMM@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymv，该符号在函数 ""void __cdecl psi::C_DSYMV(char,int,double,double *,int,double *,in",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:11746,Availability,error,error,11746,"double *,int)"" (?C_DGBMV@psi@@YAXDHHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm，该符号在函数 ""void __cdecl psi::C_DGEMM(char,char,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMM@psi@@YAXDDHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv，该符号在函数 ""void __cdecl psi::C_DGEMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dger，该符号在函数 ""void __cdecl psi::C_DGER(int,int,double,double *,int,double *,int,double *,int)"" (?C_DGER@psi@@YAXHHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsbmv，该符号在函数 ""void __cdecl psi::C_DSBMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSBMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspmv，该符号在函数 ""void __cdecl psi::C_DSPMV(char,int,double,double *,double *,int,double,double *,int)"" (?C_DSPMV@psi@@YAXDHNPEAN0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr，该符号在函数 ""void __cdecl psi::C_DSPR(char,int,double,double *,int,double *)"" (?C_DSPR@psi@@YAXDHNPEANH0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr2，该符号在函数 ""void __cdecl psi::C_DSPR2(char,int,double,double *,int,double *,int,double *)"" (?C_DSPR2@psi@@YAXDHNPEANH0H0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymm，该符号在函数 ""void __cdecl psi::C_DSYMM(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMM@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymv，该符号在函数 ""void __cdecl psi::C_DSYMV(char,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMV@psi@@YAXDHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr，该符号在函数 ""void __cdecl psi::C_DSYR(char,int,double,double *,int,double *,int)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:11944,Availability,error,error,11944,",double *,int,double *,int,double,double *,int)"" (?C_DGEMM@psi@@YAXDDHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv，该符号在函数 ""void __cdecl psi::C_DGEMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dger，该符号在函数 ""void __cdecl psi::C_DGER(int,int,double,double *,int,double *,int,double *,int)"" (?C_DGER@psi@@YAXHHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsbmv，该符号在函数 ""void __cdecl psi::C_DSBMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSBMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspmv，该符号在函数 ""void __cdecl psi::C_DSPMV(char,int,double,double *,double *,int,double,double *,int)"" (?C_DSPMV@psi@@YAXDHNPEAN0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr，该符号在函数 ""void __cdecl psi::C_DSPR(char,int,double,double *,int,double *)"" (?C_DSPR@psi@@YAXDHNPEANH0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr2，该符号在函数 ""void __cdecl psi::C_DSPR2(char,int,double,double *,int,double *,int,double *)"" (?C_DSPR2@psi@@YAXDHNPEANH0H0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymm，该符号在函数 ""void __cdecl psi::C_DSYMM(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMM@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymv，该符号在函数 ""void __cdecl psi::C_DSYMV(char,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMV@psi@@YAXDHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr，该符号在函数 ""void __cdecl psi::C_DSYR(char,int,double,double *,int,double *,int)"" (?C_DSYR@psi@@YAXDHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2，该符号在函数 ""void __cdecl psi::C_DSYR2(char,int,double,double *,int,double *,int,double",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:12116,Availability,error,error,12116,"::C_DGEMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dger，该符号在函数 ""void __cdecl psi::C_DGER(int,int,double,double *,int,double *,int,double *,int)"" (?C_DGER@psi@@YAXHHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsbmv，该符号在函数 ""void __cdecl psi::C_DSBMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSBMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspmv，该符号在函数 ""void __cdecl psi::C_DSPMV(char,int,double,double *,double *,int,double,double *,int)"" (?C_DSPMV@psi@@YAXDHNPEAN0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr，该符号在函数 ""void __cdecl psi::C_DSPR(char,int,double,double *,int,double *)"" (?C_DSPR@psi@@YAXDHNPEANH0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr2，该符号在函数 ""void __cdecl psi::C_DSPR2(char,int,double,double *,int,double *,int,double *)"" (?C_DSPR2@psi@@YAXDHNPEANH0H0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymm，该符号在函数 ""void __cdecl psi::C_DSYMM(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMM@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymv，该符号在函数 ""void __cdecl psi::C_DSYMV(char,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMV@psi@@YAXDHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr，该符号在函数 ""void __cdecl psi::C_DSYR(char,int,double,double *,int,double *,int)"" (?C_DSYR@psi@@YAXDHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2，该符号在函数 ""void __cdecl psi::C_DSYR2(char,int,double,double *,int,double *,int,double *,int)"" (?C_DSYR2@psi@@YAXDHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2k，该符号在函数 ""void __cdecl psi::C_DSYR2K(char,char,int,int,double,double ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:12306,Availability,error,error,12306,"l psi::C_DGER(int,int,double,double *,int,double *,int,double *,int)"" (?C_DGER@psi@@YAXHHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsbmv，该符号在函数 ""void __cdecl psi::C_DSBMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSBMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspmv，该符号在函数 ""void __cdecl psi::C_DSPMV(char,int,double,double *,double *,int,double,double *,int)"" (?C_DSPMV@psi@@YAXDHNPEAN0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr，该符号在函数 ""void __cdecl psi::C_DSPR(char,int,double,double *,int,double *)"" (?C_DSPR@psi@@YAXDHNPEANH0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr2，该符号在函数 ""void __cdecl psi::C_DSPR2(char,int,double,double *,int,double *,int,double *)"" (?C_DSPR2@psi@@YAXDHNPEANH0H0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymm，该符号在函数 ""void __cdecl psi::C_DSYMM(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMM@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymv，该符号在函数 ""void __cdecl psi::C_DSYMV(char,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMV@psi@@YAXDHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr，该符号在函数 ""void __cdecl psi::C_DSYR(char,int,double,double *,int,double *,int)"" (?C_DSYR@psi@@YAXDHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2，该符号在函数 ""void __cdecl psi::C_DSYR2(char,int,double,double *,int,double *,int,double *,int)"" (?C_DSYR2@psi@@YAXDHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2k，该符号在函数 ""void __cdecl psi::C_DSYR2K(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYR2K@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrk，该符号在函数 ""void __cdecl psi::C_DSYRK(char,char,int,int,d",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:12520,Availability,error,error,12520,"har,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSBMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspmv，该符号在函数 ""void __cdecl psi::C_DSPMV(char,int,double,double *,double *,int,double,double *,int)"" (?C_DSPMV@psi@@YAXDHNPEAN0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr，该符号在函数 ""void __cdecl psi::C_DSPR(char,int,double,double *,int,double *)"" (?C_DSPR@psi@@YAXDHNPEANH0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr2，该符号在函数 ""void __cdecl psi::C_DSPR2(char,int,double,double *,int,double *,int,double *)"" (?C_DSPR2@psi@@YAXDHNPEANH0H0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymm，该符号在函数 ""void __cdecl psi::C_DSYMM(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMM@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymv，该符号在函数 ""void __cdecl psi::C_DSYMV(char,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMV@psi@@YAXDHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr，该符号在函数 ""void __cdecl psi::C_DSYR(char,int,double,double *,int,double *,int)"" (?C_DSYR@psi@@YAXDHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2，该符号在函数 ""void __cdecl psi::C_DSYR2(char,int,double,double *,int,double *,int,double *,int)"" (?C_DSYR2@psi@@YAXDHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2k，该符号在函数 ""void __cdecl psi::C_DSYR2K(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYR2K@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrk，该符号在函数 ""void __cdecl psi::C_DSYRK(char,char,int,int,double,double *,int,double,double *,int)"" (?C_DSYRK@psi@@YAXDDHHNPEANHN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbmv，该符号在函数 ""void __cdecl psi::C_DTBMV(char,char,char,int,int,double",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:12723,Availability,error,error,12723,"ecl psi::C_DSPMV(char,int,double,double *,double *,int,double,double *,int)"" (?C_DSPMV@psi@@YAXDHNPEAN0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr，该符号在函数 ""void __cdecl psi::C_DSPR(char,int,double,double *,int,double *)"" (?C_DSPR@psi@@YAXDHNPEANH0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr2，该符号在函数 ""void __cdecl psi::C_DSPR2(char,int,double,double *,int,double *,int,double *)"" (?C_DSPR2@psi@@YAXDHNPEANH0H0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymm，该符号在函数 ""void __cdecl psi::C_DSYMM(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMM@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymv，该符号在函数 ""void __cdecl psi::C_DSYMV(char,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMV@psi@@YAXDHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr，该符号在函数 ""void __cdecl psi::C_DSYR(char,int,double,double *,int,double *,int)"" (?C_DSYR@psi@@YAXDHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2，该符号在函数 ""void __cdecl psi::C_DSYR2(char,int,double,double *,int,double *,int,double *,int)"" (?C_DSYR2@psi@@YAXDHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2k，该符号在函数 ""void __cdecl psi::C_DSYR2K(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYR2K@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrk，该符号在函数 ""void __cdecl psi::C_DSYRK(char,char,int,int,double,double *,int,double,double *,int)"" (?C_DSYRK@psi@@YAXDDHHNPEANHN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbmv，该符号在函数 ""void __cdecl psi::C_DTBMV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBMV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbsv，该符号在函数 ""void __cdecl psi::C_DTBSV(char,char,char,int,int,double ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:12900,Availability,error,error,12900," ""void __cdecl psi::C_DSPR(char,int,double,double *,int,double *)"" (?C_DSPR@psi@@YAXDHNPEANH0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr2，该符号在函数 ""void __cdecl psi::C_DSPR2(char,int,double,double *,int,double *,int,double *)"" (?C_DSPR2@psi@@YAXDHNPEANH0H0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymm，该符号在函数 ""void __cdecl psi::C_DSYMM(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMM@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymv，该符号在函数 ""void __cdecl psi::C_DSYMV(char,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMV@psi@@YAXDHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr，该符号在函数 ""void __cdecl psi::C_DSYR(char,int,double,double *,int,double *,int)"" (?C_DSYR@psi@@YAXDHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2，该符号在函数 ""void __cdecl psi::C_DSYR2(char,int,double,double *,int,double *,int,double *,int)"" (?C_DSYR2@psi@@YAXDHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2k，该符号在函数 ""void __cdecl psi::C_DSYR2K(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYR2K@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrk，该符号在函数 ""void __cdecl psi::C_DSYRK(char,char,int,int,double,double *,int,double,double *,int)"" (?C_DSYRK@psi@@YAXDDHHNPEANHN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbmv，该符号在函数 ""void __cdecl psi::C_DTBMV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBMV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbsv，该符号在函数 ""void __cdecl psi::C_DTBSV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBSV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpmv，该符号在函数 ""void __cdecl psi::C_DTPMV(char,char,char,int,double *",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:13095,Availability,error,error,13095,"int,double,double *,int,double *,int,double *)"" (?C_DSPR2@psi@@YAXDHNPEANH0H0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymm，该符号在函数 ""void __cdecl psi::C_DSYMM(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMM@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymv，该符号在函数 ""void __cdecl psi::C_DSYMV(char,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMV@psi@@YAXDHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr，该符号在函数 ""void __cdecl psi::C_DSYR(char,int,double,double *,int,double *,int)"" (?C_DSYR@psi@@YAXDHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2，该符号在函数 ""void __cdecl psi::C_DSYR2(char,int,double,double *,int,double *,int,double *,int)"" (?C_DSYR2@psi@@YAXDHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2k，该符号在函数 ""void __cdecl psi::C_DSYR2K(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYR2K@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrk，该符号在函数 ""void __cdecl psi::C_DSYRK(char,char,int,int,double,double *,int,double,double *,int)"" (?C_DSYRK@psi@@YAXDDHHNPEANHN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbmv，该符号在函数 ""void __cdecl psi::C_DTBMV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBMV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbsv，该符号在函数 ""void __cdecl psi::C_DTBSV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBSV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpmv，该符号在函数 ""void __cdecl psi::C_DTPMV(char,char,char,int,double *,double *,int)"" (?C_DTPMV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpsv，该符号在函数 ""void __cdecl psi::C_DTPSV(char,char,char,int,double *,double *,int)"" (?C_DTPSV@p",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:13312,Availability,error,error,13312,"e,double *,int,double *,int,double,double *,int)"" (?C_DSYMM@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymv，该符号在函数 ""void __cdecl psi::C_DSYMV(char,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMV@psi@@YAXDHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr，该符号在函数 ""void __cdecl psi::C_DSYR(char,int,double,double *,int,double *,int)"" (?C_DSYR@psi@@YAXDHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2，该符号在函数 ""void __cdecl psi::C_DSYR2(char,int,double,double *,int,double *,int,double *,int)"" (?C_DSYR2@psi@@YAXDHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2k，该符号在函数 ""void __cdecl psi::C_DSYR2K(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYR2K@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrk，该符号在函数 ""void __cdecl psi::C_DSYRK(char,char,int,int,double,double *,int,double,double *,int)"" (?C_DSYRK@psi@@YAXDDHHNPEANHN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbmv，该符号在函数 ""void __cdecl psi::C_DTBMV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBMV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbsv，该符号在函数 ""void __cdecl psi::C_DTBSV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBSV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpmv，该符号在函数 ""void __cdecl psi::C_DTPMV(char,char,char,int,double *,double *,int)"" (?C_DTPMV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpsv，该符号在函数 ""void __cdecl psi::C_DTPSV(char,char,char,int,double *,double *,int)"" (?C_DTPSV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmm，该符号在函数 ""void __cdecl psi::C_DTRMM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRMM@psi@@YAXDD",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:13511,Availability,error,error,13511,"r,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMV@psi@@YAXDHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr，该符号在函数 ""void __cdecl psi::C_DSYR(char,int,double,double *,int,double *,int)"" (?C_DSYR@psi@@YAXDHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2，该符号在函数 ""void __cdecl psi::C_DSYR2(char,int,double,double *,int,double *,int,double *,int)"" (?C_DSYR2@psi@@YAXDHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2k，该符号在函数 ""void __cdecl psi::C_DSYR2K(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYR2K@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrk，该符号在函数 ""void __cdecl psi::C_DSYRK(char,char,int,int,double,double *,int,double,double *,int)"" (?C_DSYRK@psi@@YAXDDHHNPEANHN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbmv，该符号在函数 ""void __cdecl psi::C_DTBMV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBMV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbsv，该符号在函数 ""void __cdecl psi::C_DTBSV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBSV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpmv，该符号在函数 ""void __cdecl psi::C_DTPMV(char,char,char,int,double *,double *,int)"" (?C_DTPMV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpsv，该符号在函数 ""void __cdecl psi::C_DTPSV(char,char,char,int,double *,double *,int)"" (?C_DTPSV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmm，该符号在函数 ""void __cdecl psi::C_DTRMM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRMM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmv，该符号在函数 ""void __cdecl psi::C_DTRMV(char,char,char,int,double *,int,double *,int)"" (?C_DTRMV@psi@@YAXDDDHPEANH",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:13700,Availability,error,error,13700,"::C_DSYR(char,int,double,double *,int,double *,int)"" (?C_DSYR@psi@@YAXDHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2，该符号在函数 ""void __cdecl psi::C_DSYR2(char,int,double,double *,int,double *,int,double *,int)"" (?C_DSYR2@psi@@YAXDHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2k，该符号在函数 ""void __cdecl psi::C_DSYR2K(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYR2K@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrk，该符号在函数 ""void __cdecl psi::C_DSYRK(char,char,int,int,double,double *,int,double,double *,int)"" (?C_DSYRK@psi@@YAXDDHHNPEANHN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbmv，该符号在函数 ""void __cdecl psi::C_DTBMV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBMV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbsv，该符号在函数 ""void __cdecl psi::C_DTBSV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBSV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpmv，该符号在函数 ""void __cdecl psi::C_DTPMV(char,char,char,int,double *,double *,int)"" (?C_DTPMV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpsv，该符号在函数 ""void __cdecl psi::C_DTPSV(char,char,char,int,double *,double *,int)"" (?C_DTPSV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmm，该符号在函数 ""void __cdecl psi::C_DTRMM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRMM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmv，该符号在函数 ""void __cdecl psi::C_DTRMV(char,char,char,int,double *,int,double *,int)"" (?C_DTRMV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsm，该符号在函数 ""void __cdecl psi::C_DTRSM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRSM@psi@@Y",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:13889,Availability,error,error,13889,"YR2(char,int,double,double *,int,double *,int,double *,int)"" (?C_DSYR2@psi@@YAXDHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2k，该符号在函数 ""void __cdecl psi::C_DSYR2K(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYR2K@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrk，该符号在函数 ""void __cdecl psi::C_DSYRK(char,char,int,int,double,double *,int,double,double *,int)"" (?C_DSYRK@psi@@YAXDDHHNPEANHN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbmv，该符号在函数 ""void __cdecl psi::C_DTBMV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBMV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbsv，该符号在函数 ""void __cdecl psi::C_DTBSV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBSV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpmv，该符号在函数 ""void __cdecl psi::C_DTPMV(char,char,char,int,double *,double *,int)"" (?C_DTPMV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpsv，该符号在函数 ""void __cdecl psi::C_DTPSV(char,char,char,int,double *,double *,int)"" (?C_DTPSV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmm，该符号在函数 ""void __cdecl psi::C_DTRMM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRMM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmv，该符号在函数 ""void __cdecl psi::C_DTRMV(char,char,char,int,double *,int,double *,int)"" (?C_DTRMV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsm，该符号在函数 ""void __cdecl psi::C_DTRSM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRSM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsv，该符号在函数 ""void __cdecl psi::C_DTRSV(char,char,char,int,double *,int,double *,int)"" (?C_DTRSV@psi",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:14068,Availability,error,error,14068,"__cdecl psi::C_DSYR2K(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYR2K@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrk，该符号在函数 ""void __cdecl psi::C_DSYRK(char,char,int,int,double,double *,int,double,double *,int)"" (?C_DSYRK@psi@@YAXDDHHNPEANHN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbmv，该符号在函数 ""void __cdecl psi::C_DTBMV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBMV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbsv，该符号在函数 ""void __cdecl psi::C_DTBSV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBSV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpmv，该符号在函数 ""void __cdecl psi::C_DTPMV(char,char,char,int,double *,double *,int)"" (?C_DTPMV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpsv，该符号在函数 ""void __cdecl psi::C_DTPSV(char,char,char,int,double *,double *,int)"" (?C_DTPSV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmm，该符号在函数 ""void __cdecl psi::C_DTRMM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRMM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmv，该符号在函数 ""void __cdecl psi::C_DTRMV(char,char,char,int,double *,int,double *,int)"" (?C_DTRMV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsm，该符号在函数 ""void __cdecl psi::C_DTRSM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRSM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsv，该符号在函数 ""void __cdecl psi::C_DTRSV(char,char,char,int,double *,int,double *,int)"" (?C_DTRSV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsdc，该符号在函数 ""int __cdecl psi::C_DBDSDC(char,char,int,double *,double *,double *,int,double *,",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:14247,Availability,error,error,14247,"的外部符号 dsyrk，该符号在函数 ""void __cdecl psi::C_DSYRK(char,char,int,int,double,double *,int,double,double *,int)"" (?C_DSYRK@psi@@YAXDDHHNPEANHN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbmv，该符号在函数 ""void __cdecl psi::C_DTBMV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBMV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbsv，该符号在函数 ""void __cdecl psi::C_DTBSV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBSV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpmv，该符号在函数 ""void __cdecl psi::C_DTPMV(char,char,char,int,double *,double *,int)"" (?C_DTPMV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpsv，该符号在函数 ""void __cdecl psi::C_DTPSV(char,char,char,int,double *,double *,int)"" (?C_DTPSV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmm，该符号在函数 ""void __cdecl psi::C_DTRMM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRMM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmv，该符号在函数 ""void __cdecl psi::C_DTRMV(char,char,char,int,double *,int,double *,int)"" (?C_DTRMV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsm，该符号在函数 ""void __cdecl psi::C_DTRSM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRSM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsv，该符号在函数 ""void __cdecl psi::C_DTRSV(char,char,char,int,double *,int,double *,int)"" (?C_DTRSV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsdc，该符号在函数 ""int __cdecl psi::C_DBDSDC(char,char,int,double *,double *,double *,int,double *,int,double *,int *,double *,int *)"" (?C_DBDSDC@psi@@YAHDDHPEAN00H0H0PEAH01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsqr，该符号在函数 ""int __cdecl psi::C_DBDSQR(char,int",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:14450,Availability,error,error,14450," 无法解析的外部符号 dtbmv，该符号在函数 ""void __cdecl psi::C_DTBMV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBMV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbsv，该符号在函数 ""void __cdecl psi::C_DTBSV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBSV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpmv，该符号在函数 ""void __cdecl psi::C_DTPMV(char,char,char,int,double *,double *,int)"" (?C_DTPMV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpsv，该符号在函数 ""void __cdecl psi::C_DTPSV(char,char,char,int,double *,double *,int)"" (?C_DTPSV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmm，该符号在函数 ""void __cdecl psi::C_DTRMM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRMM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmv，该符号在函数 ""void __cdecl psi::C_DTRMV(char,char,char,int,double *,int,double *,int)"" (?C_DTRMV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsm，该符号在函数 ""void __cdecl psi::C_DTRSM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRSM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsv，该符号在函数 ""void __cdecl psi::C_DTRSV(char,char,char,int,double *,int,double *,int)"" (?C_DTRSV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsdc，该符号在函数 ""int __cdecl psi::C_DBDSDC(char,char,int,double *,double *,double *,int,double *,int,double *,int *,double *,int *)"" (?C_DBDSDC@psi@@YAHDDHPEAN00H0H0PEAH01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsqr，该符号在函数 ""int __cdecl psi::C_DBDSQR(char,int,int,int,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DBDSQR@psi@@YAHDHHHHPEAN00H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddisna，该",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:14634,Availability,error,error,14634,"析的外部符号 dtbsv，该符号在函数 ""void __cdecl psi::C_DTBSV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBSV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpmv，该符号在函数 ""void __cdecl psi::C_DTPMV(char,char,char,int,double *,double *,int)"" (?C_DTPMV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpsv，该符号在函数 ""void __cdecl psi::C_DTPSV(char,char,char,int,double *,double *,int)"" (?C_DTPSV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmm，该符号在函数 ""void __cdecl psi::C_DTRMM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRMM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmv，该符号在函数 ""void __cdecl psi::C_DTRMV(char,char,char,int,double *,int,double *,int)"" (?C_DTRMV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsm，该符号在函数 ""void __cdecl psi::C_DTRSM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRSM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsv，该符号在函数 ""void __cdecl psi::C_DTRSV(char,char,char,int,double *,int,double *,int)"" (?C_DTRSV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsdc，该符号在函数 ""int __cdecl psi::C_DBDSDC(char,char,int,double *,double *,double *,int,double *,int,double *,int *,double *,int *)"" (?C_DBDSDC@psi@@YAHDDHPEAN00H0H0PEAH01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsqr，该符号在函数 ""int __cdecl psi::C_DBDSQR(char,int,int,int,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DBDSQR@psi@@YAHDHHHHPEAN00H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddisna，该符号在函数 ""int __cdecl psi::C_DDISNA(char,int,int,double *,double *)"" (?C_DDISNA@psi@@YAHDHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbbrd，该符号在函数 ""int __cdecl psi::C",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:14837,Availability,error,error,14837,"号 dtpmv，该符号在函数 ""void __cdecl psi::C_DTPMV(char,char,char,int,double *,double *,int)"" (?C_DTPMV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpsv，该符号在函数 ""void __cdecl psi::C_DTPSV(char,char,char,int,double *,double *,int)"" (?C_DTPSV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmm，该符号在函数 ""void __cdecl psi::C_DTRMM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRMM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmv，该符号在函数 ""void __cdecl psi::C_DTRMV(char,char,char,int,double *,int,double *,int)"" (?C_DTRMV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsm，该符号在函数 ""void __cdecl psi::C_DTRSM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRSM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsv，该符号在函数 ""void __cdecl psi::C_DTRSV(char,char,char,int,double *,int,double *,int)"" (?C_DTRSV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsdc，该符号在函数 ""int __cdecl psi::C_DBDSDC(char,char,int,double *,double *,double *,int,double *,int,double *,int *,double *,int *)"" (?C_DBDSDC@psi@@YAHDDHPEAN00H0H0PEAH01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsqr，该符号在函数 ""int __cdecl psi::C_DBDSQR(char,int,int,int,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DBDSQR@psi@@YAHDHHHHPEAN00H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddisna，该符号在函数 ""int __cdecl psi::C_DDISNA(char,int,int,double *,double *)"" (?C_DDISNA@psi@@YAHDHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbbrd，该符号在函数 ""int __cdecl psi::C_DGBBRD(char,int,int,int,int,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DGBBRD@psi@@YAHDHHHHHPEANH000H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:15021,Availability,error,error,15021,"i::C_DTPSV(char,char,char,int,double *,double *,int)"" (?C_DTPSV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmm，该符号在函数 ""void __cdecl psi::C_DTRMM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRMM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmv，该符号在函数 ""void __cdecl psi::C_DTRMV(char,char,char,int,double *,int,double *,int)"" (?C_DTRMV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsm，该符号在函数 ""void __cdecl psi::C_DTRSM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRSM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsv，该符号在函数 ""void __cdecl psi::C_DTRSV(char,char,char,int,double *,int,double *,int)"" (?C_DTRSV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsdc，该符号在函数 ""int __cdecl psi::C_DBDSDC(char,char,int,double *,double *,double *,int,double *,int,double *,int *,double *,int *)"" (?C_DBDSDC@psi@@YAHDDHPEAN00H0H0PEAH01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsqr，该符号在函数 ""int __cdecl psi::C_DBDSQR(char,int,int,int,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DBDSQR@psi@@YAHDHHHHPEAN00H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddisna，该符号在函数 ""int __cdecl psi::C_DDISNA(char,int,int,double *,double *)"" (?C_DDISNA@psi@@YAHDHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbbrd，该符号在函数 ""int __cdecl psi::C_DGBBRD(char,int,int,int,int,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DGBBRD@psi@@YAHDHHHHHPEANH000H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbcon，该符号在函数 ""int __cdecl psi::C_DGBCON(char,int,int,int,double *,int,int *,double,double *,double *,int *)"" (?C_DGBCON@psi@@YAHDHHHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.o",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:15258,Availability,error,error,15258,"t,double *,int)"" (?C_DTRMM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmv，该符号在函数 ""void __cdecl psi::C_DTRMV(char,char,char,int,double *,int,double *,int)"" (?C_DTRMV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsm，该符号在函数 ""void __cdecl psi::C_DTRSM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRSM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsv，该符号在函数 ""void __cdecl psi::C_DTRSV(char,char,char,int,double *,int,double *,int)"" (?C_DTRSV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsdc，该符号在函数 ""int __cdecl psi::C_DBDSDC(char,char,int,double *,double *,double *,int,double *,int,double *,int *,double *,int *)"" (?C_DBDSDC@psi@@YAHDDHPEAN00H0H0PEAH01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsqr，该符号在函数 ""int __cdecl psi::C_DBDSQR(char,int,int,int,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DBDSQR@psi@@YAHDHHHHPEAN00H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddisna，该符号在函数 ""int __cdecl psi::C_DDISNA(char,int,int,double *,double *)"" (?C_DDISNA@psi@@YAHDHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbbrd，该符号在函数 ""int __cdecl psi::C_DGBBRD(char,int,int,int,int,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DGBBRD@psi@@YAHDHHHHHPEANH000H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbcon，该符号在函数 ""int __cdecl psi::C_DGBCON(char,int,int,int,double *,int,int *,double,double *,double *,int *)"" (?C_DGBCON@psi@@YAHDHHHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbequ，该符号在函数 ""int __cdecl psi::C_DGBEQU(int,int,int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGBEQU@psi@@YAHHHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK20",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:15492,Availability,error,error,15492,")"" (?C_DTRMV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsm，该符号在函数 ""void __cdecl psi::C_DTRSM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRSM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsv，该符号在函数 ""void __cdecl psi::C_DTRSV(char,char,char,int,double *,int,double *,int)"" (?C_DTRSV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsdc，该符号在函数 ""int __cdecl psi::C_DBDSDC(char,char,int,double *,double *,double *,int,double *,int,double *,int *,double *,int *)"" (?C_DBDSDC@psi@@YAHDDHPEAN00H0H0PEAH01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsqr，该符号在函数 ""int __cdecl psi::C_DBDSQR(char,int,int,int,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DBDSQR@psi@@YAHDHHHHPEAN00H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddisna，该符号在函数 ""int __cdecl psi::C_DDISNA(char,int,int,double *,double *)"" (?C_DDISNA@psi@@YAHDHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbbrd，该符号在函数 ""int __cdecl psi::C_DGBBRD(char,int,int,int,int,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DGBBRD@psi@@YAHDHHHHHPEANH000H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbcon，该符号在函数 ""int __cdecl psi::C_DGBCON(char,int,int,int,double *,int,int *,double,double *,double *,int *)"" (?C_DGBCON@psi@@YAHDHHHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbequ，该符号在函数 ""int __cdecl psi::C_DGBEQU(int,int,int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGBEQU@psi@@YAHHHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbrfs，该符号在函数 ""int __cdecl psi::C_DGBRFS(char,int,int,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGBRFS@psi@@YAHDHHHHPEANH0HPE",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:15661,Availability,error,error,15661,"@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsv，该符号在函数 ""void __cdecl psi::C_DTRSV(char,char,char,int,double *,int,double *,int)"" (?C_DTRSV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsdc，该符号在函数 ""int __cdecl psi::C_DBDSDC(char,char,int,double *,double *,double *,int,double *,int,double *,int *,double *,int *)"" (?C_DBDSDC@psi@@YAHDDHPEAN00H0H0PEAH01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsqr，该符号在函数 ""int __cdecl psi::C_DBDSQR(char,int,int,int,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DBDSQR@psi@@YAHDHHHHPEAN00H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddisna，该符号在函数 ""int __cdecl psi::C_DDISNA(char,int,int,double *,double *)"" (?C_DDISNA@psi@@YAHDHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbbrd，该符号在函数 ""int __cdecl psi::C_DGBBRD(char,int,int,int,int,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DGBBRD@psi@@YAHDHHHHHPEANH000H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbcon，该符号在函数 ""int __cdecl psi::C_DGBCON(char,int,int,int,double *,int,int *,double,double *,double *,int *)"" (?C_DGBCON@psi@@YAHDHHHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbequ，该符号在函数 ""int __cdecl psi::C_DGBEQU(int,int,int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGBEQU@psi@@YAHHHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbrfs，该符号在函数 ""int __cdecl psi::C_DGBRFS(char,int,int,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGBRFS@psi@@YAHDHHHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsv，该符号在函数 ""int __cdecl psi::C_DGBSV(int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBSV@psi@@YAHHHHHPEANHPEAH0H@Z) 中被引用; F",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:15915,Availability,error,error,15915,"intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsdc，该符号在函数 ""int __cdecl psi::C_DBDSDC(char,char,int,double *,double *,double *,int,double *,int,double *,int *,double *,int *)"" (?C_DBDSDC@psi@@YAHDDHPEAN00H0H0PEAH01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsqr，该符号在函数 ""int __cdecl psi::C_DBDSQR(char,int,int,int,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DBDSQR@psi@@YAHDHHHHPEAN00H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddisna，该符号在函数 ""int __cdecl psi::C_DDISNA(char,int,int,double *,double *)"" (?C_DDISNA@psi@@YAHDHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbbrd，该符号在函数 ""int __cdecl psi::C_DGBBRD(char,int,int,int,int,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DGBBRD@psi@@YAHDHHHHHPEANH000H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbcon，该符号在函数 ""int __cdecl psi::C_DGBCON(char,int,int,int,double *,int,int *,double,double *,double *,int *)"" (?C_DGBCON@psi@@YAHDHHHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbequ，该符号在函数 ""int __cdecl psi::C_DGBEQU(int,int,int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGBEQU@psi@@YAHHHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbrfs，该符号在函数 ""int __cdecl psi::C_DGBRFS(char,int,int,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGBRFS@psi@@YAHDHHHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsv，该符号在函数 ""int __cdecl psi::C_DGBSV(int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBSV@psi@@YAHHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsvx，该符号在函数 ""int __cdecl psi::C_DGBSVX(char,char,int,int,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,do",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:16129,Availability,error,error,16129,"引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsqr，该符号在函数 ""int __cdecl psi::C_DBDSQR(char,int,int,int,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DBDSQR@psi@@YAHDHHHHPEAN00H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddisna，该符号在函数 ""int __cdecl psi::C_DDISNA(char,int,int,double *,double *)"" (?C_DDISNA@psi@@YAHDHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbbrd，该符号在函数 ""int __cdecl psi::C_DGBBRD(char,int,int,int,int,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DGBBRD@psi@@YAHDHHHHHPEANH000H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbcon，该符号在函数 ""int __cdecl psi::C_DGBCON(char,int,int,int,double *,int,int *,double,double *,double *,int *)"" (?C_DGBCON@psi@@YAHDHHHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbequ，该符号在函数 ""int __cdecl psi::C_DGBEQU(int,int,int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGBEQU@psi@@YAHHHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbrfs，该符号在函数 ""int __cdecl psi::C_DGBRFS(char,int,int,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGBRFS@psi@@YAHDHHHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsv，该符号在函数 ""int __cdecl psi::C_DGBSV(int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBSV@psi@@YAHHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsvx，该符号在函数 ""int __cdecl psi::C_DGBSVX(char,char,int,int,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGBSVX@psi@@YAHDDHHHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrf，该符号在函数 ""int __cdecl psi::C_DGBTRF(int,int,int,int,double *,int,int *)"" (?C_DGB",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:16347,Availability,error,error,16347,"t.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddisna，该符号在函数 ""int __cdecl psi::C_DDISNA(char,int,int,double *,double *)"" (?C_DDISNA@psi@@YAHDHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbbrd，该符号在函数 ""int __cdecl psi::C_DGBBRD(char,int,int,int,int,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DGBBRD@psi@@YAHDHHHHHPEANH000H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbcon，该符号在函数 ""int __cdecl psi::C_DGBCON(char,int,int,int,double *,int,int *,double,double *,double *,int *)"" (?C_DGBCON@psi@@YAHDHHHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbequ，该符号在函数 ""int __cdecl psi::C_DGBEQU(int,int,int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGBEQU@psi@@YAHHHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbrfs，该符号在函数 ""int __cdecl psi::C_DGBRFS(char,int,int,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGBRFS@psi@@YAHDHHHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsv，该符号在函数 ""int __cdecl psi::C_DGBSV(int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBSV@psi@@YAHHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsvx，该符号在函数 ""int __cdecl psi::C_DGBSVX(char,char,int,int,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGBSVX@psi@@YAHDDHHHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrf，该符号在函数 ""int __cdecl psi::C_DGBTRF(int,int,int,int,double *,int,int *)"" (?C_DGBTRF@psi@@YAHHHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrs，该符号在函数 ""int __cdecl psi::C_DGBTRS(char,int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBTRS@psi@@YAHDHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.li",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:16613,Availability,error,error,16613,"d，该符号在函数 ""int __cdecl psi::C_DGBBRD(char,int,int,int,int,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DGBBRD@psi@@YAHDHHHHHPEANH000H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbcon，该符号在函数 ""int __cdecl psi::C_DGBCON(char,int,int,int,double *,int,int *,double,double *,double *,int *)"" (?C_DGBCON@psi@@YAHDHHHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbequ，该符号在函数 ""int __cdecl psi::C_DGBEQU(int,int,int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGBEQU@psi@@YAHHHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbrfs，该符号在函数 ""int __cdecl psi::C_DGBRFS(char,int,int,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGBRFS@psi@@YAHDHHHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsv，该符号在函数 ""int __cdecl psi::C_DGBSV(int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBSV@psi@@YAHHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsvx，该符号在函数 ""int __cdecl psi::C_DGBSVX(char,char,int,int,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGBSVX@psi@@YAHDDHHHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrf，该符号在函数 ""int __cdecl psi::C_DGBTRF(int,int,int,int,double *,int,int *)"" (?C_DGBTRF@psi@@YAHHHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrs，该符号在函数 ""int __cdecl psi::C_DGBTRS(char,int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBTRS@psi@@YAHDHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebak，该符号在函数 ""int __cdecl psi::C_DGEBAK(char,char,int,int,int,double *,int,double *,int)"" (?C_DGEBAK@psi@@YAHDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:16803,Availability,error,error,16803,"dgbcon，该符号在函数 ""int __cdecl psi::C_DGBCON(char,int,int,int,double *,int,int *,double,double *,double *,int *)"" (?C_DGBCON@psi@@YAHDHHHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbequ，该符号在函数 ""int __cdecl psi::C_DGBEQU(int,int,int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGBEQU@psi@@YAHHHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbrfs，该符号在函数 ""int __cdecl psi::C_DGBRFS(char,int,int,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGBRFS@psi@@YAHDHHHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsv，该符号在函数 ""int __cdecl psi::C_DGBSV(int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBSV@psi@@YAHHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsvx，该符号在函数 ""int __cdecl psi::C_DGBSVX(char,char,int,int,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGBSVX@psi@@YAHDDHHHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrf，该符号在函数 ""int __cdecl psi::C_DGBTRF(int,int,int,int,double *,int,int *)"" (?C_DGBTRF@psi@@YAHHHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrs，该符号在函数 ""int __cdecl psi::C_DGBTRS(char,int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBTRS@psi@@YAHDHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebak，该符号在函数 ""int __cdecl psi::C_DGEBAK(char,char,int,int,int,double *,int,double *,int)"" (?C_DGEBAK@psi@@YAHDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebal，该符号在函数 ""int __cdecl psi::C_DGEBAL(char,int,double *,int,int *,int *,double *)"" (?C_DGEBAL@psi@@YAHDHPEANHPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebrd，该符号在函数 ""int __cdecl psi::C_DGEBRD(int,int,do",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:17111,Availability,error,error,17111,"i::C_DGBEQU(int,int,int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGBEQU@psi@@YAHHHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbrfs，该符号在函数 ""int __cdecl psi::C_DGBRFS(char,int,int,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGBRFS@psi@@YAHDHHHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsv，该符号在函数 ""int __cdecl psi::C_DGBSV(int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBSV@psi@@YAHHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsvx，该符号在函数 ""int __cdecl psi::C_DGBSVX(char,char,int,int,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGBSVX@psi@@YAHDDHHHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrf，该符号在函数 ""int __cdecl psi::C_DGBTRF(int,int,int,int,double *,int,int *)"" (?C_DGBTRF@psi@@YAHHHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrs，该符号在函数 ""int __cdecl psi::C_DGBTRS(char,int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBTRS@psi@@YAHDHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebak，该符号在函数 ""int __cdecl psi::C_DGEBAK(char,char,int,int,int,double *,int,double *,int)"" (?C_DGEBAK@psi@@YAHDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebal，该符号在函数 ""int __cdecl psi::C_DGEBAL(char,int,double *,int,int *,int *,double *)"" (?C_DGEBAL@psi@@YAHDHPEANHPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebrd，该符号在函数 ""int __cdecl psi::C_DGEBRD(int,int,double *,int,double *,double *,double *,double *,double *,int)"" (?C_DGEBRD@psi@@YAHHHPEANH00000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgecon，该符号在函数 ""int __cdecl psi::C_DGECON(char,int,double *,int,double,double *,do",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:17289,Availability,error,error,17289," dgbrfs，该符号在函数 ""int __cdecl psi::C_DGBRFS(char,int,int,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGBRFS@psi@@YAHDHHHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsv，该符号在函数 ""int __cdecl psi::C_DGBSV(int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBSV@psi@@YAHHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsvx，该符号在函数 ""int __cdecl psi::C_DGBSVX(char,char,int,int,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGBSVX@psi@@YAHDDHHHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrf，该符号在函数 ""int __cdecl psi::C_DGBTRF(int,int,int,int,double *,int,int *)"" (?C_DGBTRF@psi@@YAHHHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrs，该符号在函数 ""int __cdecl psi::C_DGBTRS(char,int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBTRS@psi@@YAHDHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebak，该符号在函数 ""int __cdecl psi::C_DGEBAK(char,char,int,int,int,double *,int,double *,int)"" (?C_DGEBAK@psi@@YAHDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebal，该符号在函数 ""int __cdecl psi::C_DGEBAL(char,int,double *,int,int *,int *,double *)"" (?C_DGEBAL@psi@@YAHDHPEANHPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebrd，该符号在函数 ""int __cdecl psi::C_DGEBRD(int,int,double *,int,double *,double *,double *,double *,double *,int)"" (?C_DGEBRD@psi@@YAHHHPEANH00000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgecon，该符号在函数 ""int __cdecl psi::C_DGECON(char,int,double *,int,double,double *,double *,int *)"" (?C_DGECON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeequ，该符号在函数 ""int __cdecl psi::C_DGEEQU(int,int,double *,int,double *,do",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:17488,Availability,error,error,17488,"0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsv，该符号在函数 ""int __cdecl psi::C_DGBSV(int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBSV@psi@@YAHHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsvx，该符号在函数 ""int __cdecl psi::C_DGBSVX(char,char,int,int,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGBSVX@psi@@YAHDDHHHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrf，该符号在函数 ""int __cdecl psi::C_DGBTRF(int,int,int,int,double *,int,int *)"" (?C_DGBTRF@psi@@YAHHHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrs，该符号在函数 ""int __cdecl psi::C_DGBTRS(char,int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBTRS@psi@@YAHDHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebak，该符号在函数 ""int __cdecl psi::C_DGEBAK(char,char,int,int,int,double *,int,double *,int)"" (?C_DGEBAK@psi@@YAHDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebal，该符号在函数 ""int __cdecl psi::C_DGEBAL(char,int,double *,int,int *,int *,double *)"" (?C_DGEBAL@psi@@YAHDHPEANHPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebrd，该符号在函数 ""int __cdecl psi::C_DGEBRD(int,int,double *,int,double *,double *,double *,double *,double *,int)"" (?C_DGEBRD@psi@@YAHHHPEANH00000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgecon，该符号在函数 ""int __cdecl psi::C_DGECON(char,int,double *,int,double,double *,double *,int *)"" (?C_DGECON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeequ，该符号在函数 ""int __cdecl psi::C_DGEEQU(int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGEEQU@psi@@YAHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgees，该符号在函数 ""int __cdecl psi::C_DGEES(char,char,int,double",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:17678,Availability,error,error,17678,"PEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsvx，该符号在函数 ""int __cdecl psi::C_DGBSVX(char,char,int,int,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGBSVX@psi@@YAHDDHHHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrf，该符号在函数 ""int __cdecl psi::C_DGBTRF(int,int,int,int,double *,int,int *)"" (?C_DGBTRF@psi@@YAHHHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrs，该符号在函数 ""int __cdecl psi::C_DGBTRS(char,int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBTRS@psi@@YAHDHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebak，该符号在函数 ""int __cdecl psi::C_DGEBAK(char,char,int,int,int,double *,int,double *,int)"" (?C_DGEBAK@psi@@YAHDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebal，该符号在函数 ""int __cdecl psi::C_DGEBAL(char,int,double *,int,int *,int *,double *)"" (?C_DGEBAL@psi@@YAHDHPEANHPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebrd，该符号在函数 ""int __cdecl psi::C_DGEBRD(int,int,double *,int,double *,double *,double *,double *,double *,int)"" (?C_DGEBRD@psi@@YAHHHPEANH00000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgecon，该符号在函数 ""int __cdecl psi::C_DGECON(char,int,double *,int,double,double *,double *,int *)"" (?C_DGECON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeequ，该符号在函数 ""int __cdecl psi::C_DGEEQU(int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGEEQU@psi@@YAHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgees，该符号在函数 ""int __cdecl psi::C_DGEES(char,char,int,double *,int,int *,double *,double *,double *,int,double *,int)"" (?C_DGEES@psi@@YAHDDHPEANHPEAH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeesx，该符号在函数 ""int __cdec",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:17864,Availability,error,error,17864,"ble *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGBSVX@psi@@YAHDDHHHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrf，该符号在函数 ""int __cdecl psi::C_DGBTRF(int,int,int,int,double *,int,int *)"" (?C_DGBTRF@psi@@YAHHHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrs，该符号在函数 ""int __cdecl psi::C_DGBTRS(char,int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBTRS@psi@@YAHDHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebak，该符号在函数 ""int __cdecl psi::C_DGEBAK(char,char,int,int,int,double *,int,double *,int)"" (?C_DGEBAK@psi@@YAHDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebal，该符号在函数 ""int __cdecl psi::C_DGEBAL(char,int,double *,int,int *,int *,double *)"" (?C_DGEBAL@psi@@YAHDHPEANHPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebrd，该符号在函数 ""int __cdecl psi::C_DGEBRD(int,int,double *,int,double *,double *,double *,double *,double *,int)"" (?C_DGEBRD@psi@@YAHHHPEANH00000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgecon，该符号在函数 ""int __cdecl psi::C_DGECON(char,int,double *,int,double,double *,double *,int *)"" (?C_DGECON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeequ，该符号在函数 ""int __cdecl psi::C_DGEEQU(int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGEEQU@psi@@YAHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgees，该符号在函数 ""int __cdecl psi::C_DGEES(char,char,int,double *,int,int *,double *,double *,double *,int,double *,int)"" (?C_DGEES@psi@@YAHDDHPEANHPEAH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeesx，该符号在函数 ""int __cdecl psi::C_DGEESX(char,char,char,int,double *,int,int *,double *,double *,double *,int,double *,double *,double *,int,int *,int)"" (?C_DGEESX@psi@@YAHDDDHPEANHPEAH000H000H1H@Z) 中被引用; F:\qt.lib(lapack_int",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:18077,Availability,error,error,18077,"decl psi::C_DGBTRF(int,int,int,int,double *,int,int *)"" (?C_DGBTRF@psi@@YAHHHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrs，该符号在函数 ""int __cdecl psi::C_DGBTRS(char,int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBTRS@psi@@YAHDHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebak，该符号在函数 ""int __cdecl psi::C_DGEBAK(char,char,int,int,int,double *,int,double *,int)"" (?C_DGEBAK@psi@@YAHDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebal，该符号在函数 ""int __cdecl psi::C_DGEBAL(char,int,double *,int,int *,int *,double *)"" (?C_DGEBAL@psi@@YAHDHPEANHPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebrd，该符号在函数 ""int __cdecl psi::C_DGEBRD(int,int,double *,int,double *,double *,double *,double *,double *,int)"" (?C_DGEBRD@psi@@YAHHHPEANH00000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgecon，该符号在函数 ""int __cdecl psi::C_DGECON(char,int,double *,int,double,double *,double *,int *)"" (?C_DGECON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeequ，该符号在函数 ""int __cdecl psi::C_DGEEQU(int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGEEQU@psi@@YAHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgees，该符号在函数 ""int __cdecl psi::C_DGEES(char,char,int,double *,int,int *,double *,double *,double *,int,double *,int)"" (?C_DGEES@psi@@YAHDDHPEANHPEAH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeesx，该符号在函数 ""int __cdecl psi::C_DGEESX(char,char,char,int,double *,int,int *,double *,double *,double *,int,double *,double *,double *,int,int *,int)"" (?C_DGEESX@psi@@YAHDDDHPEANHPEAH000H000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev，该符号在函数 ""int __cdecl psi::C_DGEEV(char,char,int,double *,int,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEEV@psi@@YAHDDHPEANH000H0H0H@Z) 中被引用",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:18274,Availability,error,error,18274,"nt,int,int,int,double *,int,int *,double *,int)"" (?C_DGBTRS@psi@@YAHDHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebak，该符号在函数 ""int __cdecl psi::C_DGEBAK(char,char,int,int,int,double *,int,double *,int)"" (?C_DGEBAK@psi@@YAHDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebal，该符号在函数 ""int __cdecl psi::C_DGEBAL(char,int,double *,int,int *,int *,double *)"" (?C_DGEBAL@psi@@YAHDHPEANHPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebrd，该符号在函数 ""int __cdecl psi::C_DGEBRD(int,int,double *,int,double *,double *,double *,double *,double *,int)"" (?C_DGEBRD@psi@@YAHHHPEANH00000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgecon，该符号在函数 ""int __cdecl psi::C_DGECON(char,int,double *,int,double,double *,double *,int *)"" (?C_DGECON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeequ，该符号在函数 ""int __cdecl psi::C_DGEEQU(int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGEEQU@psi@@YAHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgees，该符号在函数 ""int __cdecl psi::C_DGEES(char,char,int,double *,int,int *,double *,double *,double *,int,double *,int)"" (?C_DGEES@psi@@YAHDDHPEANHPEAH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeesx，该符号在函数 ""int __cdecl psi::C_DGEESX(char,char,char,int,double *,int,int *,double *,double *,double *,int,double *,double *,double *,int,int *,int)"" (?C_DGEESX@psi@@YAHDDDHPEANHPEAH000H000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev，该符号在函数 ""int __cdecl psi::C_DGEEV(char,char,int,double *,int,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEEV@psi@@YAHDDHPEANH000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeevx，该符号在函数 ""int __cdecl psi::C_DGEEVX(char,char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int *,int *,double *",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:18482,Availability,error,error,18482,"double *,int,double *,int)"" (?C_DGEBAK@psi@@YAHDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebal，该符号在函数 ""int __cdecl psi::C_DGEBAL(char,int,double *,int,int *,int *,double *)"" (?C_DGEBAL@psi@@YAHDHPEANHPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebrd，该符号在函数 ""int __cdecl psi::C_DGEBRD(int,int,double *,int,double *,double *,double *,double *,double *,int)"" (?C_DGEBRD@psi@@YAHHHPEANH00000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgecon，该符号在函数 ""int __cdecl psi::C_DGECON(char,int,double *,int,double,double *,double *,int *)"" (?C_DGECON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeequ，该符号在函数 ""int __cdecl psi::C_DGEEQU(int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGEEQU@psi@@YAHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgees，该符号在函数 ""int __cdecl psi::C_DGEES(char,char,int,double *,int,int *,double *,double *,double *,int,double *,int)"" (?C_DGEES@psi@@YAHDDHPEANHPEAH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeesx，该符号在函数 ""int __cdecl psi::C_DGEESX(char,char,char,int,double *,int,int *,double *,double *,double *,int,double *,double *,double *,int,int *,int)"" (?C_DGEESX@psi@@YAHDDDHPEANHPEAH000H000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev，该符号在函数 ""int __cdecl psi::C_DGEEV(char,char,int,double *,int,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEEV@psi@@YAHDDHPEANH000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeevx，该符号在函数 ""int __cdecl psi::C_DGEEVX(char,char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int *,int *,double *,double *,double *,double *,double *,int,int *)"" (?C_DGEEVX@psi@@YAHDDDDHPEANH000H0HPEAH100000H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgehrd，该符号在函数 ""int __cdecl psi::C_DGEHRD(int,int,in",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:18704,Availability,error,error,18704,"H10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebrd，该符号在函数 ""int __cdecl psi::C_DGEBRD(int,int,double *,int,double *,double *,double *,double *,double *,int)"" (?C_DGEBRD@psi@@YAHHHPEANH00000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgecon，该符号在函数 ""int __cdecl psi::C_DGECON(char,int,double *,int,double,double *,double *,int *)"" (?C_DGECON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeequ，该符号在函数 ""int __cdecl psi::C_DGEEQU(int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGEEQU@psi@@YAHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgees，该符号在函数 ""int __cdecl psi::C_DGEES(char,char,int,double *,int,int *,double *,double *,double *,int,double *,int)"" (?C_DGEES@psi@@YAHDDHPEANHPEAH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeesx，该符号在函数 ""int __cdecl psi::C_DGEESX(char,char,char,int,double *,int,int *,double *,double *,double *,int,double *,double *,double *,int,int *,int)"" (?C_DGEESX@psi@@YAHDDDHPEANHPEAH000H000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev，该符号在函数 ""int __cdecl psi::C_DGEEV(char,char,int,double *,int,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEEV@psi@@YAHDDHPEANH000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeevx，该符号在函数 ""int __cdecl psi::C_DGEEVX(char,char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int *,int *,double *,double *,double *,double *,double *,int,int *)"" (?C_DGEEVX@psi@@YAHDDDDHPEANH000H0HPEAH100000H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgehrd，该符号在函数 ""int __cdecl psi::C_DGEHRD(int,int,int,double *,int,double *,double *,int)"" (?C_DGEHRD@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelqf，该符号在函数 ""int __cdecl psi::C_DGELQF(int,int,double *,int,double *,double *,int)"" (?C_DGELQF@psi@@YAHH",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:18967,Availability,error,error,18967,"tfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgecon，该符号在函数 ""int __cdecl psi::C_DGECON(char,int,double *,int,double,double *,double *,int *)"" (?C_DGECON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeequ，该符号在函数 ""int __cdecl psi::C_DGEEQU(int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGEEQU@psi@@YAHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgees，该符号在函数 ""int __cdecl psi::C_DGEES(char,char,int,double *,int,int *,double *,double *,double *,int,double *,int)"" (?C_DGEES@psi@@YAHDDHPEANHPEAH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeesx，该符号在函数 ""int __cdecl psi::C_DGEESX(char,char,char,int,double *,int,int *,double *,double *,double *,int,double *,double *,double *,int,int *,int)"" (?C_DGEESX@psi@@YAHDDDHPEANHPEAH000H000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev，该符号在函数 ""int __cdecl psi::C_DGEEV(char,char,int,double *,int,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEEV@psi@@YAHDDHPEANH000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeevx，该符号在函数 ""int __cdecl psi::C_DGEEVX(char,char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int *,int *,double *,double *,double *,double *,double *,int,int *)"" (?C_DGEEVX@psi@@YAHDDDDHPEANH000H0HPEAH100000H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgehrd，该符号在函数 ""int __cdecl psi::C_DGEHRD(int,int,int,double *,int,double *,double *,int)"" (?C_DGEHRD@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelqf，该符号在函数 ""int __cdecl psi::C_DGELQF(int,int,double *,int,double *,double *,int)"" (?C_DGELQF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgels，该符号在函数 ""int __cdecl psi::C_DGELS(char,int,int,int,double *,int,double *,int,double *,int)"" (?C_DGELS@psi@@YAHDHHHPEANH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:19194,Availability,error,error,19194,":C_DGEEQU(int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGEEQU@psi@@YAHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgees，该符号在函数 ""int __cdecl psi::C_DGEES(char,char,int,double *,int,int *,double *,double *,double *,int,double *,int)"" (?C_DGEES@psi@@YAHDDHPEANHPEAH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeesx，该符号在函数 ""int __cdecl psi::C_DGEESX(char,char,char,int,double *,int,int *,double *,double *,double *,int,double *,double *,double *,int,int *,int)"" (?C_DGEESX@psi@@YAHDDDHPEANHPEAH000H000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev，该符号在函数 ""int __cdecl psi::C_DGEEV(char,char,int,double *,int,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEEV@psi@@YAHDDHPEANH000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeevx，该符号在函数 ""int __cdecl psi::C_DGEEVX(char,char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int *,int *,double *,double *,double *,double *,double *,int,int *)"" (?C_DGEEVX@psi@@YAHDDDDHPEANH000H0HPEAH100000H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgehrd，该符号在函数 ""int __cdecl psi::C_DGEHRD(int,int,int,double *,int,double *,double *,int)"" (?C_DGEHRD@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelqf，该符号在函数 ""int __cdecl psi::C_DGELQF(int,int,double *,int,double *,double *,int)"" (?C_DGELQF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgels，该符号在函数 ""int __cdecl psi::C_DGELS(char,int,int,int,double *,int,double *,int,double *,int)"" (?C_DGELS@psi@@YAHDHHHPEANH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsd，该符号在函数 ""int __cdecl psi::C_DGELSD(int,int,int,double *,int,double *,int,double *,double,int *,double *,int,int *)"" (?C_DGELSD@psi@@YAHHHHPEANH0H0NPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelss，该符号",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:19500,Availability,error,error,19500,"*,double *,double *,double *,int,double *,int)"" (?C_DGEES@psi@@YAHDDHPEANHPEAH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeesx，该符号在函数 ""int __cdecl psi::C_DGEESX(char,char,char,int,double *,int,int *,double *,double *,double *,int,double *,double *,double *,int,int *,int)"" (?C_DGEESX@psi@@YAHDDDHPEANHPEAH000H000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev，该符号在函数 ""int __cdecl psi::C_DGEEV(char,char,int,double *,int,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEEV@psi@@YAHDDHPEANH000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeevx，该符号在函数 ""int __cdecl psi::C_DGEEVX(char,char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int *,int *,double *,double *,double *,double *,double *,int,int *)"" (?C_DGEEVX@psi@@YAHDDDDHPEANH000H0HPEAH100000H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgehrd，该符号在函数 ""int __cdecl psi::C_DGEHRD(int,int,int,double *,int,double *,double *,int)"" (?C_DGEHRD@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelqf，该符号在函数 ""int __cdecl psi::C_DGELQF(int,int,double *,int,double *,double *,int)"" (?C_DGELQF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgels，该符号在函数 ""int __cdecl psi::C_DGELS(char,int,int,int,double *,int,double *,int,double *,int)"" (?C_DGELS@psi@@YAHDHHHPEANH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsd，该符号在函数 ""int __cdecl psi::C_DGELSD(int,int,int,double *,int,double *,int,double *,double,int *,double *,int,int *)"" (?C_DGELSD@psi@@YAHHHHPEANH0H0NPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelss，该符号在函数 ""int __cdecl psi::C_DGELSS(int,int,int,double *,int,double *,int,double *,double,int *,double *,int)"" (?C_DGELSS@psi@@YAHHHHPEANH0H0NPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsy，该符号在函数 ""int __cdecl psi::C_DG",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:19688,Availability,error,error,19688,"_DGEESX(char,char,char,int,double *,int,int *,double *,double *,double *,int,double *,double *,double *,int,int *,int)"" (?C_DGEESX@psi@@YAHDDDHPEANHPEAH000H000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev，该符号在函数 ""int __cdecl psi::C_DGEEV(char,char,int,double *,int,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEEV@psi@@YAHDDHPEANH000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeevx，该符号在函数 ""int __cdecl psi::C_DGEEVX(char,char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int *,int *,double *,double *,double *,double *,double *,int,int *)"" (?C_DGEEVX@psi@@YAHDDDDHPEANH000H0HPEAH100000H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgehrd，该符号在函数 ""int __cdecl psi::C_DGEHRD(int,int,int,double *,int,double *,double *,int)"" (?C_DGEHRD@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelqf，该符号在函数 ""int __cdecl psi::C_DGELQF(int,int,double *,int,double *,double *,int)"" (?C_DGELQF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgels，该符号在函数 ""int __cdecl psi::C_DGELS(char,int,int,int,double *,int,double *,int,double *,int)"" (?C_DGELS@psi@@YAHDHHHPEANH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsd，该符号在函数 ""int __cdecl psi::C_DGELSD(int,int,int,double *,int,double *,int,double *,double,int *,double *,int,int *)"" (?C_DGELSD@psi@@YAHHHHPEANH0H0NPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelss，该符号在函数 ""int __cdecl psi::C_DGELSS(int,int,int,double *,int,double *,int,double *,double,int *,double *,int)"" (?C_DGELSS@psi@@YAHHHHPEANH0H0NPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsy，该符号在函数 ""int __cdecl psi::C_DGELSX(int,int,int,double *,int,double *,int,int *,double,int *,double *)"" (?C_DGELSX@psi@@YAHHHHPEANH0HPEAHN10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqlf，该符",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:19871,Availability,error,error,19871,"ntfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev，该符号在函数 ""int __cdecl psi::C_DGEEV(char,char,int,double *,int,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEEV@psi@@YAHDDHPEANH000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeevx，该符号在函数 ""int __cdecl psi::C_DGEEVX(char,char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int *,int *,double *,double *,double *,double *,double *,int,int *)"" (?C_DGEEVX@psi@@YAHDDDDHPEANH000H0HPEAH100000H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgehrd，该符号在函数 ""int __cdecl psi::C_DGEHRD(int,int,int,double *,int,double *,double *,int)"" (?C_DGEHRD@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelqf，该符号在函数 ""int __cdecl psi::C_DGELQF(int,int,double *,int,double *,double *,int)"" (?C_DGELQF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgels，该符号在函数 ""int __cdecl psi::C_DGELS(char,int,int,int,double *,int,double *,int,double *,int)"" (?C_DGELS@psi@@YAHDHHHPEANH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsd，该符号在函数 ""int __cdecl psi::C_DGELSD(int,int,int,double *,int,double *,int,double *,double,int *,double *,int,int *)"" (?C_DGELSD@psi@@YAHHHHPEANH0H0NPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelss，该符号在函数 ""int __cdecl psi::C_DGELSS(int,int,int,double *,int,double *,int,double *,double,int *,double *,int)"" (?C_DGELSS@psi@@YAHHHHPEANH0H0NPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsy，该符号在函数 ""int __cdecl psi::C_DGELSX(int,int,int,double *,int,double *,int,int *,double,int *,double *)"" (?C_DGELSX@psi@@YAHHHHPEANH0HPEAHN10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqlf，该符号在函数 ""int __cdecl psi::C_DGEQLF(int,int,double *,int,double *,double *,int)"" (?C_DGEQLF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqp3，该符号在函数 """,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:20067,Availability,error,error,20067,"qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeevx，该符号在函数 ""int __cdecl psi::C_DGEEVX(char,char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int *,int *,double *,double *,double *,double *,double *,int,int *)"" (?C_DGEEVX@psi@@YAHDDDDHPEANH000H0HPEAH100000H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgehrd，该符号在函数 ""int __cdecl psi::C_DGEHRD(int,int,int,double *,int,double *,double *,int)"" (?C_DGEHRD@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelqf，该符号在函数 ""int __cdecl psi::C_DGELQF(int,int,double *,int,double *,double *,int)"" (?C_DGELQF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgels，该符号在函数 ""int __cdecl psi::C_DGELS(char,int,int,int,double *,int,double *,int,double *,int)"" (?C_DGELS@psi@@YAHDHHHPEANH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsd，该符号在函数 ""int __cdecl psi::C_DGELSD(int,int,int,double *,int,double *,int,double *,double,int *,double *,int,int *)"" (?C_DGELSD@psi@@YAHHHHPEANH0H0NPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelss，该符号在函数 ""int __cdecl psi::C_DGELSS(int,int,int,double *,int,double *,int,double *,double,int *,double *,int)"" (?C_DGELSS@psi@@YAHHHHPEANH0H0NPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsy，该符号在函数 ""int __cdecl psi::C_DGELSX(int,int,int,double *,int,double *,int,int *,double,int *,double *)"" (?C_DGELSX@psi@@YAHHHHPEANH0HPEAHN10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqlf，该符号在函数 ""int __cdecl psi::C_DGEQLF(int,int,double *,int,double *,double *,int)"" (?C_DGEQLF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqp3，该符号在函数 ""int __cdecl psi::C_DGEQP3(int,int,double *,int,int *,double *,double *,int)"" (?C_DGEQP3@psi@@YAHHHPEANHPEAH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqrf，该符号在函数 ""int __cdecl psi::C_",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:20295,Availability,error,error,20295,",double *,int,int *)"" (?C_DGEEVX@psi@@YAHDDDDHPEANH000H0HPEAH100000H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgehrd，该符号在函数 ""int __cdecl psi::C_DGEHRD(int,int,int,double *,int,double *,double *,int)"" (?C_DGEHRD@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelqf，该符号在函数 ""int __cdecl psi::C_DGELQF(int,int,double *,int,double *,double *,int)"" (?C_DGELQF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgels，该符号在函数 ""int __cdecl psi::C_DGELS(char,int,int,int,double *,int,double *,int,double *,int)"" (?C_DGELS@psi@@YAHDHHHPEANH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsd，该符号在函数 ""int __cdecl psi::C_DGELSD(int,int,int,double *,int,double *,int,double *,double,int *,double *,int,int *)"" (?C_DGELSD@psi@@YAHHHHPEANH0H0NPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelss，该符号在函数 ""int __cdecl psi::C_DGELSS(int,int,int,double *,int,double *,int,double *,double,int *,double *,int)"" (?C_DGELSS@psi@@YAHHHHPEANH0H0NPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsy，该符号在函数 ""int __cdecl psi::C_DGELSX(int,int,int,double *,int,double *,int,int *,double,int *,double *)"" (?C_DGELSX@psi@@YAHHHHPEANH0HPEAHN10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqlf，该符号在函数 ""int __cdecl psi::C_DGEQLF(int,int,double *,int,double *,double *,int)"" (?C_DGEQLF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqp3，该符号在函数 ""int __cdecl psi::C_DGEQP3(int,int,double *,int,int *,double *,double *,int)"" (?C_DGEQP3@psi@@YAHHHPEANHPEAH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqrf，该符号在函数 ""int __cdecl psi::C_DGEQRF(int,int,double *,int,double *,double *,int)"" (?C_DGEQRF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgerfs，该符号在函数 ""int __cdecl psi::C_DGERFS(char,int,int,double *,int,double *,",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:20516,Availability,error,error,20516,"e *,int)"" (?C_DGEHRD@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelqf，该符号在函数 ""int __cdecl psi::C_DGELQF(int,int,double *,int,double *,double *,int)"" (?C_DGELQF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgels，该符号在函数 ""int __cdecl psi::C_DGELS(char,int,int,int,double *,int,double *,int,double *,int)"" (?C_DGELS@psi@@YAHDHHHPEANH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsd，该符号在函数 ""int __cdecl psi::C_DGELSD(int,int,int,double *,int,double *,int,double *,double,int *,double *,int,int *)"" (?C_DGELSD@psi@@YAHHHHPEANH0H0NPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelss，该符号在函数 ""int __cdecl psi::C_DGELSS(int,int,int,double *,int,double *,int,double *,double,int *,double *,int)"" (?C_DGELSS@psi@@YAHHHHPEANH0H0NPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsy，该符号在函数 ""int __cdecl psi::C_DGELSX(int,int,int,double *,int,double *,int,int *,double,int *,double *)"" (?C_DGELSX@psi@@YAHHHHPEANH0HPEAHN10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqlf，该符号在函数 ""int __cdecl psi::C_DGEQLF(int,int,double *,int,double *,double *,int)"" (?C_DGEQLF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqp3，该符号在函数 ""int __cdecl psi::C_DGEQP3(int,int,double *,int,int *,double *,double *,int)"" (?C_DGEQP3@psi@@YAHHHPEANHPEAH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqrf，该符号在函数 ""int __cdecl psi::C_DGEQRF(int,int,double *,int,double *,double *,int)"" (?C_DGEQRF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgerfs，该符号在函数 ""int __cdecl psi::C_DGERFS(char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGERFS@psi@@YAHDHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgerqf，该符号在函数 ""int __cdecl psi::C_DGE",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:20729,Availability,error,error,20729,"DGELQF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgels，该符号在函数 ""int __cdecl psi::C_DGELS(char,int,int,int,double *,int,double *,int,double *,int)"" (?C_DGELS@psi@@YAHDHHHPEANH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsd，该符号在函数 ""int __cdecl psi::C_DGELSD(int,int,int,double *,int,double *,int,double *,double,int *,double *,int,int *)"" (?C_DGELSD@psi@@YAHHHHPEANH0H0NPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelss，该符号在函数 ""int __cdecl psi::C_DGELSS(int,int,int,double *,int,double *,int,double *,double,int *,double *,int)"" (?C_DGELSS@psi@@YAHHHHPEANH0H0NPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsy，该符号在函数 ""int __cdecl psi::C_DGELSX(int,int,int,double *,int,double *,int,int *,double,int *,double *)"" (?C_DGELSX@psi@@YAHHHHPEANH0HPEAHN10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqlf，该符号在函数 ""int __cdecl psi::C_DGEQLF(int,int,double *,int,double *,double *,int)"" (?C_DGEQLF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqp3，该符号在函数 ""int __cdecl psi::C_DGEQP3(int,int,double *,int,int *,double *,double *,int)"" (?C_DGEQP3@psi@@YAHHHPEANHPEAH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqrf，该符号在函数 ""int __cdecl psi::C_DGEQRF(int,int,double *,int,double *,double *,int)"" (?C_DGEQRF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgerfs，该符号在函数 ""int __cdecl psi::C_DGERFS(char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGERFS@psi@@YAHDHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgerqf，该符号在函数 ""int __cdecl psi::C_DGERQF(int,int,double *,int,double *,double *,int)"" (?C_DGERQF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesdd，该符号在函数 ""int __cdecl psi::C_DGESDD(char,int,in",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:20912,Availability,error,error,20912,""" (?C_DGELS@psi@@YAHDHHHPEANH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsd，该符号在函数 ""int __cdecl psi::C_DGELSD(int,int,int,double *,int,double *,int,double *,double,int *,double *,int,int *)"" (?C_DGELSD@psi@@YAHHHHPEANH0H0NPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelss，该符号在函数 ""int __cdecl psi::C_DGELSS(int,int,int,double *,int,double *,int,double *,double,int *,double *,int)"" (?C_DGELSS@psi@@YAHHHHPEANH0H0NPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsy，该符号在函数 ""int __cdecl psi::C_DGELSX(int,int,int,double *,int,double *,int,int *,double,int *,double *)"" (?C_DGELSX@psi@@YAHHHHPEANH0HPEAHN10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqlf，该符号在函数 ""int __cdecl psi::C_DGEQLF(int,int,double *,int,double *,double *,int)"" (?C_DGEQLF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqp3，该符号在函数 ""int __cdecl psi::C_DGEQP3(int,int,double *,int,int *,double *,double *,int)"" (?C_DGEQP3@psi@@YAHHHPEANHPEAH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqrf，该符号在函数 ""int __cdecl psi::C_DGEQRF(int,int,double *,int,double *,double *,int)"" (?C_DGEQRF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgerfs，该符号在函数 ""int __cdecl psi::C_DGERFS(char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGERFS@psi@@YAHDHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgerqf，该符号在函数 ""int __cdecl psi::C_DGERQF(int,int,double *,int,double *,double *,int)"" (?C_DGERQF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesdd，该符号在函数 ""int __cdecl psi::C_DGESDD(char,int,int,double *,int,double *,double *,int,double *,int,double *,int,int *)"" (?C_DGESDD@psi@@YAHDHHPEANH00H0H0HPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv，该符号在函",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:21105,Availability,error,error,21105,",double,int *,double *,int,int *)"" (?C_DGELSD@psi@@YAHHHHPEANH0H0NPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelss，该符号在函数 ""int __cdecl psi::C_DGELSS(int,int,int,double *,int,double *,int,double *,double,int *,double *,int)"" (?C_DGELSS@psi@@YAHHHHPEANH0H0NPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsy，该符号在函数 ""int __cdecl psi::C_DGELSX(int,int,int,double *,int,double *,int,int *,double,int *,double *)"" (?C_DGELSX@psi@@YAHHHHPEANH0HPEAHN10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqlf，该符号在函数 ""int __cdecl psi::C_DGEQLF(int,int,double *,int,double *,double *,int)"" (?C_DGEQLF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqp3，该符号在函数 ""int __cdecl psi::C_DGEQP3(int,int,double *,int,int *,double *,double *,int)"" (?C_DGEQP3@psi@@YAHHHPEANHPEAH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqrf，该符号在函数 ""int __cdecl psi::C_DGEQRF(int,int,double *,int,double *,double *,int)"" (?C_DGEQRF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgerfs，该符号在函数 ""int __cdecl psi::C_DGERFS(char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGERFS@psi@@YAHDHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgerqf，该符号在函数 ""int __cdecl psi::C_DGERQF(int,int,double *,int,double *,double *,int)"" (?C_DGERQF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesdd，该符号在函数 ""int __cdecl psi::C_DGESDD(char,int,int,double *,int,double *,double *,int,double *,int,double *,int,int *)"" (?C_DGESDD@psi@@YAHDHHPEANH00H0H0HPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv，该符号在函数 ""int __cdecl psi::C_DGESV(int,int,double *,int,int *,double *,int)"" (?C_DGESV@psi@@YAHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvx，该符号在函数 ""int ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:21288,Availability,error,error,21288,"double *,double,int *,double *,int)"" (?C_DGELSS@psi@@YAHHHHPEANH0H0NPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsy，该符号在函数 ""int __cdecl psi::C_DGELSX(int,int,int,double *,int,double *,int,int *,double,int *,double *)"" (?C_DGELSX@psi@@YAHHHHPEANH0HPEAHN10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqlf，该符号在函数 ""int __cdecl psi::C_DGEQLF(int,int,double *,int,double *,double *,int)"" (?C_DGEQLF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqp3，该符号在函数 ""int __cdecl psi::C_DGEQP3(int,int,double *,int,int *,double *,double *,int)"" (?C_DGEQP3@psi@@YAHHHPEANHPEAH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqrf，该符号在函数 ""int __cdecl psi::C_DGEQRF(int,int,double *,int,double *,double *,int)"" (?C_DGEQRF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgerfs，该符号在函数 ""int __cdecl psi::C_DGERFS(char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGERFS@psi@@YAHDHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgerqf，该符号在函数 ""int __cdecl psi::C_DGERQF(int,int,double *,int,double *,double *,int)"" (?C_DGERQF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesdd，该符号在函数 ""int __cdecl psi::C_DGESDD(char,int,int,double *,int,double *,double *,int,double *,int,double *,int,int *)"" (?C_DGESDD@psi@@YAHDHHPEANH00H0H0HPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv，该符号在函数 ""int __cdecl psi::C_DGESV(int,int,double *,int,int *,double *,int)"" (?C_DGESV@psi@@YAHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvx，该符号在函数 ""int __cdecl psi::C_DGESVX(char,char,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGESVX@psi@@YAHDDHHPEANH0HPEAHD000H0H00001@Z) 中被引用",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:21544,Availability,error,error,21544,"t,int *,double,int *,double *)"" (?C_DGELSX@psi@@YAHHHHPEANH0HPEAHN10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqlf，该符号在函数 ""int __cdecl psi::C_DGEQLF(int,int,double *,int,double *,double *,int)"" (?C_DGEQLF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqp3，该符号在函数 ""int __cdecl psi::C_DGEQP3(int,int,double *,int,int *,double *,double *,int)"" (?C_DGEQP3@psi@@YAHHHPEANHPEAH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqrf，该符号在函数 ""int __cdecl psi::C_DGEQRF(int,int,double *,int,double *,double *,int)"" (?C_DGEQRF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgerfs，该符号在函数 ""int __cdecl psi::C_DGERFS(char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGERFS@psi@@YAHDHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgerqf，该符号在函数 ""int __cdecl psi::C_DGERQF(int,int,double *,int,double *,double *,int)"" (?C_DGERQF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesdd，该符号在函数 ""int __cdecl psi::C_DGESDD(char,int,int,double *,int,double *,double *,int,double *,int,double *,int,int *)"" (?C_DGESDD@psi@@YAHDHHPEANH00H0H0HPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv，该符号在函数 ""int __cdecl psi::C_DGESV(int,int,double *,int,int *,double *,int)"" (?C_DGESV@psi@@YAHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvx，该符号在函数 ""int __cdecl psi::C_DGESVX(char,char,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGESVX@psi@@YAHDDHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetrf，该符号在函数 ""int __cdecl psi::C_DGETRF(int,int,double *,int,int *)"" (?C_DGETRF@psi@@YAHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:21727,Availability,error,error,21727,",double *,int)"" (?C_DGEQLF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqp3，该符号在函数 ""int __cdecl psi::C_DGEQP3(int,int,double *,int,int *,double *,double *,int)"" (?C_DGEQP3@psi@@YAHHHPEANHPEAH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqrf，该符号在函数 ""int __cdecl psi::C_DGEQRF(int,int,double *,int,double *,double *,int)"" (?C_DGEQRF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgerfs，该符号在函数 ""int __cdecl psi::C_DGERFS(char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGERFS@psi@@YAHDHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgerqf，该符号在函数 ""int __cdecl psi::C_DGERQF(int,int,double *,int,double *,double *,int)"" (?C_DGERQF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesdd，该符号在函数 ""int __cdecl psi::C_DGESDD(char,int,int,double *,int,double *,double *,int,double *,int,double *,int,int *)"" (?C_DGESDD@psi@@YAHDHHPEANH00H0H0HPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv，该符号在函数 ""int __cdecl psi::C_DGESV(int,int,double *,int,int *,double *,int)"" (?C_DGESV@psi@@YAHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvx，该符号在函数 ""int __cdecl psi::C_DGESVX(char,char,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGESVX@psi@@YAHDDHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetrf，该符号在函数 ""int __cdecl psi::C_DGETRF(int,int,double *,int,int *)"" (?C_DGETRF@psi@@YAHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetri，该符号在函数 ""int __cdecl psi::C_DGETRI(int,double *,int,int *,double *,int)"" (?C_DGETRI@psi@@YAHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetrs，该符号在函数 ""int _",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:21956,Availability,error,error,21956,"(?C_DGEQP3@psi@@YAHHHPEANHPEAH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqrf，该符号在函数 ""int __cdecl psi::C_DGEQRF(int,int,double *,int,double *,double *,int)"" (?C_DGEQRF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgerfs，该符号在函数 ""int __cdecl psi::C_DGERFS(char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGERFS@psi@@YAHDHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgerqf，该符号在函数 ""int __cdecl psi::C_DGERQF(int,int,double *,int,double *,double *,int)"" (?C_DGERQF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesdd，该符号在函数 ""int __cdecl psi::C_DGESDD(char,int,int,double *,int,double *,double *,int,double *,int,double *,int,int *)"" (?C_DGESDD@psi@@YAHDHHPEANH00H0H0HPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv，该符号在函数 ""int __cdecl psi::C_DGESV(int,int,double *,int,int *,double *,int)"" (?C_DGESV@psi@@YAHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvx，该符号在函数 ""int __cdecl psi::C_DGESVX(char,char,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGESVX@psi@@YAHDDHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetrf，该符号在函数 ""int __cdecl psi::C_DGETRF(int,int,double *,int,int *)"" (?C_DGETRF@psi@@YAHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetri，该符号在函数 ""int __cdecl psi::C_DGETRI(int,double *,int,int *,double *,int)"" (?C_DGETRI@psi@@YAHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetrs，该符号在函数 ""int __cdecl psi::C_DGETRS(char,int,int,double *,int,int *,double *,int)"" (?C_DGETRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggbak，该符号在函数 ""int __cdecl psi::C_D",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:22136,Availability,error,error,22136,"ack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgerfs，该符号在函数 ""int __cdecl psi::C_DGERFS(char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGERFS@psi@@YAHDHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgerqf，该符号在函数 ""int __cdecl psi::C_DGERQF(int,int,double *,int,double *,double *,int)"" (?C_DGERQF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesdd，该符号在函数 ""int __cdecl psi::C_DGESDD(char,int,int,double *,int,double *,double *,int,double *,int,double *,int,int *)"" (?C_DGESDD@psi@@YAHDHHPEANH00H0H0HPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv，该符号在函数 ""int __cdecl psi::C_DGESV(int,int,double *,int,int *,double *,int)"" (?C_DGESV@psi@@YAHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvx，该符号在函数 ""int __cdecl psi::C_DGESVX(char,char,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGESVX@psi@@YAHDDHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetrf，该符号在函数 ""int __cdecl psi::C_DGETRF(int,int,double *,int,int *)"" (?C_DGETRF@psi@@YAHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetri，该符号在函数 ""int __cdecl psi::C_DGETRI(int,double *,int,int *,double *,int)"" (?C_DGETRI@psi@@YAHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetrs，该符号在函数 ""int __cdecl psi::C_DGETRS(char,int,int,double *,int,int *,double *,int)"" (?C_DGETRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggbak，该符号在函数 ""int __cdecl psi::C_DGGBAK(char,char,int,int,int,double *,double *,int,double *,int)"" (?C_DGGBAK@psi@@YAHDDHHHPEAN0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggbal，该符号在函数 ""int __cdecl psi::C_DGGBAL(char,int,double *,int,double *,in",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:22434,Availability,error,error,22434,"@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgerqf，该符号在函数 ""int __cdecl psi::C_DGERQF(int,int,double *,int,double *,double *,int)"" (?C_DGERQF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesdd，该符号在函数 ""int __cdecl psi::C_DGESDD(char,int,int,double *,int,double *,double *,int,double *,int,double *,int,int *)"" (?C_DGESDD@psi@@YAHDHHPEANH00H0H0HPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv，该符号在函数 ""int __cdecl psi::C_DGESV(int,int,double *,int,int *,double *,int)"" (?C_DGESV@psi@@YAHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvx，该符号在函数 ""int __cdecl psi::C_DGESVX(char,char,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGESVX@psi@@YAHDDHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetrf，该符号在函数 ""int __cdecl psi::C_DGETRF(int,int,double *,int,int *)"" (?C_DGETRF@psi@@YAHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetri，该符号在函数 ""int __cdecl psi::C_DGETRI(int,double *,int,int *,double *,int)"" (?C_DGETRI@psi@@YAHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetrs，该符号在函数 ""int __cdecl psi::C_DGETRS(char,int,int,double *,int,int *,double *,int)"" (?C_DGETRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggbak，该符号在函数 ""int __cdecl psi::C_DGGBAK(char,char,int,int,int,double *,double *,int,double *,int)"" (?C_DGGBAK@psi@@YAHDDHHHPEAN0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggbal，该符号在函数 ""int __cdecl psi::C_DGGBAL(char,int,double *,int,double *,int,int *,int *,double *,double *,double *)"" (?C_DGGBAL@psi@@YAHDHPEANH0HPEAH1000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgges，该符号在函数 ""int __cdecl psi::C_DGEGS(char,char,int,double *,int,double *,int,double ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:22602,Availability,error,error,22602,"HHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesdd，该符号在函数 ""int __cdecl psi::C_DGESDD(char,int,int,double *,int,double *,double *,int,double *,int,double *,int,int *)"" (?C_DGESDD@psi@@YAHDHHPEANH00H0H0HPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv，该符号在函数 ""int __cdecl psi::C_DGESV(int,int,double *,int,int *,double *,int)"" (?C_DGESV@psi@@YAHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvx，该符号在函数 ""int __cdecl psi::C_DGESVX(char,char,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGESVX@psi@@YAHDDHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetrf，该符号在函数 ""int __cdecl psi::C_DGETRF(int,int,double *,int,int *)"" (?C_DGETRF@psi@@YAHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetri，该符号在函数 ""int __cdecl psi::C_DGETRI(int,double *,int,int *,double *,int)"" (?C_DGETRI@psi@@YAHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetrs，该符号在函数 ""int __cdecl psi::C_DGETRS(char,int,int,double *,int,int *,double *,int)"" (?C_DGETRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggbak，该符号在函数 ""int __cdecl psi::C_DGGBAK(char,char,int,int,int,double *,double *,int,double *,int)"" (?C_DGGBAK@psi@@YAHDDHHHPEAN0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggbal，该符号在函数 ""int __cdecl psi::C_DGGBAL(char,int,double *,int,double *,int,int *,int *,double *,double *,double *)"" (?C_DGGBAL@psi@@YAHDHPEANH0HPEAH1000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgges，该符号在函数 ""int __cdecl psi::C_DGEGS(char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEGS@psi@@YAHDDHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggesx，",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:22780,Availability,error,error,22780,"ble *,int,int *)"" (?C_DGESDD@psi@@YAHDHHPEANH00H0H0HPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv，该符号在函数 ""int __cdecl psi::C_DGESV(int,int,double *,int,int *,double *,int)"" (?C_DGESV@psi@@YAHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvx，该符号在函数 ""int __cdecl psi::C_DGESVX(char,char,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGESVX@psi@@YAHDDHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetrf，该符号在函数 ""int __cdecl psi::C_DGETRF(int,int,double *,int,int *)"" (?C_DGETRF@psi@@YAHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetri，该符号在函数 ""int __cdecl psi::C_DGETRI(int,double *,int,int *,double *,int)"" (?C_DGETRI@psi@@YAHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetrs，该符号在函数 ""int __cdecl psi::C_DGETRS(char,int,int,double *,int,int *,double *,int)"" (?C_DGETRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggbak，该符号在函数 ""int __cdecl psi::C_DGGBAK(char,char,int,int,int,double *,double *,int,double *,int)"" (?C_DGGBAK@psi@@YAHDDHHHPEAN0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggbal，该符号在函数 ""int __cdecl psi::C_DGGBAL(char,int,double *,int,double *,int,int *,int *,double *,double *,double *)"" (?C_DGGBAL@psi@@YAHDHPEANH0HPEAH1000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgges，该符号在函数 ""int __cdecl psi::C_DGEGS(char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEGS@psi@@YAHDDHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggesx，该符号在函数 ""int __cdecl psi::C_DGGESX(char,char,char,char,int,double *,int,double *,int,int *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,int,int *,int)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:22969,Availability,error,error,22969,"e *,int)"" (?C_DGESV@psi@@YAHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvx，该符号在函数 ""int __cdecl psi::C_DGESVX(char,char,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGESVX@psi@@YAHDDHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetrf，该符号在函数 ""int __cdecl psi::C_DGETRF(int,int,double *,int,int *)"" (?C_DGETRF@psi@@YAHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetri，该符号在函数 ""int __cdecl psi::C_DGETRI(int,double *,int,int *,double *,int)"" (?C_DGETRI@psi@@YAHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetrs，该符号在函数 ""int __cdecl psi::C_DGETRS(char,int,int,double *,int,int *,double *,int)"" (?C_DGETRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggbak，该符号在函数 ""int __cdecl psi::C_DGGBAK(char,char,int,int,int,double *,double *,int,double *,int)"" (?C_DGGBAK@psi@@YAHDDHHHPEAN0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggbal，该符号在函数 ""int __cdecl psi::C_DGGBAL(char,int,double *,int,double *,int,int *,int *,double *,double *,double *)"" (?C_DGGBAL@psi@@YAHDHPEANH0HPEAH1000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgges，该符号在函数 ""int __cdecl psi::C_DGEGS(char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEGS@psi@@YAHDDHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggesx，该符号在函数 ""int __cdecl psi::C_DGGESX(char,char,char,char,int,double *,int,double *,int,int *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,int,int *,int)"" (?C_DGGESX@psi@@YAHDDDDHPEANH0HPEAH0000H0H000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggev，该符号在函数 ""int __cdecl psi::C_DGEGV(char,char,int,double *,int,double *,i",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:23169,Availability,error,error,23169,"e *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGESVX@psi@@YAHDDHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetrf，该符号在函数 ""int __cdecl psi::C_DGETRF(int,int,double *,int,int *)"" (?C_DGETRF@psi@@YAHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetri，该符号在函数 ""int __cdecl psi::C_DGETRI(int,double *,int,int *,double *,int)"" (?C_DGETRI@psi@@YAHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetrs，该符号在函数 ""int __cdecl psi::C_DGETRS(char,int,int,double *,int,int *,double *,int)"" (?C_DGETRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggbak，该符号在函数 ""int __cdecl psi::C_DGGBAK(char,char,int,int,int,double *,double *,int,double *,int)"" (?C_DGGBAK@psi@@YAHDDHHHPEAN0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggbal，该符号在函数 ""int __cdecl psi::C_DGGBAL(char,int,double *,int,double *,int,int *,int *,double *,double *,double *)"" (?C_DGGBAL@psi@@YAHDHPEANH0HPEAH1000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgges，该符号在函数 ""int __cdecl psi::C_DGEGS(char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEGS@psi@@YAHDDHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggesx，该符号在函数 ""int __cdecl psi::C_DGGESX(char,char,char,char,int,double *,int,double *,int,int *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,int,int *,int)"" (?C_DGGESX@psi@@YAHDDDDHPEANH0HPEAH0000H0H000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggev，该符号在函数 ""int __cdecl psi::C_DGEGV(char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEGV@psi@@YAHDDHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggevx，该符号在函数 ""int __cdecl psi::C_D",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:23390,Availability,error,error,23390,"(int,int,double *,int,int *)"" (?C_DGETRF@psi@@YAHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetri，该符号在函数 ""int __cdecl psi::C_DGETRI(int,double *,int,int *,double *,int)"" (?C_DGETRI@psi@@YAHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetrs，该符号在函数 ""int __cdecl psi::C_DGETRS(char,int,int,double *,int,int *,double *,int)"" (?C_DGETRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggbak，该符号在函数 ""int __cdecl psi::C_DGGBAK(char,char,int,int,int,double *,double *,int,double *,int)"" (?C_DGGBAK@psi@@YAHDDHHHPEAN0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggbal，该符号在函数 ""int __cdecl psi::C_DGGBAL(char,int,double *,int,double *,int,int *,int *,double *,double *,double *)"" (?C_DGGBAL@psi@@YAHDHPEANH0HPEAH1000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgges，该符号在函数 ""int __cdecl psi::C_DGEGS(char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEGS@psi@@YAHDDHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggesx，该符号在函数 ""int __cdecl psi::C_DGGESX(char,char,char,char,int,double *,int,double *,int,int *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,int,int *,int)"" (?C_DGGESX@psi@@YAHDDDDHPEANH0HPEAH0000H0H000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggev，该符号在函数 ""int __cdecl psi::C_DGEGV(char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEGV@psi@@YAHDDHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggevx，该符号在函数 ""int __cdecl psi::C_DGGEVX(char,char,char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,int *,int *,double *,double *,double *,double *,double *,double *,double *,int,int *)"" (?C_DGGEVX@psi@@YAHDDDDHPEANH0H0000H0HPE",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:23642,Availability,error,error,23642," error LNK2019: 无法解析的外部符号 dgetrs，该符号在函数 ""int __cdecl psi::C_DGETRS(char,int,int,double *,int,int *,double *,int)"" (?C_DGETRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggbak，该符号在函数 ""int __cdecl psi::C_DGGBAK(char,char,int,int,int,double *,double *,int,double *,int)"" (?C_DGGBAK@psi@@YAHDDHHHPEAN0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggbal，该符号在函数 ""int __cdecl psi::C_DGGBAL(char,int,double *,int,double *,int,int *,int *,double *,double *,double *)"" (?C_DGGBAL@psi@@YAHDHPEANH0HPEAH1000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgges，该符号在函数 ""int __cdecl psi::C_DGEGS(char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEGS@psi@@YAHDDHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggesx，该符号在函数 ""int __cdecl psi::C_DGGESX(char,char,char,char,int,double *,int,double *,int,int *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,int,int *,int)"" (?C_DGGESX@psi@@YAHDDDDHPEANH0HPEAH0000H0H000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggev，该符号在函数 ""int __cdecl psi::C_DGEGV(char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEGV@psi@@YAHDDHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggevx，该符号在函数 ""int __cdecl psi::C_DGGEVX(char,char,char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,int *,int *,double *,double *,double *,double *,double *,double *,double *,int,int *)"" (?C_DGGEVX@psi@@YAHDDDDHPEANH0H0000H0HPEAH10000000H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggglm，该符号在函数 ""int __cdecl psi::C_DGGGLM(int,int,int,double *,int,double *,int,double *,double *,double *,double *,int)"" (?C_DGGGLM@psi@@YAHHHHPEANH0H0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : err",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:23951,Availability,error,error,23951,"ble *,double *,int,double *,int)"" (?C_DGGBAK@psi@@YAHDDHHHPEAN0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggbal，该符号在函数 ""int __cdecl psi::C_DGGBAL(char,int,double *,int,double *,int,int *,int *,double *,double *,double *)"" (?C_DGGBAL@psi@@YAHDHPEANH0HPEAH1000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgges，该符号在函数 ""int __cdecl psi::C_DGEGS(char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEGS@psi@@YAHDDHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggesx，该符号在函数 ""int __cdecl psi::C_DGGESX(char,char,char,char,int,double *,int,double *,int,int *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,int,int *,int)"" (?C_DGGESX@psi@@YAHDDDDHPEANH0HPEAH0000H0H000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggev，该符号在函数 ""int __cdecl psi::C_DGEGV(char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEGV@psi@@YAHDDHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggevx，该符号在函数 ""int __cdecl psi::C_DGGEVX(char,char,char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,int *,int *,double *,double *,double *,double *,double *,double *,double *,int,int *)"" (?C_DGGEVX@psi@@YAHDDDDHPEANH0H0000H0HPEAH10000000H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggglm，该符号在函数 ""int __cdecl psi::C_DGGGLM(int,int,int,double *,int,double *,int,double *,double *,double *,double *,int)"" (?C_DGGGLM@psi@@YAHHHHPEANH0H0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgghrd，该符号在函数 ""int __cdecl psi::C_DGGHRD(char,char,int,int,int,double *,int,double *,int,double *,int,double *,int)"" (?C_DGGHRD@psi@@YAHDDHHHPEANH0H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgglse，该符号在函数 ""int __cdecl psi::C_DGGL",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:24203,Availability,error,error,24203,"t.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgges，该符号在函数 ""int __cdecl psi::C_DGEGS(char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEGS@psi@@YAHDDHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggesx，该符号在函数 ""int __cdecl psi::C_DGGESX(char,char,char,char,int,double *,int,double *,int,int *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,int,int *,int)"" (?C_DGGESX@psi@@YAHDDDDHPEANH0HPEAH0000H0H000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggev，该符号在函数 ""int __cdecl psi::C_DGEGV(char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEGV@psi@@YAHDDHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggevx，该符号在函数 ""int __cdecl psi::C_DGGEVX(char,char,char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,int *,int *,double *,double *,double *,double *,double *,double *,double *,int,int *)"" (?C_DGGEVX@psi@@YAHDDDDHPEANH0H0000H0HPEAH10000000H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggglm，该符号在函数 ""int __cdecl psi::C_DGGGLM(int,int,int,double *,int,double *,int,double *,double *,double *,double *,int)"" (?C_DGGGLM@psi@@YAHHHHPEANH0H0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgghrd，该符号在函数 ""int __cdecl psi::C_DGGHRD(char,char,int,int,int,double *,int,double *,int,double *,int,double *,int)"" (?C_DGGHRD@psi@@YAHDDHHHPEANH0H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgglse，该符号在函数 ""int __cdecl psi::C_DGGLSE(int,int,int,double *,int,double *,int,double *,double *,double *,double *,int)"" (?C_DGGLSE@psi@@YAHHHHPEANH0H0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggqrf，该符号在函数 ""int __cdecl psi::C_DGGQRF(int,int,int,double *,int,double *,double *,int,double *,double *,int)"" (?C_D",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:24554,Availability,error,error,24554,"LNK2019: 无法解析的外部符号 dggesx，该符号在函数 ""int __cdecl psi::C_DGGESX(char,char,char,char,int,double *,int,double *,int,int *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,int,int *,int)"" (?C_DGGESX@psi@@YAHDDDDHPEANH0HPEAH0000H0H000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggev，该符号在函数 ""int __cdecl psi::C_DGEGV(char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEGV@psi@@YAHDDHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggevx，该符号在函数 ""int __cdecl psi::C_DGGEVX(char,char,char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,int *,int *,double *,double *,double *,double *,double *,double *,double *,int,int *)"" (?C_DGGEVX@psi@@YAHDDDDHPEANH0H0000H0HPEAH10000000H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggglm，该符号在函数 ""int __cdecl psi::C_DGGGLM(int,int,int,double *,int,double *,int,double *,double *,double *,double *,int)"" (?C_DGGGLM@psi@@YAHHHHPEANH0H0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgghrd，该符号在函数 ""int __cdecl psi::C_DGGHRD(char,char,int,int,int,double *,int,double *,int,double *,int,double *,int)"" (?C_DGGHRD@psi@@YAHDDHHHPEANH0H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgglse，该符号在函数 ""int __cdecl psi::C_DGGLSE(int,int,int,double *,int,double *,int,double *,double *,double *,double *,int)"" (?C_DGGLSE@psi@@YAHHHHPEANH0H0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggqrf，该符号在函数 ""int __cdecl psi::C_DGGQRF(int,int,int,double *,int,double *,double *,int,double *,double *,int)"" (?C_DGGQRF@psi@@YAHHHHPEANH00H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggrqf，该符号在函数 ""int __cdecl psi::C_DGGRQF(int,int,int,double *,int,double *,double *,int,double *,double *,int)"" (?C_DGGRQF@psi@@YAHHHHPEANH00H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : err",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:24777,Availability,error,error,24777,"@psi@@YAHDDDDHPEANH0HPEAH0000H0H000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggev，该符号在函数 ""int __cdecl psi::C_DGEGV(char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEGV@psi@@YAHDDHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggevx，该符号在函数 ""int __cdecl psi::C_DGGEVX(char,char,char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,int *,int *,double *,double *,double *,double *,double *,double *,double *,int,int *)"" (?C_DGGEVX@psi@@YAHDDDDHPEANH0H0000H0HPEAH10000000H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggglm，该符号在函数 ""int __cdecl psi::C_DGGGLM(int,int,int,double *,int,double *,int,double *,double *,double *,double *,int)"" (?C_DGGGLM@psi@@YAHHHHPEANH0H0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgghrd，该符号在函数 ""int __cdecl psi::C_DGGHRD(char,char,int,int,int,double *,int,double *,int,double *,int,double *,int)"" (?C_DGGHRD@psi@@YAHDDHHHPEANH0H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgglse，该符号在函数 ""int __cdecl psi::C_DGGLSE(int,int,int,double *,int,double *,int,double *,double *,double *,double *,int)"" (?C_DGGLSE@psi@@YAHHHHPEANH0H0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggqrf，该符号在函数 ""int __cdecl psi::C_DGGQRF(int,int,int,double *,int,double *,double *,int,double *,double *,int)"" (?C_DGGQRF@psi@@YAHHHHPEANH00H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggrqf，该符号在函数 ""int __cdecl psi::C_DGGRQF(int,int,int,double *,int,double *,double *,int,double *,double *,int)"" (?C_DGGRQF@psi@@YAHHHHPEANH00H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggsvd3，该符号在函数 ""int __cdecl psi::C_DGGSVD3(char,char,char,int,int,int,int *,int *,double *,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *,int,int *)"" (?C_DGGSVD3@p",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:24997,Availability,error,error,24997,"int,double *,int,double *,int)"" (?C_DGEGV@psi@@YAHDDHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggevx，该符号在函数 ""int __cdecl psi::C_DGGEVX(char,char,char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,int *,int *,double *,double *,double *,double *,double *,double *,double *,int,int *)"" (?C_DGGEVX@psi@@YAHDDDDHPEANH0H0000H0HPEAH10000000H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggglm，该符号在函数 ""int __cdecl psi::C_DGGGLM(int,int,int,double *,int,double *,int,double *,double *,double *,double *,int)"" (?C_DGGGLM@psi@@YAHHHHPEANH0H0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgghrd，该符号在函数 ""int __cdecl psi::C_DGGHRD(char,char,int,int,int,double *,int,double *,int,double *,int,double *,int)"" (?C_DGGHRD@psi@@YAHDDHHHPEANH0H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgglse，该符号在函数 ""int __cdecl psi::C_DGGLSE(int,int,int,double *,int,double *,int,double *,double *,double *,double *,int)"" (?C_DGGLSE@psi@@YAHHHHPEANH0H0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggqrf，该符号在函数 ""int __cdecl psi::C_DGGQRF(int,int,int,double *,int,double *,double *,int,double *,double *,int)"" (?C_DGGQRF@psi@@YAHHHHPEANH00H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggrqf，该符号在函数 ""int __cdecl psi::C_DGGRQF(int,int,int,double *,int,double *,double *,int,double *,double *,int)"" (?C_DGGRQF@psi@@YAHHHHPEANH00H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggsvd3，该符号在函数 ""int __cdecl psi::C_DGGSVD3(char,char,char,int,int,int,int *,int *,double *,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *,int,int *)"" (?C_DGGSVD3@psi@@YAHDDDHHHPEAH0PEANH1H111H1H1H1H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggsvp3，该符号在函数 ""int __cdecl psi::C_DGGSVP3(char,char,char,int,int,int,double *,int,double *,int,double,double,int *,in",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:25220,Availability,error,error,25220,"ble *,int,double *,double *,double *,double *,int,double *,int,int *,int *,double *,double *,double *,double *,double *,double *,double *,int,int *)"" (?C_DGGEVX@psi@@YAHDDDDHPEANH0H0000H0HPEAH10000000H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggglm，该符号在函数 ""int __cdecl psi::C_DGGGLM(int,int,int,double *,int,double *,int,double *,double *,double *,double *,int)"" (?C_DGGGLM@psi@@YAHHHHPEANH0H0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgghrd，该符号在函数 ""int __cdecl psi::C_DGGHRD(char,char,int,int,int,double *,int,double *,int,double *,int,double *,int)"" (?C_DGGHRD@psi@@YAHDDHHHPEANH0H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgglse，该符号在函数 ""int __cdecl psi::C_DGGLSE(int,int,int,double *,int,double *,int,double *,double *,double *,double *,int)"" (?C_DGGLSE@psi@@YAHHHHPEANH0H0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggqrf，该符号在函数 ""int __cdecl psi::C_DGGQRF(int,int,int,double *,int,double *,double *,int,double *,double *,int)"" (?C_DGGQRF@psi@@YAHHHHPEANH00H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggrqf，该符号在函数 ""int __cdecl psi::C_DGGRQF(int,int,int,double *,int,double *,double *,int,double *,double *,int)"" (?C_DGGRQF@psi@@YAHHHHPEANH00H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggsvd3，该符号在函数 ""int __cdecl psi::C_DGGSVD3(char,char,char,int,int,int,int *,int *,double *,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *,int,int *)"" (?C_DGGSVD3@psi@@YAHDDDHHHPEAH0PEANH1H111H1H1H1H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggsvp3，该符号在函数 ""int __cdecl psi::C_DGGSVP3(char,char,char,int,int,int,double *,int,double *,int,double,double,int *,int *,double *,int,double *,int,double *,int,int *,double *,double *,int)"" (?C_DGGSVP3@psi@@YAHDDDHHHPEANH0HNNPEAH10H0H0H100H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtcon，该符号在函数 ""int __cdecl ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:25433,Availability,error,error,25433,":\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggglm，该符号在函数 ""int __cdecl psi::C_DGGGLM(int,int,int,double *,int,double *,int,double *,double *,double *,double *,int)"" (?C_DGGGLM@psi@@YAHHHHPEANH0H0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgghrd，该符号在函数 ""int __cdecl psi::C_DGGHRD(char,char,int,int,int,double *,int,double *,int,double *,int,double *,int)"" (?C_DGGHRD@psi@@YAHDDHHHPEANH0H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgglse，该符号在函数 ""int __cdecl psi::C_DGGLSE(int,int,int,double *,int,double *,int,double *,double *,double *,double *,int)"" (?C_DGGLSE@psi@@YAHHHHPEANH0H0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggqrf，该符号在函数 ""int __cdecl psi::C_DGGQRF(int,int,int,double *,int,double *,double *,int,double *,double *,int)"" (?C_DGGQRF@psi@@YAHHHHPEANH00H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggrqf，该符号在函数 ""int __cdecl psi::C_DGGRQF(int,int,int,double *,int,double *,double *,int,double *,double *,int)"" (?C_DGGRQF@psi@@YAHHHHPEANH00H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggsvd3，该符号在函数 ""int __cdecl psi::C_DGGSVD3(char,char,char,int,int,int,int *,int *,double *,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *,int,int *)"" (?C_DGGSVD3@psi@@YAHDDDHHHPEAH0PEANH1H111H1H1H1H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggsvp3，该符号在函数 ""int __cdecl psi::C_DGGSVP3(char,char,char,int,int,int,double *,int,double *,int,double,double,int *,int *,double *,int,double *,int,double *,int,int *,double *,double *,int)"" (?C_DGGSVP3@psi@@YAHDDDHHHPEANH0HNNPEAH10H0H0H100H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtcon，该符号在函数 ""int __cdecl psi::C_DGTCON(char,int,double *,double *,double *,double *,int *,double,double *,double *,int *)"" (?C_DGTCON@psi@@YAHDHPEAN000PEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtrfs，该符号在",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:25646,Availability,error,error,25646,"or LNK2019: 无法解析的外部符号 dgghrd，该符号在函数 ""int __cdecl psi::C_DGGHRD(char,char,int,int,int,double *,int,double *,int,double *,int,double *,int)"" (?C_DGGHRD@psi@@YAHDDHHHPEANH0H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgglse，该符号在函数 ""int __cdecl psi::C_DGGLSE(int,int,int,double *,int,double *,int,double *,double *,double *,double *,int)"" (?C_DGGLSE@psi@@YAHHHHPEANH0H0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggqrf，该符号在函数 ""int __cdecl psi::C_DGGQRF(int,int,int,double *,int,double *,double *,int,double *,double *,int)"" (?C_DGGQRF@psi@@YAHHHHPEANH00H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggrqf，该符号在函数 ""int __cdecl psi::C_DGGRQF(int,int,int,double *,int,double *,double *,int,double *,double *,int)"" (?C_DGGRQF@psi@@YAHHHHPEANH00H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggsvd3，该符号在函数 ""int __cdecl psi::C_DGGSVD3(char,char,char,int,int,int,int *,int *,double *,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *,int,int *)"" (?C_DGGSVD3@psi@@YAHDDDHHHPEAH0PEANH1H111H1H1H1H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggsvp3，该符号在函数 ""int __cdecl psi::C_DGGSVP3(char,char,char,int,int,int,double *,int,double *,int,double,double,int *,int *,double *,int,double *,int,double *,int,int *,double *,double *,int)"" (?C_DGGSVP3@psi@@YAHDDDHHHPEANH0HNNPEAH10H0H0H100H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtcon，该符号在函数 ""int __cdecl psi::C_DGTCON(char,int,double *,double *,double *,double *,int *,double,double *,double *,int *)"" (?C_DGTCON@psi@@YAHDHPEAN000PEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtrfs，该符号在函数 ""int __cdecl psi::C_DGTRFS(char,int,int,double *,double *,double *,double *,double *,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGTRFS@psi@@YAHDHHPEAN000000PEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:25949,Availability,error,error,25949,"t,double *,int,double *,double *,double *,double *,int)"" (?C_DGGLSE@psi@@YAHHHHPEANH0H0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggqrf，该符号在函数 ""int __cdecl psi::C_DGGQRF(int,int,int,double *,int,double *,double *,int,double *,double *,int)"" (?C_DGGQRF@psi@@YAHHHHPEANH00H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggrqf，该符号在函数 ""int __cdecl psi::C_DGGRQF(int,int,int,double *,int,double *,double *,int,double *,double *,int)"" (?C_DGGRQF@psi@@YAHHHHPEANH00H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggsvd3，该符号在函数 ""int __cdecl psi::C_DGGSVD3(char,char,char,int,int,int,int *,int *,double *,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *,int,int *)"" (?C_DGGSVD3@psi@@YAHDDDHHHPEAH0PEANH1H111H1H1H1H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggsvp3，该符号在函数 ""int __cdecl psi::C_DGGSVP3(char,char,char,int,int,int,double *,int,double *,int,double,double,int *,int *,double *,int,double *,int,double *,int,int *,double *,double *,int)"" (?C_DGGSVP3@psi@@YAHDDDHHHPEANH0HNNPEAH10H0H0H100H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtcon，该符号在函数 ""int __cdecl psi::C_DGTCON(char,int,double *,double *,double *,double *,int *,double,double *,double *,int *)"" (?C_DGTCON@psi@@YAHDHPEAN000PEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtrfs，该符号在函数 ""int __cdecl psi::C_DGTRFS(char,int,int,double *,double *,double *,double *,double *,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGTRFS@psi@@YAHDHHPEAN000000PEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtsv，该符号在函数 ""int __cdecl psi::C_DGTSV(int,int,double *,double *,double *,double *,int)"" (?C_DGTSV@psi@@YAHHHPEAN000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtsvx，该符号在函数 ""int __cdecl psi::C_DGTSVX(char,char,int,int,double *,double *,double *,double *",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:26258,Availability,error,error,26258,""" (?C_DGGQRF@psi@@YAHHHHPEANH00H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggrqf，该符号在函数 ""int __cdecl psi::C_DGGRQF(int,int,int,double *,int,double *,double *,int,double *,double *,int)"" (?C_DGGRQF@psi@@YAHHHHPEANH00H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggsvd3，该符号在函数 ""int __cdecl psi::C_DGGSVD3(char,char,char,int,int,int,int *,int *,double *,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *,int,int *)"" (?C_DGGSVD3@psi@@YAHDDDHHHPEAH0PEANH1H111H1H1H1H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggsvp3，该符号在函数 ""int __cdecl psi::C_DGGSVP3(char,char,char,int,int,int,double *,int,double *,int,double,double,int *,int *,double *,int,double *,int,double *,int,int *,double *,double *,int)"" (?C_DGGSVP3@psi@@YAHDDDHHHPEANH0HNNPEAH10H0H0H100H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtcon，该符号在函数 ""int __cdecl psi::C_DGTCON(char,int,double *,double *,double *,double *,int *,double,double *,double *,int *)"" (?C_DGTCON@psi@@YAHDHPEAN000PEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtrfs，该符号在函数 ""int __cdecl psi::C_DGTRFS(char,int,int,double *,double *,double *,double *,double *,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGTRFS@psi@@YAHDHHPEAN000000PEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtsv，该符号在函数 ""int __cdecl psi::C_DGTSV(int,int,double *,double *,double *,double *,int)"" (?C_DGTSV@psi@@YAHHHPEAN000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtsvx，该符号在函数 ""int __cdecl psi::C_DGTSVX(char,char,int,int,double *,double *,double *,double *,double *,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DGTSVX@psi@@YAHDDHHPEAN000000PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgttrf，该符号在函数 ""int __cdecl psi::C_DGTTRF(int,double *,double *,double *,double *,int *)""",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:26487,Availability,error,error,26487,".lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggsvd3，该符号在函数 ""int __cdecl psi::C_DGGSVD3(char,char,char,int,int,int,int *,int *,double *,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *,int,int *)"" (?C_DGGSVD3@psi@@YAHDDDHHHPEAH0PEANH1H111H1H1H1H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggsvp3，该符号在函数 ""int __cdecl psi::C_DGGSVP3(char,char,char,int,int,int,double *,int,double *,int,double,double,int *,int *,double *,int,double *,int,double *,int,int *,double *,double *,int)"" (?C_DGGSVP3@psi@@YAHDDDHHHPEANH0HNNPEAH10H0H0H100H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtcon，该符号在函数 ""int __cdecl psi::C_DGTCON(char,int,double *,double *,double *,double *,int *,double,double *,double *,int *)"" (?C_DGTCON@psi@@YAHDHPEAN000PEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtrfs，该符号在函数 ""int __cdecl psi::C_DGTRFS(char,int,int,double *,double *,double *,double *,double *,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGTRFS@psi@@YAHDHHPEAN000000PEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtsv，该符号在函数 ""int __cdecl psi::C_DGTSV(int,int,double *,double *,double *,double *,int)"" (?C_DGTSV@psi@@YAHHHPEAN000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtsvx，该符号在函数 ""int __cdecl psi::C_DGTSVX(char,char,int,int,double *,double *,double *,double *,double *,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DGTSVX@psi@@YAHDDHHPEAN000000PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgttrf，该符号在函数 ""int __cdecl psi::C_DGTTRF(int,double *,double *,double *,double *,int *)"" (?C_DGTTRF@psi@@YAHHPEAN000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgttrs，该符号在函数 ""int __cdecl psi::C_DGTTRS(char,int,int,double *,double *,double *,double *,int *,double *,int)"" (?C_DGTTRS@psi@@YAHDHHPEAN000PEAH0H@Z) 中被引用; F:\qt.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:26783,Availability,error,error,26783,"?C_DGGSVD3@psi@@YAHDDDHHHPEAH0PEANH1H111H1H1H1H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggsvp3，该符号在函数 ""int __cdecl psi::C_DGGSVP3(char,char,char,int,int,int,double *,int,double *,int,double,double,int *,int *,double *,int,double *,int,double *,int,int *,double *,double *,int)"" (?C_DGGSVP3@psi@@YAHDDDHHHPEANH0HNNPEAH10H0H0H100H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtcon，该符号在函数 ""int __cdecl psi::C_DGTCON(char,int,double *,double *,double *,double *,int *,double,double *,double *,int *)"" (?C_DGTCON@psi@@YAHDHPEAN000PEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtrfs，该符号在函数 ""int __cdecl psi::C_DGTRFS(char,int,int,double *,double *,double *,double *,double *,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGTRFS@psi@@YAHDHHPEAN000000PEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtsv，该符号在函数 ""int __cdecl psi::C_DGTSV(int,int,double *,double *,double *,double *,int)"" (?C_DGTSV@psi@@YAHHHPEAN000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtsvx，该符号在函数 ""int __cdecl psi::C_DGTSVX(char,char,int,int,double *,double *,double *,double *,double *,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DGTSVX@psi@@YAHDDHHPEAN000000PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgttrf，该符号在函数 ""int __cdecl psi::C_DGTTRF(int,double *,double *,double *,double *,int *)"" (?C_DGTTRF@psi@@YAHHPEAN000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgttrs，该符号在函数 ""int __cdecl psi::C_DGTTRS(char,int,int,double *,double *,double *,double *,int *,double *,int)"" (?C_DGTTRS@psi@@YAHDHHPEAN000PEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhgeqz，该符号在函数 ""int __cdecl psi::C_DHGEQZ(char,char,char,int,int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DHGEQZ@psi@@YAHDDDHHHPE",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:26968,Availability,error,error,26968,"*,int *,double *,int,double *,int,double *,int,int *,double *,double *,int)"" (?C_DGGSVP3@psi@@YAHDDDHHHPEANH0HNNPEAH10H0H0H100H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtcon，该符号在函数 ""int __cdecl psi::C_DGTCON(char,int,double *,double *,double *,double *,int *,double,double *,double *,int *)"" (?C_DGTCON@psi@@YAHDHPEAN000PEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtrfs，该符号在函数 ""int __cdecl psi::C_DGTRFS(char,int,int,double *,double *,double *,double *,double *,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGTRFS@psi@@YAHDHHPEAN000000PEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtsv，该符号在函数 ""int __cdecl psi::C_DGTSV(int,int,double *,double *,double *,double *,int)"" (?C_DGTSV@psi@@YAHHHPEAN000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtsvx，该符号在函数 ""int __cdecl psi::C_DGTSVX(char,char,int,int,double *,double *,double *,double *,double *,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DGTSVX@psi@@YAHDDHHPEAN000000PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgttrf，该符号在函数 ""int __cdecl psi::C_DGTTRF(int,double *,double *,double *,double *,int *)"" (?C_DGTTRF@psi@@YAHHPEAN000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgttrs，该符号在函数 ""int __cdecl psi::C_DGTTRS(char,int,int,double *,double *,double *,double *,int *,double *,int)"" (?C_DGTTRS@psi@@YAHDHHPEAN000PEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhgeqz，该符号在函数 ""int __cdecl psi::C_DHGEQZ(char,char,char,int,int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DHGEQZ@psi@@YAHDDDHHHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhsein，该符号在函数 ""int __cdecl psi::C_DHSEIN(char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int,int *,double *,int *,int *)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:27243,Availability,error,error,27243,"CON(char,int,double *,double *,double *,double *,int *,double,double *,double *,int *)"" (?C_DGTCON@psi@@YAHDHPEAN000PEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtrfs，该符号在函数 ""int __cdecl psi::C_DGTRFS(char,int,int,double *,double *,double *,double *,double *,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGTRFS@psi@@YAHDHHPEAN000000PEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtsv，该符号在函数 ""int __cdecl psi::C_DGTSV(int,int,double *,double *,double *,double *,int)"" (?C_DGTSV@psi@@YAHHHPEAN000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtsvx，该符号在函数 ""int __cdecl psi::C_DGTSVX(char,char,int,int,double *,double *,double *,double *,double *,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DGTSVX@psi@@YAHDDHHPEAN000000PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgttrf，该符号在函数 ""int __cdecl psi::C_DGTTRF(int,double *,double *,double *,double *,int *)"" (?C_DGTTRF@psi@@YAHHPEAN000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgttrs，该符号在函数 ""int __cdecl psi::C_DGTTRS(char,int,int,double *,double *,double *,double *,int *,double *,int)"" (?C_DGTTRS@psi@@YAHDHHPEAN000PEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhgeqz，该符号在函数 ""int __cdecl psi::C_DHGEQZ(char,char,char,int,int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DHGEQZ@psi@@YAHDDDHHHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhsein，该符号在函数 ""int __cdecl psi::C_DHSEIN(char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int,int *,double *,int *,int *)"" (?C_DHSEIN@psi@@YAHDDDHPEANH000H0HHPEAH011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhseqr，该符号在函数 ""int __cdecl psi::C_DHSEQR(char,char,int,int,int,double *,int,double *,double *,double *,int,double *,int",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:27431,Availability,error,error,27431,"号在函数 ""int __cdecl psi::C_DGTRFS(char,int,int,double *,double *,double *,double *,double *,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGTRFS@psi@@YAHDHHPEAN000000PEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtsv，该符号在函数 ""int __cdecl psi::C_DGTSV(int,int,double *,double *,double *,double *,int)"" (?C_DGTSV@psi@@YAHHHPEAN000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtsvx，该符号在函数 ""int __cdecl psi::C_DGTSVX(char,char,int,int,double *,double *,double *,double *,double *,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DGTSVX@psi@@YAHDDHHPEAN000000PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgttrf，该符号在函数 ""int __cdecl psi::C_DGTTRF(int,double *,double *,double *,double *,int *)"" (?C_DGTTRF@psi@@YAHHPEAN000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgttrs，该符号在函数 ""int __cdecl psi::C_DGTTRS(char,int,int,double *,double *,double *,double *,int *,double *,int)"" (?C_DGTTRS@psi@@YAHDHHPEAN000PEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhgeqz，该符号在函数 ""int __cdecl psi::C_DHGEQZ(char,char,char,int,int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DHGEQZ@psi@@YAHDDDHHHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhsein，该符号在函数 ""int __cdecl psi::C_DHSEIN(char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int,int *,double *,int *,int *)"" (?C_DHSEIN@psi@@YAHDDDHPEANH000H0HHPEAH011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhseqr，该符号在函数 ""int __cdecl psi::C_DHSEQR(char,char,int,int,int,double *,int,double *,double *,double *,int,double *,int)"" (?C_DHSEQR@psi@@YAHDDHHHPEANH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopgtr，该符号在函数 ""int __cdecl psi::C_DOPGTR(char,int,double *,double *,double *,int,double *)"" (?C",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:27645,Availability,error,error,27645,"ack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtsv，该符号在函数 ""int __cdecl psi::C_DGTSV(int,int,double *,double *,double *,double *,int)"" (?C_DGTSV@psi@@YAHHHPEAN000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtsvx，该符号在函数 ""int __cdecl psi::C_DGTSVX(char,char,int,int,double *,double *,double *,double *,double *,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DGTSVX@psi@@YAHDDHHPEAN000000PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgttrf，该符号在函数 ""int __cdecl psi::C_DGTTRF(int,double *,double *,double *,double *,int *)"" (?C_DGTTRF@psi@@YAHHPEAN000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgttrs，该符号在函数 ""int __cdecl psi::C_DGTTRS(char,int,int,double *,double *,double *,double *,int *,double *,int)"" (?C_DGTTRS@psi@@YAHDHHPEAN000PEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhgeqz，该符号在函数 ""int __cdecl psi::C_DHGEQZ(char,char,char,int,int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DHGEQZ@psi@@YAHDDDHHHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhsein，该符号在函数 ""int __cdecl psi::C_DHSEIN(char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int,int *,double *,int *,int *)"" (?C_DHSEIN@psi@@YAHDDDHPEANH000H0HHPEAH011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhseqr，该符号在函数 ""int __cdecl psi::C_DHSEQR(char,char,int,int,int,double *,int,double *,double *,double *,int,double *,int)"" (?C_DHSEQR@psi@@YAHDDHHHPEANH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopgtr，该符号在函数 ""int __cdecl psi::C_DOPGTR(char,int,double *,double *,double *,int,double *)"" (?C_DOPGTR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopmtr，该符号在函数 ""int __cdecl psi::C_DOPMTR(char,char,char,int,int,double *,double *,double *,int,double *)"" (?C_DOPMTR@psi@@YAHDDDHHPEAN00H0@Z) 中被引用; F",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:27916,Availability,error,error,27916,"TSVX(char,char,int,int,double *,double *,double *,double *,double *,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DGTSVX@psi@@YAHDDHHPEAN000000PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgttrf，该符号在函数 ""int __cdecl psi::C_DGTTRF(int,double *,double *,double *,double *,int *)"" (?C_DGTTRF@psi@@YAHHPEAN000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgttrs，该符号在函数 ""int __cdecl psi::C_DGTTRS(char,int,int,double *,double *,double *,double *,int *,double *,int)"" (?C_DGTTRS@psi@@YAHDHHPEAN000PEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhgeqz，该符号在函数 ""int __cdecl psi::C_DHGEQZ(char,char,char,int,int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DHGEQZ@psi@@YAHDDDHHHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhsein，该符号在函数 ""int __cdecl psi::C_DHSEIN(char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int,int *,double *,int *,int *)"" (?C_DHSEIN@psi@@YAHDDDHPEANH000H0HHPEAH011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhseqr，该符号在函数 ""int __cdecl psi::C_DHSEQR(char,char,int,int,int,double *,int,double *,double *,double *,int,double *,int)"" (?C_DHSEQR@psi@@YAHDDHHHPEANH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopgtr，该符号在函数 ""int __cdecl psi::C_DOPGTR(char,int,double *,double *,double *,int,double *)"" (?C_DOPGTR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopmtr，该符号在函数 ""int __cdecl psi::C_DOPMTR(char,char,char,int,int,double *,double *,double *,int,double *)"" (?C_DOPMTR@psi@@YAHDDDHHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgbr，该符号在函数 ""int __cdecl psi::C_DORGBR(char,int,int,int,double *,int,double *,double *,int)"" (?C_DORGBR@psi@@YAHDHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorghr，该符号在函数 ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:28176,Availability,error,error,28176,"trf，该符号在函数 ""int __cdecl psi::C_DGTTRF(int,double *,double *,double *,double *,int *)"" (?C_DGTTRF@psi@@YAHHPEAN000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgttrs，该符号在函数 ""int __cdecl psi::C_DGTTRS(char,int,int,double *,double *,double *,double *,int *,double *,int)"" (?C_DGTTRS@psi@@YAHDHHPEAN000PEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhgeqz，该符号在函数 ""int __cdecl psi::C_DHGEQZ(char,char,char,int,int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DHGEQZ@psi@@YAHDDDHHHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhsein，该符号在函数 ""int __cdecl psi::C_DHSEIN(char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int,int *,double *,int *,int *)"" (?C_DHSEIN@psi@@YAHDDDHPEANH000H0HHPEAH011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhseqr，该符号在函数 ""int __cdecl psi::C_DHSEQR(char,char,int,int,int,double *,int,double *,double *,double *,int,double *,int)"" (?C_DHSEQR@psi@@YAHDDHHHPEANH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopgtr，该符号在函数 ""int __cdecl psi::C_DOPGTR(char,int,double *,double *,double *,int,double *)"" (?C_DOPGTR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopmtr，该符号在函数 ""int __cdecl psi::C_DOPMTR(char,char,char,int,int,double *,double *,double *,int,double *)"" (?C_DOPMTR@psi@@YAHDDDHHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgbr，该符号在函数 ""int __cdecl psi::C_DORGBR(char,int,int,int,double *,int,double *,double *,int)"" (?C_DORGBR@psi@@YAHDHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorghr，该符号在函数 ""int __cdecl psi::C_DORGHR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGHR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorglq，该符号在函数 ""int __cdecl psi::C_DORGLQ(int,int,int,double *,int,dou",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:28401,Availability,error,error,28401,"decl psi::C_DGTTRS(char,int,int,double *,double *,double *,double *,int *,double *,int)"" (?C_DGTTRS@psi@@YAHDHHPEAN000PEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhgeqz，该符号在函数 ""int __cdecl psi::C_DHGEQZ(char,char,char,int,int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DHGEQZ@psi@@YAHDDDHHHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhsein，该符号在函数 ""int __cdecl psi::C_DHSEIN(char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int,int *,double *,int *,int *)"" (?C_DHSEIN@psi@@YAHDDDHPEANH000H0HHPEAH011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhseqr，该符号在函数 ""int __cdecl psi::C_DHSEQR(char,char,int,int,int,double *,int,double *,double *,double *,int,double *,int)"" (?C_DHSEQR@psi@@YAHDDHHHPEANH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopgtr，该符号在函数 ""int __cdecl psi::C_DOPGTR(char,int,double *,double *,double *,int,double *)"" (?C_DOPGTR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopmtr，该符号在函数 ""int __cdecl psi::C_DOPMTR(char,char,char,int,int,double *,double *,double *,int,double *)"" (?C_DOPMTR@psi@@YAHDDDHHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgbr，该符号在函数 ""int __cdecl psi::C_DORGBR(char,int,int,int,double *,int,double *,double *,int)"" (?C_DORGBR@psi@@YAHDHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorghr，该符号在函数 ""int __cdecl psi::C_DORGHR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGHR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorglq，该符号在函数 ""int __cdecl psi::C_DORGLQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGLQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgql，该符号在函数 ""int __cdecl psi::C_DORGQL(int,int,int,double *,int,double *,double *,int)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:28590,Availability,error,error,28590,"，该符号在函数 ""int __cdecl psi::C_DHGEQZ(char,char,char,int,int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DHGEQZ@psi@@YAHDDDHHHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhsein，该符号在函数 ""int __cdecl psi::C_DHSEIN(char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int,int *,double *,int *,int *)"" (?C_DHSEIN@psi@@YAHDDDHPEANH000H0HHPEAH011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhseqr，该符号在函数 ""int __cdecl psi::C_DHSEQR(char,char,int,int,int,double *,int,double *,double *,double *,int,double *,int)"" (?C_DHSEQR@psi@@YAHDDHHHPEANH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopgtr，该符号在函数 ""int __cdecl psi::C_DOPGTR(char,int,double *,double *,double *,int,double *)"" (?C_DOPGTR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopmtr，该符号在函数 ""int __cdecl psi::C_DOPMTR(char,char,char,int,int,double *,double *,double *,int,double *)"" (?C_DOPMTR@psi@@YAHDDDHHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgbr，该符号在函数 ""int __cdecl psi::C_DORGBR(char,int,int,int,double *,int,double *,double *,int)"" (?C_DORGBR@psi@@YAHDHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorghr，该符号在函数 ""int __cdecl psi::C_DORGHR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGHR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorglq，该符号在函数 ""int __cdecl psi::C_DORGLQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGLQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgql，该符号在函数 ""int __cdecl psi::C_DORGQL(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQL@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgqr，该符号在函数 ""int __cdecl psi::C_DORGQR(int,int,int,double *,int,double *,double *,int)"" (?C_DOR",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:28796,Availability,error,error,28796," 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhsein，该符号在函数 ""int __cdecl psi::C_DHSEIN(char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int,int *,double *,int *,int *)"" (?C_DHSEIN@psi@@YAHDDDHPEANH000H0HHPEAH011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhseqr，该符号在函数 ""int __cdecl psi::C_DHSEQR(char,char,int,int,int,double *,int,double *,double *,double *,int,double *,int)"" (?C_DHSEQR@psi@@YAHDDHHHPEANH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopgtr，该符号在函数 ""int __cdecl psi::C_DOPGTR(char,int,double *,double *,double *,int,double *)"" (?C_DOPGTR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopmtr，该符号在函数 ""int __cdecl psi::C_DOPMTR(char,char,char,int,int,double *,double *,double *,int,double *)"" (?C_DOPMTR@psi@@YAHDDDHHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgbr，该符号在函数 ""int __cdecl psi::C_DORGBR(char,int,int,int,double *,int,double *,double *,int)"" (?C_DORGBR@psi@@YAHDHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorghr，该符号在函数 ""int __cdecl psi::C_DORGHR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGHR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorglq，该符号在函数 ""int __cdecl psi::C_DORGLQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGLQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgql，该符号在函数 ""int __cdecl psi::C_DORGQL(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQL@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgqr，该符号在函数 ""int __cdecl psi::C_DORGQR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgrq，该符号在函数 ""int __cdecl psi::C_DORGRQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGRQ@psi@@YAH",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:28990,Availability,error,error,28990,",double *,int *,int *)"" (?C_DHSEIN@psi@@YAHDDDHPEANH000H0HHPEAH011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhseqr，该符号在函数 ""int __cdecl psi::C_DHSEQR(char,char,int,int,int,double *,int,double *,double *,double *,int,double *,int)"" (?C_DHSEQR@psi@@YAHDDHHHPEANH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopgtr，该符号在函数 ""int __cdecl psi::C_DOPGTR(char,int,double *,double *,double *,int,double *)"" (?C_DOPGTR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopmtr，该符号在函数 ""int __cdecl psi::C_DOPMTR(char,char,char,int,int,double *,double *,double *,int,double *)"" (?C_DOPMTR@psi@@YAHDDDHHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgbr，该符号在函数 ""int __cdecl psi::C_DORGBR(char,int,int,int,double *,int,double *,double *,int)"" (?C_DORGBR@psi@@YAHDHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorghr，该符号在函数 ""int __cdecl psi::C_DORGHR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGHR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorglq，该符号在函数 ""int __cdecl psi::C_DORGLQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGLQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgql，该符号在函数 ""int __cdecl psi::C_DORGQL(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQL@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgqr，该符号在函数 ""int __cdecl psi::C_DORGQR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgrq，该符号在函数 ""int __cdecl psi::C_DORGRQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGRQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgtr，该符号在函数 ""int __cdecl psi::C_DORGTR(char,int,double *,int,double *,double *,int)"" (?C_DORGTR@psi@@YAHDHPEAN",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:29178,Availability,error,error,29178,",int,int,double *,int,double *,double *,double *,int,double *,int)"" (?C_DHSEQR@psi@@YAHDDHHHPEANH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopgtr，该符号在函数 ""int __cdecl psi::C_DOPGTR(char,int,double *,double *,double *,int,double *)"" (?C_DOPGTR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopmtr，该符号在函数 ""int __cdecl psi::C_DOPMTR(char,char,char,int,int,double *,double *,double *,int,double *)"" (?C_DOPMTR@psi@@YAHDDDHHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgbr，该符号在函数 ""int __cdecl psi::C_DORGBR(char,int,int,int,double *,int,double *,double *,int)"" (?C_DORGBR@psi@@YAHDHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorghr，该符号在函数 ""int __cdecl psi::C_DORGHR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGHR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorglq，该符号在函数 ""int __cdecl psi::C_DORGLQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGLQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgql，该符号在函数 ""int __cdecl psi::C_DORGQL(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQL@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgqr，该符号在函数 ""int __cdecl psi::C_DORGQR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgrq，该符号在函数 ""int __cdecl psi::C_DORGRQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGRQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgtr，该符号在函数 ""int __cdecl psi::C_DORGTR(char,int,double *,int,double *,double *,int)"" (?C_DORGTR@psi@@YAHDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormbr，该符号在函数 ""int __cdecl psi::C_DORMBR(char,char,char,int,int,int,double *,int,double *,double *,int,double *,int)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:29366,Availability,error,error,29366,"t __cdecl psi::C_DOPGTR(char,int,double *,double *,double *,int,double *)"" (?C_DOPGTR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopmtr，该符号在函数 ""int __cdecl psi::C_DOPMTR(char,char,char,int,int,double *,double *,double *,int,double *)"" (?C_DOPMTR@psi@@YAHDDDHHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgbr，该符号在函数 ""int __cdecl psi::C_DORGBR(char,int,int,int,double *,int,double *,double *,int)"" (?C_DORGBR@psi@@YAHDHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorghr，该符号在函数 ""int __cdecl psi::C_DORGHR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGHR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorglq，该符号在函数 ""int __cdecl psi::C_DORGLQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGLQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgql，该符号在函数 ""int __cdecl psi::C_DORGQL(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQL@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgqr，该符号在函数 ""int __cdecl psi::C_DORGQR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgrq，该符号在函数 ""int __cdecl psi::C_DORGRQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGRQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgtr，该符号在函数 ""int __cdecl psi::C_DORGTR(char,int,double *,int,double *,double *,int)"" (?C_DORGTR@psi@@YAHDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormbr，该符号在函数 ""int __cdecl psi::C_DORMBR(char,char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMBR@psi@@YAHDDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormhr，该符号在函数 ""int __cdecl psi::C_DORMHR(char,char,int,int,int,int,double *,int,dou",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:29554,Availability,error,error,29554,"nt __cdecl psi::C_DOPMTR(char,char,char,int,int,double *,double *,double *,int,double *)"" (?C_DOPMTR@psi@@YAHDDDHHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgbr，该符号在函数 ""int __cdecl psi::C_DORGBR(char,int,int,int,double *,int,double *,double *,int)"" (?C_DORGBR@psi@@YAHDHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorghr，该符号在函数 ""int __cdecl psi::C_DORGHR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGHR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorglq，该符号在函数 ""int __cdecl psi::C_DORGLQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGLQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgql，该符号在函数 ""int __cdecl psi::C_DORGQL(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQL@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgqr，该符号在函数 ""int __cdecl psi::C_DORGQR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgrq，该符号在函数 ""int __cdecl psi::C_DORGRQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGRQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgtr，该符号在函数 ""int __cdecl psi::C_DORGTR(char,int,double *,int,double *,double *,int)"" (?C_DORGTR@psi@@YAHDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormbr，该符号在函数 ""int __cdecl psi::C_DORMBR(char,char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMBR@psi@@YAHDDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormhr，该符号在函数 ""int __cdecl psi::C_DORMHR(char,char,int,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMHR@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormlq，该符号在函数 ""int __cdecl psi::C_DORMLQ(char,char,",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:29742,Availability,error,error,29742,"号 dorgbr，该符号在函数 ""int __cdecl psi::C_DORGBR(char,int,int,int,double *,int,double *,double *,int)"" (?C_DORGBR@psi@@YAHDHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorghr，该符号在函数 ""int __cdecl psi::C_DORGHR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGHR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorglq，该符号在函数 ""int __cdecl psi::C_DORGLQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGLQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgql，该符号在函数 ""int __cdecl psi::C_DORGQL(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQL@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgqr，该符号在函数 ""int __cdecl psi::C_DORGQR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgrq，该符号在函数 ""int __cdecl psi::C_DORGRQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGRQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgtr，该符号在函数 ""int __cdecl psi::C_DORGTR(char,int,double *,int,double *,double *,int)"" (?C_DORGTR@psi@@YAHDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormbr，该符号在函数 ""int __cdecl psi::C_DORMBR(char,char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMBR@psi@@YAHDDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormhr，该符号在函数 ""int __cdecl psi::C_DORMHR(char,char,int,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMHR@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormlq，该符号在函数 ""int __cdecl psi::C_DORMLQ(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMLQ@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormql，该符号在函数 ""int __cde",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:29930,Availability,error,error,29930,"无法解析的外部符号 dorghr，该符号在函数 ""int __cdecl psi::C_DORGHR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGHR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorglq，该符号在函数 ""int __cdecl psi::C_DORGLQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGLQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgql，该符号在函数 ""int __cdecl psi::C_DORGQL(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQL@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgqr，该符号在函数 ""int __cdecl psi::C_DORGQR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgrq，该符号在函数 ""int __cdecl psi::C_DORGRQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGRQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgtr，该符号在函数 ""int __cdecl psi::C_DORGTR(char,int,double *,int,double *,double *,int)"" (?C_DORGTR@psi@@YAHDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormbr，该符号在函数 ""int __cdecl psi::C_DORMBR(char,char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMBR@psi@@YAHDDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormhr，该符号在函数 ""int __cdecl psi::C_DORMHR(char,char,int,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMHR@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormlq，该符号在函数 ""int __cdecl psi::C_DORMLQ(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMLQ@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormql，该符号在函数 ""int __cdecl psi::C_DORMQL(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMQL@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:30114,Availability,error,error,30114,"lq，该符号在函数 ""int __cdecl psi::C_DORGLQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGLQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgql，该符号在函数 ""int __cdecl psi::C_DORGQL(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQL@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgqr，该符号在函数 ""int __cdecl psi::C_DORGQR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgrq，该符号在函数 ""int __cdecl psi::C_DORGRQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGRQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgtr，该符号在函数 ""int __cdecl psi::C_DORGTR(char,int,double *,int,double *,double *,int)"" (?C_DORGTR@psi@@YAHDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormbr，该符号在函数 ""int __cdecl psi::C_DORMBR(char,char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMBR@psi@@YAHDDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormhr，该符号在函数 ""int __cdecl psi::C_DORMHR(char,char,int,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMHR@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormlq，该符号在函数 ""int __cdecl psi::C_DORMLQ(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMLQ@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormql，该符号在函数 ""int __cdecl psi::C_DORMQL(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMQL@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormqr，该符号在函数 ""int __cdecl psi::C_DORMQR(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMQR@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LN",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:30335,Availability,error,error,30335,"GQL(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQL@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgqr，该符号在函数 ""int __cdecl psi::C_DORGQR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgrq，该符号在函数 ""int __cdecl psi::C_DORGRQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGRQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgtr，该符号在函数 ""int __cdecl psi::C_DORGTR(char,int,double *,int,double *,double *,int)"" (?C_DORGTR@psi@@YAHDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormbr，该符号在函数 ""int __cdecl psi::C_DORMBR(char,char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMBR@psi@@YAHDDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormhr，该符号在函数 ""int __cdecl psi::C_DORMHR(char,char,int,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMHR@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormlq，该符号在函数 ""int __cdecl psi::C_DORMLQ(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMLQ@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormql，该符号在函数 ""int __cdecl psi::C_DORMQL(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMQL@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormqr，该符号在函数 ""int __cdecl psi::C_DORMQR(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMQR@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormr3，该符号在函数 ""int __cdecl psi::C_DORMR3(char,char,int,int,int,int,double *,int,double *,double *,int,double *)"" (?C_DORMR3@psi@@YAHDDHHHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:30555,Availability,error,error,30555,"double *,double *,int)"" (?C_DORGQR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgrq，该符号在函数 ""int __cdecl psi::C_DORGRQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGRQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgtr，该符号在函数 ""int __cdecl psi::C_DORGTR(char,int,double *,int,double *,double *,int)"" (?C_DORGTR@psi@@YAHDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormbr，该符号在函数 ""int __cdecl psi::C_DORMBR(char,char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMBR@psi@@YAHDDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormhr，该符号在函数 ""int __cdecl psi::C_DORMHR(char,char,int,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMHR@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormlq，该符号在函数 ""int __cdecl psi::C_DORMLQ(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMLQ@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormql，该符号在函数 ""int __cdecl psi::C_DORMQL(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMQL@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormqr，该符号在函数 ""int __cdecl psi::C_DORMQR(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMQR@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormr3，该符号在函数 ""int __cdecl psi::C_DORMR3(char,char,int,int,int,int,double *,int,double *,double *,int,double *)"" (?C_DORMR3@psi@@YAHDDHHHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormrq，该符号在函数 ""int __cdecl psi::C_DORMRQ(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMRQ@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:30770,Availability,error,error,30770,"_DORGRQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgtr，该符号在函数 ""int __cdecl psi::C_DORGTR(char,int,double *,int,double *,double *,int)"" (?C_DORGTR@psi@@YAHDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormbr，该符号在函数 ""int __cdecl psi::C_DORMBR(char,char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMBR@psi@@YAHDDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormhr，该符号在函数 ""int __cdecl psi::C_DORMHR(char,char,int,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMHR@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormlq，该符号在函数 ""int __cdecl psi::C_DORMLQ(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMLQ@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormql，该符号在函数 ""int __cdecl psi::C_DORMQL(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMQL@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormqr，该符号在函数 ""int __cdecl psi::C_DORMQR(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMQR@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormr3，该符号在函数 ""int __cdecl psi::C_DORMR3(char,char,int,int,int,int,double *,int,double *,double *,int,double *)"" (?C_DORMR3@psi@@YAHDDHHHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormrq，该符号在函数 ""int __cdecl psi::C_DORMRQ(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMRQ@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormrz，该符号在函数 ""int __cdecl psi::C_DORMRZ(char,char,int,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMRZ@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK20",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:30985,Availability,error,error,30985,"中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormbr，该符号在函数 ""int __cdecl psi::C_DORMBR(char,char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMBR@psi@@YAHDDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormhr，该符号在函数 ""int __cdecl psi::C_DORMHR(char,char,int,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMHR@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormlq，该符号在函数 ""int __cdecl psi::C_DORMLQ(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMLQ@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormql，该符号在函数 ""int __cdecl psi::C_DORMQL(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMQL@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormqr，该符号在函数 ""int __cdecl psi::C_DORMQR(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMQR@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormr3，该符号在函数 ""int __cdecl psi::C_DORMR3(char,char,int,int,int,int,double *,int,double *,double *,int,double *)"" (?C_DORMR3@psi@@YAHDDHHHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormrq，该符号在函数 ""int __cdecl psi::C_DORMRQ(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMRQ@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormrz，该符号在函数 ""int __cdecl psi::C_DORMRZ(char,char,int,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMRZ@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormtr，该符号在函数 ""int __cdecl psi::C_DORMTR(char,char,char,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMTR@psi@@YAHDDDHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:31200,Availability,error,error,31200,"0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormhr，该符号在函数 ""int __cdecl psi::C_DORMHR(char,char,int,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMHR@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormlq，该符号在函数 ""int __cdecl psi::C_DORMLQ(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMLQ@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormql，该符号在函数 ""int __cdecl psi::C_DORMQL(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMQL@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormqr，该符号在函数 ""int __cdecl psi::C_DORMQR(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMQR@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormr3，该符号在函数 ""int __cdecl psi::C_DORMR3(char,char,int,int,int,int,double *,int,double *,double *,int,double *)"" (?C_DORMR3@psi@@YAHDDHHHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormrq，该符号在函数 ""int __cdecl psi::C_DORMRQ(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMRQ@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormrz，该符号在函数 ""int __cdecl psi::C_DORMRZ(char,char,int,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMRZ@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormtr，该符号在函数 ""int __cdecl psi::C_DORMTR(char,char,char,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMTR@psi@@YAHDDDHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbcon，该符号在函数 ""int __cdecl psi::C_DPBCON(char,int,int,double *,int,double,double *,double *,int *)"" (?C_DPBCON@psi@@YAHDHHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:31415,Availability,error,error,31415,"NH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormlq，该符号在函数 ""int __cdecl psi::C_DORMLQ(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMLQ@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormql，该符号在函数 ""int __cdecl psi::C_DORMQL(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMQL@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormqr，该符号在函数 ""int __cdecl psi::C_DORMQR(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMQR@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormr3，该符号在函数 ""int __cdecl psi::C_DORMR3(char,char,int,int,int,int,double *,int,double *,double *,int,double *)"" (?C_DORMR3@psi@@YAHDDHHHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormrq，该符号在函数 ""int __cdecl psi::C_DORMRQ(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMRQ@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormrz，该符号在函数 ""int __cdecl psi::C_DORMRZ(char,char,int,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMRZ@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormtr，该符号在函数 ""int __cdecl psi::C_DORMTR(char,char,char,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMTR@psi@@YAHDDDHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbcon，该符号在函数 ""int __cdecl psi::C_DPBCON(char,int,int,double *,int,double,double *,double *,int *)"" (?C_DPBCON@psi@@YAHDHHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbequ，该符号在函数 ""int __cdecl psi::C_DPBEQU(char,int,int,double *,int,double *,double *,double *)"" (?C_DPBEQU@psi@@YAHDHHPEANH000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbrfs，该符号在函数 ""int ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:31630,Availability,error,error,31630,"0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormql，该符号在函数 ""int __cdecl psi::C_DORMQL(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMQL@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormqr，该符号在函数 ""int __cdecl psi::C_DORMQR(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMQR@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormr3，该符号在函数 ""int __cdecl psi::C_DORMR3(char,char,int,int,int,int,double *,int,double *,double *,int,double *)"" (?C_DORMR3@psi@@YAHDDHHHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormrq，该符号在函数 ""int __cdecl psi::C_DORMRQ(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMRQ@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormrz，该符号在函数 ""int __cdecl psi::C_DORMRZ(char,char,int,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMRZ@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormtr，该符号在函数 ""int __cdecl psi::C_DORMTR(char,char,char,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMTR@psi@@YAHDDDHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbcon，该符号在函数 ""int __cdecl psi::C_DPBCON(char,int,int,double *,int,double,double *,double *,int *)"" (?C_DPBCON@psi@@YAHDHHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbequ，该符号在函数 ""int __cdecl psi::C_DPBEQU(char,int,int,double *,int,double *,double *,double *)"" (?C_DPBEQU@psi@@YAHDHHPEANH000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbrfs，该符号在函数 ""int __cdecl psi::C_DPBRFS(char,int,int,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPBRFS@psi@@YAHDHHHPEANH0H0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error L",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:31850,Availability,error,error,31850,"H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormqr，该符号在函数 ""int __cdecl psi::C_DORMQR(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMQR@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormr3，该符号在函数 ""int __cdecl psi::C_DORMR3(char,char,int,int,int,int,double *,int,double *,double *,int,double *)"" (?C_DORMR3@psi@@YAHDDHHHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormrq，该符号在函数 ""int __cdecl psi::C_DORMRQ(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMRQ@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormrz，该符号在函数 ""int __cdecl psi::C_DORMRZ(char,char,int,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMRZ@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormtr，该符号在函数 ""int __cdecl psi::C_DORMTR(char,char,char,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMTR@psi@@YAHDDDHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbcon，该符号在函数 ""int __cdecl psi::C_DPBCON(char,int,int,double *,int,double,double *,double *,int *)"" (?C_DPBCON@psi@@YAHDHHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbequ，该符号在函数 ""int __cdecl psi::C_DPBEQU(char,int,int,double *,int,double *,double *,double *)"" (?C_DPBEQU@psi@@YAHDHHPEANH000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbrfs，该符号在函数 ""int __cdecl psi::C_DPBRFS(char,int,int,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPBRFS@psi@@YAHDHHHPEANH0H0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbstf，该符号在函数 ""int __cdecl psi::C_DPBSTF(char,int,int,double *,int)"" (?C_DPBSTF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbsv，该符号在函数 ""int __cdecl psi::C_DPB",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:32066,Availability,error,error,32066,"NH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormr3，该符号在函数 ""int __cdecl psi::C_DORMR3(char,char,int,int,int,int,double *,int,double *,double *,int,double *)"" (?C_DORMR3@psi@@YAHDDHHHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormrq，该符号在函数 ""int __cdecl psi::C_DORMRQ(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMRQ@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormrz，该符号在函数 ""int __cdecl psi::C_DORMRZ(char,char,int,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMRZ@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormtr，该符号在函数 ""int __cdecl psi::C_DORMTR(char,char,char,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMTR@psi@@YAHDDDHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbcon，该符号在函数 ""int __cdecl psi::C_DPBCON(char,int,int,double *,int,double,double *,double *,int *)"" (?C_DPBCON@psi@@YAHDHHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbequ，该符号在函数 ""int __cdecl psi::C_DPBEQU(char,int,int,double *,int,double *,double *,double *)"" (?C_DPBEQU@psi@@YAHDHHPEANH000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbrfs，该符号在函数 ""int __cdecl psi::C_DPBRFS(char,int,int,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPBRFS@psi@@YAHDHHHPEANH0H0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbstf，该符号在函数 ""int __cdecl psi::C_DPBSTF(char,int,int,double *,int)"" (?C_DPBSTF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbsv，该符号在函数 ""int __cdecl psi::C_DPBSV(char,int,int,int,double *,int,double *,int)"" (?C_DPBSV@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbsvx，该符号在函数 ""int __cdecl psi::C_DPBSVX(char,char,int,int,int,d",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:32268,Availability,error,error,32268,"@psi@@YAHDDHHHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormrq，该符号在函数 ""int __cdecl psi::C_DORMRQ(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMRQ@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormrz，该符号在函数 ""int __cdecl psi::C_DORMRZ(char,char,int,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMRZ@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormtr，该符号在函数 ""int __cdecl psi::C_DORMTR(char,char,char,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMTR@psi@@YAHDDDHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbcon，该符号在函数 ""int __cdecl psi::C_DPBCON(char,int,int,double *,int,double,double *,double *,int *)"" (?C_DPBCON@psi@@YAHDHHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbequ，该符号在函数 ""int __cdecl psi::C_DPBEQU(char,int,int,double *,int,double *,double *,double *)"" (?C_DPBEQU@psi@@YAHDHHPEANH000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbrfs，该符号在函数 ""int __cdecl psi::C_DPBRFS(char,int,int,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPBRFS@psi@@YAHDHHHPEANH0H0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbstf，该符号在函数 ""int __cdecl psi::C_DPBSTF(char,int,int,double *,int)"" (?C_DPBSTF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbsv，该符号在函数 ""int __cdecl psi::C_DPBSV(char,int,int,int,double *,int,double *,int)"" (?C_DPBSV@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbsvx，该符号在函数 ""int __cdecl psi::C_DPBSVX(char,char,int,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPBSVX@psi@@YAHDDHHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : e",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:32462,Availability,error,error,32462,"DDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormrz，该符号在函数 ""int __cdecl psi::C_DORMRZ(char,char,int,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMRZ@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormtr，该符号在函数 ""int __cdecl psi::C_DORMTR(char,char,char,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMTR@psi@@YAHDDDHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbcon，该符号在函数 ""int __cdecl psi::C_DPBCON(char,int,int,double *,int,double,double *,double *,int *)"" (?C_DPBCON@psi@@YAHDHHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbequ，该符号在函数 ""int __cdecl psi::C_DPBEQU(char,int,int,double *,int,double *,double *,double *)"" (?C_DPBEQU@psi@@YAHDHHPEANH000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbrfs，该符号在函数 ""int __cdecl psi::C_DPBRFS(char,int,int,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPBRFS@psi@@YAHDHHHPEANH0H0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbstf，该符号在函数 ""int __cdecl psi::C_DPBSTF(char,int,int,double *,int)"" (?C_DPBSTF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbsv，该符号在函数 ""int __cdecl psi::C_DPBSV(char,int,int,int,double *,int,double *,int)"" (?C_DPBSV@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbsvx，该符号在函数 ""int __cdecl psi::C_DPBSVX(char,char,int,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPBSVX@psi@@YAHDDHHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrf，该符号在函数 ""int __cdecl psi::C_DPBTRF(char,int,int,double *,int)"" (?C_DPBTRF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrs，该符号在函数 ""int __cdecl psi::C_DP",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:32716,Availability,error,error,32716,"Z@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormtr，该符号在函数 ""int __cdecl psi::C_DORMTR(char,char,char,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMTR@psi@@YAHDDDHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbcon，该符号在函数 ""int __cdecl psi::C_DPBCON(char,int,int,double *,int,double,double *,double *,int *)"" (?C_DPBCON@psi@@YAHDHHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbequ，该符号在函数 ""int __cdecl psi::C_DPBEQU(char,int,int,double *,int,double *,double *,double *)"" (?C_DPBEQU@psi@@YAHDHHPEANH000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbrfs，该符号在函数 ""int __cdecl psi::C_DPBRFS(char,int,int,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPBRFS@psi@@YAHDHHHPEANH0H0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbstf，该符号在函数 ""int __cdecl psi::C_DPBSTF(char,int,int,double *,int)"" (?C_DPBSTF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbsv，该符号在函数 ""int __cdecl psi::C_DPBSV(char,int,int,int,double *,int,double *,int)"" (?C_DPBSV@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbsvx，该符号在函数 ""int __cdecl psi::C_DPBSVX(char,char,int,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPBSVX@psi@@YAHDDHHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrf，该符号在函数 ""int __cdecl psi::C_DPBTRF(char,int,int,double *,int)"" (?C_DPBTRF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrs，该符号在函数 ""int __cdecl psi::C_DPBTRS(char,int,int,int,double *,int,double *,int)"" (?C_DPBTRS@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpocon，该符号在函数 ""int __cdecl psi::C_DPOCON(char,int,double *,in",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:32880,Availability,error,error,32880,"ouble *,double *,int,double *,int)"" (?C_DORMTR@psi@@YAHDDDHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbcon，该符号在函数 ""int __cdecl psi::C_DPBCON(char,int,int,double *,int,double,double *,double *,int *)"" (?C_DPBCON@psi@@YAHDHHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbequ，该符号在函数 ""int __cdecl psi::C_DPBEQU(char,int,int,double *,int,double *,double *,double *)"" (?C_DPBEQU@psi@@YAHDHHPEANH000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbrfs，该符号在函数 ""int __cdecl psi::C_DPBRFS(char,int,int,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPBRFS@psi@@YAHDHHHPEANH0H0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbstf，该符号在函数 ""int __cdecl psi::C_DPBSTF(char,int,int,double *,int)"" (?C_DPBSTF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbsv，该符号在函数 ""int __cdecl psi::C_DPBSV(char,int,int,int,double *,int,double *,int)"" (?C_DPBSV@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbsvx，该符号在函数 ""int __cdecl psi::C_DPBSVX(char,char,int,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPBSVX@psi@@YAHDDHHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrf，该符号在函数 ""int __cdecl psi::C_DPBTRF(char,int,int,double *,int)"" (?C_DPBTRF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrs，该符号在函数 ""int __cdecl psi::C_DPBTRS(char,int,int,int,double *,int,double *,int)"" (?C_DPBTRS@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpocon，该符号在函数 ""int __cdecl psi::C_DPOCON(char,int,double *,int,double,double *,double *,int *)"" (?C_DPOCON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpoequ，该符号在函数 ""int __cdecl psi::C_DPO",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:33061,Availability,error,error,33061,"*)"" (?C_DPBCON@psi@@YAHDHHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbequ，该符号在函数 ""int __cdecl psi::C_DPBEQU(char,int,int,double *,int,double *,double *,double *)"" (?C_DPBEQU@psi@@YAHDHHPEANH000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbrfs，该符号在函数 ""int __cdecl psi::C_DPBRFS(char,int,int,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPBRFS@psi@@YAHDHHHPEANH0H0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbstf，该符号在函数 ""int __cdecl psi::C_DPBSTF(char,int,int,double *,int)"" (?C_DPBSTF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbsv，该符号在函数 ""int __cdecl psi::C_DPBSV(char,int,int,int,double *,int,double *,int)"" (?C_DPBSV@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbsvx，该符号在函数 ""int __cdecl psi::C_DPBSVX(char,char,int,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPBSVX@psi@@YAHDDHHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrf，该符号在函数 ""int __cdecl psi::C_DPBTRF(char,int,int,double *,int)"" (?C_DPBTRF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrs，该符号在函数 ""int __cdecl psi::C_DPBTRS(char,int,int,int,double *,int,double *,int)"" (?C_DPBTRS@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpocon，该符号在函数 ""int __cdecl psi::C_DPOCON(char,int,double *,int,double,double *,double *,int *)"" (?C_DPOCON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpoequ，该符号在函数 ""int __cdecl psi::C_DPOEQU(int,double *,int,double *,double *,double *)"" (?C_DPOEQU@psi@@YAHHPEANH000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dporfs，该符号在函数 ""int __cdecl psi::C_DPORFS(char,int,int,double *,int,double *,int,double ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:33347,Availability,error,error,33347,"EANH000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbrfs，该符号在函数 ""int __cdecl psi::C_DPBRFS(char,int,int,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPBRFS@psi@@YAHDHHHPEANH0H0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbstf，该符号在函数 ""int __cdecl psi::C_DPBSTF(char,int,int,double *,int)"" (?C_DPBSTF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbsv，该符号在函数 ""int __cdecl psi::C_DPBSV(char,int,int,int,double *,int,double *,int)"" (?C_DPBSV@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbsvx，该符号在函数 ""int __cdecl psi::C_DPBSVX(char,char,int,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPBSVX@psi@@YAHDDHHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrf，该符号在函数 ""int __cdecl psi::C_DPBTRF(char,int,int,double *,int)"" (?C_DPBTRF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrs，该符号在函数 ""int __cdecl psi::C_DPBTRS(char,int,int,int,double *,int,double *,int)"" (?C_DPBTRS@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpocon，该符号在函数 ""int __cdecl psi::C_DPOCON(char,int,double *,int,double,double *,double *,int *)"" (?C_DPOCON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpoequ，该符号在函数 ""int __cdecl psi::C_DPOEQU(int,double *,int,double *,double *,double *)"" (?C_DPOEQU@psi@@YAHHPEANH000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dporfs，该符号在函数 ""int __cdecl psi::C_DPORFS(char,int,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPORFS@psi@@YAHDHHPEANH0H0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposv，该符号在函数 ""int __cdecl psi::C_DPOSV(char,int,int,double *,in",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:33511,Availability,error,error,33511,"uble *,int,double *,double *,double *,int *)"" (?C_DPBRFS@psi@@YAHDHHHPEANH0H0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbstf，该符号在函数 ""int __cdecl psi::C_DPBSTF(char,int,int,double *,int)"" (?C_DPBSTF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbsv，该符号在函数 ""int __cdecl psi::C_DPBSV(char,int,int,int,double *,int,double *,int)"" (?C_DPBSV@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbsvx，该符号在函数 ""int __cdecl psi::C_DPBSVX(char,char,int,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPBSVX@psi@@YAHDDHHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrf，该符号在函数 ""int __cdecl psi::C_DPBTRF(char,int,int,double *,int)"" (?C_DPBTRF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrs，该符号在函数 ""int __cdecl psi::C_DPBTRS(char,int,int,int,double *,int,double *,int)"" (?C_DPBTRS@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpocon，该符号在函数 ""int __cdecl psi::C_DPOCON(char,int,double *,int,double,double *,double *,int *)"" (?C_DPOCON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpoequ，该符号在函数 ""int __cdecl psi::C_DPOEQU(int,double *,int,double *,double *,double *)"" (?C_DPOEQU@psi@@YAHHPEANH000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dporfs，该符号在函数 ""int __cdecl psi::C_DPORFS(char,int,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPORFS@psi@@YAHDHHPEANH0H0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposv，该符号在函数 ""int __cdecl psi::C_DPOSV(char,int,int,double *,int,double *,int)"" (?C_DPOSV@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposvx，该符号在函数 ""int __cdecl psi::C_DPOSVX(char,char,int,int,do",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:33695,Availability,error,error,33695,"PBSTF(char,int,int,double *,int)"" (?C_DPBSTF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbsv，该符号在函数 ""int __cdecl psi::C_DPBSV(char,int,int,int,double *,int,double *,int)"" (?C_DPBSV@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbsvx，该符号在函数 ""int __cdecl psi::C_DPBSVX(char,char,int,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPBSVX@psi@@YAHDDHHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrf，该符号在函数 ""int __cdecl psi::C_DPBTRF(char,int,int,double *,int)"" (?C_DPBTRF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrs，该符号在函数 ""int __cdecl psi::C_DPBTRS(char,int,int,int,double *,int,double *,int)"" (?C_DPBTRS@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpocon，该符号在函数 ""int __cdecl psi::C_DPOCON(char,int,double *,int,double,double *,double *,int *)"" (?C_DPOCON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpoequ，该符号在函数 ""int __cdecl psi::C_DPOEQU(int,double *,int,double *,double *,double *)"" (?C_DPOEQU@psi@@YAHHPEANH000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dporfs，该符号在函数 ""int __cdecl psi::C_DPORFS(char,int,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPORFS@psi@@YAHDHHPEANH0H0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposv，该符号在函数 ""int __cdecl psi::C_DPOSV(char,int,int,double *,int,double *,int)"" (?C_DPOSV@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposvx，该符号在函数 ""int __cdecl psi::C_DPOSVX(char,char,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPOSVX@psi@@YAHDDHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:33892,Availability,error,error,33892,"e *,int,double *,int)"" (?C_DPBSV@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbsvx，该符号在函数 ""int __cdecl psi::C_DPBSVX(char,char,int,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPBSVX@psi@@YAHDDHHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrf，该符号在函数 ""int __cdecl psi::C_DPBTRF(char,int,int,double *,int)"" (?C_DPBTRF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrs，该符号在函数 ""int __cdecl psi::C_DPBTRS(char,int,int,int,double *,int,double *,int)"" (?C_DPBTRS@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpocon，该符号在函数 ""int __cdecl psi::C_DPOCON(char,int,double *,int,double,double *,double *,int *)"" (?C_DPOCON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpoequ，该符号在函数 ""int __cdecl psi::C_DPOEQU(int,double *,int,double *,double *,double *)"" (?C_DPOEQU@psi@@YAHHPEANH000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dporfs，该符号在函数 ""int __cdecl psi::C_DPORFS(char,int,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPORFS@psi@@YAHDHHPEANH0H0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposv，该符号在函数 ""int __cdecl psi::C_DPOSV(char,int,int,double *,int,double *,int)"" (?C_DPOSV@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposvx，该符号在函数 ""int __cdecl psi::C_DPOSVX(char,char,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPOSVX@psi@@YAHDDHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrf，该符号在函数 ""int __cdecl psi::C_DPOTRF(char,int,double *,int)"" (?C_DPOTRF@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dp",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:34075,Availability,error,error,34075,"uble *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPBSVX@psi@@YAHDDHHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrf，该符号在函数 ""int __cdecl psi::C_DPBTRF(char,int,int,double *,int)"" (?C_DPBTRF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrs，该符号在函数 ""int __cdecl psi::C_DPBTRS(char,int,int,int,double *,int,double *,int)"" (?C_DPBTRS@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpocon，该符号在函数 ""int __cdecl psi::C_DPOCON(char,int,double *,int,double,double *,double *,int *)"" (?C_DPOCON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpoequ，该符号在函数 ""int __cdecl psi::C_DPOEQU(int,double *,int,double *,double *,double *)"" (?C_DPOEQU@psi@@YAHHPEANH000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dporfs，该符号在函数 ""int __cdecl psi::C_DPORFS(char,int,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPORFS@psi@@YAHDHHPEANH0H0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposv，该符号在函数 ""int __cdecl psi::C_DPOSV(char,int,int,double *,int,double *,int)"" (?C_DPOSV@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposvx，该符号在函数 ""int __cdecl psi::C_DPOSVX(char,char,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPOSVX@psi@@YAHDDHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrf，该符号在函数 ""int __cdecl psi::C_DPOTRF(char,int,double *,int)"" (?C_DPOTRF@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotri，该符号在函数 ""int __cdecl psi::C_DPOTRI(char,int,double *,int)"" (?C_DPOTRI@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrs，该符号在函数 ""int __cdecl psi::C_DPOTRS(char,int,int,doubl",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:34324,Availability,error,error,34324,"ecl psi::C_DPBTRF(char,int,int,double *,int)"" (?C_DPBTRF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrs，该符号在函数 ""int __cdecl psi::C_DPBTRS(char,int,int,int,double *,int,double *,int)"" (?C_DPBTRS@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpocon，该符号在函数 ""int __cdecl psi::C_DPOCON(char,int,double *,int,double,double *,double *,int *)"" (?C_DPOCON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpoequ，该符号在函数 ""int __cdecl psi::C_DPOEQU(int,double *,int,double *,double *,double *)"" (?C_DPOEQU@psi@@YAHHPEANH000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dporfs，该符号在函数 ""int __cdecl psi::C_DPORFS(char,int,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPORFS@psi@@YAHDHHPEANH0H0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposv，该符号在函数 ""int __cdecl psi::C_DPOSV(char,int,int,double *,int,double *,int)"" (?C_DPOSV@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposvx，该符号在函数 ""int __cdecl psi::C_DPOSVX(char,char,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPOSVX@psi@@YAHDDHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrf，该符号在函数 ""int __cdecl psi::C_DPOTRF(char,int,double *,int)"" (?C_DPOTRF@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotri，该符号在函数 ""int __cdecl psi::C_DPOTRI(char,int,double *,int)"" (?C_DPOTRI@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrs，该符号在函数 ""int __cdecl psi::C_DPOTRS(char,int,int,double *,int,double *,int)"" (?C_DPOTRS@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppcon，该符号在函数 ""int __cdecl psi::C_DPPCON(char,int,double *,double,double *,double *,int *)"" ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:34500,Availability,error,error,34500,"?C_DPBTRS@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpocon，该符号在函数 ""int __cdecl psi::C_DPOCON(char,int,double *,int,double,double *,double *,int *)"" (?C_DPOCON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpoequ，该符号在函数 ""int __cdecl psi::C_DPOEQU(int,double *,int,double *,double *,double *)"" (?C_DPOEQU@psi@@YAHHPEANH000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dporfs，该符号在函数 ""int __cdecl psi::C_DPORFS(char,int,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPORFS@psi@@YAHDHHPEANH0H0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposv，该符号在函数 ""int __cdecl psi::C_DPOSV(char,int,int,double *,int,double *,int)"" (?C_DPOSV@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposvx，该符号在函数 ""int __cdecl psi::C_DPOSVX(char,char,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPOSVX@psi@@YAHDDHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrf，该符号在函数 ""int __cdecl psi::C_DPOTRF(char,int,double *,int)"" (?C_DPOTRF@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotri，该符号在函数 ""int __cdecl psi::C_DPOTRI(char,int,double *,int)"" (?C_DPOTRI@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrs，该符号在函数 ""int __cdecl psi::C_DPOTRS(char,int,int,double *,int,double *,int)"" (?C_DPOTRS@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppcon，该符号在函数 ""int __cdecl psi::C_DPPCON(char,int,double *,double,double *,double *,int *)"" (?C_DPPCON@psi@@YAHDHPEANN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppequ，该符号在函数 ""int __cdecl psi::C_DPPEQU(char,int,double *,double *,double *,double *)"" (?C_DPPEQU@psi@@YAHDHPEAN000@Z) 中被引用; F:\",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:34781,Availability,error,error,34781,"00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpoequ，该符号在函数 ""int __cdecl psi::C_DPOEQU(int,double *,int,double *,double *,double *)"" (?C_DPOEQU@psi@@YAHHPEANH000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dporfs，该符号在函数 ""int __cdecl psi::C_DPORFS(char,int,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPORFS@psi@@YAHDHHPEANH0H0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposv，该符号在函数 ""int __cdecl psi::C_DPOSV(char,int,int,double *,int,double *,int)"" (?C_DPOSV@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposvx，该符号在函数 ""int __cdecl psi::C_DPOSVX(char,char,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPOSVX@psi@@YAHDDHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrf，该符号在函数 ""int __cdecl psi::C_DPOTRF(char,int,double *,int)"" (?C_DPOTRF@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotri，该符号在函数 ""int __cdecl psi::C_DPOTRI(char,int,double *,int)"" (?C_DPOTRI@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrs，该符号在函数 ""int __cdecl psi::C_DPOTRS(char,int,int,double *,int,double *,int)"" (?C_DPOTRS@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppcon，该符号在函数 ""int __cdecl psi::C_DPPCON(char,int,double *,double,double *,double *,int *)"" (?C_DPPCON@psi@@YAHDHPEANN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppequ，该符号在函数 ""int __cdecl psi::C_DPPEQU(char,int,double *,double *,double *,double *)"" (?C_DPPEQU@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpprfs，该符号在函数 ""int __cdecl psi::C_DPPRFS(char,int,int,double *,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPPRFS@psi@@YAHDHHPEAN00H0H0",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:34940,Availability,error,error,34940,""" (?C_DPOEQU@psi@@YAHHPEANH000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dporfs，该符号在函数 ""int __cdecl psi::C_DPORFS(char,int,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPORFS@psi@@YAHDHHPEANH0H0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposv，该符号在函数 ""int __cdecl psi::C_DPOSV(char,int,int,double *,int,double *,int)"" (?C_DPOSV@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposvx，该符号在函数 ""int __cdecl psi::C_DPOSVX(char,char,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPOSVX@psi@@YAHDDHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrf，该符号在函数 ""int __cdecl psi::C_DPOTRF(char,int,double *,int)"" (?C_DPOTRF@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotri，该符号在函数 ""int __cdecl psi::C_DPOTRI(char,int,double *,int)"" (?C_DPOTRI@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrs，该符号在函数 ""int __cdecl psi::C_DPOTRS(char,int,int,double *,int,double *,int)"" (?C_DPOTRS@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppcon，该符号在函数 ""int __cdecl psi::C_DPPCON(char,int,double *,double,double *,double *,int *)"" (?C_DPPCON@psi@@YAHDHPEANN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppequ，该符号在函数 ""int __cdecl psi::C_DPPEQU(char,int,double *,double *,double *,double *)"" (?C_DPPEQU@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpprfs，该符号在函数 ""int __cdecl psi::C_DPPRFS(char,int,int,double *,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPPRFS@psi@@YAHDHHPEAN00H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsv，该符号在函数 ""int __cdecl psi::C_DPPSV(char,int,int,double *,double *,int)"" (?C_DPPSV",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:35099,Availability,error,error,35099,"le *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPORFS@psi@@YAHDHHPEANH0H0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposv，该符号在函数 ""int __cdecl psi::C_DPOSV(char,int,int,double *,int,double *,int)"" (?C_DPOSV@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposvx，该符号在函数 ""int __cdecl psi::C_DPOSVX(char,char,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPOSVX@psi@@YAHDDHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrf，该符号在函数 ""int __cdecl psi::C_DPOTRF(char,int,double *,int)"" (?C_DPOTRF@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotri，该符号在函数 ""int __cdecl psi::C_DPOTRI(char,int,double *,int)"" (?C_DPOTRI@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrs，该符号在函数 ""int __cdecl psi::C_DPOTRS(char,int,int,double *,int,double *,int)"" (?C_DPOTRS@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppcon，该符号在函数 ""int __cdecl psi::C_DPPCON(char,int,double *,double,double *,double *,int *)"" (?C_DPPCON@psi@@YAHDHPEANN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppequ，该符号在函数 ""int __cdecl psi::C_DPPEQU(char,int,double *,double *,double *,double *)"" (?C_DPPEQU@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpprfs，该符号在函数 ""int __cdecl psi::C_DPPRFS(char,int,int,double *,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPPRFS@psi@@YAHDHHPEAN00H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsv，该符号在函数 ""int __cdecl psi::C_DPPSV(char,int,int,double *,double *,int)"" (?C_DPPSV@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsvx，该符号在函数 ""int __cdecl psi::C_DPPSVX(char,char,int,int,double *,double *,char,d",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:35278,Availability,error,error,35278,"号在函数 ""int __cdecl psi::C_DPOSV(char,int,int,double *,int,double *,int)"" (?C_DPOSV@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposvx，该符号在函数 ""int __cdecl psi::C_DPOSVX(char,char,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPOSVX@psi@@YAHDDHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrf，该符号在函数 ""int __cdecl psi::C_DPOTRF(char,int,double *,int)"" (?C_DPOTRF@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotri，该符号在函数 ""int __cdecl psi::C_DPOTRI(char,int,double *,int)"" (?C_DPOTRI@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrs，该符号在函数 ""int __cdecl psi::C_DPOTRS(char,int,int,double *,int,double *,int)"" (?C_DPOTRS@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppcon，该符号在函数 ""int __cdecl psi::C_DPPCON(char,int,double *,double,double *,double *,int *)"" (?C_DPPCON@psi@@YAHDHPEANN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppequ，该符号在函数 ""int __cdecl psi::C_DPPEQU(char,int,double *,double *,double *,double *)"" (?C_DPPEQU@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpprfs，该符号在函数 ""int __cdecl psi::C_DPPRFS(char,int,int,double *,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPPRFS@psi@@YAHDHHPEAN00H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsv，该符号在函数 ""int __cdecl psi::C_DPPSV(char,int,int,double *,double *,int)"" (?C_DPPSV@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsvx，该符号在函数 ""int __cdecl psi::C_DPPSVX(char,char,int,int,double *,double *,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPPSVX@psi@@YAHDDHHPEAN0D00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:35470,Availability,error,error,35470,"_cdecl psi::C_DPOSVX(char,char,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPOSVX@psi@@YAHDDHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrf，该符号在函数 ""int __cdecl psi::C_DPOTRF(char,int,double *,int)"" (?C_DPOTRF@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotri，该符号在函数 ""int __cdecl psi::C_DPOTRI(char,int,double *,int)"" (?C_DPOTRI@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrs，该符号在函数 ""int __cdecl psi::C_DPOTRS(char,int,int,double *,int,double *,int)"" (?C_DPOTRS@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppcon，该符号在函数 ""int __cdecl psi::C_DPPCON(char,int,double *,double,double *,double *,int *)"" (?C_DPPCON@psi@@YAHDHPEANN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppequ，该符号在函数 ""int __cdecl psi::C_DPPEQU(char,int,double *,double *,double *,double *)"" (?C_DPPEQU@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpprfs，该符号在函数 ""int __cdecl psi::C_DPPRFS(char,int,int,double *,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPPRFS@psi@@YAHDHHPEAN00H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsv，该符号在函数 ""int __cdecl psi::C_DPPSV(char,int,int,double *,double *,int)"" (?C_DPPSV@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsvx，该符号在函数 ""int __cdecl psi::C_DPPSVX(char,char,int,int,double *,double *,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPPSVX@psi@@YAHDDHHPEAN0D00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrf，该符号在函数 ""int __cdecl psi::C_DPPTRF(char,int,double *)"" (?C_DPPTRF@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptri，该符号在函数 ""int __cdecl psi:",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:35654,Availability,error,error,35654,"b(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrf，该符号在函数 ""int __cdecl psi::C_DPOTRF(char,int,double *,int)"" (?C_DPOTRF@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotri，该符号在函数 ""int __cdecl psi::C_DPOTRI(char,int,double *,int)"" (?C_DPOTRI@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrs，该符号在函数 ""int __cdecl psi::C_DPOTRS(char,int,int,double *,int,double *,int)"" (?C_DPOTRS@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppcon，该符号在函数 ""int __cdecl psi::C_DPPCON(char,int,double *,double,double *,double *,int *)"" (?C_DPPCON@psi@@YAHDHPEANN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppequ，该符号在函数 ""int __cdecl psi::C_DPPEQU(char,int,double *,double *,double *,double *)"" (?C_DPPEQU@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpprfs，该符号在函数 ""int __cdecl psi::C_DPPRFS(char,int,int,double *,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPPRFS@psi@@YAHDHHPEAN00H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsv，该符号在函数 ""int __cdecl psi::C_DPPSV(char,int,int,double *,double *,int)"" (?C_DPPSV@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsvx，该符号在函数 ""int __cdecl psi::C_DPPSVX(char,char,int,int,double *,double *,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPPSVX@psi@@YAHDDHHPEAN0D00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrf，该符号在函数 ""int __cdecl psi::C_DPPTRF(char,int,double *)"" (?C_DPPTRF@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptri，该符号在函数 ""int __cdecl psi::C_DPPTRI(char,int,double *)"" (?C_DPPTRI@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrs，该符号在函数 ""int __cdecl psi::C_DPPTRS(char,int,int,double *,double *,int)"" (?C_DPPTRS@",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:35893,Availability,error,error,35893,"部符号 dpotri，该符号在函数 ""int __cdecl psi::C_DPOTRI(char,int,double *,int)"" (?C_DPOTRI@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrs，该符号在函数 ""int __cdecl psi::C_DPOTRS(char,int,int,double *,int,double *,int)"" (?C_DPOTRS@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppcon，该符号在函数 ""int __cdecl psi::C_DPPCON(char,int,double *,double,double *,double *,int *)"" (?C_DPPCON@psi@@YAHDHPEANN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppequ，该符号在函数 ""int __cdecl psi::C_DPPEQU(char,int,double *,double *,double *,double *)"" (?C_DPPEQU@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpprfs，该符号在函数 ""int __cdecl psi::C_DPPRFS(char,int,int,double *,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPPRFS@psi@@YAHDHHPEAN00H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsv，该符号在函数 ""int __cdecl psi::C_DPPSV(char,int,int,double *,double *,int)"" (?C_DPPSV@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsvx，该符号在函数 ""int __cdecl psi::C_DPPSVX(char,char,int,int,double *,double *,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPPSVX@psi@@YAHDDHHPEAN0D00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrf，该符号在函数 ""int __cdecl psi::C_DPPTRF(char,int,double *)"" (?C_DPPTRF@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptri，该符号在函数 ""int __cdecl psi::C_DPPTRI(char,int,double *)"" (?C_DPPTRI@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrs，该符号在函数 ""int __cdecl psi::C_DPPTRS(char,int,int,double *,double *,int)"" (?C_DPPTRS@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptcon，该符号在函数 ""int __cdecl psi::C_DPTCON(int,double *,double *,double,double *,double *)"" (?C_DPTCON@psi@@YAHHPEAN0N00@Z",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:36064,Availability,error,error,36064,"le *,int,double *,int)"" (?C_DPOTRS@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppcon，该符号在函数 ""int __cdecl psi::C_DPPCON(char,int,double *,double,double *,double *,int *)"" (?C_DPPCON@psi@@YAHDHPEANN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppequ，该符号在函数 ""int __cdecl psi::C_DPPEQU(char,int,double *,double *,double *,double *)"" (?C_DPPEQU@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpprfs，该符号在函数 ""int __cdecl psi::C_DPPRFS(char,int,int,double *,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPPRFS@psi@@YAHDHHPEAN00H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsv，该符号在函数 ""int __cdecl psi::C_DPPSV(char,int,int,double *,double *,int)"" (?C_DPPSV@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsvx，该符号在函数 ""int __cdecl psi::C_DPPSVX(char,char,int,int,double *,double *,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPPSVX@psi@@YAHDDHHPEAN0D00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrf，该符号在函数 ""int __cdecl psi::C_DPPTRF(char,int,double *)"" (?C_DPPTRF@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptri，该符号在函数 ""int __cdecl psi::C_DPPTRI(char,int,double *)"" (?C_DPPTRI@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrs，该符号在函数 ""int __cdecl psi::C_DPPTRS(char,int,int,double *,double *,int)"" (?C_DPPTRS@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptcon，该符号在函数 ""int __cdecl psi::C_DPTCON(int,double *,double *,double,double *,double *)"" (?C_DPTCON@psi@@YAHHPEAN0N00@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpteqr，该符号在函数 ""int __cdecl psi::C_DPTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DPTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.c",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:36335,Availability,error,error,36335,"(?C_DPPCON@psi@@YAHDHPEANN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppequ，该符号在函数 ""int __cdecl psi::C_DPPEQU(char,int,double *,double *,double *,double *)"" (?C_DPPEQU@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpprfs，该符号在函数 ""int __cdecl psi::C_DPPRFS(char,int,int,double *,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPPRFS@psi@@YAHDHHPEAN00H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsv，该符号在函数 ""int __cdecl psi::C_DPPSV(char,int,int,double *,double *,int)"" (?C_DPPSV@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsvx，该符号在函数 ""int __cdecl psi::C_DPPSVX(char,char,int,int,double *,double *,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPPSVX@psi@@YAHDDHHPEAN0D00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrf，该符号在函数 ""int __cdecl psi::C_DPPTRF(char,int,double *)"" (?C_DPPTRF@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptri，该符号在函数 ""int __cdecl psi::C_DPPTRI(char,int,double *)"" (?C_DPPTRI@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrs，该符号在函数 ""int __cdecl psi::C_DPPTRS(char,int,int,double *,double *,int)"" (?C_DPPTRS@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptcon，该符号在函数 ""int __cdecl psi::C_DPTCON(int,double *,double *,double,double *,double *)"" (?C_DPTCON@psi@@YAHHPEAN0N00@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpteqr，该符号在函数 ""int __cdecl psi::C_DPTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DPTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptrfs，该符号在函数 ""int __cdecl psi::C_DPTRFS(int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *)"" (?C_DPTRFS@psi@@YAHHHPEAN0000H0H000@Z)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:36489,Availability,error,error,36489,"le *,double *,double *,double *)"" (?C_DPPEQU@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpprfs，该符号在函数 ""int __cdecl psi::C_DPPRFS(char,int,int,double *,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPPRFS@psi@@YAHDHHPEAN00H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsv，该符号在函数 ""int __cdecl psi::C_DPPSV(char,int,int,double *,double *,int)"" (?C_DPPSV@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsvx，该符号在函数 ""int __cdecl psi::C_DPPSVX(char,char,int,int,double *,double *,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPPSVX@psi@@YAHDDHHPEAN0D00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrf，该符号在函数 ""int __cdecl psi::C_DPPTRF(char,int,double *)"" (?C_DPPTRF@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptri，该符号在函数 ""int __cdecl psi::C_DPPTRI(char,int,double *)"" (?C_DPPTRI@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrs，该符号在函数 ""int __cdecl psi::C_DPPTRS(char,int,int,double *,double *,int)"" (?C_DPPTRS@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptcon，该符号在函数 ""int __cdecl psi::C_DPTCON(int,double *,double *,double,double *,double *)"" (?C_DPTCON@psi@@YAHHPEAN0N00@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpteqr，该符号在函数 ""int __cdecl psi::C_DPTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DPTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptrfs，该符号在函数 ""int __cdecl psi::C_DPTRFS(int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *)"" (?C_DPTRFS@psi@@YAHHHPEAN0000H0H000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsv，该符号在函数 ""int __cdecl psi::C_DPTSV(int,int,double *,double *,double *,int)"" (?C_DPTSV",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:36643,Availability,error,error,36643,"DPPRFS(char,int,int,double *,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPPRFS@psi@@YAHDHHPEAN00H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsv，该符号在函数 ""int __cdecl psi::C_DPPSV(char,int,int,double *,double *,int)"" (?C_DPPSV@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsvx，该符号在函数 ""int __cdecl psi::C_DPPSVX(char,char,int,int,double *,double *,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPPSVX@psi@@YAHDDHHPEAN0D00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrf，该符号在函数 ""int __cdecl psi::C_DPPTRF(char,int,double *)"" (?C_DPPTRF@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptri，该符号在函数 ""int __cdecl psi::C_DPPTRI(char,int,double *)"" (?C_DPPTRI@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrs，该符号在函数 ""int __cdecl psi::C_DPPTRS(char,int,int,double *,double *,int)"" (?C_DPPTRS@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptcon，该符号在函数 ""int __cdecl psi::C_DPTCON(int,double *,double *,double,double *,double *)"" (?C_DPTCON@psi@@YAHHPEAN0N00@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpteqr，该符号在函数 ""int __cdecl psi::C_DPTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DPTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptrfs，该符号在函数 ""int __cdecl psi::C_DPTRFS(int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *)"" (?C_DPTRFS@psi@@YAHHHPEAN0000H0H000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsv，该符号在函数 ""int __cdecl psi::C_DPTSV(int,int,double *,double *,double *,int)"" (?C_DPTSV@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsvx，该符号在函数 ""int __cdecl psi::C_DPTSVX(char,int,int,double *,double *,double",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:36817,Availability,error,error,36817,"error LNK2019: 无法解析的外部符号 dppsv，该符号在函数 ""int __cdecl psi::C_DPPSV(char,int,int,double *,double *,int)"" (?C_DPPSV@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsvx，该符号在函数 ""int __cdecl psi::C_DPPSVX(char,char,int,int,double *,double *,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPPSVX@psi@@YAHDDHHPEAN0D00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrf，该符号在函数 ""int __cdecl psi::C_DPPTRF(char,int,double *)"" (?C_DPPTRF@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptri，该符号在函数 ""int __cdecl psi::C_DPPTRI(char,int,double *)"" (?C_DPPTRI@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrs，该符号在函数 ""int __cdecl psi::C_DPPTRS(char,int,int,double *,double *,int)"" (?C_DPPTRS@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptcon，该符号在函数 ""int __cdecl psi::C_DPTCON(int,double *,double *,double,double *,double *)"" (?C_DPTCON@psi@@YAHHPEAN0N00@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpteqr，该符号在函数 ""int __cdecl psi::C_DPTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DPTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptrfs，该符号在函数 ""int __cdecl psi::C_DPTRFS(int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *)"" (?C_DPTRFS@psi@@YAHHHPEAN0000H0H000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsv，该符号在函数 ""int __cdecl psi::C_DPTSV(int,int,double *,double *,double *,int)"" (?C_DPTSV@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsvx，该符号在函数 ""int __cdecl psi::C_DPTSVX(char,int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,double *)"" (?C_DPTSVX@psi@@YAHDHHPEAN0000H0H0000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:37003,Availability,error,error,37003,"法解析的外部符号 dppsvx，该符号在函数 ""int __cdecl psi::C_DPPSVX(char,char,int,int,double *,double *,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPPSVX@psi@@YAHDDHHPEAN0D00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrf，该符号在函数 ""int __cdecl psi::C_DPPTRF(char,int,double *)"" (?C_DPPTRF@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptri，该符号在函数 ""int __cdecl psi::C_DPPTRI(char,int,double *)"" (?C_DPPTRI@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrs，该符号在函数 ""int __cdecl psi::C_DPPTRS(char,int,int,double *,double *,int)"" (?C_DPPTRS@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptcon，该符号在函数 ""int __cdecl psi::C_DPTCON(int,double *,double *,double,double *,double *)"" (?C_DPTCON@psi@@YAHHPEAN0N00@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpteqr，该符号在函数 ""int __cdecl psi::C_DPTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DPTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptrfs，该符号在函数 ""int __cdecl psi::C_DPTRFS(int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *)"" (?C_DPTRFS@psi@@YAHHHPEAN0000H0H000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsv，该符号在函数 ""int __cdecl psi::C_DPTSV(int,int,double *,double *,double *,int)"" (?C_DPTSV@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsvx，该符号在函数 ""int __cdecl psi::C_DPTSVX(char,int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,double *)"" (?C_DPTSVX@psi@@YAHDHHPEAN0000H0H0000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrf，该符号在函数 ""int __cdecl psi::C_DPTTRF(int,double *,double *)"" (?C_DPTTRF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrs，该符号在函数 ""int __cdecl ps",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:37192,Availability,error,error,37192,"中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrf，该符号在函数 ""int __cdecl psi::C_DPPTRF(char,int,double *)"" (?C_DPPTRF@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptri，该符号在函数 ""int __cdecl psi::C_DPPTRI(char,int,double *)"" (?C_DPPTRI@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrs，该符号在函数 ""int __cdecl psi::C_DPPTRS(char,int,int,double *,double *,int)"" (?C_DPPTRS@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptcon，该符号在函数 ""int __cdecl psi::C_DPTCON(int,double *,double *,double,double *,double *)"" (?C_DPTCON@psi@@YAHHPEAN0N00@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpteqr，该符号在函数 ""int __cdecl psi::C_DPTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DPTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptrfs，该符号在函数 ""int __cdecl psi::C_DPTRFS(int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *)"" (?C_DPTRFS@psi@@YAHHHPEAN0000H0H000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsv，该符号在函数 ""int __cdecl psi::C_DPTSV(int,int,double *,double *,double *,int)"" (?C_DPTSV@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsvx，该符号在函数 ""int __cdecl psi::C_DPTSVX(char,int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,double *)"" (?C_DPTSVX@psi@@YAHDHHPEAN0000H0H0000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrf，该符号在函数 ""int __cdecl psi::C_DPTTRF(int,double *,double *)"" (?C_DPTTRF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrs，该符号在函数 ""int __cdecl psi::C_DPTTRS(int,int,double *,double *,double *,int)"" (?C_DPTTRS@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbev，该符号在函数 ""int __cdecl psi::C_DSBEV(char,char,int,int,double *,i",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:37435,Availability,error,error,37435,"法解析的外部符号 dpptri，该符号在函数 ""int __cdecl psi::C_DPPTRI(char,int,double *)"" (?C_DPPTRI@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrs，该符号在函数 ""int __cdecl psi::C_DPPTRS(char,int,int,double *,double *,int)"" (?C_DPPTRS@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptcon，该符号在函数 ""int __cdecl psi::C_DPTCON(int,double *,double *,double,double *,double *)"" (?C_DPTCON@psi@@YAHHPEAN0N00@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpteqr，该符号在函数 ""int __cdecl psi::C_DPTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DPTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptrfs，该符号在函数 ""int __cdecl psi::C_DPTRFS(int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *)"" (?C_DPTRFS@psi@@YAHHHPEAN0000H0H000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsv，该符号在函数 ""int __cdecl psi::C_DPTSV(int,int,double *,double *,double *,int)"" (?C_DPTSV@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsvx，该符号在函数 ""int __cdecl psi::C_DPTSVX(char,int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,double *)"" (?C_DPTSVX@psi@@YAHDHHPEAN0000H0H0000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrf，该符号在函数 ""int __cdecl psi::C_DPTTRF(int,double *,double *)"" (?C_DPTTRF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrs，该符号在函数 ""int __cdecl psi::C_DPTTRS(int,int,double *,double *,double *,int)"" (?C_DPTTRS@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbev，该符号在函数 ""int __cdecl psi::C_DSBEV(char,char,int,int,double *,int,double *,double *,int,double *)"" (?C_DSBEV@psi@@YAHDDHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevd，该符号在函数 ""int __cdecl psi::C_DSBEVD(char,char,int,int,double *,int,do",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:37610,Availability,error,error,37610,"double *,double *,int)"" (?C_DPPTRS@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptcon，该符号在函数 ""int __cdecl psi::C_DPTCON(int,double *,double *,double,double *,double *)"" (?C_DPTCON@psi@@YAHHPEAN0N00@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpteqr，该符号在函数 ""int __cdecl psi::C_DPTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DPTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptrfs，该符号在函数 ""int __cdecl psi::C_DPTRFS(int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *)"" (?C_DPTRFS@psi@@YAHHHPEAN0000H0H000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsv，该符号在函数 ""int __cdecl psi::C_DPTSV(int,int,double *,double *,double *,int)"" (?C_DPTSV@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsvx，该符号在函数 ""int __cdecl psi::C_DPTSVX(char,int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,double *)"" (?C_DPTSVX@psi@@YAHDHHPEAN0000H0H0000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrf，该符号在函数 ""int __cdecl psi::C_DPTTRF(int,double *,double *)"" (?C_DPTTRF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrs，该符号在函数 ""int __cdecl psi::C_DPTTRS(int,int,double *,double *,double *,int)"" (?C_DPTTRS@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbev，该符号在函数 ""int __cdecl psi::C_DSBEV(char,char,int,int,double *,int,double *,double *,int,double *)"" (?C_DSBEV@psi@@YAHDDHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevd，该符号在函数 ""int __cdecl psi::C_DSBEVD(char,char,int,int,double *,int,double *,double *,int,double *,int,int *,int)"" (?C_DSBEVD@psi@@YAHDDHHPEANH00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevx，该符号在函数 ""int __cdecl psi::C_DSBEVX(char,char,char,int,int,do",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:37869,Availability,error,error,37869," (?C_DPTCON@psi@@YAHHPEAN0N00@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpteqr，该符号在函数 ""int __cdecl psi::C_DPTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DPTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptrfs，该符号在函数 ""int __cdecl psi::C_DPTRFS(int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *)"" (?C_DPTRFS@psi@@YAHHHPEAN0000H0H000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsv，该符号在函数 ""int __cdecl psi::C_DPTSV(int,int,double *,double *,double *,int)"" (?C_DPTSV@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsvx，该符号在函数 ""int __cdecl psi::C_DPTSVX(char,int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,double *)"" (?C_DPTSVX@psi@@YAHDHHPEAN0000H0H0000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrf，该符号在函数 ""int __cdecl psi::C_DPTTRF(int,double *,double *)"" (?C_DPTTRF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrs，该符号在函数 ""int __cdecl psi::C_DPTTRS(int,int,double *,double *,double *,int)"" (?C_DPTTRS@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbev，该符号在函数 ""int __cdecl psi::C_DSBEV(char,char,int,int,double *,int,double *,double *,int,double *)"" (?C_DSBEV@psi@@YAHDDHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevd，该符号在函数 ""int __cdecl psi::C_DSBEVD(char,char,int,int,double *,int,double *,double *,int,double *,int,int *,int)"" (?C_DSBEVD@psi@@YAHDDHHPEANH00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevx，该符号在函数 ""int __cdecl psi::C_DSBEVX(char,char,char,int,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSBEVX@psi@@YAHDDDHHPEANH0HNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:38027,Availability,error,error,38027,"ble *,int,double *)"" (?C_DPTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptrfs，该符号在函数 ""int __cdecl psi::C_DPTRFS(int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *)"" (?C_DPTRFS@psi@@YAHHHPEAN0000H0H000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsv，该符号在函数 ""int __cdecl psi::C_DPTSV(int,int,double *,double *,double *,int)"" (?C_DPTSV@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsvx，该符号在函数 ""int __cdecl psi::C_DPTSVX(char,int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,double *)"" (?C_DPTSVX@psi@@YAHDHHPEAN0000H0H0000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrf，该符号在函数 ""int __cdecl psi::C_DPTTRF(int,double *,double *)"" (?C_DPTTRF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrs，该符号在函数 ""int __cdecl psi::C_DPTTRS(int,int,double *,double *,double *,int)"" (?C_DPTTRS@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbev，该符号在函数 ""int __cdecl psi::C_DSBEV(char,char,int,int,double *,int,double *,double *,int,double *)"" (?C_DSBEV@psi@@YAHDDHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevd，该符号在函数 ""int __cdecl psi::C_DSBEVD(char,char,int,int,double *,int,double *,double *,int,double *,int,int *,int)"" (?C_DSBEVD@psi@@YAHDDHHPEANH00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevx，该符号在函数 ""int __cdecl psi::C_DSBEVX(char,char,char,int,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSBEVX@psi@@YAHDDDHHPEANH0HNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgst，该符号在函数 ""int __cdecl psi::C_DSBGST(char,char,int,int,int,double *,int,double *,int,double *,int,double *)"" (?C_DSBGST@psi@@YAHDDHHHPEANH0H0H0@Z) 中被引用; F",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:38205,Availability,error,error,38205,"e *,double *,double *,int,double *,int,double *,double *,double *)"" (?C_DPTRFS@psi@@YAHHHPEAN0000H0H000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsv，该符号在函数 ""int __cdecl psi::C_DPTSV(int,int,double *,double *,double *,int)"" (?C_DPTSV@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsvx，该符号在函数 ""int __cdecl psi::C_DPTSVX(char,int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,double *)"" (?C_DPTSVX@psi@@YAHDHHPEAN0000H0H0000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrf，该符号在函数 ""int __cdecl psi::C_DPTTRF(int,double *,double *)"" (?C_DPTTRF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrs，该符号在函数 ""int __cdecl psi::C_DPTTRS(int,int,double *,double *,double *,int)"" (?C_DPTTRS@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbev，该符号在函数 ""int __cdecl psi::C_DSBEV(char,char,int,int,double *,int,double *,double *,int,double *)"" (?C_DSBEV@psi@@YAHDDHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevd，该符号在函数 ""int __cdecl psi::C_DSBEVD(char,char,int,int,double *,int,double *,double *,int,double *,int,int *,int)"" (?C_DSBEVD@psi@@YAHDDHHPEANH00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevx，该符号在函数 ""int __cdecl psi::C_DSBEVX(char,char,char,int,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSBEVX@psi@@YAHDDDHHPEANH0HNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgst，该符号在函数 ""int __cdecl psi::C_DSBGST(char,char,int,int,int,double *,int,double *,int,double *,int,double *)"" (?C_DSBGST@psi@@YAHDDHHHPEANH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgv，该符号在函数 ""int __cdecl psi::C_DSBGV(char,char,int,int,int,double *,int,double *,int,double *,double *,int,double *)"" (?C_DSBGV@psi",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:38407,Availability,error,error,38407,",int,double *,double *,double *,int)"" (?C_DPTSV@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsvx，该符号在函数 ""int __cdecl psi::C_DPTSVX(char,int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,double *)"" (?C_DPTSVX@psi@@YAHDHHPEAN0000H0H0000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrf，该符号在函数 ""int __cdecl psi::C_DPTTRF(int,double *,double *)"" (?C_DPTTRF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrs，该符号在函数 ""int __cdecl psi::C_DPTTRS(int,int,double *,double *,double *,int)"" (?C_DPTTRS@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbev，该符号在函数 ""int __cdecl psi::C_DSBEV(char,char,int,int,double *,int,double *,double *,int,double *)"" (?C_DSBEV@psi@@YAHDDHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevd，该符号在函数 ""int __cdecl psi::C_DSBEVD(char,char,int,int,double *,int,double *,double *,int,double *,int,int *,int)"" (?C_DSBEVD@psi@@YAHDDHHPEANH00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevx，该符号在函数 ""int __cdecl psi::C_DSBEVX(char,char,char,int,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSBEVX@psi@@YAHDDDHHPEANH0HNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgst，该符号在函数 ""int __cdecl psi::C_DSBGST(char,char,int,int,int,double *,int,double *,int,double *,int,double *)"" (?C_DSBGST@psi@@YAHDDHHHPEANH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgv，该符号在函数 ""int __cdecl psi::C_DSBGV(char,char,int,int,int,double *,int,double *,int,double *,double *,int,double *)"" (?C_DSBGV@psi@@YAHDDHHHPEANH0H00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgvd，该符号在函数 ""int __cdecl psi::C_DSBGVD(char,char,int,int,int,double *,int,double *,int,double *,double *,int,double *,int,i",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:38632,Availability,error,error,38632," *,double *,double *,double *)"" (?C_DPTSVX@psi@@YAHDHHPEAN0000H0H0000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrf，该符号在函数 ""int __cdecl psi::C_DPTTRF(int,double *,double *)"" (?C_DPTTRF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrs，该符号在函数 ""int __cdecl psi::C_DPTTRS(int,int,double *,double *,double *,int)"" (?C_DPTTRS@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbev，该符号在函数 ""int __cdecl psi::C_DSBEV(char,char,int,int,double *,int,double *,double *,int,double *)"" (?C_DSBEV@psi@@YAHDDHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevd，该符号在函数 ""int __cdecl psi::C_DSBEVD(char,char,int,int,double *,int,double *,double *,int,double *,int,int *,int)"" (?C_DSBEVD@psi@@YAHDDHHPEANH00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevx，该符号在函数 ""int __cdecl psi::C_DSBEVX(char,char,char,int,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSBEVX@psi@@YAHDDDHHPEANH0HNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgst，该符号在函数 ""int __cdecl psi::C_DSBGST(char,char,int,int,int,double *,int,double *,int,double *,int,double *)"" (?C_DSBGST@psi@@YAHDDHHHPEANH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgv，该符号在函数 ""int __cdecl psi::C_DSBGV(char,char,int,int,int,double *,int,double *,int,double *,double *,int,double *)"" (?C_DSBGV@psi@@YAHDDHHHPEANH0H00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgvd，该符号在函数 ""int __cdecl psi::C_DSBGVD(char,char,int,int,int,double *,int,double *,int,double *,double *,int,double *,int,int *,int)"" (?C_DSBGVD@psi@@YAHDDHHHPEANH0H00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgvx，该符号在函数 ""int __cdecl psi::C_DSBGVX(char,char,char,int,int,int,double *,int,double *,int,double *,int,double,double,int,int,doubl",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:38916,Availability,error,error,38916,"pack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrs，该符号在函数 ""int __cdecl psi::C_DPTTRS(int,int,double *,double *,double *,int)"" (?C_DPTTRS@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbev，该符号在函数 ""int __cdecl psi::C_DSBEV(char,char,int,int,double *,int,double *,double *,int,double *)"" (?C_DSBEV@psi@@YAHDDHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevd，该符号在函数 ""int __cdecl psi::C_DSBEVD(char,char,int,int,double *,int,double *,double *,int,double *,int,int *,int)"" (?C_DSBEVD@psi@@YAHDDHHPEANH00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevx，该符号在函数 ""int __cdecl psi::C_DSBEVX(char,char,char,int,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSBEVX@psi@@YAHDDDHHPEANH0HNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgst，该符号在函数 ""int __cdecl psi::C_DSBGST(char,char,int,int,int,double *,int,double *,int,double *,int,double *)"" (?C_DSBGST@psi@@YAHDDHHHPEANH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgv，该符号在函数 ""int __cdecl psi::C_DSBGV(char,char,int,int,int,double *,int,double *,int,double *,double *,int,double *)"" (?C_DSBGV@psi@@YAHDDHHHPEANH0H00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgvd，该符号在函数 ""int __cdecl psi::C_DSBGVD(char,char,int,int,int,double *,int,double *,int,double *,double *,int,double *,int,int *,int)"" (?C_DSBGVD@psi@@YAHDDHHHPEANH0H00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgvx，该符号在函数 ""int __cdecl psi::C_DSBGVX(char,char,char,int,int,int,double *,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSBGVX@psi@@YAHDDDHHHPEANH0H0HNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbtrd，该符号在函数 ""int __cdecl psi::C_DSBTRD(char,char,int,int,double *,int,double *",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:39131,Availability,error,error,39131,"外部符号 dsbev，该符号在函数 ""int __cdecl psi::C_DSBEV(char,char,int,int,double *,int,double *,double *,int,double *)"" (?C_DSBEV@psi@@YAHDDHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevd，该符号在函数 ""int __cdecl psi::C_DSBEVD(char,char,int,int,double *,int,double *,double *,int,double *,int,int *,int)"" (?C_DSBEVD@psi@@YAHDDHHPEANH00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevx，该符号在函数 ""int __cdecl psi::C_DSBEVX(char,char,char,int,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSBEVX@psi@@YAHDDDHHPEANH0HNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgst，该符号在函数 ""int __cdecl psi::C_DSBGST(char,char,int,int,int,double *,int,double *,int,double *,int,double *)"" (?C_DSBGST@psi@@YAHDDHHHPEANH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgv，该符号在函数 ""int __cdecl psi::C_DSBGV(char,char,int,int,int,double *,int,double *,int,double *,double *,int,double *)"" (?C_DSBGV@psi@@YAHDDHHHPEANH0H00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgvd，该符号在函数 ""int __cdecl psi::C_DSBGVD(char,char,int,int,int,double *,int,double *,int,double *,double *,int,double *,int,int *,int)"" (?C_DSBGVD@psi@@YAHDDHHHPEANH0H00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgvx，该符号在函数 ""int __cdecl psi::C_DSBGVX(char,char,char,int,int,int,double *,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSBGVX@psi@@YAHDDDHHHPEANH0H0HNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbtrd，该符号在函数 ""int __cdecl psi::C_DSBTRD(char,char,int,int,double *,int,double *,double *,double *,int,double *)"" (?C_DSBTRD@psi@@YAHDDHHPEANH000H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsgesv，该符号在函数 ""int __cdecl psi::C_DSGESV(int,int,double *,int,int *,double *,int,do",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:39353,Availability,error,error,39353," psi::C_DSBEVD(char,char,int,int,double *,int,double *,double *,int,double *,int,int *,int)"" (?C_DSBEVD@psi@@YAHDDHHPEANH00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevx，该符号在函数 ""int __cdecl psi::C_DSBEVX(char,char,char,int,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSBEVX@psi@@YAHDDDHHPEANH0HNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgst，该符号在函数 ""int __cdecl psi::C_DSBGST(char,char,int,int,int,double *,int,double *,int,double *,int,double *)"" (?C_DSBGST@psi@@YAHDDHHHPEANH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgv，该符号在函数 ""int __cdecl psi::C_DSBGV(char,char,int,int,int,double *,int,double *,int,double *,double *,int,double *)"" (?C_DSBGV@psi@@YAHDDHHHPEANH0H00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgvd，该符号在函数 ""int __cdecl psi::C_DSBGVD(char,char,int,int,int,double *,int,double *,int,double *,double *,int,double *,int,int *,int)"" (?C_DSBGVD@psi@@YAHDDHHHPEANH0H00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgvx，该符号在函数 ""int __cdecl psi::C_DSBGVX(char,char,char,int,int,int,double *,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSBGVX@psi@@YAHDDDHHHPEANH0H0HNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbtrd，该符号在函数 ""int __cdecl psi::C_DSBTRD(char,char,int,int,double *,int,double *,double *,double *,int,double *)"" (?C_DSBTRD@psi@@YAHDDHHPEANH000H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsgesv，该符号在函数 ""int __cdecl psi::C_DSGESV(int,int,double *,int,int *,double *,int,double *,int,double *,int *)"" (?C_DSGESV@psi@@YAHHHPEANHPEAH0H0H01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspcon，该符号在函数 ""int __cdecl psi::C_DSPCON(char,int,double *,int *,double,double *,double *,int *)"" (?C_",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:39598,Availability,error,error,39598,",double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSBEVX@psi@@YAHDDDHHPEANH0HNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgst，该符号在函数 ""int __cdecl psi::C_DSBGST(char,char,int,int,int,double *,int,double *,int,double *,int,double *)"" (?C_DSBGST@psi@@YAHDDHHHPEANH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgv，该符号在函数 ""int __cdecl psi::C_DSBGV(char,char,int,int,int,double *,int,double *,int,double *,double *,int,double *)"" (?C_DSBGV@psi@@YAHDDHHHPEANH0H00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgvd，该符号在函数 ""int __cdecl psi::C_DSBGVD(char,char,int,int,int,double *,int,double *,int,double *,double *,int,double *,int,int *,int)"" (?C_DSBGVD@psi@@YAHDDHHHPEANH0H00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgvx，该符号在函数 ""int __cdecl psi::C_DSBGVX(char,char,char,int,int,int,double *,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSBGVX@psi@@YAHDDDHHHPEANH0H0HNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbtrd，该符号在函数 ""int __cdecl psi::C_DSBTRD(char,char,int,int,double *,int,double *,double *,double *,int,double *)"" (?C_DSBTRD@psi@@YAHDDHHPEANH000H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsgesv，该符号在函数 ""int __cdecl psi::C_DSGESV(int,int,double *,int,int *,double *,int,double *,int,double *,int *)"" (?C_DSGESV@psi@@YAHHHPEANHPEAH0H0H01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspcon，该符号在函数 ""int __cdecl psi::C_DSPCON(char,int,double *,int *,double,double *,double *,int *)"" (?C_DSPCON@psi@@YAHDHPEANPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspev，该符号在函数 ""int __cdecl psi::C_DSPEV(char,char,int,double *,double *,double *,int,double *)"" (?C_DSPEV@psi@@YAHDDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:39902,Availability,error,error,39902,"int,int,int,double *,int,double *,int,double *,int,double *)"" (?C_DSBGST@psi@@YAHDDHHHPEANH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgv，该符号在函数 ""int __cdecl psi::C_DSBGV(char,char,int,int,int,double *,int,double *,int,double *,double *,int,double *)"" (?C_DSBGV@psi@@YAHDDHHHPEANH0H00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgvd，该符号在函数 ""int __cdecl psi::C_DSBGVD(char,char,int,int,int,double *,int,double *,int,double *,double *,int,double *,int,int *,int)"" (?C_DSBGVD@psi@@YAHDDHHHPEANH0H00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgvx，该符号在函数 ""int __cdecl psi::C_DSBGVX(char,char,char,int,int,int,double *,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSBGVX@psi@@YAHDDDHHHPEANH0H0HNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbtrd，该符号在函数 ""int __cdecl psi::C_DSBTRD(char,char,int,int,double *,int,double *,double *,double *,int,double *)"" (?C_DSBTRD@psi@@YAHDDHHPEANH000H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsgesv，该符号在函数 ""int __cdecl psi::C_DSGESV(int,int,double *,int,int *,double *,int,double *,int,double *,int *)"" (?C_DSGESV@psi@@YAHHHPEANHPEAH0H0H01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspcon，该符号在函数 ""int __cdecl psi::C_DSPCON(char,int,double *,int *,double,double *,double *,int *)"" (?C_DSPCON@psi@@YAHDHPEANPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspev，该符号在函数 ""int __cdecl psi::C_DSPEV(char,char,int,double *,double *,double *,int,double *)"" (?C_DSPEV@psi@@YAHDDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevd，该符号在函数 ""int __cdecl psi::C_DSPEVD(char,char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPEVD@psi@@YAHDDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevx，该符号在函数 ""int __cdecl psi",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:40117,Availability,error,error,40117,"t,int,int,double *,int,double *,int,double *,double *,int,double *)"" (?C_DSBGV@psi@@YAHDDHHHPEANH0H00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgvd，该符号在函数 ""int __cdecl psi::C_DSBGVD(char,char,int,int,int,double *,int,double *,int,double *,double *,int,double *,int,int *,int)"" (?C_DSBGVD@psi@@YAHDDHHHPEANH0H00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgvx，该符号在函数 ""int __cdecl psi::C_DSBGVX(char,char,char,int,int,int,double *,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSBGVX@psi@@YAHDDDHHHPEANH0H0HNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbtrd，该符号在函数 ""int __cdecl psi::C_DSBTRD(char,char,int,int,double *,int,double *,double *,double *,int,double *)"" (?C_DSBTRD@psi@@YAHDDHHPEANH000H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsgesv，该符号在函数 ""int __cdecl psi::C_DSGESV(int,int,double *,int,int *,double *,int,double *,int,double *,int *)"" (?C_DSGESV@psi@@YAHHHPEANHPEAH0H0H01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspcon，该符号在函数 ""int __cdecl psi::C_DSPCON(char,int,double *,int *,double,double *,double *,int *)"" (?C_DSPCON@psi@@YAHDHPEANPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspev，该符号在函数 ""int __cdecl psi::C_DSPEV(char,char,int,double *,double *,double *,int,double *)"" (?C_DSPEV@psi@@YAHDDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevd，该符号在函数 ""int __cdecl psi::C_DSPEVD(char,char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPEVD@psi@@YAHDDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevx，该符号在函数 ""int __cdecl psi::C_DSPEVX(char,char,char,int,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPEVX@psi@@YAHDDDHPEANNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK20",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:40332,Availability,error,error,40332,"BGVD(char,char,int,int,int,double *,int,double *,int,double *,double *,int,double *,int,int *,int)"" (?C_DSBGVD@psi@@YAHDDHHHPEANH0H00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgvx，该符号在函数 ""int __cdecl psi::C_DSBGVX(char,char,char,int,int,int,double *,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSBGVX@psi@@YAHDDDHHHPEANH0H0HNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbtrd，该符号在函数 ""int __cdecl psi::C_DSBTRD(char,char,int,int,double *,int,double *,double *,double *,int,double *)"" (?C_DSBTRD@psi@@YAHDDHHPEANH000H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsgesv，该符号在函数 ""int __cdecl psi::C_DSGESV(int,int,double *,int,int *,double *,int,double *,int,double *,int *)"" (?C_DSGESV@psi@@YAHHHPEANHPEAH0H0H01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspcon，该符号在函数 ""int __cdecl psi::C_DSPCON(char,int,double *,int *,double,double *,double *,int *)"" (?C_DSPCON@psi@@YAHDHPEANPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspev，该符号在函数 ""int __cdecl psi::C_DSPEV(char,char,int,double *,double *,double *,int,double *)"" (?C_DSPEV@psi@@YAHDDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevd，该符号在函数 ""int __cdecl psi::C_DSPEVD(char,char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPEVD@psi@@YAHDDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevx，该符号在函数 ""int __cdecl psi::C_DSPEVX(char,char,char,int,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPEVX@psi@@YAHDDDHPEANNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgst，该符号在函数 ""int __cdecl psi::C_DSPGST(int,char,int,double *,double *)"" (?C_DSPGST@psi@@YAHHDHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgv，该符号在函数 ""int __cdec",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:40531,Availability,error,error,40531,"9: 无法解析的外部符号 dsbgvx，该符号在函数 ""int __cdecl psi::C_DSBGVX(char,char,char,int,int,int,double *,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSBGVX@psi@@YAHDDDHHHPEANH0H0HNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbtrd，该符号在函数 ""int __cdecl psi::C_DSBTRD(char,char,int,int,double *,int,double *,double *,double *,int,double *)"" (?C_DSBTRD@psi@@YAHDDHHPEANH000H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsgesv，该符号在函数 ""int __cdecl psi::C_DSGESV(int,int,double *,int,int *,double *,int,double *,int,double *,int *)"" (?C_DSGESV@psi@@YAHHHPEANHPEAH0H0H01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspcon，该符号在函数 ""int __cdecl psi::C_DSPCON(char,int,double *,int *,double,double *,double *,int *)"" (?C_DSPCON@psi@@YAHDHPEANPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspev，该符号在函数 ""int __cdecl psi::C_DSPEV(char,char,int,double *,double *,double *,int,double *)"" (?C_DSPEV@psi@@YAHDDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevd，该符号在函数 ""int __cdecl psi::C_DSPEVD(char,char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPEVD@psi@@YAHDDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevx，该符号在函数 ""int __cdecl psi::C_DSPEVX(char,char,char,int,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPEVX@psi@@YAHDDDHPEANNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgst，该符号在函数 ""int __cdecl psi::C_DSPGST(int,char,int,double *,double *)"" (?C_DSPGST@psi@@YAHHDHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgv，该符号在函数 ""int __cdecl psi::C_DSPGV(int,char,char,int,double *,double *,double *,double *,int,double *)"" (?C_DSPGV@psi@@YAHHDDHPEAN000H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvd，该符号在函",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:40723,Availability,error,error,40723,"_DSBGVX@psi@@YAHDDDHHHPEANH0H0HNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbtrd，该符号在函数 ""int __cdecl psi::C_DSBTRD(char,char,int,int,double *,int,double *,double *,double *,int,double *)"" (?C_DSBTRD@psi@@YAHDDHHPEANH000H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsgesv，该符号在函数 ""int __cdecl psi::C_DSGESV(int,int,double *,int,int *,double *,int,double *,int,double *,int *)"" (?C_DSGESV@psi@@YAHHHPEANHPEAH0H0H01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspcon，该符号在函数 ""int __cdecl psi::C_DSPCON(char,int,double *,int *,double,double *,double *,int *)"" (?C_DSPCON@psi@@YAHDHPEANPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspev，该符号在函数 ""int __cdecl psi::C_DSPEV(char,char,int,double *,double *,double *,int,double *)"" (?C_DSPEV@psi@@YAHDDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevd，该符号在函数 ""int __cdecl psi::C_DSPEVD(char,char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPEVD@psi@@YAHDDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevx，该符号在函数 ""int __cdecl psi::C_DSPEVX(char,char,char,int,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPEVX@psi@@YAHDDDHPEANNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgst，该符号在函数 ""int __cdecl psi::C_DSPGST(int,char,int,double *,double *)"" (?C_DSPGST@psi@@YAHHDHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgv，该符号在函数 ""int __cdecl psi::C_DSPGV(int,char,char,int,double *,double *,double *,double *,int,double *)"" (?C_DSPGV@psi@@YAHHDDHPEAN000H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvd，该符号在函数 ""int __cdecl psi::C_DSPGVD(int,char,char,int,double *,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPGVD@psi@@YAHHDDHPEAN000H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK20",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:40938,Availability,error,error,40938,"D@psi@@YAHDDHHPEANH000H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsgesv，该符号在函数 ""int __cdecl psi::C_DSGESV(int,int,double *,int,int *,double *,int,double *,int,double *,int *)"" (?C_DSGESV@psi@@YAHHHPEANHPEAH0H0H01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspcon，该符号在函数 ""int __cdecl psi::C_DSPCON(char,int,double *,int *,double,double *,double *,int *)"" (?C_DSPCON@psi@@YAHDHPEANPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspev，该符号在函数 ""int __cdecl psi::C_DSPEV(char,char,int,double *,double *,double *,int,double *)"" (?C_DSPEV@psi@@YAHDDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevd，该符号在函数 ""int __cdecl psi::C_DSPEVD(char,char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPEVD@psi@@YAHDDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevx，该符号在函数 ""int __cdecl psi::C_DSPEVX(char,char,char,int,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPEVX@psi@@YAHDDDHPEANNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgst，该符号在函数 ""int __cdecl psi::C_DSPGST(int,char,int,double *,double *)"" (?C_DSPGST@psi@@YAHHDHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgv，该符号在函数 ""int __cdecl psi::C_DSPGV(int,char,char,int,double *,double *,double *,double *,int,double *)"" (?C_DSPGV@psi@@YAHHDDHPEAN000H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvd，该符号在函数 ""int __cdecl psi::C_DSPGVD(int,char,char,int,double *,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPGVD@psi@@YAHHDDHPEAN000H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvx，该符号在函数 ""int __cdecl psi::C_DSPGVX(int,char,char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPGVX@psi@@YAHHDDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.l",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:41197,Availability,error,error,41197,"psi@@YAHHHPEANHPEAH0H0H01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspcon，该符号在函数 ""int __cdecl psi::C_DSPCON(char,int,double *,int *,double,double *,double *,int *)"" (?C_DSPCON@psi@@YAHDHPEANPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspev，该符号在函数 ""int __cdecl psi::C_DSPEV(char,char,int,double *,double *,double *,int,double *)"" (?C_DSPEV@psi@@YAHDDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevd，该符号在函数 ""int __cdecl psi::C_DSPEVD(char,char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPEVD@psi@@YAHDDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevx，该符号在函数 ""int __cdecl psi::C_DSPEVX(char,char,char,int,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPEVX@psi@@YAHDDDHPEANNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgst，该符号在函数 ""int __cdecl psi::C_DSPGST(int,char,int,double *,double *)"" (?C_DSPGST@psi@@YAHHDHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgv，该符号在函数 ""int __cdecl psi::C_DSPGV(int,char,char,int,double *,double *,double *,double *,int,double *)"" (?C_DSPGV@psi@@YAHHDDHPEAN000H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvd，该符号在函数 ""int __cdecl psi::C_DSPGVD(int,char,char,int,double *,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPGVD@psi@@YAHHDDHPEAN000H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvx，该符号在函数 ""int __cdecl psi::C_DSPGVX(int,char,char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPGVX@psi@@YAHHDDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsprfs，该符号在函数 ""int __cdecl psi::C_DSPRFS(char,int,int,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSPRFS@psi@@YAHDHHPE",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:41366,Availability,error,error,41366,")"" (?C_DSPCON@psi@@YAHDHPEANPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspev，该符号在函数 ""int __cdecl psi::C_DSPEV(char,char,int,double *,double *,double *,int,double *)"" (?C_DSPEV@psi@@YAHDDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevd，该符号在函数 ""int __cdecl psi::C_DSPEVD(char,char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPEVD@psi@@YAHDDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevx，该符号在函数 ""int __cdecl psi::C_DSPEVX(char,char,char,int,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPEVX@psi@@YAHDDDHPEANNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgst，该符号在函数 ""int __cdecl psi::C_DSPGST(int,char,int,double *,double *)"" (?C_DSPGST@psi@@YAHHDHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgv，该符号在函数 ""int __cdecl psi::C_DSPGV(int,char,char,int,double *,double *,double *,double *,int,double *)"" (?C_DSPGV@psi@@YAHHDDHPEAN000H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvd，该符号在函数 ""int __cdecl psi::C_DSPGVD(int,char,char,int,double *,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPGVD@psi@@YAHHDDHPEAN000H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvx，该符号在函数 ""int __cdecl psi::C_DSPGVX(int,char,char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPGVX@psi@@YAHHDDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsprfs，该符号在函数 ""int __cdecl psi::C_DSPRFS(char,int,int,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSPRFS@psi@@YAHDHHPEAN0PEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsv，该符号在函数 ""int __cdecl psi::C_DSPSV(char,int,int,double *,int *,double *,int)"" (?C_DSPSV@psi@@YAHDHHPE",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:41573,Availability,error,error,41573,"HPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevd，该符号在函数 ""int __cdecl psi::C_DSPEVD(char,char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPEVD@psi@@YAHDDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevx，该符号在函数 ""int __cdecl psi::C_DSPEVX(char,char,char,int,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPEVX@psi@@YAHDDDHPEANNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgst，该符号在函数 ""int __cdecl psi::C_DSPGST(int,char,int,double *,double *)"" (?C_DSPGST@psi@@YAHHDHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgv，该符号在函数 ""int __cdecl psi::C_DSPGV(int,char,char,int,double *,double *,double *,double *,int,double *)"" (?C_DSPGV@psi@@YAHHDDHPEAN000H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvd，该符号在函数 ""int __cdecl psi::C_DSPGVD(int,char,char,int,double *,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPGVD@psi@@YAHHDDHPEAN000H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvx，该符号在函数 ""int __cdecl psi::C_DSPGVX(int,char,char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPGVX@psi@@YAHHDDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsprfs，该符号在函数 ""int __cdecl psi::C_DSPRFS(char,int,int,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSPRFS@psi@@YAHDHHPEAN0PEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsv，该符号在函数 ""int __cdecl psi::C_DSPSV(char,int,int,double *,int *,double *,int)"" (?C_DSPSV@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsvx，该符号在函数 ""int __cdecl psi::C_DSPSVX(char,char,int,int,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DSPSVX@psi@@YAHDDH",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:41803,Availability,error,error,41803,"ntfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevx，该符号在函数 ""int __cdecl psi::C_DSPEVX(char,char,char,int,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPEVX@psi@@YAHDDDHPEANNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgst，该符号在函数 ""int __cdecl psi::C_DSPGST(int,char,int,double *,double *)"" (?C_DSPGST@psi@@YAHHDHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgv，该符号在函数 ""int __cdecl psi::C_DSPGV(int,char,char,int,double *,double *,double *,double *,int,double *)"" (?C_DSPGV@psi@@YAHHDDHPEAN000H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvd，该符号在函数 ""int __cdecl psi::C_DSPGVD(int,char,char,int,double *,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPGVD@psi@@YAHHDDHPEAN000H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvx，该符号在函数 ""int __cdecl psi::C_DSPGVX(int,char,char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPGVX@psi@@YAHHDDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsprfs，该符号在函数 ""int __cdecl psi::C_DSPRFS(char,int,int,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSPRFS@psi@@YAHDHHPEAN0PEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsv，该符号在函数 ""int __cdecl psi::C_DSPSV(char,int,int,double *,int *,double *,int)"" (?C_DSPSV@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsvx，该符号在函数 ""int __cdecl psi::C_DSPSVX(char,char,int,int,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DSPSVX@psi@@YAHDDHHPEAN0PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrd，该符号在函数 ""int __cdecl psi::C_DSPTRD(char,int,double *,double *,double *,double *)"" (?C_DSPTRD@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:42077,Availability,error,error,42077,"tfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgst，该符号在函数 ""int __cdecl psi::C_DSPGST(int,char,int,double *,double *)"" (?C_DSPGST@psi@@YAHHDHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgv，该符号在函数 ""int __cdecl psi::C_DSPGV(int,char,char,int,double *,double *,double *,double *,int,double *)"" (?C_DSPGV@psi@@YAHHDDHPEAN000H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvd，该符号在函数 ""int __cdecl psi::C_DSPGVD(int,char,char,int,double *,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPGVD@psi@@YAHHDDHPEAN000H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvx，该符号在函数 ""int __cdecl psi::C_DSPGVX(int,char,char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPGVX@psi@@YAHHDDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsprfs，该符号在函数 ""int __cdecl psi::C_DSPRFS(char,int,int,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSPRFS@psi@@YAHDHHPEAN0PEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsv，该符号在函数 ""int __cdecl psi::C_DSPSV(char,int,int,double *,int *,double *,int)"" (?C_DSPSV@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsvx，该符号在函数 ""int __cdecl psi::C_DSPSVX(char,char,int,int,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DSPSVX@psi@@YAHDDHHPEAN0PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrd，该符号在函数 ""int __cdecl psi::C_DSPTRD(char,int,double *,double *,double *,double *)"" (?C_DSPTRD@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrf，该符号在函数 ""int __cdecl psi::C_DSPTRF(char,int,double *,int *)"" (?C_DSPTRF@psi@@YAHDHPEANPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptri，该符号在函数 ""int __cdecl psi::C_DSPTRI(char,int,double *,int *,double *)"" (?C_D",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:42323,Availability,error,error,42323,"，该符号在函数 ""int __cdecl psi::C_DSPGV(int,char,char,int,double *,double *,double *,double *,int,double *)"" (?C_DSPGV@psi@@YAHHDDHPEAN000H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvd，该符号在函数 ""int __cdecl psi::C_DSPGVD(int,char,char,int,double *,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPGVD@psi@@YAHHDDHPEAN000H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvx，该符号在函数 ""int __cdecl psi::C_DSPGVX(int,char,char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPGVX@psi@@YAHHDDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsprfs，该符号在函数 ""int __cdecl psi::C_DSPRFS(char,int,int,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSPRFS@psi@@YAHDHHPEAN0PEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsv，该符号在函数 ""int __cdecl psi::C_DSPSV(char,int,int,double *,int *,double *,int)"" (?C_DSPSV@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsvx，该符号在函数 ""int __cdecl psi::C_DSPSVX(char,char,int,int,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DSPSVX@psi@@YAHDDHHPEAN0PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrd，该符号在函数 ""int __cdecl psi::C_DSPTRD(char,int,double *,double *,double *,double *)"" (?C_DSPTRD@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrf，该符号在函数 ""int __cdecl psi::C_DSPTRF(char,int,double *,int *)"" (?C_DSPTRF@psi@@YAHDHPEANPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptri，该符号在函数 ""int __cdecl psi::C_DSPTRI(char,int,double *,int *,double *)"" (?C_DSPTRI@psi@@YAHDHPEANPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrs，该符号在函数 ""int __cdecl psi::C_DSPTRS(char,int,int,double *,int *,double *,int)"" (?C_DSPTRS@psi@@YAHDHHPEANPEAH0H@Z) 中",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:42504,Availability,error,error,42504,"spgvd，该符号在函数 ""int __cdecl psi::C_DSPGVD(int,char,char,int,double *,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPGVD@psi@@YAHHDDHPEAN000H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvx，该符号在函数 ""int __cdecl psi::C_DSPGVX(int,char,char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPGVX@psi@@YAHHDDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsprfs，该符号在函数 ""int __cdecl psi::C_DSPRFS(char,int,int,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSPRFS@psi@@YAHDHHPEAN0PEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsv，该符号在函数 ""int __cdecl psi::C_DSPSV(char,int,int,double *,int *,double *,int)"" (?C_DSPSV@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsvx，该符号在函数 ""int __cdecl psi::C_DSPSVX(char,char,int,int,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DSPSVX@psi@@YAHDDHHPEAN0PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrd，该符号在函数 ""int __cdecl psi::C_DSPTRD(char,int,double *,double *,double *,double *)"" (?C_DSPTRD@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrf，该符号在函数 ""int __cdecl psi::C_DSPTRF(char,int,double *,int *)"" (?C_DSPTRF@psi@@YAHDHPEANPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptri，该符号在函数 ""int __cdecl psi::C_DSPTRI(char,int,double *,int *,double *)"" (?C_DSPTRI@psi@@YAHDHPEANPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrs，该符号在函数 ""int __cdecl psi::C_DSPTRS(char,int,int,double *,int *,double *,int)"" (?C_DSPTRS@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstebz，该符号在函数 ""int __cdecl psi::C_DSTEBZ(char,char,int,double,double,int,int,double,double *,double *,int *,int *,double *,int *,int *,doubl",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:42729,Availability,error,error,42729,"rror LNK2019: 无法解析的外部符号 dspgvx，该符号在函数 ""int __cdecl psi::C_DSPGVX(int,char,char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPGVX@psi@@YAHHDDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsprfs，该符号在函数 ""int __cdecl psi::C_DSPRFS(char,int,int,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSPRFS@psi@@YAHDHHPEAN0PEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsv，该符号在函数 ""int __cdecl psi::C_DSPSV(char,int,int,double *,int *,double *,int)"" (?C_DSPSV@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsvx，该符号在函数 ""int __cdecl psi::C_DSPSVX(char,char,int,int,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DSPSVX@psi@@YAHDDHHPEAN0PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrd，该符号在函数 ""int __cdecl psi::C_DSPTRD(char,int,double *,double *,double *,double *)"" (?C_DSPTRD@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrf，该符号在函数 ""int __cdecl psi::C_DSPTRF(char,int,double *,int *)"" (?C_DSPTRF@psi@@YAHDHPEANPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptri，该符号在函数 ""int __cdecl psi::C_DSPTRI(char,int,double *,int *,double *)"" (?C_DSPTRI@psi@@YAHDHPEANPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrs，该符号在函数 ""int __cdecl psi::C_DSPTRS(char,int,int,double *,int *,double *,int)"" (?C_DSPTRS@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstebz，该符号在函数 ""int __cdecl psi::C_DSTEBZ(char,char,int,double,double,int,int,double,double *,double *,int *,int *,double *,int *,int *,double *,int *)"" (?C_DSTEBZ@psi@@YAHDDHNNHHNPEAN0PEAH101101@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstedc，该符号在函数 ""int __cdecl psi::C_DSTEDC(char,int,double *,double *,double *,int,d",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:42913,Availability,error,error,42913,"t *,int *)"" (?C_DSPGVX@psi@@YAHHDDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsprfs，该符号在函数 ""int __cdecl psi::C_DSPRFS(char,int,int,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSPRFS@psi@@YAHDHHPEAN0PEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsv，该符号在函数 ""int __cdecl psi::C_DSPSV(char,int,int,double *,int *,double *,int)"" (?C_DSPSV@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsvx，该符号在函数 ""int __cdecl psi::C_DSPSVX(char,char,int,int,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DSPSVX@psi@@YAHDDHHPEAN0PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrd，该符号在函数 ""int __cdecl psi::C_DSPTRD(char,int,double *,double *,double *,double *)"" (?C_DSPTRD@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrf，该符号在函数 ""int __cdecl psi::C_DSPTRF(char,int,double *,int *)"" (?C_DSPTRF@psi@@YAHDHPEANPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptri，该符号在函数 ""int __cdecl psi::C_DSPTRI(char,int,double *,int *,double *)"" (?C_DSPTRI@psi@@YAHDHPEANPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrs，该符号在函数 ""int __cdecl psi::C_DSPTRS(char,int,int,double *,int *,double *,int)"" (?C_DSPTRS@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstebz，该符号在函数 ""int __cdecl psi::C_DSTEBZ(char,char,int,double,double,int,int,double,double *,double *,int *,int *,double *,int *,int *,double *,int *)"" (?C_DSTEBZ@psi@@YAHDDHNNHHNPEAN0PEAH101101@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstedc，该符号在函数 ""int __cdecl psi::C_DSTEDC(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEDC@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstegr，该符号在函数 ""int __cdecl psi::C_DSTEGR(char,c",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:43077,Availability,error,error,43077,",int,int,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSPRFS@psi@@YAHDHHPEAN0PEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsv，该符号在函数 ""int __cdecl psi::C_DSPSV(char,int,int,double *,int *,double *,int)"" (?C_DSPSV@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsvx，该符号在函数 ""int __cdecl psi::C_DSPSVX(char,char,int,int,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DSPSVX@psi@@YAHDDHHPEAN0PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrd，该符号在函数 ""int __cdecl psi::C_DSPTRD(char,int,double *,double *,double *,double *)"" (?C_DSPTRD@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrf，该符号在函数 ""int __cdecl psi::C_DSPTRF(char,int,double *,int *)"" (?C_DSPTRF@psi@@YAHDHPEANPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptri，该符号在函数 ""int __cdecl psi::C_DSPTRI(char,int,double *,int *,double *)"" (?C_DSPTRI@psi@@YAHDHPEANPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrs，该符号在函数 ""int __cdecl psi::C_DSPTRS(char,int,int,double *,int *,double *,int)"" (?C_DSPTRS@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstebz，该符号在函数 ""int __cdecl psi::C_DSTEBZ(char,char,int,double,double,int,int,double,double *,double *,int *,int *,double *,int *,int *,double *,int *)"" (?C_DSTEBZ@psi@@YAHDDHNNHHNPEAN0PEAH101101@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstedc，该符号在函数 ""int __cdecl psi::C_DSTEDC(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEDC@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstegr，该符号在函数 ""int __cdecl psi::C_DSTEGR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEGR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:43251,Availability,error,error,43251,"or LNK2019: 无法解析的外部符号 dspsv，该符号在函数 ""int __cdecl psi::C_DSPSV(char,int,int,double *,int *,double *,int)"" (?C_DSPSV@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsvx，该符号在函数 ""int __cdecl psi::C_DSPSVX(char,char,int,int,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DSPSVX@psi@@YAHDDHHPEAN0PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrd，该符号在函数 ""int __cdecl psi::C_DSPTRD(char,int,double *,double *,double *,double *)"" (?C_DSPTRD@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrf，该符号在函数 ""int __cdecl psi::C_DSPTRF(char,int,double *,int *)"" (?C_DSPTRF@psi@@YAHDHPEANPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptri，该符号在函数 ""int __cdecl psi::C_DSPTRI(char,int,double *,int *,double *)"" (?C_DSPTRI@psi@@YAHDHPEANPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrs，该符号在函数 ""int __cdecl psi::C_DSPTRS(char,int,int,double *,int *,double *,int)"" (?C_DSPTRS@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstebz，该符号在函数 ""int __cdecl psi::C_DSTEBZ(char,char,int,double,double,int,int,double,double *,double *,int *,int *,double *,int *,int *,double *,int *)"" (?C_DSTEBZ@psi@@YAHDDHNNHHNPEAN0PEAH101101@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstedc，该符号在函数 ""int __cdecl psi::C_DSTEDC(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEDC@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstegr，该符号在函数 ""int __cdecl psi::C_DSTEGR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEGR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstein，该符号在函数 ""int __cdecl psi::C_DSTEIN(int,double *,double *,int,double *,int *,int *,double *,int,double *,int *,int *)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:43435,Availability,error,error,43435,"_cdecl psi::C_DSPSVX(char,char,int,int,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DSPSVX@psi@@YAHDDHHPEAN0PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrd，该符号在函数 ""int __cdecl psi::C_DSPTRD(char,int,double *,double *,double *,double *)"" (?C_DSPTRD@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrf，该符号在函数 ""int __cdecl psi::C_DSPTRF(char,int,double *,int *)"" (?C_DSPTRF@psi@@YAHDHPEANPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptri，该符号在函数 ""int __cdecl psi::C_DSPTRI(char,int,double *,int *,double *)"" (?C_DSPTRI@psi@@YAHDHPEANPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrs，该符号在函数 ""int __cdecl psi::C_DSPTRS(char,int,int,double *,int *,double *,int)"" (?C_DSPTRS@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstebz，该符号在函数 ""int __cdecl psi::C_DSTEBZ(char,char,int,double,double,int,int,double,double *,double *,int *,int *,double *,int *,int *,double *,int *)"" (?C_DSTEBZ@psi@@YAHDDHNNHHNPEAN0PEAH101101@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstedc，该符号在函数 ""int __cdecl psi::C_DSTEDC(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEDC@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstegr，该符号在函数 ""int __cdecl psi::C_DSTEGR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEGR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstein，该符号在函数 ""int __cdecl psi::C_DSTEIN(int,double *,double *,int,double *,int *,int *,double *,int,double *,int *,int *)"" (?C_DSTEIN@psi@@YAHHPEAN0H0PEAH10H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsteqr，该符号在函数 ""int __cdecl psi::C_DSTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DSTEQR@psi@@YAHDHPEA",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:43697,Availability,error,error,43697,"::C_DSPTRD(char,int,double *,double *,double *,double *)"" (?C_DSPTRD@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrf，该符号在函数 ""int __cdecl psi::C_DSPTRF(char,int,double *,int *)"" (?C_DSPTRF@psi@@YAHDHPEANPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptri，该符号在函数 ""int __cdecl psi::C_DSPTRI(char,int,double *,int *,double *)"" (?C_DSPTRI@psi@@YAHDHPEANPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrs，该符号在函数 ""int __cdecl psi::C_DSPTRS(char,int,int,double *,int *,double *,int)"" (?C_DSPTRS@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstebz，该符号在函数 ""int __cdecl psi::C_DSTEBZ(char,char,int,double,double,int,int,double,double *,double *,int *,int *,double *,int *,int *,double *,int *)"" (?C_DSTEBZ@psi@@YAHDDHNNHHNPEAN0PEAH101101@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstedc，该符号在函数 ""int __cdecl psi::C_DSTEDC(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEDC@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstegr，该符号在函数 ""int __cdecl psi::C_DSTEGR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEGR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstein，该符号在函数 ""int __cdecl psi::C_DSTEIN(int,double *,double *,int,double *,int *,int *,double *,int,double *,int *,int *)"" (?C_DSTEIN@psi@@YAHHPEAN0H0PEAH10H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsteqr，该符号在函数 ""int __cdecl psi::C_DSTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DSTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsterf，该符号在函数 ""int __cdecl psi::C_DSTERF(int,double *,double *)"" (?C_DSTERF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstev",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:43906,Availability,error,error,43906,"HPEANPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptri，该符号在函数 ""int __cdecl psi::C_DSPTRI(char,int,double *,int *,double *)"" (?C_DSPTRI@psi@@YAHDHPEANPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrs，该符号在函数 ""int __cdecl psi::C_DSPTRS(char,int,int,double *,int *,double *,int)"" (?C_DSPTRS@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstebz，该符号在函数 ""int __cdecl psi::C_DSTEBZ(char,char,int,double,double,int,int,double,double *,double *,int *,int *,double *,int *,int *,double *,int *)"" (?C_DSTEBZ@psi@@YAHDDHNNHHNPEAN0PEAH101101@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstedc，该符号在函数 ""int __cdecl psi::C_DSTEDC(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEDC@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstegr，该符号在函数 ""int __cdecl psi::C_DSTEGR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEGR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstein，该符号在函数 ""int __cdecl psi::C_DSTEIN(int,double *,double *,int,double *,int *,int *,double *,int,double *,int *,int *)"" (?C_DSTEIN@psi@@YAHHPEAN0H0PEAH10H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsteqr，该符号在函数 ""int __cdecl psi::C_DSTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DSTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsterf，该符号在函数 ""int __cdecl psi::C_DSTERF(int,double *,double *)"" (?C_DSTERF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstev，该符号在函数 ""int __cdecl psi::C_DSTEV(char,int,double *,double *,double *,int,double *)"" (?C_DSTEV@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevd，该符号在函数 ""int __cdecl psi::C_DSTEVD(char,int,double *,d",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:44179,Availability,error,error,44179,"dsptrs，该符号在函数 ""int __cdecl psi::C_DSPTRS(char,int,int,double *,int *,double *,int)"" (?C_DSPTRS@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstebz，该符号在函数 ""int __cdecl psi::C_DSTEBZ(char,char,int,double,double,int,int,double,double *,double *,int *,int *,double *,int *,int *,double *,int *)"" (?C_DSTEBZ@psi@@YAHDDHNNHHNPEAN0PEAH101101@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstedc，该符号在函数 ""int __cdecl psi::C_DSTEDC(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEDC@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstegr，该符号在函数 ""int __cdecl psi::C_DSTEGR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEGR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstein，该符号在函数 ""int __cdecl psi::C_DSTEIN(int,double *,double *,int,double *,int *,int *,double *,int,double *,int *,int *)"" (?C_DSTEIN@psi@@YAHHPEAN0H0PEAH10H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsteqr，该符号在函数 ""int __cdecl psi::C_DSTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DSTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsterf，该符号在函数 ""int __cdecl psi::C_DSTERF(int,double *,double *)"" (?C_DSTERF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstev，该符号在函数 ""int __cdecl psi::C_DSTEV(char,int,double *,double *,double *,int,double *)"" (?C_DSTEV@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevd，该符号在函数 ""int __cdecl psi::C_DSTEVD(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEVD@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevr，该符号在函数 ""int __cdecl psi::C_DSTEVR(char,char,int,double *,double *,double,double,int,int,double,",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:44408,Availability,error,error,44408,"l psi::C_DSTEBZ(char,char,int,double,double,int,int,double,double *,double *,int *,int *,double *,int *,int *,double *,int *)"" (?C_DSTEBZ@psi@@YAHDDHNNHHNPEAN0PEAH101101@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstedc，该符号在函数 ""int __cdecl psi::C_DSTEDC(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEDC@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstegr，该符号在函数 ""int __cdecl psi::C_DSTEGR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEGR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstein，该符号在函数 ""int __cdecl psi::C_DSTEIN(int,double *,double *,int,double *,int *,int *,double *,int,double *,int *,int *)"" (?C_DSTEIN@psi@@YAHHPEAN0H0PEAH10H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsteqr，该符号在函数 ""int __cdecl psi::C_DSTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DSTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsterf，该符号在函数 ""int __cdecl psi::C_DSTERF(int,double *,double *)"" (?C_DSTERF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstev，该符号在函数 ""int __cdecl psi::C_DSTEV(char,int,double *,double *,double *,int,double *)"" (?C_DSTEV@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevd，该符号在函数 ""int __cdecl psi::C_DSTEVD(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEVD@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevr，该符号在函数 ""int __cdecl psi::C_DSTEVR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEVR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevx，该符号在函数 ""int __cdecl psi::C_DSTE",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:44597,Availability,error,error,44597,"被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstedc，该符号在函数 ""int __cdecl psi::C_DSTEDC(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEDC@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstegr，该符号在函数 ""int __cdecl psi::C_DSTEGR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEGR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstein，该符号在函数 ""int __cdecl psi::C_DSTEIN(int,double *,double *,int,double *,int *,int *,double *,int,double *,int *,int *)"" (?C_DSTEIN@psi@@YAHHPEAN0H0PEAH10H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsteqr，该符号在函数 ""int __cdecl psi::C_DSTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DSTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsterf，该符号在函数 ""int __cdecl psi::C_DSTERF(int,double *,double *)"" (?C_DSTERF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstev，该符号在函数 ""int __cdecl psi::C_DSTEV(char,int,double *,double *,double *,int,double *)"" (?C_DSTEV@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevd，该符号在函数 ""int __cdecl psi::C_DSTEVD(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEVD@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevr，该符号在函数 ""int __cdecl psi::C_DSTEVR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEVR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevx，该符号在函数 ""int __cdecl psi::C_DSTEVX(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSTEVX@psi@@YAHDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:44755,Availability,error,error,44755,"_DSTEDC@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstegr，该符号在函数 ""int __cdecl psi::C_DSTEGR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEGR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstein，该符号在函数 ""int __cdecl psi::C_DSTEIN(int,double *,double *,int,double *,int *,int *,double *,int,double *,int *,int *)"" (?C_DSTEIN@psi@@YAHHPEAN0H0PEAH10H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsteqr，该符号在函数 ""int __cdecl psi::C_DSTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DSTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsterf，该符号在函数 ""int __cdecl psi::C_DSTERF(int,double *,double *)"" (?C_DSTERF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstev，该符号在函数 ""int __cdecl psi::C_DSTEV(char,int,double *,double *,double *,int,double *)"" (?C_DSTEV@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevd，该符号在函数 ""int __cdecl psi::C_DSTEVD(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEVD@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevr，该符号在函数 ""int __cdecl psi::C_DSTEVR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEVR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevx，该符号在函数 ""int __cdecl psi::C_DSTEVX(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSTEVX@psi@@YAHDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsycon，该符号在函数 ""int __cdecl psi::C_DSYCON(char,int,double *,int,int *,double,double *,double *,int *)"" (?C_DSYCON@psi@@YA",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:44941,Availability,error,error,44941,"uble,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEGR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstein，该符号在函数 ""int __cdecl psi::C_DSTEIN(int,double *,double *,int,double *,int *,int *,double *,int,double *,int *,int *)"" (?C_DSTEIN@psi@@YAHHPEAN0H0PEAH10H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsteqr，该符号在函数 ""int __cdecl psi::C_DSTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DSTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsterf，该符号在函数 ""int __cdecl psi::C_DSTERF(int,double *,double *)"" (?C_DSTERF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstev，该符号在函数 ""int __cdecl psi::C_DSTEV(char,int,double *,double *,double *,int,double *)"" (?C_DSTEV@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevd，该符号在函数 ""int __cdecl psi::C_DSTEVD(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEVD@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevr，该符号在函数 ""int __cdecl psi::C_DSTEVR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEVR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevx，该符号在函数 ""int __cdecl psi::C_DSTEVX(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSTEVX@psi@@YAHDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsycon，该符号在函数 ""int __cdecl psi::C_DSYCON(char,int,double *,int,int *,double,double *,double *,int *)"" (?C_DSYCON@psi@@YAHDHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev，该符号在函数 ""int __cdecl psi::C_DSYEV(char,char,int,double *,int,double *,double *,int)"" (?C_DSYEV@psi@@YAHDDHPEA",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:45150,Availability,error,error,45150,"t,double *,int *,int *,double *,int,double *,int *,int *)"" (?C_DSTEIN@psi@@YAHHPEAN0H0PEAH10H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsteqr，该符号在函数 ""int __cdecl psi::C_DSTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DSTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsterf，该符号在函数 ""int __cdecl psi::C_DSTERF(int,double *,double *)"" (?C_DSTERF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstev，该符号在函数 ""int __cdecl psi::C_DSTEV(char,int,double *,double *,double *,int,double *)"" (?C_DSTEV@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevd，该符号在函数 ""int __cdecl psi::C_DSTEVD(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEVD@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevr，该符号在函数 ""int __cdecl psi::C_DSTEVR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEVR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevx，该符号在函数 ""int __cdecl psi::C_DSTEVX(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSTEVX@psi@@YAHDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsycon，该符号在函数 ""int __cdecl psi::C_DSYCON(char,int,double *,int,int *,double,double *,double *,int *)"" (?C_DSYCON@psi@@YAHDHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev，该符号在函数 ""int __cdecl psi::C_DSYEV(char,char,int,double *,int,double *,double *,int)"" (?C_DSYEV@psi@@YAHDDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevd，该符号在函数 ""int __cdecl psi::C_DSYEVD(char,char,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYEVD@psi@@YAHDDHPEANH00HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intf",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:45423,Availability,error,error,45423,"si@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsterf，该符号在函数 ""int __cdecl psi::C_DSTERF(int,double *,double *)"" (?C_DSTERF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstev，该符号在函数 ""int __cdecl psi::C_DSTEV(char,int,double *,double *,double *,int,double *)"" (?C_DSTEV@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevd，该符号在函数 ""int __cdecl psi::C_DSTEVD(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEVD@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevr，该符号在函数 ""int __cdecl psi::C_DSTEVR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEVR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevx，该符号在函数 ""int __cdecl psi::C_DSTEVX(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSTEVX@psi@@YAHDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsycon，该符号在函数 ""int __cdecl psi::C_DSYCON(char,int,double *,int,int *,double,double *,double *,int *)"" (?C_DSYCON@psi@@YAHDHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev，该符号在函数 ""int __cdecl psi::C_DSYEV(char,char,int,double *,int,double *,double *,int)"" (?C_DSYEV@psi@@YAHDDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevd，该符号在函数 ""int __cdecl psi::C_DSYEVD(char,char,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYEVD@psi@@YAHDDHPEANH00HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevr，该符号在函数 ""int __cdecl psi::C_DSYEVR(char,char,char,int,double *,int,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSYEVR@psi@@YAHDDDHPEANHNNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapac",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:45686,Availability,error,error,45686,"法解析的外部符号 dstev，该符号在函数 ""int __cdecl psi::C_DSTEV(char,int,double *,double *,double *,int,double *)"" (?C_DSTEV@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevd，该符号在函数 ""int __cdecl psi::C_DSTEVD(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEVD@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevr，该符号在函数 ""int __cdecl psi::C_DSTEVR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEVR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevx，该符号在函数 ""int __cdecl psi::C_DSTEVX(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSTEVX@psi@@YAHDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsycon，该符号在函数 ""int __cdecl psi::C_DSYCON(char,int,double *,int,int *,double,double *,double *,int *)"" (?C_DSYCON@psi@@YAHDHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev，该符号在函数 ""int __cdecl psi::C_DSYEV(char,char,int,double *,int,double *,double *,int)"" (?C_DSYEV@psi@@YAHDDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevd，该符号在函数 ""int __cdecl psi::C_DSYEVD(char,char,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYEVD@psi@@YAHDDHPEANH00HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevr，该符号在函数 ""int __cdecl psi::C_DSYEVR(char,char,char,int,double *,int,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSYEVR@psi@@YAHDDDHPEANHNNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevx，该符号在函数 ""int __cdecl psi::C_DSYEVX(char,char,char,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int,int *,int *)"" (?C_DSYEVX@psi@@YAHDDDHPEANHNNHHN",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:45890,Availability,error,error,45890,"dstevd，该符号在函数 ""int __cdecl psi::C_DSTEVD(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEVD@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevr，该符号在函数 ""int __cdecl psi::C_DSTEVR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEVR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevx，该符号在函数 ""int __cdecl psi::C_DSTEVX(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSTEVX@psi@@YAHDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsycon，该符号在函数 ""int __cdecl psi::C_DSYCON(char,int,double *,int,int *,double,double *,double *,int *)"" (?C_DSYCON@psi@@YAHDHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev，该符号在函数 ""int __cdecl psi::C_DSYEV(char,char,int,double *,int,double *,double *,int)"" (?C_DSYEV@psi@@YAHDDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevd，该符号在函数 ""int __cdecl psi::C_DSYEVD(char,char,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYEVD@psi@@YAHDDHPEANH00HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevr，该符号在函数 ""int __cdecl psi::C_DSYEVR(char,char,char,int,double *,int,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSYEVR@psi@@YAHDDDHPEANHNNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevx，该符号在函数 ""int __cdecl psi::C_DSYEVX(char,char,char,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int,int *,int *)"" (?C_DSYEVX@psi@@YAHDDDHPEANHNNHHNPEAH00H0H11@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygst，该符号在函数 ""int __cdecl psi::C_DSYGST(int,char,int,double *,int,double *,int)"" (?C_DSYGST@psi@@YAHHDHPEANH0H@Z) 中被",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:46077,Availability,error,error,46077,"9: 无法解析的外部符号 dstevr，该符号在函数 ""int __cdecl psi::C_DSTEVR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEVR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevx，该符号在函数 ""int __cdecl psi::C_DSTEVX(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSTEVX@psi@@YAHDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsycon，该符号在函数 ""int __cdecl psi::C_DSYCON(char,int,double *,int,int *,double,double *,double *,int *)"" (?C_DSYCON@psi@@YAHDHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev，该符号在函数 ""int __cdecl psi::C_DSYEV(char,char,int,double *,int,double *,double *,int)"" (?C_DSYEV@psi@@YAHDDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevd，该符号在函数 ""int __cdecl psi::C_DSYEVD(char,char,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYEVD@psi@@YAHDDHPEANH00HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevr，该符号在函数 ""int __cdecl psi::C_DSYEVR(char,char,char,int,double *,int,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSYEVR@psi@@YAHDDDHPEANHNNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevx，该符号在函数 ""int __cdecl psi::C_DSYEVX(char,char,char,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int,int *,int *)"" (?C_DSYEVX@psi@@YAHDDDHPEANHNNHHNPEAH00H0H11@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygst，该符号在函数 ""int __cdecl psi::C_DSYGST(int,char,int,double *,int,double *,int)"" (?C_DSYGST@psi@@YAHHDHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygv，该符号在函数 ""int __cdecl psi::C_DSYGV(int,char,char,int,double *,int,double *,int,double *,double *,int)"" (?C_DSYGV@psi@@YAHHDDHPEANH",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:46282,Availability,error,error,46282,"pack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevx，该符号在函数 ""int __cdecl psi::C_DSTEVX(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSTEVX@psi@@YAHDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsycon，该符号在函数 ""int __cdecl psi::C_DSYCON(char,int,double *,int,int *,double,double *,double *,int *)"" (?C_DSYCON@psi@@YAHDHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev，该符号在函数 ""int __cdecl psi::C_DSYEV(char,char,int,double *,int,double *,double *,int)"" (?C_DSYEV@psi@@YAHDDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevd，该符号在函数 ""int __cdecl psi::C_DSYEVD(char,char,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYEVD@psi@@YAHDDHPEANH00HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevr，该符号在函数 ""int __cdecl psi::C_DSYEVR(char,char,char,int,double *,int,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSYEVR@psi@@YAHDDDHPEANHNNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevx，该符号在函数 ""int __cdecl psi::C_DSYEVX(char,char,char,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int,int *,int *)"" (?C_DSYEVX@psi@@YAHDDDHPEANHNNHHNPEAH00H0H11@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygst，该符号在函数 ""int __cdecl psi::C_DSYGST(int,char,int,double *,int,double *,int)"" (?C_DSYGST@psi@@YAHHDHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygv，该符号在函数 ""int __cdecl psi::C_DSYGV(int,char,char,int,double *,int,double *,int,double *,double *,int)"" (?C_DSYGV@psi@@YAHHDDHPEANH0H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygvd，该符号在函数 ""int __cdecl psi::C_DSYGVD(int,char,char,int,double *,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYGVD@psi@@YAHHDDHPEANH0H00HPEAHH@Z) 中被引用;",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:46556,Availability,error,error,46556,"fc.cc.obj) : error LNK2019: 无法解析的外部符号 dsycon，该符号在函数 ""int __cdecl psi::C_DSYCON(char,int,double *,int,int *,double,double *,double *,int *)"" (?C_DSYCON@psi@@YAHDHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev，该符号在函数 ""int __cdecl psi::C_DSYEV(char,char,int,double *,int,double *,double *,int)"" (?C_DSYEV@psi@@YAHDDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevd，该符号在函数 ""int __cdecl psi::C_DSYEVD(char,char,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYEVD@psi@@YAHDDHPEANH00HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevr，该符号在函数 ""int __cdecl psi::C_DSYEVR(char,char,char,int,double *,int,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSYEVR@psi@@YAHDDDHPEANHNNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevx，该符号在函数 ""int __cdecl psi::C_DSYEVX(char,char,char,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int,int *,int *)"" (?C_DSYEVX@psi@@YAHDDDHPEANHNNHHNPEAH00H0H11@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygst，该符号在函数 ""int __cdecl psi::C_DSYGST(int,char,int,double *,int,double *,int)"" (?C_DSYGST@psi@@YAHHDHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygv，该符号在函数 ""int __cdecl psi::C_DSYGV(int,char,char,int,double *,int,double *,int,double *,double *,int)"" (?C_DSYGV@psi@@YAHHDDHPEANH0H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygvd，该符号在函数 ""int __cdecl psi::C_DSYGVD(int,char,char,int,double *,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYGVD@psi@@YAHHDDHPEANH0H00HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygvx，该符号在函数 ""int __cdecl psi::C_DSYGVX(int,char,char,char,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int,int *,int *)"" (?C_DSYGVX@psi@@YAHHDDDHPEANH0HNNHHNPEA",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:46825,Availability,error,error,46825,"NK2019: 无法解析的外部符号 dsyev，该符号在函数 ""int __cdecl psi::C_DSYEV(char,char,int,double *,int,double *,double *,int)"" (?C_DSYEV@psi@@YAHDDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevd，该符号在函数 ""int __cdecl psi::C_DSYEVD(char,char,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYEVD@psi@@YAHDDHPEANH00HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevr，该符号在函数 ""int __cdecl psi::C_DSYEVR(char,char,char,int,double *,int,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSYEVR@psi@@YAHDDDHPEANHNNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevx，该符号在函数 ""int __cdecl psi::C_DSYEVX(char,char,char,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int,int *,int *)"" (?C_DSYEVX@psi@@YAHDDDHPEANHNNHHNPEAH00H0H11@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygst，该符号在函数 ""int __cdecl psi::C_DSYGST(int,char,int,double *,int,double *,int)"" (?C_DSYGST@psi@@YAHHDHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygv，该符号在函数 ""int __cdecl psi::C_DSYGV(int,char,char,int,double *,int,double *,int,double *,double *,int)"" (?C_DSYGV@psi@@YAHHDDHPEANH0H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygvd，该符号在函数 ""int __cdecl psi::C_DSYGVD(int,char,char,int,double *,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYGVD@psi@@YAHHDDHPEANH0H00HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygvx，该符号在函数 ""int __cdecl psi::C_DSYGVX(int,char,char,char,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int,int *,int *)"" (?C_DSYGVX@psi@@YAHHDDDHPEANH0HNNHHNPEAH00H0H11@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrfs，该符号在函数 ""int __cdecl psi::C_DSYRFS(char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:47004,Availability,error,error,47004,": 无法解析的外部符号 dsyevd，该符号在函数 ""int __cdecl psi::C_DSYEVD(char,char,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYEVD@psi@@YAHDDHPEANH00HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevr，该符号在函数 ""int __cdecl psi::C_DSYEVR(char,char,char,int,double *,int,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSYEVR@psi@@YAHDDDHPEANHNNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevx，该符号在函数 ""int __cdecl psi::C_DSYEVX(char,char,char,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int,int *,int *)"" (?C_DSYEVX@psi@@YAHDDDHPEANHNNHHNPEAH00H0H11@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygst，该符号在函数 ""int __cdecl psi::C_DSYGST(int,char,int,double *,int,double *,int)"" (?C_DSYGST@psi@@YAHHDHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygv，该符号在函数 ""int __cdecl psi::C_DSYGV(int,char,char,int,double *,int,double *,int,double *,double *,int)"" (?C_DSYGV@psi@@YAHHDDHPEANH0H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygvd，该符号在函数 ""int __cdecl psi::C_DSYGVD(int,char,char,int,double *,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYGVD@psi@@YAHHDDHPEANH0H00HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygvx，该符号在函数 ""int __cdecl psi::C_DSYGVX(int,char,char,char,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int,int *,int *)"" (?C_DSYGVX@psi@@YAHHDDDHPEANH0HNNHHNPEAH00H0H11@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrfs，该符号在函数 ""int __cdecl psi::C_DSYRFS(char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSYRFS@psi@@YAHDHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsysv，该符号在函数 ""int __cdecl psi::C_DSYSV(char,int,int,double *,int,int *,double *,int,d",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:47211,Availability,error,error,47211," dsyevr，该符号在函数 ""int __cdecl psi::C_DSYEVR(char,char,char,int,double *,int,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSYEVR@psi@@YAHDDDHPEANHNNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevx，该符号在函数 ""int __cdecl psi::C_DSYEVX(char,char,char,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int,int *,int *)"" (?C_DSYEVX@psi@@YAHDDDHPEANHNNHHNPEAH00H0H11@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygst，该符号在函数 ""int __cdecl psi::C_DSYGST(int,char,int,double *,int,double *,int)"" (?C_DSYGST@psi@@YAHHDHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygv，该符号在函数 ""int __cdecl psi::C_DSYGV(int,char,char,int,double *,int,double *,int,double *,double *,int)"" (?C_DSYGV@psi@@YAHHDDHPEANH0H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygvd，该符号在函数 ""int __cdecl psi::C_DSYGVD(int,char,char,int,double *,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYGVD@psi@@YAHHDDHPEANH0H00HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygvx，该符号在函数 ""int __cdecl psi::C_DSYGVX(int,char,char,char,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int,int *,int *)"" (?C_DSYGVX@psi@@YAHHDDDHPEANH0HNNHHNPEAH00H0H11@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrfs，该符号在函数 ""int __cdecl psi::C_DSYRFS(char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSYRFS@psi@@YAHDHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsysv，该符号在函数 ""int __cdecl psi::C_DSYSV(char,int,int,double *,int,int *,double *,int,double *,int)"" (?C_DSYSV@psi@@YAHDHHPEANHPEAH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsysvx，该符号在函数 ""int __cdecl psi::C_DSYSVX(char,char,int,int,double *,int,double *,int,int *,double *,",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:47436,Availability,error,error,47436,"NK2019: 无法解析的外部符号 dsyevx，该符号在函数 ""int __cdecl psi::C_DSYEVX(char,char,char,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int,int *,int *)"" (?C_DSYEVX@psi@@YAHDDDHPEANHNNHHNPEAH00H0H11@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygst，该符号在函数 ""int __cdecl psi::C_DSYGST(int,char,int,double *,int,double *,int)"" (?C_DSYGST@psi@@YAHHDHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygv，该符号在函数 ""int __cdecl psi::C_DSYGV(int,char,char,int,double *,int,double *,int,double *,double *,int)"" (?C_DSYGV@psi@@YAHHDDHPEANH0H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygvd，该符号在函数 ""int __cdecl psi::C_DSYGVD(int,char,char,int,double *,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYGVD@psi@@YAHHDDHPEANH0H00HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygvx，该符号在函数 ""int __cdecl psi::C_DSYGVX(int,char,char,char,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int,int *,int *)"" (?C_DSYGVX@psi@@YAHHDDDHPEANH0HNNHHNPEAH00H0H11@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrfs，该符号在函数 ""int __cdecl psi::C_DSYRFS(char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSYRFS@psi@@YAHDHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsysv，该符号在函数 ""int __cdecl psi::C_DSYSV(char,int,int,double *,int,int *,double *,int,double *,int)"" (?C_DSYSV@psi@@YAHDHHPEANHPEAH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsysvx，该符号在函数 ""int __cdecl psi::C_DSYSVX(char,char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *)"" (?C_DSYSVX@psi@@YAHDDHHPEANH0HPEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrd，该符号在函数 ""int __cdecl psi::C_DSYTRD(char,int,double *,int,double *,double *,double *,double *,int)"" (?C_DSYTRD@psi@@Y",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:47725,Availability,error,error,47725,"19: 无法解析的外部符号 dsygst，该符号在函数 ""int __cdecl psi::C_DSYGST(int,char,int,double *,int,double *,int)"" (?C_DSYGST@psi@@YAHHDHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygv，该符号在函数 ""int __cdecl psi::C_DSYGV(int,char,char,int,double *,int,double *,int,double *,double *,int)"" (?C_DSYGV@psi@@YAHHDDHPEANH0H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygvd，该符号在函数 ""int __cdecl psi::C_DSYGVD(int,char,char,int,double *,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYGVD@psi@@YAHHDDHPEANH0H00HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygvx，该符号在函数 ""int __cdecl psi::C_DSYGVX(int,char,char,char,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int,int *,int *)"" (?C_DSYGVX@psi@@YAHHDDDHPEANH0HNNHHNPEAH00H0H11@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrfs，该符号在函数 ""int __cdecl psi::C_DSYRFS(char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSYRFS@psi@@YAHDHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsysv，该符号在函数 ""int __cdecl psi::C_DSYSV(char,int,int,double *,int,int *,double *,int,double *,int)"" (?C_DSYSV@psi@@YAHDHHPEANHPEAH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsysvx，该符号在函数 ""int __cdecl psi::C_DSYSVX(char,char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *)"" (?C_DSYSVX@psi@@YAHDDHHPEANH0HPEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrd，该符号在函数 ""int __cdecl psi::C_DSYTRD(char,int,double *,int,double *,double *,double *,double *,int)"" (?C_DSYTRD@psi@@YAHDHPEANH0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrf，该符号在函数 ""int __cdecl psi::C_DSYTRF(char,int,double *,int,int *,double *,int)"" (?C_DSYTRF@psi@@YAHDHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytri",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:47981,Availability,error,error,47981,"YGV(int,char,char,int,double *,int,double *,int,double *,double *,int)"" (?C_DSYGV@psi@@YAHHDDHPEANH0H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygvd，该符号在函数 ""int __cdecl psi::C_DSYGVD(int,char,char,int,double *,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYGVD@psi@@YAHHDDHPEANH0H00HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygvx，该符号在函数 ""int __cdecl psi::C_DSYGVX(int,char,char,char,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int,int *,int *)"" (?C_DSYGVX@psi@@YAHHDDDHPEANH0HNNHHNPEAH00H0H11@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrfs，该符号在函数 ""int __cdecl psi::C_DSYRFS(char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSYRFS@psi@@YAHDHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsysv，该符号在函数 ""int __cdecl psi::C_DSYSV(char,int,int,double *,int,int *,double *,int,double *,int)"" (?C_DSYSV@psi@@YAHDHHPEANHPEAH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsysvx，该符号在函数 ""int __cdecl psi::C_DSYSVX(char,char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *)"" (?C_DSYSVX@psi@@YAHDDHHPEANH0HPEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrd，该符号在函数 ""int __cdecl psi::C_DSYTRD(char,int,double *,int,double *,double *,double *,double *,int)"" (?C_DSYTRD@psi@@YAHDHPEANH0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrf，该符号在函数 ""int __cdecl psi::C_DSYTRF(char,int,double *,int,int *,double *,int)"" (?C_DSYTRF@psi@@YAHDHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytri，该符号在函数 ""int __cdecl psi::C_DSYTRI(char,int,double *,int,int *,double *)"" (?C_DSYTRI@psi@@YAHDHPEANHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrs，该符号在函数 ""int __cdecl psi::C_DSYTRS(char,int,int,do",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:48182,Availability,error,error,48182,"har,char,int,double *,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYGVD@psi@@YAHHDDHPEANH0H00HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygvx，该符号在函数 ""int __cdecl psi::C_DSYGVX(int,char,char,char,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int,int *,int *)"" (?C_DSYGVX@psi@@YAHHDDDHPEANH0HNNHHNPEAH00H0H11@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrfs，该符号在函数 ""int __cdecl psi::C_DSYRFS(char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSYRFS@psi@@YAHDHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsysv，该符号在函数 ""int __cdecl psi::C_DSYSV(char,int,int,double *,int,int *,double *,int,double *,int)"" (?C_DSYSV@psi@@YAHDHHPEANHPEAH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsysvx，该符号在函数 ""int __cdecl psi::C_DSYSVX(char,char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *)"" (?C_DSYSVX@psi@@YAHDDHHPEANH0HPEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrd，该符号在函数 ""int __cdecl psi::C_DSYTRD(char,int,double *,int,double *,double *,double *,double *,int)"" (?C_DSYTRD@psi@@YAHDHPEANH0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrf，该符号在函数 ""int __cdecl psi::C_DSYTRF(char,int,double *,int,int *,double *,int)"" (?C_DSYTRF@psi@@YAHDHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytri，该符号在函数 ""int __cdecl psi::C_DSYTRI(char,int,double *,int,int *,double *)"" (?C_DSYTRI@psi@@YAHDHPEANHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrs，该符号在函数 ""int __cdecl psi::C_DSYTRS(char,int,int,double *,int,int *,double *,int)"" (?C_DSYTRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbcon，该符号在函数 ""int __cdecl psi::C_DTBCON(char,char,char,int,int,double *,int,double *",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:48417,Availability,error,error,48417,"int,char,char,char,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int,int *,int *)"" (?C_DSYGVX@psi@@YAHHDDDHPEANH0HNNHHNPEAH00H0H11@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrfs，该符号在函数 ""int __cdecl psi::C_DSYRFS(char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSYRFS@psi@@YAHDHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsysv，该符号在函数 ""int __cdecl psi::C_DSYSV(char,int,int,double *,int,int *,double *,int,double *,int)"" (?C_DSYSV@psi@@YAHDHHPEANHPEAH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsysvx，该符号在函数 ""int __cdecl psi::C_DSYSVX(char,char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *)"" (?C_DSYSVX@psi@@YAHDDHHPEANH0HPEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrd，该符号在函数 ""int __cdecl psi::C_DSYTRD(char,int,double *,int,double *,double *,double *,double *,int)"" (?C_DSYTRD@psi@@YAHDHPEANH0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrf，该符号在函数 ""int __cdecl psi::C_DSYTRF(char,int,double *,int,int *,double *,int)"" (?C_DSYTRF@psi@@YAHDHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytri，该符号在函数 ""int __cdecl psi::C_DSYTRI(char,int,double *,int,int *,double *)"" (?C_DSYTRI@psi@@YAHDHPEANHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrs，该符号在函数 ""int __cdecl psi::C_DSYTRS(char,int,int,double *,int,int *,double *,int)"" (?C_DSYTRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbcon，该符号在函数 ""int __cdecl psi::C_DTBCON(char,char,char,int,int,double *,int,double *,double *,int *)"" (?C_DTBCON@psi@@YAHDDDHHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbrfs，该符号在函数 ""int __cdecl psi::C_DTBRFS(char,char,char,int,int,int,double *,int,double *,int,doub",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:48621,Availability,error,error,48621,"t.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrfs，该符号在函数 ""int __cdecl psi::C_DSYRFS(char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSYRFS@psi@@YAHDHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsysv，该符号在函数 ""int __cdecl psi::C_DSYSV(char,int,int,double *,int,int *,double *,int,double *,int)"" (?C_DSYSV@psi@@YAHDHHPEANHPEAH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsysvx，该符号在函数 ""int __cdecl psi::C_DSYSVX(char,char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *)"" (?C_DSYSVX@psi@@YAHDDHHPEANH0HPEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrd，该符号在函数 ""int __cdecl psi::C_DSYTRD(char,int,double *,int,double *,double *,double *,double *,int)"" (?C_DSYTRD@psi@@YAHDHPEANH0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrf，该符号在函数 ""int __cdecl psi::C_DSYTRF(char,int,double *,int,int *,double *,int)"" (?C_DSYTRF@psi@@YAHDHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytri，该符号在函数 ""int __cdecl psi::C_DSYTRI(char,int,double *,int,int *,double *)"" (?C_DSYTRI@psi@@YAHDHPEANHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrs，该符号在函数 ""int __cdecl psi::C_DSYTRS(char,int,int,double *,int,int *,double *,int)"" (?C_DSYTRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbcon，该符号在函数 ""int __cdecl psi::C_DTBCON(char,char,char,int,int,double *,int,double *,double *,int *)"" (?C_DTBCON@psi@@YAHDDDHHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbrfs，该符号在函数 ""int __cdecl psi::C_DTBRFS(char,char,char,int,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTBRFS@psi@@YAHDDDHHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbtrs，该符号在函数 ""int __cdecl psi::C_DTBTRS(",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:48805,Availability,error,error,48805," *,double *,int *)"" (?C_DSYRFS@psi@@YAHDHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsysv，该符号在函数 ""int __cdecl psi::C_DSYSV(char,int,int,double *,int,int *,double *,int,double *,int)"" (?C_DSYSV@psi@@YAHDHHPEANHPEAH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsysvx，该符号在函数 ""int __cdecl psi::C_DSYSVX(char,char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *)"" (?C_DSYSVX@psi@@YAHDDHHPEANH0HPEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrd，该符号在函数 ""int __cdecl psi::C_DSYTRD(char,int,double *,int,double *,double *,double *,double *,int)"" (?C_DSYTRD@psi@@YAHDHPEANH0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrf，该符号在函数 ""int __cdecl psi::C_DSYTRF(char,int,double *,int,int *,double *,int)"" (?C_DSYTRF@psi@@YAHDHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytri，该符号在函数 ""int __cdecl psi::C_DSYTRI(char,int,double *,int,int *,double *)"" (?C_DSYTRI@psi@@YAHDHPEANHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrs，该符号在函数 ""int __cdecl psi::C_DSYTRS(char,int,int,double *,int,int *,double *,int)"" (?C_DSYTRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbcon，该符号在函数 ""int __cdecl psi::C_DTBCON(char,char,char,int,int,double *,int,double *,double *,int *)"" (?C_DTBCON@psi@@YAHDDDHHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbrfs，该符号在函数 ""int __cdecl psi::C_DTBRFS(char,char,char,int,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTBRFS@psi@@YAHDDDHHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbtrs，该符号在函数 ""int __cdecl psi::C_DTBTRS(char,char,char,int,int,int,double *,int,double *,int)"" (?C_DTBTRS@psi@@YAHDDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgevc，该符号在函数 ""int __cdecl ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:48984,Availability,error,error,48984,"ble *,int,int *,double *,int,double *,int)"" (?C_DSYSV@psi@@YAHDHHPEANHPEAH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsysvx，该符号在函数 ""int __cdecl psi::C_DSYSVX(char,char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *)"" (?C_DSYSVX@psi@@YAHDDHHPEANH0HPEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrd，该符号在函数 ""int __cdecl psi::C_DSYTRD(char,int,double *,int,double *,double *,double *,double *,int)"" (?C_DSYTRD@psi@@YAHDHPEANH0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrf，该符号在函数 ""int __cdecl psi::C_DSYTRF(char,int,double *,int,int *,double *,int)"" (?C_DSYTRF@psi@@YAHDHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytri，该符号在函数 ""int __cdecl psi::C_DSYTRI(char,int,double *,int,int *,double *)"" (?C_DSYTRI@psi@@YAHDHPEANHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrs，该符号在函数 ""int __cdecl psi::C_DSYTRS(char,int,int,double *,int,int *,double *,int)"" (?C_DSYTRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbcon，该符号在函数 ""int __cdecl psi::C_DTBCON(char,char,char,int,int,double *,int,double *,double *,int *)"" (?C_DTBCON@psi@@YAHDDDHHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbrfs，该符号在函数 ""int __cdecl psi::C_DTBRFS(char,char,char,int,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTBRFS@psi@@YAHDDDHHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbtrs，该符号在函数 ""int __cdecl psi::C_DTBTRS(char,char,char,int,int,int,double *,int,double *,int)"" (?C_DTBTRS@psi@@YAHDDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgevc，该符号在函数 ""int __cdecl psi::C_DTGEVC(char,char,int,double *,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTGEVC@psi@@YAHDDHPEANH0H0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : e",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:49173,Availability,error,error,49173,"nt,int,double *,int,double *,int,int *,double *,int,double *,int,double *)"" (?C_DSYSVX@psi@@YAHDDHHPEANH0HPEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrd，该符号在函数 ""int __cdecl psi::C_DSYTRD(char,int,double *,int,double *,double *,double *,double *,int)"" (?C_DSYTRD@psi@@YAHDHPEANH0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrf，该符号在函数 ""int __cdecl psi::C_DSYTRF(char,int,double *,int,int *,double *,int)"" (?C_DSYTRF@psi@@YAHDHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytri，该符号在函数 ""int __cdecl psi::C_DSYTRI(char,int,double *,int,int *,double *)"" (?C_DSYTRI@psi@@YAHDHPEANHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrs，该符号在函数 ""int __cdecl psi::C_DSYTRS(char,int,int,double *,int,int *,double *,int)"" (?C_DSYTRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbcon，该符号在函数 ""int __cdecl psi::C_DTBCON(char,char,char,int,int,double *,int,double *,double *,int *)"" (?C_DTBCON@psi@@YAHDDDHHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbrfs，该符号在函数 ""int __cdecl psi::C_DTBRFS(char,char,char,int,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTBRFS@psi@@YAHDDDHHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbtrs，该符号在函数 ""int __cdecl psi::C_DTBTRS(char,char,char,int,int,int,double *,int,double *,int)"" (?C_DTBTRS@psi@@YAHDDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgevc，该符号在函数 ""int __cdecl psi::C_DTGEVC(char,char,int,double *,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTGEVC@psi@@YAHDDHPEANH0H0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgexc，该符号在函数 ""int __cdecl psi::C_DTGEXC(int,double *,int,double *,int,double *,int,double *,int,int *,int *,double *,int)"" (?C_DTGEXC@psi@@YAHHPEANH0H0H0HPEAH10H@Z) 中被引用; F",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:49379,Availability,error,error,49379,",int,double *,int,double *,double *,double *,double *,int)"" (?C_DSYTRD@psi@@YAHDHPEANH0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrf，该符号在函数 ""int __cdecl psi::C_DSYTRF(char,int,double *,int,int *,double *,int)"" (?C_DSYTRF@psi@@YAHDHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytri，该符号在函数 ""int __cdecl psi::C_DSYTRI(char,int,double *,int,int *,double *)"" (?C_DSYTRI@psi@@YAHDHPEANHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrs，该符号在函数 ""int __cdecl psi::C_DSYTRS(char,int,int,double *,int,int *,double *,int)"" (?C_DSYTRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbcon，该符号在函数 ""int __cdecl psi::C_DTBCON(char,char,char,int,int,double *,int,double *,double *,int *)"" (?C_DTBCON@psi@@YAHDDDHHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbrfs，该符号在函数 ""int __cdecl psi::C_DTBRFS(char,char,char,int,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTBRFS@psi@@YAHDDDHHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbtrs，该符号在函数 ""int __cdecl psi::C_DTBTRS(char,char,char,int,int,int,double *,int,double *,int)"" (?C_DTBTRS@psi@@YAHDDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgevc，该符号在函数 ""int __cdecl psi::C_DTGEVC(char,char,int,double *,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTGEVC@psi@@YAHDDHPEANH0H0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgexc，该符号在函数 ""int __cdecl psi::C_DTGEXC(int,double *,int,double *,int,double *,int,double *,int,int *,int *,double *,int)"" (?C_DTGEXC@psi@@YAHHPEANH0H0H0HPEAH10H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsen，该符号在函数 ""int __cdecl psi::C_DTGSEN(int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,int *,double *,double *,double *,double *,in",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:49630,Availability,error,error,49630,"t *,double *,int)"" (?C_DSYTRF@psi@@YAHDHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytri，该符号在函数 ""int __cdecl psi::C_DSYTRI(char,int,double *,int,int *,double *)"" (?C_DSYTRI@psi@@YAHDHPEANHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrs，该符号在函数 ""int __cdecl psi::C_DSYTRS(char,int,int,double *,int,int *,double *,int)"" (?C_DSYTRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbcon，该符号在函数 ""int __cdecl psi::C_DTBCON(char,char,char,int,int,double *,int,double *,double *,int *)"" (?C_DTBCON@psi@@YAHDDDHHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbrfs，该符号在函数 ""int __cdecl psi::C_DTBRFS(char,char,char,int,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTBRFS@psi@@YAHDDDHHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbtrs，该符号在函数 ""int __cdecl psi::C_DTBTRS(char,char,char,int,int,int,double *,int,double *,int)"" (?C_DTBTRS@psi@@YAHDDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgevc，该符号在函数 ""int __cdecl psi::C_DTGEVC(char,char,int,double *,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTGEVC@psi@@YAHDDHPEANH0H0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgexc，该符号在函数 ""int __cdecl psi::C_DTGEXC(int,double *,int,double *,int,double *,int,double *,int,int *,int *,double *,int)"" (?C_DTGEXC@psi@@YAHHPEANH0H0H0HPEAH10H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsen，该符号在函数 ""int __cdecl psi::C_DTGSEN(int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,int *,double *,double *,double *,double *,int,int *,int)"" (?C_DTGSEN@psi@@YAHHHPEANH0H0000H0HPEAH0000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsja，该符号在函数 ""int __cdecl psi::C_DTGSJA(char,char,char,int,int,int,int,int,double *,int,double",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:49826,Availability,error,error,49826,"YAHDHPEANHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrs，该符号在函数 ""int __cdecl psi::C_DSYTRS(char,int,int,double *,int,int *,double *,int)"" (?C_DSYTRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbcon，该符号在函数 ""int __cdecl psi::C_DTBCON(char,char,char,int,int,double *,int,double *,double *,int *)"" (?C_DTBCON@psi@@YAHDDDHHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbrfs，该符号在函数 ""int __cdecl psi::C_DTBRFS(char,char,char,int,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTBRFS@psi@@YAHDDDHHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbtrs，该符号在函数 ""int __cdecl psi::C_DTBTRS(char,char,char,int,int,int,double *,int,double *,int)"" (?C_DTBTRS@psi@@YAHDDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgevc，该符号在函数 ""int __cdecl psi::C_DTGEVC(char,char,int,double *,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTGEVC@psi@@YAHDDHPEANH0H0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgexc，该符号在函数 ""int __cdecl psi::C_DTGEXC(int,double *,int,double *,int,double *,int,double *,int,int *,int *,double *,int)"" (?C_DTGEXC@psi@@YAHHPEANH0H0H0HPEAH10H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsen，该符号在函数 ""int __cdecl psi::C_DTGSEN(int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,int *,double *,double *,double *,double *,int,int *,int)"" (?C_DTGSEN@psi@@YAHHHPEANH0H0000H0HPEAH0000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsja，该符号在函数 ""int __cdecl psi::C_DTGSJA(char,char,char,int,int,int,int,int,double *,int,double *,int,double,double,double *,double *,double *,int,double *,int,double *,int,double *,int *)"" (?C_DTGSJA@psi@@YAHDDDHHHHHPEANH0HNN000H0H0H0PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgs",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:50061,Availability,error,error,50061,"tfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbcon，该符号在函数 ""int __cdecl psi::C_DTBCON(char,char,char,int,int,double *,int,double *,double *,int *)"" (?C_DTBCON@psi@@YAHDDDHHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbrfs，该符号在函数 ""int __cdecl psi::C_DTBRFS(char,char,char,int,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTBRFS@psi@@YAHDDDHHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbtrs，该符号在函数 ""int __cdecl psi::C_DTBTRS(char,char,char,int,int,int,double *,int,double *,int)"" (?C_DTBTRS@psi@@YAHDDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgevc，该符号在函数 ""int __cdecl psi::C_DTGEVC(char,char,int,double *,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTGEVC@psi@@YAHDDHPEANH0H0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgexc，该符号在函数 ""int __cdecl psi::C_DTGEXC(int,double *,int,double *,int,double *,int,double *,int,int *,int *,double *,int)"" (?C_DTGEXC@psi@@YAHHPEANH0H0H0HPEAH10H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsen，该符号在函数 ""int __cdecl psi::C_DTGSEN(int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,int *,double *,double *,double *,double *,int,int *,int)"" (?C_DTGSEN@psi@@YAHHHPEANH0H0000H0HPEAH0000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsja，该符号在函数 ""int __cdecl psi::C_DTGSJA(char,char,char,int,int,int,int,int,double *,int,double *,int,double,double,double *,double *,double *,int,double *,int,double *,int,double *,int *)"" (?C_DTGSJA@psi@@YAHDDDHHHHHPEANH0HNN000H0H0H0PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsna，该符号在函数 ""int __cdecl psi::C_DTGSNA(char,char,int,double *,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTGSNA@psi@@YAHDDHPEANH0H0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.o",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:50291,Availability,error,error,50291,"_cdecl psi::C_DTBRFS(char,char,char,int,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTBRFS@psi@@YAHDDDHHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbtrs，该符号在函数 ""int __cdecl psi::C_DTBTRS(char,char,char,int,int,int,double *,int,double *,int)"" (?C_DTBTRS@psi@@YAHDDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgevc，该符号在函数 ""int __cdecl psi::C_DTGEVC(char,char,int,double *,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTGEVC@psi@@YAHDDHPEANH0H0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgexc，该符号在函数 ""int __cdecl psi::C_DTGEXC(int,double *,int,double *,int,double *,int,double *,int,int *,int *,double *,int)"" (?C_DTGEXC@psi@@YAHHPEANH0H0H0HPEAH10H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsen，该符号在函数 ""int __cdecl psi::C_DTGSEN(int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,int *,double *,double *,double *,double *,int,int *,int)"" (?C_DTGSEN@psi@@YAHHHPEANH0H0000H0HPEAH0000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsja，该符号在函数 ""int __cdecl psi::C_DTGSJA(char,char,char,int,int,int,int,int,double *,int,double *,int,double,double,double *,double *,double *,int,double *,int,double *,int,double *,int *)"" (?C_DTGSJA@psi@@YAHDDDHHHHHPEANH0HNN000H0H0H0PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsna，该符号在函数 ""int __cdecl psi::C_DTGSNA(char,char,int,double *,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTGSNA@psi@@YAHDDHPEANH0H0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsyl，该符号在函数 ""int __cdecl psi::C_DTGSYL(char,int,int,int,double *,int,double *,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int,int *)"" (?C_DTGSYL@psi@@YAHDHHHPEANH0H0H0H0H0H000HPEAH@Z) 中被引用; F:\",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:50591,Availability,error,error,50591,"le *,int,double *,int)"" (?C_DTBTRS@psi@@YAHDDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgevc，该符号在函数 ""int __cdecl psi::C_DTGEVC(char,char,int,double *,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTGEVC@psi@@YAHDDHPEANH0H0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgexc，该符号在函数 ""int __cdecl psi::C_DTGEXC(int,double *,int,double *,int,double *,int,double *,int,int *,int *,double *,int)"" (?C_DTGEXC@psi@@YAHHPEANH0H0H0HPEAH10H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsen，该符号在函数 ""int __cdecl psi::C_DTGSEN(int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,int *,double *,double *,double *,double *,int,int *,int)"" (?C_DTGSEN@psi@@YAHHHPEANH0H0000H0HPEAH0000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsja，该符号在函数 ""int __cdecl psi::C_DTGSJA(char,char,char,int,int,int,int,int,double *,int,double *,int,double,double,double *,double *,double *,int,double *,int,double *,int,double *,int *)"" (?C_DTGSJA@psi@@YAHDDDHHHHHPEANH0HNN000H0H0H0PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsna，该符号在函数 ""int __cdecl psi::C_DTGSNA(char,char,int,double *,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTGSNA@psi@@YAHDDHPEANH0H0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsyl，该符号在函数 ""int __cdecl psi::C_DTGSYL(char,int,int,int,double *,int,double *,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int,int *)"" (?C_DTGSYL@psi@@YAHDHHHPEANH0H0H0H0H0H000HPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtpcon，该符号在函数 ""int __cdecl psi::C_DTPCON(char,char,char,int,double *,double *,double *,int *)"" (?C_DTPCON@psi@@YAHDDDHPEAN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtprfs，该符号在函数 ""int __cdecl psi::C_DTPRFS(char,char,ch",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:50898,Availability,error,error,50898,"EAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgexc，该符号在函数 ""int __cdecl psi::C_DTGEXC(int,double *,int,double *,int,double *,int,double *,int,int *,int *,double *,int)"" (?C_DTGEXC@psi@@YAHHPEANH0H0H0HPEAH10H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsen，该符号在函数 ""int __cdecl psi::C_DTGSEN(int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,int *,double *,double *,double *,double *,int,int *,int)"" (?C_DTGSEN@psi@@YAHHHPEANH0H0000H0HPEAH0000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsja，该符号在函数 ""int __cdecl psi::C_DTGSJA(char,char,char,int,int,int,int,int,double *,int,double *,int,double,double,double *,double *,double *,int,double *,int,double *,int,double *,int *)"" (?C_DTGSJA@psi@@YAHDDDHHHHHPEANH0HNN000H0H0H0PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsna，该符号在函数 ""int __cdecl psi::C_DTGSNA(char,char,int,double *,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTGSNA@psi@@YAHDDHPEANH0H0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsyl，该符号在函数 ""int __cdecl psi::C_DTGSYL(char,int,int,int,double *,int,double *,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int,int *)"" (?C_DTGSYL@psi@@YAHDHHHPEANH0H0H0H0H0H000HPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtpcon，该符号在函数 ""int __cdecl psi::C_DTPCON(char,char,char,int,double *,double *,double *,int *)"" (?C_DTPCON@psi@@YAHDDDHPEAN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtprfs，该符号在函数 ""int __cdecl psi::C_DTPRFS(char,char,char,int,int,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTPRFS@psi@@YAHDDDHHPEAN0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptri，该符号在函数 ""int __cdecl psi::C_DTPTRI(char,char,int,double *)"" (?C_DTPTRI@psi@@YAHDDHPEAN@Z) 中被引",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:51165,Availability,error,error,51165,"rror LNK2019: 无法解析的外部符号 dtgsen，该符号在函数 ""int __cdecl psi::C_DTGSEN(int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,int *,double *,double *,double *,double *,int,int *,int)"" (?C_DTGSEN@psi@@YAHHHPEANH0H0000H0HPEAH0000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsja，该符号在函数 ""int __cdecl psi::C_DTGSJA(char,char,char,int,int,int,int,int,double *,int,double *,int,double,double,double *,double *,double *,int,double *,int,double *,int,double *,int *)"" (?C_DTGSJA@psi@@YAHDDDHHHHHPEANH0HNN000H0H0H0PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsna，该符号在函数 ""int __cdecl psi::C_DTGSNA(char,char,int,double *,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTGSNA@psi@@YAHDDHPEANH0H0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsyl，该符号在函数 ""int __cdecl psi::C_DTGSYL(char,int,int,int,double *,int,double *,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int,int *)"" (?C_DTGSYL@psi@@YAHDHHHPEANH0H0H0H0H0H000HPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtpcon，该符号在函数 ""int __cdecl psi::C_DTPCON(char,char,char,int,double *,double *,double *,int *)"" (?C_DTPCON@psi@@YAHDDDHPEAN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtprfs，该符号在函数 ""int __cdecl psi::C_DTPRFS(char,char,char,int,int,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTPRFS@psi@@YAHDDDHHPEAN0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptri，该符号在函数 ""int __cdecl psi::C_DTPTRI(char,char,int,double *)"" (?C_DTPTRI@psi@@YAHDDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptrs，该符号在函数 ""int __cdecl psi::C_DTPTRS(char,char,char,int,int,double *,double *,int)"" (?C_DTPTRS@psi@@YAHDDDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrcon，该符号在函数 ""int __cdecl psi:",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:51454,Availability,error,error,51454,"0HPEAH0000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsja，该符号在函数 ""int __cdecl psi::C_DTGSJA(char,char,char,int,int,int,int,int,double *,int,double *,int,double,double,double *,double *,double *,int,double *,int,double *,int,double *,int *)"" (?C_DTGSJA@psi@@YAHDDDHHHHHPEANH0HNN000H0H0H0PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsna，该符号在函数 ""int __cdecl psi::C_DTGSNA(char,char,int,double *,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTGSNA@psi@@YAHDDHPEANH0H0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsyl，该符号在函数 ""int __cdecl psi::C_DTGSYL(char,int,int,int,double *,int,double *,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int,int *)"" (?C_DTGSYL@psi@@YAHDHHHPEANH0H0H0H0H0H000HPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtpcon，该符号在函数 ""int __cdecl psi::C_DTPCON(char,char,char,int,double *,double *,double *,int *)"" (?C_DTPCON@psi@@YAHDDDHPEAN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtprfs，该符号在函数 ""int __cdecl psi::C_DTPRFS(char,char,char,int,int,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTPRFS@psi@@YAHDDDHHPEAN0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptri，该符号在函数 ""int __cdecl psi::C_DTPTRI(char,char,int,double *)"" (?C_DTPTRI@psi@@YAHDDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptrs，该符号在函数 ""int __cdecl psi::C_DTPTRS(char,char,char,int,int,double *,double *,int)"" (?C_DTPTRS@psi@@YAHDDDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrcon，该符号在函数 ""int __cdecl psi::C_DTRCON(char,char,char,int,double *,int,double *,double *,int *)"" (?C_DTRCON@psi@@YAHDDDHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrevc，该符号在函数 ""int __cdecl psi::C_DTREVC(char,char,int,double *,int,doub",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:51650,Availability,error,error,51650,"ble *,int,double *,int,double *,int,double *,int *)"" (?C_DTGSJA@psi@@YAHDDDHHHHHPEANH0HNN000H0H0H0PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsna，该符号在函数 ""int __cdecl psi::C_DTGSNA(char,char,int,double *,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTGSNA@psi@@YAHDDHPEANH0H0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsyl，该符号在函数 ""int __cdecl psi::C_DTGSYL(char,int,int,int,double *,int,double *,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int,int *)"" (?C_DTGSYL@psi@@YAHDHHHPEANH0H0H0H0H0H000HPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtpcon，该符号在函数 ""int __cdecl psi::C_DTPCON(char,char,char,int,double *,double *,double *,int *)"" (?C_DTPCON@psi@@YAHDDDHPEAN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtprfs，该符号在函数 ""int __cdecl psi::C_DTPRFS(char,char,char,int,int,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTPRFS@psi@@YAHDDDHHPEAN0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptri，该符号在函数 ""int __cdecl psi::C_DTPTRI(char,char,int,double *)"" (?C_DTPTRI@psi@@YAHDDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptrs，该符号在函数 ""int __cdecl psi::C_DTPTRS(char,char,char,int,int,double *,double *,int)"" (?C_DTPTRS@psi@@YAHDDDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrcon，该符号在函数 ""int __cdecl psi::C_DTRCON(char,char,char,int,double *,int,double *,double *,int *)"" (?C_DTRCON@psi@@YAHDDDHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrevc，该符号在函数 ""int __cdecl psi::C_DTREVC(char,char,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTREVC@psi@@YAHDDHPEANH0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrexc，该符号在函数 ""int __cdecl psi::C_DTREXC(char,int,double *,int,double *",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:51891,Availability,error,error,51891,":C_DTGSNA(char,char,int,double *,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTGSNA@psi@@YAHDDHPEANH0H0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsyl，该符号在函数 ""int __cdecl psi::C_DTGSYL(char,int,int,int,double *,int,double *,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int,int *)"" (?C_DTGSYL@psi@@YAHDHHHPEANH0H0H0H0H0H000HPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtpcon，该符号在函数 ""int __cdecl psi::C_DTPCON(char,char,char,int,double *,double *,double *,int *)"" (?C_DTPCON@psi@@YAHDDDHPEAN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtprfs，该符号在函数 ""int __cdecl psi::C_DTPRFS(char,char,char,int,int,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTPRFS@psi@@YAHDDDHHPEAN0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptri，该符号在函数 ""int __cdecl psi::C_DTPTRI(char,char,int,double *)"" (?C_DTPTRI@psi@@YAHDDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptrs，该符号在函数 ""int __cdecl psi::C_DTPTRS(char,char,char,int,int,double *,double *,int)"" (?C_DTPTRS@psi@@YAHDDDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrcon，该符号在函数 ""int __cdecl psi::C_DTRCON(char,char,char,int,double *,int,double *,double *,int *)"" (?C_DTRCON@psi@@YAHDDDHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrevc，该符号在函数 ""int __cdecl psi::C_DTREVC(char,char,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTREVC@psi@@YAHDDHPEANH0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrexc，该符号在函数 ""int __cdecl psi::C_DTREXC(char,int,double *,int,double *,int,int *,int *,double *)"" (?C_DTREXC@psi@@YAHDHPEANH0HPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrrfs，该符号在函数 ""int __cdecl psi::C_DTRRFS(char,char,char,int,int,double",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:52051,Availability,error,error,52051,"被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsyl，该符号在函数 ""int __cdecl psi::C_DTGSYL(char,int,int,int,double *,int,double *,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int,int *)"" (?C_DTGSYL@psi@@YAHDHHHPEANH0H0H0H0H0H000HPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtpcon，该符号在函数 ""int __cdecl psi::C_DTPCON(char,char,char,int,double *,double *,double *,int *)"" (?C_DTPCON@psi@@YAHDDDHPEAN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtprfs，该符号在函数 ""int __cdecl psi::C_DTPRFS(char,char,char,int,int,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTPRFS@psi@@YAHDDDHHPEAN0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptri，该符号在函数 ""int __cdecl psi::C_DTPTRI(char,char,int,double *)"" (?C_DTPTRI@psi@@YAHDDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptrs，该符号在函数 ""int __cdecl psi::C_DTPTRS(char,char,char,int,int,double *,double *,int)"" (?C_DTPTRS@psi@@YAHDDDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrcon，该符号在函数 ""int __cdecl psi::C_DTRCON(char,char,char,int,double *,int,double *,double *,int *)"" (?C_DTRCON@psi@@YAHDDDHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrevc，该符号在函数 ""int __cdecl psi::C_DTREVC(char,char,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTREVC@psi@@YAHDDHPEANH0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrexc，该符号在函数 ""int __cdecl psi::C_DTREXC(char,int,double *,int,double *,int,int *,int *,double *)"" (?C_DTREXC@psi@@YAHDHPEANH0HPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrrfs，该符号在函数 ""int __cdecl psi::C_DTRRFS(char,char,char,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTRRFS@psi@@YAHDDDHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:52237,Availability,error,error,52237,"*,int,double *,double *,double *,int,int *)"" (?C_DTGSYL@psi@@YAHDHHHPEANH0H0H0H0H0H000HPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtpcon，该符号在函数 ""int __cdecl psi::C_DTPCON(char,char,char,int,double *,double *,double *,int *)"" (?C_DTPCON@psi@@YAHDDDHPEAN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtprfs，该符号在函数 ""int __cdecl psi::C_DTPRFS(char,char,char,int,int,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTPRFS@psi@@YAHDDDHHPEAN0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptri，该符号在函数 ""int __cdecl psi::C_DTPTRI(char,char,int,double *)"" (?C_DTPTRI@psi@@YAHDDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptrs，该符号在函数 ""int __cdecl psi::C_DTPTRS(char,char,char,int,int,double *,double *,int)"" (?C_DTPTRS@psi@@YAHDDDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrcon，该符号在函数 ""int __cdecl psi::C_DTRCON(char,char,char,int,double *,int,double *,double *,int *)"" (?C_DTRCON@psi@@YAHDDDHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrevc，该符号在函数 ""int __cdecl psi::C_DTREVC(char,char,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTREVC@psi@@YAHDDHPEANH0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrexc，该符号在函数 ""int __cdecl psi::C_DTREXC(char,int,double *,int,double *,int,int *,int *,double *)"" (?C_DTREXC@psi@@YAHDHPEANH0HPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrrfs，该符号在函数 ""int __cdecl psi::C_DTRRFS(char,char,char,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTRRFS@psi@@YAHDDDHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsen，该符号在函数 ""int __cdecl psi::C_DTRSEN(char,char,int,double *,int,double *,int,double *,double *,int *,double *,double *,double *,int,int *,int)"" (?C_DTRSEN@psi@@YAHDDHPEANH0H00PEAH000H1H@Z",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:52438,Availability,error,error,52438,"har,int,double *,double *,double *,int *)"" (?C_DTPCON@psi@@YAHDDDHPEAN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtprfs，该符号在函数 ""int __cdecl psi::C_DTPRFS(char,char,char,int,int,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTPRFS@psi@@YAHDDDHHPEAN0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptri，该符号在函数 ""int __cdecl psi::C_DTPTRI(char,char,int,double *)"" (?C_DTPTRI@psi@@YAHDDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptrs，该符号在函数 ""int __cdecl psi::C_DTPTRS(char,char,char,int,int,double *,double *,int)"" (?C_DTPTRS@psi@@YAHDDDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrcon，该符号在函数 ""int __cdecl psi::C_DTRCON(char,char,char,int,double *,int,double *,double *,int *)"" (?C_DTRCON@psi@@YAHDDDHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrevc，该符号在函数 ""int __cdecl psi::C_DTREVC(char,char,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTREVC@psi@@YAHDDHPEANH0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrexc，该符号在函数 ""int __cdecl psi::C_DTREXC(char,int,double *,int,double *,int,int *,int *,double *)"" (?C_DTREXC@psi@@YAHDHPEANH0HPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrrfs，该符号在函数 ""int __cdecl psi::C_DTRRFS(char,char,char,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTRRFS@psi@@YAHDDDHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsen，该符号在函数 ""int __cdecl psi::C_DTRSEN(char,char,int,double *,int,double *,int,double *,double *,int *,double *,double *,double *,int,int *,int)"" (?C_DTRSEN@psi@@YAHDDHPEANH0H00PEAH000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsna，该符号在函数 ""int __cdecl psi::C_DTRSNA(char,char,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:52658,Availability,error,error,52658,"uble *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTPRFS@psi@@YAHDDDHHPEAN0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptri，该符号在函数 ""int __cdecl psi::C_DTPTRI(char,char,int,double *)"" (?C_DTPTRI@psi@@YAHDDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptrs，该符号在函数 ""int __cdecl psi::C_DTPTRS(char,char,char,int,int,double *,double *,int)"" (?C_DTPTRS@psi@@YAHDDDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrcon，该符号在函数 ""int __cdecl psi::C_DTRCON(char,char,char,int,double *,int,double *,double *,int *)"" (?C_DTRCON@psi@@YAHDDDHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrevc，该符号在函数 ""int __cdecl psi::C_DTREVC(char,char,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTREVC@psi@@YAHDDHPEANH0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrexc，该符号在函数 ""int __cdecl psi::C_DTREXC(char,int,double *,int,double *,int,int *,int *,double *)"" (?C_DTREXC@psi@@YAHDHPEANH0HPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrrfs，该符号在函数 ""int __cdecl psi::C_DTRRFS(char,char,char,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTRRFS@psi@@YAHDDDHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsen，该符号在函数 ""int __cdecl psi::C_DTRSEN(char,char,int,double *,int,double *,int,double *,double *,int *,double *,double *,double *,int,int *,int)"" (?C_DTRSEN@psi@@YAHDDHPEANH0H00PEAH000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsna，该符号在函数 ""int __cdecl psi::C_DTRSNA(char,char,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTRSNA@psi@@YAHDDHPEANH0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsyl，该符号在函数 ""int __cdecl psi::C_DTRSYL(char,char,int,int,int,double *,int,double *,int,double *,int,d",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:52859,Availability,error,error,52859,"r,int,double *)"" (?C_DTPTRI@psi@@YAHDDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptrs，该符号在函数 ""int __cdecl psi::C_DTPTRS(char,char,char,int,int,double *,double *,int)"" (?C_DTPTRS@psi@@YAHDDDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrcon，该符号在函数 ""int __cdecl psi::C_DTRCON(char,char,char,int,double *,int,double *,double *,int *)"" (?C_DTRCON@psi@@YAHDDDHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrevc，该符号在函数 ""int __cdecl psi::C_DTREVC(char,char,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTREVC@psi@@YAHDDHPEANH0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrexc，该符号在函数 ""int __cdecl psi::C_DTREXC(char,int,double *,int,double *,int,int *,int *,double *)"" (?C_DTREXC@psi@@YAHDHPEANH0HPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrrfs，该符号在函数 ""int __cdecl psi::C_DTRRFS(char,char,char,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTRRFS@psi@@YAHDDDHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsen，该符号在函数 ""int __cdecl psi::C_DTRSEN(char,char,int,double *,int,double *,int,double *,double *,int *,double *,double *,double *,int,int *,int)"" (?C_DTRSEN@psi@@YAHDDHPEANH0H00PEAH000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsna，该符号在函数 ""int __cdecl psi::C_DTRSNA(char,char,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTRSNA@psi@@YAHDDHPEANH0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsyl，该符号在函数 ""int __cdecl psi::C_DTRSYL(char,char,int,int,int,double *,int,double *,int,double *,int,double *)"" (?C_DTRSYL@psi@@YAHDDHHHPEANH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrtri，该符号在函数 ""int __cdecl psi::C_DTRTRI(char,char,int,double *,int)"" (?C_DTRTRI@psi@@YAHDDHPEANH@Z) 中被引用; F:\q",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:53105,Availability,error,error,53105,"pack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrcon，该符号在函数 ""int __cdecl psi::C_DTRCON(char,char,char,int,double *,int,double *,double *,int *)"" (?C_DTRCON@psi@@YAHDDDHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrevc，该符号在函数 ""int __cdecl psi::C_DTREVC(char,char,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTREVC@psi@@YAHDDHPEANH0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrexc，该符号在函数 ""int __cdecl psi::C_DTREXC(char,int,double *,int,double *,int,int *,int *,double *)"" (?C_DTREXC@psi@@YAHDHPEANH0HPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrrfs，该符号在函数 ""int __cdecl psi::C_DTRRFS(char,char,char,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTRRFS@psi@@YAHDDDHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsen，该符号在函数 ""int __cdecl psi::C_DTRSEN(char,char,int,double *,int,double *,int,double *,double *,int *,double *,double *,double *,int,int *,int)"" (?C_DTRSEN@psi@@YAHDDHPEANH0H00PEAH000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsna，该符号在函数 ""int __cdecl psi::C_DTRSNA(char,char,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTRSNA@psi@@YAHDDHPEANH0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsyl，该符号在函数 ""int __cdecl psi::C_DTRSYL(char,char,int,int,int,double *,int,double *,int,double *,int,double *)"" (?C_DTRSYL@psi@@YAHDDHHHPEANH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrtri，该符号在函数 ""int __cdecl psi::C_DTRTRI(char,char,int,double *,int)"" (?C_DTRTRI@psi@@YAHDDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrtrs，该符号在函数 ""int __cdecl psi::C_DTRTRS(char,char,char,int,int,double *,int,double *,int)"" (?C_DTRTRS@psi@@YAHDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtzrzf，",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:53362,Availability,error,error,53362,"符号在函数 ""int __cdecl psi::C_DTREVC(char,char,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTREVC@psi@@YAHDDHPEANH0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrexc，该符号在函数 ""int __cdecl psi::C_DTREXC(char,int,double *,int,double *,int,int *,int *,double *)"" (?C_DTREXC@psi@@YAHDHPEANH0HPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrrfs，该符号在函数 ""int __cdecl psi::C_DTRRFS(char,char,char,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTRRFS@psi@@YAHDDDHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsen，该符号在函数 ""int __cdecl psi::C_DTRSEN(char,char,int,double *,int,double *,int,double *,double *,int *,double *,double *,double *,int,int *,int)"" (?C_DTRSEN@psi@@YAHDDHPEANH0H00PEAH000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsna，该符号在函数 ""int __cdecl psi::C_DTRSNA(char,char,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTRSNA@psi@@YAHDDHPEANH0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsyl，该符号在函数 ""int __cdecl psi::C_DTRSYL(char,char,int,int,int,double *,int,double *,int,double *,int,double *)"" (?C_DTRSYL@psi@@YAHDDHHHPEANH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrtri，该符号在函数 ""int __cdecl psi::C_DTRTRI(char,char,int,double *,int)"" (?C_DTRTRI@psi@@YAHDDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrtrs，该符号在函数 ""int __cdecl psi::C_DTRTRS(char,char,char,int,int,double *,int,double *,int)"" (?C_DTRTRS@psi@@YAHDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtzrzf，该符号在函数 ""int __cdecl psi::C_DTZRQF(int,int,double *,int,double *)"" (?C_DTZRQF@psi@@YAHHHPEANH0@Z) 中被引用; F:\src\core.cp37-win_amd64.pyd : fatal error LNK1120: 220 个无法解析的外部命令; ninja: build stopped: subcommand failed.; ninja: build stopped: subcommand failed",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:53614,Availability,error,error,53614,"cl psi::C_DTREVC(char,char,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTREVC@psi@@YAHDDHPEANH0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrexc，该符号在函数 ""int __cdecl psi::C_DTREXC(char,int,double *,int,double *,int,int *,int *,double *)"" (?C_DTREXC@psi@@YAHDHPEANH0HPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrrfs，该符号在函数 ""int __cdecl psi::C_DTRRFS(char,char,char,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTRRFS@psi@@YAHDDDHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsen，该符号在函数 ""int __cdecl psi::C_DTRSEN(char,char,int,double *,int,double *,int,double *,double *,int *,double *,double *,double *,int,int *,int)"" (?C_DTRSEN@psi@@YAHDDHPEANH0H00PEAH000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsna，该符号在函数 ""int __cdecl psi::C_DTRSNA(char,char,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTRSNA@psi@@YAHDDHPEANH0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsyl，该符号在函数 ""int __cdecl psi::C_DTRSYL(char,char,int,int,int,double *,int,double *,int,double *,int,double *)"" (?C_DTRSYL@psi@@YAHDDHHHPEANH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrtri，该符号在函数 ""int __cdecl psi::C_DTRTRI(char,char,int,double *,int)"" (?C_DTRTRI@psi@@YAHDDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrtrs，该符号在函数 ""int __cdecl psi::C_DTRTRS(char,char,char,int,int,double *,int,double *,int)"" (?C_DTRTRS@psi@@YAHDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtzrzf，该符号在函数 ""int __cdecl psi::C_DTZRQF(int,int,double *,int,double *)"" (?C_DTZRQF@psi@@YAHHHPEANH0@Z) 中被引用; F:\src\core.cp37-win_amd64.pyd : fatal error LNK1120: 220 个无法解析的外部命令; ninja: build stopped: subcommand failed.; ninja: build stopped: subcommand failed.; ```. 全部生成 失败。",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:53829,Availability,error,error,53829,"cl psi::C_DTREVC(char,char,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTREVC@psi@@YAHDDHPEANH0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrexc，该符号在函数 ""int __cdecl psi::C_DTREXC(char,int,double *,int,double *,int,int *,int *,double *)"" (?C_DTREXC@psi@@YAHDHPEANH0HPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrrfs，该符号在函数 ""int __cdecl psi::C_DTRRFS(char,char,char,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTRRFS@psi@@YAHDDDHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsen，该符号在函数 ""int __cdecl psi::C_DTRSEN(char,char,int,double *,int,double *,int,double *,double *,int *,double *,double *,double *,int,int *,int)"" (?C_DTRSEN@psi@@YAHDDHPEANH0H00PEAH000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsna，该符号在函数 ""int __cdecl psi::C_DTRSNA(char,char,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTRSNA@psi@@YAHDDHPEANH0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsyl，该符号在函数 ""int __cdecl psi::C_DTRSYL(char,char,int,int,int,double *,int,double *,int,double *,int,double *)"" (?C_DTRSYL@psi@@YAHDDHHHPEANH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrtri，该符号在函数 ""int __cdecl psi::C_DTRTRI(char,char,int,double *,int)"" (?C_DTRTRI@psi@@YAHDDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrtrs，该符号在函数 ""int __cdecl psi::C_DTRTRS(char,char,char,int,int,double *,int,double *,int)"" (?C_DTRTRS@psi@@YAHDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtzrzf，该符号在函数 ""int __cdecl psi::C_DTZRQF(int,int,double *,int,double *)"" (?C_DTZRQF@psi@@YAHHHPEANH0@Z) 中被引用; F:\src\core.cp37-win_amd64.pyd : fatal error LNK1120: 220 个无法解析的外部命令; ninja: build stopped: subcommand failed.; ninja: build stopped: subcommand failed.; ```. 全部生成 失败。",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:53994,Availability,error,error,53994,"cl psi::C_DTREVC(char,char,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTREVC@psi@@YAHDDHPEANH0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrexc，该符号在函数 ""int __cdecl psi::C_DTREXC(char,int,double *,int,double *,int,int *,int *,double *)"" (?C_DTREXC@psi@@YAHDHPEANH0HPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrrfs，该符号在函数 ""int __cdecl psi::C_DTRRFS(char,char,char,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTRRFS@psi@@YAHDDDHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsen，该符号在函数 ""int __cdecl psi::C_DTRSEN(char,char,int,double *,int,double *,int,double *,double *,int *,double *,double *,double *,int,int *,int)"" (?C_DTRSEN@psi@@YAHDDHPEANH0H00PEAH000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsna，该符号在函数 ""int __cdecl psi::C_DTRSNA(char,char,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTRSNA@psi@@YAHDDHPEANH0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsyl，该符号在函数 ""int __cdecl psi::C_DTRSYL(char,char,int,int,int,double *,int,double *,int,double *,int,double *)"" (?C_DTRSYL@psi@@YAHDDHHHPEANH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrtri，该符号在函数 ""int __cdecl psi::C_DTRTRI(char,char,int,double *,int)"" (?C_DTRTRI@psi@@YAHDDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrtrs，该符号在函数 ""int __cdecl psi::C_DTRTRS(char,char,char,int,int,double *,int,double *,int)"" (?C_DTRTRS@psi@@YAHDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtzrzf，该符号在函数 ""int __cdecl psi::C_DTZRQF(int,int,double *,int,double *)"" (?C_DTZRQF@psi@@YAHHHPEANH0@Z) 中被引用; F:\src\core.cp37-win_amd64.pyd : fatal error LNK1120: 220 个无法解析的外部命令; ninja: build stopped: subcommand failed.; ninja: build stopped: subcommand failed.; ```. 全部生成 失败。",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:54185,Availability,error,error,54185,"cl psi::C_DTREVC(char,char,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTREVC@psi@@YAHDDHPEANH0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrexc，该符号在函数 ""int __cdecl psi::C_DTREXC(char,int,double *,int,double *,int,int *,int *,double *)"" (?C_DTREXC@psi@@YAHDHPEANH0HPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrrfs，该符号在函数 ""int __cdecl psi::C_DTRRFS(char,char,char,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTRRFS@psi@@YAHDDDHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsen，该符号在函数 ""int __cdecl psi::C_DTRSEN(char,char,int,double *,int,double *,int,double *,double *,int *,double *,double *,double *,int,int *,int)"" (?C_DTRSEN@psi@@YAHDDHPEANH0H00PEAH000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsna，该符号在函数 ""int __cdecl psi::C_DTRSNA(char,char,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTRSNA@psi@@YAHDDHPEANH0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsyl，该符号在函数 ""int __cdecl psi::C_DTRSYL(char,char,int,int,int,double *,int,double *,int,double *,int,double *)"" (?C_DTRSYL@psi@@YAHDDHHHPEANH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrtri，该符号在函数 ""int __cdecl psi::C_DTRTRI(char,char,int,double *,int)"" (?C_DTRTRI@psi@@YAHDDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrtrs，该符号在函数 ""int __cdecl psi::C_DTRTRS(char,char,char,int,int,double *,int,double *,int)"" (?C_DTRTRS@psi@@YAHDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtzrzf，该符号在函数 ""int __cdecl psi::C_DTZRQF(int,int,double *,int,double *)"" (?C_DTZRQF@psi@@YAHHHPEANH0@Z) 中被引用; F:\src\core.cp37-win_amd64.pyd : fatal error LNK1120: 220 个无法解析的外部命令; ninja: build stopped: subcommand failed.; ninja: build stopped: subcommand failed.; ```. 全部生成 失败。",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:54359,Availability,error,error,54359,"cl psi::C_DTREVC(char,char,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTREVC@psi@@YAHDDHPEANH0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrexc，该符号在函数 ""int __cdecl psi::C_DTREXC(char,int,double *,int,double *,int,int *,int *,double *)"" (?C_DTREXC@psi@@YAHDHPEANH0HPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrrfs，该符号在函数 ""int __cdecl psi::C_DTRRFS(char,char,char,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTRRFS@psi@@YAHDDDHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsen，该符号在函数 ""int __cdecl psi::C_DTRSEN(char,char,int,double *,int,double *,int,double *,double *,int *,double *,double *,double *,int,int *,int)"" (?C_DTRSEN@psi@@YAHDDHPEANH0H00PEAH000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsna，该符号在函数 ""int __cdecl psi::C_DTRSNA(char,char,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTRSNA@psi@@YAHDDHPEANH0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsyl，该符号在函数 ""int __cdecl psi::C_DTRSYL(char,char,int,int,int,double *,int,double *,int,double *,int,double *)"" (?C_DTRSYL@psi@@YAHDDHHHPEANH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrtri，该符号在函数 ""int __cdecl psi::C_DTRTRI(char,char,int,double *,int)"" (?C_DTRTRI@psi@@YAHDDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrtrs，该符号在函数 ""int __cdecl psi::C_DTRTRS(char,char,char,int,int,double *,int,double *,int)"" (?C_DTRTRS@psi@@YAHDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtzrzf，该符号在函数 ""int __cdecl psi::C_DTZRQF(int,int,double *,int,double *)"" (?C_DTZRQF@psi@@YAHHHPEANH0@Z) 中被引用; F:\src\core.cp37-win_amd64.pyd : fatal error LNK1120: 220 个无法解析的外部命令; ninja: build stopped: subcommand failed.; ninja: build stopped: subcommand failed.; ```. 全部生成 失败。",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:3491,Deployability,Release,Release,3491,"_interface\gdma_interface.lib src\psi4\mcscf\mcscf.lib src\psi4\mrcc\mrcc.lib src\psi4\occ\occ.lib src\psi4\optking\optking.lib src\psi4\psimrcc\psimrcc.lib src\psi4\sapt\sapt.lib src\psi4\scfgrad\scfgrad.lib src\psi4\lib3index\3index.lib src\psi4\libciomr\ciomr.lib src\psi4\libcubeprop\cubeprop.lib src\psi4\libdiis\diis.lib src\psi4\libdisp\disp.lib src\psi4\libdpd\dpd.lib src\psi4\libfilesystem\filesystem.lib src\psi4\libfock\fock.lib src\psi4\libfunctional\functional.lib src\psi4\libiwl\iwl.lib src\psi4\libmints\mints.lib src\psi4\libmoinfo\moinfo.lib src\psi4\liboptions\options.lib src\psi4\libplugin\plugin.lib src\psi4\libpsi4util\psi4util.lib src\psi4\libpsio\psio.lib src\psi4\libqt\qt.lib src\psi4\libsapt_solver\sapt_solver.lib src\psi4\libscf_solver\scf_solver.lib src\psi4\libtrans\trans.lib Ws2_32.lib ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\Extensions\Microsoft\Python\Miniconda\Miniconda3-x64\libs\Python37.lib"" F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\gg.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\xc.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\deriv.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\int.lib D:\OpenBLAS\lib\openblas.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib && cd .""; LINK Pass 1: command ""C:\PROGRA~2\MICROS~3\2019\COMMUN~1\VC\Tools\MSVC\1421~1.277\bin\Hostx64\x64\link.exe /nologo src\CMakeFiles\core.dir\export_benchmarks.cc.obj src\CMakeFiles\core.dir\export_blas_lapack.cc.obj src\CMakeFiles\core.dir\export_cubeprop.cc.obj src\CMakeFiles\core.dir\export_diis.cc.obj src\CMakeFiles\core.dir\export_fock.cc.obj src\CMakeFiles\core.dir\export_functional.cc.obj src\CMakeFiles\core.dir\export_mints.cc.obj src\CMakeFiles\core.dir\export_misc.cc.obj src\CMakeFiles\core.dir\export_oeprop.cc.obj src\CMakeFiles\core.dir\export_pcm.cc.obj src\CMakeFiles\core.dir\export_plugins.cc.obj src\CMakeFiles\core.dir\export_psio.cc.o",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:3545,Deployability,Release,Release,3545," src\psi4\mrcc\mrcc.lib src\psi4\occ\occ.lib src\psi4\optking\optking.lib src\psi4\psimrcc\psimrcc.lib src\psi4\sapt\sapt.lib src\psi4\scfgrad\scfgrad.lib src\psi4\lib3index\3index.lib src\psi4\libciomr\ciomr.lib src\psi4\libcubeprop\cubeprop.lib src\psi4\libdiis\diis.lib src\psi4\libdisp\disp.lib src\psi4\libdpd\dpd.lib src\psi4\libfilesystem\filesystem.lib src\psi4\libfock\fock.lib src\psi4\libfunctional\functional.lib src\psi4\libiwl\iwl.lib src\psi4\libmints\mints.lib src\psi4\libmoinfo\moinfo.lib src\psi4\liboptions\options.lib src\psi4\libplugin\plugin.lib src\psi4\libpsi4util\psi4util.lib src\psi4\libpsio\psio.lib src\psi4\libqt\qt.lib src\psi4\libsapt_solver\sapt_solver.lib src\psi4\libscf_solver\scf_solver.lib src\psi4\libtrans\trans.lib Ws2_32.lib ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\Extensions\Microsoft\Python\Miniconda\Miniconda3-x64\libs\Python37.lib"" F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\gg.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\xc.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\deriv.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\int.lib D:\OpenBLAS\lib\openblas.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib && cd .""; LINK Pass 1: command ""C:\PROGRA~2\MICROS~3\2019\COMMUN~1\VC\Tools\MSVC\1421~1.277\bin\Hostx64\x64\link.exe /nologo src\CMakeFiles\core.dir\export_benchmarks.cc.obj src\CMakeFiles\core.dir\export_blas_lapack.cc.obj src\CMakeFiles\core.dir\export_cubeprop.cc.obj src\CMakeFiles\core.dir\export_diis.cc.obj src\CMakeFiles\core.dir\export_fock.cc.obj src\CMakeFiles\core.dir\export_functional.cc.obj src\CMakeFiles\core.dir\export_mints.cc.obj src\CMakeFiles\core.dir\export_misc.cc.obj src\CMakeFiles\core.dir\export_oeprop.cc.obj src\CMakeFiles\core.dir\export_pcm.cc.obj src\CMakeFiles\core.dir\export_plugins.cc.obj src\CMakeFiles\core.dir\export_psio.cc.obj src\CMakeFiles\core.dir\export_trans.cc.obj src\CMa",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:3599,Deployability,Release,Release,3599,"tking\optking.lib src\psi4\psimrcc\psimrcc.lib src\psi4\sapt\sapt.lib src\psi4\scfgrad\scfgrad.lib src\psi4\lib3index\3index.lib src\psi4\libciomr\ciomr.lib src\psi4\libcubeprop\cubeprop.lib src\psi4\libdiis\diis.lib src\psi4\libdisp\disp.lib src\psi4\libdpd\dpd.lib src\psi4\libfilesystem\filesystem.lib src\psi4\libfock\fock.lib src\psi4\libfunctional\functional.lib src\psi4\libiwl\iwl.lib src\psi4\libmints\mints.lib src\psi4\libmoinfo\moinfo.lib src\psi4\liboptions\options.lib src\psi4\libplugin\plugin.lib src\psi4\libpsi4util\psi4util.lib src\psi4\libpsio\psio.lib src\psi4\libqt\qt.lib src\psi4\libsapt_solver\sapt_solver.lib src\psi4\libscf_solver\scf_solver.lib src\psi4\libtrans\trans.lib Ws2_32.lib ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\Extensions\Microsoft\Python\Miniconda\Miniconda3-x64\libs\Python37.lib"" F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\gg.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\xc.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\deriv.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\int.lib D:\OpenBLAS\lib\openblas.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib && cd .""; LINK Pass 1: command ""C:\PROGRA~2\MICROS~3\2019\COMMUN~1\VC\Tools\MSVC\1421~1.277\bin\Hostx64\x64\link.exe /nologo src\CMakeFiles\core.dir\export_benchmarks.cc.obj src\CMakeFiles\core.dir\export_blas_lapack.cc.obj src\CMakeFiles\core.dir\export_cubeprop.cc.obj src\CMakeFiles\core.dir\export_diis.cc.obj src\CMakeFiles\core.dir\export_fock.cc.obj src\CMakeFiles\core.dir\export_functional.cc.obj src\CMakeFiles\core.dir\export_mints.cc.obj src\CMakeFiles\core.dir\export_misc.cc.obj src\CMakeFiles\core.dir\export_oeprop.cc.obj src\CMakeFiles\core.dir\export_pcm.cc.obj src\CMakeFiles\core.dir\export_plugins.cc.obj src\CMakeFiles\core.dir\export_psio.cc.obj src\CMakeFiles\core.dir\export_trans.cc.obj src\CMakeFiles\core.dir\export_wavefunction.cc.obj src\CMakeFi",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:3656,Deployability,Release,Release,3656,"sapt\sapt.lib src\psi4\scfgrad\scfgrad.lib src\psi4\lib3index\3index.lib src\psi4\libciomr\ciomr.lib src\psi4\libcubeprop\cubeprop.lib src\psi4\libdiis\diis.lib src\psi4\libdisp\disp.lib src\psi4\libdpd\dpd.lib src\psi4\libfilesystem\filesystem.lib src\psi4\libfock\fock.lib src\psi4\libfunctional\functional.lib src\psi4\libiwl\iwl.lib src\psi4\libmints\mints.lib src\psi4\libmoinfo\moinfo.lib src\psi4\liboptions\options.lib src\psi4\libplugin\plugin.lib src\psi4\libpsi4util\psi4util.lib src\psi4\libpsio\psio.lib src\psi4\libqt\qt.lib src\psi4\libsapt_solver\sapt_solver.lib src\psi4\libscf_solver\scf_solver.lib src\psi4\libtrans\trans.lib Ws2_32.lib ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\Extensions\Microsoft\Python\Miniconda\Miniconda3-x64\libs\Python37.lib"" F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\gg.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\xc.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\deriv.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\int.lib D:\OpenBLAS\lib\openblas.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib && cd .""; LINK Pass 1: command ""C:\PROGRA~2\MICROS~3\2019\COMMUN~1\VC\Tools\MSVC\1421~1.277\bin\Hostx64\x64\link.exe /nologo src\CMakeFiles\core.dir\export_benchmarks.cc.obj src\CMakeFiles\core.dir\export_blas_lapack.cc.obj src\CMakeFiles\core.dir\export_cubeprop.cc.obj src\CMakeFiles\core.dir\export_diis.cc.obj src\CMakeFiles\core.dir\export_fock.cc.obj src\CMakeFiles\core.dir\export_functional.cc.obj src\CMakeFiles\core.dir\export_mints.cc.obj src\CMakeFiles\core.dir\export_misc.cc.obj src\CMakeFiles\core.dir\export_oeprop.cc.obj src\CMakeFiles\core.dir\export_pcm.cc.obj src\CMakeFiles\core.dir\export_plugins.cc.obj src\CMakeFiles\core.dir\export_psio.cc.obj src\CMakeFiles\core.dir\export_trans.cc.obj src\CMakeFiles\core.dir\export_wavefunction.cc.obj src\CMakeFiles\core.dir\export_options.cc.obj src\CMakeFiles\core.d",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:6220,Deployability,Release,Release,6220,"ma_interface\gdma_interface.lib src\psi4\mcscf\mcscf.lib src\psi4\mrcc\mrcc.lib src\psi4\occ\occ.lib src\psi4\optking\optking.lib src\psi4\psimrcc\psimrcc.lib src\psi4\sapt\sapt.lib src\psi4\scfgrad\scfgrad.lib src\psi4\lib3index\3index.lib src\psi4\libciomr\ciomr.lib src\psi4\libcubeprop\cubeprop.lib src\psi4\libdiis\diis.lib src\psi4\libdisp\disp.lib src\psi4\libdpd\dpd.lib src\psi4\libfilesystem\filesystem.lib src\psi4\libfock\fock.lib src\psi4\libfunctional\functional.lib src\psi4\libiwl\iwl.lib src\psi4\libmints\mints.lib src\psi4\libmoinfo\moinfo.lib src\psi4\liboptions\options.lib src\psi4\libplugin\plugin.lib src\psi4\libpsi4util\psi4util.lib src\psi4\libpsio\psio.lib src\psi4\libqt\qt.lib src\psi4\libsapt_solver\sapt_solver.lib src\psi4\libscf_solver\scf_solver.lib src\psi4\libtrans\trans.lib Ws2_32.lib C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\Extensions\Microsoft\Python\Miniconda\Miniconda3-x64\libs\Python37.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\gg.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\xc.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\deriv.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\int.lib D:\OpenBLAS\lib\openblas.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:src\CMakeFiles\core.dir/intermediate.manifest src\CMakeFiles\core.dir/manifest.res"" failed (exit code 1120) with the following output:; 正在创建库 src\core.lib 和对象 src\core.exp; F:\fnocc.lib(diis.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv_，该符号在函数 ""void __cdecl psi::fnocc::DGESV(long &,long &,double *,long &,long *,double *,long &,long &)"" (?DGESV@fnocc@psi@@YAXAEAJ0PEAN0PEAJ100@Z) 中被引用; F:\mcscf.lib(scf_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv_，该符号在函数 ""void __cdecl psi::fnocc::DGEMV(char &,long &,long &,double",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:6274,Deployability,Release,Release,6274,"ib src\psi4\mrcc\mrcc.lib src\psi4\occ\occ.lib src\psi4\optking\optking.lib src\psi4\psimrcc\psimrcc.lib src\psi4\sapt\sapt.lib src\psi4\scfgrad\scfgrad.lib src\psi4\lib3index\3index.lib src\psi4\libciomr\ciomr.lib src\psi4\libcubeprop\cubeprop.lib src\psi4\libdiis\diis.lib src\psi4\libdisp\disp.lib src\psi4\libdpd\dpd.lib src\psi4\libfilesystem\filesystem.lib src\psi4\libfock\fock.lib src\psi4\libfunctional\functional.lib src\psi4\libiwl\iwl.lib src\psi4\libmints\mints.lib src\psi4\libmoinfo\moinfo.lib src\psi4\liboptions\options.lib src\psi4\libplugin\plugin.lib src\psi4\libpsi4util\psi4util.lib src\psi4\libpsio\psio.lib src\psi4\libqt\qt.lib src\psi4\libsapt_solver\sapt_solver.lib src\psi4\libscf_solver\scf_solver.lib src\psi4\libtrans\trans.lib Ws2_32.lib C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\Extensions\Microsoft\Python\Miniconda\Miniconda3-x64\libs\Python37.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\gg.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\xc.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\deriv.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\int.lib D:\OpenBLAS\lib\openblas.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:src\CMakeFiles\core.dir/intermediate.manifest src\CMakeFiles\core.dir/manifest.res"" failed (exit code 1120) with the following output:; 正在创建库 src\core.lib 和对象 src\core.exp; F:\fnocc.lib(diis.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv_，该符号在函数 ""void __cdecl psi::fnocc::DGESV(long &,long &,double *,long &,long *,double *,long &,long &)"" (?DGESV@fnocc@psi@@YAXAEAJ0PEAN0PEAJ100@Z) 中被引用; F:\mcscf.lib(scf_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv_，该符号在函数 ""void __cdecl psi::fnocc::DGEMV(char &,long &,long &,double &,double *,long &,double *,long &,double &,double *,l",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:6328,Deployability,Release,Release,6328,"optking\optking.lib src\psi4\psimrcc\psimrcc.lib src\psi4\sapt\sapt.lib src\psi4\scfgrad\scfgrad.lib src\psi4\lib3index\3index.lib src\psi4\libciomr\ciomr.lib src\psi4\libcubeprop\cubeprop.lib src\psi4\libdiis\diis.lib src\psi4\libdisp\disp.lib src\psi4\libdpd\dpd.lib src\psi4\libfilesystem\filesystem.lib src\psi4\libfock\fock.lib src\psi4\libfunctional\functional.lib src\psi4\libiwl\iwl.lib src\psi4\libmints\mints.lib src\psi4\libmoinfo\moinfo.lib src\psi4\liboptions\options.lib src\psi4\libplugin\plugin.lib src\psi4\libpsi4util\psi4util.lib src\psi4\libpsio\psio.lib src\psi4\libqt\qt.lib src\psi4\libsapt_solver\sapt_solver.lib src\psi4\libscf_solver\scf_solver.lib src\psi4\libtrans\trans.lib Ws2_32.lib C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\Extensions\Microsoft\Python\Miniconda\Miniconda3-x64\libs\Python37.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\gg.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\xc.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\deriv.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\int.lib D:\OpenBLAS\lib\openblas.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:src\CMakeFiles\core.dir/intermediate.manifest src\CMakeFiles\core.dir/manifest.res"" failed (exit code 1120) with the following output:; 正在创建库 src\core.lib 和对象 src\core.exp; F:\fnocc.lib(diis.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv_，该符号在函数 ""void __cdecl psi::fnocc::DGESV(long &,long &,double *,long &,long *,double *,long &,long &)"" (?DGESV@fnocc@psi@@YAXAEAJ0PEAN0PEAJ100@Z) 中被引用; F:\mcscf.lib(scf_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv_，该符号在函数 ""void __cdecl psi::fnocc::DGEMV(char &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMV@fnocc@psi@@YAXAEADAEAJ1AEANPEAN131231@Z",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:6385,Deployability,Release,Release,6385,"4\sapt\sapt.lib src\psi4\scfgrad\scfgrad.lib src\psi4\lib3index\3index.lib src\psi4\libciomr\ciomr.lib src\psi4\libcubeprop\cubeprop.lib src\psi4\libdiis\diis.lib src\psi4\libdisp\disp.lib src\psi4\libdpd\dpd.lib src\psi4\libfilesystem\filesystem.lib src\psi4\libfock\fock.lib src\psi4\libfunctional\functional.lib src\psi4\libiwl\iwl.lib src\psi4\libmints\mints.lib src\psi4\libmoinfo\moinfo.lib src\psi4\liboptions\options.lib src\psi4\libplugin\plugin.lib src\psi4\libpsi4util\psi4util.lib src\psi4\libpsio\psio.lib src\psi4\libqt\qt.lib src\psi4\libsapt_solver\sapt_solver.lib src\psi4\libscf_solver\scf_solver.lib src\psi4\libtrans\trans.lib Ws2_32.lib C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\Extensions\Microsoft\Python\Miniconda\Miniconda3-x64\libs\Python37.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\gg.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\xc.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\deriv.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\int.lib D:\OpenBLAS\lib\openblas.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:src\CMakeFiles\core.dir/intermediate.manifest src\CMakeFiles\core.dir/manifest.res"" failed (exit code 1120) with the following output:; 正在创建库 src\core.lib 和对象 src\core.exp; F:\fnocc.lib(diis.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv_，该符号在函数 ""void __cdecl psi::fnocc::DGESV(long &,long &,double *,long &,long *,double *,long &,long &)"" (?DGESV@fnocc@psi@@YAXAEAJ0PEAN0PEAJ100@Z) 中被引用; F:\mcscf.lib(scf_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv_，该符号在函数 ""void __cdecl psi::fnocc::DGEMV(char &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMV@fnocc@psi@@YAXAEADAEAJ1AEANPEAN131231@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:259,Integrability,depend,dependency,259,"Hello @raimis @loriab , I built psi4-v1.3.2 with visual studio 2019，I have changed the compilation option -openmp to -openmp:experimental(Although it does not fully support the syntax of openmp4.0), and fixed some include errors in the src。I compiled all the dependency libraries successfully，but at the end of the link an error occurred. I found that `FC_SYMBOL ""The type of Fortran name mangling"" 2`，I changed the value to 1 and get the same error. It looks like a problem with the calling interface of fortran, but i have no idea to solve it. Can you give me some ideas to solve this problem, thanks. ```; Error log:; [1262/1263] Linking CXX static library src\psi4\scfgrad\scfgrad.lib; [1263/1263] Linking CXX shared library src\core.cp37-win_amd64.pyd; FAILED: src/core.cp37-win_amd64.pyd src/core.lib ; cmd.exe /C ""cd . && ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe"" -E vs_link_dll --intdir=src\CMakeFiles\core.dir --rc=""D:\Windows Kits\10\bin\10.0.17763.0\x64\rc.exe"" --mt=""D:\Windows Kits\10\bin\10.0.17763.0\x64\mt.exe"" --manifests -- C:\PROGRA~2\MICROS~3\2019\COMMUN~1\VC\Tools\MSVC\1421~1.277\bin\Hostx64\x64\link.exe /nologo src\CMakeFiles\core.dir\export_benchmarks.cc.obj src\CMakeFiles\core.dir\export_blas_lapack.cc.obj src\CMakeFiles\core.dir\export_cubeprop.cc.obj src\CMakeFiles\core.dir\export_diis.cc.obj src\CMakeFiles\core.dir\export_fock.cc.obj src\CMakeFiles\core.dir\export_functional.cc.obj src\CMakeFiles\core.dir\export_mints.cc.obj src\CMakeFiles\core.dir\export_misc.cc.obj src\CMakeFiles\core.dir\export_oeprop.cc.obj src\CMakeFiles\core.dir\export_pcm.cc.obj src\CMakeFiles\core.dir\export_plugins.cc.obj src\CMakeFiles\core.dir\export_psio.cc.obj src\CMakeFiles\core.dir\export_trans.cc.obj src\CMakeFiles\core.dir\export_wavefunction.cc.obj src\CMakeFiles\core.dir\export_options.cc.obj src\CMakeFiles\core.dir\create_new_plugin.cc.obj src\CMakeFiles\core.dir\read_options.cc.obj s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:492,Integrability,interface,interface,492,"Hello @raimis @loriab , I built psi4-v1.3.2 with visual studio 2019，I have changed the compilation option -openmp to -openmp:experimental(Although it does not fully support the syntax of openmp4.0), and fixed some include errors in the src。I compiled all the dependency libraries successfully，but at the end of the link an error occurred. I found that `FC_SYMBOL ""The type of Fortran name mangling"" 2`，I changed the value to 1 and get the same error. It looks like a problem with the calling interface of fortran, but i have no idea to solve it. Can you give me some ideas to solve this problem, thanks. ```; Error log:; [1262/1263] Linking CXX static library src\psi4\scfgrad\scfgrad.lib; [1263/1263] Linking CXX shared library src\core.cp37-win_amd64.pyd; FAILED: src/core.cp37-win_amd64.pyd src/core.lib ; cmd.exe /C ""cd . && ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe"" -E vs_link_dll --intdir=src\CMakeFiles\core.dir --rc=""D:\Windows Kits\10\bin\10.0.17763.0\x64\rc.exe"" --mt=""D:\Windows Kits\10\bin\10.0.17763.0\x64\mt.exe"" --manifests -- C:\PROGRA~2\MICROS~3\2019\COMMUN~1\VC\Tools\MSVC\1421~1.277\bin\Hostx64\x64\link.exe /nologo src\CMakeFiles\core.dir\export_benchmarks.cc.obj src\CMakeFiles\core.dir\export_blas_lapack.cc.obj src\CMakeFiles\core.dir\export_cubeprop.cc.obj src\CMakeFiles\core.dir\export_diis.cc.obj src\CMakeFiles\core.dir\export_fock.cc.obj src\CMakeFiles\core.dir\export_functional.cc.obj src\CMakeFiles\core.dir\export_mints.cc.obj src\CMakeFiles\core.dir\export_misc.cc.obj src\CMakeFiles\core.dir\export_oeprop.cc.obj src\CMakeFiles\core.dir\export_pcm.cc.obj src\CMakeFiles\core.dir\export_plugins.cc.obj src\CMakeFiles\core.dir\export_psio.cc.obj src\CMakeFiles\core.dir\export_trans.cc.obj src\CMakeFiles\core.dir\export_wavefunction.cc.obj src\CMakeFiles\core.dir\export_options.cc.obj src\CMakeFiles\core.dir\create_new_plugin.cc.obj src\CMakeFiles\core.dir\read_options.cc.obj s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:3105,Modifiability,plugin,plugin,3105,".cp37-win_amd64.pyd /implib:src\core.lib /pdb:src\core.pdb /dll /version:0.0 /machine:x64 /debug /INCREMENTAL src\psi4\adc\adc.lib src\psi4\cc\cc.lib src\psi4\cctransort\cctransort.lib src\psi4\dcft\dcft.lib src\psi4\detci\detci.lib src\psi4\dfep2\dfep2.lib src\psi4\dfmp2\dfmp2.lib src\psi4\dfocc\dfocc.lib src\psi4\dmrg\dmrg.lib src\psi4\fisapt\fisapt.lib src\psi4\fnocc\fnocc.lib src\psi4\gdma_interface\gdma_interface.lib src\psi4\mcscf\mcscf.lib src\psi4\mrcc\mrcc.lib src\psi4\occ\occ.lib src\psi4\optking\optking.lib src\psi4\psimrcc\psimrcc.lib src\psi4\sapt\sapt.lib src\psi4\scfgrad\scfgrad.lib src\psi4\lib3index\3index.lib src\psi4\libciomr\ciomr.lib src\psi4\libcubeprop\cubeprop.lib src\psi4\libdiis\diis.lib src\psi4\libdisp\disp.lib src\psi4\libdpd\dpd.lib src\psi4\libfilesystem\filesystem.lib src\psi4\libfock\fock.lib src\psi4\libfunctional\functional.lib src\psi4\libiwl\iwl.lib src\psi4\libmints\mints.lib src\psi4\libmoinfo\moinfo.lib src\psi4\liboptions\options.lib src\psi4\libplugin\plugin.lib src\psi4\libpsi4util\psi4util.lib src\psi4\libpsio\psio.lib src\psi4\libqt\qt.lib src\psi4\libsapt_solver\sapt_solver.lib src\psi4\libscf_solver\scf_solver.lib src\psi4\libtrans\trans.lib Ws2_32.lib ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\Extensions\Microsoft\Python\Miniconda\Miniconda3-x64\libs\Python37.lib"" F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\gg.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\xc.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\deriv.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\int.lib D:\OpenBLAS\lib\openblas.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib && cd .""; LINK Pass 1: command ""C:\PROGRA~2\MICROS~3\2019\COMMUN~1\VC\Tools\MSVC\1421~1.277\bin\Hostx64\x64\link.exe /nologo src\CMakeFiles\core.dir\export_benchmarks.cc.obj src\CMakeFiles\core.dir\export_blas_lapack.cc.obj src\CMakeFiles\core.dir\export_cubeprop.cc.ob",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:5836,Modifiability,plugin,plugin,5836,".cp37-win_amd64.pyd /implib:src\core.lib /pdb:src\core.pdb /dll /version:0.0 /machine:x64 /debug /INCREMENTAL src\psi4\adc\adc.lib src\psi4\cc\cc.lib src\psi4\cctransort\cctransort.lib src\psi4\dcft\dcft.lib src\psi4\detci\detci.lib src\psi4\dfep2\dfep2.lib src\psi4\dfmp2\dfmp2.lib src\psi4\dfocc\dfocc.lib src\psi4\dmrg\dmrg.lib src\psi4\fisapt\fisapt.lib src\psi4\fnocc\fnocc.lib src\psi4\gdma_interface\gdma_interface.lib src\psi4\mcscf\mcscf.lib src\psi4\mrcc\mrcc.lib src\psi4\occ\occ.lib src\psi4\optking\optking.lib src\psi4\psimrcc\psimrcc.lib src\psi4\sapt\sapt.lib src\psi4\scfgrad\scfgrad.lib src\psi4\lib3index\3index.lib src\psi4\libciomr\ciomr.lib src\psi4\libcubeprop\cubeprop.lib src\psi4\libdiis\diis.lib src\psi4\libdisp\disp.lib src\psi4\libdpd\dpd.lib src\psi4\libfilesystem\filesystem.lib src\psi4\libfock\fock.lib src\psi4\libfunctional\functional.lib src\psi4\libiwl\iwl.lib src\psi4\libmints\mints.lib src\psi4\libmoinfo\moinfo.lib src\psi4\liboptions\options.lib src\psi4\libplugin\plugin.lib src\psi4\libpsi4util\psi4util.lib src\psi4\libpsio\psio.lib src\psi4\libqt\qt.lib src\psi4\libsapt_solver\sapt_solver.lib src\psi4\libscf_solver\scf_solver.lib src\psi4\libtrans\trans.lib Ws2_32.lib C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\Extensions\Microsoft\Python\Miniconda\Miniconda3-x64\libs\Python37.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\gg.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\xc.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\deriv.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\int.lib D:\OpenBLAS\lib\openblas.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:src\CMakeFiles\core.dir/intermediate.manifest src\CMakeFiles\core.dir/manifest.res"" failed (exit code 1120) with the following output:; 正在创建库 src\core.lib 和对象 src\core.exp; F:\fnocc.lib(diis.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv_，该符号在函数 ""void _",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504616648:615,Testability,log,log,615,"Hello @raimis @loriab , I built psi4-v1.3.2 with visual studio 2019，I have changed the compilation option -openmp to -openmp:experimental(Although it does not fully support the syntax of openmp4.0), and fixed some include errors in the src。I compiled all the dependency libraries successfully，but at the end of the link an error occurred. I found that `FC_SYMBOL ""The type of Fortran name mangling"" 2`，I changed the value to 1 and get the same error. It looks like a problem with the calling interface of fortran, but i have no idea to solve it. Can you give me some ideas to solve this problem, thanks. ```; Error log:; [1262/1263] Linking CXX static library src\psi4\scfgrad\scfgrad.lib; [1263/1263] Linking CXX shared library src\core.cp37-win_amd64.pyd; FAILED: src/core.cp37-win_amd64.pyd src/core.lib ; cmd.exe /C ""cd . && ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe"" -E vs_link_dll --intdir=src\CMakeFiles\core.dir --rc=""D:\Windows Kits\10\bin\10.0.17763.0\x64\rc.exe"" --mt=""D:\Windows Kits\10\bin\10.0.17763.0\x64\mt.exe"" --manifests -- C:\PROGRA~2\MICROS~3\2019\COMMUN~1\VC\Tools\MSVC\1421~1.277\bin\Hostx64\x64\link.exe /nologo src\CMakeFiles\core.dir\export_benchmarks.cc.obj src\CMakeFiles\core.dir\export_blas_lapack.cc.obj src\CMakeFiles\core.dir\export_cubeprop.cc.obj src\CMakeFiles\core.dir\export_diis.cc.obj src\CMakeFiles\core.dir\export_fock.cc.obj src\CMakeFiles\core.dir\export_functional.cc.obj src\CMakeFiles\core.dir\export_mints.cc.obj src\CMakeFiles\core.dir\export_misc.cc.obj src\CMakeFiles\core.dir\export_oeprop.cc.obj src\CMakeFiles\core.dir\export_pcm.cc.obj src\CMakeFiles\core.dir\export_plugins.cc.obj src\CMakeFiles\core.dir\export_psio.cc.obj src\CMakeFiles\core.dir\export_trans.cc.obj src\CMakeFiles\core.dir\export_wavefunction.cc.obj src\CMakeFiles\core.dir\export_options.cc.obj src\CMakeFiles\core.dir\create_new_plugin.cc.obj src\CMakeFiles\core.dir\read_options.cc.obj s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648
https://github.com/psi4/psi4/issues/933#issuecomment-504624701:413,Deployability,pipeline,pipelines,413,"@liye0005, you may want to proceed more gradually toward a Windows, OpenMP, AMD build, especially as the Windows build is newer. I've never needed to change `FC_SYMBOL` from default. Be sure to turn off any Fortran addons (gdma, dkh, erd) so that at most you're dealing with blas/lapack. I notice you're using openblas, which as the build docs note, has some problems. MKL is preferred, and you can use the azure-pipelines script to setup a useable build env. Then make modifications from there.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504624701
https://github.com/psi4/psi4/issues/933#issuecomment-533659916:147,Testability,test,tested,147,"We really need to thank @raimis, as he did all of the work, I just liaised mostly :) and thanks to all people that showed interest, reviewed code, tested, etc. I am happy with the end result. Cheers!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-533659916
https://github.com/psi4/psi4/issues/934#issuecomment-371658386:14,Performance,concurren,concurrence,14,"Btw, is there concurrence on killing of `property()` in favor of `properties()`? I like the former better, but using a python syntax word makes me nervous.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/934#issuecomment-371658386
https://github.com/psi4/psi4/issues/934#issuecomment-371659678:25,Availability,down,down,25,"I incorrectly wrote that down, `property` was killed off in favor of `properties`. I do like the former better as well, but it messes with Python.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/934#issuecomment-371659678
https://github.com/psi4/psi4/issues/934#issuecomment-379323814:1,Energy Efficiency,energy,energy,1,`energy('B3lyp/6-311++G**')` is another one the regex needs to be smarter for.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/934#issuecomment-379323814
https://github.com/psi4/psi4/issues/936#issuecomment-373012577:280,Deployability,update,update-a-,280,"Hello,; it works fine for me with a relatively recent psi4 (Git: Rev {master} a3d8d93). It also works with the latest dev. conda package (837e345). Which psi4 version are you using? If it's anything older, try [updating](http://www.psicode.org/psi4manual/master/conda.html#how-to-update-a-psi4-binary).; Peter. Log: [{master} a3d8d93](https://github.com/psi4/psi4/files/1811137/master.txt)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/936#issuecomment-373012577
https://github.com/psi4/psi4/issues/936#issuecomment-373012577:311,Testability,Log,Log,311,"Hello,; it works fine for me with a relatively recent psi4 (Git: Rev {master} a3d8d93). It also works with the latest dev. conda package (837e345). Which psi4 version are you using? If it's anything older, try [updating](http://www.psicode.org/psi4manual/master/conda.html#how-to-update-a-psi4-binary).; Peter. Log: [{master} a3d8d93](https://github.com/psi4/psi4/files/1811137/master.txt)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/936#issuecomment-373012577
https://github.com/psi4/psi4/issues/936#issuecomment-373016592:64,Availability,down,download,64,"O install it last week, so I should be using de last version. I download the script version py3.6.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/936#issuecomment-373016592
https://github.com/psi4/psi4/issues/936#issuecomment-373016592:2,Deployability,install,install,2,"O install it last week, so I should be using de last version. I download the script version py3.6.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/936#issuecomment-373016592
https://github.com/psi4/psi4/issues/936#issuecomment-373018664:24,Availability,down,downloaded,24,It might well be you've downloaded the stable version (psi4 version 1.1) and the mid-bond functionality might have been introduced afterwards (so it's available only in the dev releases). What does `psi4 --version` return?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/936#issuecomment-373018664
https://github.com/psi4/psi4/issues/936#issuecomment-373018664:151,Availability,avail,available,151,It might well be you've downloaded the stable version (psi4 version 1.1) and the mid-bond functionality might have been introduced afterwards (so it's available only in the dev releases). What does `psi4 --version` return?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/936#issuecomment-373018664
https://github.com/psi4/psi4/issues/936#issuecomment-373018664:177,Deployability,release,releases,177,It might well be you've downloaded the stable version (psi4 version 1.1) and the mid-bond functionality might have been introduced afterwards (so it's available only in the dev releases). What does `psi4 --version` return?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/936#issuecomment-373018664
https://github.com/psi4/psi4/issues/936#issuecomment-373023252:29,Availability,error,error,29,"Just a note to confirm, that error looks like a mismatch between an old version of Psi4 and new version of the test. Midbonds were added fairly recently.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/936#issuecomment-373023252
https://github.com/psi4/psi4/issues/936#issuecomment-373023252:111,Testability,test,test,111,"Just a note to confirm, that error looks like a mismatch between an old version of Psi4 and new version of the test. Midbonds were added fairly recently.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/936#issuecomment-373023252
https://github.com/psi4/psi4/issues/936#issuecomment-373024315:87,Performance,load,loaded,87,pis4--version returns:. /psi4/lib/python3.6/site-packages/v2rdm_casscf/v2rdm_casscf.so loaded.1.1,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/936#issuecomment-373024315
https://github.com/psi4/psi4/issues/936#issuecomment-373034538:169,Availability,error,error,169,If conda is used you will likely need to run this:; `update psi4 libefp libint erd simint pcmsolver chemps2 gdma dkh libxc -c psi4/label/dev` or else; you will get this error: http://forum.psicode.org/t/psi4-error-after-upgrade/662/2. (I happend to run into this today morning),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/936#issuecomment-373034538
https://github.com/psi4/psi4/issues/936#issuecomment-373034538:208,Availability,error,error-after-upgrade,208,If conda is used you will likely need to run this:; `update psi4 libefp libint erd simint pcmsolver chemps2 gdma dkh libxc -c psi4/label/dev` or else; you will get this error: http://forum.psicode.org/t/psi4-error-after-upgrade/662/2. (I happend to run into this today morning),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/936#issuecomment-373034538
https://github.com/psi4/psi4/issues/936#issuecomment-373034538:53,Deployability,update,update,53,If conda is used you will likely need to run this:; `update psi4 libefp libint erd simint pcmsolver chemps2 gdma dkh libxc -c psi4/label/dev` or else; you will get this error: http://forum.psicode.org/t/psi4-error-after-upgrade/662/2. (I happend to run into this today morning),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/936#issuecomment-373034538
https://github.com/psi4/psi4/issues/936#issuecomment-373034538:220,Deployability,upgrade,upgrade,220,If conda is used you will likely need to run this:; `update psi4 libefp libint erd simint pcmsolver chemps2 gdma dkh libxc -c psi4/label/dev` or else; you will get this error: http://forum.psicode.org/t/psi4-error-after-upgrade/662/2. (I happend to run into this today morning),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/936#issuecomment-373034538
https://github.com/psi4/psi4/issues/936#issuecomment-373052900:203,Availability,error,error,203,"Now nothings works anymore. I update psi4 using conda update psi4 libefp libint erd simint pcmsolver chemps2 gdma dkh libxc -c psi4/label/dev it finish ok, but when I try to run psi4 I got the following error:. File ""/opt/psi4/bin/psi4"", line 158, in <module>; import psi4; File ""/opt/psi4/lib//python3.6/site-packages/psi4/__init__.py"", line 81, in <module>; from .driver import endorsed_plugins; File ""/opt/psi4/lib//python3.6/site-packages/psi4/driver/endorsed_plugins.py"", line 32, in <module>; import v2rdm_casscf; File ""/opt/psi4/lib//python3.6/site-packages/v2rdm_casscf/__init__.py"", line 39, in <module>; psi4.core.plugin_load(sofile); RuntimeError: ; Fatal Error: load_plugin: Cannot open library: /opt/psi4/lib/python3.6/site-packages/v2rdm_casscf/v2rdm_casscf.so: undefined symbol: _ZNK3psi12Wavefunction26tpdm_gradient_contributionEv; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1514132855674/work/psi4/src/psi4/libplugin/load_plugin.cc on line: 51; The most recent 5 function calls were:. psi::plugin_load(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&); py_psi_plugin_load(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >); pybind11::cpp_function::dispatcher(_object*, _object*, _object*). forrtl: severe (174): SIGSEGV, segmentation fault occurred; Image PC Routine Line Source ; libpcm.so.1 00002AC3069B82CD Unknown Unknown Unknown; libpthread.so.0 00002AC301BBD1F0 Unknown Unknown Unknown; ld-linux-x86-64.s 00002AC30148A0D1 Unknown Unknown Unknown; ld-linux-x86-64.s 00002AC3014847A6 Unknown Unknown Unknown; libdl.so.2 00002AC301DCB5EC Unknown Unknown Unknown; libdl.so.2 00002AC301DCB10F Unknown Unknown Unknown; core.so 00002AC303C6DC02 Unknown Unknown Unknown; core.so 00002AC303DC58E2 Unknown Unknown Unknown; core.so 00002AC303DE4A13 Unknown Unknown Unknown; core.so 00002AC303955DEC Unknown Unknown Unknown; libpython3.6m.so. 00002AC30175D1C9 Unknown Unknown Unknown; libpython3.6m.so. 0000",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/936#issuecomment-373052900
https://github.com/psi4/psi4/issues/936#issuecomment-373052900:667,Availability,Error,Error,667,"Now nothings works anymore. I update psi4 using conda update psi4 libefp libint erd simint pcmsolver chemps2 gdma dkh libxc -c psi4/label/dev it finish ok, but when I try to run psi4 I got the following error:. File ""/opt/psi4/bin/psi4"", line 158, in <module>; import psi4; File ""/opt/psi4/lib//python3.6/site-packages/psi4/__init__.py"", line 81, in <module>; from .driver import endorsed_plugins; File ""/opt/psi4/lib//python3.6/site-packages/psi4/driver/endorsed_plugins.py"", line 32, in <module>; import v2rdm_casscf; File ""/opt/psi4/lib//python3.6/site-packages/v2rdm_casscf/__init__.py"", line 39, in <module>; psi4.core.plugin_load(sofile); RuntimeError: ; Fatal Error: load_plugin: Cannot open library: /opt/psi4/lib/python3.6/site-packages/v2rdm_casscf/v2rdm_casscf.so: undefined symbol: _ZNK3psi12Wavefunction26tpdm_gradient_contributionEv; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1514132855674/work/psi4/src/psi4/libplugin/load_plugin.cc on line: 51; The most recent 5 function calls were:. psi::plugin_load(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&); py_psi_plugin_load(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >); pybind11::cpp_function::dispatcher(_object*, _object*, _object*). forrtl: severe (174): SIGSEGV, segmentation fault occurred; Image PC Routine Line Source ; libpcm.so.1 00002AC3069B82CD Unknown Unknown Unknown; libpthread.so.0 00002AC301BBD1F0 Unknown Unknown Unknown; ld-linux-x86-64.s 00002AC30148A0D1 Unknown Unknown Unknown; ld-linux-x86-64.s 00002AC3014847A6 Unknown Unknown Unknown; libdl.so.2 00002AC301DCB5EC Unknown Unknown Unknown; libdl.so.2 00002AC301DCB10F Unknown Unknown Unknown; core.so 00002AC303C6DC02 Unknown Unknown Unknown; core.so 00002AC303DC58E2 Unknown Unknown Unknown; core.so 00002AC303DE4A13 Unknown Unknown Unknown; core.so 00002AC303955DEC Unknown Unknown Unknown; libpython3.6m.so. 00002AC30175D1C9 Unknown Unknown Unknown; libpython3.6m.so. 0000",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/936#issuecomment-373052900
https://github.com/psi4/psi4/issues/936#issuecomment-373052900:848,Availability,Error,Error,848,"Now nothings works anymore. I update psi4 using conda update psi4 libefp libint erd simint pcmsolver chemps2 gdma dkh libxc -c psi4/label/dev it finish ok, but when I try to run psi4 I got the following error:. File ""/opt/psi4/bin/psi4"", line 158, in <module>; import psi4; File ""/opt/psi4/lib//python3.6/site-packages/psi4/__init__.py"", line 81, in <module>; from .driver import endorsed_plugins; File ""/opt/psi4/lib//python3.6/site-packages/psi4/driver/endorsed_plugins.py"", line 32, in <module>; import v2rdm_casscf; File ""/opt/psi4/lib//python3.6/site-packages/v2rdm_casscf/__init__.py"", line 39, in <module>; psi4.core.plugin_load(sofile); RuntimeError: ; Fatal Error: load_plugin: Cannot open library: /opt/psi4/lib/python3.6/site-packages/v2rdm_casscf/v2rdm_casscf.so: undefined symbol: _ZNK3psi12Wavefunction26tpdm_gradient_contributionEv; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1514132855674/work/psi4/src/psi4/libplugin/load_plugin.cc on line: 51; The most recent 5 function calls were:. psi::plugin_load(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&); py_psi_plugin_load(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >); pybind11::cpp_function::dispatcher(_object*, _object*, _object*). forrtl: severe (174): SIGSEGV, segmentation fault occurred; Image PC Routine Line Source ; libpcm.so.1 00002AC3069B82CD Unknown Unknown Unknown; libpthread.so.0 00002AC301BBD1F0 Unknown Unknown Unknown; ld-linux-x86-64.s 00002AC30148A0D1 Unknown Unknown Unknown; ld-linux-x86-64.s 00002AC3014847A6 Unknown Unknown Unknown; libdl.so.2 00002AC301DCB5EC Unknown Unknown Unknown; libdl.so.2 00002AC301DCB10F Unknown Unknown Unknown; core.so 00002AC303C6DC02 Unknown Unknown Unknown; core.so 00002AC303DC58E2 Unknown Unknown Unknown; core.so 00002AC303DE4A13 Unknown Unknown Unknown; core.so 00002AC303955DEC Unknown Unknown Unknown; libpython3.6m.so. 00002AC30175D1C9 Unknown Unknown Unknown; libpython3.6m.so. 0000",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/936#issuecomment-373052900
https://github.com/psi4/psi4/issues/936#issuecomment-373052900:1334,Availability,fault,fault,1334,"line 81, in <module>; from .driver import endorsed_plugins; File ""/opt/psi4/lib//python3.6/site-packages/psi4/driver/endorsed_plugins.py"", line 32, in <module>; import v2rdm_casscf; File ""/opt/psi4/lib//python3.6/site-packages/v2rdm_casscf/__init__.py"", line 39, in <module>; psi4.core.plugin_load(sofile); RuntimeError: ; Fatal Error: load_plugin: Cannot open library: /opt/psi4/lib/python3.6/site-packages/v2rdm_casscf/v2rdm_casscf.so: undefined symbol: _ZNK3psi12Wavefunction26tpdm_gradient_contributionEv; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1514132855674/work/psi4/src/psi4/libplugin/load_plugin.cc on line: 51; The most recent 5 function calls were:. psi::plugin_load(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&); py_psi_plugin_load(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >); pybind11::cpp_function::dispatcher(_object*, _object*, _object*). forrtl: severe (174): SIGSEGV, segmentation fault occurred; Image PC Routine Line Source ; libpcm.so.1 00002AC3069B82CD Unknown Unknown Unknown; libpthread.so.0 00002AC301BBD1F0 Unknown Unknown Unknown; ld-linux-x86-64.s 00002AC30148A0D1 Unknown Unknown Unknown; ld-linux-x86-64.s 00002AC3014847A6 Unknown Unknown Unknown; libdl.so.2 00002AC301DCB5EC Unknown Unknown Unknown; libdl.so.2 00002AC301DCB10F Unknown Unknown Unknown; core.so 00002AC303C6DC02 Unknown Unknown Unknown; core.so 00002AC303DC58E2 Unknown Unknown Unknown; core.so 00002AC303DE4A13 Unknown Unknown Unknown; core.so 00002AC303955DEC Unknown Unknown Unknown; libpython3.6m.so. 00002AC30175D1C9 Unknown Unknown Unknown; libpython3.6m.so. 00002AC301705E96 Unknown Unknown Unknown; libpython3.6m.so. 00002AC3018614B5 Unknown Unknown Unknown; libpython3.6m.so. 00002AC301810E03 Unknown Unknown Unknown; libpython3.6m.so. 00002AC30182F8FA Unknown Unknown Unknown; python 0000000000400C1D Unknown Unknown Unknown; libc.so.6 00002AC3026F9A15 Unknown Unknown Unknown; python 000000000040",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/936#issuecomment-373052900
https://github.com/psi4/psi4/issues/936#issuecomment-373052900:30,Deployability,update,update,30,"Now nothings works anymore. I update psi4 using conda update psi4 libefp libint erd simint pcmsolver chemps2 gdma dkh libxc -c psi4/label/dev it finish ok, but when I try to run psi4 I got the following error:. File ""/opt/psi4/bin/psi4"", line 158, in <module>; import psi4; File ""/opt/psi4/lib//python3.6/site-packages/psi4/__init__.py"", line 81, in <module>; from .driver import endorsed_plugins; File ""/opt/psi4/lib//python3.6/site-packages/psi4/driver/endorsed_plugins.py"", line 32, in <module>; import v2rdm_casscf; File ""/opt/psi4/lib//python3.6/site-packages/v2rdm_casscf/__init__.py"", line 39, in <module>; psi4.core.plugin_load(sofile); RuntimeError: ; Fatal Error: load_plugin: Cannot open library: /opt/psi4/lib/python3.6/site-packages/v2rdm_casscf/v2rdm_casscf.so: undefined symbol: _ZNK3psi12Wavefunction26tpdm_gradient_contributionEv; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1514132855674/work/psi4/src/psi4/libplugin/load_plugin.cc on line: 51; The most recent 5 function calls were:. psi::plugin_load(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&); py_psi_plugin_load(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >); pybind11::cpp_function::dispatcher(_object*, _object*, _object*). forrtl: severe (174): SIGSEGV, segmentation fault occurred; Image PC Routine Line Source ; libpcm.so.1 00002AC3069B82CD Unknown Unknown Unknown; libpthread.so.0 00002AC301BBD1F0 Unknown Unknown Unknown; ld-linux-x86-64.s 00002AC30148A0D1 Unknown Unknown Unknown; ld-linux-x86-64.s 00002AC3014847A6 Unknown Unknown Unknown; libdl.so.2 00002AC301DCB5EC Unknown Unknown Unknown; libdl.so.2 00002AC301DCB10F Unknown Unknown Unknown; core.so 00002AC303C6DC02 Unknown Unknown Unknown; core.so 00002AC303DC58E2 Unknown Unknown Unknown; core.so 00002AC303DE4A13 Unknown Unknown Unknown; core.so 00002AC303955DEC Unknown Unknown Unknown; libpython3.6m.so. 00002AC30175D1C9 Unknown Unknown Unknown; libpython3.6m.so. 0000",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/936#issuecomment-373052900
https://github.com/psi4/psi4/issues/936#issuecomment-373052900:54,Deployability,update,update,54,"Now nothings works anymore. I update psi4 using conda update psi4 libefp libint erd simint pcmsolver chemps2 gdma dkh libxc -c psi4/label/dev it finish ok, but when I try to run psi4 I got the following error:. File ""/opt/psi4/bin/psi4"", line 158, in <module>; import psi4; File ""/opt/psi4/lib//python3.6/site-packages/psi4/__init__.py"", line 81, in <module>; from .driver import endorsed_plugins; File ""/opt/psi4/lib//python3.6/site-packages/psi4/driver/endorsed_plugins.py"", line 32, in <module>; import v2rdm_casscf; File ""/opt/psi4/lib//python3.6/site-packages/v2rdm_casscf/__init__.py"", line 39, in <module>; psi4.core.plugin_load(sofile); RuntimeError: ; Fatal Error: load_plugin: Cannot open library: /opt/psi4/lib/python3.6/site-packages/v2rdm_casscf/v2rdm_casscf.so: undefined symbol: _ZNK3psi12Wavefunction26tpdm_gradient_contributionEv; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1514132855674/work/psi4/src/psi4/libplugin/load_plugin.cc on line: 51; The most recent 5 function calls were:. psi::plugin_load(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&); py_psi_plugin_load(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >); pybind11::cpp_function::dispatcher(_object*, _object*, _object*). forrtl: severe (174): SIGSEGV, segmentation fault occurred; Image PC Routine Line Source ; libpcm.so.1 00002AC3069B82CD Unknown Unknown Unknown; libpthread.so.0 00002AC301BBD1F0 Unknown Unknown Unknown; ld-linux-x86-64.s 00002AC30148A0D1 Unknown Unknown Unknown; ld-linux-x86-64.s 00002AC3014847A6 Unknown Unknown Unknown; libdl.so.2 00002AC301DCB5EC Unknown Unknown Unknown; libdl.so.2 00002AC301DCB10F Unknown Unknown Unknown; core.so 00002AC303C6DC02 Unknown Unknown Unknown; core.so 00002AC303DC58E2 Unknown Unknown Unknown; core.so 00002AC303DE4A13 Unknown Unknown Unknown; core.so 00002AC303955DEC Unknown Unknown Unknown; libpython3.6m.so. 00002AC30175D1C9 Unknown Unknown Unknown; libpython3.6m.so. 0000",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/936#issuecomment-373052900
https://github.com/psi4/psi4/issues/936#issuecomment-373052900:1359,Integrability,Rout,Routine,1359,"line 81, in <module>; from .driver import endorsed_plugins; File ""/opt/psi4/lib//python3.6/site-packages/psi4/driver/endorsed_plugins.py"", line 32, in <module>; import v2rdm_casscf; File ""/opt/psi4/lib//python3.6/site-packages/v2rdm_casscf/__init__.py"", line 39, in <module>; psi4.core.plugin_load(sofile); RuntimeError: ; Fatal Error: load_plugin: Cannot open library: /opt/psi4/lib/python3.6/site-packages/v2rdm_casscf/v2rdm_casscf.so: undefined symbol: _ZNK3psi12Wavefunction26tpdm_gradient_contributionEv; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1514132855674/work/psi4/src/psi4/libplugin/load_plugin.cc on line: 51; The most recent 5 function calls were:. psi::plugin_load(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&); py_psi_plugin_load(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >); pybind11::cpp_function::dispatcher(_object*, _object*, _object*). forrtl: severe (174): SIGSEGV, segmentation fault occurred; Image PC Routine Line Source ; libpcm.so.1 00002AC3069B82CD Unknown Unknown Unknown; libpthread.so.0 00002AC301BBD1F0 Unknown Unknown Unknown; ld-linux-x86-64.s 00002AC30148A0D1 Unknown Unknown Unknown; ld-linux-x86-64.s 00002AC3014847A6 Unknown Unknown Unknown; libdl.so.2 00002AC301DCB5EC Unknown Unknown Unknown; libdl.so.2 00002AC301DCB10F Unknown Unknown Unknown; core.so 00002AC303C6DC02 Unknown Unknown Unknown; core.so 00002AC303DC58E2 Unknown Unknown Unknown; core.so 00002AC303DE4A13 Unknown Unknown Unknown; core.so 00002AC303955DEC Unknown Unknown Unknown; libpython3.6m.so. 00002AC30175D1C9 Unknown Unknown Unknown; libpython3.6m.so. 00002AC301705E96 Unknown Unknown Unknown; libpython3.6m.so. 00002AC3018614B5 Unknown Unknown Unknown; libpython3.6m.so. 00002AC301810E03 Unknown Unknown Unknown; libpython3.6m.so. 00002AC30182F8FA Unknown Unknown Unknown; python 0000000000400C1D Unknown Unknown Unknown; libc.so.6 00002AC3026F9A15 Unknown Unknown Unknown; python 000000000040",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/936#issuecomment-373052900
https://github.com/psi4/psi4/pull/937#issuecomment-373309541:260,Availability,down,down,260,"I'm a little worried about the 0 coefficient handling. The 0 coefficient means ""no local potential."" (See the discussion in #newdev on Nov. 9.) Replacing that with a ""really small but existing local potential"" just _sounds_ like it will create nasty surprises down the road. Good luck getting the tests passing!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/937#issuecomment-373309541
https://github.com/psi4/psi4/pull/937#issuecomment-373309541:297,Testability,test,tests,297,"I'm a little worried about the 0 coefficient handling. The 0 coefficient means ""no local potential."" (See the discussion in #newdev on Nov. 9.) Replacing that with a ""really small but existing local potential"" just _sounds_ like it will create nasty surprises down the road. Good luck getting the tests passing!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/937#issuecomment-373309541
https://github.com/psi4/psi4/pull/937#issuecomment-375698856:136,Integrability,contract,contraction,136,"@JonathonMisiewicz Thanks, that was a good point. I've modified the function somewhat - as opposed to messing with the read-in original contraction coefficients, I've simply disabled the `erd_normalize_shell` call for ECP's (presumably when `self.rpowers` is not just full of `None`'s).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/937#issuecomment-375698856
https://github.com/psi4/psi4/pull/937#issuecomment-375698856:167,Usability,simpl,simply,167,"@JonathonMisiewicz Thanks, that was a good point. I've modified the function somewhat - as opposed to messing with the read-in original contraction coefficients, I've simply disabled the `erd_normalize_shell` call for ECP's (presumably when `self.rpowers` is not just full of `None`'s).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/937#issuecomment-375698856
https://github.com/psi4/psi4/pull/937#issuecomment-376423459:86,Integrability,contract,contractions,86,"I'm not 100% certain my ""fix"" is not just a hack - my understanding of basis sets and contractions is rather limited. The way I understand it, we're not trusting user input and are normalising all of the normal shells, using both `self.normalise_shell()` and `self.erd_normalise_shell()`. For normal shells, the inputs are the exponent `eps` and the normalisation constant `N` in: ; `psi = N * exp (-r**2 * eps)`. For ECP's, the inputs on each line aren't the exponent + normalisation, but rather they should be the three variables (`n`, `z`, `d` columns in g09 input) in the `i`th component of the potential `v(r)`:; `v(r)_i = d_i * r**(n_i) * e**(-z_i * r**2)`; The third column (`d`, if I got the above right) is stored in `self.PYcoef` and `self.PYoriginal_coef`. If this coefficient is set to zero, the whole component of the potential should be 0 - it shouldn't be normalised. The first column `n` goes to `self.rpowers` for each shell. Finally, the `self.PYexp` contains the exponent `z`. My two questions therefore are:; - should we perform any normalisation at all (including `self.normalise_shell()`) on ECP shells? To me the answer seems no...; - I am assuming the only way to tell a shell is an ECP shell from within `ShellInfo` class is if `self.rpowers` is populated. Wouldn't it be better, if `ShellInfo` received `pt=""Normalized""` when processing an ECP shell?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/937#issuecomment-376423459
https://github.com/psi4/psi4/pull/937#issuecomment-376423459:522,Modifiability,variab,variables,522,"I'm not 100% certain my ""fix"" is not just a hack - my understanding of basis sets and contractions is rather limited. The way I understand it, we're not trusting user input and are normalising all of the normal shells, using both `self.normalise_shell()` and `self.erd_normalise_shell()`. For normal shells, the inputs are the exponent `eps` and the normalisation constant `N` in: ; `psi = N * exp (-r**2 * eps)`. For ECP's, the inputs on each line aren't the exponent + normalisation, but rather they should be the three variables (`n`, `z`, `d` columns in g09 input) in the `i`th component of the potential `v(r)`:; `v(r)_i = d_i * r**(n_i) * e**(-z_i * r**2)`; The third column (`d`, if I got the above right) is stored in `self.PYcoef` and `self.PYoriginal_coef`. If this coefficient is set to zero, the whole component of the potential should be 0 - it shouldn't be normalised. The first column `n` goes to `self.rpowers` for each shell. Finally, the `self.PYexp` contains the exponent `z`. My two questions therefore are:; - should we perform any normalisation at all (including `self.normalise_shell()`) on ECP shells? To me the answer seems no...; - I am assuming the only way to tell a shell is an ECP shell from within `ShellInfo` class is if `self.rpowers` is populated. Wouldn't it be better, if `ShellInfo` received `pt=""Normalized""` when processing an ECP shell?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/937#issuecomment-376423459
https://github.com/psi4/psi4/pull/937#issuecomment-376423459:1041,Performance,perform,perform,1041,"I'm not 100% certain my ""fix"" is not just a hack - my understanding of basis sets and contractions is rather limited. The way I understand it, we're not trusting user input and are normalising all of the normal shells, using both `self.normalise_shell()` and `self.erd_normalise_shell()`. For normal shells, the inputs are the exponent `eps` and the normalisation constant `N` in: ; `psi = N * exp (-r**2 * eps)`. For ECP's, the inputs on each line aren't the exponent + normalisation, but rather they should be the three variables (`n`, `z`, `d` columns in g09 input) in the `i`th component of the potential `v(r)`:; `v(r)_i = d_i * r**(n_i) * e**(-z_i * r**2)`; The third column (`d`, if I got the above right) is stored in `self.PYcoef` and `self.PYoriginal_coef`. If this coefficient is set to zero, the whole component of the potential should be 0 - it shouldn't be normalised. The first column `n` goes to `self.rpowers` for each shell. Finally, the `self.PYexp` contains the exponent `z`. My two questions therefore are:; - should we perform any normalisation at all (including `self.normalise_shell()`) on ECP shells? To me the answer seems no...; - I am assuming the only way to tell a shell is an ECP shell from within `ShellInfo` class is if `self.rpowers` is populated. Wouldn't it be better, if `ShellInfo` received `pt=""Normalized""` when processing an ECP shell?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/937#issuecomment-376423459
https://github.com/psi4/psi4/pull/937#issuecomment-376448408:259,Usability,simpl,simply,259,"OK, so instead of messing around with the `ShellInfo`, I've decided to rather switch off the normalisation by passing `pt=""Normalized""` for ECP shells. This was already done for ECP's in the parser in `qcdb/libmintsbasissetparser.py` on lines 235-236. I have simply added a `True` flag as a 4th parameter to the `BasisSet` constructor, which indicates that the shellmap consists of ECP shells, which shouldn't be normalised. This seems more correct than the guesswork in the previous commit. As a side note, the only other case where 3 arguments `(key, mol, shellmap)` are passed into the `BasisSet.constructor` is on line 875; this could be replaced by the 4-parameter `(key, mol, shellmap, False)` syntax.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/937#issuecomment-376448408
https://github.com/psi4/psi4/pull/937#issuecomment-376511152:519,Modifiability,layers,layers,519,"I agree with you; there shouldn't be any normalisation applied to ECPs. When I put the ECP code in I wanted re-use as much of the existing basis set handling code as possible, in the spirit of the DRY principle. Unfortunately there are a few subtle differences between how Gaussian shells and ECPs should be handled; I thought I had caught them all, but I didn't get the normalisation right. Thank you very much for pointing it out and fixing it. The parsing machinery used to take several trips between Python and C++ layers, so I attempted to consolidate it all Py-side. In the process I may have left some stuff in there that's not needed, so cleanup like this is very welcome.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/937#issuecomment-376511152
https://github.com/psi4/psi4/pull/937#issuecomment-376531582:312,Availability,down,downloaded,312,"Hmm, I'm struggling to get my tests to give me a good agreement. From the [original publication](http://dx.doi.org/10.1007/s00214-005-0681-9) for the cc-pvdz-PP pseudopotentials for the Cu (and other) metals, the ionisation energy of Cu should be 165.26 kcal/mol with CCSD(T). In Gaussian 09, with the basis set downloaded from EMSL, I get an energy of 165.75 kcal/mol, which I suppose is reasonable. In Psi4, I get an energy of 166.02 kcal/mol. In case of Au ionisation energy, the difference (200.23 kcal/mol in the paper, 202.92 kcal/mol in Psi4) is more than 1%. I'm quite stumped. If anyone has any idea what's going on, please let me know.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/937#issuecomment-376531582
https://github.com/psi4/psi4/pull/937#issuecomment-376531582:224,Energy Efficiency,energy,energy,224,"Hmm, I'm struggling to get my tests to give me a good agreement. From the [original publication](http://dx.doi.org/10.1007/s00214-005-0681-9) for the cc-pvdz-PP pseudopotentials for the Cu (and other) metals, the ionisation energy of Cu should be 165.26 kcal/mol with CCSD(T). In Gaussian 09, with the basis set downloaded from EMSL, I get an energy of 165.75 kcal/mol, which I suppose is reasonable. In Psi4, I get an energy of 166.02 kcal/mol. In case of Au ionisation energy, the difference (200.23 kcal/mol in the paper, 202.92 kcal/mol in Psi4) is more than 1%. I'm quite stumped. If anyone has any idea what's going on, please let me know.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/937#issuecomment-376531582
https://github.com/psi4/psi4/pull/937#issuecomment-376531582:343,Energy Efficiency,energy,energy,343,"Hmm, I'm struggling to get my tests to give me a good agreement. From the [original publication](http://dx.doi.org/10.1007/s00214-005-0681-9) for the cc-pvdz-PP pseudopotentials for the Cu (and other) metals, the ionisation energy of Cu should be 165.26 kcal/mol with CCSD(T). In Gaussian 09, with the basis set downloaded from EMSL, I get an energy of 165.75 kcal/mol, which I suppose is reasonable. In Psi4, I get an energy of 166.02 kcal/mol. In case of Au ionisation energy, the difference (200.23 kcal/mol in the paper, 202.92 kcal/mol in Psi4) is more than 1%. I'm quite stumped. If anyone has any idea what's going on, please let me know.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/937#issuecomment-376531582
https://github.com/psi4/psi4/pull/937#issuecomment-376531582:419,Energy Efficiency,energy,energy,419,"Hmm, I'm struggling to get my tests to give me a good agreement. From the [original publication](http://dx.doi.org/10.1007/s00214-005-0681-9) for the cc-pvdz-PP pseudopotentials for the Cu (and other) metals, the ionisation energy of Cu should be 165.26 kcal/mol with CCSD(T). In Gaussian 09, with the basis set downloaded from EMSL, I get an energy of 165.75 kcal/mol, which I suppose is reasonable. In Psi4, I get an energy of 166.02 kcal/mol. In case of Au ionisation energy, the difference (200.23 kcal/mol in the paper, 202.92 kcal/mol in Psi4) is more than 1%. I'm quite stumped. If anyone has any idea what's going on, please let me know.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/937#issuecomment-376531582
https://github.com/psi4/psi4/pull/937#issuecomment-376531582:471,Energy Efficiency,energy,energy,471,"Hmm, I'm struggling to get my tests to give me a good agreement. From the [original publication](http://dx.doi.org/10.1007/s00214-005-0681-9) for the cc-pvdz-PP pseudopotentials for the Cu (and other) metals, the ionisation energy of Cu should be 165.26 kcal/mol with CCSD(T). In Gaussian 09, with the basis set downloaded from EMSL, I get an energy of 165.75 kcal/mol, which I suppose is reasonable. In Psi4, I get an energy of 166.02 kcal/mol. In case of Au ionisation energy, the difference (200.23 kcal/mol in the paper, 202.92 kcal/mol in Psi4) is more than 1%. I'm quite stumped. If anyone has any idea what's going on, please let me know.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/937#issuecomment-376531582
https://github.com/psi4/psi4/pull/937#issuecomment-376531582:30,Testability,test,tests,30,"Hmm, I'm struggling to get my tests to give me a good agreement. From the [original publication](http://dx.doi.org/10.1007/s00214-005-0681-9) for the cc-pvdz-PP pseudopotentials for the Cu (and other) metals, the ionisation energy of Cu should be 165.26 kcal/mol with CCSD(T). In Gaussian 09, with the basis set downloaded from EMSL, I get an energy of 165.75 kcal/mol, which I suppose is reasonable. In Psi4, I get an energy of 166.02 kcal/mol. In case of Au ionisation energy, the difference (200.23 kcal/mol in the paper, 202.92 kcal/mol in Psi4) is more than 1%. I'm quite stumped. If anyone has any idea what's going on, please let me know.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/937#issuecomment-376531582
https://github.com/psi4/psi4/pull/937#issuecomment-376532312:193,Testability,test,test,193,Attached gaussian inputs:; [cu_plus.txt](https://github.com/psi4/psi4/files/1852217/cu_plus.txt); [cu_0.txt](https://github.com/psi4/psi4/files/1852218/cu_0.txt). And Psi4 inputs for the above test:; [cc-pvdz-pp-gbs.txt](https://github.com/psi4/psi4/files/1852221/cc-pvdz-pp-gbs.txt); [input.txt](https://github.com/psi4/psi4/files/1852222/input.txt),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/937#issuecomment-376532312
https://github.com/psi4/psi4/pull/937#issuecomment-376533125:13,Security,access,access,13,"I don't have access to G*, so can't easily verify. Is the difference due to Psi4's use of density fitting by default?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/937#issuecomment-376533125
https://github.com/psi4/psi4/pull/937#issuecomment-376595463:384,Energy Efficiency,energy,energy,384,"As mentioned on Slack (#newdev 2018/03/27), RHF tests with Au+ and Cu+ yield the same total energies in G09 and Psi4 (8 decimals) with both CCSD(T) and HF using the cc-pvdz-PP basis sets. These basis tests both have `0.0` coefficient in the `N+1`th shell. The orbital eigenvalues match as well. Unless we need more testing, I'm satisfied with this - the discrepancy in the ionisation energy is clearly coming from the open-shell part (and likely not from the basis set).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/937#issuecomment-376595463
https://github.com/psi4/psi4/pull/937#issuecomment-376595463:48,Testability,test,tests,48,"As mentioned on Slack (#newdev 2018/03/27), RHF tests with Au+ and Cu+ yield the same total energies in G09 and Psi4 (8 decimals) with both CCSD(T) and HF using the cc-pvdz-PP basis sets. These basis tests both have `0.0` coefficient in the `N+1`th shell. The orbital eigenvalues match as well. Unless we need more testing, I'm satisfied with this - the discrepancy in the ionisation energy is clearly coming from the open-shell part (and likely not from the basis set).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/937#issuecomment-376595463
https://github.com/psi4/psi4/pull/937#issuecomment-376595463:200,Testability,test,tests,200,"As mentioned on Slack (#newdev 2018/03/27), RHF tests with Au+ and Cu+ yield the same total energies in G09 and Psi4 (8 decimals) with both CCSD(T) and HF using the cc-pvdz-PP basis sets. These basis tests both have `0.0` coefficient in the `N+1`th shell. The orbital eigenvalues match as well. Unless we need more testing, I'm satisfied with this - the discrepancy in the ionisation energy is clearly coming from the open-shell part (and likely not from the basis set).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/937#issuecomment-376595463
https://github.com/psi4/psi4/pull/937#issuecomment-376595463:315,Testability,test,testing,315,"As mentioned on Slack (#newdev 2018/03/27), RHF tests with Au+ and Cu+ yield the same total energies in G09 and Psi4 (8 decimals) with both CCSD(T) and HF using the cc-pvdz-PP basis sets. These basis tests both have `0.0` coefficient in the `N+1`th shell. The orbital eigenvalues match as well. Unless we need more testing, I'm satisfied with this - the discrepancy in the ionisation energy is clearly coming from the open-shell part (and likely not from the basis set).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/937#issuecomment-376595463
https://github.com/psi4/psi4/pull/937#issuecomment-376595463:394,Usability,clear,clearly,394,"As mentioned on Slack (#newdev 2018/03/27), RHF tests with Au+ and Cu+ yield the same total energies in G09 and Psi4 (8 decimals) with both CCSD(T) and HF using the cc-pvdz-PP basis sets. These basis tests both have `0.0` coefficient in the `N+1`th shell. The orbital eigenvalues match as well. Unless we need more testing, I'm satisfied with this - the discrepancy in the ionisation energy is clearly coming from the open-shell part (and likely not from the basis set).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/937#issuecomment-376595463
https://github.com/psi4/psi4/issues/938#issuecomment-373364950:41,Availability,error,error,41,"Thanks, I can't believe I did such basic error. Now it works.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/938#issuecomment-373364950
https://github.com/psi4/psi4/issues/939#issuecomment-373475590:12,Security,expose,expose,12,"Sure, I can expose the other GRAC terms to allow users to modify them. For SAPT(DFT) requiring GRAC I was under the impression that some sort of check is (effectively) required so that users do not skip this in the input (and thus get very poor results). Do you have an idea of a clean way to check that the user has satisfied the asymptotic correction in *some* way.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/939#issuecomment-373475590
https://github.com/psi4/psi4/issues/939#issuecomment-373638089:14,Usability,simpl,simple,14,"Hi Daniel,; A simple way would be to force the presence of the GRAC shift commands, but switch it off if the shifts are negative. Or simply allow a new option: ASYMPTOTIC-CORRECTION True | False This may be a better approach as it will allow the possibility of negative shifts should there be *some* reason to use them. By the way, the reason for my asking this is that I want to try the range-separated functionals with IP-tuning. Will the w-parameter be user-definable for a SAPT(DFT) calculation?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/939#issuecomment-373638089
https://github.com/psi4/psi4/issues/939#issuecomment-373638089:133,Usability,simpl,simply,133,"Hi Daniel,; A simple way would be to force the presence of the GRAC shift commands, but switch it off if the shifts are negative. Or simply allow a new option: ASYMPTOTIC-CORRECTION True | False This may be a better approach as it will allow the possibility of negative shifts should there be *some* reason to use them. By the way, the reason for my asking this is that I want to try the range-separated functionals with IP-tuning. Will the w-parameter be user-definable for a SAPT(DFT) calculation?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/939#issuecomment-373638089
https://github.com/psi4/psi4/issues/939#issuecomment-373730896:461,Usability,simpl,simple,461,"What if we change it so that if you ran `set SAPT_DFT_GRAC_SHIFT_A 0.0` that would satisfy the requirement? This would enforce users who want a 0 GRAC shift to be conscious of this act. We could have a `SAPT_DFT_OMEGA_A/B` and either OMEGA or GRAC must be set? For range tuning, ultimately what I would like is the ability to do this automatically (I think we have automated tuning built-in already). For advanced users we could also add the ability for you to simple give two monomer wave functions and it would compute SAPT(DFT) between the two. SAPT(DFT) is constructed internally that this is already how its called.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/939#issuecomment-373730896
https://github.com/psi4/psi4/issues/939#issuecomment-373842673:633,Usability,simpl,simply,633,"Try not to make things too automatic: self-consistent IP tuning is not always a good idea as there are functionals/systems for which no solution exists so you come close to self-consistency but never reach it. It is always good to have this as an option, but also always allow the user to override the settings. I prefer to fix the tuning as it is often nearly exactly what I need. Full self-consistency sometimes doesn't get you much more in accuracy but can take too long to achieve. . On a related note: why duplicate DFT commands/options in the SAPT(DFT) section? Would it not be better to define the density functional and then simply use the defined settings in the SAPT(DFT) calculation?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/939#issuecomment-373842673
https://github.com/psi4/psi4/issues/940#issuecomment-374186796:158,Performance,Optimiz,Optimize,158,"They will be when pyvib2 branch PR goes in. . Sent from my iPhone. > On Mar 19, 2018, at 6:10 AM, Raimondas Galvelis <notifications@github.com> wrote:; > ; > Optimize and compute vibrational frequencies of a molecule:; > ; > # test.py; > import psi4; > ; > print(psi4.__version__); > ; > psi4.geometry('H -0.4 0 0\nH 0.4 0 0'); > psi4.opt('HF/3-21G'); > _, wfn = psi4.freq('HF/3-21G', return_wfn=True); > ; > print(wfn.hessian().to_array()); > print(wfn.frequencies().to_array()); > print(wfn.normalmodes()); > The hessian matrix and frequencies are in Wafefucntion object, as expected, but the normal mode vectors are missing, i.e. wfn.normalmodes() return None.; > ; > $ python test.py ; > 1.2a1.dev781; > ; > ... skipped ...; > ; > [[ 4.13907957e-01 -1.38565530e-17 -9.84797134e-18 -4.13907957e-01; > 1.38565530e-17 9.84797134e-18]; > [-1.38565530e-17 -7.17030485e-05 5.29623161e-18 1.38565530e-17; > 7.17030485e-05 -5.29623161e-18]; > [-9.84797134e-18 5.29623161e-18 -7.17030485e-05 9.84797134e-18; > -5.29623161e-18 7.17030485e-05]; > [-4.13907957e-01 1.38565530e-17 9.84797134e-18 4.13907957e-01; > -1.38565530e-17 -9.84797134e-18]; > [ 1.38565530e-17 7.17030485e-05 -5.29623161e-18 -1.38565530e-17; > -7.17030485e-05 5.29623161e-18]; > [ 9.84797134e-18 -5.29623161e-18 7.17030485e-05 -9.84797134e-18; > 5.29623161e-18 -7.17030485e-05]]; > [4658.84858151]; > None; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/940#issuecomment-374186796
https://github.com/psi4/psi4/issues/940#issuecomment-374186796:227,Testability,test,test,227,"They will be when pyvib2 branch PR goes in. . Sent from my iPhone. > On Mar 19, 2018, at 6:10 AM, Raimondas Galvelis <notifications@github.com> wrote:; > ; > Optimize and compute vibrational frequencies of a molecule:; > ; > # test.py; > import psi4; > ; > print(psi4.__version__); > ; > psi4.geometry('H -0.4 0 0\nH 0.4 0 0'); > psi4.opt('HF/3-21G'); > _, wfn = psi4.freq('HF/3-21G', return_wfn=True); > ; > print(wfn.hessian().to_array()); > print(wfn.frequencies().to_array()); > print(wfn.normalmodes()); > The hessian matrix and frequencies are in Wafefucntion object, as expected, but the normal mode vectors are missing, i.e. wfn.normalmodes() return None.; > ; > $ python test.py ; > 1.2a1.dev781; > ; > ... skipped ...; > ; > [[ 4.13907957e-01 -1.38565530e-17 -9.84797134e-18 -4.13907957e-01; > 1.38565530e-17 9.84797134e-18]; > [-1.38565530e-17 -7.17030485e-05 5.29623161e-18 1.38565530e-17; > 7.17030485e-05 -5.29623161e-18]; > [-9.84797134e-18 5.29623161e-18 -7.17030485e-05 9.84797134e-18; > -5.29623161e-18 7.17030485e-05]; > [-4.13907957e-01 1.38565530e-17 9.84797134e-18 4.13907957e-01; > -1.38565530e-17 -9.84797134e-18]; > [ 1.38565530e-17 7.17030485e-05 -5.29623161e-18 -1.38565530e-17; > -7.17030485e-05 5.29623161e-18]; > [ 9.84797134e-18 -5.29623161e-18 7.17030485e-05 -9.84797134e-18; > 5.29623161e-18 -7.17030485e-05]]; > [4658.84858151]; > None; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/940#issuecomment-374186796
https://github.com/psi4/psi4/issues/940#issuecomment-374186796:680,Testability,test,test,680,"They will be when pyvib2 branch PR goes in. . Sent from my iPhone. > On Mar 19, 2018, at 6:10 AM, Raimondas Galvelis <notifications@github.com> wrote:; > ; > Optimize and compute vibrational frequencies of a molecule:; > ; > # test.py; > import psi4; > ; > print(psi4.__version__); > ; > psi4.geometry('H -0.4 0 0\nH 0.4 0 0'); > psi4.opt('HF/3-21G'); > _, wfn = psi4.freq('HF/3-21G', return_wfn=True); > ; > print(wfn.hessian().to_array()); > print(wfn.frequencies().to_array()); > print(wfn.normalmodes()); > The hessian matrix and frequencies are in Wafefucntion object, as expected, but the normal mode vectors are missing, i.e. wfn.normalmodes() return None.; > ; > $ python test.py ; > 1.2a1.dev781; > ; > ... skipped ...; > ; > [[ 4.13907957e-01 -1.38565530e-17 -9.84797134e-18 -4.13907957e-01; > 1.38565530e-17 9.84797134e-18]; > [-1.38565530e-17 -7.17030485e-05 5.29623161e-18 1.38565530e-17; > 7.17030485e-05 -5.29623161e-18]; > [-9.84797134e-18 5.29623161e-18 -7.17030485e-05 9.84797134e-18; > -5.29623161e-18 7.17030485e-05]; > [-4.13907957e-01 1.38565530e-17 9.84797134e-18 4.13907957e-01; > -1.38565530e-17 -9.84797134e-18]; > [ 1.38565530e-17 7.17030485e-05 -5.29623161e-18 -1.38565530e-17; > -7.17030485e-05 5.29623161e-18]; > [ 9.84797134e-18 -5.29623161e-18 7.17030485e-05 -9.84797134e-18; > 5.29623161e-18 -7.17030485e-05]]; > [4658.84858151]; > None; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/940#issuecomment-374186796
https://github.com/psi4/psi4/pull/942#issuecomment-376280951:24,Availability,ping,pinged,24,@ajmisquitta I may have pinged you incorrectly the first time. Let me know what you think of these changes and apologies for the possible double ping.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/942#issuecomment-376280951
https://github.com/psi4/psi4/pull/942#issuecomment-376280951:145,Availability,ping,ping,145,@ajmisquitta I may have pinged you incorrectly the first time. Let me know what you think of these changes and apologies for the possible double ping.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/942#issuecomment-376280951
https://github.com/psi4/psi4/pull/942#issuecomment-378368134:38,Deployability,patch,patch,38,I say review and pull this in. We can patch it up based on @ajmisquitta's comments at a later date.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/942#issuecomment-378368134
https://github.com/psi4/psi4/issues/943#issuecomment-376638034:176,Availability,down,down,176,"- Step 1. Modify the perl script to write the reference values out instead of checking them could even write them directly into input.dat with a variable name.; - Step 2. Hunt down the corresponding psivars and add the `compare_value` statements.; - Step 3. The ones that don't work in 2 point at missing psivars which need to be added. 1.) should be somewhat easy but some perl knowledge required. 2) not too difficult either. 3) will take the most time, finding the code in `psi4/src/psi4/cc*` that needs to be modified will take the most time. . I am not completely sure I get what you want to do with your point (3) do you want to just lump `compare_values` together in a function that takes a `wfn` and `ref_vals` dict and does all the `compare_values` needed rather than putting lots of them in the input files?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/943#issuecomment-376638034
https://github.com/psi4/psi4/issues/943#issuecomment-376638034:145,Modifiability,variab,variable,145,"- Step 1. Modify the perl script to write the reference values out instead of checking them could even write them directly into input.dat with a variable name.; - Step 2. Hunt down the corresponding psivars and add the `compare_value` statements.; - Step 3. The ones that don't work in 2 point at missing psivars which need to be added. 1.) should be somewhat easy but some perl knowledge required. 2) not too difficult either. 3) will take the most time, finding the code in `psi4/src/psi4/cc*` that needs to be modified will take the most time. . I am not completely sure I get what you want to do with your point (3) do you want to just lump `compare_values` together in a function that takes a `wfn` and `ref_vals` dict and does all the `compare_values` needed rather than putting lots of them in the input files?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/943#issuecomment-376638034
https://github.com/psi4/psi4/issues/943#issuecomment-376645348:284,Testability,test,test,284,"@amjames Yes, having a coupled-cluster-check-all fn that takes `wfn` and `ref_vals` was just an idea to preserve the comprehensiveness of the perl script. If I was writing this from scratch I'd probably put lots of `compare_values` in the input files for independence. But with 50 cc test cases I fear ppl will lose steam if they checked everything the perl script checks line by line.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/943#issuecomment-376645348
https://github.com/psi4/psi4/issues/943#issuecomment-376673025:293,Availability,ping,ping,293,"Yea, I see what you mean. The perl script is very comprehensive and it detects the type of calculation being run, changing the values that will be checked as needed. I am able to offer navigational/general help on this is someone volunteers B.TW. so if anyone is interested post here/slack me/ping me/send a smoke signal.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/943#issuecomment-376673025
https://github.com/psi4/psi4/issues/943#issuecomment-376673025:71,Safety,detect,detects,71,"Yea, I see what you mean. The perl script is very comprehensive and it detects the type of calculation being run, changing the values that will be checked as needed. I am able to offer navigational/general help on this is someone volunteers B.TW. so if anyone is interested post here/slack me/ping me/send a smoke signal.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/943#issuecomment-376673025
https://github.com/psi4/psi4/issues/943#issuecomment-376674410:144,Availability,down,down,144,"Recording all the reference values should cover the type-of-calc-being-run logic, as that won't be changing for a given infile. So it should be down to if-present-in-`ref_vals`-then-compare being sufficient. And thanks, @amjames, getting some cc* module psivars onto wfn, as opposed to `P::e` can be tricky, as I learned from cctriples.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/943#issuecomment-376674410
https://github.com/psi4/psi4/issues/943#issuecomment-376674410:75,Testability,log,logic,75,"Recording all the reference values should cover the type-of-calc-being-run logic, as that won't be changing for a given infile. So it should be down to if-present-in-`ref_vals`-then-compare being sufficient. And thanks, @amjames, getting some cc* module psivars onto wfn, as opposed to `P::e` can be tricky, as I learned from cctriples.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/943#issuecomment-376674410
https://github.com/psi4/psi4/issues/943#issuecomment-376674410:313,Usability,learn,learned,313,"Recording all the reference values should cover the type-of-calc-being-run logic, as that won't be changing for a given infile. So it should be down to if-present-in-`ref_vals`-then-compare being sufficient. And thanks, @amjames, getting some cc* module psivars onto wfn, as opposed to `P::e` can be tricky, as I learned from cctriples.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/943#issuecomment-376674410
https://github.com/psi4/psi4/issues/943#issuecomment-376675608:69,Deployability,update,updated,69,"Yes, IIRC we need to make sure that `CCEnergyWavefunction`'s vars is updated *not* `ref_wfn`'s ? but just in energy modules, lambda/density/eom/response do not have proper wfns so they need to update whatever wfn they were passed [*Warning: It might not have the same name in all of those modules*]",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/943#issuecomment-376675608
https://github.com/psi4/psi4/issues/943#issuecomment-376675608:193,Deployability,update,update,193,"Yes, IIRC we need to make sure that `CCEnergyWavefunction`'s vars is updated *not* `ref_wfn`'s ? but just in energy modules, lambda/density/eom/response do not have proper wfns so they need to update whatever wfn they were passed [*Warning: It might not have the same name in all of those modules*]",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/943#issuecomment-376675608
https://github.com/psi4/psi4/issues/943#issuecomment-376675608:109,Energy Efficiency,energy,energy,109,"Yes, IIRC we need to make sure that `CCEnergyWavefunction`'s vars is updated *not* `ref_wfn`'s ? but just in energy modules, lambda/density/eom/response do not have proper wfns so they need to update whatever wfn they were passed [*Warning: It might not have the same name in all of those modules*]",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/943#issuecomment-376675608
https://github.com/psi4/psi4/issues/943#issuecomment-1038488470:60,Security,sanitiz,sanitizing,60,"I'll be taking this one myself, for the sake of `ccdensity` sanitizing. Alas, I already have a mug.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/943#issuecomment-1038488470
https://github.com/psi4/psi4/issues/944#issuecomment-394477556:61,Deployability,update,updates,61,"I forget the exact PR, but this was fixed in one of the JSON updates.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/944#issuecomment-394477556
https://github.com/psi4/psi4/pull/945#issuecomment-378478967:27,Availability,error,errors,27,"@bwb314, @PeterKraus, were errors for DSD-BLYP and DSD-PBE-PBE86 to be expected? I didn't see any comments to that respect but there's been a lot of edits to DFT and its testing of late. Thanks for any clues.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/945#issuecomment-378478967
https://github.com/psi4/psi4/pull/945#issuecomment-378478967:170,Testability,test,testing,170,"@bwb314, @PeterKraus, were errors for DSD-BLYP and DSD-PBE-PBE86 to be expected? I didn't see any comments to that respect but there's been a lot of edits to DFT and its testing of late. Thanks for any clues.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/945#issuecomment-378478967
https://github.com/psi4/psi4/pull/945#issuecomment-378480164:173,Modifiability,parameteriz,parameterized,173,"All DSD functionals, with the exception of the CORE-DSD-BLYP functional, were changed to the version from the 2013 paper. The versions without dispersion correction are now parameterized differently from the D2 and D3BJ versions. They will differ from previous version of Psi4, however our DSD-PBEPBE-D3BJ was checked against G16 and with frozen core on it passed.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/945#issuecomment-378480164
https://github.com/psi4/psi4/pull/945#issuecomment-378480491:69,Testability,test,test,69,"Ok, so there's a likely reason DSDs would have changed. Did the full test suite pass for dict_funcs on your local branch?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/945#issuecomment-378480491
https://github.com/psi4/psi4/pull/947#issuecomment-379064790:203,Usability,guid,guideline,203,"You might consider using the new Python formatting syntax, _e.g._ `core.print_out( ""\n Psi4 stopped on: {}\n"".format(time_string))` But that's a style issue on which I don't think there's a well-defined guideline as of yet.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/947#issuecomment-379064790
https://github.com/psi4/psi4/issues/948#issuecomment-379332937:224,Availability,error,error,224,"Well, good news is that the functional and the psi version are irrelevant. It's purely a particular geometry that you hit that's confusing the symmetry detection. And only when not shifted to center-of-mass. Never seen that error before, so will definitely investigate. Below is minimal example. BTW, `1.2a1.dev600` is still 300-400 commits behind master, due to my conda negligence. If I can get #946 in, I'll have a minimal _new_ conda build on the `-c psi4/label/agg` subchannel that actually uses the `-ng`/gcc72 compilers. ```; molecule MOL {; 1 1; nocom # toggle for disaster; C 0.000000000445 -0.000000002634 -0.176009819382; C 0.017055492504 1.213674219316 0.519005187104; C 0.010905297833 1.207533611621 1.904879649273; C 0.000000001371 -0.000000001015 2.595491320593; C -0.010905296809 -1.207533610178 1.904879653967; C -0.017055492743 -1.213674218642 0.519005186244; C 0.000000000685 -0.000000001418 -1.643506768663; H -0.011074063554 2.157895826255 -0.014254560550; H 0.006037200834 2.144998257605 2.447030976059; H 0.000000002397 0.000000004130 3.679031777447; H -0.006037200687 -2.144998259786 2.447030974663; H 0.011074059226 -2.157895829902 -0.014254553860; N -0.738518375832 -0.879256115198 -2.298061241871; N 0.738518376065 0.879256115454 -2.298061238276; H 0.714314308196 0.973365270982 -3.302615035270; H 1.398512102453 1.450008704958 -1.792988230964; H -1.398512105220 -1.450008704099 -1.792988237236; H -0.714314307164 -0.973365267449 -3.302615039280. }. energy = energy('B3lyp/cc-pvdz'); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/948#issuecomment-379332937
https://github.com/psi4/psi4/issues/948#issuecomment-379332937:562,Deployability,toggle,toggle,562,"Well, good news is that the functional and the psi version are irrelevant. It's purely a particular geometry that you hit that's confusing the symmetry detection. And only when not shifted to center-of-mass. Never seen that error before, so will definitely investigate. Below is minimal example. BTW, `1.2a1.dev600` is still 300-400 commits behind master, due to my conda negligence. If I can get #946 in, I'll have a minimal _new_ conda build on the `-c psi4/label/agg` subchannel that actually uses the `-ng`/gcc72 compilers. ```; molecule MOL {; 1 1; nocom # toggle for disaster; C 0.000000000445 -0.000000002634 -0.176009819382; C 0.017055492504 1.213674219316 0.519005187104; C 0.010905297833 1.207533611621 1.904879649273; C 0.000000001371 -0.000000001015 2.595491320593; C -0.010905296809 -1.207533610178 1.904879653967; C -0.017055492743 -1.213674218642 0.519005186244; C 0.000000000685 -0.000000001418 -1.643506768663; H -0.011074063554 2.157895826255 -0.014254560550; H 0.006037200834 2.144998257605 2.447030976059; H 0.000000002397 0.000000004130 3.679031777447; H -0.006037200687 -2.144998259786 2.447030974663; H 0.011074059226 -2.157895829902 -0.014254553860; N -0.738518375832 -0.879256115198 -2.298061241871; N 0.738518376065 0.879256115454 -2.298061238276; H 0.714314308196 0.973365270982 -3.302615035270; H 1.398512102453 1.450008704958 -1.792988230964; H -1.398512105220 -1.450008704099 -1.792988237236; H -0.714314307164 -0.973365267449 -3.302615039280. }. energy = energy('B3lyp/cc-pvdz'); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/948#issuecomment-379332937
https://github.com/psi4/psi4/issues/948#issuecomment-379332937:1477,Energy Efficiency,energy,energy,1477,"Well, good news is that the functional and the psi version are irrelevant. It's purely a particular geometry that you hit that's confusing the symmetry detection. And only when not shifted to center-of-mass. Never seen that error before, so will definitely investigate. Below is minimal example. BTW, `1.2a1.dev600` is still 300-400 commits behind master, due to my conda negligence. If I can get #946 in, I'll have a minimal _new_ conda build on the `-c psi4/label/agg` subchannel that actually uses the `-ng`/gcc72 compilers. ```; molecule MOL {; 1 1; nocom # toggle for disaster; C 0.000000000445 -0.000000002634 -0.176009819382; C 0.017055492504 1.213674219316 0.519005187104; C 0.010905297833 1.207533611621 1.904879649273; C 0.000000001371 -0.000000001015 2.595491320593; C -0.010905296809 -1.207533610178 1.904879653967; C -0.017055492743 -1.213674218642 0.519005186244; C 0.000000000685 -0.000000001418 -1.643506768663; H -0.011074063554 2.157895826255 -0.014254560550; H 0.006037200834 2.144998257605 2.447030976059; H 0.000000002397 0.000000004130 3.679031777447; H -0.006037200687 -2.144998259786 2.447030974663; H 0.011074059226 -2.157895829902 -0.014254553860; N -0.738518375832 -0.879256115198 -2.298061241871; N 0.738518376065 0.879256115454 -2.298061238276; H 0.714314308196 0.973365270982 -3.302615035270; H 1.398512102453 1.450008704958 -1.792988230964; H -1.398512105220 -1.450008704099 -1.792988237236; H -0.714314307164 -0.973365267449 -3.302615039280. }. energy = energy('B3lyp/cc-pvdz'); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/948#issuecomment-379332937
https://github.com/psi4/psi4/issues/948#issuecomment-379332937:1486,Energy Efficiency,energy,energy,1486,"Well, good news is that the functional and the psi version are irrelevant. It's purely a particular geometry that you hit that's confusing the symmetry detection. And only when not shifted to center-of-mass. Never seen that error before, so will definitely investigate. Below is minimal example. BTW, `1.2a1.dev600` is still 300-400 commits behind master, due to my conda negligence. If I can get #946 in, I'll have a minimal _new_ conda build on the `-c psi4/label/agg` subchannel that actually uses the `-ng`/gcc72 compilers. ```; molecule MOL {; 1 1; nocom # toggle for disaster; C 0.000000000445 -0.000000002634 -0.176009819382; C 0.017055492504 1.213674219316 0.519005187104; C 0.010905297833 1.207533611621 1.904879649273; C 0.000000001371 -0.000000001015 2.595491320593; C -0.010905296809 -1.207533610178 1.904879653967; C -0.017055492743 -1.213674218642 0.519005186244; C 0.000000000685 -0.000000001418 -1.643506768663; H -0.011074063554 2.157895826255 -0.014254560550; H 0.006037200834 2.144998257605 2.447030976059; H 0.000000002397 0.000000004130 3.679031777447; H -0.006037200687 -2.144998259786 2.447030974663; H 0.011074059226 -2.157895829902 -0.014254553860; N -0.738518375832 -0.879256115198 -2.298061241871; N 0.738518376065 0.879256115454 -2.298061238276; H 0.714314308196 0.973365270982 -3.302615035270; H 1.398512102453 1.450008704958 -1.792988230964; H -1.398512105220 -1.450008704099 -1.792988237236; H -0.714314307164 -0.973365267449 -3.302615039280. }. energy = energy('B3lyp/cc-pvdz'); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/948#issuecomment-379332937
https://github.com/psi4/psi4/issues/948#issuecomment-379332937:152,Safety,detect,detection,152,"Well, good news is that the functional and the psi version are irrelevant. It's purely a particular geometry that you hit that's confusing the symmetry detection. And only when not shifted to center-of-mass. Never seen that error before, so will definitely investigate. Below is minimal example. BTW, `1.2a1.dev600` is still 300-400 commits behind master, due to my conda negligence. If I can get #946 in, I'll have a minimal _new_ conda build on the `-c psi4/label/agg` subchannel that actually uses the `-ng`/gcc72 compilers. ```; molecule MOL {; 1 1; nocom # toggle for disaster; C 0.000000000445 -0.000000002634 -0.176009819382; C 0.017055492504 1.213674219316 0.519005187104; C 0.010905297833 1.207533611621 1.904879649273; C 0.000000001371 -0.000000001015 2.595491320593; C -0.010905296809 -1.207533610178 1.904879653967; C -0.017055492743 -1.213674218642 0.519005186244; C 0.000000000685 -0.000000001418 -1.643506768663; H -0.011074063554 2.157895826255 -0.014254560550; H 0.006037200834 2.144998257605 2.447030976059; H 0.000000002397 0.000000004130 3.679031777447; H -0.006037200687 -2.144998259786 2.447030974663; H 0.011074059226 -2.157895829902 -0.014254553860; N -0.738518375832 -0.879256115198 -2.298061241871; N 0.738518376065 0.879256115454 -2.298061238276; H 0.714314308196 0.973365270982 -3.302615035270; H 1.398512102453 1.450008704958 -1.792988230964; H -1.398512105220 -1.450008704099 -1.792988237236; H -0.714314307164 -0.973365267449 -3.302615039280. }. energy = energy('B3lyp/cc-pvdz'); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/948#issuecomment-379332937
https://github.com/psi4/psi4/issues/948#issuecomment-380139496:35,Availability,error,error,35,"Oh wow, I haven't experienced this error before. It detected the xz- and yz- mirror plane and nothing else. It should probably gracefully report the issue and then find a point group that best matches it. Even though you told Psi4 to use C1 symmetry it still attempts to detect the highest point group for reporting purposes. I'll see what I can do to fix this.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/948#issuecomment-380139496
https://github.com/psi4/psi4/issues/948#issuecomment-380139496:52,Safety,detect,detected,52,"Oh wow, I haven't experienced this error before. It detected the xz- and yz- mirror plane and nothing else. It should probably gracefully report the issue and then find a point group that best matches it. Even though you told Psi4 to use C1 symmetry it still attempts to detect the highest point group for reporting purposes. I'll see what I can do to fix this.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/948#issuecomment-380139496
https://github.com/psi4/psi4/issues/948#issuecomment-380139496:271,Safety,detect,detect,271,"Oh wow, I haven't experienced this error before. It detected the xz- and yz- mirror plane and nothing else. It should probably gracefully report the issue and then find a point group that best matches it. Even though you told Psi4 to use C1 symmetry it still attempts to detect the highest point group for reporting purposes. I'll see what I can do to fix this.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/948#issuecomment-380139496
https://github.com/psi4/psi4/issues/948#issuecomment-380148707:21,Usability,feedback,feedback,21,"Thanks a lot for the feedback!. I guess that for now I'll micro-wiggle around my initial coordinates a bit and that should fix it, right?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/948#issuecomment-380148707
https://github.com/psi4/psi4/issues/948#issuecomment-380151298:109,Availability,error,error,109,"It hits the troublesome geometry a couple optimization iterations in, so not guaranteed. But given that this error hasn't popped up for 10 years, micro-wiggle is a good bet. btw, `conda install psi4 -c psi4/label/agg` will get you a working `-ng`-compiler package at the moment. Though that's my sandbox channel and so the latest package mayn't always be working.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/948#issuecomment-380151298
https://github.com/psi4/psi4/issues/948#issuecomment-380151298:186,Deployability,install,install,186,"It hits the troublesome geometry a couple optimization iterations in, so not guaranteed. But given that this error hasn't popped up for 10 years, micro-wiggle is a good bet. btw, `conda install psi4 -c psi4/label/agg` will get you a working `-ng`-compiler package at the moment. Though that's my sandbox channel and so the latest package mayn't always be working.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/948#issuecomment-380151298
https://github.com/psi4/psi4/issues/948#issuecomment-380151298:296,Modifiability,sandbox,sandbox,296,"It hits the troublesome geometry a couple optimization iterations in, so not guaranteed. But given that this error hasn't popped up for 10 years, micro-wiggle is a good bet. btw, `conda install psi4 -c psi4/label/agg` will get you a working `-ng`-compiler package at the moment. Though that's my sandbox channel and so the latest package mayn't always be working.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/948#issuecomment-380151298
https://github.com/psi4/psi4/issues/948#issuecomment-380151298:42,Performance,optimiz,optimization,42,"It hits the troublesome geometry a couple optimization iterations in, so not guaranteed. But given that this error hasn't popped up for 10 years, micro-wiggle is a good bet. btw, `conda install psi4 -c psi4/label/agg` will get you a working `-ng`-compiler package at the moment. Though that's my sandbox channel and so the latest package mayn't always be working.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/948#issuecomment-380151298
https://github.com/psi4/psi4/issues/948#issuecomment-380151298:296,Testability,sandbox,sandbox,296,"It hits the troublesome geometry a couple optimization iterations in, so not guaranteed. But given that this error hasn't popped up for 10 years, micro-wiggle is a good bet. btw, `conda install psi4 -c psi4/label/agg` will get you a working `-ng`-compiler package at the moment. Though that's my sandbox channel and so the latest package mayn't always be working.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/948#issuecomment-380151298
https://github.com/psi4/psi4/issues/948#issuecomment-442801726:59,Deployability,release,released,59,"HI @loriab,. I'm still having this issue with psi 1.2 (the released, not the dev one). It's quite erratic - sometimes it works, sometimes it doesn't.; I was trying to do some reproducible tests, but I couldn't in the end. I suspect the size of the path to the file is somehow relevant, but I really couldn't prove it with those tests",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/948#issuecomment-442801726
https://github.com/psi4/psi4/issues/948#issuecomment-442801726:188,Testability,test,tests,188,"HI @loriab,. I'm still having this issue with psi 1.2 (the released, not the dev one). It's quite erratic - sometimes it works, sometimes it doesn't.; I was trying to do some reproducible tests, but I couldn't in the end. I suspect the size of the path to the file is somehow relevant, but I really couldn't prove it with those tests",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/948#issuecomment-442801726
https://github.com/psi4/psi4/issues/948#issuecomment-442801726:328,Testability,test,tests,328,"HI @loriab,. I'm still having this issue with psi 1.2 (the released, not the dev one). It's quite erratic - sometimes it works, sometimes it doesn't.; I was trying to do some reproducible tests, but I couldn't in the end. I suspect the size of the path to the file is somehow relevant, but I really couldn't prove it with those tests",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/948#issuecomment-442801726
https://github.com/psi4/psi4/issues/948#issuecomment-442804174:161,Energy Efficiency,energy,energy,161,"Is the ""it"" you're trying the original input file you posted, or the one that Lori posted?. Your input file may or may not demonstrate the problem. Noise in the energy single points leads to noise in the computed gradient leads to noise in the optimization step leads to noise in whether or not you get a problematic geometry. Lori's input file should reproduce the bug 100% of the time. I've been exploring Psi's symmetry handling for an unrelated issue, and it looks like Psi's symmetry detection assumes the symmetry operations can be oriented along the x-, y-, z- axes. I'm not surprised to see problems with symmetry detection if you don't let Psi center-of-mass-adjust the molecule. The symmetry elements would need to be translated in space.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/948#issuecomment-442804174
https://github.com/psi4/psi4/issues/948#issuecomment-442804174:244,Performance,optimiz,optimization,244,"Is the ""it"" you're trying the original input file you posted, or the one that Lori posted?. Your input file may or may not demonstrate the problem. Noise in the energy single points leads to noise in the computed gradient leads to noise in the optimization step leads to noise in whether or not you get a problematic geometry. Lori's input file should reproduce the bug 100% of the time. I've been exploring Psi's symmetry handling for an unrelated issue, and it looks like Psi's symmetry detection assumes the symmetry operations can be oriented along the x-, y-, z- axes. I'm not surprised to see problems with symmetry detection if you don't let Psi center-of-mass-adjust the molecule. The symmetry elements would need to be translated in space.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/948#issuecomment-442804174
https://github.com/psi4/psi4/issues/948#issuecomment-442804174:489,Safety,detect,detection,489,"Is the ""it"" you're trying the original input file you posted, or the one that Lori posted?. Your input file may or may not demonstrate the problem. Noise in the energy single points leads to noise in the computed gradient leads to noise in the optimization step leads to noise in whether or not you get a problematic geometry. Lori's input file should reproduce the bug 100% of the time. I've been exploring Psi's symmetry handling for an unrelated issue, and it looks like Psi's symmetry detection assumes the symmetry operations can be oriented along the x-, y-, z- axes. I'm not surprised to see problems with symmetry detection if you don't let Psi center-of-mass-adjust the molecule. The symmetry elements would need to be translated in space.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/948#issuecomment-442804174
https://github.com/psi4/psi4/issues/948#issuecomment-442804174:622,Safety,detect,detection,622,"Is the ""it"" you're trying the original input file you posted, or the one that Lori posted?. Your input file may or may not demonstrate the problem. Noise in the energy single points leads to noise in the computed gradient leads to noise in the optimization step leads to noise in whether or not you get a problematic geometry. Lori's input file should reproduce the bug 100% of the time. I've been exploring Psi's symmetry handling for an unrelated issue, and it looks like Psi's symmetry detection assumes the symmetry operations can be oriented along the x-, y-, z- axes. I'm not surprised to see problems with symmetry detection if you don't let Psi center-of-mass-adjust the molecule. The symmetry elements would need to be translated in space.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/948#issuecomment-442804174
https://github.com/psi4/psi4/issues/948#issuecomment-442904288:80,Availability,error,error,80,"I apologize, maybe I'm fiddling with something different that leads to the same error message. Perhaps it's better to keep the 100% reproducible case. My point was that it was still happening, even with psi 1.2 non-dev.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/948#issuecomment-442904288
https://github.com/psi4/psi4/issues/948#issuecomment-442904288:86,Integrability,message,message,86,"I apologize, maybe I'm fiddling with something different that leads to the same error message. Perhaps it's better to keep the 100% reproducible case. My point was that it was still happening, even with psi 1.2 non-dev.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/948#issuecomment-442904288
https://github.com/psi4/psi4/issues/948#issuecomment-948069284:378,Performance,optimiz,optimize,378,"@fevangelista reports another variation. `Weird symmetry issue (Unrecognized point group bits: 118)`; ```; import psi4; psi4.geometry(""""""; C 0.0000000338 -0.0000000615 0.0000000000; H 0.5543428106 0.3093570276 0.8977720468; H 0.5543428106 0.3093570276 -0.8977720468; H -0.9918391174 0.4746024041 0.0000000000; H -0.1168469058 -1.0933157267 0.0000000000; symmetry c1; """"""); psi4.optimize('scf/def2-SVP'); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/948#issuecomment-948069284
https://github.com/psi4/psi4/issues/948#issuecomment-1315662300:32,Availability,error,error,32,Here is another example of this error. ```memory 2 GB; molecule {; 8 0.0000079789 0.0000000002 3.3734612294; 1 -0.7693027984 -0.0000000004 3.9669401984; 1 0.7691761670 -0.0000000031 3.9671249871; }. energy('pbe0/aug-cc-pVDZ'); ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/948#issuecomment-1315662300
https://github.com/psi4/psi4/issues/948#issuecomment-1315662300:199,Energy Efficiency,energy,energy,199,Here is another example of this error. ```memory 2 GB; molecule {; 8 0.0000079789 0.0000000002 3.3734612294; 1 -0.7693027984 -0.0000000004 3.9669401984; 1 0.7691761670 -0.0000000031 3.9671249871; }. energy('pbe0/aug-cc-pVDZ'); ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/948#issuecomment-1315662300
https://github.com/psi4/psi4/pull/949#issuecomment-379446318:79,Energy Efficiency,energy,energy,79,"Hmm, there seems to be an issue with temporary files being left behind in the `energy` and `gradient` calls if they're not routed through the `cbs_gufunc` routines. If I call `clean()` in between the failing tests [like so for `cbs-xtpl-energy`](https://github.com/psi4/psi4/files/1886155/cbs-xtpl-energy-mod.txt), the test passes fine. `_cbs_gufunc()` calls `clean()` for single calls here:; https://github.com/psi4/psi4/blob/c1bb2fef750fc7a214fd873f8a7c095780017bf9/psi4/driver/driver_cbs.py#L1571-L1580",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379446318
https://github.com/psi4/psi4/pull/949#issuecomment-379446318:237,Energy Efficiency,energy,energy,237,"Hmm, there seems to be an issue with temporary files being left behind in the `energy` and `gradient` calls if they're not routed through the `cbs_gufunc` routines. If I call `clean()` in between the failing tests [like so for `cbs-xtpl-energy`](https://github.com/psi4/psi4/files/1886155/cbs-xtpl-energy-mod.txt), the test passes fine. `_cbs_gufunc()` calls `clean()` for single calls here:; https://github.com/psi4/psi4/blob/c1bb2fef750fc7a214fd873f8a7c095780017bf9/psi4/driver/driver_cbs.py#L1571-L1580",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379446318
https://github.com/psi4/psi4/pull/949#issuecomment-379446318:298,Energy Efficiency,energy,energy-mod,298,"Hmm, there seems to be an issue with temporary files being left behind in the `energy` and `gradient` calls if they're not routed through the `cbs_gufunc` routines. If I call `clean()` in between the failing tests [like so for `cbs-xtpl-energy`](https://github.com/psi4/psi4/files/1886155/cbs-xtpl-energy-mod.txt), the test passes fine. `_cbs_gufunc()` calls `clean()` for single calls here:; https://github.com/psi4/psi4/blob/c1bb2fef750fc7a214fd873f8a7c095780017bf9/psi4/driver/driver_cbs.py#L1571-L1580",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379446318
https://github.com/psi4/psi4/pull/949#issuecomment-379446318:123,Integrability,rout,routed,123,"Hmm, there seems to be an issue with temporary files being left behind in the `energy` and `gradient` calls if they're not routed through the `cbs_gufunc` routines. If I call `clean()` in between the failing tests [like so for `cbs-xtpl-energy`](https://github.com/psi4/psi4/files/1886155/cbs-xtpl-energy-mod.txt), the test passes fine. `_cbs_gufunc()` calls `clean()` for single calls here:; https://github.com/psi4/psi4/blob/c1bb2fef750fc7a214fd873f8a7c095780017bf9/psi4/driver/driver_cbs.py#L1571-L1580",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379446318
https://github.com/psi4/psi4/pull/949#issuecomment-379446318:155,Integrability,rout,routines,155,"Hmm, there seems to be an issue with temporary files being left behind in the `energy` and `gradient` calls if they're not routed through the `cbs_gufunc` routines. If I call `clean()` in between the failing tests [like so for `cbs-xtpl-energy`](https://github.com/psi4/psi4/files/1886155/cbs-xtpl-energy-mod.txt), the test passes fine. `_cbs_gufunc()` calls `clean()` for single calls here:; https://github.com/psi4/psi4/blob/c1bb2fef750fc7a214fd873f8a7c095780017bf9/psi4/driver/driver_cbs.py#L1571-L1580",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379446318
https://github.com/psi4/psi4/pull/949#issuecomment-379446318:208,Testability,test,tests,208,"Hmm, there seems to be an issue with temporary files being left behind in the `energy` and `gradient` calls if they're not routed through the `cbs_gufunc` routines. If I call `clean()` in between the failing tests [like so for `cbs-xtpl-energy`](https://github.com/psi4/psi4/files/1886155/cbs-xtpl-energy-mod.txt), the test passes fine. `_cbs_gufunc()` calls `clean()` for single calls here:; https://github.com/psi4/psi4/blob/c1bb2fef750fc7a214fd873f8a7c095780017bf9/psi4/driver/driver_cbs.py#L1571-L1580",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379446318
https://github.com/psi4/psi4/pull/949#issuecomment-379446318:319,Testability,test,test,319,"Hmm, there seems to be an issue with temporary files being left behind in the `energy` and `gradient` calls if they're not routed through the `cbs_gufunc` routines. If I call `clean()` in between the failing tests [like so for `cbs-xtpl-energy`](https://github.com/psi4/psi4/files/1886155/cbs-xtpl-energy-mod.txt), the test passes fine. `_cbs_gufunc()` calls `clean()` for single calls here:; https://github.com/psi4/psi4/blob/c1bb2fef750fc7a214fd873f8a7c095780017bf9/psi4/driver/driver_cbs.py#L1571-L1580",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379446318
https://github.com/psi4/psi4/pull/949#issuecomment-379449226:115,Testability,test,test,115,"There are some issues with temporary files sticking around. In the current version, if I do (excerpt from `props4` test):; ```; E, wfn = prop('scf/aug-cc-pvdz', properties=[""GRID_ESP"", ""GRID_FIELD""], return_wfn=True); E, wfn = prop('scf/cc-pvdz', properties=[""GRID_ESP"", ""GRID_FIELD""], return_wfn=True); ```; the code works fine, but when the bases are very different:; ```; E, wfn = prop('scf/sto-3g', properties=[""GRID_ESP"", ""GRID_FIELD""], return_wfn=True); E, wfn = prop('scf/cc-pvdz', properties=[""GRID_ESP"", ""GRID_FIELD""], return_wfn=True); ```; I have to call clean() in between them.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379449226
https://github.com/psi4/psi4/pull/949#issuecomment-379476694:112,Availability,error,error,112,"The basis sets are different in both examples? I wonder why this is exclusively for prop, can you post the full error, it would be good to track down the extra temps.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379476694
https://github.com/psi4/psi4/pull/949#issuecomment-379476694:145,Availability,down,down,145,"The basis sets are different in both examples? I wonder why this is exclusively for prop, can you post the full error, it would be good to track down the extra temps.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379476694
https://github.com/psi4/psi4/pull/949#issuecomment-379562043:147,Energy Efficiency,energy,energy,147,"OK, then I suggest that for all cases where we're switching basis sets, we should do a `clean()` - it's done in the CBS routine which is used for `energy()` and `gradient()` (as the CBS routines can handle ""method/basis"" syntax), we might as well do it for `properties()`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379562043
https://github.com/psi4/psi4/pull/949#issuecomment-379562043:120,Integrability,rout,routine,120,"OK, then I suggest that for all cases where we're switching basis sets, we should do a `clean()` - it's done in the CBS routine which is used for `energy()` and `gradient()` (as the CBS routines can handle ""method/basis"" syntax), we might as well do it for `properties()`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379562043
https://github.com/psi4/psi4/pull/949#issuecomment-379562043:186,Integrability,rout,routines,186,"OK, then I suggest that for all cases where we're switching basis sets, we should do a `clean()` - it's done in the CBS routine which is used for `energy()` and `gradient()` (as the CBS routines can handle ""method/basis"" syntax), we might as well do it for `properties()`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379562043
https://github.com/psi4/psi4/pull/949#issuecomment-379562840:303,Energy Efficiency,energy,energy,303,"Wondering if it mightn't be better to just continue routing everything with a `/` to `driver_cbs._cbs_gufunc` only now with an extra kwarg `cbs_allowed=True` that is false for `def properties()`. I worry about not breaking (or complicating) recursive driver cases (where cbs and nbody function re-enter energy, hessian, properties etc. after being broken into smaller pieces (like `mp2/cc-pv[dt]z` --> `mp2/cc-pvdz`)).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379562840
https://github.com/psi4/psi4/pull/949#issuecomment-379562840:52,Integrability,rout,routing,52,"Wondering if it mightn't be better to just continue routing everything with a `/` to `driver_cbs._cbs_gufunc` only now with an extra kwarg `cbs_allowed=True` that is false for `def properties()`. I worry about not breaking (or complicating) recursive driver cases (where cbs and nbody function re-enter energy, hessian, properties etc. after being broken into smaller pieces (like `mp2/cc-pv[dt]z` --> `mp2/cc-pvdz`)).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379562840
https://github.com/psi4/psi4/pull/949#issuecomment-379563062:28,Usability,simpl,simple,28,"Well, that's an obvious and simple solution I should've thought about...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379563062
https://github.com/psi4/psi4/pull/949#issuecomment-379576694:50,Testability,test,test,50,"@dgasmith, @loriab : provided the `cbs-xtpl-freq` test passes (it does on my PC), this should be good to go from my PoV. Should I run a full test suite on this?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379576694
https://github.com/psi4/psi4/pull/949#issuecomment-379576694:141,Testability,test,test,141,"@dgasmith, @loriab : provided the `cbs-xtpl-freq` test passes (it does on my PC), this should be good to go from my PoV. Should I run a full test suite on this?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379576694
https://github.com/psi4/psi4/pull/949#issuecomment-379576875:44,Testability,test,tests,44,So https://github.com/psi4/psi4/blob/master/tests/cbs-xtpl-freq/input.dat#L22 is properly catching the `dertype=1` again and doing Hess by findif of Grad?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379576875
https://github.com/psi4/psi4/pull/949#issuecomment-379658445:67,Testability,test,test,67,"I've modified the regex as per your comments in #934, the attached test file and outputs show that all possible combinations (that at least I could think of) pass fine. [output.txt](https://github.com/psi4/psi4/files/1888795/output.txt); [input.txt](https://github.com/psi4/psi4/files/1888796/input.txt)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379658445
https://github.com/psi4/psi4/pull/949#issuecomment-379675367:176,Safety,Timeout,Timeout,176,@loriab I'm confused about the test results. The ctest returns:; ```; The following tests FAILED:; 	184 - fcidump (Failed); 	359 - dft-custom-dhdf (Failed); 	363 - dft-cation (Timeout); 	364 - dft-water-dimer (Timeout); 	384 - chemps2-caspt2-n2 (Failed); ```; where the `dft-` and `fcidump` tests failing are expected as your PR that fixes them is not yet pulled in. The `chemps2/caspt-n2` test passes when I run it manually and passed in the test log file (see attached); [testresults.log](https://github.com/psi4/psi4/files/1889030/testresults.log),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379675367
https://github.com/psi4/psi4/pull/949#issuecomment-379675367:210,Safety,Timeout,Timeout,210,@loriab I'm confused about the test results. The ctest returns:; ```; The following tests FAILED:; 	184 - fcidump (Failed); 	359 - dft-custom-dhdf (Failed); 	363 - dft-cation (Timeout); 	364 - dft-water-dimer (Timeout); 	384 - chemps2-caspt2-n2 (Failed); ```; where the `dft-` and `fcidump` tests failing are expected as your PR that fixes them is not yet pulled in. The `chemps2/caspt-n2` test passes when I run it manually and passed in the test log file (see attached); [testresults.log](https://github.com/psi4/psi4/files/1889030/testresults.log),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379675367
https://github.com/psi4/psi4/pull/949#issuecomment-379675367:31,Testability,test,test,31,@loriab I'm confused about the test results. The ctest returns:; ```; The following tests FAILED:; 	184 - fcidump (Failed); 	359 - dft-custom-dhdf (Failed); 	363 - dft-cation (Timeout); 	364 - dft-water-dimer (Timeout); 	384 - chemps2-caspt2-n2 (Failed); ```; where the `dft-` and `fcidump` tests failing are expected as your PR that fixes them is not yet pulled in. The `chemps2/caspt-n2` test passes when I run it manually and passed in the test log file (see attached); [testresults.log](https://github.com/psi4/psi4/files/1889030/testresults.log),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379675367
https://github.com/psi4/psi4/pull/949#issuecomment-379675367:84,Testability,test,tests,84,@loriab I'm confused about the test results. The ctest returns:; ```; The following tests FAILED:; 	184 - fcidump (Failed); 	359 - dft-custom-dhdf (Failed); 	363 - dft-cation (Timeout); 	364 - dft-water-dimer (Timeout); 	384 - chemps2-caspt2-n2 (Failed); ```; where the `dft-` and `fcidump` tests failing are expected as your PR that fixes them is not yet pulled in. The `chemps2/caspt-n2` test passes when I run it manually and passed in the test log file (see attached); [testresults.log](https://github.com/psi4/psi4/files/1889030/testresults.log),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379675367
https://github.com/psi4/psi4/pull/949#issuecomment-379675367:291,Testability,test,tests,291,@loriab I'm confused about the test results. The ctest returns:; ```; The following tests FAILED:; 	184 - fcidump (Failed); 	359 - dft-custom-dhdf (Failed); 	363 - dft-cation (Timeout); 	364 - dft-water-dimer (Timeout); 	384 - chemps2-caspt2-n2 (Failed); ```; where the `dft-` and `fcidump` tests failing are expected as your PR that fixes them is not yet pulled in. The `chemps2/caspt-n2` test passes when I run it manually and passed in the test log file (see attached); [testresults.log](https://github.com/psi4/psi4/files/1889030/testresults.log),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379675367
https://github.com/psi4/psi4/pull/949#issuecomment-379675367:390,Testability,test,test,390,@loriab I'm confused about the test results. The ctest returns:; ```; The following tests FAILED:; 	184 - fcidump (Failed); 	359 - dft-custom-dhdf (Failed); 	363 - dft-cation (Timeout); 	364 - dft-water-dimer (Timeout); 	384 - chemps2-caspt2-n2 (Failed); ```; where the `dft-` and `fcidump` tests failing are expected as your PR that fixes them is not yet pulled in. The `chemps2/caspt-n2` test passes when I run it manually and passed in the test log file (see attached); [testresults.log](https://github.com/psi4/psi4/files/1889030/testresults.log),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379675367
https://github.com/psi4/psi4/pull/949#issuecomment-379675367:443,Testability,test,test,443,@loriab I'm confused about the test results. The ctest returns:; ```; The following tests FAILED:; 	184 - fcidump (Failed); 	359 - dft-custom-dhdf (Failed); 	363 - dft-cation (Timeout); 	364 - dft-water-dimer (Timeout); 	384 - chemps2-caspt2-n2 (Failed); ```; where the `dft-` and `fcidump` tests failing are expected as your PR that fixes them is not yet pulled in. The `chemps2/caspt-n2` test passes when I run it manually and passed in the test log file (see attached); [testresults.log](https://github.com/psi4/psi4/files/1889030/testresults.log),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379675367
https://github.com/psi4/psi4/pull/949#issuecomment-379675367:448,Testability,log,log,448,@loriab I'm confused about the test results. The ctest returns:; ```; The following tests FAILED:; 	184 - fcidump (Failed); 	359 - dft-custom-dhdf (Failed); 	363 - dft-cation (Timeout); 	364 - dft-water-dimer (Timeout); 	384 - chemps2-caspt2-n2 (Failed); ```; where the `dft-` and `fcidump` tests failing are expected as your PR that fixes them is not yet pulled in. The `chemps2/caspt-n2` test passes when I run it manually and passed in the test log file (see attached); [testresults.log](https://github.com/psi4/psi4/files/1889030/testresults.log),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379675367
https://github.com/psi4/psi4/pull/949#issuecomment-379675367:474,Testability,test,testresults,474,@loriab I'm confused about the test results. The ctest returns:; ```; The following tests FAILED:; 	184 - fcidump (Failed); 	359 - dft-custom-dhdf (Failed); 	363 - dft-cation (Timeout); 	364 - dft-water-dimer (Timeout); 	384 - chemps2-caspt2-n2 (Failed); ```; where the `dft-` and `fcidump` tests failing are expected as your PR that fixes them is not yet pulled in. The `chemps2/caspt-n2` test passes when I run it manually and passed in the test log file (see attached); [testresults.log](https://github.com/psi4/psi4/files/1889030/testresults.log),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379675367
https://github.com/psi4/psi4/pull/949#issuecomment-379675367:486,Testability,log,log,486,@loriab I'm confused about the test results. The ctest returns:; ```; The following tests FAILED:; 	184 - fcidump (Failed); 	359 - dft-custom-dhdf (Failed); 	363 - dft-cation (Timeout); 	364 - dft-water-dimer (Timeout); 	384 - chemps2-caspt2-n2 (Failed); ```; where the `dft-` and `fcidump` tests failing are expected as your PR that fixes them is not yet pulled in. The `chemps2/caspt-n2` test passes when I run it manually and passed in the test log file (see attached); [testresults.log](https://github.com/psi4/psi4/files/1889030/testresults.log),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379675367
https://github.com/psi4/psi4/pull/949#issuecomment-379675367:534,Testability,test,testresults,534,@loriab I'm confused about the test results. The ctest returns:; ```; The following tests FAILED:; 	184 - fcidump (Failed); 	359 - dft-custom-dhdf (Failed); 	363 - dft-cation (Timeout); 	364 - dft-water-dimer (Timeout); 	384 - chemps2-caspt2-n2 (Failed); ```; where the `dft-` and `fcidump` tests failing are expected as your PR that fixes them is not yet pulled in. The `chemps2/caspt-n2` test passes when I run it manually and passed in the test log file (see attached); [testresults.log](https://github.com/psi4/psi4/files/1889030/testresults.log),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379675367
https://github.com/psi4/psi4/pull/949#issuecomment-379675367:546,Testability,log,log,546,@loriab I'm confused about the test results. The ctest returns:; ```; The following tests FAILED:; 	184 - fcidump (Failed); 	359 - dft-custom-dhdf (Failed); 	363 - dft-cation (Timeout); 	364 - dft-water-dimer (Timeout); 	384 - chemps2-caspt2-n2 (Failed); ```; where the `dft-` and `fcidump` tests failing are expected as your PR that fixes them is not yet pulled in. The `chemps2/caspt-n2` test passes when I run it manually and passed in the test log file (see attached); [testresults.log](https://github.com/psi4/psi4/files/1889030/testresults.log),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379675367
https://github.com/psi4/psi4/pull/949#issuecomment-379738813:33,Testability,test,test,33,"So I have tried to set-up a good test case, and I run into the `clean()` issue again, see attachments.; [cbs-parser.txt](https://github.com/psi4/psi4/files/1889912/cbs-parser.txt); [cbs-parser.log](https://github.com/psi4/psi4/files/1889914/cbs-parser.log)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379738813
https://github.com/psi4/psi4/pull/949#issuecomment-379738813:193,Testability,log,log,193,"So I have tried to set-up a good test case, and I run into the `clean()` issue again, see attachments.; [cbs-parser.txt](https://github.com/psi4/psi4/files/1889912/cbs-parser.txt); [cbs-parser.log](https://github.com/psi4/psi4/files/1889914/cbs-parser.log)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379738813
https://github.com/psi4/psi4/pull/949#issuecomment-379738813:252,Testability,log,log,252,"So I have tried to set-up a good test case, and I run into the `clean()` issue again, see attachments.; [cbs-parser.txt](https://github.com/psi4/psi4/files/1889912/cbs-parser.txt); [cbs-parser.log](https://github.com/psi4/psi4/files/1889914/cbs-parser.log)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379738813
https://github.com/psi4/psi4/pull/949#issuecomment-379830469:147,Availability,error,error,147,"On the `clean` issue, I don't see a change in behavior from your PR. The below (on master) also requires the intervening `clean()` to avoid a PSIO error. Maybe the rules of how much the user should need to call clean need rethinking, but at least they are steady (one used to have to call it after practically everything). ```; molecule ne2 {; 0 1; Ne 0 0 0; --; 0 1; Ne 2 0 0; }. set basis cc-pvdz; sapt_global = energy(""sapt2+(3)"", molecule=ne2). clean() # PSIO error without this line. # these two calls are equivalent; #cbs_string = energy(""mp2/6-311++G** + D:ccsd/6-311+G""); cbs_string = energy(cbs, corl_wfn='mp2', corl_basis='6-311++G**', delta_wfn='ccsd', delta_basis='6-311+G'); compare_values(-257.50097969, cbs_string, 5, 'cbs'); ```. On the caspt2, runs fine for me, too. If you want to see the error try [looking in the testing log file](http://psicode.org/psi4manual/master/build_planning.html#faq-testsoutput). But it's certainly outside the scope of this PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379830469
https://github.com/psi4/psi4/pull/949#issuecomment-379830469:464,Availability,error,error,464,"On the `clean` issue, I don't see a change in behavior from your PR. The below (on master) also requires the intervening `clean()` to avoid a PSIO error. Maybe the rules of how much the user should need to call clean need rethinking, but at least they are steady (one used to have to call it after practically everything). ```; molecule ne2 {; 0 1; Ne 0 0 0; --; 0 1; Ne 2 0 0; }. set basis cc-pvdz; sapt_global = energy(""sapt2+(3)"", molecule=ne2). clean() # PSIO error without this line. # these two calls are equivalent; #cbs_string = energy(""mp2/6-311++G** + D:ccsd/6-311+G""); cbs_string = energy(cbs, corl_wfn='mp2', corl_basis='6-311++G**', delta_wfn='ccsd', delta_basis='6-311+G'); compare_values(-257.50097969, cbs_string, 5, 'cbs'); ```. On the caspt2, runs fine for me, too. If you want to see the error try [looking in the testing log file](http://psicode.org/psi4manual/master/build_planning.html#faq-testsoutput). But it's certainly outside the scope of this PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379830469
https://github.com/psi4/psi4/pull/949#issuecomment-379830469:807,Availability,error,error,807,"On the `clean` issue, I don't see a change in behavior from your PR. The below (on master) also requires the intervening `clean()` to avoid a PSIO error. Maybe the rules of how much the user should need to call clean need rethinking, but at least they are steady (one used to have to call it after practically everything). ```; molecule ne2 {; 0 1; Ne 0 0 0; --; 0 1; Ne 2 0 0; }. set basis cc-pvdz; sapt_global = energy(""sapt2+(3)"", molecule=ne2). clean() # PSIO error without this line. # these two calls are equivalent; #cbs_string = energy(""mp2/6-311++G** + D:ccsd/6-311+G""); cbs_string = energy(cbs, corl_wfn='mp2', corl_basis='6-311++G**', delta_wfn='ccsd', delta_basis='6-311+G'); compare_values(-257.50097969, cbs_string, 5, 'cbs'); ```. On the caspt2, runs fine for me, too. If you want to see the error try [looking in the testing log file](http://psicode.org/psi4manual/master/build_planning.html#faq-testsoutput). But it's certainly outside the scope of this PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379830469
https://github.com/psi4/psi4/pull/949#issuecomment-379830469:414,Energy Efficiency,energy,energy,414,"On the `clean` issue, I don't see a change in behavior from your PR. The below (on master) also requires the intervening `clean()` to avoid a PSIO error. Maybe the rules of how much the user should need to call clean need rethinking, but at least they are steady (one used to have to call it after practically everything). ```; molecule ne2 {; 0 1; Ne 0 0 0; --; 0 1; Ne 2 0 0; }. set basis cc-pvdz; sapt_global = energy(""sapt2+(3)"", molecule=ne2). clean() # PSIO error without this line. # these two calls are equivalent; #cbs_string = energy(""mp2/6-311++G** + D:ccsd/6-311+G""); cbs_string = energy(cbs, corl_wfn='mp2', corl_basis='6-311++G**', delta_wfn='ccsd', delta_basis='6-311+G'); compare_values(-257.50097969, cbs_string, 5, 'cbs'); ```. On the caspt2, runs fine for me, too. If you want to see the error try [looking in the testing log file](http://psicode.org/psi4manual/master/build_planning.html#faq-testsoutput). But it's certainly outside the scope of this PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379830469
https://github.com/psi4/psi4/pull/949#issuecomment-379830469:537,Energy Efficiency,energy,energy,537,"On the `clean` issue, I don't see a change in behavior from your PR. The below (on master) also requires the intervening `clean()` to avoid a PSIO error. Maybe the rules of how much the user should need to call clean need rethinking, but at least they are steady (one used to have to call it after practically everything). ```; molecule ne2 {; 0 1; Ne 0 0 0; --; 0 1; Ne 2 0 0; }. set basis cc-pvdz; sapt_global = energy(""sapt2+(3)"", molecule=ne2). clean() # PSIO error without this line. # these two calls are equivalent; #cbs_string = energy(""mp2/6-311++G** + D:ccsd/6-311+G""); cbs_string = energy(cbs, corl_wfn='mp2', corl_basis='6-311++G**', delta_wfn='ccsd', delta_basis='6-311+G'); compare_values(-257.50097969, cbs_string, 5, 'cbs'); ```. On the caspt2, runs fine for me, too. If you want to see the error try [looking in the testing log file](http://psicode.org/psi4manual/master/build_planning.html#faq-testsoutput). But it's certainly outside the scope of this PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379830469
https://github.com/psi4/psi4/pull/949#issuecomment-379830469:593,Energy Efficiency,energy,energy,593,"On the `clean` issue, I don't see a change in behavior from your PR. The below (on master) also requires the intervening `clean()` to avoid a PSIO error. Maybe the rules of how much the user should need to call clean need rethinking, but at least they are steady (one used to have to call it after practically everything). ```; molecule ne2 {; 0 1; Ne 0 0 0; --; 0 1; Ne 2 0 0; }. set basis cc-pvdz; sapt_global = energy(""sapt2+(3)"", molecule=ne2). clean() # PSIO error without this line. # these two calls are equivalent; #cbs_string = energy(""mp2/6-311++G** + D:ccsd/6-311+G""); cbs_string = energy(cbs, corl_wfn='mp2', corl_basis='6-311++G**', delta_wfn='ccsd', delta_basis='6-311+G'); compare_values(-257.50097969, cbs_string, 5, 'cbs'); ```. On the caspt2, runs fine for me, too. If you want to see the error try [looking in the testing log file](http://psicode.org/psi4manual/master/build_planning.html#faq-testsoutput). But it's certainly outside the scope of this PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379830469
https://github.com/psi4/psi4/pull/949#issuecomment-379830469:134,Safety,avoid,avoid,134,"On the `clean` issue, I don't see a change in behavior from your PR. The below (on master) also requires the intervening `clean()` to avoid a PSIO error. Maybe the rules of how much the user should need to call clean need rethinking, but at least they are steady (one used to have to call it after practically everything). ```; molecule ne2 {; 0 1; Ne 0 0 0; --; 0 1; Ne 2 0 0; }. set basis cc-pvdz; sapt_global = energy(""sapt2+(3)"", molecule=ne2). clean() # PSIO error without this line. # these two calls are equivalent; #cbs_string = energy(""mp2/6-311++G** + D:ccsd/6-311+G""); cbs_string = energy(cbs, corl_wfn='mp2', corl_basis='6-311++G**', delta_wfn='ccsd', delta_basis='6-311+G'); compare_values(-257.50097969, cbs_string, 5, 'cbs'); ```. On the caspt2, runs fine for me, too. If you want to see the error try [looking in the testing log file](http://psicode.org/psi4manual/master/build_planning.html#faq-testsoutput). But it's certainly outside the scope of this PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379830469
https://github.com/psi4/psi4/pull/949#issuecomment-379830469:833,Testability,test,testing,833,"On the `clean` issue, I don't see a change in behavior from your PR. The below (on master) also requires the intervening `clean()` to avoid a PSIO error. Maybe the rules of how much the user should need to call clean need rethinking, but at least they are steady (one used to have to call it after practically everything). ```; molecule ne2 {; 0 1; Ne 0 0 0; --; 0 1; Ne 2 0 0; }. set basis cc-pvdz; sapt_global = energy(""sapt2+(3)"", molecule=ne2). clean() # PSIO error without this line. # these two calls are equivalent; #cbs_string = energy(""mp2/6-311++G** + D:ccsd/6-311+G""); cbs_string = energy(cbs, corl_wfn='mp2', corl_basis='6-311++G**', delta_wfn='ccsd', delta_basis='6-311+G'); compare_values(-257.50097969, cbs_string, 5, 'cbs'); ```. On the caspt2, runs fine for me, too. If you want to see the error try [looking in the testing log file](http://psicode.org/psi4manual/master/build_planning.html#faq-testsoutput). But it's certainly outside the scope of this PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379830469
https://github.com/psi4/psi4/pull/949#issuecomment-379830469:841,Testability,log,log,841,"On the `clean` issue, I don't see a change in behavior from your PR. The below (on master) also requires the intervening `clean()` to avoid a PSIO error. Maybe the rules of how much the user should need to call clean need rethinking, but at least they are steady (one used to have to call it after practically everything). ```; molecule ne2 {; 0 1; Ne 0 0 0; --; 0 1; Ne 2 0 0; }. set basis cc-pvdz; sapt_global = energy(""sapt2+(3)"", molecule=ne2). clean() # PSIO error without this line. # these two calls are equivalent; #cbs_string = energy(""mp2/6-311++G** + D:ccsd/6-311+G""); cbs_string = energy(cbs, corl_wfn='mp2', corl_basis='6-311++G**', delta_wfn='ccsd', delta_basis='6-311+G'); compare_values(-257.50097969, cbs_string, 5, 'cbs'); ```. On the caspt2, runs fine for me, too. If you want to see the error try [looking in the testing log file](http://psicode.org/psi4manual/master/build_planning.html#faq-testsoutput). But it's certainly outside the scope of this PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379830469
https://github.com/psi4/psi4/pull/949#issuecomment-379830469:912,Testability,test,testsoutput,912,"On the `clean` issue, I don't see a change in behavior from your PR. The below (on master) also requires the intervening `clean()` to avoid a PSIO error. Maybe the rules of how much the user should need to call clean need rethinking, but at least they are steady (one used to have to call it after practically everything). ```; molecule ne2 {; 0 1; Ne 0 0 0; --; 0 1; Ne 2 0 0; }. set basis cc-pvdz; sapt_global = energy(""sapt2+(3)"", molecule=ne2). clean() # PSIO error without this line. # these two calls are equivalent; #cbs_string = energy(""mp2/6-311++G** + D:ccsd/6-311+G""); cbs_string = energy(cbs, corl_wfn='mp2', corl_basis='6-311++G**', delta_wfn='ccsd', delta_basis='6-311+G'); compare_values(-257.50097969, cbs_string, 5, 'cbs'); ```. On the caspt2, runs fine for me, too. If you want to see the error try [looking in the testing log file](http://psicode.org/psi4manual/master/build_planning.html#faq-testsoutput). But it's certainly outside the scope of this PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379830469
https://github.com/psi4/psi4/pull/949#issuecomment-379844526:28,Testability,test,tests,28,"OK, I've re-ordered the two tests so that they don't crash without `clean()`. I had hoped that this PR might have sorted out this `clean()` issue, but for true CBS methods (ie. not just method/basis syntax), it's unfortunately still there when switching basis sets. The test is meant to test the ""new"" functionality: allowing ""method/basis"" syntax with `sapt2+(3)` and `+ D:` correction with augmented Pople basis sets (both previously crashed due to ""+""). @dgasmith do you want to include some `property()` or `frequencies()` calls in the test too?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379844526
https://github.com/psi4/psi4/pull/949#issuecomment-379844526:270,Testability,test,test,270,"OK, I've re-ordered the two tests so that they don't crash without `clean()`. I had hoped that this PR might have sorted out this `clean()` issue, but for true CBS methods (ie. not just method/basis syntax), it's unfortunately still there when switching basis sets. The test is meant to test the ""new"" functionality: allowing ""method/basis"" syntax with `sapt2+(3)` and `+ D:` correction with augmented Pople basis sets (both previously crashed due to ""+""). @dgasmith do you want to include some `property()` or `frequencies()` calls in the test too?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379844526
https://github.com/psi4/psi4/pull/949#issuecomment-379844526:287,Testability,test,test,287,"OK, I've re-ordered the two tests so that they don't crash without `clean()`. I had hoped that this PR might have sorted out this `clean()` issue, but for true CBS methods (ie. not just method/basis syntax), it's unfortunately still there when switching basis sets. The test is meant to test the ""new"" functionality: allowing ""method/basis"" syntax with `sapt2+(3)` and `+ D:` correction with augmented Pople basis sets (both previously crashed due to ""+""). @dgasmith do you want to include some `property()` or `frequencies()` calls in the test too?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379844526
https://github.com/psi4/psi4/pull/949#issuecomment-379844526:540,Testability,test,test,540,"OK, I've re-ordered the two tests so that they don't crash without `clean()`. I had hoped that this PR might have sorted out this `clean()` issue, but for true CBS methods (ie. not just method/basis syntax), it's unfortunately still there when switching basis sets. The test is meant to test the ""new"" functionality: allowing ""method/basis"" syntax with `sapt2+(3)` and `+ D:` correction with augmented Pople basis sets (both previously crashed due to ""+""). @dgasmith do you want to include some `property()` or `frequencies()` calls in the test too?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379844526
https://github.com/psi4/psi4/pull/949#issuecomment-379849269:79,Testability,test,tests,79,"@PeterKraus Yea, to round things out we should probably add those single calls tests as well to ensure that we do not regress at some point in the future (although dont make this a quickest). As a note its fine to call clean in the tests.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379849269
https://github.com/psi4/psi4/pull/949#issuecomment-379849269:232,Testability,test,tests,232,"@PeterKraus Yea, to round things out we should probably add those single calls tests as well to ensure that we do not regress at some point in the future (although dont make this a quickest). As a note its fine to call clean in the tests.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379849269
https://github.com/psi4/psi4/pull/949#issuecomment-379855166:195,Modifiability,extend,extend,195,"The `frequency()` call is already checked in `cbs-xtpl-freq` with `dertype=1`; the handling was just moved from driver to cbs_driver in this PR. For the `properties()`, I think it'd be easier to extend one of the `props[1-4]` tests; I've extended the `props4` call to compare the already-computed V-values from SCF with global cc-pVDZ basis with ones from an explicit SCF/cc-pVDZ calculation.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379855166
https://github.com/psi4/psi4/pull/949#issuecomment-379855166:238,Modifiability,extend,extended,238,"The `frequency()` call is already checked in `cbs-xtpl-freq` with `dertype=1`; the handling was just moved from driver to cbs_driver in this PR. For the `properties()`, I think it'd be easier to extend one of the `props[1-4]` tests; I've extended the `props4` call to compare the already-computed V-values from SCF with global cc-pVDZ basis with ones from an explicit SCF/cc-pVDZ calculation.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379855166
https://github.com/psi4/psi4/pull/949#issuecomment-379855166:226,Testability,test,tests,226,"The `frequency()` call is already checked in `cbs-xtpl-freq` with `dertype=1`; the handling was just moved from driver to cbs_driver in this PR. For the `properties()`, I think it'd be easier to extend one of the `props[1-4]` tests; I've extended the `props4` call to compare the already-computed V-values from SCF with global cc-pVDZ basis with ones from an explicit SCF/cc-pVDZ calculation.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379855166
https://github.com/psi4/psi4/pull/949#issuecomment-380001726:42,Testability,test,tests,42,"@loriab Done, I added it to the other cbs-tests at the beginning of the list.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-380001726
https://github.com/psi4/psi4/pull/950#issuecomment-380192190:532,Availability,ping,ping,532,"Very true on exposing more symbols later, @dgasmith. I haven't even attempted v2rdm. @edeprince3, FYI, this affects you. There's a discussion in https://github.com/psi4/psi4/pull/814 if you want the details, but the tl;dr is that Psi4's `core.so` built with this PR will not have all the symbols exposed like a normal Linux `.so` for a plugin's use. If there's extra classes or functions that v2rdm needs, they'll need a `PSI_API` added to the (psi) source code. If you get to the v2rdm/psi reconciliation process before me, please ping with any trouble. I'm updating and rebuilding all the conda packages now, but v2rdm is always last, having psi as a dep. :-)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/950#issuecomment-380192190
https://github.com/psi4/psi4/pull/950#issuecomment-380192190:336,Modifiability,plugin,plugin,336,"Very true on exposing more symbols later, @dgasmith. I haven't even attempted v2rdm. @edeprince3, FYI, this affects you. There's a discussion in https://github.com/psi4/psi4/pull/814 if you want the details, but the tl;dr is that Psi4's `core.so` built with this PR will not have all the symbols exposed like a normal Linux `.so` for a plugin's use. If there's extra classes or functions that v2rdm needs, they'll need a `PSI_API` added to the (psi) source code. If you get to the v2rdm/psi reconciliation process before me, please ping with any trouble. I'm updating and rebuilding all the conda packages now, but v2rdm is always last, having psi as a dep. :-)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/950#issuecomment-380192190
https://github.com/psi4/psi4/pull/950#issuecomment-380192190:296,Security,expose,exposed,296,"Very true on exposing more symbols later, @dgasmith. I haven't even attempted v2rdm. @edeprince3, FYI, this affects you. There's a discussion in https://github.com/psi4/psi4/pull/814 if you want the details, but the tl;dr is that Psi4's `core.so` built with this PR will not have all the symbols exposed like a normal Linux `.so` for a plugin's use. If there's extra classes or functions that v2rdm needs, they'll need a `PSI_API` added to the (psi) source code. If you get to the v2rdm/psi reconciliation process before me, please ping with any trouble. I'm updating and rebuilding all the conda packages now, but v2rdm is always last, having psi as a dep. :-)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/950#issuecomment-380192190
https://github.com/psi4/psi4/pull/951#issuecomment-380174200:46,Testability,test,tests,46,"was there some symmetry in the other cubeprop tests that didn't see the bad index transpose? or is the problem present in the test cubes and just no one looked at them? By all means add another cubeprop test if it spans more testing space, but probably not otherwise. Do we need new reference cubes for the existing tests?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/951#issuecomment-380174200
https://github.com/psi4/psi4/pull/951#issuecomment-380174200:126,Testability,test,test,126,"was there some symmetry in the other cubeprop tests that didn't see the bad index transpose? or is the problem present in the test cubes and just no one looked at them? By all means add another cubeprop test if it spans more testing space, but probably not otherwise. Do we need new reference cubes for the existing tests?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/951#issuecomment-380174200
https://github.com/psi4/psi4/pull/951#issuecomment-380174200:203,Testability,test,test,203,"was there some symmetry in the other cubeprop tests that didn't see the bad index transpose? or is the problem present in the test cubes and just no one looked at them? By all means add another cubeprop test if it spans more testing space, but probably not otherwise. Do we need new reference cubes for the existing tests?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/951#issuecomment-380174200
https://github.com/psi4/psi4/pull/951#issuecomment-380174200:225,Testability,test,testing,225,"was there some symmetry in the other cubeprop tests that didn't see the bad index transpose? or is the problem present in the test cubes and just no one looked at them? By all means add another cubeprop test if it spans more testing space, but probably not otherwise. Do we need new reference cubes for the existing tests?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/951#issuecomment-380174200
https://github.com/psi4/psi4/pull/951#issuecomment-380174200:316,Testability,test,tests,316,"was there some symmetry in the other cubeprop tests that didn't see the bad index transpose? or is the problem present in the test cubes and just no one looked at them? By all means add another cubeprop test if it spans more testing space, but probably not otherwise. Do we need new reference cubes for the existing tests?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/951#issuecomment-380174200
https://github.com/psi4/psi4/pull/951#issuecomment-380180516:13,Testability,test,test,13,"The cubeprop test was passing, but with these changes the last ~10 lines or so of the test cube files are different. Not entirely sure how to handle that. I can post the test file I was using if that would be helpful.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/951#issuecomment-380180516
https://github.com/psi4/psi4/pull/951#issuecomment-380180516:86,Testability,test,test,86,"The cubeprop test was passing, but with these changes the last ~10 lines or so of the test cube files are different. Not entirely sure how to handle that. I can post the test file I was using if that would be helpful.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/951#issuecomment-380180516
https://github.com/psi4/psi4/pull/951#issuecomment-380180516:170,Testability,test,test,170,"The cubeprop test was passing, but with these changes the last ~10 lines or so of the test cube files are different. Not entirely sure how to handle that. I can post the test file I was using if that would be helpful.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/951#issuecomment-380180516
https://github.com/psi4/psi4/pull/951#issuecomment-380189191:217,Testability,test,test,217,"That ""last 10 lines or so different"" sounds eerily familiar from the last cubeprop kerfluffle. But that, too, was a definite bug located. Regenerate all the ref cubes, I think. You use gcc, right? And I'll be sure to test them pronto with icpc.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/951#issuecomment-380189191
https://github.com/psi4/psi4/pull/951#issuecomment-380226206:9,Testability,test,tests,9,"cubeprop tests pass with `icpc`, so home free.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/951#issuecomment-380226206
https://github.com/psi4/psi4/pull/952#issuecomment-380454214:119,Modifiability,variab,variables,119,"@dgasmith Would you prefer I sub out all `core.set_variable(...)` with `wfn.set_variable(...)` or just ensure that all variables set are also bound to the wavefunction? I've was about to commit the latter as I've just got that working properly, but I'm not sure how important it is to keep access to the psivars w/ `P::e`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/952#issuecomment-380454214
https://github.com/psi4/psi4/pull/952#issuecomment-380454214:290,Security,access,access,290,"@dgasmith Would you prefer I sub out all `core.set_variable(...)` with `wfn.set_variable(...)` or just ensure that all variables set are also bound to the wavefunction? I've was about to commit the latter as I've just got that working properly, but I'm not sure how important it is to keep access to the psivars w/ `P::e`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/952#issuecomment-380454214
https://github.com/psi4/psi4/pull/953#issuecomment-381451337:234,Usability,learn,learning,234,"I know that 6*natom is also found in the header of the second derivative output file from WDA's `INTDER`, but I'm still not sure why. In addition to my `findif` work, I'm using `INTDER` for my work at UGA, so I'm doubly interested in learning what it means. Our `anharm` program calls this number `NSTORE` and `NNSTOR`, but it never does anything with them.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/953#issuecomment-381451337
https://github.com/psi4/psi4/pull/953#issuecomment-381466482:90,Safety,detect,detective,90,"I'll look into this. There aren't many people who might know here, which (sadly) cuts the detective work short.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/953#issuecomment-381466482
https://github.com/psi4/psi4/pull/953#issuecomment-381466773:359,Safety,detect,detective,359,"The tone of the documentation to which Lori alludes sounds like Justin; Fermann to me, but the convention is probably older than the arrival of the; Quantum Trio to the CCQC. On Sun, Apr 15, 2018 at 9:57 PM, Jonathon Misiewicz <; notifications@github.com> wrote:. > I'll look into this. There aren't many people who might know here, which; > (sadly) cuts the detective work short.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/953#issuecomment-381466482>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/ADguTL4Ay7mIKdYFXiDGj9BYRY6wVpGIks5tpAingaJpZM4TPKkE>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/953#issuecomment-381466773
https://github.com/psi4/psi4/pull/953#issuecomment-381467223:136,Integrability,depend,dependent,136,"Origin aside, do I gather correctly that optking (or its successors; optking being the only visible consumer of the `.hess` file) isn't dependent on the `6` and if I could absorb the format into `FCMFINAL`, it'd be ok with your code, @psi-rking?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/953#issuecomment-381467223
https://github.com/psi4/psi4/pull/953#issuecomment-381467681:756,Safety,detect,detective,756,"The convention is definitely older and may connect to other quantum chemistry codes. I believe that ACES and ACESII used the same format for the Hessian file, at least many years ago. Perhaps the source is in one of the really old codes, like the HONDO code or Pulay’s TEXAS code?. -Daniel. > On Apr 15, 2018, at 10:59 PM, Rollin King <notifications@github.com> wrote:; > ; > The tone of the documentation to which Lori alludes sounds like Justin; > Fermann to me, but the convention is probably older than the arrival of the; > Quantum Trio to the CCQC.; > ; > On Sun, Apr 15, 2018 at 9:57 PM, Jonathon Misiewicz <; > notifications@github.com> wrote:; > ; > > I'll look into this. There aren't many people who might know here, which; > > (sadly) cuts the detective work short.; > >; > > —; > > You are receiving this because you were mentioned.; > > Reply to this email directly, view it on GitHub; > > <https://github.com/psi4/psi4/pull/953#issuecomment-381466482>, or mute; > > the thread; > > <https://github.com/notifications/unsubscribe-auth/ADguTL4Ay7mIKdYFXiDGj9BYRY6wVpGIks5tpAingaJpZM4TPKkE>; > > .; > >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub <https://github.com/psi4/psi4/pull/953#issuecomment-381466773>, or mute the thread <https://github.com/notifications/unsubscribe-auth/ACtz7aXaLZcW6C3S6H9CqrBL_msPg9mHks5tpAkrgaJpZM4TPKkE>.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/953#issuecomment-381467681
https://github.com/psi4/psi4/pull/953#issuecomment-381624417:355,Availability,error,errors,355,"Not a big deal. My preference would be to produce an equivalent file to; CFOUR. For example, the Crawford group has some chiroptical scripts; related to ROA that use second derivatives (file15-like) or dipole moment; derivatives (file17-like) but the headers vary slightly between PSI and; CFOUR, and this causes headaches, or worse, incorrect results if errors; aren't thrown. On Sun, Apr 15, 2018 at 10:03 PM, Lori A. Burns <notifications@github.com>; wrote:. > Origin aside, do I gather correctly that optking (or its successors;; > optking being the only visible consumer of the .hess file) isn't; > dependent on the 6 and if I could absorb the format into FCMFINAL, it'd; > be ok with your code, @psi-rking <https://github.com/psi-rking>?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/953#issuecomment-381467223>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/ADguTLfdpPdF-9uBf3JwnOPE52-M4vmYks5tpAoPgaJpZM4TPKkE>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/953#issuecomment-381624417
https://github.com/psi4/psi4/pull/953#issuecomment-381624417:604,Integrability,depend,dependent,604,"Not a big deal. My preference would be to produce an equivalent file to; CFOUR. For example, the Crawford group has some chiroptical scripts; related to ROA that use second derivatives (file15-like) or dipole moment; derivatives (file17-like) but the headers vary slightly between PSI and; CFOUR, and this causes headaches, or worse, incorrect results if errors; aren't thrown. On Sun, Apr 15, 2018 at 10:03 PM, Lori A. Burns <notifications@github.com>; wrote:. > Origin aside, do I gather correctly that optking (or its successors;; > optking being the only visible consumer of the .hess file) isn't; > dependent on the 6 and if I could absorb the format into FCMFINAL, it'd; > be ok with your code, @psi-rking <https://github.com/psi-rking>?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/953#issuecomment-381467223>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/ADguTLfdpPdF-9uBf3JwnOPE52-M4vmYks5tpAoPgaJpZM4TPKkE>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/953#issuecomment-381624417
https://github.com/psi4/psi4/pull/953#issuecomment-410003426:45,Testability,test,tests,45,"Ok, this is rebased and passing 435/437 full tests. Will know the full truth in half and hour. So potentially ready for merge. EDIT: full tests pass",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/953#issuecomment-410003426
https://github.com/psi4/psi4/pull/953#issuecomment-410003426:138,Testability,test,tests,138,"Ok, this is rebased and passing 435/437 full tests. Will know the full truth in half and hour. So potentially ready for merge. EDIT: full tests pass",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/953#issuecomment-410003426
https://github.com/psi4/psi4/issues/954#issuecomment-380309166:197,Deployability,install,install,197,Have you modeled on the examples [here](http://psicode.org/psi4manual/master/build_planning.html#how-to-configure-blas-lapack-for-building-psi4)? . You can work from conda mkl nowadays with `conda install mkl-devel`. cmake commands are https://github.com/psi4/psi4meta/blob/master/conda-recipes/psi4-dev-src/psi4DepsMKLCache.cmake#L15-L16,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-380309166
https://github.com/psi4/psi4/issues/954#issuecomment-380309166:104,Modifiability,config,configure-blas-lapack-for-building-,104,Have you modeled on the examples [here](http://psicode.org/psi4manual/master/build_planning.html#how-to-configure-blas-lapack-for-building-psi4)? . You can work from conda mkl nowadays with `conda install mkl-devel`. cmake commands are https://github.com/psi4/psi4meta/blob/master/conda-recipes/psi4-dev-src/psi4DepsMKLCache.cmake#L15-L16,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-380309166
https://github.com/psi4/psi4/issues/954#issuecomment-380478391:19,Deployability,install,install,19,"For MKL, I did not install the development package yet.; As for psi4, I was using the conda distribution, but I am trying to build from source.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-380478391
https://github.com/psi4/psi4/issues/954#issuecomment-380494702:223,Integrability,depend,dependencies,223,"The conda packages are in a state of transition just now wrt gcc, so I can't give you bullet-proof directions for this procedure without a lot of back-and-forth, but there is a procedure to build psi4 from source using all dependencies from conda, including MKL. It's outlined here (http://psicode.org/psi4manual/master/conda.html#how-to-use-conda-to-compile-psi4-faster-and-easier).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-380494702
https://github.com/psi4/psi4/issues/954#issuecomment-380550429:22,Deployability,install,install,22,@xiexr151e you should install the BLAS/LAPACK development package using your linux distribution's package manager. (Note that you should install an optimized implementation such as ATLAS or OpenBLAS instead of the reference BLAS/LAPACK implementation.),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-380550429
https://github.com/psi4/psi4/issues/954#issuecomment-380550429:137,Deployability,install,install,137,@xiexr151e you should install the BLAS/LAPACK development package using your linux distribution's package manager. (Note that you should install an optimized implementation such as ATLAS or OpenBLAS instead of the reference BLAS/LAPACK implementation.),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-380550429
https://github.com/psi4/psi4/issues/954#issuecomment-380550429:148,Performance,optimiz,optimized,148,@xiexr151e you should install the BLAS/LAPACK development package using your linux distribution's package manager. (Note that you should install an optimized implementation such as ATLAS or OpenBLAS instead of the reference BLAS/LAPACK implementation.),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-380550429
https://github.com/psi4/psi4/issues/954#issuecomment-381277308:68,Availability,Error,Error,68,"I have installed mkl-devel, but now I have a new issue:. ```; CMake Error at tests/fsapt-terms/CMakeLists.txt:4 (file):; file COPY cannot find; ""/server-home1/.../psi4/tests/fsapt-terms/../../psi4/share/psi4/fsapt/fsapt.py"". CMake Error at tests/fsapt-allterms/CMakeLists.txt:6 (file):; file COPY cannot find; ""/server-home1/.../psi4/tests/fsapt-allterms/../../psi4/share/psi4/fsapt/fsapt.py"".; ```. Is there a cmake comment I should look at in the psi4 documentation?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-381277308
https://github.com/psi4/psi4/issues/954#issuecomment-381277308:231,Availability,Error,Error,231,"I have installed mkl-devel, but now I have a new issue:. ```; CMake Error at tests/fsapt-terms/CMakeLists.txt:4 (file):; file COPY cannot find; ""/server-home1/.../psi4/tests/fsapt-terms/../../psi4/share/psi4/fsapt/fsapt.py"". CMake Error at tests/fsapt-allterms/CMakeLists.txt:6 (file):; file COPY cannot find; ""/server-home1/.../psi4/tests/fsapt-allterms/../../psi4/share/psi4/fsapt/fsapt.py"".; ```. Is there a cmake comment I should look at in the psi4 documentation?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-381277308
https://github.com/psi4/psi4/issues/954#issuecomment-381277308:7,Deployability,install,installed,7,"I have installed mkl-devel, but now I have a new issue:. ```; CMake Error at tests/fsapt-terms/CMakeLists.txt:4 (file):; file COPY cannot find; ""/server-home1/.../psi4/tests/fsapt-terms/../../psi4/share/psi4/fsapt/fsapt.py"". CMake Error at tests/fsapt-allterms/CMakeLists.txt:6 (file):; file COPY cannot find; ""/server-home1/.../psi4/tests/fsapt-allterms/../../psi4/share/psi4/fsapt/fsapt.py"".; ```. Is there a cmake comment I should look at in the psi4 documentation?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-381277308
https://github.com/psi4/psi4/issues/954#issuecomment-381277308:77,Testability,test,tests,77,"I have installed mkl-devel, but now I have a new issue:. ```; CMake Error at tests/fsapt-terms/CMakeLists.txt:4 (file):; file COPY cannot find; ""/server-home1/.../psi4/tests/fsapt-terms/../../psi4/share/psi4/fsapt/fsapt.py"". CMake Error at tests/fsapt-allterms/CMakeLists.txt:6 (file):; file COPY cannot find; ""/server-home1/.../psi4/tests/fsapt-allterms/../../psi4/share/psi4/fsapt/fsapt.py"".; ```. Is there a cmake comment I should look at in the psi4 documentation?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-381277308
https://github.com/psi4/psi4/issues/954#issuecomment-381277308:168,Testability,test,tests,168,"I have installed mkl-devel, but now I have a new issue:. ```; CMake Error at tests/fsapt-terms/CMakeLists.txt:4 (file):; file COPY cannot find; ""/server-home1/.../psi4/tests/fsapt-terms/../../psi4/share/psi4/fsapt/fsapt.py"". CMake Error at tests/fsapt-allterms/CMakeLists.txt:6 (file):; file COPY cannot find; ""/server-home1/.../psi4/tests/fsapt-allterms/../../psi4/share/psi4/fsapt/fsapt.py"".; ```. Is there a cmake comment I should look at in the psi4 documentation?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-381277308
https://github.com/psi4/psi4/issues/954#issuecomment-381277308:240,Testability,test,tests,240,"I have installed mkl-devel, but now I have a new issue:. ```; CMake Error at tests/fsapt-terms/CMakeLists.txt:4 (file):; file COPY cannot find; ""/server-home1/.../psi4/tests/fsapt-terms/../../psi4/share/psi4/fsapt/fsapt.py"". CMake Error at tests/fsapt-allterms/CMakeLists.txt:6 (file):; file COPY cannot find; ""/server-home1/.../psi4/tests/fsapt-allterms/../../psi4/share/psi4/fsapt/fsapt.py"".; ```. Is there a cmake comment I should look at in the psi4 documentation?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-381277308
https://github.com/psi4/psi4/issues/954#issuecomment-381277308:334,Testability,test,tests,334,"I have installed mkl-devel, but now I have a new issue:. ```; CMake Error at tests/fsapt-terms/CMakeLists.txt:4 (file):; file COPY cannot find; ""/server-home1/.../psi4/tests/fsapt-terms/../../psi4/share/psi4/fsapt/fsapt.py"". CMake Error at tests/fsapt-allterms/CMakeLists.txt:6 (file):; file COPY cannot find; ""/server-home1/.../psi4/tests/fsapt-allterms/../../psi4/share/psi4/fsapt/fsapt.py"".; ```. Is there a cmake comment I should look at in the psi4 documentation?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-381277308
https://github.com/psi4/psi4/issues/954#issuecomment-382179737:42,Deployability,install,install,42,"I ran into another issue during the `make install` step.; I kept getting the `ImportError: No module named mpmath`. I have attempted to install `mpmath` through conda, and the issue still persists.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-382179737
https://github.com/psi4/psi4/issues/954#issuecomment-382179737:136,Deployability,install,install,136,"I ran into another issue during the `make install` step.; I kept getting the `ImportError: No module named mpmath`. I have attempted to install `mpmath` through conda, and the issue still persists.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-382179737
https://github.com/psi4/psi4/issues/954#issuecomment-382181157:309,Availability,avail,available,309,mpmath is a required for one of the dependencies which was probably added sometime between your first cloning and your re-clone. . A couple of things: ; - Was the installation of mpmath successful? ; - Did you install into the base env or a different one? ; - Is that one active? ; - You can see if mpmath is available in the env that is active while you are trying to build by looking at the output from `conda list`,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-382181157
https://github.com/psi4/psi4/issues/954#issuecomment-382181157:163,Deployability,install,installation,163,mpmath is a required for one of the dependencies which was probably added sometime between your first cloning and your re-clone. . A couple of things: ; - Was the installation of mpmath successful? ; - Did you install into the base env or a different one? ; - Is that one active? ; - You can see if mpmath is available in the env that is active while you are trying to build by looking at the output from `conda list`,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-382181157
https://github.com/psi4/psi4/issues/954#issuecomment-382181157:210,Deployability,install,install,210,mpmath is a required for one of the dependencies which was probably added sometime between your first cloning and your re-clone. . A couple of things: ; - Was the installation of mpmath successful? ; - Did you install into the base env or a different one? ; - Is that one active? ; - You can see if mpmath is available in the env that is active while you are trying to build by looking at the output from `conda list`,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-382181157
https://github.com/psi4/psi4/issues/954#issuecomment-382181157:36,Integrability,depend,dependencies,36,mpmath is a required for one of the dependencies which was probably added sometime between your first cloning and your re-clone. . A couple of things: ; - Was the installation of mpmath successful? ; - Did you install into the base env or a different one? ; - Is that one active? ; - You can see if mpmath is available in the env that is active while you are trying to build by looking at the output from `conda list`,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-382181157
https://github.com/psi4/psi4/issues/954#issuecomment-382181608:420,Deployability,install,install,420,"How did you get gau2grid (psi4 dependency) compiled without `mpmath`? There are ways around it, but simplest precaution is to make sure the python psi4 cmake is detecting (look in `<objdir>/CMakeCache.txt`; influence through `cmake -DPYTHON_EXECUTABLE=/full/path/to/bin/python`) and any conda-supplied psi dependencies are in the *same* conda environment and that that's active throughout cmake configure, `make`, `make install`, and runtime.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-382181608
https://github.com/psi4/psi4/issues/954#issuecomment-382181608:31,Integrability,depend,dependency,31,"How did you get gau2grid (psi4 dependency) compiled without `mpmath`? There are ways around it, but simplest precaution is to make sure the python psi4 cmake is detecting (look in `<objdir>/CMakeCache.txt`; influence through `cmake -DPYTHON_EXECUTABLE=/full/path/to/bin/python`) and any conda-supplied psi dependencies are in the *same* conda environment and that that's active throughout cmake configure, `make`, `make install`, and runtime.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-382181608
https://github.com/psi4/psi4/issues/954#issuecomment-382181608:306,Integrability,depend,dependencies,306,"How did you get gau2grid (psi4 dependency) compiled without `mpmath`? There are ways around it, but simplest precaution is to make sure the python psi4 cmake is detecting (look in `<objdir>/CMakeCache.txt`; influence through `cmake -DPYTHON_EXECUTABLE=/full/path/to/bin/python`) and any conda-supplied psi dependencies are in the *same* conda environment and that that's active throughout cmake configure, `make`, `make install`, and runtime.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-382181608
https://github.com/psi4/psi4/issues/954#issuecomment-382181608:395,Modifiability,config,configure,395,"How did you get gau2grid (psi4 dependency) compiled without `mpmath`? There are ways around it, but simplest precaution is to make sure the python psi4 cmake is detecting (look in `<objdir>/CMakeCache.txt`; influence through `cmake -DPYTHON_EXECUTABLE=/full/path/to/bin/python`) and any conda-supplied psi dependencies are in the *same* conda environment and that that's active throughout cmake configure, `make`, `make install`, and runtime.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-382181608
https://github.com/psi4/psi4/issues/954#issuecomment-382181608:161,Safety,detect,detecting,161,"How did you get gau2grid (psi4 dependency) compiled without `mpmath`? There are ways around it, but simplest precaution is to make sure the python psi4 cmake is detecting (look in `<objdir>/CMakeCache.txt`; influence through `cmake -DPYTHON_EXECUTABLE=/full/path/to/bin/python`) and any conda-supplied psi dependencies are in the *same* conda environment and that that's active throughout cmake configure, `make`, `make install`, and runtime.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-382181608
https://github.com/psi4/psi4/issues/954#issuecomment-382181608:100,Usability,simpl,simplest,100,"How did you get gau2grid (psi4 dependency) compiled without `mpmath`? There are ways around it, but simplest precaution is to make sure the python psi4 cmake is detecting (look in `<objdir>/CMakeCache.txt`; influence through `cmake -DPYTHON_EXECUTABLE=/full/path/to/bin/python`) and any conda-supplied psi dependencies are in the *same* conda environment and that that's active throughout cmake configure, `make`, `make install`, and runtime.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-382181608
https://github.com/psi4/psi4/issues/954#issuecomment-382185804:55,Deployability,install,installing,55,"The environment that I am working on had `mpmath`, and installing `mpmath` is successful. When running `conda list`, `mpmath` shows up. How would I be able to make sure cmake is properly detecting? I have created a new environment for this installation, and only used this environment during the duration of the build.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-382185804
https://github.com/psi4/psi4/issues/954#issuecomment-382185804:240,Deployability,install,installation,240,"The environment that I am working on had `mpmath`, and installing `mpmath` is successful. When running `conda list`, `mpmath` shows up. How would I be able to make sure cmake is properly detecting? I have created a new environment for this installation, and only used this environment during the duration of the build.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-382185804
https://github.com/psi4/psi4/issues/954#issuecomment-382185804:187,Safety,detect,detecting,187,"The environment that I am working on had `mpmath`, and installing `mpmath` is successful. When running `conda list`, `mpmath` shows up. How would I be able to make sure cmake is properly detecting? I have created a new environment for this installation, and only used this environment during the duration of the build.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-382185804
https://github.com/psi4/psi4/issues/954#issuecomment-382188857:276,Deployability,update,update,276,"cmake doesn't detect `mpmath` directly. But you can look in `<objdir>/CMakeCache.txt` `PYTHON_EXECUTABLE` to check if right python is found. Otherwise, psi doesn't actually need `mpmath` anymore, so #968 drops the requirement. I'd guess it'll be merged tomorrow, then you can update your source.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-382188857
https://github.com/psi4/psi4/issues/954#issuecomment-382188857:14,Safety,detect,detect,14,"cmake doesn't detect `mpmath` directly. But you can look in `<objdir>/CMakeCache.txt` `PYTHON_EXECUTABLE` to check if right python is found. Otherwise, psi doesn't actually need `mpmath` anymore, so #968 drops the requirement. I'd guess it'll be merged tomorrow, then you can update your source.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-382188857
https://github.com/psi4/psi4/issues/954#issuecomment-382411619:7,Deployability,update,update,7,"If you update your code (`git pull origin master` if you direct cloned or `git pull upstream master` if you forked, then cloned, then added a remote; look at `git remote -v` to see which is pointing to psi4/psi4), no `mpmath` should now be needed. Remove your `<objdir>/` and reissue `cmake` and recompile.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-382411619
https://github.com/psi4/psi4/pull/956#issuecomment-380622702:8,Usability,learn,learn,8,Good to learn all these things :),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/956#issuecomment-380622702
https://github.com/psi4/psi4/issues/959#issuecomment-381039200:189,Deployability,release,release,189,"We may add RHF DF-CCSD(T) analytic gradients to the list of New Methods. Further, we may also include that FNOCC energies for the DFOCC module if pull request #824 is merged before the new release.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/959#issuecomment-381039200
https://github.com/psi4/psi4/issues/959#issuecomment-381256278:308,Availability,error,errors,308,"### Upgrade Guide. * `property(...)` --> `properties(...)`; * If you have a (non-py-only) plugin, ; * Add `PSI_API` to your plugin code in [this pattern](https://github.com/edeprince3/v2rdm_casscf/commit/7d4507d8979b61b3333fc6ceab450a61392836ff); * If, upon rebuilding against psi4, you get symbol not found errors, run `c++filt` on the mangled symbol name, then add `PSI_API` to the psi4 repo to make sure the `core.so` you're linking against is exporting the symbol you need. See example [here](https://github.com/psi4/psi4/pull/955). Or just file an issue with your lost symbol.; * Note that anyone wanting to re-use an objdir will need to **thoroughly** remove the old pybind11 v2.0.0 from detectability. This means:; * `<objdir> rm -rf stage/<TAB-TAB-...-TAB>/includes/pybind11`; * `<objdir> rm -rf stage/<TAB-TAB-...-TAB>/share/cmake/pybind11`; * `<objdir> rm -rf external/upstream/pybind11`; * Intel 2016 is no longer a valid compiler (doesn't work with py11 >=2.2.1)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/959#issuecomment-381256278
https://github.com/psi4/psi4/issues/959#issuecomment-381256278:4,Deployability,Upgrade,Upgrade,4,"### Upgrade Guide. * `property(...)` --> `properties(...)`; * If you have a (non-py-only) plugin, ; * Add `PSI_API` to your plugin code in [this pattern](https://github.com/edeprince3/v2rdm_casscf/commit/7d4507d8979b61b3333fc6ceab450a61392836ff); * If, upon rebuilding against psi4, you get symbol not found errors, run `c++filt` on the mangled symbol name, then add `PSI_API` to the psi4 repo to make sure the `core.so` you're linking against is exporting the symbol you need. See example [here](https://github.com/psi4/psi4/pull/955). Or just file an issue with your lost symbol.; * Note that anyone wanting to re-use an objdir will need to **thoroughly** remove the old pybind11 v2.0.0 from detectability. This means:; * `<objdir> rm -rf stage/<TAB-TAB-...-TAB>/includes/pybind11`; * `<objdir> rm -rf stage/<TAB-TAB-...-TAB>/share/cmake/pybind11`; * `<objdir> rm -rf external/upstream/pybind11`; * Intel 2016 is no longer a valid compiler (doesn't work with py11 >=2.2.1)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/959#issuecomment-381256278
https://github.com/psi4/psi4/issues/959#issuecomment-381256278:90,Modifiability,plugin,plugin,90,"### Upgrade Guide. * `property(...)` --> `properties(...)`; * If you have a (non-py-only) plugin, ; * Add `PSI_API` to your plugin code in [this pattern](https://github.com/edeprince3/v2rdm_casscf/commit/7d4507d8979b61b3333fc6ceab450a61392836ff); * If, upon rebuilding against psi4, you get symbol not found errors, run `c++filt` on the mangled symbol name, then add `PSI_API` to the psi4 repo to make sure the `core.so` you're linking against is exporting the symbol you need. See example [here](https://github.com/psi4/psi4/pull/955). Or just file an issue with your lost symbol.; * Note that anyone wanting to re-use an objdir will need to **thoroughly** remove the old pybind11 v2.0.0 from detectability. This means:; * `<objdir> rm -rf stage/<TAB-TAB-...-TAB>/includes/pybind11`; * `<objdir> rm -rf stage/<TAB-TAB-...-TAB>/share/cmake/pybind11`; * `<objdir> rm -rf external/upstream/pybind11`; * Intel 2016 is no longer a valid compiler (doesn't work with py11 >=2.2.1)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/959#issuecomment-381256278
https://github.com/psi4/psi4/issues/959#issuecomment-381256278:124,Modifiability,plugin,plugin,124,"### Upgrade Guide. * `property(...)` --> `properties(...)`; * If you have a (non-py-only) plugin, ; * Add `PSI_API` to your plugin code in [this pattern](https://github.com/edeprince3/v2rdm_casscf/commit/7d4507d8979b61b3333fc6ceab450a61392836ff); * If, upon rebuilding against psi4, you get symbol not found errors, run `c++filt` on the mangled symbol name, then add `PSI_API` to the psi4 repo to make sure the `core.so` you're linking against is exporting the symbol you need. See example [here](https://github.com/psi4/psi4/pull/955). Or just file an issue with your lost symbol.; * Note that anyone wanting to re-use an objdir will need to **thoroughly** remove the old pybind11 v2.0.0 from detectability. This means:; * `<objdir> rm -rf stage/<TAB-TAB-...-TAB>/includes/pybind11`; * `<objdir> rm -rf stage/<TAB-TAB-...-TAB>/share/cmake/pybind11`; * `<objdir> rm -rf external/upstream/pybind11`; * Intel 2016 is no longer a valid compiler (doesn't work with py11 >=2.2.1)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/959#issuecomment-381256278
https://github.com/psi4/psi4/issues/959#issuecomment-381256278:694,Safety,detect,detectability,694,"### Upgrade Guide. * `property(...)` --> `properties(...)`; * If you have a (non-py-only) plugin, ; * Add `PSI_API` to your plugin code in [this pattern](https://github.com/edeprince3/v2rdm_casscf/commit/7d4507d8979b61b3333fc6ceab450a61392836ff); * If, upon rebuilding against psi4, you get symbol not found errors, run `c++filt` on the mangled symbol name, then add `PSI_API` to the psi4 repo to make sure the `core.so` you're linking against is exporting the symbol you need. See example [here](https://github.com/psi4/psi4/pull/955). Or just file an issue with your lost symbol.; * Note that anyone wanting to re-use an objdir will need to **thoroughly** remove the old pybind11 v2.0.0 from detectability. This means:; * `<objdir> rm -rf stage/<TAB-TAB-...-TAB>/includes/pybind11`; * `<objdir> rm -rf stage/<TAB-TAB-...-TAB>/share/cmake/pybind11`; * `<objdir> rm -rf external/upstream/pybind11`; * Intel 2016 is no longer a valid compiler (doesn't work with py11 >=2.2.1)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/959#issuecomment-381256278
https://github.com/psi4/psi4/issues/959#issuecomment-381256278:12,Usability,Guid,Guide,12,"### Upgrade Guide. * `property(...)` --> `properties(...)`; * If you have a (non-py-only) plugin, ; * Add `PSI_API` to your plugin code in [this pattern](https://github.com/edeprince3/v2rdm_casscf/commit/7d4507d8979b61b3333fc6ceab450a61392836ff); * If, upon rebuilding against psi4, you get symbol not found errors, run `c++filt` on the mangled symbol name, then add `PSI_API` to the psi4 repo to make sure the `core.so` you're linking against is exporting the symbol you need. See example [here](https://github.com/psi4/psi4/pull/955). Or just file an issue with your lost symbol.; * Note that anyone wanting to re-use an objdir will need to **thoroughly** remove the old pybind11 v2.0.0 from detectability. This means:; * `<objdir> rm -rf stage/<TAB-TAB-...-TAB>/includes/pybind11`; * `<objdir> rm -rf stage/<TAB-TAB-...-TAB>/share/cmake/pybind11`; * `<objdir> rm -rf external/upstream/pybind11`; * Intel 2016 is no longer a valid compiler (doesn't work with py11 >=2.2.1)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/959#issuecomment-381256278
https://github.com/psi4/psi4/issues/959#issuecomment-386064898:153,Availability,mainten,maintenance,153,"# Known bugs; - PCM-ROHF is broken. See #999; # Library updates; - PCMSolver is updated to its latest version (1.2.1) This new release of PCMSolver is a maintenance release and no new features were added to Psi4 through this upgrade. However, more tests were added for PCM used in conjunction with ERI algorithms other than PK. A test was also added for geometry optimizations with PCM run using finite differences. See the [library's changelog](https://github.com/PCMSolver/pcmsolver/blob/release/1.2/CHANGELOG.md) for more information on what changed in the library itself.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/959#issuecomment-386064898
https://github.com/psi4/psi4/issues/959#issuecomment-386064898:56,Deployability,update,updates,56,"# Known bugs; - PCM-ROHF is broken. See #999; # Library updates; - PCMSolver is updated to its latest version (1.2.1) This new release of PCMSolver is a maintenance release and no new features were added to Psi4 through this upgrade. However, more tests were added for PCM used in conjunction with ERI algorithms other than PK. A test was also added for geometry optimizations with PCM run using finite differences. See the [library's changelog](https://github.com/PCMSolver/pcmsolver/blob/release/1.2/CHANGELOG.md) for more information on what changed in the library itself.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/959#issuecomment-386064898
https://github.com/psi4/psi4/issues/959#issuecomment-386064898:80,Deployability,update,updated,80,"# Known bugs; - PCM-ROHF is broken. See #999; # Library updates; - PCMSolver is updated to its latest version (1.2.1) This new release of PCMSolver is a maintenance release and no new features were added to Psi4 through this upgrade. However, more tests were added for PCM used in conjunction with ERI algorithms other than PK. A test was also added for geometry optimizations with PCM run using finite differences. See the [library's changelog](https://github.com/PCMSolver/pcmsolver/blob/release/1.2/CHANGELOG.md) for more information on what changed in the library itself.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/959#issuecomment-386064898
https://github.com/psi4/psi4/issues/959#issuecomment-386064898:127,Deployability,release,release,127,"# Known bugs; - PCM-ROHF is broken. See #999; # Library updates; - PCMSolver is updated to its latest version (1.2.1) This new release of PCMSolver is a maintenance release and no new features were added to Psi4 through this upgrade. However, more tests were added for PCM used in conjunction with ERI algorithms other than PK. A test was also added for geometry optimizations with PCM run using finite differences. See the [library's changelog](https://github.com/PCMSolver/pcmsolver/blob/release/1.2/CHANGELOG.md) for more information on what changed in the library itself.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/959#issuecomment-386064898
https://github.com/psi4/psi4/issues/959#issuecomment-386064898:165,Deployability,release,release,165,"# Known bugs; - PCM-ROHF is broken. See #999; # Library updates; - PCMSolver is updated to its latest version (1.2.1) This new release of PCMSolver is a maintenance release and no new features were added to Psi4 through this upgrade. However, more tests were added for PCM used in conjunction with ERI algorithms other than PK. A test was also added for geometry optimizations with PCM run using finite differences. See the [library's changelog](https://github.com/PCMSolver/pcmsolver/blob/release/1.2/CHANGELOG.md) for more information on what changed in the library itself.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/959#issuecomment-386064898
https://github.com/psi4/psi4/issues/959#issuecomment-386064898:225,Deployability,upgrade,upgrade,225,"# Known bugs; - PCM-ROHF is broken. See #999; # Library updates; - PCMSolver is updated to its latest version (1.2.1) This new release of PCMSolver is a maintenance release and no new features were added to Psi4 through this upgrade. However, more tests were added for PCM used in conjunction with ERI algorithms other than PK. A test was also added for geometry optimizations with PCM run using finite differences. See the [library's changelog](https://github.com/PCMSolver/pcmsolver/blob/release/1.2/CHANGELOG.md) for more information on what changed in the library itself.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/959#issuecomment-386064898
https://github.com/psi4/psi4/issues/959#issuecomment-386064898:490,Deployability,release,release,490,"# Known bugs; - PCM-ROHF is broken. See #999; # Library updates; - PCMSolver is updated to its latest version (1.2.1) This new release of PCMSolver is a maintenance release and no new features were added to Psi4 through this upgrade. However, more tests were added for PCM used in conjunction with ERI algorithms other than PK. A test was also added for geometry optimizations with PCM run using finite differences. See the [library's changelog](https://github.com/PCMSolver/pcmsolver/blob/release/1.2/CHANGELOG.md) for more information on what changed in the library itself.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/959#issuecomment-386064898
https://github.com/psi4/psi4/issues/959#issuecomment-386064898:363,Performance,optimiz,optimizations,363,"# Known bugs; - PCM-ROHF is broken. See #999; # Library updates; - PCMSolver is updated to its latest version (1.2.1) This new release of PCMSolver is a maintenance release and no new features were added to Psi4 through this upgrade. However, more tests were added for PCM used in conjunction with ERI algorithms other than PK. A test was also added for geometry optimizations with PCM run using finite differences. See the [library's changelog](https://github.com/PCMSolver/pcmsolver/blob/release/1.2/CHANGELOG.md) for more information on what changed in the library itself.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/959#issuecomment-386064898
https://github.com/psi4/psi4/issues/959#issuecomment-386064898:248,Testability,test,tests,248,"# Known bugs; - PCM-ROHF is broken. See #999; # Library updates; - PCMSolver is updated to its latest version (1.2.1) This new release of PCMSolver is a maintenance release and no new features were added to Psi4 through this upgrade. However, more tests were added for PCM used in conjunction with ERI algorithms other than PK. A test was also added for geometry optimizations with PCM run using finite differences. See the [library's changelog](https://github.com/PCMSolver/pcmsolver/blob/release/1.2/CHANGELOG.md) for more information on what changed in the library itself.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/959#issuecomment-386064898
https://github.com/psi4/psi4/issues/959#issuecomment-386064898:330,Testability,test,test,330,"# Known bugs; - PCM-ROHF is broken. See #999; # Library updates; - PCMSolver is updated to its latest version (1.2.1) This new release of PCMSolver is a maintenance release and no new features were added to Psi4 through this upgrade. However, more tests were added for PCM used in conjunction with ERI algorithms other than PK. A test was also added for geometry optimizations with PCM run using finite differences. See the [library's changelog](https://github.com/PCMSolver/pcmsolver/blob/release/1.2/CHANGELOG.md) for more information on what changed in the library itself.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/959#issuecomment-386064898
https://github.com/psi4/psi4/issues/959#issuecomment-386708662:343,Deployability,install,installs,343,"### Conda changes since v1.1; * MKL linked dynamically through free Anaconda-provided `mkl_rt.so` rather than statically linked. This saves size (since NumPy also uses `mkl_rt`) and eliminates incorrect results and threading damping associated with multiple programs accessing BLAS/LAPACK from multiple sources (#748, #755).; * Psi4 no longer installs a non-standard gcc5.2 alongside Psi4 on Linux (or gcc feature on Mac). This was necessary when conda's default 4.8.5 was too low for Psi4's c++11 requirements, but since conda's default has leaped to 7.2.0, we use default again. Note that only libraries (e.g., `libstdc++`) are installed alongside Psi4 now, not compilers (e.g., `g++`).; * (generic, not psi4, conda) `conda activate env` works multishell, not just on `bash`. Since conda 4.4 c. Dec 2017",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/959#issuecomment-386708662
https://github.com/psi4/psi4/issues/959#issuecomment-386708662:630,Deployability,install,installed,630,"### Conda changes since v1.1; * MKL linked dynamically through free Anaconda-provided `mkl_rt.so` rather than statically linked. This saves size (since NumPy also uses `mkl_rt`) and eliminates incorrect results and threading damping associated with multiple programs accessing BLAS/LAPACK from multiple sources (#748, #755).; * Psi4 no longer installs a non-standard gcc5.2 alongside Psi4 on Linux (or gcc feature on Mac). This was necessary when conda's default 4.8.5 was too low for Psi4's c++11 requirements, but since conda's default has leaped to 7.2.0, we use default again. Note that only libraries (e.g., `libstdc++`) are installed alongside Psi4 now, not compilers (e.g., `g++`).; * (generic, not psi4, conda) `conda activate env` works multishell, not just on `bash`. Since conda 4.4 c. Dec 2017",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/959#issuecomment-386708662
https://github.com/psi4/psi4/issues/959#issuecomment-386708662:267,Security,access,accessing,267,"### Conda changes since v1.1; * MKL linked dynamically through free Anaconda-provided `mkl_rt.so` rather than statically linked. This saves size (since NumPy also uses `mkl_rt`) and eliminates incorrect results and threading damping associated with multiple programs accessing BLAS/LAPACK from multiple sources (#748, #755).; * Psi4 no longer installs a non-standard gcc5.2 alongside Psi4 on Linux (or gcc feature on Mac). This was necessary when conda's default 4.8.5 was too low for Psi4's c++11 requirements, but since conda's default has leaped to 7.2.0, we use default again. Note that only libraries (e.g., `libstdc++`) are installed alongside Psi4 now, not compilers (e.g., `g++`).; * (generic, not psi4, conda) `conda activate env` works multishell, not just on `bash`. Since conda 4.4 c. Dec 2017",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/959#issuecomment-386708662
https://github.com/psi4/psi4/issues/959#issuecomment-388170219:4,Deployability,Upgrade,Upgrade,4,"# **Upgrade Guide**; ~~wavefunctions must declare a density fitted basis, even if density fitting is not used. This may be ""bypassed"" by selecting zero as the basis, as in:`wfn.set_basisset(""DF_BASIS_SCF"", core.BasisSet.zero_ao_basis_set())`~~; No longer necessary, per #1014 . # **Bug Fixes**; A bug causing IRCs to converge to the initial transition state was fixed (#882)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/959#issuecomment-388170219
https://github.com/psi4/psi4/issues/959#issuecomment-388170219:12,Usability,Guid,Guide,12,"# **Upgrade Guide**; ~~wavefunctions must declare a density fitted basis, even if density fitting is not used. This may be ""bypassed"" by selecting zero as the basis, as in:`wfn.set_basisset(""DF_BASIS_SCF"", core.BasisSet.zero_ao_basis_set())`~~; No longer necessary, per #1014 . # **Bug Fixes**; A bug causing IRCs to converge to the initial transition state was fixed (#882)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/959#issuecomment-388170219
https://github.com/psi4/psi4/issues/959#issuecomment-397891870:4,Deployability,release,release,4,1.2 release notes updated. As this is likely the final version please read through them and ensure that all changes have been properly added!,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/959#issuecomment-397891870
https://github.com/psi4/psi4/issues/959#issuecomment-397891870:18,Deployability,update,updated,18,1.2 release notes updated. As this is likely the final version please read through them and ensure that all changes have been properly added!,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/959#issuecomment-397891870
https://github.com/psi4/psi4/issues/959#issuecomment-404502624:19,Deployability,release,released,19,"Psi4 v1.2 has been released, closing this.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/959#issuecomment-404502624
https://github.com/psi4/psi4/issues/960#issuecomment-384961023:200,Deployability,release,release,200,"Reminder: Feature freeze is in 4 days (May 1st)! At this point this means that currently open PR's are the only ones that can likely get in. If you have a new feature wanting to get into the Psi4 1.2 release, please contact us today.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/960#issuecomment-384961023
https://github.com/psi4/psi4/issues/960#issuecomment-385264655:610,Integrability,interface,interface,610,"## Known Bugs for RC1. * [ ] Functionals wrong, [description](https://github.com/psi4/psi4/pull/961#issuecomment-385090273). Only seen for one computer, so just watch and report.; * [x] FCIDUMP for UHF refs failing, [description](https://github.com/psi4/psi4/issues/980). Shows up [in test case](https://github.com/psi4/psi4/blob/master/tests/fcidump/input.dat#L15-L23), currently suppressed.; * [x] New `MemJK` gives wrong answers when auxiliary basis is Cartesian, [for description, search ""cart"" here](https://github.com/psi4/psi4/pull/961); * [ ] ERD and SIMINT show all sorts of broken-like behavior upon interface. Only compilation I've gotten to work is a pure-GNU one, none with Intel. So some Intel vectorization operation is the suspect (though why is it still failing with debug ...).; * EDIT: simint problem is with Intel 2018 compilers; * 13 Jun EDIT: reasonable simint + Intel workaround is to compile simint with Intel 2017 compilers and feed that to a Psi4 compiled with Intel 2018. This is what's happening for the conda packages; * 13 Jun EDIT: ERD interface is broken and probably has been throughout v1.1. Possibly will be deprecated unless there's an uproar.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/960#issuecomment-385264655
https://github.com/psi4/psi4/issues/960#issuecomment-385264655:1067,Integrability,interface,interface,1067,"## Known Bugs for RC1. * [ ] Functionals wrong, [description](https://github.com/psi4/psi4/pull/961#issuecomment-385090273). Only seen for one computer, so just watch and report.; * [x] FCIDUMP for UHF refs failing, [description](https://github.com/psi4/psi4/issues/980). Shows up [in test case](https://github.com/psi4/psi4/blob/master/tests/fcidump/input.dat#L15-L23), currently suppressed.; * [x] New `MemJK` gives wrong answers when auxiliary basis is Cartesian, [for description, search ""cart"" here](https://github.com/psi4/psi4/pull/961); * [ ] ERD and SIMINT show all sorts of broken-like behavior upon interface. Only compilation I've gotten to work is a pure-GNU one, none with Intel. So some Intel vectorization operation is the suspect (though why is it still failing with debug ...).; * EDIT: simint problem is with Intel 2018 compilers; * 13 Jun EDIT: reasonable simint + Intel workaround is to compile simint with Intel 2017 compilers and feed that to a Psi4 compiled with Intel 2018. This is what's happening for the conda packages; * 13 Jun EDIT: ERD interface is broken and probably has been throughout v1.1. Possibly will be deprecated unless there's an uproar.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/960#issuecomment-385264655
https://github.com/psi4/psi4/issues/960#issuecomment-385264655:285,Testability,test,test,285,"## Known Bugs for RC1. * [ ] Functionals wrong, [description](https://github.com/psi4/psi4/pull/961#issuecomment-385090273). Only seen for one computer, so just watch and report.; * [x] FCIDUMP for UHF refs failing, [description](https://github.com/psi4/psi4/issues/980). Shows up [in test case](https://github.com/psi4/psi4/blob/master/tests/fcidump/input.dat#L15-L23), currently suppressed.; * [x] New `MemJK` gives wrong answers when auxiliary basis is Cartesian, [for description, search ""cart"" here](https://github.com/psi4/psi4/pull/961); * [ ] ERD and SIMINT show all sorts of broken-like behavior upon interface. Only compilation I've gotten to work is a pure-GNU one, none with Intel. So some Intel vectorization operation is the suspect (though why is it still failing with debug ...).; * EDIT: simint problem is with Intel 2018 compilers; * 13 Jun EDIT: reasonable simint + Intel workaround is to compile simint with Intel 2017 compilers and feed that to a Psi4 compiled with Intel 2018. This is what's happening for the conda packages; * 13 Jun EDIT: ERD interface is broken and probably has been throughout v1.1. Possibly will be deprecated unless there's an uproar.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/960#issuecomment-385264655
https://github.com/psi4/psi4/issues/960#issuecomment-385264655:337,Testability,test,tests,337,"## Known Bugs for RC1. * [ ] Functionals wrong, [description](https://github.com/psi4/psi4/pull/961#issuecomment-385090273). Only seen for one computer, so just watch and report.; * [x] FCIDUMP for UHF refs failing, [description](https://github.com/psi4/psi4/issues/980). Shows up [in test case](https://github.com/psi4/psi4/blob/master/tests/fcidump/input.dat#L15-L23), currently suppressed.; * [x] New `MemJK` gives wrong answers when auxiliary basis is Cartesian, [for description, search ""cart"" here](https://github.com/psi4/psi4/pull/961); * [ ] ERD and SIMINT show all sorts of broken-like behavior upon interface. Only compilation I've gotten to work is a pure-GNU one, none with Intel. So some Intel vectorization operation is the suspect (though why is it still failing with debug ...).; * EDIT: simint problem is with Intel 2018 compilers; * 13 Jun EDIT: reasonable simint + Intel workaround is to compile simint with Intel 2017 compilers and feed that to a Psi4 compiled with Intel 2018. This is what's happening for the conda packages; * 13 Jun EDIT: ERD interface is broken and probably has been throughout v1.1. Possibly will be deprecated unless there's an uproar.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/960#issuecomment-385264655
https://github.com/psi4/psi4/issues/960#issuecomment-387813447:85,Deployability,update,update-dfocc-requires-scf-type-disk-df,85,`MEM_JK` and `DISK_JK` need docs. Mentioned [here](http://forum.psicode.org/t/manual-update-dfocc-requires-scf-type-disk-df/904/2).,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/960#issuecomment-387813447
https://github.com/psi4/psi4/issues/960#issuecomment-391862109:113,Availability,avail,available,113,1.2rc2 was tagged last week. Please try it out and report problems here on GitHub. Linux installers and packages available from http://vergil.chemistry.gatech.edu/nu-psicode/install-v1.2rc2.html .,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/960#issuecomment-391862109
https://github.com/psi4/psi4/issues/960#issuecomment-391862109:89,Deployability,install,installers,89,1.2rc2 was tagged last week. Please try it out and report problems here on GitHub. Linux installers and packages available from http://vergil.chemistry.gatech.edu/nu-psicode/install-v1.2rc2.html .,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/960#issuecomment-391862109
https://github.com/psi4/psi4/issues/960#issuecomment-391862109:174,Deployability,install,install-,174,1.2rc2 was tagged last week. Please try it out and report problems here on GitHub. Linux installers and packages available from http://vergil.chemistry.gatech.edu/nu-psicode/install-v1.2rc2.html .,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/960#issuecomment-391862109
https://github.com/psi4/psi4/issues/960#issuecomment-397056473:1215,Availability,error,errors,1215,"## Notes on updating your conda distribution of Psi4; There's been a lot of changes to conda defaults channel and the Psi4 conda build since v1.1 c. May 2017. They've all been to the good, but they're drastic enough that a `conda update psi4` is not the right way to go.; #### Changes/Timeline; * July 2017 — Psi4 stops statically linking MKL into the binary and starts dynamically linking `mkl_rt` from conda; * Dec 2017 — Psi4 updates pybind11 from 2.0 to 2.2; * winter/spring 2017/2018 — On Linux, conda defaults channel switches from GCC 4.8.5 to 7.2.0. This means Psi4 doesn't have to ship a potentially interfering 5.2.0 alongside just for C++11 support. On Mac, conda defaults channel switches to a non-AppleClang Clang compiler that supports OpenMP. We can thread again! Also, conda defaults switches their NumPy to link to `mkl_rt` (from a different combination of MKL libs) (so any previous advice to grab NumPy from `-c intel` can be ignored).; * April/May/June 2018 — Psi4 follows defaults channel and incorporates all these improvements. We are currently compatible with defaults to the best of my knowledge (that is, no reason installing psi4 into your up-to-date base environment should cause symbol errors for psi4 or the base). conda-forge channel is still working on their update, so I wouldn't mix psi4 with serious (i.e., compiled) packages from there. #### Updating; * If you're working from Psi4 v1.1 (psi4conda) or any conda Psi4 from 2017, **do not update**. Another clue is if there's a `gcc5` in your `conda list`. Another clue is a `__svml` error.; * Instead, create a new environment for a new Psi4. You may need to `conda update conda` beforehand.; * Then `conda create -n {p4env} python={3.6} psi4 psi4-rt -c psi4/label/dev` You get to choose the `{...}` bits.; * There's at least one report that a fresh Anaconda doesn't work with psi while a fresh Miniconda does. This doesn't sound right to me, but it's worth noting and getting further reports.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/960#issuecomment-397056473
https://github.com/psi4/psi4/issues/960#issuecomment-397056473:1568,Availability,error,error,1568,"## Notes on updating your conda distribution of Psi4; There's been a lot of changes to conda defaults channel and the Psi4 conda build since v1.1 c. May 2017. They've all been to the good, but they're drastic enough that a `conda update psi4` is not the right way to go.; #### Changes/Timeline; * July 2017 — Psi4 stops statically linking MKL into the binary and starts dynamically linking `mkl_rt` from conda; * Dec 2017 — Psi4 updates pybind11 from 2.0 to 2.2; * winter/spring 2017/2018 — On Linux, conda defaults channel switches from GCC 4.8.5 to 7.2.0. This means Psi4 doesn't have to ship a potentially interfering 5.2.0 alongside just for C++11 support. On Mac, conda defaults channel switches to a non-AppleClang Clang compiler that supports OpenMP. We can thread again! Also, conda defaults switches their NumPy to link to `mkl_rt` (from a different combination of MKL libs) (so any previous advice to grab NumPy from `-c intel` can be ignored).; * April/May/June 2018 — Psi4 follows defaults channel and incorporates all these improvements. We are currently compatible with defaults to the best of my knowledge (that is, no reason installing psi4 into your up-to-date base environment should cause symbol errors for psi4 or the base). conda-forge channel is still working on their update, so I wouldn't mix psi4 with serious (i.e., compiled) packages from there. #### Updating; * If you're working from Psi4 v1.1 (psi4conda) or any conda Psi4 from 2017, **do not update**. Another clue is if there's a `gcc5` in your `conda list`. Another clue is a `__svml` error.; * Instead, create a new environment for a new Psi4. You may need to `conda update conda` beforehand.; * Then `conda create -n {p4env} python={3.6} psi4 psi4-rt -c psi4/label/dev` You get to choose the `{...}` bits.; * There's at least one report that a fresh Anaconda doesn't work with psi while a fresh Miniconda does. This doesn't sound right to me, but it's worth noting and getting further reports.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/960#issuecomment-397056473
https://github.com/psi4/psi4/issues/960#issuecomment-397056473:230,Deployability,update,update,230,"## Notes on updating your conda distribution of Psi4; There's been a lot of changes to conda defaults channel and the Psi4 conda build since v1.1 c. May 2017. They've all been to the good, but they're drastic enough that a `conda update psi4` is not the right way to go.; #### Changes/Timeline; * July 2017 — Psi4 stops statically linking MKL into the binary and starts dynamically linking `mkl_rt` from conda; * Dec 2017 — Psi4 updates pybind11 from 2.0 to 2.2; * winter/spring 2017/2018 — On Linux, conda defaults channel switches from GCC 4.8.5 to 7.2.0. This means Psi4 doesn't have to ship a potentially interfering 5.2.0 alongside just for C++11 support. On Mac, conda defaults channel switches to a non-AppleClang Clang compiler that supports OpenMP. We can thread again! Also, conda defaults switches their NumPy to link to `mkl_rt` (from a different combination of MKL libs) (so any previous advice to grab NumPy from `-c intel` can be ignored).; * April/May/June 2018 — Psi4 follows defaults channel and incorporates all these improvements. We are currently compatible with defaults to the best of my knowledge (that is, no reason installing psi4 into your up-to-date base environment should cause symbol errors for psi4 or the base). conda-forge channel is still working on their update, so I wouldn't mix psi4 with serious (i.e., compiled) packages from there. #### Updating; * If you're working from Psi4 v1.1 (psi4conda) or any conda Psi4 from 2017, **do not update**. Another clue is if there's a `gcc5` in your `conda list`. Another clue is a `__svml` error.; * Instead, create a new environment for a new Psi4. You may need to `conda update conda` beforehand.; * Then `conda create -n {p4env} python={3.6} psi4 psi4-rt -c psi4/label/dev` You get to choose the `{...}` bits.; * There's at least one report that a fresh Anaconda doesn't work with psi while a fresh Miniconda does. This doesn't sound right to me, but it's worth noting and getting further reports.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/960#issuecomment-397056473
https://github.com/psi4/psi4/issues/960#issuecomment-397056473:429,Deployability,update,updates,429,"## Notes on updating your conda distribution of Psi4; There's been a lot of changes to conda defaults channel and the Psi4 conda build since v1.1 c. May 2017. They've all been to the good, but they're drastic enough that a `conda update psi4` is not the right way to go.; #### Changes/Timeline; * July 2017 — Psi4 stops statically linking MKL into the binary and starts dynamically linking `mkl_rt` from conda; * Dec 2017 — Psi4 updates pybind11 from 2.0 to 2.2; * winter/spring 2017/2018 — On Linux, conda defaults channel switches from GCC 4.8.5 to 7.2.0. This means Psi4 doesn't have to ship a potentially interfering 5.2.0 alongside just for C++11 support. On Mac, conda defaults channel switches to a non-AppleClang Clang compiler that supports OpenMP. We can thread again! Also, conda defaults switches their NumPy to link to `mkl_rt` (from a different combination of MKL libs) (so any previous advice to grab NumPy from `-c intel` can be ignored).; * April/May/June 2018 — Psi4 follows defaults channel and incorporates all these improvements. We are currently compatible with defaults to the best of my knowledge (that is, no reason installing psi4 into your up-to-date base environment should cause symbol errors for psi4 or the base). conda-forge channel is still working on their update, so I wouldn't mix psi4 with serious (i.e., compiled) packages from there. #### Updating; * If you're working from Psi4 v1.1 (psi4conda) or any conda Psi4 from 2017, **do not update**. Another clue is if there's a `gcc5` in your `conda list`. Another clue is a `__svml` error.; * Instead, create a new environment for a new Psi4. You may need to `conda update conda` beforehand.; * Then `conda create -n {p4env} python={3.6} psi4 psi4-rt -c psi4/label/dev` You get to choose the `{...}` bits.; * There's at least one report that a fresh Anaconda doesn't work with psi while a fresh Miniconda does. This doesn't sound right to me, but it's worth noting and getting further reports.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/960#issuecomment-397056473
https://github.com/psi4/psi4/issues/960#issuecomment-397056473:1141,Deployability,install,installing,1141,"## Notes on updating your conda distribution of Psi4; There's been a lot of changes to conda defaults channel and the Psi4 conda build since v1.1 c. May 2017. They've all been to the good, but they're drastic enough that a `conda update psi4` is not the right way to go.; #### Changes/Timeline; * July 2017 — Psi4 stops statically linking MKL into the binary and starts dynamically linking `mkl_rt` from conda; * Dec 2017 — Psi4 updates pybind11 from 2.0 to 2.2; * winter/spring 2017/2018 — On Linux, conda defaults channel switches from GCC 4.8.5 to 7.2.0. This means Psi4 doesn't have to ship a potentially interfering 5.2.0 alongside just for C++11 support. On Mac, conda defaults channel switches to a non-AppleClang Clang compiler that supports OpenMP. We can thread again! Also, conda defaults switches their NumPy to link to `mkl_rt` (from a different combination of MKL libs) (so any previous advice to grab NumPy from `-c intel` can be ignored).; * April/May/June 2018 — Psi4 follows defaults channel and incorporates all these improvements. We are currently compatible with defaults to the best of my knowledge (that is, no reason installing psi4 into your up-to-date base environment should cause symbol errors for psi4 or the base). conda-forge channel is still working on their update, so I wouldn't mix psi4 with serious (i.e., compiled) packages from there. #### Updating; * If you're working from Psi4 v1.1 (psi4conda) or any conda Psi4 from 2017, **do not update**. Another clue is if there's a `gcc5` in your `conda list`. Another clue is a `__svml` error.; * Instead, create a new environment for a new Psi4. You may need to `conda update conda` beforehand.; * Then `conda create -n {p4env} python={3.6} psi4 psi4-rt -c psi4/label/dev` You get to choose the `{...}` bits.; * There's at least one report that a fresh Anaconda doesn't work with psi while a fresh Miniconda does. This doesn't sound right to me, but it's worth noting and getting further reports.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/960#issuecomment-397056473
https://github.com/psi4/psi4/issues/960#issuecomment-397056473:1291,Deployability,update,update,1291,"## Notes on updating your conda distribution of Psi4; There's been a lot of changes to conda defaults channel and the Psi4 conda build since v1.1 c. May 2017. They've all been to the good, but they're drastic enough that a `conda update psi4` is not the right way to go.; #### Changes/Timeline; * July 2017 — Psi4 stops statically linking MKL into the binary and starts dynamically linking `mkl_rt` from conda; * Dec 2017 — Psi4 updates pybind11 from 2.0 to 2.2; * winter/spring 2017/2018 — On Linux, conda defaults channel switches from GCC 4.8.5 to 7.2.0. This means Psi4 doesn't have to ship a potentially interfering 5.2.0 alongside just for C++11 support. On Mac, conda defaults channel switches to a non-AppleClang Clang compiler that supports OpenMP. We can thread again! Also, conda defaults switches their NumPy to link to `mkl_rt` (from a different combination of MKL libs) (so any previous advice to grab NumPy from `-c intel` can be ignored).; * April/May/June 2018 — Psi4 follows defaults channel and incorporates all these improvements. We are currently compatible with defaults to the best of my knowledge (that is, no reason installing psi4 into your up-to-date base environment should cause symbol errors for psi4 or the base). conda-forge channel is still working on their update, so I wouldn't mix psi4 with serious (i.e., compiled) packages from there. #### Updating; * If you're working from Psi4 v1.1 (psi4conda) or any conda Psi4 from 2017, **do not update**. Another clue is if there's a `gcc5` in your `conda list`. Another clue is a `__svml` error.; * Instead, create a new environment for a new Psi4. You may need to `conda update conda` beforehand.; * Then `conda create -n {p4env} python={3.6} psi4 psi4-rt -c psi4/label/dev` You get to choose the `{...}` bits.; * There's at least one report that a fresh Anaconda doesn't work with psi while a fresh Miniconda does. This doesn't sound right to me, but it's worth noting and getting further reports.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/960#issuecomment-397056473
https://github.com/psi4/psi4/issues/960#issuecomment-397056473:1473,Deployability,update,update,1473,"## Notes on updating your conda distribution of Psi4; There's been a lot of changes to conda defaults channel and the Psi4 conda build since v1.1 c. May 2017. They've all been to the good, but they're drastic enough that a `conda update psi4` is not the right way to go.; #### Changes/Timeline; * July 2017 — Psi4 stops statically linking MKL into the binary and starts dynamically linking `mkl_rt` from conda; * Dec 2017 — Psi4 updates pybind11 from 2.0 to 2.2; * winter/spring 2017/2018 — On Linux, conda defaults channel switches from GCC 4.8.5 to 7.2.0. This means Psi4 doesn't have to ship a potentially interfering 5.2.0 alongside just for C++11 support. On Mac, conda defaults channel switches to a non-AppleClang Clang compiler that supports OpenMP. We can thread again! Also, conda defaults switches their NumPy to link to `mkl_rt` (from a different combination of MKL libs) (so any previous advice to grab NumPy from `-c intel` can be ignored).; * April/May/June 2018 — Psi4 follows defaults channel and incorporates all these improvements. We are currently compatible with defaults to the best of my knowledge (that is, no reason installing psi4 into your up-to-date base environment should cause symbol errors for psi4 or the base). conda-forge channel is still working on their update, so I wouldn't mix psi4 with serious (i.e., compiled) packages from there. #### Updating; * If you're working from Psi4 v1.1 (psi4conda) or any conda Psi4 from 2017, **do not update**. Another clue is if there's a `gcc5` in your `conda list`. Another clue is a `__svml` error.; * Instead, create a new environment for a new Psi4. You may need to `conda update conda` beforehand.; * Then `conda create -n {p4env} python={3.6} psi4 psi4-rt -c psi4/label/dev` You get to choose the `{...}` bits.; * There's at least one report that a fresh Anaconda doesn't work with psi while a fresh Miniconda does. This doesn't sound right to me, but it's worth noting and getting further reports.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/960#issuecomment-397056473
https://github.com/psi4/psi4/issues/960#issuecomment-397056473:1651,Deployability,update,update,1651,"## Notes on updating your conda distribution of Psi4; There's been a lot of changes to conda defaults channel and the Psi4 conda build since v1.1 c. May 2017. They've all been to the good, but they're drastic enough that a `conda update psi4` is not the right way to go.; #### Changes/Timeline; * July 2017 — Psi4 stops statically linking MKL into the binary and starts dynamically linking `mkl_rt` from conda; * Dec 2017 — Psi4 updates pybind11 from 2.0 to 2.2; * winter/spring 2017/2018 — On Linux, conda defaults channel switches from GCC 4.8.5 to 7.2.0. This means Psi4 doesn't have to ship a potentially interfering 5.2.0 alongside just for C++11 support. On Mac, conda defaults channel switches to a non-AppleClang Clang compiler that supports OpenMP. We can thread again! Also, conda defaults switches their NumPy to link to `mkl_rt` (from a different combination of MKL libs) (so any previous advice to grab NumPy from `-c intel` can be ignored).; * April/May/June 2018 — Psi4 follows defaults channel and incorporates all these improvements. We are currently compatible with defaults to the best of my knowledge (that is, no reason installing psi4 into your up-to-date base environment should cause symbol errors for psi4 or the base). conda-forge channel is still working on their update, so I wouldn't mix psi4 with serious (i.e., compiled) packages from there. #### Updating; * If you're working from Psi4 v1.1 (psi4conda) or any conda Psi4 from 2017, **do not update**. Another clue is if there's a `gcc5` in your `conda list`. Another clue is a `__svml` error.; * Instead, create a new environment for a new Psi4. You may need to `conda update conda` beforehand.; * Then `conda create -n {p4env} python={3.6} psi4 psi4-rt -c psi4/label/dev` You get to choose the `{...}` bits.; * There's at least one report that a fresh Anaconda doesn't work with psi while a fresh Miniconda does. This doesn't sound right to me, but it's worth noting and getting further reports.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/960#issuecomment-397056473
https://github.com/psi4/psi4/issues/960#issuecomment-404502698:19,Deployability,release,released,19,"Psi4 v1.2 has been released, closing this.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/960#issuecomment-404502698
https://github.com/psi4/psi4/pull/961#issuecomment-381154469:71,Performance,perform,performance,71,This is the first time I've seen the timings. Really impressive stuff; performance boosts on NUMA arch is a really big deal.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-381154469
https://github.com/psi4/psi4/pull/961#issuecomment-382565081:22,Testability,test,test,22,"Matt can you run your test cases for a pure GGA (BLYP is fine). Be curious to see the timing difference there. I have a hunch that you may be a bit faster than you would expect not due to pure J construction cost, but data movement for the entire build.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-382565081
https://github.com/psi4/psi4/pull/961#issuecomment-382594587:449,Performance,load,load,449,"Okay, here are some other considerations that must be accounted for when constructing the correct DFJK object:. 1. PackedDFJK if do_wK_ else SymmDFJK; 2. SymmDFJK if SymmDFJK->AO_core() else PackedDFJK. Note that the above two will require knowledge of `do_wK_` and `doubles_` **in the JK constructor**. 3. PackedDFJK if procedure relies intrinsically on old DFJK else SymmDFJK. (3.) might be tricky. `DFJK` used `df_ints_io_` to prepare, save, and load the 3-center integrals. Some procedures in Psi4 intrinsically rely on being able to load files produced by DFJK. So not only will we need avoid using SymmDFJK in those procedures, but we might also need to do so in preemptive procedures (such as SCF) so that the files can be properly prepared for use later on.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-382594587
https://github.com/psi4/psi4/pull/961#issuecomment-382594587:538,Performance,load,load,538,"Okay, here are some other considerations that must be accounted for when constructing the correct DFJK object:. 1. PackedDFJK if do_wK_ else SymmDFJK; 2. SymmDFJK if SymmDFJK->AO_core() else PackedDFJK. Note that the above two will require knowledge of `do_wK_` and `doubles_` **in the JK constructor**. 3. PackedDFJK if procedure relies intrinsically on old DFJK else SymmDFJK. (3.) might be tricky. `DFJK` used `df_ints_io_` to prepare, save, and load the 3-center integrals. Some procedures in Psi4 intrinsically rely on being able to load files produced by DFJK. So not only will we need avoid using SymmDFJK in those procedures, but we might also need to do so in preemptive procedures (such as SCF) so that the files can be properly prepared for use later on.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-382594587
https://github.com/psi4/psi4/pull/961#issuecomment-382594587:592,Safety,avoid,avoid,592,"Okay, here are some other considerations that must be accounted for when constructing the correct DFJK object:. 1. PackedDFJK if do_wK_ else SymmDFJK; 2. SymmDFJK if SymmDFJK->AO_core() else PackedDFJK. Note that the above two will require knowledge of `do_wK_` and `doubles_` **in the JK constructor**. 3. PackedDFJK if procedure relies intrinsically on old DFJK else SymmDFJK. (3.) might be tricky. `DFJK` used `df_ints_io_` to prepare, save, and load the 3-center integrals. Some procedures in Psi4 intrinsically rely on being able to load files produced by DFJK. So not only will we need avoid using SymmDFJK in those procedures, but we might also need to do so in preemptive procedures (such as SCF) so that the files can be properly prepared for use later on.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-382594587
https://github.com/psi4/psi4/pull/961#issuecomment-382894140:310,Availability,down,downstream,310,"After a discussion, the plan is to:. * Implement SymmDFJK vs PackedDFJK logic in the DFJK constructor, thus requiring memory and wK info at initialization time that we don't now.; * Overload the constructor so that there's a default and an elaborate signature; * For methods that require PackedDFJK because of downstream data structure assumptions, that will be handled in proc.py with a force_*dfjk flag passed to scf_helper; * SymmDFJK aka Matt's will be named MemDFJK. PackedDFJK aka Rob's will be named DiskDFJK. since the actual implementations aren't as orthogonal as those names suggest, references/more explicit explanations will be in HF and/or SCF_TYPE docstrings; * `SCF_TYPE` option will have three relevant choices; * `DF` formerly went to Rob's code. now will choose the best DFJK from available info. will be conservative on memory estimation; * `MEM_DF` will always go to Matt's code so that a user can test both or be smarter than the logic depending on known hardware/mem considerations; * `DISK_DF` will always go to Rob's code; * The read_options docstring for SCF_TYPE will label the MEM_DF and DISK_DF as expert choices; * In future, other algorithms will follow similar DF|MEM_DF|DISK_DF options in their MTD_TYPE algorithm controllers. Any further ideas on labeling these things welcome. @CDSherrill . Edits:. * `SymmDF` and `DFHelper` classes shall go to Pascal case",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-382894140
https://github.com/psi4/psi4/pull/961#issuecomment-382894140:800,Availability,avail,available,800,"After a discussion, the plan is to:. * Implement SymmDFJK vs PackedDFJK logic in the DFJK constructor, thus requiring memory and wK info at initialization time that we don't now.; * Overload the constructor so that there's a default and an elaborate signature; * For methods that require PackedDFJK because of downstream data structure assumptions, that will be handled in proc.py with a force_*dfjk flag passed to scf_helper; * SymmDFJK aka Matt's will be named MemDFJK. PackedDFJK aka Rob's will be named DiskDFJK. since the actual implementations aren't as orthogonal as those names suggest, references/more explicit explanations will be in HF and/or SCF_TYPE docstrings; * `SCF_TYPE` option will have three relevant choices; * `DF` formerly went to Rob's code. now will choose the best DFJK from available info. will be conservative on memory estimation; * `MEM_DF` will always go to Matt's code so that a user can test both or be smarter than the logic depending on known hardware/mem considerations; * `DISK_DF` will always go to Rob's code; * The read_options docstring for SCF_TYPE will label the MEM_DF and DISK_DF as expert choices; * In future, other algorithms will follow similar DF|MEM_DF|DISK_DF options in their MTD_TYPE algorithm controllers. Any further ideas on labeling these things welcome. @CDSherrill . Edits:. * `SymmDF` and `DFHelper` classes shall go to Pascal case",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-382894140
https://github.com/psi4/psi4/pull/961#issuecomment-382894140:958,Integrability,depend,depending,958,"After a discussion, the plan is to:. * Implement SymmDFJK vs PackedDFJK logic in the DFJK constructor, thus requiring memory and wK info at initialization time that we don't now.; * Overload the constructor so that there's a default and an elaborate signature; * For methods that require PackedDFJK because of downstream data structure assumptions, that will be handled in proc.py with a force_*dfjk flag passed to scf_helper; * SymmDFJK aka Matt's will be named MemDFJK. PackedDFJK aka Rob's will be named DiskDFJK. since the actual implementations aren't as orthogonal as those names suggest, references/more explicit explanations will be in HF and/or SCF_TYPE docstrings; * `SCF_TYPE` option will have three relevant choices; * `DF` formerly went to Rob's code. now will choose the best DFJK from available info. will be conservative on memory estimation; * `MEM_DF` will always go to Matt's code so that a user can test both or be smarter than the logic depending on known hardware/mem considerations; * `DISK_DF` will always go to Rob's code; * The read_options docstring for SCF_TYPE will label the MEM_DF and DISK_DF as expert choices; * In future, other algorithms will follow similar DF|MEM_DF|DISK_DF options in their MTD_TYPE algorithm controllers. Any further ideas on labeling these things welcome. @CDSherrill . Edits:. * `SymmDF` and `DFHelper` classes shall go to Pascal case",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-382894140
https://github.com/psi4/psi4/pull/961#issuecomment-382894140:72,Testability,log,logic,72,"After a discussion, the plan is to:. * Implement SymmDFJK vs PackedDFJK logic in the DFJK constructor, thus requiring memory and wK info at initialization time that we don't now.; * Overload the constructor so that there's a default and an elaborate signature; * For methods that require PackedDFJK because of downstream data structure assumptions, that will be handled in proc.py with a force_*dfjk flag passed to scf_helper; * SymmDFJK aka Matt's will be named MemDFJK. PackedDFJK aka Rob's will be named DiskDFJK. since the actual implementations aren't as orthogonal as those names suggest, references/more explicit explanations will be in HF and/or SCF_TYPE docstrings; * `SCF_TYPE` option will have three relevant choices; * `DF` formerly went to Rob's code. now will choose the best DFJK from available info. will be conservative on memory estimation; * `MEM_DF` will always go to Matt's code so that a user can test both or be smarter than the logic depending on known hardware/mem considerations; * `DISK_DF` will always go to Rob's code; * The read_options docstring for SCF_TYPE will label the MEM_DF and DISK_DF as expert choices; * In future, other algorithms will follow similar DF|MEM_DF|DISK_DF options in their MTD_TYPE algorithm controllers. Any further ideas on labeling these things welcome. @CDSherrill . Edits:. * `SymmDF` and `DFHelper` classes shall go to Pascal case",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-382894140
https://github.com/psi4/psi4/pull/961#issuecomment-382894140:919,Testability,test,test,919,"After a discussion, the plan is to:. * Implement SymmDFJK vs PackedDFJK logic in the DFJK constructor, thus requiring memory and wK info at initialization time that we don't now.; * Overload the constructor so that there's a default and an elaborate signature; * For methods that require PackedDFJK because of downstream data structure assumptions, that will be handled in proc.py with a force_*dfjk flag passed to scf_helper; * SymmDFJK aka Matt's will be named MemDFJK. PackedDFJK aka Rob's will be named DiskDFJK. since the actual implementations aren't as orthogonal as those names suggest, references/more explicit explanations will be in HF and/or SCF_TYPE docstrings; * `SCF_TYPE` option will have three relevant choices; * `DF` formerly went to Rob's code. now will choose the best DFJK from available info. will be conservative on memory estimation; * `MEM_DF` will always go to Matt's code so that a user can test both or be smarter than the logic depending on known hardware/mem considerations; * `DISK_DF` will always go to Rob's code; * The read_options docstring for SCF_TYPE will label the MEM_DF and DISK_DF as expert choices; * In future, other algorithms will follow similar DF|MEM_DF|DISK_DF options in their MTD_TYPE algorithm controllers. Any further ideas on labeling these things welcome. @CDSherrill . Edits:. * `SymmDF` and `DFHelper` classes shall go to Pascal case",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-382894140
https://github.com/psi4/psi4/pull/961#issuecomment-382894140:952,Testability,log,logic,952,"After a discussion, the plan is to:. * Implement SymmDFJK vs PackedDFJK logic in the DFJK constructor, thus requiring memory and wK info at initialization time that we don't now.; * Overload the constructor so that there's a default and an elaborate signature; * For methods that require PackedDFJK because of downstream data structure assumptions, that will be handled in proc.py with a force_*dfjk flag passed to scf_helper; * SymmDFJK aka Matt's will be named MemDFJK. PackedDFJK aka Rob's will be named DiskDFJK. since the actual implementations aren't as orthogonal as those names suggest, references/more explicit explanations will be in HF and/or SCF_TYPE docstrings; * `SCF_TYPE` option will have three relevant choices; * `DF` formerly went to Rob's code. now will choose the best DFJK from available info. will be conservative on memory estimation; * `MEM_DF` will always go to Matt's code so that a user can test both or be smarter than the logic depending on known hardware/mem considerations; * `DISK_DF` will always go to Rob's code; * The read_options docstring for SCF_TYPE will label the MEM_DF and DISK_DF as expert choices; * In future, other algorithms will follow similar DF|MEM_DF|DISK_DF options in their MTD_TYPE algorithm controllers. Any further ideas on labeling these things welcome. @CDSherrill . Edits:. * `SymmDF` and `DFHelper` classes shall go to Pascal case",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-382894140
https://github.com/psi4/psi4/pull/961#issuecomment-383972297:48,Usability,simpl,simply,48,"` psi4numpy-rhf-hessian` for whatever reason is simply not completing on Travis, works fine on my laptop. Unsure how to debug this.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-383972297
https://github.com/psi4/psi4/pull/961#issuecomment-383976549:150,Testability,test,tests,150,"gcc-only for the `psi4numpy-rhf-hessian` trouble does seem strange. In any case, can you rebase when you have a chance, @schiebermc, and retry a full tests (libxc is going to build from source now)?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-383976549
https://github.com/psi4/psi4/pull/961#issuecomment-384197920:237,Availability,error,errors,237,"I've run full tests with both py27 & py36 and both report the following. The last two are b/c hungarian not installed – not a problem. The first two are b/c MemDFJK isn't handling Cartesian basis sets right. I'm not sure how those other errors you were seeing came about, @schiebermc. Was there a point in this branch where full tests was clean? There's been upheaval to `master`, so we could reason from there. ```; The following tests FAILED:; 	187 - fd-freq-energy-large (Failed); 	212 - mints8 (Failed); 	375 - pywrap-align (Failed); 	376 - pywrap-align-chiral (Failed); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-384197920
https://github.com/psi4/psi4/pull/961#issuecomment-384197920:108,Deployability,install,installed,108,"I've run full tests with both py27 & py36 and both report the following. The last two are b/c hungarian not installed – not a problem. The first two are b/c MemDFJK isn't handling Cartesian basis sets right. I'm not sure how those other errors you were seeing came about, @schiebermc. Was there a point in this branch where full tests was clean? There's been upheaval to `master`, so we could reason from there. ```; The following tests FAILED:; 	187 - fd-freq-energy-large (Failed); 	212 - mints8 (Failed); 	375 - pywrap-align (Failed); 	376 - pywrap-align-chiral (Failed); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-384197920
https://github.com/psi4/psi4/pull/961#issuecomment-384197920:461,Energy Efficiency,energy,energy-large,461,"I've run full tests with both py27 & py36 and both report the following. The last two are b/c hungarian not installed – not a problem. The first two are b/c MemDFJK isn't handling Cartesian basis sets right. I'm not sure how those other errors you were seeing came about, @schiebermc. Was there a point in this branch where full tests was clean? There's been upheaval to `master`, so we could reason from there. ```; The following tests FAILED:; 	187 - fd-freq-energy-large (Failed); 	212 - mints8 (Failed); 	375 - pywrap-align (Failed); 	376 - pywrap-align-chiral (Failed); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-384197920
https://github.com/psi4/psi4/pull/961#issuecomment-384197920:14,Testability,test,tests,14,"I've run full tests with both py27 & py36 and both report the following. The last two are b/c hungarian not installed – not a problem. The first two are b/c MemDFJK isn't handling Cartesian basis sets right. I'm not sure how those other errors you were seeing came about, @schiebermc. Was there a point in this branch where full tests was clean? There's been upheaval to `master`, so we could reason from there. ```; The following tests FAILED:; 	187 - fd-freq-energy-large (Failed); 	212 - mints8 (Failed); 	375 - pywrap-align (Failed); 	376 - pywrap-align-chiral (Failed); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-384197920
https://github.com/psi4/psi4/pull/961#issuecomment-384197920:329,Testability,test,tests,329,"I've run full tests with both py27 & py36 and both report the following. The last two are b/c hungarian not installed – not a problem. The first two are b/c MemDFJK isn't handling Cartesian basis sets right. I'm not sure how those other errors you were seeing came about, @schiebermc. Was there a point in this branch where full tests was clean? There's been upheaval to `master`, so we could reason from there. ```; The following tests FAILED:; 	187 - fd-freq-energy-large (Failed); 	212 - mints8 (Failed); 	375 - pywrap-align (Failed); 	376 - pywrap-align-chiral (Failed); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-384197920
https://github.com/psi4/psi4/pull/961#issuecomment-384197920:431,Testability,test,tests,431,"I've run full tests with both py27 & py36 and both report the following. The last two are b/c hungarian not installed – not a problem. The first two are b/c MemDFJK isn't handling Cartesian basis sets right. I'm not sure how those other errors you were seeing came about, @schiebermc. Was there a point in this branch where full tests was clean? There's been upheaval to `master`, so we could reason from there. ```; The following tests FAILED:; 	187 - fd-freq-energy-large (Failed); 	212 - mints8 (Failed); 	375 - pywrap-align (Failed); 	376 - pywrap-align-chiral (Failed); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-384197920
https://github.com/psi4/psi4/pull/961#issuecomment-384479640:48,Usability,simpl,simply,48,"Well, still confused why the p4n-rhf-hessian is simply timing out. Anyone have a GCC that they can try to replicate with?. @schiebermc Thats why code review exists!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-384479640
https://github.com/psi4/psi4/pull/961#issuecomment-384510030:4548,Deployability,install,install,4548," of atoms: 3; Number of AO shells: 5; Number of primitives: 15; Number of atomic orbitals: 7; Number of basis functions: 7. Integral cutoff 1.00e-12; Number of threads: 2. Performing in-core PK; Using 812 doubles for integral storage.; We computed 133 shell quartets total.; Whereas there are 120 unique shell quartets.; 10.83 percent of shell quartets recomputed by reordering.; ==> DiskJK: Disk-Based J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: No; Memory (MB): 375; Schwarz Cutoff: 1E-12. OpenMP threads: 2; Minimum eigenvalue in the overlap matrix is 4.3422219878E-01.; Using Symmetric Orthogonalization. SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF. ^C; Program received signal SIGINT, Interrupt.; 0x00007fffe3ca696f in psi::DFHelper::contract_metric_AO_core_symm(double*, double*, unsigned long, unsigned long) [clone ._omp_fn.16] (); from /home/psilocaluser/gits/hrw-qcdb/objdir-gnu36/stage/usr/local/psi4/lib/psi4/core.so; Missing separate debuginfos, use: debuginfo-install glibc-2.17-157.el7_3.1.x86_64 libuuid-2.23.2-33.el7.x86_64; (gdb) bt; #0 0x00007fffe3ca696f in psi::DFHelper::contract_metric_AO_core_symm(double*, double*, unsigned long, unsigned long) [clone ._omp_fn.16] (); from /home/psilocaluser/gits/hrw-qcdb/objdir-gnu36/stage/usr/local/psi4/lib/psi4/core.so; #1 0x00007fffec18dc21 in __kmp_api_GOMP_parallel_40_alias () from /home/psilocaluser/toolchainconda/envs/p4dev36/lib/python3.6/site-packages/numpy/../../../libiomp5.so; #2 0x00007fffe3cab007 in psi::DFHelper::contract_metric_AO_core_symm(double*, double*, unsigned long, unsigned long) (); from /home/psilocaluser/gits/hrw-qcdb/objdir-gnu36/stage/usr/local/psi4/lib/psi4/core.so; #3 0x00007fffe3cbb4ae in psi::DFHelper::prepare_AO_core() () from /home/psilocaluser/gits/hrw-qcdb/objdir-gnu36/stage/usr/local/psi4/lib/psi4/core.so; #4 0x00007fffe3cbbb99 in psi::DFHelper::initialize() () from /home/psilocaluser/gits/hrw-qcdb/objdir-gnu36/stage/usr/local/psi4/lib/psi4/core.so",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-384510030
https://github.com/psi4/psi4/pull/961#issuecomment-384510030:71,Energy Efficiency,energy,energy,71,"Trouble is nothing to do with Hessian (it's hanging at the preliminary energy calc) and everything to do with setting more than one thread. ```; (p4dev36) psilocaluser@bash:psinet:/home/psilocaluser/gits/hrw-qcdb/objdir-gnu36: ((detached from matt/SYMM_JK)) cat ../tests/psi4numpy/rhf-hessian/input.py ; # -*- coding: utf-8 -*- . import time; import numpy as np; np.set_printoptions(precision=15, linewidth=200, suppress=True); import psi4. #psi4.set_memory(int(1e9), False); #psi4.core.set_output_file('output.dat', False); psi4.core.set_num_threads(2). mol = psi4.geometry(""""""; O; H 1 1.1; H 1 1.1 2 104; symmetry c1; """"""). psi4.core.set_active_molecule(mol). options = {'BASIS':'STO-3G', 'SCF_TYPE':'PK',; 'E_CONVERGENCE':1e-10,; 'D_CONVERGENCE':1e-10; }. psi4.set_options(options). rhf_e, wfn = psi4.energy('SCF', return_wfn=True); ```. Debug traceback shows hang is in SAD guess at `DFHelper::contract_metric_AO_core_symm`. ```; (p4dev36) psilocaluser@bash:psinet:/home/psilocaluser/gits/hrw-qcdb/objdir-gnu36: ((detached from matt/SYMM_JK)) gdb --args python ../tests/psi4numpy/rhf-hessian/input.py ; GNU gdb (GDB) Red Hat Enterprise Linux 7.6.1-94.el7; Copyright (C) 2013 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Reading symbols from /home/psilocaluser/toolchainconda/envs/p4dev36/bin/python3.6...done.; (gdb) run; Starting program: /home/psilocaluser/toolchainconda/envs/p4dev36/bin/python ../tests/psi4numpy/rhf-hessian/input.py; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Missing separate debuginfo for /home/psilocaluser/toolchaincond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-384510030
https://github.com/psi4/psi4/pull/961#issuecomment-384510030:804,Energy Efficiency,energy,energy,804,"Trouble is nothing to do with Hessian (it's hanging at the preliminary energy calc) and everything to do with setting more than one thread. ```; (p4dev36) psilocaluser@bash:psinet:/home/psilocaluser/gits/hrw-qcdb/objdir-gnu36: ((detached from matt/SYMM_JK)) cat ../tests/psi4numpy/rhf-hessian/input.py ; # -*- coding: utf-8 -*- . import time; import numpy as np; np.set_printoptions(precision=15, linewidth=200, suppress=True); import psi4. #psi4.set_memory(int(1e9), False); #psi4.core.set_output_file('output.dat', False); psi4.core.set_num_threads(2). mol = psi4.geometry(""""""; O; H 1 1.1; H 1 1.1 2 104; symmetry c1; """"""). psi4.core.set_active_molecule(mol). options = {'BASIS':'STO-3G', 'SCF_TYPE':'PK',; 'E_CONVERGENCE':1e-10,; 'D_CONVERGENCE':1e-10; }. psi4.set_options(options). rhf_e, wfn = psi4.energy('SCF', return_wfn=True); ```. Debug traceback shows hang is in SAD guess at `DFHelper::contract_metric_AO_core_symm`. ```; (p4dev36) psilocaluser@bash:psinet:/home/psilocaluser/gits/hrw-qcdb/objdir-gnu36: ((detached from matt/SYMM_JK)) gdb --args python ../tests/psi4numpy/rhf-hessian/input.py ; GNU gdb (GDB) Red Hat Enterprise Linux 7.6.1-94.el7; Copyright (C) 2013 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Reading symbols from /home/psilocaluser/toolchainconda/envs/p4dev36/bin/python3.6...done.; (gdb) run; Starting program: /home/psilocaluser/toolchainconda/envs/p4dev36/bin/python ../tests/psi4numpy/rhf-hessian/input.py; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Missing separate debuginfo for /home/psilocaluser/toolchaincond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-384510030
https://github.com/psi4/psi4/pull/961#issuecomment-384510030:1480,Modifiability,config,configured,1480,"utput_file('output.dat', False); psi4.core.set_num_threads(2). mol = psi4.geometry(""""""; O; H 1 1.1; H 1 1.1 2 104; symmetry c1; """"""). psi4.core.set_active_molecule(mol). options = {'BASIS':'STO-3G', 'SCF_TYPE':'PK',; 'E_CONVERGENCE':1e-10,; 'D_CONVERGENCE':1e-10; }. psi4.set_options(options). rhf_e, wfn = psi4.energy('SCF', return_wfn=True); ```. Debug traceback shows hang is in SAD guess at `DFHelper::contract_metric_AO_core_symm`. ```; (p4dev36) psilocaluser@bash:psinet:/home/psilocaluser/gits/hrw-qcdb/objdir-gnu36: ((detached from matt/SYMM_JK)) gdb --args python ../tests/psi4numpy/rhf-hessian/input.py ; GNU gdb (GDB) Red Hat Enterprise Linux 7.6.1-94.el7; Copyright (C) 2013 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Reading symbols from /home/psilocaluser/toolchainconda/envs/p4dev36/bin/python3.6...done.; (gdb) run; Starting program: /home/psilocaluser/toolchainconda/envs/p4dev36/bin/python ../tests/psi4numpy/rhf-hessian/input.py; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Missing separate debuginfo for /home/psilocaluser/toolchainconda/envs/p4dev36/lib/python3.6/site-packages/numpy/../../../libiomp5.so; Detaching after fork from child process 16215.; Detaching after fork from child process 16216.; Detaching after fork from child process 16217.; Detaching after fork from child process 16218.; Detaching after fork from child process 16219.; Threads set to 2 by Python driver. *** tstart() called on psinet; *** at Wed Apr 25 23:55:59 2018. => Loading Basis Set <=. Name: STO-3G; Role: ORBITAL; Keyword: BASIS; atoms 1 entr",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-384510030
https://github.com/psi4/psi4/pull/961#issuecomment-384510030:2414,Performance,Load,Loading,2414," copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Reading symbols from /home/psilocaluser/toolchainconda/envs/p4dev36/bin/python3.6...done.; (gdb) run; Starting program: /home/psilocaluser/toolchainconda/envs/p4dev36/bin/python ../tests/psi4numpy/rhf-hessian/input.py; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Missing separate debuginfo for /home/psilocaluser/toolchainconda/envs/p4dev36/lib/python3.6/site-packages/numpy/../../../libiomp5.so; Detaching after fork from child process 16215.; Detaching after fork from child process 16216.; Detaching after fork from child process 16217.; Detaching after fork from child process 16218.; Detaching after fork from child process 16219.; Threads set to 2 by Python driver. *** tstart() called on psinet; *** at Wed Apr 25 23:55:59 2018. => Loading Basis Set <=. Name: STO-3G; Role: ORBITAL; Keyword: BASIS; atoms 1 entry O line 81 file /home/psilocaluser/gits/hrw-qcdb/objdir-gnu36/stage/usr/local/psi4/share/psi4/basis/sto-3g.gbs ; atoms 2-3 entry H line 19 file /home/psilocaluser/gits/hrw-qcdb/objdir-gnu36/stage/usr/local/psi4/share/psi4/basis/sto-3g.gbs . There are an even number of electrons - assuming singlet.; Specify the multiplicity in the molecule input block. ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel Smith; RHF Reference; 2 Threads, 500 MiB Core; ---------------------------------------------------------. ... ==> Pre-Iterations <==. -------------------------------------------------------; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; -------------------------------------------------------; A 7 7 0 0 0 0; -------------------------------------------------------; Total 7 7 5 5 5 0; -------------------------------------------------------. [New Thread 0x7ff",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-384510030
https://github.com/psi4/psi4/pull/961#issuecomment-384510030:3704,Performance,Perform,Performing,3704," There are an even number of electrons - assuming singlet.; Specify the multiplicity in the molecule input block. ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel Smith; RHF Reference; 2 Threads, 500 MiB Core; ---------------------------------------------------------. ... ==> Pre-Iterations <==. -------------------------------------------------------; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; -------------------------------------------------------; A 7 7 0 0 0 0; -------------------------------------------------------; Total 7 7 5 5 5 0; -------------------------------------------------------. [New Thread 0x7fffd6116780 (LWP 16220)]; ==> Integral Setup <==. Using in-core PK algorithm.; Calculation information:; Number of atoms: 3; Number of AO shells: 5; Number of primitives: 15; Number of atomic orbitals: 7; Number of basis functions: 7. Integral cutoff 1.00e-12; Number of threads: 2. Performing in-core PK; Using 812 doubles for integral storage.; We computed 133 shell quartets total.; Whereas there are 120 unique shell quartets.; 10.83 percent of shell quartets recomputed by reordering.; ==> DiskJK: Disk-Based J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: No; Memory (MB): 375; Schwarz Cutoff: 1E-12. OpenMP threads: 2; Minimum eigenvalue in the overlap matrix is 4.3422219878E-01.; Using Symmetric Orthogonalization. SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF. ^C; Program received signal SIGINT, Interrupt.; 0x00007fffe3ca696f in psi::DFHelper::contract_metric_AO_core_symm(double*, double*, unsigned long, unsigned long) [clone ._omp_fn.16] (); from /home/psilocaluser/gits/hrw-qcdb/objdir-gnu36/stage/usr/local/psi4/lib/psi4/core.so; Missing separate debuginfos, use: debuginfo-install glibc-2.17-157.el7_3.1.x86_64 libuuid-2.23.2-33.el7.x86_64; (gdb) bt; #0 0x00007fffe3ca696f in psi::DFHelper::contract_metric_AO_core_symm(double*, double*, unsigned long, unsigne",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-384510030
https://github.com/psi4/psi4/pull/961#issuecomment-384510030:265,Testability,test,tests,265,"Trouble is nothing to do with Hessian (it's hanging at the preliminary energy calc) and everything to do with setting more than one thread. ```; (p4dev36) psilocaluser@bash:psinet:/home/psilocaluser/gits/hrw-qcdb/objdir-gnu36: ((detached from matt/SYMM_JK)) cat ../tests/psi4numpy/rhf-hessian/input.py ; # -*- coding: utf-8 -*- . import time; import numpy as np; np.set_printoptions(precision=15, linewidth=200, suppress=True); import psi4. #psi4.set_memory(int(1e9), False); #psi4.core.set_output_file('output.dat', False); psi4.core.set_num_threads(2). mol = psi4.geometry(""""""; O; H 1 1.1; H 1 1.1 2 104; symmetry c1; """"""). psi4.core.set_active_molecule(mol). options = {'BASIS':'STO-3G', 'SCF_TYPE':'PK',; 'E_CONVERGENCE':1e-10,; 'D_CONVERGENCE':1e-10; }. psi4.set_options(options). rhf_e, wfn = psi4.energy('SCF', return_wfn=True); ```. Debug traceback shows hang is in SAD guess at `DFHelper::contract_metric_AO_core_symm`. ```; (p4dev36) psilocaluser@bash:psinet:/home/psilocaluser/gits/hrw-qcdb/objdir-gnu36: ((detached from matt/SYMM_JK)) gdb --args python ../tests/psi4numpy/rhf-hessian/input.py ; GNU gdb (GDB) Red Hat Enterprise Linux 7.6.1-94.el7; Copyright (C) 2013 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Reading symbols from /home/psilocaluser/toolchainconda/envs/p4dev36/bin/python3.6...done.; (gdb) run; Starting program: /home/psilocaluser/toolchainconda/envs/p4dev36/bin/python ../tests/psi4numpy/rhf-hessian/input.py; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Missing separate debuginfo for /home/psilocaluser/toolchaincond",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-384510030
https://github.com/psi4/psi4/pull/961#issuecomment-384510030:1068,Testability,test,tests,1068,"and everything to do with setting more than one thread. ```; (p4dev36) psilocaluser@bash:psinet:/home/psilocaluser/gits/hrw-qcdb/objdir-gnu36: ((detached from matt/SYMM_JK)) cat ../tests/psi4numpy/rhf-hessian/input.py ; # -*- coding: utf-8 -*- . import time; import numpy as np; np.set_printoptions(precision=15, linewidth=200, suppress=True); import psi4. #psi4.set_memory(int(1e9), False); #psi4.core.set_output_file('output.dat', False); psi4.core.set_num_threads(2). mol = psi4.geometry(""""""; O; H 1 1.1; H 1 1.1 2 104; symmetry c1; """"""). psi4.core.set_active_molecule(mol). options = {'BASIS':'STO-3G', 'SCF_TYPE':'PK',; 'E_CONVERGENCE':1e-10,; 'D_CONVERGENCE':1e-10; }. psi4.set_options(options). rhf_e, wfn = psi4.energy('SCF', return_wfn=True); ```. Debug traceback shows hang is in SAD guess at `DFHelper::contract_metric_AO_core_symm`. ```; (p4dev36) psilocaluser@bash:psinet:/home/psilocaluser/gits/hrw-qcdb/objdir-gnu36: ((detached from matt/SYMM_JK)) gdb --args python ../tests/psi4numpy/rhf-hessian/input.py ; GNU gdb (GDB) Red Hat Enterprise Linux 7.6.1-94.el7; Copyright (C) 2013 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Reading symbols from /home/psilocaluser/toolchainconda/envs/p4dev36/bin/python3.6...done.; (gdb) run; Starting program: /home/psilocaluser/toolchainconda/envs/p4dev36/bin/python ../tests/psi4numpy/rhf-hessian/input.py; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Missing separate debuginfo for /home/psilocaluser/toolchainconda/envs/p4dev36/lib/python3.6/site-packages/numpy/../../../libiomp5.so; Detaching aft",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-384510030
https://github.com/psi4/psi4/pull/961#issuecomment-384510030:1792,Testability,test,tests,1792,"gy('SCF', return_wfn=True); ```. Debug traceback shows hang is in SAD guess at `DFHelper::contract_metric_AO_core_symm`. ```; (p4dev36) psilocaluser@bash:psinet:/home/psilocaluser/gits/hrw-qcdb/objdir-gnu36: ((detached from matt/SYMM_JK)) gdb --args python ../tests/psi4numpy/rhf-hessian/input.py ; GNU gdb (GDB) Red Hat Enterprise Linux 7.6.1-94.el7; Copyright (C) 2013 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Reading symbols from /home/psilocaluser/toolchainconda/envs/p4dev36/bin/python3.6...done.; (gdb) run; Starting program: /home/psilocaluser/toolchainconda/envs/p4dev36/bin/python ../tests/psi4numpy/rhf-hessian/input.py; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Missing separate debuginfo for /home/psilocaluser/toolchainconda/envs/p4dev36/lib/python3.6/site-packages/numpy/../../../libiomp5.so; Detaching after fork from child process 16215.; Detaching after fork from child process 16216.; Detaching after fork from child process 16217.; Detaching after fork from child process 16218.; Detaching after fork from child process 16219.; Threads set to 2 by Python driver. *** tstart() called on psinet; *** at Wed Apr 25 23:55:59 2018. => Loading Basis Set <=. Name: STO-3G; Role: ORBITAL; Keyword: BASIS; atoms 1 entry O line 81 file /home/psilocaluser/gits/hrw-qcdb/objdir-gnu36/stage/usr/local/psi4/share/psi4/basis/sto-3g.gbs ; atoms 2-3 entry H line 19 file /home/psilocaluser/gits/hrw-qcdb/objdir-gnu36/stage/usr/local/psi4/share/psi4/basis/sto-3g.gbs . There are an even number of electrons - assuming singlet.; Specify the mul",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-384510030
https://github.com/psi4/psi4/pull/961#issuecomment-384625713:225,Availability,error,error,225,"@loriab Could potentially be [this](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/lib3index/df_helper.cc#L1335) line. Could you change the schedule to simply `schedule(static)`? Either way we now have a reproducible error that can be fixed, thanks so much!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-384625713
https://github.com/psi4/psi4/pull/961#issuecomment-384625713:148,Energy Efficiency,schedul,schedule,148,"@loriab Could potentially be [this](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/lib3index/df_helper.cc#L1335) line. Could you change the schedule to simply `schedule(static)`? Either way we now have a reproducible error that can be fixed, thanks so much!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-384625713
https://github.com/psi4/psi4/pull/961#issuecomment-384625713:168,Energy Efficiency,schedul,schedule,168,"@loriab Could potentially be [this](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/lib3index/df_helper.cc#L1335) line. Could you change the schedule to simply `schedule(static)`? Either way we now have a reproducible error that can be fixed, thanks so much!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-384625713
https://github.com/psi4/psi4/pull/961#issuecomment-384625713:160,Usability,simpl,simply,160,"@loriab Could potentially be [this](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/lib3index/df_helper.cc#L1335) line. Could you change the schedule to simply `schedule(static)`? Either way we now have a reproducible error that can be fixed, thanks so much!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-384625713
https://github.com/psi4/psi4/pull/961#issuecomment-384640906:133,Energy Efficiency,schedul,schedule,133,"Yep, suggested change heals it. Matt or you can include it among your commits. ```; -#pragma omp parallel for num_threads(nthreads_) schedule(static, nao_ / nthreads_); +#pragma omp parallel for num_threads(nthreads_) schedule(static) //, nao_ / nthreads_); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-384640906
https://github.com/psi4/psi4/pull/961#issuecomment-384640906:218,Energy Efficiency,schedul,schedule,218,"Yep, suggested change heals it. Matt or you can include it among your commits. ```; -#pragma omp parallel for num_threads(nthreads_) schedule(static, nao_ / nthreads_); +#pragma omp parallel for num_threads(nthreads_) schedule(static) //, nao_ / nthreads_); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-384640906
https://github.com/psi4/psi4/pull/961#issuecomment-384643478:48,Energy Efficiency,schedul,schedule,48,"Yup, bet were hitting a `num_threads(nthreads_) schedule(static, 0)` there. We can add a bit of logic to ensure this doesn't go below 1. LLVM is smarter than GCC there apparently.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-384643478
https://github.com/psi4/psi4/pull/961#issuecomment-384643478:96,Testability,log,logic,96,"Yup, bet were hitting a `num_threads(nthreads_) schedule(static, 0)` there. We can add a bit of logic to ensure this doesn't go below 1. LLVM is smarter than GCC there apparently.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-384643478
https://github.com/psi4/psi4/pull/961#issuecomment-385090273:46,Availability,failure,failures,46,"##### Watch Out For. Matt's seeing consistent failures among certain functionals in `dft-bench-ionization`. Particularly the first and third (`PWB6K` & `wB97X-D`) while the second is fine. I don't see the problem with Intel `2018.0.2` compilers, and travis doesn't see it in a truncated test case (clang and gcc). So watch out for this, and even if you cut off full tests prematurely b/c the benches are so long, please go ahead and run at least the first few functionals of the test outright for a few weeks so we can get more info.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-385090273
https://github.com/psi4/psi4/pull/961#issuecomment-385090273:287,Testability,test,test,287,"##### Watch Out For. Matt's seeing consistent failures among certain functionals in `dft-bench-ionization`. Particularly the first and third (`PWB6K` & `wB97X-D`) while the second is fine. I don't see the problem with Intel `2018.0.2` compilers, and travis doesn't see it in a truncated test case (clang and gcc). So watch out for this, and even if you cut off full tests prematurely b/c the benches are so long, please go ahead and run at least the first few functionals of the test outright for a few weeks so we can get more info.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-385090273
https://github.com/psi4/psi4/pull/961#issuecomment-385090273:366,Testability,test,tests,366,"##### Watch Out For. Matt's seeing consistent failures among certain functionals in `dft-bench-ionization`. Particularly the first and third (`PWB6K` & `wB97X-D`) while the second is fine. I don't see the problem with Intel `2018.0.2` compilers, and travis doesn't see it in a truncated test case (clang and gcc). So watch out for this, and even if you cut off full tests prematurely b/c the benches are so long, please go ahead and run at least the first few functionals of the test outright for a few weeks so we can get more info.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-385090273
https://github.com/psi4/psi4/pull/961#issuecomment-385090273:479,Testability,test,test,479,"##### Watch Out For. Matt's seeing consistent failures among certain functionals in `dft-bench-ionization`. Particularly the first and third (`PWB6K` & `wB97X-D`) while the second is fine. I don't see the problem with Intel `2018.0.2` compilers, and travis doesn't see it in a truncated test case (clang and gcc). So watch out for this, and even if you cut off full tests prematurely b/c the benches are so long, please go ahead and run at least the first few functionals of the test outright for a few weeks so we can get more info.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-385090273
https://github.com/psi4/psi4/pull/961#issuecomment-385255339:131,Availability,down,down,131,"I'm ok with adding a throw for Cartesian auxiliary basis sets, although; post-PR I'd like work to continue on trying to track this down. On Sun, Apr 29, 2018 at 10:08 AM, Daniel Smith <notifications@github.com>; wrote:. > @loriab <https://github.com/loriab> @schiebermc; > <https://github.com/schiebermc> If you force a DISK_DFJK do you see this; > issue? Should tell us where the issue lies.; >; > @psi4/maintainers <https://github.com/orgs/psi4/teams/maintainers> I; > think this is good to go, the only remaining issue is the cartesian; > auxiliary basis set. For this I would like to just add a throw and; > additional if statements in the JK constructor to force DISK_DFJK for now; > and throw in the MEM_DFJK object.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/961#issuecomment-385254164>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AC9QdqoEE36eTVxnpwiSXLzRlMcsWKKBks5ttclxgaJpZM4TTiAA>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-385255339
https://github.com/psi4/psi4/pull/961#issuecomment-385258279:86,Integrability,rout,route,86,"As I recall, switching the to disk_jk does heal them. Forcing that does seem the best route, as we want to get this in tomorrow.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-385258279
https://github.com/psi4/psi4/pull/961#issuecomment-385260107:90,Energy Efficiency,energy,energy,90,"Forcing to disk_jk fixes the spherical-cartesian issue, but reproduces the same incorrect energy for the `dft-bench-ionization`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-385260107
https://github.com/psi4/psi4/pull/961#issuecomment-385264040:305,Testability,log,logic,305,"Ok, this sounds like a XC issue in this case. Can someone open an issue on it showing the different SCF iterations under different compilers?. @schiebermc For the cartesian auxiliary the syntax should look something like `aux_->has_puream()`. This is `True` for spherical, `False` otherwise. I think this logic needs to be handled in both the JK constructor to switch between different DF setups and in the `MemDFJK` to throw if someone passes a cartesian auxiliary. Can you handle these changes?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-385264040
https://github.com/psi4/psi4/pull/961#issuecomment-385684550:135,Testability,test,test,135,"It was thought more physically sound for orbital puream to govern all. After we noticed inconsistency, there was a crackdown and [long test](https://github.com/psi4/psi4/blob/master/tests/castup3/input.dat). Though my faint recollection was that the main trouble came from cast-up basis sets influencing the puream of the main calc. So a pure-sph might be ok.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-385684550
https://github.com/psi4/psi4/pull/961#issuecomment-385684550:182,Testability,test,tests,182,"It was thought more physically sound for orbital puream to govern all. After we noticed inconsistency, there was a crackdown and [long test](https://github.com/psi4/psi4/blob/master/tests/castup3/input.dat). Though my faint recollection was that the main trouble came from cast-up basis sets influencing the puream of the main calc. So a pure-sph might be ok.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-385684550
https://github.com/psi4/psi4/pull/961#issuecomment-385710136:27,Testability,test,test,27,"@hokru, happily the `hf3c` test case tests interaction energies, so a switch of MINIX to spherical passes w/o a hitch. Any objections from @psi4/maintainers on switch?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-385710136
https://github.com/psi4/psi4/pull/961#issuecomment-385710136:37,Testability,test,tests,37,"@hokru, happily the `hf3c` test case tests interaction energies, so a switch of MINIX to spherical passes w/o a hitch. Any objections from @psi4/maintainers on switch?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-385710136
https://github.com/psi4/psi4/issues/962#issuecomment-381257009:130,Integrability,depend,dependency,130,"This is not particularly surprising as the M0x functionals use rather high polynomials in the density which exacerbate their grid dependency and general stability. . To be extra sure can you run a few other meta-GGA's that are not of the M0x series to check their stability. That could potentially be telling, especially if this is with regard to our meta-GGA gradient code or LibXC's kernels.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/962#issuecomment-381257009
https://github.com/psi4/psi4/issues/962#issuecomment-381998886:158,Availability,error,error,158,"Testing the gradients of dlDF/cc-pVDZ, I see similar differences between analytic and numerical gradients with modern Psi4 (1.2a1.dev829):. - Density fitting error <= 10^{-6}; - Differences b/t analytic & numerical as large as ~10^{-4}; - Nearly no difference between analytic gradients computed w/ standard and dense grids; numerical gradients differ by nearly 10^{-4} between dense and standard grids. For anyone interested, I've uploaded a file containing the raw gradients [here](https://github.com/psi4/psi4/files/1919924/dlDF_summary.txt) for perusal. These observations would seemingly point towards libXC kernel instabilities for meta-GGAs, instead of a more targeted problem with our M05-2X gradients in particular, exactly in line with @dgasmith's prediction.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/962#issuecomment-381998886
https://github.com/psi4/psi4/issues/962#issuecomment-381998886:758,Safety,predict,prediction,758,"Testing the gradients of dlDF/cc-pVDZ, I see similar differences between analytic and numerical gradients with modern Psi4 (1.2a1.dev829):. - Density fitting error <= 10^{-6}; - Differences b/t analytic & numerical as large as ~10^{-4}; - Nearly no difference between analytic gradients computed w/ standard and dense grids; numerical gradients differ by nearly 10^{-4} between dense and standard grids. For anyone interested, I've uploaded a file containing the raw gradients [here](https://github.com/psi4/psi4/files/1919924/dlDF_summary.txt) for perusal. These observations would seemingly point towards libXC kernel instabilities for meta-GGAs, instead of a more targeted problem with our M05-2X gradients in particular, exactly in line with @dgasmith's prediction.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/962#issuecomment-381998886
https://github.com/psi4/psi4/issues/962#issuecomment-381998886:0,Testability,Test,Testing,0,"Testing the gradients of dlDF/cc-pVDZ, I see similar differences between analytic and numerical gradients with modern Psi4 (1.2a1.dev829):. - Density fitting error <= 10^{-6}; - Differences b/t analytic & numerical as large as ~10^{-4}; - Nearly no difference between analytic gradients computed w/ standard and dense grids; numerical gradients differ by nearly 10^{-4} between dense and standard grids. For anyone interested, I've uploaded a file containing the raw gradients [here](https://github.com/psi4/psi4/files/1919924/dlDF_summary.txt) for perusal. These observations would seemingly point towards libXC kernel instabilities for meta-GGAs, instead of a more targeted problem with our M05-2X gradients in particular, exactly in line with @dgasmith's prediction.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/962#issuecomment-381998886
https://github.com/psi4/psi4/issues/962#issuecomment-382383114:183,Deployability,integrat,integration,183,"Two comments:; - `dlDF` is based off M05, you might want to try TPSS or SCAN.; - I am not really sure this clears our derivative code from problems. All meta functionals use the same integration code and could still be a problem.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/962#issuecomment-382383114
https://github.com/psi4/psi4/issues/962#issuecomment-382383114:183,Integrability,integrat,integration,183,"Two comments:; - `dlDF` is based off M05, you might want to try TPSS or SCAN.; - I am not really sure this clears our derivative code from problems. All meta functionals use the same integration code and could still be a problem.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/962#issuecomment-382383114
https://github.com/psi4/psi4/issues/962#issuecomment-382383114:107,Usability,clear,clears,107,"Two comments:; - `dlDF` is based off M05, you might want to try TPSS or SCAN.; - I am not really sure this clears our derivative code from problems. All meta functionals use the same integration code and could still be a problem.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/962#issuecomment-382383114
https://github.com/psi4/psi4/issues/962#issuecomment-382385597:193,Performance,optimiz,optimizations,193,"careful with SCAN though.I don't know how Q-chem implemented this functional, but the Turbomole implementation requires quite a hefty increase in radial grid points to get gradients usable for optimizations. Angular grid is unproblematic.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/962#issuecomment-382385597
https://github.com/psi4/psi4/issues/962#issuecomment-382385597:182,Usability,usab,usable,182,"careful with SCAN though.I don't know how Q-chem implemented this functional, but the Turbomole implementation requires quite a hefty increase in radial grid points to get gradients usable for optimizations. Angular grid is unproblematic.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/962#issuecomment-382385597
https://github.com/psi4/psi4/issues/962#issuecomment-382448968:19,Integrability,depend,dependent,19,SCAN is crazy grid dependent. You might need up to 500 radial points to get single points with microhartree accuracy.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/962#issuecomment-382448968
https://github.com/psi4/psi4/issues/962#issuecomment-382458405:258,Integrability,depend,dependent,258,"I have noticed some other general gradient weirdness that might or might; not be related. I'll try to post that as another issue as soon as I get a; chance. On Wed, Apr 18, 2018, 12:32 PM Susi Lehtola <notifications@github.com>; wrote:. > SCAN is crazy grid dependent. You might need up to 500 radial points to; > get single points with microhartree accuracy.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/962#issuecomment-382448968>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AC9QdrK7ZaUCI_vgWtatmOzGCwmpY990ks5tp2qvgaJpZM4TTqrC>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/962#issuecomment-382458405
https://github.com/psi4/psi4/issues/962#issuecomment-384487129:29,Availability,error,errors,29,"Playing around with absolute errors between finite difference and analytical for a UKS water cation (mean/max):; ```; # Cation Water; B3LYP - 0.000005 / 0.000019; TPSS - 0.000259 / 0.001291; TPSS - 0.000264 / 0.001321 # (150, 434) ; M05 - 0.001182 / 0.006572; ```. Big kick from GGA -> MGGA as commented. Now what if we run UKS and RKS gradients on a neutral molecule:; ```; # Neutral Water; RKS TPSS - 0.000007 / 0.000024; UKS TPSS - 0.000007 / 0.000024; RKS M05 - 0.000020 / 0.000091; UKS M05 - 0.000012 / 0.000091; ```. So now we know pretty much that the XC input and output is correct, the integration of the XC data to gradient is correct, and that the normal XC data to AO gradient integration is correct. With this knowledge we are left with a single piece of code that could be [wrong](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfock/v.cc#L2477-L2496). We therefore spot the error (a good exercise before looking at the answer) and we now get the following:. ```; # Cation Water - fixed; RKS TPSS - 0.000007 / 0.000024; UKS TPSS - 0.000007 / 0.000028; RKS M05 - 0.000020 / 0.000091; UKS M05 - 0.000012 / 0.000050; ```. This makes me happy.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/962#issuecomment-384487129
https://github.com/psi4/psi4/issues/962#issuecomment-384487129:899,Availability,error,error,899,"Playing around with absolute errors between finite difference and analytical for a UKS water cation (mean/max):; ```; # Cation Water; B3LYP - 0.000005 / 0.000019; TPSS - 0.000259 / 0.001291; TPSS - 0.000264 / 0.001321 # (150, 434) ; M05 - 0.001182 / 0.006572; ```. Big kick from GGA -> MGGA as commented. Now what if we run UKS and RKS gradients on a neutral molecule:; ```; # Neutral Water; RKS TPSS - 0.000007 / 0.000024; UKS TPSS - 0.000007 / 0.000024; RKS M05 - 0.000020 / 0.000091; UKS M05 - 0.000012 / 0.000091; ```. So now we know pretty much that the XC input and output is correct, the integration of the XC data to gradient is correct, and that the normal XC data to AO gradient integration is correct. With this knowledge we are left with a single piece of code that could be [wrong](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfock/v.cc#L2477-L2496). We therefore spot the error (a good exercise before looking at the answer) and we now get the following:. ```; # Cation Water - fixed; RKS TPSS - 0.000007 / 0.000024; UKS TPSS - 0.000007 / 0.000028; RKS M05 - 0.000020 / 0.000091; UKS M05 - 0.000012 / 0.000050; ```. This makes me happy.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/962#issuecomment-384487129
https://github.com/psi4/psi4/issues/962#issuecomment-384487129:595,Deployability,integrat,integration,595,"Playing around with absolute errors between finite difference and analytical for a UKS water cation (mean/max):; ```; # Cation Water; B3LYP - 0.000005 / 0.000019; TPSS - 0.000259 / 0.001291; TPSS - 0.000264 / 0.001321 # (150, 434) ; M05 - 0.001182 / 0.006572; ```. Big kick from GGA -> MGGA as commented. Now what if we run UKS and RKS gradients on a neutral molecule:; ```; # Neutral Water; RKS TPSS - 0.000007 / 0.000024; UKS TPSS - 0.000007 / 0.000024; RKS M05 - 0.000020 / 0.000091; UKS M05 - 0.000012 / 0.000091; ```. So now we know pretty much that the XC input and output is correct, the integration of the XC data to gradient is correct, and that the normal XC data to AO gradient integration is correct. With this knowledge we are left with a single piece of code that could be [wrong](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfock/v.cc#L2477-L2496). We therefore spot the error (a good exercise before looking at the answer) and we now get the following:. ```; # Cation Water - fixed; RKS TPSS - 0.000007 / 0.000024; UKS TPSS - 0.000007 / 0.000028; RKS M05 - 0.000020 / 0.000091; UKS M05 - 0.000012 / 0.000050; ```. This makes me happy.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/962#issuecomment-384487129
https://github.com/psi4/psi4/issues/962#issuecomment-384487129:689,Deployability,integrat,integration,689,"Playing around with absolute errors between finite difference and analytical for a UKS water cation (mean/max):; ```; # Cation Water; B3LYP - 0.000005 / 0.000019; TPSS - 0.000259 / 0.001291; TPSS - 0.000264 / 0.001321 # (150, 434) ; M05 - 0.001182 / 0.006572; ```. Big kick from GGA -> MGGA as commented. Now what if we run UKS and RKS gradients on a neutral molecule:; ```; # Neutral Water; RKS TPSS - 0.000007 / 0.000024; UKS TPSS - 0.000007 / 0.000024; RKS M05 - 0.000020 / 0.000091; UKS M05 - 0.000012 / 0.000091; ```. So now we know pretty much that the XC input and output is correct, the integration of the XC data to gradient is correct, and that the normal XC data to AO gradient integration is correct. With this knowledge we are left with a single piece of code that could be [wrong](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfock/v.cc#L2477-L2496). We therefore spot the error (a good exercise before looking at the answer) and we now get the following:. ```; # Cation Water - fixed; RKS TPSS - 0.000007 / 0.000024; UKS TPSS - 0.000007 / 0.000028; RKS M05 - 0.000020 / 0.000091; UKS M05 - 0.000012 / 0.000050; ```. This makes me happy.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/962#issuecomment-384487129
https://github.com/psi4/psi4/issues/962#issuecomment-384487129:595,Integrability,integrat,integration,595,"Playing around with absolute errors between finite difference and analytical for a UKS water cation (mean/max):; ```; # Cation Water; B3LYP - 0.000005 / 0.000019; TPSS - 0.000259 / 0.001291; TPSS - 0.000264 / 0.001321 # (150, 434) ; M05 - 0.001182 / 0.006572; ```. Big kick from GGA -> MGGA as commented. Now what if we run UKS and RKS gradients on a neutral molecule:; ```; # Neutral Water; RKS TPSS - 0.000007 / 0.000024; UKS TPSS - 0.000007 / 0.000024; RKS M05 - 0.000020 / 0.000091; UKS M05 - 0.000012 / 0.000091; ```. So now we know pretty much that the XC input and output is correct, the integration of the XC data to gradient is correct, and that the normal XC data to AO gradient integration is correct. With this knowledge we are left with a single piece of code that could be [wrong](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfock/v.cc#L2477-L2496). We therefore spot the error (a good exercise before looking at the answer) and we now get the following:. ```; # Cation Water - fixed; RKS TPSS - 0.000007 / 0.000024; UKS TPSS - 0.000007 / 0.000028; RKS M05 - 0.000020 / 0.000091; UKS M05 - 0.000012 / 0.000050; ```. This makes me happy.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/962#issuecomment-384487129
https://github.com/psi4/psi4/issues/962#issuecomment-384487129:689,Integrability,integrat,integration,689,"Playing around with absolute errors between finite difference and analytical for a UKS water cation (mean/max):; ```; # Cation Water; B3LYP - 0.000005 / 0.000019; TPSS - 0.000259 / 0.001291; TPSS - 0.000264 / 0.001321 # (150, 434) ; M05 - 0.001182 / 0.006572; ```. Big kick from GGA -> MGGA as commented. Now what if we run UKS and RKS gradients on a neutral molecule:; ```; # Neutral Water; RKS TPSS - 0.000007 / 0.000024; UKS TPSS - 0.000007 / 0.000024; RKS M05 - 0.000020 / 0.000091; UKS M05 - 0.000012 / 0.000091; ```. So now we know pretty much that the XC input and output is correct, the integration of the XC data to gradient is correct, and that the normal XC data to AO gradient integration is correct. With this knowledge we are left with a single piece of code that could be [wrong](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfock/v.cc#L2477-L2496). We therefore spot the error (a good exercise before looking at the answer) and we now get the following:. ```; # Cation Water - fixed; RKS TPSS - 0.000007 / 0.000024; UKS TPSS - 0.000007 / 0.000028; RKS M05 - 0.000020 / 0.000091; UKS M05 - 0.000012 / 0.000050; ```. This makes me happy.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/962#issuecomment-384487129
https://github.com/psi4/psi4/pull/963#issuecomment-381265832:470,Energy Efficiency,energy,energy,470,"Do you happen to know if there's a lit citation for extrapolating the def2 basis sets or if they need a different extrapolation formula? I know Orca does def2 extrapolations; I've just never looked up how or what procedure they use. I'd defer the -PP fallbacks from this PR. That means changing the basis set compositing which is a huge pain. I'm hoping the MolSSI basisset project can be API-accessed to cover this (very sensible) case. Hand-pieced, other program, or `energy(cbs, ...)` call with calculator spot-checks will do fine for tests. If def2's need their own extrapolation formula, tests should probably check that those default correctly.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/963#issuecomment-381265832
https://github.com/psi4/psi4/pull/963#issuecomment-381265832:393,Security,access,accessed,393,"Do you happen to know if there's a lit citation for extrapolating the def2 basis sets or if they need a different extrapolation formula? I know Orca does def2 extrapolations; I've just never looked up how or what procedure they use. I'd defer the -PP fallbacks from this PR. That means changing the basis set compositing which is a huge pain. I'm hoping the MolSSI basisset project can be API-accessed to cover this (very sensible) case. Hand-pieced, other program, or `energy(cbs, ...)` call with calculator spot-checks will do fine for tests. If def2's need their own extrapolation formula, tests should probably check that those default correctly.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/963#issuecomment-381265832
https://github.com/psi4/psi4/pull/963#issuecomment-381265832:538,Testability,test,tests,538,"Do you happen to know if there's a lit citation for extrapolating the def2 basis sets or if they need a different extrapolation formula? I know Orca does def2 extrapolations; I've just never looked up how or what procedure they use. I'd defer the -PP fallbacks from this PR. That means changing the basis set compositing which is a huge pain. I'm hoping the MolSSI basisset project can be API-accessed to cover this (very sensible) case. Hand-pieced, other program, or `energy(cbs, ...)` call with calculator spot-checks will do fine for tests. If def2's need their own extrapolation formula, tests should probably check that those default correctly.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/963#issuecomment-381265832
https://github.com/psi4/psi4/pull/963#issuecomment-381265832:593,Testability,test,tests,593,"Do you happen to know if there's a lit citation for extrapolating the def2 basis sets or if they need a different extrapolation formula? I know Orca does def2 extrapolations; I've just never looked up how or what procedure they use. I'd defer the -PP fallbacks from this PR. That means changing the basis set compositing which is a huge pain. I'm hoping the MolSSI basisset project can be API-accessed to cover this (very sensible) case. Hand-pieced, other program, or `energy(cbs, ...)` call with calculator spot-checks will do fine for tests. If def2's need their own extrapolation formula, tests should probably check that those default correctly.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/963#issuecomment-381265832
https://github.com/psi4/psi4/pull/963#issuecomment-381392778:961,Energy Efficiency,power,power,961,"@hokru, thanks for the reference. It would seem based on that paper that we should:; - allow the `roos-ano-[dt]z` basis sets into CBS as well; - are the `pcseg-[0-4]` basis sets (double- to six-zeta, I believe) the segmented versions of `pc-X` bases? There might be an argument in letting those in as well, based on the Neese paper. I don't suppose we can handle the generally contracted ANO's in Psi4? They're not included in our basis set library anyway. In terms of coefficients, I probably don't understand exactly what's going on, but:; - for `corl_xtpl_helgaker_2` we use a hard-coded `beta = 3`, which is the physically correct exponent, but for extrapolation between from `[DT]` basis sets the value of `2.46` seems more appropriate. There is currently no way to supply a custom value; - for `scf_xtpl_helgaker_2` (both of these should really be called `scf_xtpl_halkier_[2,3]`): we use the exponential form which seems to perform a lot better than the power form according to Halkier et al. The `alpha=1.63` seems to be a general parameter here, however a zeta-based `alpha` seems to perform better (as it is fitted). The interface to supply `alpha` is in the function, but doesn't seem to be plugged into the CBS machinery; - the ""power form"" for SCF extrapolation is not implemented in Psi4, but the coefficent `alpha` seems to be very system and basis and zeta dependent, as shown by both Halkier et al. and Neese and Valeev. @loriab My suggestions for myself for this PR, in addition to allowing the two basis set classes above, would be:; - [ ] add power form for SCF extrapolation (eg. `scf_xtpl_power_2`) with user-supplied `alpha`, a sane default is `alpha=3.54` from Halkier et al.; - [ ] add ability to supply custom `beta` for `corl_xtpl_helgaker_2` for better performance with [DT]'s; - [ ] wire up `scf_xtpl_helgaker_2` parameter `alpha` and the other two from above with the rest of the CBS machinery, perhaps using `scf_alpha` and `corl_beta` parameters to `cbs()`. The `cc-pVX",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/963#issuecomment-381392778
https://github.com/psi4/psi4/pull/963#issuecomment-381392778:1241,Energy Efficiency,power,power,1241,"ions of `pc-X` bases? There might be an argument in letting those in as well, based on the Neese paper. I don't suppose we can handle the generally contracted ANO's in Psi4? They're not included in our basis set library anyway. In terms of coefficients, I probably don't understand exactly what's going on, but:; - for `corl_xtpl_helgaker_2` we use a hard-coded `beta = 3`, which is the physically correct exponent, but for extrapolation between from `[DT]` basis sets the value of `2.46` seems more appropriate. There is currently no way to supply a custom value; - for `scf_xtpl_helgaker_2` (both of these should really be called `scf_xtpl_halkier_[2,3]`): we use the exponential form which seems to perform a lot better than the power form according to Halkier et al. The `alpha=1.63` seems to be a general parameter here, however a zeta-based `alpha` seems to perform better (as it is fitted). The interface to supply `alpha` is in the function, but doesn't seem to be plugged into the CBS machinery; - the ""power form"" for SCF extrapolation is not implemented in Psi4, but the coefficent `alpha` seems to be very system and basis and zeta dependent, as shown by both Halkier et al. and Neese and Valeev. @loriab My suggestions for myself for this PR, in addition to allowing the two basis set classes above, would be:; - [ ] add power form for SCF extrapolation (eg. `scf_xtpl_power_2`) with user-supplied `alpha`, a sane default is `alpha=3.54` from Halkier et al.; - [ ] add ability to supply custom `beta` for `corl_xtpl_helgaker_2` for better performance with [DT]'s; - [ ] wire up `scf_xtpl_helgaker_2` parameter `alpha` and the other two from above with the rest of the CBS machinery, perhaps using `scf_alpha` and `corl_beta` parameters to `cbs()`. The `cc-pVXZ-PP` issue can certainly wait. The user can combine their own basis sets into user-supplied `.gbs`'s (which is what I was doing for my systems anyway) and the CBS function will happily use them, as long as they match the regex.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/963#issuecomment-381392778
https://github.com/psi4/psi4/pull/963#issuecomment-381392778:1563,Energy Efficiency,power,power,1563,"ions of `pc-X` bases? There might be an argument in letting those in as well, based on the Neese paper. I don't suppose we can handle the generally contracted ANO's in Psi4? They're not included in our basis set library anyway. In terms of coefficients, I probably don't understand exactly what's going on, but:; - for `corl_xtpl_helgaker_2` we use a hard-coded `beta = 3`, which is the physically correct exponent, but for extrapolation between from `[DT]` basis sets the value of `2.46` seems more appropriate. There is currently no way to supply a custom value; - for `scf_xtpl_helgaker_2` (both of these should really be called `scf_xtpl_halkier_[2,3]`): we use the exponential form which seems to perform a lot better than the power form according to Halkier et al. The `alpha=1.63` seems to be a general parameter here, however a zeta-based `alpha` seems to perform better (as it is fitted). The interface to supply `alpha` is in the function, but doesn't seem to be plugged into the CBS machinery; - the ""power form"" for SCF extrapolation is not implemented in Psi4, but the coefficent `alpha` seems to be very system and basis and zeta dependent, as shown by both Halkier et al. and Neese and Valeev. @loriab My suggestions for myself for this PR, in addition to allowing the two basis set classes above, would be:; - [ ] add power form for SCF extrapolation (eg. `scf_xtpl_power_2`) with user-supplied `alpha`, a sane default is `alpha=3.54` from Halkier et al.; - [ ] add ability to supply custom `beta` for `corl_xtpl_helgaker_2` for better performance with [DT]'s; - [ ] wire up `scf_xtpl_helgaker_2` parameter `alpha` and the other two from above with the rest of the CBS machinery, perhaps using `scf_alpha` and `corl_beta` parameters to `cbs()`. The `cc-pVXZ-PP` issue can certainly wait. The user can combine their own basis sets into user-supplied `.gbs`'s (which is what I was doing for my systems anyway) and the CBS function will happily use them, as long as they match the regex.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/963#issuecomment-381392778
https://github.com/psi4/psi4/pull/963#issuecomment-381392778:377,Integrability,contract,contracted,377,"@hokru, thanks for the reference. It would seem based on that paper that we should:; - allow the `roos-ano-[dt]z` basis sets into CBS as well; - are the `pcseg-[0-4]` basis sets (double- to six-zeta, I believe) the segmented versions of `pc-X` bases? There might be an argument in letting those in as well, based on the Neese paper. I don't suppose we can handle the generally contracted ANO's in Psi4? They're not included in our basis set library anyway. In terms of coefficients, I probably don't understand exactly what's going on, but:; - for `corl_xtpl_helgaker_2` we use a hard-coded `beta = 3`, which is the physically correct exponent, but for extrapolation between from `[DT]` basis sets the value of `2.46` seems more appropriate. There is currently no way to supply a custom value; - for `scf_xtpl_helgaker_2` (both of these should really be called `scf_xtpl_halkier_[2,3]`): we use the exponential form which seems to perform a lot better than the power form according to Halkier et al. The `alpha=1.63` seems to be a general parameter here, however a zeta-based `alpha` seems to perform better (as it is fitted). The interface to supply `alpha` is in the function, but doesn't seem to be plugged into the CBS machinery; - the ""power form"" for SCF extrapolation is not implemented in Psi4, but the coefficent `alpha` seems to be very system and basis and zeta dependent, as shown by both Halkier et al. and Neese and Valeev. @loriab My suggestions for myself for this PR, in addition to allowing the two basis set classes above, would be:; - [ ] add power form for SCF extrapolation (eg. `scf_xtpl_power_2`) with user-supplied `alpha`, a sane default is `alpha=3.54` from Halkier et al.; - [ ] add ability to supply custom `beta` for `corl_xtpl_helgaker_2` for better performance with [DT]'s; - [ ] wire up `scf_xtpl_helgaker_2` parameter `alpha` and the other two from above with the rest of the CBS machinery, perhaps using `scf_alpha` and `corl_beta` parameters to `cbs()`. The `cc-pVX",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/963#issuecomment-381392778
https://github.com/psi4/psi4/pull/963#issuecomment-381392778:1131,Integrability,interface,interface,1131,"ions of `pc-X` bases? There might be an argument in letting those in as well, based on the Neese paper. I don't suppose we can handle the generally contracted ANO's in Psi4? They're not included in our basis set library anyway. In terms of coefficients, I probably don't understand exactly what's going on, but:; - for `corl_xtpl_helgaker_2` we use a hard-coded `beta = 3`, which is the physically correct exponent, but for extrapolation between from `[DT]` basis sets the value of `2.46` seems more appropriate. There is currently no way to supply a custom value; - for `scf_xtpl_helgaker_2` (both of these should really be called `scf_xtpl_halkier_[2,3]`): we use the exponential form which seems to perform a lot better than the power form according to Halkier et al. The `alpha=1.63` seems to be a general parameter here, however a zeta-based `alpha` seems to perform better (as it is fitted). The interface to supply `alpha` is in the function, but doesn't seem to be plugged into the CBS machinery; - the ""power form"" for SCF extrapolation is not implemented in Psi4, but the coefficent `alpha` seems to be very system and basis and zeta dependent, as shown by both Halkier et al. and Neese and Valeev. @loriab My suggestions for myself for this PR, in addition to allowing the two basis set classes above, would be:; - [ ] add power form for SCF extrapolation (eg. `scf_xtpl_power_2`) with user-supplied `alpha`, a sane default is `alpha=3.54` from Halkier et al.; - [ ] add ability to supply custom `beta` for `corl_xtpl_helgaker_2` for better performance with [DT]'s; - [ ] wire up `scf_xtpl_helgaker_2` parameter `alpha` and the other two from above with the rest of the CBS machinery, perhaps using `scf_alpha` and `corl_beta` parameters to `cbs()`. The `cc-pVXZ-PP` issue can certainly wait. The user can combine their own basis sets into user-supplied `.gbs`'s (which is what I was doing for my systems anyway) and the CBS function will happily use them, as long as they match the regex.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/963#issuecomment-381392778
https://github.com/psi4/psi4/pull/963#issuecomment-381392778:1373,Integrability,depend,dependent,1373,"ions of `pc-X` bases? There might be an argument in letting those in as well, based on the Neese paper. I don't suppose we can handle the generally contracted ANO's in Psi4? They're not included in our basis set library anyway. In terms of coefficients, I probably don't understand exactly what's going on, but:; - for `corl_xtpl_helgaker_2` we use a hard-coded `beta = 3`, which is the physically correct exponent, but for extrapolation between from `[DT]` basis sets the value of `2.46` seems more appropriate. There is currently no way to supply a custom value; - for `scf_xtpl_helgaker_2` (both of these should really be called `scf_xtpl_halkier_[2,3]`): we use the exponential form which seems to perform a lot better than the power form according to Halkier et al. The `alpha=1.63` seems to be a general parameter here, however a zeta-based `alpha` seems to perform better (as it is fitted). The interface to supply `alpha` is in the function, but doesn't seem to be plugged into the CBS machinery; - the ""power form"" for SCF extrapolation is not implemented in Psi4, but the coefficent `alpha` seems to be very system and basis and zeta dependent, as shown by both Halkier et al. and Neese and Valeev. @loriab My suggestions for myself for this PR, in addition to allowing the two basis set classes above, would be:; - [ ] add power form for SCF extrapolation (eg. `scf_xtpl_power_2`) with user-supplied `alpha`, a sane default is `alpha=3.54` from Halkier et al.; - [ ] add ability to supply custom `beta` for `corl_xtpl_helgaker_2` for better performance with [DT]'s; - [ ] wire up `scf_xtpl_helgaker_2` parameter `alpha` and the other two from above with the rest of the CBS machinery, perhaps using `scf_alpha` and `corl_beta` parameters to `cbs()`. The `cc-pVXZ-PP` issue can certainly wait. The user can combine their own basis sets into user-supplied `.gbs`'s (which is what I was doing for my systems anyway) and the CBS function will happily use them, as long as they match the regex.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/963#issuecomment-381392778
https://github.com/psi4/psi4/pull/963#issuecomment-381392778:931,Performance,perform,perform,931,"@hokru, thanks for the reference. It would seem based on that paper that we should:; - allow the `roos-ano-[dt]z` basis sets into CBS as well; - are the `pcseg-[0-4]` basis sets (double- to six-zeta, I believe) the segmented versions of `pc-X` bases? There might be an argument in letting those in as well, based on the Neese paper. I don't suppose we can handle the generally contracted ANO's in Psi4? They're not included in our basis set library anyway. In terms of coefficients, I probably don't understand exactly what's going on, but:; - for `corl_xtpl_helgaker_2` we use a hard-coded `beta = 3`, which is the physically correct exponent, but for extrapolation between from `[DT]` basis sets the value of `2.46` seems more appropriate. There is currently no way to supply a custom value; - for `scf_xtpl_helgaker_2` (both of these should really be called `scf_xtpl_halkier_[2,3]`): we use the exponential form which seems to perform a lot better than the power form according to Halkier et al. The `alpha=1.63` seems to be a general parameter here, however a zeta-based `alpha` seems to perform better (as it is fitted). The interface to supply `alpha` is in the function, but doesn't seem to be plugged into the CBS machinery; - the ""power form"" for SCF extrapolation is not implemented in Psi4, but the coefficent `alpha` seems to be very system and basis and zeta dependent, as shown by both Halkier et al. and Neese and Valeev. @loriab My suggestions for myself for this PR, in addition to allowing the two basis set classes above, would be:; - [ ] add power form for SCF extrapolation (eg. `scf_xtpl_power_2`) with user-supplied `alpha`, a sane default is `alpha=3.54` from Halkier et al.; - [ ] add ability to supply custom `beta` for `corl_xtpl_helgaker_2` for better performance with [DT]'s; - [ ] wire up `scf_xtpl_helgaker_2` parameter `alpha` and the other two from above with the rest of the CBS machinery, perhaps using `scf_alpha` and `corl_beta` parameters to `cbs()`. The `cc-pVX",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/963#issuecomment-381392778
https://github.com/psi4/psi4/pull/963#issuecomment-381392778:1093,Performance,perform,perform,1093,"hat we should:; - allow the `roos-ano-[dt]z` basis sets into CBS as well; - are the `pcseg-[0-4]` basis sets (double- to six-zeta, I believe) the segmented versions of `pc-X` bases? There might be an argument in letting those in as well, based on the Neese paper. I don't suppose we can handle the generally contracted ANO's in Psi4? They're not included in our basis set library anyway. In terms of coefficients, I probably don't understand exactly what's going on, but:; - for `corl_xtpl_helgaker_2` we use a hard-coded `beta = 3`, which is the physically correct exponent, but for extrapolation between from `[DT]` basis sets the value of `2.46` seems more appropriate. There is currently no way to supply a custom value; - for `scf_xtpl_helgaker_2` (both of these should really be called `scf_xtpl_halkier_[2,3]`): we use the exponential form which seems to perform a lot better than the power form according to Halkier et al. The `alpha=1.63` seems to be a general parameter here, however a zeta-based `alpha` seems to perform better (as it is fitted). The interface to supply `alpha` is in the function, but doesn't seem to be plugged into the CBS machinery; - the ""power form"" for SCF extrapolation is not implemented in Psi4, but the coefficent `alpha` seems to be very system and basis and zeta dependent, as shown by both Halkier et al. and Neese and Valeev. @loriab My suggestions for myself for this PR, in addition to allowing the two basis set classes above, would be:; - [ ] add power form for SCF extrapolation (eg. `scf_xtpl_power_2`) with user-supplied `alpha`, a sane default is `alpha=3.54` from Halkier et al.; - [ ] add ability to supply custom `beta` for `corl_xtpl_helgaker_2` for better performance with [DT]'s; - [ ] wire up `scf_xtpl_helgaker_2` parameter `alpha` and the other two from above with the rest of the CBS machinery, perhaps using `scf_alpha` and `corl_beta` parameters to `cbs()`. The `cc-pVXZ-PP` issue can certainly wait. The user can combine their own basis ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/963#issuecomment-381392778
https://github.com/psi4/psi4/pull/963#issuecomment-381392778:1781,Performance,perform,performance,1781,"ions of `pc-X` bases? There might be an argument in letting those in as well, based on the Neese paper. I don't suppose we can handle the generally contracted ANO's in Psi4? They're not included in our basis set library anyway. In terms of coefficients, I probably don't understand exactly what's going on, but:; - for `corl_xtpl_helgaker_2` we use a hard-coded `beta = 3`, which is the physically correct exponent, but for extrapolation between from `[DT]` basis sets the value of `2.46` seems more appropriate. There is currently no way to supply a custom value; - for `scf_xtpl_helgaker_2` (both of these should really be called `scf_xtpl_halkier_[2,3]`): we use the exponential form which seems to perform a lot better than the power form according to Halkier et al. The `alpha=1.63` seems to be a general parameter here, however a zeta-based `alpha` seems to perform better (as it is fitted). The interface to supply `alpha` is in the function, but doesn't seem to be plugged into the CBS machinery; - the ""power form"" for SCF extrapolation is not implemented in Psi4, but the coefficent `alpha` seems to be very system and basis and zeta dependent, as shown by both Halkier et al. and Neese and Valeev. @loriab My suggestions for myself for this PR, in addition to allowing the two basis set classes above, would be:; - [ ] add power form for SCF extrapolation (eg. `scf_xtpl_power_2`) with user-supplied `alpha`, a sane default is `alpha=3.54` from Halkier et al.; - [ ] add ability to supply custom `beta` for `corl_xtpl_helgaker_2` for better performance with [DT]'s; - [ ] wire up `scf_xtpl_helgaker_2` parameter `alpha` and the other two from above with the rest of the CBS machinery, perhaps using `scf_alpha` and `corl_beta` parameters to `cbs()`. The `cc-pVXZ-PP` issue can certainly wait. The user can combine their own basis sets into user-supplied `.gbs`'s (which is what I was doing for my systems anyway) and the CBS function will happily use them, as long as they match the regex.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/963#issuecomment-381392778
https://github.com/psi4/psi4/pull/963#issuecomment-381446177:192,Integrability,contract,contractions,192,"* Correct that the `pc` basis sets in the library are the segmented forms (https://github.com/psi4/psi4/blob/master/psi4/share/psi4/basis/NOTES#L84-L96) and also that Psi can't handle general contractions.; * Your `scf_xtpl_halkier_[2,3]` suggestion makes a good deal of sense from a citation and code-reuse point of view. However, IIRC the last char of the function name is used as a check against the number of basis set zetas supplied, which the `[2,3]` would break. I may no claims that `cbs()` is a shining design example. If you want to alias `corl_xtpl_halkier_2 = corl_xtpl_helgaker_2`, it's fine by me. Names should just be as simple as possible since ppl need to remember them to type into an input file.; * Quite right that the `alpha` doesn't get passed through; somehow, there's never been a demand for it. If you want to tackle passing it through, I'd be grateful. I think `cbs_alpha` for the kwarg name would be simplest and `cbs_delta_alpha` if stage (scf/corl/delta/delta2) differentiation is necessary. Can do something like `corl_alpha = kwargs.get('cbs_corl_alpha', kwargs.get('cbs_alpha', None))` before the call to the xtpl fn, then alpha=1.63 if alpha is not None within the xtpl fn.; * Your plan sounds good to me. If you would,; * Write up the docstrings along the lines of those in [this file](https://github.com/qcdb/qcdb/blob/master/qcdb/driver/cbs_helpers.py) which is where these functions are heading next. (I can't cherry-pick to retain commit info between repositories, but I can commit with co-authors, so it shows up on your GH record.); * For the extrapolation of gradients, if you're choosing between `psi4.core.Matrix` operations and `np.ndarray` operations, please prefer the latter.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/963#issuecomment-381446177
https://github.com/psi4/psi4/pull/963#issuecomment-381446177:636,Usability,simpl,simple,636,"* Correct that the `pc` basis sets in the library are the segmented forms (https://github.com/psi4/psi4/blob/master/psi4/share/psi4/basis/NOTES#L84-L96) and also that Psi can't handle general contractions.; * Your `scf_xtpl_halkier_[2,3]` suggestion makes a good deal of sense from a citation and code-reuse point of view. However, IIRC the last char of the function name is used as a check against the number of basis set zetas supplied, which the `[2,3]` would break. I may no claims that `cbs()` is a shining design example. If you want to alias `corl_xtpl_halkier_2 = corl_xtpl_helgaker_2`, it's fine by me. Names should just be as simple as possible since ppl need to remember them to type into an input file.; * Quite right that the `alpha` doesn't get passed through; somehow, there's never been a demand for it. If you want to tackle passing it through, I'd be grateful. I think `cbs_alpha` for the kwarg name would be simplest and `cbs_delta_alpha` if stage (scf/corl/delta/delta2) differentiation is necessary. Can do something like `corl_alpha = kwargs.get('cbs_corl_alpha', kwargs.get('cbs_alpha', None))` before the call to the xtpl fn, then alpha=1.63 if alpha is not None within the xtpl fn.; * Your plan sounds good to me. If you would,; * Write up the docstrings along the lines of those in [this file](https://github.com/qcdb/qcdb/blob/master/qcdb/driver/cbs_helpers.py) which is where these functions are heading next. (I can't cherry-pick to retain commit info between repositories, but I can commit with co-authors, so it shows up on your GH record.); * For the extrapolation of gradients, if you're choosing between `psi4.core.Matrix` operations and `np.ndarray` operations, please prefer the latter.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/963#issuecomment-381446177
https://github.com/psi4/psi4/pull/963#issuecomment-381446177:927,Usability,simpl,simplest,927,"* Correct that the `pc` basis sets in the library are the segmented forms (https://github.com/psi4/psi4/blob/master/psi4/share/psi4/basis/NOTES#L84-L96) and also that Psi can't handle general contractions.; * Your `scf_xtpl_halkier_[2,3]` suggestion makes a good deal of sense from a citation and code-reuse point of view. However, IIRC the last char of the function name is used as a check against the number of basis set zetas supplied, which the `[2,3]` would break. I may no claims that `cbs()` is a shining design example. If you want to alias `corl_xtpl_halkier_2 = corl_xtpl_helgaker_2`, it's fine by me. Names should just be as simple as possible since ppl need to remember them to type into an input file.; * Quite right that the `alpha` doesn't get passed through; somehow, there's never been a demand for it. If you want to tackle passing it through, I'd be grateful. I think `cbs_alpha` for the kwarg name would be simplest and `cbs_delta_alpha` if stage (scf/corl/delta/delta2) differentiation is necessary. Can do something like `corl_alpha = kwargs.get('cbs_corl_alpha', kwargs.get('cbs_alpha', None))` before the call to the xtpl fn, then alpha=1.63 if alpha is not None within the xtpl fn.; * Your plan sounds good to me. If you would,; * Write up the docstrings along the lines of those in [this file](https://github.com/qcdb/qcdb/blob/master/qcdb/driver/cbs_helpers.py) which is where these functions are heading next. (I can't cherry-pick to retain commit info between repositories, but I can commit with co-authors, so it shows up on your GH record.); * For the extrapolation of gradients, if you're choosing between `psi4.core.Matrix` operations and `np.ndarray` operations, please prefer the latter.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/963#issuecomment-381446177
https://github.com/psi4/psi4/pull/963#issuecomment-381609280:128,Integrability,Contract,Contracted,128,"* Hmm, if you click on ""More information"" on pc-seg4 on EMSL, you get ""Polarization Consistent Valence Pentuble Zeta, Segmented Contracted"". So that's my source iirc, but EMSL has low authority these days. Yes, please do switch to `N+2` in NOTES in this PR. Thanks for the better information.; * `delta N > 2` should probably be rewritten to be extensible w/o copy-paste-sed, so don't bother future-proofing in that respect.; * General plan is that parts of the driver that are generic quantum chemistry should be useable w/o a psi4 dependence, hence the separate qcdb repo. Glad to explain in more detail later. No need to rebase off anything but psi4/psi4 master.; * Sorry, I should have worded that better. Yes, the xtpl fns want `psi4.core.Matrix` for gradient/Hessian extrapolations as input and output. But for all the manipulations of those arrays, you have the choice of keeping them as `Matrix` and using psi internals or to grabbing them as numpy arrays and using all the numpy manipulation syntax then returning to `Matrix` at the end. I just meant to say that if you're facing this choice, choose NumPy because the next version is going to take and return `ndarray`, not `psi4.core.Matrix`. Thanks!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/963#issuecomment-381609280
https://github.com/psi4/psi4/pull/963#issuecomment-381609280:533,Integrability,depend,dependence,533,"* Hmm, if you click on ""More information"" on pc-seg4 on EMSL, you get ""Polarization Consistent Valence Pentuble Zeta, Segmented Contracted"". So that's my source iirc, but EMSL has low authority these days. Yes, please do switch to `N+2` in NOTES in this PR. Thanks for the better information.; * `delta N > 2` should probably be rewritten to be extensible w/o copy-paste-sed, so don't bother future-proofing in that respect.; * General plan is that parts of the driver that are generic quantum chemistry should be useable w/o a psi4 dependence, hence the separate qcdb repo. Glad to explain in more detail later. No need to rebase off anything but psi4/psi4 master.; * Sorry, I should have worded that better. Yes, the xtpl fns want `psi4.core.Matrix` for gradient/Hessian extrapolations as input and output. But for all the manipulations of those arrays, you have the choice of keeping them as `Matrix` and using psi internals or to grabbing them as numpy arrays and using all the numpy manipulation syntax then returning to `Matrix` at the end. I just meant to say that if you're facing this choice, choose NumPy because the next version is going to take and return `ndarray`, not `psi4.core.Matrix`. Thanks!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/963#issuecomment-381609280
https://github.com/psi4/psi4/pull/963#issuecomment-381996152:482,Availability,down,down,482,"@loriab I think this is now ready for review. The values in the new test are hand-calculated from the single point values using a spreadsheet. Let me know if I should just boilerplate the docstrings from the `qcdb.cbs_helpers` file - and whether I should change just the missing functions or the old ones as well. One thing that is perhaps missing is handling of different `corl_alpha`'s for delta-corrections; this might actually be a useful feature, as one is more likely to drop down to [DT] extrapolation (for which `alpha = 2.4` gives better results) with things like CCSD(T) while using MP2/[TQ] as the `corl_wfn/basis`. It should be an easy fix. I left the `pcseg-N` basis sets out for now; I'll read the literature and see whether it makes sense. I still plan to allow the `roos-ano-[dt]z` basis sets into the CBS functions.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/963#issuecomment-381996152
https://github.com/psi4/psi4/pull/963#issuecomment-381996152:68,Testability,test,test,68,"@loriab I think this is now ready for review. The values in the new test are hand-calculated from the single point values using a spreadsheet. Let me know if I should just boilerplate the docstrings from the `qcdb.cbs_helpers` file - and whether I should change just the missing functions or the old ones as well. One thing that is perhaps missing is handling of different `corl_alpha`'s for delta-corrections; this might actually be a useful feature, as one is more likely to drop down to [DT] extrapolation (for which `alpha = 2.4` gives better results) with things like CCSD(T) while using MP2/[TQ] as the `corl_wfn/basis`. It should be an easy fix. I left the `pcseg-N` basis sets out for now; I'll read the literature and see whether it makes sense. I still plan to allow the `roos-ano-[dt]z` basis sets into the CBS functions.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/963#issuecomment-381996152
https://github.com/psi4/psi4/pull/963#issuecomment-383096630:155,Availability,error,error,155,Passes all tests but:; ```; The following tests FAILED:; 	370 - pywrap-align (Failed); 	371 - pywrap-align-chiral (Failed); ```; The two crash with import error; I guess that's just an environment issue.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/963#issuecomment-383096630
https://github.com/psi4/psi4/pull/963#issuecomment-383096630:11,Testability,test,tests,11,Passes all tests but:; ```; The following tests FAILED:; 	370 - pywrap-align (Failed); 	371 - pywrap-align-chiral (Failed); ```; The two crash with import error; I guess that's just an environment issue.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/963#issuecomment-383096630
https://github.com/psi4/psi4/pull/963#issuecomment-383096630:42,Testability,test,tests,42,Passes all tests but:; ```; The following tests FAILED:; 	370 - pywrap-align (Failed); 	371 - pywrap-align-chiral (Failed); ```; The two crash with import error; I guess that's just an environment issue.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/963#issuecomment-383096630
https://github.com/psi4/psi4/pull/965#issuecomment-382837750:171,Integrability,interface,interface,171,"@andysim , reading https://github.com/psi4/psi4/pull/965#pullrequestreview-112407645 again, I think I may have misinterpreted it. I read it as: since the original pubchem interface, pubchem has started to send back symmetrized mols, so the symmetrization currently applied by libmints Mol upon ""I'm from pubchem"" trigger is no longer necessary. Reading again, I'm betting you mean: no one's doing the symmetrize step that pubchem inputs need. Still a piece missing, right?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/965#issuecomment-382837750
https://github.com/psi4/psi4/pull/965#issuecomment-382854005:277,Availability,toler,tolerance,277,"@loriab Correct: I believe there's a symmetrization step missing. I forget exactly where it was done before, but things like benzene are commonly retrieved with coords that are effectively C1. There's (molecule?) member function somewhere that allows symmetrization to a given tolerance (something really sleazy like 0.01A is needed, IIRC) so it's just a case of calling that. A simple STO-3G optimization could be a good followup step, but that's not essential.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/965#issuecomment-382854005
https://github.com/psi4/psi4/pull/965#issuecomment-382854005:393,Performance,optimiz,optimization,393,"@loriab Correct: I believe there's a symmetrization step missing. I forget exactly where it was done before, but things like benzene are commonly retrieved with coords that are effectively C1. There's (molecule?) member function somewhere that allows symmetrization to a given tolerance (something really sleazy like 0.01A is needed, IIRC) so it's just a case of calling that. A simple STO-3G optimization could be a good followup step, but that's not essential.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/965#issuecomment-382854005
https://github.com/psi4/psi4/pull/965#issuecomment-382854005:379,Usability,simpl,simple,379,"@loriab Correct: I believe there's a symmetrization step missing. I forget exactly where it was done before, but things like benzene are commonly retrieved with coords that are effectively C1. There's (molecule?) member function somewhere that allows symmetrization to a given tolerance (something really sleazy like 0.01A is needed, IIRC) so it's just a case of calling that. A simple STO-3G optimization could be a good followup step, but that's not essential.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/965#issuecomment-382854005
https://github.com/psi4/psi4/pull/966#issuecomment-381802784:10,Testability,test,test,10,"Could you test non-frozen-core, too? And maybe DF between fnocc & dfocc?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/966#issuecomment-381802784
https://github.com/psi4/psi4/pull/966#issuecomment-381811539:22,Safety,Sanity check,Sanity checks,22,"If you would, please. Sanity checks never hurt. Anything that's doubled in `select_ccsd()`. Can remove https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/proc.py#L721-L722 and https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/proc.py#L743-L744 along with the detci docs.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/966#issuecomment-381811539
https://github.com/psi4/psi4/pull/966#issuecomment-381827387:73,Deployability,update,updated,73,"Removed the DETCI refs from the docs table, and in select ccsd. . I also updated occ psivars. It was setting `CURRENT CORRELATION ENERGY` for `{df/cd}-ccsd(t)` but it was not setting `CCSD(T) CORRELATION ENERGY`. The test now runs through a more complete set of cross checking. Testing conv (fnocc, ccenergy) and df/cd (fnocc, occ) both with and without frozen core. . Note: The changes to occ required a rebuild, and I am noticing when doing df/cd (either occ or fnocc module) I get a message printed to `stdout`""No atoms detected, returning"". Are we aware of this?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/966#issuecomment-381827387
https://github.com/psi4/psi4/pull/966#issuecomment-381827387:130,Energy Efficiency,ENERGY,ENERGY,130,"Removed the DETCI refs from the docs table, and in select ccsd. . I also updated occ psivars. It was setting `CURRENT CORRELATION ENERGY` for `{df/cd}-ccsd(t)` but it was not setting `CCSD(T) CORRELATION ENERGY`. The test now runs through a more complete set of cross checking. Testing conv (fnocc, ccenergy) and df/cd (fnocc, occ) both with and without frozen core. . Note: The changes to occ required a rebuild, and I am noticing when doing df/cd (either occ or fnocc module) I get a message printed to `stdout`""No atoms detected, returning"". Are we aware of this?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/966#issuecomment-381827387
https://github.com/psi4/psi4/pull/966#issuecomment-381827387:204,Energy Efficiency,ENERGY,ENERGY,204,"Removed the DETCI refs from the docs table, and in select ccsd. . I also updated occ psivars. It was setting `CURRENT CORRELATION ENERGY` for `{df/cd}-ccsd(t)` but it was not setting `CCSD(T) CORRELATION ENERGY`. The test now runs through a more complete set of cross checking. Testing conv (fnocc, ccenergy) and df/cd (fnocc, occ) both with and without frozen core. . Note: The changes to occ required a rebuild, and I am noticing when doing df/cd (either occ or fnocc module) I get a message printed to `stdout`""No atoms detected, returning"". Are we aware of this?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/966#issuecomment-381827387
https://github.com/psi4/psi4/pull/966#issuecomment-381827387:486,Integrability,message,message,486,"Removed the DETCI refs from the docs table, and in select ccsd. . I also updated occ psivars. It was setting `CURRENT CORRELATION ENERGY` for `{df/cd}-ccsd(t)` but it was not setting `CCSD(T) CORRELATION ENERGY`. The test now runs through a more complete set of cross checking. Testing conv (fnocc, ccenergy) and df/cd (fnocc, occ) both with and without frozen core. . Note: The changes to occ required a rebuild, and I am noticing when doing df/cd (either occ or fnocc module) I get a message printed to `stdout`""No atoms detected, returning"". Are we aware of this?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/966#issuecomment-381827387
https://github.com/psi4/psi4/pull/966#issuecomment-381827387:523,Safety,detect,detected,523,"Removed the DETCI refs from the docs table, and in select ccsd. . I also updated occ psivars. It was setting `CURRENT CORRELATION ENERGY` for `{df/cd}-ccsd(t)` but it was not setting `CCSD(T) CORRELATION ENERGY`. The test now runs through a more complete set of cross checking. Testing conv (fnocc, ccenergy) and df/cd (fnocc, occ) both with and without frozen core. . Note: The changes to occ required a rebuild, and I am noticing when doing df/cd (either occ or fnocc module) I get a message printed to `stdout`""No atoms detected, returning"". Are we aware of this?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/966#issuecomment-381827387
https://github.com/psi4/psi4/pull/966#issuecomment-381827387:217,Testability,test,test,217,"Removed the DETCI refs from the docs table, and in select ccsd. . I also updated occ psivars. It was setting `CURRENT CORRELATION ENERGY` for `{df/cd}-ccsd(t)` but it was not setting `CCSD(T) CORRELATION ENERGY`. The test now runs through a more complete set of cross checking. Testing conv (fnocc, ccenergy) and df/cd (fnocc, occ) both with and without frozen core. . Note: The changes to occ required a rebuild, and I am noticing when doing df/cd (either occ or fnocc module) I get a message printed to `stdout`""No atoms detected, returning"". Are we aware of this?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/966#issuecomment-381827387
https://github.com/psi4/psi4/pull/966#issuecomment-381827387:278,Testability,Test,Testing,278,"Removed the DETCI refs from the docs table, and in select ccsd. . I also updated occ psivars. It was setting `CURRENT CORRELATION ENERGY` for `{df/cd}-ccsd(t)` but it was not setting `CCSD(T) CORRELATION ENERGY`. The test now runs through a more complete set of cross checking. Testing conv (fnocc, ccenergy) and df/cd (fnocc, occ) both with and without frozen core. . Note: The changes to occ required a rebuild, and I am noticing when doing df/cd (either occ or fnocc module) I get a message printed to `stdout`""No atoms detected, returning"". Are we aware of this?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/966#issuecomment-381827387
https://github.com/psi4/psi4/pull/966#issuecomment-381827634:46,Testability,test,test,46,"Also waiting on input about where to put this test, with the larger set of checks it is most too long for `quicktests`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/966#issuecomment-381827634
https://github.com/psi4/psi4/pull/966#issuecomment-382011515:13,Safety,detect,detected,13,"On ""No atoms detected"", it's harmless but annoying. There's a couple PRs that'll fix it, but it wouldn't hurt to do it soon from a light PR like this one. https://psi4.slack.com/archives/C7W34BLQ7/p1521914834000079",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/966#issuecomment-382011515
https://github.com/psi4/psi4/pull/966#issuecomment-382039560:180,Safety,avoid,avoid,180,"Okay all my questions have been answered, so pending reviews this is ready to merge. I added the cost property to the vibanalysis test and applied the fix in `qcdb/molecule.py` to avoid the ""No atoms detected, returning"" lines printing. Since the test runs in 10s I left it in quicktests. Last question to answer, does this close out #714 or should that issue stay open after merge?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/966#issuecomment-382039560
https://github.com/psi4/psi4/pull/966#issuecomment-382039560:200,Safety,detect,detected,200,"Okay all my questions have been answered, so pending reviews this is ready to merge. I added the cost property to the vibanalysis test and applied the fix in `qcdb/molecule.py` to avoid the ""No atoms detected, returning"" lines printing. Since the test runs in 10s I left it in quicktests. Last question to answer, does this close out #714 or should that issue stay open after merge?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/966#issuecomment-382039560
https://github.com/psi4/psi4/pull/966#issuecomment-382039560:130,Testability,test,test,130,"Okay all my questions have been answered, so pending reviews this is ready to merge. I added the cost property to the vibanalysis test and applied the fix in `qcdb/molecule.py` to avoid the ""No atoms detected, returning"" lines printing. Since the test runs in 10s I left it in quicktests. Last question to answer, does this close out #714 or should that issue stay open after merge?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/966#issuecomment-382039560
https://github.com/psi4/psi4/pull/966#issuecomment-382039560:247,Testability,test,test,247,"Okay all my questions have been answered, so pending reviews this is ready to merge. I added the cost property to the vibanalysis test and applied the fix in `qcdb/molecule.py` to avoid the ""No atoms detected, returning"" lines printing. Since the test runs in 10s I left it in quicktests. Last question to answer, does this close out #714 or should that issue stay open after merge?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/966#issuecomment-382039560
https://github.com/psi4/psi4/issues/971#issuecomment-384319120:52,Availability,error,error,52,"My original issue was for a mac, but I see the same error on linux with intel18 compilers:. deprince_root@ed7:~/does_jk_work$ psi4; Attention! This SCF may be density-fitted.; /usr/bin/python3: symbol lookup error: /edfs/users/deprince/does_jk_work/does_jk_work.so: undefined symbol: _ZN3psi4PKJKC1ESt10shared_ptrINS_8BasisSetEERNS_7OptionsE. I don't understand what is going on. For previously functioning plugins, symbols are missing for only certain classes. I've noticed this for PK/DFJK and VBase so far.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/971#issuecomment-384319120
https://github.com/psi4/psi4/issues/971#issuecomment-384319120:208,Availability,error,error,208,"My original issue was for a mac, but I see the same error on linux with intel18 compilers:. deprince_root@ed7:~/does_jk_work$ psi4; Attention! This SCF may be density-fitted.; /usr/bin/python3: symbol lookup error: /edfs/users/deprince/does_jk_work/does_jk_work.so: undefined symbol: _ZN3psi4PKJKC1ESt10shared_ptrINS_8BasisSetEERNS_7OptionsE. I don't understand what is going on. For previously functioning plugins, symbols are missing for only certain classes. I've noticed this for PK/DFJK and VBase so far.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/971#issuecomment-384319120
https://github.com/psi4/psi4/issues/971#issuecomment-384319120:407,Modifiability,plugin,plugins,407,"My original issue was for a mac, but I see the same error on linux with intel18 compilers:. deprince_root@ed7:~/does_jk_work$ psi4; Attention! This SCF may be density-fitted.; /usr/bin/python3: symbol lookup error: /edfs/users/deprince/does_jk_work/does_jk_work.so: undefined symbol: _ZN3psi4PKJKC1ESt10shared_ptrINS_8BasisSetEERNS_7OptionsE. I don't understand what is going on. For previously functioning plugins, symbols are missing for only certain classes. I've noticed this for PK/DFJK and VBase so far.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/971#issuecomment-384319120
https://github.com/psi4/psi4/issues/971#issuecomment-384339865:246,Deployability,install,install,246,"c++filt __ZN3psi4PKJKC1ENSt3__110shared_ptrINS_8BasisSetEEERNS_7OptionsE; psi::PKJK::PKJK(std::__1::shared_ptr<psi::BasisSet>, psi::Options&). I'm not sure what this tells me. Regarding the symbol in core.so, it is there:. (11:48 ~/software/psi4/install/lib/psi4/) nm core.so | grep __ZN3psi4PKJKC1ENSt3__110shared_ptrINS_8BasisSetEEERNS_7OptionsE; 0000000000f0a730 t __ZN3psi4PKJKC1ENSt3__110shared_ptrINS_8BasisSetEEERNS_7OptionsE",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/971#issuecomment-384339865
https://github.com/psi4/psi4/issues/971#issuecomment-384374821:149,Modifiability,plugin,plugins,149,"@loriab , you are the best. I changed the class into class PSI_API PKJK, and all is well. So, should I make a PR for every case I encounter where my plugins can't see the symbols?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/971#issuecomment-384374821
https://github.com/psi4/psi4/issues/971#issuecomment-384378754:3,Availability,fault,fault,3,"My fault for not realizing you had only seen one half of the `PSI_API` additions. Yes, please add any you need psi-side and PR 'em all. [Here's](https://github.com/psi4/psi4/pull/955/files) more examples.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/971#issuecomment-384378754
https://github.com/psi4/psi4/issues/972#issuecomment-384791688:24,Deployability,release,release,24,Let's make 1.2 the last release w/o IR intensities.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/972#issuecomment-384791688
https://github.com/psi4/psi4/issues/972#issuecomment-406479505:142,Integrability,wrap,wrapped,142,There's some build-time --> run-time transitions that wouldn't be too hard.; - [x] libefp --> pylibefp (in #953) July 2018; - [ ] gdma --> py-wrapped gdma exe; - [ ] chemps2 --> pychemps2,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/972#issuecomment-406479505
https://github.com/psi4/psi4/issues/972#issuecomment-407559283:81,Availability,down,downstream,81,### Tentative Roadmap; - [ ] **1.3a1** when Windows ready; - alphas as needed by downstream users who need tags; - [ ] sometime drop py35 and add py37; - [ ] **feature freeze** & **1.3rc1** 1 Oct 2018; - rc's as needed until code settles; - [ ] **1.3** 1 Nov 2018; - [ ] **PsiCon2018** 9–10 Nov 2018 @ GT,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/972#issuecomment-407559283
https://github.com/psi4/psi4/issues/972#issuecomment-425681815:37,Deployability,release,released,37,"Hear ye, hear ye, the `1.3a1` tag is released. Commits after and including it may generate slightly different results due to the CODATA 2010 --> 2014 change.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/972#issuecomment-425681815
https://github.com/psi4/psi4/issues/972#issuecomment-444682893:54,Deployability,release,release,54,"To my surprise, consensus at the psi conf call was to release 1.3 sooner rather than later. This is part of an effort to make releases not a 2 month production but a more frequent and non-intensive and non-manic-sprint-to-get-your-feature-in-this-year occurrence. **To that end, we're planning on Feature Freeze on Monday, 10 December 2018. Considerable apologies for the short notice.**. * Naturally, bug fixes allowed after FF; * We're not averse to 1.3.1, etc.; * v1.4 anticipated May–July 2019",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/972#issuecomment-444682893
https://github.com/psi4/psi4/issues/972#issuecomment-444682893:126,Deployability,release,releases,126,"To my surprise, consensus at the psi conf call was to release 1.3 sooner rather than later. This is part of an effort to make releases not a 2 month production but a more frequent and non-intensive and non-manic-sprint-to-get-your-feature-in-this-year occurrence. **To that end, we're planning on Feature Freeze on Monday, 10 December 2018. Considerable apologies for the short notice.**. * Naturally, bug fixes allowed after FF; * We're not averse to 1.3.1, etc.; * v1.4 anticipated May–July 2019",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/972#issuecomment-444682893
https://github.com/psi4/psi4/issues/972#issuecomment-466437484:0,Deployability,Release,Release,0,Release v1.3 has been feature complete for a bit now and rc1/2 are now out. See #1406 for patch notes.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/972#issuecomment-466437484
https://github.com/psi4/psi4/issues/972#issuecomment-466437484:90,Deployability,patch,patch,90,Release v1.3 has been feature complete for a bit now and rc1/2 are now out. See #1406 for patch notes.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/972#issuecomment-466437484
https://github.com/psi4/psi4/issues/973#issuecomment-383228055:235,Deployability,release,released,235,"For the long-term we have the required Hessian-vector products. We need #886 would allow us to optimize them, planned for 1.3 when Python-SCF iterations go live. Please do make a PR for 1) and 2) as they are quite needed before 1.2 is released.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/973#issuecomment-383228055
https://github.com/psi4/psi4/issues/973#issuecomment-383228055:95,Performance,optimiz,optimize,95,"For the long-term we have the required Hessian-vector products. We need #886 would allow us to optimize them, planned for 1.3 when Python-SCF iterations go live. Please do make a PR for 1) and 2) as they are quite needed before 1.2 is released.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/973#issuecomment-383228055
https://github.com/psi4/psi4/issues/973#issuecomment-386380973:100,Deployability,release,release,100,Since there has been no action on this I'm going to take care of 1/2 above so that it makes the 1.2 release.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/973#issuecomment-386380973
https://github.com/psi4/psi4/pull/975#issuecomment-383597174:41,Energy Efficiency,energy,energy,41,"Just out of interest, does this fix the `energy(cbs, ... , bsse_type=[...])` calls? The ""method/basis"" syntax for CBS works fine, but ""explicit"" returns the total energy. I'm not sure what's the expected behaviour, but I think it should be consistent:. ```; molecule ne2 {; 0 1; Ne 0 0 0; --; 0 1; Ne 0 0 2; }. set {; scf_type df; mp2_type df; cc_type df; e_convergence 7; reference rhf; }. E_method_basis = energy(""MP2/cc-pv[tq]z + D:CCSD(T)/cc-pv[dt]z"", bsse_type=""nocp""); E_cbs = energy(cbs, bsse_type=""nocp"", corl_wfn=""mp2"", corl_basis=""cc-pv[tq]z"",; delta_wfn=""ccsd(t)"", delta_basis=""cc-pv[dt]z""). compare_values(E_method_basis, E_cbs, 6, ""Interaction energy"") #TEST ; ```; returns:; ```; TestComparisonError: 	Interaction energy: computed value (445.7515388) does not match (0.0131014) to 6 digits.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/975#issuecomment-383597174
https://github.com/psi4/psi4/pull/975#issuecomment-383597174:163,Energy Efficiency,energy,energy,163,"Just out of interest, does this fix the `energy(cbs, ... , bsse_type=[...])` calls? The ""method/basis"" syntax for CBS works fine, but ""explicit"" returns the total energy. I'm not sure what's the expected behaviour, but I think it should be consistent:. ```; molecule ne2 {; 0 1; Ne 0 0 0; --; 0 1; Ne 0 0 2; }. set {; scf_type df; mp2_type df; cc_type df; e_convergence 7; reference rhf; }. E_method_basis = energy(""MP2/cc-pv[tq]z + D:CCSD(T)/cc-pv[dt]z"", bsse_type=""nocp""); E_cbs = energy(cbs, bsse_type=""nocp"", corl_wfn=""mp2"", corl_basis=""cc-pv[tq]z"",; delta_wfn=""ccsd(t)"", delta_basis=""cc-pv[dt]z""). compare_values(E_method_basis, E_cbs, 6, ""Interaction energy"") #TEST ; ```; returns:; ```; TestComparisonError: 	Interaction energy: computed value (445.7515388) does not match (0.0131014) to 6 digits.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/975#issuecomment-383597174
https://github.com/psi4/psi4/pull/975#issuecomment-383597174:408,Energy Efficiency,energy,energy,408,"Just out of interest, does this fix the `energy(cbs, ... , bsse_type=[...])` calls? The ""method/basis"" syntax for CBS works fine, but ""explicit"" returns the total energy. I'm not sure what's the expected behaviour, but I think it should be consistent:. ```; molecule ne2 {; 0 1; Ne 0 0 0; --; 0 1; Ne 0 0 2; }. set {; scf_type df; mp2_type df; cc_type df; e_convergence 7; reference rhf; }. E_method_basis = energy(""MP2/cc-pv[tq]z + D:CCSD(T)/cc-pv[dt]z"", bsse_type=""nocp""); E_cbs = energy(cbs, bsse_type=""nocp"", corl_wfn=""mp2"", corl_basis=""cc-pv[tq]z"",; delta_wfn=""ccsd(t)"", delta_basis=""cc-pv[dt]z""). compare_values(E_method_basis, E_cbs, 6, ""Interaction energy"") #TEST ; ```; returns:; ```; TestComparisonError: 	Interaction energy: computed value (445.7515388) does not match (0.0131014) to 6 digits.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/975#issuecomment-383597174
https://github.com/psi4/psi4/pull/975#issuecomment-383597174:483,Energy Efficiency,energy,energy,483,"Just out of interest, does this fix the `energy(cbs, ... , bsse_type=[...])` calls? The ""method/basis"" syntax for CBS works fine, but ""explicit"" returns the total energy. I'm not sure what's the expected behaviour, but I think it should be consistent:. ```; molecule ne2 {; 0 1; Ne 0 0 0; --; 0 1; Ne 0 0 2; }. set {; scf_type df; mp2_type df; cc_type df; e_convergence 7; reference rhf; }. E_method_basis = energy(""MP2/cc-pv[tq]z + D:CCSD(T)/cc-pv[dt]z"", bsse_type=""nocp""); E_cbs = energy(cbs, bsse_type=""nocp"", corl_wfn=""mp2"", corl_basis=""cc-pv[tq]z"",; delta_wfn=""ccsd(t)"", delta_basis=""cc-pv[dt]z""). compare_values(E_method_basis, E_cbs, 6, ""Interaction energy"") #TEST ; ```; returns:; ```; TestComparisonError: 	Interaction energy: computed value (445.7515388) does not match (0.0131014) to 6 digits.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/975#issuecomment-383597174
https://github.com/psi4/psi4/pull/975#issuecomment-383597174:657,Energy Efficiency,energy,energy,657,"Just out of interest, does this fix the `energy(cbs, ... , bsse_type=[...])` calls? The ""method/basis"" syntax for CBS works fine, but ""explicit"" returns the total energy. I'm not sure what's the expected behaviour, but I think it should be consistent:. ```; molecule ne2 {; 0 1; Ne 0 0 0; --; 0 1; Ne 0 0 2; }. set {; scf_type df; mp2_type df; cc_type df; e_convergence 7; reference rhf; }. E_method_basis = energy(""MP2/cc-pv[tq]z + D:CCSD(T)/cc-pv[dt]z"", bsse_type=""nocp""); E_cbs = energy(cbs, bsse_type=""nocp"", corl_wfn=""mp2"", corl_basis=""cc-pv[tq]z"",; delta_wfn=""ccsd(t)"", delta_basis=""cc-pv[dt]z""). compare_values(E_method_basis, E_cbs, 6, ""Interaction energy"") #TEST ; ```; returns:; ```; TestComparisonError: 	Interaction energy: computed value (445.7515388) does not match (0.0131014) to 6 digits.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/975#issuecomment-383597174
https://github.com/psi4/psi4/pull/975#issuecomment-383597174:728,Energy Efficiency,energy,energy,728,"Just out of interest, does this fix the `energy(cbs, ... , bsse_type=[...])` calls? The ""method/basis"" syntax for CBS works fine, but ""explicit"" returns the total energy. I'm not sure what's the expected behaviour, but I think it should be consistent:. ```; molecule ne2 {; 0 1; Ne 0 0 0; --; 0 1; Ne 0 0 2; }. set {; scf_type df; mp2_type df; cc_type df; e_convergence 7; reference rhf; }. E_method_basis = energy(""MP2/cc-pv[tq]z + D:CCSD(T)/cc-pv[dt]z"", bsse_type=""nocp""); E_cbs = energy(cbs, bsse_type=""nocp"", corl_wfn=""mp2"", corl_basis=""cc-pv[tq]z"",; delta_wfn=""ccsd(t)"", delta_basis=""cc-pv[dt]z""). compare_values(E_method_basis, E_cbs, 6, ""Interaction energy"") #TEST ; ```; returns:; ```; TestComparisonError: 	Interaction energy: computed value (445.7515388) does not match (0.0131014) to 6 digits.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/975#issuecomment-383597174
https://github.com/psi4/psi4/pull/975#issuecomment-383597174:667,Testability,TEST,TEST,667,"Just out of interest, does this fix the `energy(cbs, ... , bsse_type=[...])` calls? The ""method/basis"" syntax for CBS works fine, but ""explicit"" returns the total energy. I'm not sure what's the expected behaviour, but I think it should be consistent:. ```; molecule ne2 {; 0 1; Ne 0 0 0; --; 0 1; Ne 0 0 2; }. set {; scf_type df; mp2_type df; cc_type df; e_convergence 7; reference rhf; }. E_method_basis = energy(""MP2/cc-pv[tq]z + D:CCSD(T)/cc-pv[dt]z"", bsse_type=""nocp""); E_cbs = energy(cbs, bsse_type=""nocp"", corl_wfn=""mp2"", corl_basis=""cc-pv[tq]z"",; delta_wfn=""ccsd(t)"", delta_basis=""cc-pv[dt]z""). compare_values(E_method_basis, E_cbs, 6, ""Interaction energy"") #TEST ; ```; returns:; ```; TestComparisonError: 	Interaction energy: computed value (445.7515388) does not match (0.0131014) to 6 digits.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/975#issuecomment-383597174
https://github.com/psi4/psi4/pull/975#issuecomment-383597174:694,Testability,Test,TestComparisonError,694,"Just out of interest, does this fix the `energy(cbs, ... , bsse_type=[...])` calls? The ""method/basis"" syntax for CBS works fine, but ""explicit"" returns the total energy. I'm not sure what's the expected behaviour, but I think it should be consistent:. ```; molecule ne2 {; 0 1; Ne 0 0 0; --; 0 1; Ne 0 0 2; }. set {; scf_type df; mp2_type df; cc_type df; e_convergence 7; reference rhf; }. E_method_basis = energy(""MP2/cc-pv[tq]z + D:CCSD(T)/cc-pv[dt]z"", bsse_type=""nocp""); E_cbs = energy(cbs, bsse_type=""nocp"", corl_wfn=""mp2"", corl_basis=""cc-pv[tq]z"",; delta_wfn=""ccsd(t)"", delta_basis=""cc-pv[dt]z""). compare_values(E_method_basis, E_cbs, 6, ""Interaction energy"") #TEST ; ```; returns:; ```; TestComparisonError: 	Interaction energy: computed value (445.7515388) does not match (0.0131014) to 6 digits.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/975#issuecomment-383597174
https://github.com/psi4/psi4/pull/975#issuecomment-383604532:180,Energy Efficiency,energy,energy,180,"@PeterKraus Not currently -- I arrive at exactly the same `TestComparisonError` that you have provided. It appears that `bsse_type` isn't a recognized kwarg of the CBS driver, so `energy(cbs, bsse_type='cp', ...)` still just returns a total energy. In the spirit of smaller PR's, I'd suggest that you make it into a new issue, which I'm happy to work on :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/975#issuecomment-383604532
https://github.com/psi4/psi4/pull/975#issuecomment-383604532:241,Energy Efficiency,energy,energy,241,"@PeterKraus Not currently -- I arrive at exactly the same `TestComparisonError` that you have provided. It appears that `bsse_type` isn't a recognized kwarg of the CBS driver, so `energy(cbs, bsse_type='cp', ...)` still just returns a total energy. In the spirit of smaller PR's, I'd suggest that you make it into a new issue, which I'm happy to work on :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/975#issuecomment-383604532
https://github.com/psi4/psi4/pull/975#issuecomment-383604532:59,Testability,Test,TestComparisonError,59,"@PeterKraus Not currently -- I arrive at exactly the same `TestComparisonError` that you have provided. It appears that `bsse_type` isn't a recognized kwarg of the CBS driver, so `energy(cbs, bsse_type='cp', ...)` still just returns a total energy. In the spirit of smaller PR's, I'd suggest that you make it into a new issue, which I'm happy to work on :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/975#issuecomment-383604532
https://github.com/psi4/psi4/issues/976#issuecomment-383722121:103,Energy Efficiency,energy,energy,103,"I did some comparison against G09 with and without FC for the Kr-OCS system. The total and correlation energy for the non-FC calculation agrees reasonably well:; ```; G09 vs Psi4; E_tot: -973.44895912 vs -973.44870301; E_corr: -0.9107877120 vs -0.9106736313; ```; while for the FC calculation there is a difference:; ```; G09 vs Psi4; E_tot: -973.33875833 vs -973.37470156; E_corr: -0.8005869194 vs -0.8366721825; ```; This difference seems to be coming mainly from the same-spin parts. When I calculate the Kr atom only, psi4 results do not differ whether I use MP2 with or without frozen core; in Gaussian, the full core correlation is `-0.283`, while FC-correlation is only `-0.242` Eh. I believe Gaussian freezes 4 electron pairs (3s + 3p) in addition to the 10 electrons substituted by the ECP (1s + 2s + 2p).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/976#issuecomment-383722121
https://github.com/psi4/psi4/issues/976#issuecomment-383729139:61,Safety,detect,detected,61,The issue seems to be skipping frozen core setup when ECP is detected here:. https://github.com/psi4/psi4/blob/a79c21681e411777451f5b474d7b652e2ba8baa2/psi4/src/psi4/libmints/basisset.cc#L190-L203,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/976#issuecomment-383729139
https://github.com/psi4/psi4/issues/977#issuecomment-397192582:13,Modifiability,extend,extending,13,I agree that extending `_nbody_gufunc()` is probably the easier way to do this. I'll have a look at it next week.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/977#issuecomment-397192582
https://github.com/psi4/psi4/pull/978#issuecomment-383831824:213,Deployability,patch,patch,213,"```; The following tests FAILED:; 	132 - dfmp2-ecp (Failed); 	368 - dft-bench-interaction (Timeout); 	370 - pywrap-align (Failed); 	371 - pywrap-align-chiral (Failed); ```; The 132 is not surprising, as with this patch up to `[Kr]` is frozen for Xe, without it only up to `[Ar] + 3d` from the ECP. I guess this is a question of what we want as default behaviour for `freeze_core` - always freeze up to the previous Rg (as done here and in other codes), or ignore further freezing for ECP's (as is done in `master`).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/978#issuecomment-383831824
https://github.com/psi4/psi4/pull/978#issuecomment-383831824:91,Safety,Timeout,Timeout,91,"```; The following tests FAILED:; 	132 - dfmp2-ecp (Failed); 	368 - dft-bench-interaction (Timeout); 	370 - pywrap-align (Failed); 	371 - pywrap-align-chiral (Failed); ```; The 132 is not surprising, as with this patch up to `[Kr]` is frozen for Xe, without it only up to `[Ar] + 3d` from the ECP. I guess this is a question of what we want as default behaviour for `freeze_core` - always freeze up to the previous Rg (as done here and in other codes), or ignore further freezing for ECP's (as is done in `master`).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/978#issuecomment-383831824
https://github.com/psi4/psi4/pull/978#issuecomment-383831824:19,Testability,test,tests,19,"```; The following tests FAILED:; 	132 - dfmp2-ecp (Failed); 	368 - dft-bench-interaction (Timeout); 	370 - pywrap-align (Failed); 	371 - pywrap-align-chiral (Failed); ```; The 132 is not surprising, as with this patch up to `[Kr]` is frozen for Xe, without it only up to `[Ar] + 3d` from the ECP. I guess this is a question of what we want as default behaviour for `freeze_core` - always freeze up to the previous Rg (as done here and in other codes), or ignore further freezing for ECP's (as is done in `master`).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/978#issuecomment-383831824
https://github.com/psi4/psi4/pull/978#issuecomment-385628434:17,Testability,test,test,17,"@loriab yeah the test needs updating: question is with what? Do we want to keep checking against just the ECP's frozen, or the full [Kr] frozen, or perhaps both?. My suggestion would be both: do a full-core Ne-Xe, then `frozen_core = True` Ne-Xe (with [He] and [Kr] frozen respectively), and then `num_frozen_docc = 1` which tests Ne ([He] frozen) - Xe (only ECP frozen) which is the current test.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/978#issuecomment-385628434
https://github.com/psi4/psi4/pull/978#issuecomment-385628434:325,Testability,test,tests,325,"@loriab yeah the test needs updating: question is with what? Do we want to keep checking against just the ECP's frozen, or the full [Kr] frozen, or perhaps both?. My suggestion would be both: do a full-core Ne-Xe, then `frozen_core = True` Ne-Xe (with [He] and [Kr] frozen respectively), and then `num_frozen_docc = 1` which tests Ne ([He] frozen) - Xe (only ECP frozen) which is the current test.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/978#issuecomment-385628434
https://github.com/psi4/psi4/pull/978#issuecomment-385628434:392,Testability,test,test,392,"@loriab yeah the test needs updating: question is with what? Do we want to keep checking against just the ECP's frozen, or the full [Kr] frozen, or perhaps both?. My suggestion would be both: do a full-core Ne-Xe, then `frozen_core = True` Ne-Xe (with [He] and [Kr] frozen respectively), and then `num_frozen_docc = 1` which tests Ne ([He] frozen) - Xe (only ECP frozen) which is the current test.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/978#issuecomment-385628434
https://github.com/psi4/psi4/pull/978#issuecomment-385629841:11,Testability,test,test,11,"The ""both"" test sounds good to me.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/978#issuecomment-385629841
https://github.com/psi4/psi4/pull/978#issuecomment-385631564:44,Testability,test,test,44,"How timely. Unless he's really quick with a test case, I think sep PR. It definitely qualifies as bugfix.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/978#issuecomment-385631564
https://github.com/psi4/psi4/pull/978#issuecomment-385869940:118,Energy Efficiency,charge,charge,118,"I believe this PR fixes the bug in #976 correctly, without adverse side effects (famous last words). Does the overall charge (from the charge/multiplicity entries) affect `Z` values of the component atoms? What happens when one would - perhaps foolishly - try to do a ""frozen core"" `Li^2+` calculation?. However, I am wondering whether our approach to core freezing is perhaps a bit simplistic: a point was raised on the forums that one might want to be able to automatically detect when the valence shell is empty (eg. alkali metal cations), and then perhaps unfreeze the previous shell. Similarly, some other QM packages allow freezing up to `N-th` previous rare gas shell (the current behaviour is `N=1`).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/978#issuecomment-385869940
https://github.com/psi4/psi4/pull/978#issuecomment-385869940:135,Energy Efficiency,charge,charge,135,"I believe this PR fixes the bug in #976 correctly, without adverse side effects (famous last words). Does the overall charge (from the charge/multiplicity entries) affect `Z` values of the component atoms? What happens when one would - perhaps foolishly - try to do a ""frozen core"" `Li^2+` calculation?. However, I am wondering whether our approach to core freezing is perhaps a bit simplistic: a point was raised on the forums that one might want to be able to automatically detect when the valence shell is empty (eg. alkali metal cations), and then perhaps unfreeze the previous shell. Similarly, some other QM packages allow freezing up to `N-th` previous rare gas shell (the current behaviour is `N=1`).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/978#issuecomment-385869940
https://github.com/psi4/psi4/pull/978#issuecomment-385869940:476,Safety,detect,detect,476,"I believe this PR fixes the bug in #976 correctly, without adverse side effects (famous last words). Does the overall charge (from the charge/multiplicity entries) affect `Z` values of the component atoms? What happens when one would - perhaps foolishly - try to do a ""frozen core"" `Li^2+` calculation?. However, I am wondering whether our approach to core freezing is perhaps a bit simplistic: a point was raised on the forums that one might want to be able to automatically detect when the valence shell is empty (eg. alkali metal cations), and then perhaps unfreeze the previous shell. Similarly, some other QM packages allow freezing up to `N-th` previous rare gas shell (the current behaviour is `N=1`).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/978#issuecomment-385869940
https://github.com/psi4/psi4/pull/978#issuecomment-385869940:383,Usability,simpl,simplistic,383,"I believe this PR fixes the bug in #976 correctly, without adverse side effects (famous last words). Does the overall charge (from the charge/multiplicity entries) affect `Z` values of the component atoms? What happens when one would - perhaps foolishly - try to do a ""frozen core"" `Li^2+` calculation?. However, I am wondering whether our approach to core freezing is perhaps a bit simplistic: a point was raised on the forums that one might want to be able to automatically detect when the valence shell is empty (eg. alkali metal cations), and then perhaps unfreeze the previous shell. Similarly, some other QM packages allow freezing up to `N-th` previous rare gas shell (the current behaviour is `N=1`).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/978#issuecomment-385869940
https://github.com/psi4/psi4/pull/978#issuecomment-385871335:482,Integrability,interface,interface,482,"Neither overall chg/mult nor fragment chg/mult will effect Mol.Z(at); all that info is stored separately. BasisSets are associated with each atom in Mol, so it does make some, though not a lot of, sense that ECPs should affect Z(at). Once upon a time there were true/false/large/small choices for `freeze_core`. They got dropped. I don't remember why, but I'd venture b/c they caused more confusion than convenience. But a lot more was handled c-side then. I expect a more flexible interface (that also takes frozen_docc into account) would have support.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/978#issuecomment-385871335
https://github.com/psi4/psi4/pull/978#issuecomment-385871335:473,Modifiability,flexible,flexible,473,"Neither overall chg/mult nor fragment chg/mult will effect Mol.Z(at); all that info is stored separately. BasisSets are associated with each atom in Mol, so it does make some, though not a lot of, sense that ECPs should affect Z(at). Once upon a time there were true/false/large/small choices for `freeze_core`. They got dropped. I don't remember why, but I'd venture b/c they caused more confusion than convenience. But a lot more was handled c-side then. I expect a more flexible interface (that also takes frozen_docc into account) would have support.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/978#issuecomment-385871335
https://github.com/psi4/psi4/pull/979#issuecomment-384995562:965,Energy Efficiency,reduce,reduce,965,"My thoughts on the questions:; > How much validation do we want?. I would think that input would need to be validated always as the source is unknown, and output should be validated as part of the test suite, but then does not need to be validated at run-time before they are returned since (ideally) the test-suite ensures that our output jsons always adhere to the schema. Is there a best practice followed by applications using JSON APIs? For example does the JSON ""consumer"" always hold responsibility for checking that the object received is valid, or is it up to the JSON ""producer"" to ensure that objects are valid before sending them? . >A full test suite should like come from the schema itself?. Not sure what you mean here. Should the schema project provide functionality to validate objects that can be used by applications adhering to the schema to test that their JSON generating functions are generating valid objects? That would be great, and would reduce the amount of work that needs to be done by devs of individual QC packages to adopt the interface. > How we will we handle extra psi vars? Is the current setup sufficient.; If the schema allows for extra/arbitrary fields somewhere, we could provide all psivars/arrays there. If not then I guess we can just add handling of additional psivars in the future as they apply to new revisions of the schema?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/979#issuecomment-384995562
https://github.com/psi4/psi4/pull/979#issuecomment-384995562:1060,Integrability,interface,interface,1060,"My thoughts on the questions:; > How much validation do we want?. I would think that input would need to be validated always as the source is unknown, and output should be validated as part of the test suite, but then does not need to be validated at run-time before they are returned since (ideally) the test-suite ensures that our output jsons always adhere to the schema. Is there a best practice followed by applications using JSON APIs? For example does the JSON ""consumer"" always hold responsibility for checking that the object received is valid, or is it up to the JSON ""producer"" to ensure that objects are valid before sending them? . >A full test suite should like come from the schema itself?. Not sure what you mean here. Should the schema project provide functionality to validate objects that can be used by applications adhering to the schema to test that their JSON generating functions are generating valid objects? That would be great, and would reduce the amount of work that needs to be done by devs of individual QC packages to adopt the interface. > How we will we handle extra psi vars? Is the current setup sufficient.; If the schema allows for extra/arbitrary fields somewhere, we could provide all psivars/arrays there. If not then I guess we can just add handling of additional psivars in the future as they apply to new revisions of the schema?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/979#issuecomment-384995562
https://github.com/psi4/psi4/pull/979#issuecomment-384995562:42,Security,validat,validation,42,"My thoughts on the questions:; > How much validation do we want?. I would think that input would need to be validated always as the source is unknown, and output should be validated as part of the test suite, but then does not need to be validated at run-time before they are returned since (ideally) the test-suite ensures that our output jsons always adhere to the schema. Is there a best practice followed by applications using JSON APIs? For example does the JSON ""consumer"" always hold responsibility for checking that the object received is valid, or is it up to the JSON ""producer"" to ensure that objects are valid before sending them? . >A full test suite should like come from the schema itself?. Not sure what you mean here. Should the schema project provide functionality to validate objects that can be used by applications adhering to the schema to test that their JSON generating functions are generating valid objects? That would be great, and would reduce the amount of work that needs to be done by devs of individual QC packages to adopt the interface. > How we will we handle extra psi vars? Is the current setup sufficient.; If the schema allows for extra/arbitrary fields somewhere, we could provide all psivars/arrays there. If not then I guess we can just add handling of additional psivars in the future as they apply to new revisions of the schema?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/979#issuecomment-384995562
https://github.com/psi4/psi4/pull/979#issuecomment-384995562:108,Security,validat,validated,108,"My thoughts on the questions:; > How much validation do we want?. I would think that input would need to be validated always as the source is unknown, and output should be validated as part of the test suite, but then does not need to be validated at run-time before they are returned since (ideally) the test-suite ensures that our output jsons always adhere to the schema. Is there a best practice followed by applications using JSON APIs? For example does the JSON ""consumer"" always hold responsibility for checking that the object received is valid, or is it up to the JSON ""producer"" to ensure that objects are valid before sending them? . >A full test suite should like come from the schema itself?. Not sure what you mean here. Should the schema project provide functionality to validate objects that can be used by applications adhering to the schema to test that their JSON generating functions are generating valid objects? That would be great, and would reduce the amount of work that needs to be done by devs of individual QC packages to adopt the interface. > How we will we handle extra psi vars? Is the current setup sufficient.; If the schema allows for extra/arbitrary fields somewhere, we could provide all psivars/arrays there. If not then I guess we can just add handling of additional psivars in the future as they apply to new revisions of the schema?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/979#issuecomment-384995562
https://github.com/psi4/psi4/pull/979#issuecomment-384995562:172,Security,validat,validated,172,"My thoughts on the questions:; > How much validation do we want?. I would think that input would need to be validated always as the source is unknown, and output should be validated as part of the test suite, but then does not need to be validated at run-time before they are returned since (ideally) the test-suite ensures that our output jsons always adhere to the schema. Is there a best practice followed by applications using JSON APIs? For example does the JSON ""consumer"" always hold responsibility for checking that the object received is valid, or is it up to the JSON ""producer"" to ensure that objects are valid before sending them? . >A full test suite should like come from the schema itself?. Not sure what you mean here. Should the schema project provide functionality to validate objects that can be used by applications adhering to the schema to test that their JSON generating functions are generating valid objects? That would be great, and would reduce the amount of work that needs to be done by devs of individual QC packages to adopt the interface. > How we will we handle extra psi vars? Is the current setup sufficient.; If the schema allows for extra/arbitrary fields somewhere, we could provide all psivars/arrays there. If not then I guess we can just add handling of additional psivars in the future as they apply to new revisions of the schema?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/979#issuecomment-384995562
https://github.com/psi4/psi4/pull/979#issuecomment-384995562:238,Security,validat,validated,238,"My thoughts on the questions:; > How much validation do we want?. I would think that input would need to be validated always as the source is unknown, and output should be validated as part of the test suite, but then does not need to be validated at run-time before they are returned since (ideally) the test-suite ensures that our output jsons always adhere to the schema. Is there a best practice followed by applications using JSON APIs? For example does the JSON ""consumer"" always hold responsibility for checking that the object received is valid, or is it up to the JSON ""producer"" to ensure that objects are valid before sending them? . >A full test suite should like come from the schema itself?. Not sure what you mean here. Should the schema project provide functionality to validate objects that can be used by applications adhering to the schema to test that their JSON generating functions are generating valid objects? That would be great, and would reduce the amount of work that needs to be done by devs of individual QC packages to adopt the interface. > How we will we handle extra psi vars? Is the current setup sufficient.; If the schema allows for extra/arbitrary fields somewhere, we could provide all psivars/arrays there. If not then I guess we can just add handling of additional psivars in the future as they apply to new revisions of the schema?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/979#issuecomment-384995562
https://github.com/psi4/psi4/pull/979#issuecomment-384995562:786,Security,validat,validate,786,"My thoughts on the questions:; > How much validation do we want?. I would think that input would need to be validated always as the source is unknown, and output should be validated as part of the test suite, but then does not need to be validated at run-time before they are returned since (ideally) the test-suite ensures that our output jsons always adhere to the schema. Is there a best practice followed by applications using JSON APIs? For example does the JSON ""consumer"" always hold responsibility for checking that the object received is valid, or is it up to the JSON ""producer"" to ensure that objects are valid before sending them? . >A full test suite should like come from the schema itself?. Not sure what you mean here. Should the schema project provide functionality to validate objects that can be used by applications adhering to the schema to test that their JSON generating functions are generating valid objects? That would be great, and would reduce the amount of work that needs to be done by devs of individual QC packages to adopt the interface. > How we will we handle extra psi vars? Is the current setup sufficient.; If the schema allows for extra/arbitrary fields somewhere, we could provide all psivars/arrays there. If not then I guess we can just add handling of additional psivars in the future as they apply to new revisions of the schema?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/979#issuecomment-384995562
https://github.com/psi4/psi4/pull/979#issuecomment-384995562:197,Testability,test,test,197,"My thoughts on the questions:; > How much validation do we want?. I would think that input would need to be validated always as the source is unknown, and output should be validated as part of the test suite, but then does not need to be validated at run-time before they are returned since (ideally) the test-suite ensures that our output jsons always adhere to the schema. Is there a best practice followed by applications using JSON APIs? For example does the JSON ""consumer"" always hold responsibility for checking that the object received is valid, or is it up to the JSON ""producer"" to ensure that objects are valid before sending them? . >A full test suite should like come from the schema itself?. Not sure what you mean here. Should the schema project provide functionality to validate objects that can be used by applications adhering to the schema to test that their JSON generating functions are generating valid objects? That would be great, and would reduce the amount of work that needs to be done by devs of individual QC packages to adopt the interface. > How we will we handle extra psi vars? Is the current setup sufficient.; If the schema allows for extra/arbitrary fields somewhere, we could provide all psivars/arrays there. If not then I guess we can just add handling of additional psivars in the future as they apply to new revisions of the schema?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/979#issuecomment-384995562
https://github.com/psi4/psi4/pull/979#issuecomment-384995562:305,Testability,test,test-suite,305,"My thoughts on the questions:; > How much validation do we want?. I would think that input would need to be validated always as the source is unknown, and output should be validated as part of the test suite, but then does not need to be validated at run-time before they are returned since (ideally) the test-suite ensures that our output jsons always adhere to the schema. Is there a best practice followed by applications using JSON APIs? For example does the JSON ""consumer"" always hold responsibility for checking that the object received is valid, or is it up to the JSON ""producer"" to ensure that objects are valid before sending them? . >A full test suite should like come from the schema itself?. Not sure what you mean here. Should the schema project provide functionality to validate objects that can be used by applications adhering to the schema to test that their JSON generating functions are generating valid objects? That would be great, and would reduce the amount of work that needs to be done by devs of individual QC packages to adopt the interface. > How we will we handle extra psi vars? Is the current setup sufficient.; If the schema allows for extra/arbitrary fields somewhere, we could provide all psivars/arrays there. If not then I guess we can just add handling of additional psivars in the future as they apply to new revisions of the schema?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/979#issuecomment-384995562
https://github.com/psi4/psi4/pull/979#issuecomment-384995562:653,Testability,test,test,653,"My thoughts on the questions:; > How much validation do we want?. I would think that input would need to be validated always as the source is unknown, and output should be validated as part of the test suite, but then does not need to be validated at run-time before they are returned since (ideally) the test-suite ensures that our output jsons always adhere to the schema. Is there a best practice followed by applications using JSON APIs? For example does the JSON ""consumer"" always hold responsibility for checking that the object received is valid, or is it up to the JSON ""producer"" to ensure that objects are valid before sending them? . >A full test suite should like come from the schema itself?. Not sure what you mean here. Should the schema project provide functionality to validate objects that can be used by applications adhering to the schema to test that their JSON generating functions are generating valid objects? That would be great, and would reduce the amount of work that needs to be done by devs of individual QC packages to adopt the interface. > How we will we handle extra psi vars? Is the current setup sufficient.; If the schema allows for extra/arbitrary fields somewhere, we could provide all psivars/arrays there. If not then I guess we can just add handling of additional psivars in the future as they apply to new revisions of the schema?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/979#issuecomment-384995562
https://github.com/psi4/psi4/pull/979#issuecomment-384995562:862,Testability,test,test,862,"My thoughts on the questions:; > How much validation do we want?. I would think that input would need to be validated always as the source is unknown, and output should be validated as part of the test suite, but then does not need to be validated at run-time before they are returned since (ideally) the test-suite ensures that our output jsons always adhere to the schema. Is there a best practice followed by applications using JSON APIs? For example does the JSON ""consumer"" always hold responsibility for checking that the object received is valid, or is it up to the JSON ""producer"" to ensure that objects are valid before sending them? . >A full test suite should like come from the schema itself?. Not sure what you mean here. Should the schema project provide functionality to validate objects that can be used by applications adhering to the schema to test that their JSON generating functions are generating valid objects? That would be great, and would reduce the amount of work that needs to be done by devs of individual QC packages to adopt the interface. > How we will we handle extra psi vars? Is the current setup sufficient.; If the schema allows for extra/arbitrary fields somewhere, we could provide all psivars/arrays there. If not then I guess we can just add handling of additional psivars in the future as they apply to new revisions of the schema?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/979#issuecomment-384995562
https://github.com/psi4/psi4/pull/979#issuecomment-385076049:58,Security,validat,validator,58,"Ultimately we want to run the JSON through a `jsonschema` validator based on the QC schema spec. However, we are not quite there yet as we would need quite a few extensions. Mostly the question at the moment is how much validation do we want at this moment. For the QC schema test suite: We have about a dozen examples currently of input/ouput. I would imagine that this will expand quiet considerably over time and ultimately represent a test suite in of itself. The QC schema project will produce a `jsonschema` specification of input and output which can validate structure in most languages, see [here](http://json-schema.org/implementations.html). The sample could be turned into a test suite to validate the information contained. A general comment about schema's. They unfortunately have no hope of validating content, just structure.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/979#issuecomment-385076049
https://github.com/psi4/psi4/pull/979#issuecomment-385076049:220,Security,validat,validation,220,"Ultimately we want to run the JSON through a `jsonschema` validator based on the QC schema spec. However, we are not quite there yet as we would need quite a few extensions. Mostly the question at the moment is how much validation do we want at this moment. For the QC schema test suite: We have about a dozen examples currently of input/ouput. I would imagine that this will expand quiet considerably over time and ultimately represent a test suite in of itself. The QC schema project will produce a `jsonschema` specification of input and output which can validate structure in most languages, see [here](http://json-schema.org/implementations.html). The sample could be turned into a test suite to validate the information contained. A general comment about schema's. They unfortunately have no hope of validating content, just structure.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/979#issuecomment-385076049
https://github.com/psi4/psi4/pull/979#issuecomment-385076049:558,Security,validat,validate,558,"Ultimately we want to run the JSON through a `jsonschema` validator based on the QC schema spec. However, we are not quite there yet as we would need quite a few extensions. Mostly the question at the moment is how much validation do we want at this moment. For the QC schema test suite: We have about a dozen examples currently of input/ouput. I would imagine that this will expand quiet considerably over time and ultimately represent a test suite in of itself. The QC schema project will produce a `jsonschema` specification of input and output which can validate structure in most languages, see [here](http://json-schema.org/implementations.html). The sample could be turned into a test suite to validate the information contained. A general comment about schema's. They unfortunately have no hope of validating content, just structure.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/979#issuecomment-385076049
https://github.com/psi4/psi4/pull/979#issuecomment-385076049:701,Security,validat,validate,701,"Ultimately we want to run the JSON through a `jsonschema` validator based on the QC schema spec. However, we are not quite there yet as we would need quite a few extensions. Mostly the question at the moment is how much validation do we want at this moment. For the QC schema test suite: We have about a dozen examples currently of input/ouput. I would imagine that this will expand quiet considerably over time and ultimately represent a test suite in of itself. The QC schema project will produce a `jsonschema` specification of input and output which can validate structure in most languages, see [here](http://json-schema.org/implementations.html). The sample could be turned into a test suite to validate the information contained. A general comment about schema's. They unfortunately have no hope of validating content, just structure.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/979#issuecomment-385076049
https://github.com/psi4/psi4/pull/979#issuecomment-385076049:806,Security,validat,validating,806,"Ultimately we want to run the JSON through a `jsonschema` validator based on the QC schema spec. However, we are not quite there yet as we would need quite a few extensions. Mostly the question at the moment is how much validation do we want at this moment. For the QC schema test suite: We have about a dozen examples currently of input/ouput. I would imagine that this will expand quiet considerably over time and ultimately represent a test suite in of itself. The QC schema project will produce a `jsonschema` specification of input and output which can validate structure in most languages, see [here](http://json-schema.org/implementations.html). The sample could be turned into a test suite to validate the information contained. A general comment about schema's. They unfortunately have no hope of validating content, just structure.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/979#issuecomment-385076049
https://github.com/psi4/psi4/pull/979#issuecomment-385076049:276,Testability,test,test,276,"Ultimately we want to run the JSON through a `jsonschema` validator based on the QC schema spec. However, we are not quite there yet as we would need quite a few extensions. Mostly the question at the moment is how much validation do we want at this moment. For the QC schema test suite: We have about a dozen examples currently of input/ouput. I would imagine that this will expand quiet considerably over time and ultimately represent a test suite in of itself. The QC schema project will produce a `jsonschema` specification of input and output which can validate structure in most languages, see [here](http://json-schema.org/implementations.html). The sample could be turned into a test suite to validate the information contained. A general comment about schema's. They unfortunately have no hope of validating content, just structure.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/979#issuecomment-385076049
https://github.com/psi4/psi4/pull/979#issuecomment-385076049:439,Testability,test,test,439,"Ultimately we want to run the JSON through a `jsonschema` validator based on the QC schema spec. However, we are not quite there yet as we would need quite a few extensions. Mostly the question at the moment is how much validation do we want at this moment. For the QC schema test suite: We have about a dozen examples currently of input/ouput. I would imagine that this will expand quiet considerably over time and ultimately represent a test suite in of itself. The QC schema project will produce a `jsonschema` specification of input and output which can validate structure in most languages, see [here](http://json-schema.org/implementations.html). The sample could be turned into a test suite to validate the information contained. A general comment about schema's. They unfortunately have no hope of validating content, just structure.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/979#issuecomment-385076049
https://github.com/psi4/psi4/pull/979#issuecomment-385076049:687,Testability,test,test,687,"Ultimately we want to run the JSON through a `jsonschema` validator based on the QC schema spec. However, we are not quite there yet as we would need quite a few extensions. Mostly the question at the moment is how much validation do we want at this moment. For the QC schema test suite: We have about a dozen examples currently of input/ouput. I would imagine that this will expand quiet considerably over time and ultimately represent a test suite in of itself. The QC schema project will produce a `jsonschema` specification of input and output which can validate structure in most languages, see [here](http://json-schema.org/implementations.html). The sample could be turned into a test suite to validate the information contained. A general comment about schema's. They unfortunately have no hope of validating content, just structure.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/979#issuecomment-385076049
https://github.com/psi4/psi4/pull/979#issuecomment-387221219:172,Deployability,update,update,172,"@andysim We may have run out of people able to review this. Going to pull it in as this is this is a versioned WIP. We should be minting the ""version 1"" Schema soon so can update this in a week or so under the guise of a bug fix.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/979#issuecomment-387221219
https://github.com/psi4/psi4/issues/980#issuecomment-384474917:199,Availability,down,downstream,199,"For fun, I computed the SCF energy from these DUMP files and both sum to the same SCF energy. It looks more like a representation issue than an actual bug. Its probably worth running these through a downstream program and seeing the result.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/980#issuecomment-384474917
https://github.com/psi4/psi4/issues/980#issuecomment-384474917:28,Energy Efficiency,energy,energy,28,"For fun, I computed the SCF energy from these DUMP files and both sum to the same SCF energy. It looks more like a representation issue than an actual bug. Its probably worth running these through a downstream program and seeing the result.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/980#issuecomment-384474917
https://github.com/psi4/psi4/issues/980#issuecomment-384474917:86,Energy Efficiency,energy,energy,86,"For fun, I computed the SCF energy from these DUMP files and both sum to the same SCF energy. It looks more like a representation issue than an actual bug. Its probably worth running these through a downstream program and seeing the result.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/980#issuecomment-384474917
https://github.com/psi4/psi4/issues/980#issuecomment-385264045:38,Testability,test,test,38,"If it was purely representation, then test case shouldn't have failed. Or check on test was too tight.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/980#issuecomment-385264045
https://github.com/psi4/psi4/issues/980#issuecomment-385264045:83,Testability,test,test,83,"If it was purely representation, then test case shouldn't have failed. Or check on test was too tight.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/980#issuecomment-385264045
https://github.com/psi4/psi4/issues/980#issuecomment-385264199:4,Testability,test,test,4,The test case checks individual integral values. In this particular case there are a infinite number of representations that give equivalent results as the test is a single atom. This has stung us a few times before in things like `cube` and similar where we purposefully build C1 molecules in frozen cartesian space to prevent this issue.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/980#issuecomment-385264199
https://github.com/psi4/psi4/issues/980#issuecomment-385264199:156,Testability,test,test,156,The test case checks individual integral values. In this particular case there are a infinite number of representations that give equivalent results as the test is a single atom. This has stung us a few times before in things like `cube` and similar where we purposefully build C1 molecules in frozen cartesian space to prevent this issue.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/980#issuecomment-385264199
https://github.com/psi4/psi4/issues/980#issuecomment-385264868:38,Testability,test,test,38,"Indeed, considering the nature of the test, [my comment](https://github.com/psi4/psi4/issues/980#issuecomment-385264045) was wrongheaded.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/980#issuecomment-385264868
https://github.com/psi4/psi4/pull/981#issuecomment-384402964:137,Energy Efficiency,energy,energy,137,"The only test that failed in quicktests is x2c1, and I don't believe this PR is the culprit:. TestComparisonError: Non-relativistic CCSD energy: computed value (-76.2807318207) does not match (-76.2807318195) to 9 digits.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/981#issuecomment-384402964
https://github.com/psi4/psi4/pull/981#issuecomment-384402964:9,Testability,test,test,9,"The only test that failed in quicktests is x2c1, and I don't believe this PR is the culprit:. TestComparisonError: Non-relativistic CCSD energy: computed value (-76.2807318207) does not match (-76.2807318195) to 9 digits.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/981#issuecomment-384402964
https://github.com/psi4/psi4/pull/981#issuecomment-384402964:94,Testability,Test,TestComparisonError,94,"The only test that failed in quicktests is x2c1, and I don't believe this PR is the culprit:. TestComparisonError: Non-relativistic CCSD energy: computed value (-76.2807318207) does not match (-76.2807318195) to 9 digits.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/981#issuecomment-384402964
https://github.com/psi4/psi4/pull/986#issuecomment-385072264:844,Testability,test,tests,844,"OK, this was substantially more work than I initially thought. @dgasmith , please have a look if you're happy with the changes to `proc_table` and `proc_util` - I chose to remove the whole `superfunctional_list` generation in favour of directly exporting the `functionals` dictionary of dict_funcs and `build_superfunctional_from_dictionary` functions. Also, as the rest of the code seems to have been using `.lower()` for methods, I've swapped the `dict_funcs` and `EmpiricalDispersion` to lowercase too. The only place where I'm _not_ applying `.lower()` is for the `""name""` argument to `dict_funcs`, as that is used for printing the method name. @loriab is the modest amount of docs enough? If you need more, please tell me what's the best way to generate the output from these rst files - my sphinx experience is very limited. All relevant tests pass - only pywraps fail (dft-bench-interaction T/O's).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/986#issuecomment-385072264
https://github.com/psi4/psi4/pull/988#issuecomment-385086354:125,Energy Efficiency,Green,Green,125,"I agree. Largely reorg and infrastructure. https://github.com/PCMSolver/pcmsolver/blob/v1.2.0/CHANGELOG.md. Can Psi4 hit the Green's function changes, @robertodr?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/988#issuecomment-385086354
https://github.com/psi4/psi4/pull/988#issuecomment-385086549:78,Deployability,update,updated,78,"If you would, @robertodr, please go over this file and see if anything can be updated or elaborated. https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/pcmsolver.rst",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/988#issuecomment-385086549
https://github.com/psi4/psi4/pull/988#issuecomment-385191049:4,Deployability,toggle,toggle,4,"And toggle https://github.com/psi4/psi4/blob/master/external/upstream/pcmsolver/CMakeLists.txt#L41 off, as you recommended.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/988#issuecomment-385191049
https://github.com/psi4/psi4/pull/988#issuecomment-385743002:23,Deployability,patch,patch,23,guess I'll do v1.2.0 + patch for conda (see https://github.com/PCMSolver/pcmsolver/issues/165). let me know when there's a tag that's fully operational (and what it's name will be)).,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/988#issuecomment-385743002
https://github.com/psi4/psi4/pull/988#issuecomment-386082337:92,Deployability,update,updated,92,"@loriab `v1.2.1` tagged. With all necessary fixes this time, at least from my testing. I've updated docs and tests. The DALTON inputs and output files for the geometry optimization test are also included.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/988#issuecomment-386082337
https://github.com/psi4/psi4/pull/988#issuecomment-386082337:168,Performance,optimiz,optimization,168,"@loriab `v1.2.1` tagged. With all necessary fixes this time, at least from my testing. I've updated docs and tests. The DALTON inputs and output files for the geometry optimization test are also included.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/988#issuecomment-386082337
https://github.com/psi4/psi4/pull/988#issuecomment-386082337:78,Testability,test,testing,78,"@loriab `v1.2.1` tagged. With all necessary fixes this time, at least from my testing. I've updated docs and tests. The DALTON inputs and output files for the geometry optimization test are also included.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/988#issuecomment-386082337
https://github.com/psi4/psi4/pull/988#issuecomment-386082337:109,Testability,test,tests,109,"@loriab `v1.2.1` tagged. With all necessary fixes this time, at least from my testing. I've updated docs and tests. The DALTON inputs and output files for the geometry optimization test are also included.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/988#issuecomment-386082337
https://github.com/psi4/psi4/pull/988#issuecomment-386082337:181,Testability,test,test,181,"@loriab `v1.2.1` tagged. With all necessary fixes this time, at least from my testing. I've updated docs and tests. The DALTON inputs and output files for the geometry optimization test are also included.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/988#issuecomment-386082337
https://github.com/psi4/psi4/issues/989#issuecomment-385065247:41,Availability,error,error,41,"I ran some tests to try to reproduce the error, and I found that the point where the error started _differed_ between runs. Sometimes, it ended after printing B(2, 1, 3), sometimes it printed *R(0,1) as infinity and said the optimization failed, sometimes it said it was generating an empirical Hessian for each fragment and failed after that... Is this what you're seeing?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/989#issuecomment-385065247
https://github.com/psi4/psi4/issues/989#issuecomment-385065247:85,Availability,error,error,85,"I ran some tests to try to reproduce the error, and I found that the point where the error started _differed_ between runs. Sometimes, it ended after printing B(2, 1, 3), sometimes it printed *R(0,1) as infinity and said the optimization failed, sometimes it said it was generating an empirical Hessian for each fragment and failed after that... Is this what you're seeing?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/989#issuecomment-385065247
https://github.com/psi4/psi4/issues/989#issuecomment-385065247:225,Performance,optimiz,optimization,225,"I ran some tests to try to reproduce the error, and I found that the point where the error started _differed_ between runs. Sometimes, it ended after printing B(2, 1, 3), sometimes it printed *R(0,1) as infinity and said the optimization failed, sometimes it said it was generating an empirical Hessian for each fragment and failed after that... Is this what you're seeing?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/989#issuecomment-385065247
https://github.com/psi4/psi4/issues/989#issuecomment-385065247:11,Testability,test,tests,11,"I ran some tests to try to reproduce the error, and I found that the point where the error started _differed_ between runs. Sometimes, it ended after printing B(2, 1, 3), sometimes it printed *R(0,1) as infinity and said the optimization failed, sometimes it said it was generating an empirical Hessian for each fragment and failed after that... Is this what you're seeing?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/989#issuecomment-385065247
https://github.com/psi4/psi4/issues/989#issuecomment-385126008:125,Availability,error,error,125,"I just ran it another few times and I'm seeing the behavior you mentioned, including once where it failed with a convergence error (i.e. on the Python side).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/989#issuecomment-385126008
https://github.com/psi4/psi4/issues/989#issuecomment-385130211:536,Availability,error,error-message,536,"In hindsight, I should have noticed this earlier:; OPTKING numbers atoms starting from 1, so the value in your options dict should be `1 2`, not `0 1`. Due to how the optimizer works, it will treat `1 2` and `1 3` as symmetry equivalent, so for actual code, you would need to manually specify Cs symmetry if you really wanted to fix only one bond. When I run the optimization with that change, it works just fine. I'm guessing that OPTKING doesn't know how to handle a request to process ""atom 0,"" which leads us to the choose-your-own-error-message adventure. This is definitely not the most graceful way to handle an invalid atom request, but I'll leave it to the core devs to decide what fix would be most appropriate, since OPTKING is scheduled to be replaced soon anyways.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/989#issuecomment-385130211
https://github.com/psi4/psi4/issues/989#issuecomment-385130211:739,Energy Efficiency,schedul,scheduled,739,"In hindsight, I should have noticed this earlier:; OPTKING numbers atoms starting from 1, so the value in your options dict should be `1 2`, not `0 1`. Due to how the optimizer works, it will treat `1 2` and `1 3` as symmetry equivalent, so for actual code, you would need to manually specify Cs symmetry if you really wanted to fix only one bond. When I run the optimization with that change, it works just fine. I'm guessing that OPTKING doesn't know how to handle a request to process ""atom 0,"" which leads us to the choose-your-own-error-message adventure. This is definitely not the most graceful way to handle an invalid atom request, but I'll leave it to the core devs to decide what fix would be most appropriate, since OPTKING is scheduled to be replaced soon anyways.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/989#issuecomment-385130211
https://github.com/psi4/psi4/issues/989#issuecomment-385130211:542,Integrability,message,message,542,"In hindsight, I should have noticed this earlier:; OPTKING numbers atoms starting from 1, so the value in your options dict should be `1 2`, not `0 1`. Due to how the optimizer works, it will treat `1 2` and `1 3` as symmetry equivalent, so for actual code, you would need to manually specify Cs symmetry if you really wanted to fix only one bond. When I run the optimization with that change, it works just fine. I'm guessing that OPTKING doesn't know how to handle a request to process ""atom 0,"" which leads us to the choose-your-own-error-message adventure. This is definitely not the most graceful way to handle an invalid atom request, but I'll leave it to the core devs to decide what fix would be most appropriate, since OPTKING is scheduled to be replaced soon anyways.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/989#issuecomment-385130211
https://github.com/psi4/psi4/issues/989#issuecomment-385130211:167,Performance,optimiz,optimizer,167,"In hindsight, I should have noticed this earlier:; OPTKING numbers atoms starting from 1, so the value in your options dict should be `1 2`, not `0 1`. Due to how the optimizer works, it will treat `1 2` and `1 3` as symmetry equivalent, so for actual code, you would need to manually specify Cs symmetry if you really wanted to fix only one bond. When I run the optimization with that change, it works just fine. I'm guessing that OPTKING doesn't know how to handle a request to process ""atom 0,"" which leads us to the choose-your-own-error-message adventure. This is definitely not the most graceful way to handle an invalid atom request, but I'll leave it to the core devs to decide what fix would be most appropriate, since OPTKING is scheduled to be replaced soon anyways.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/989#issuecomment-385130211
https://github.com/psi4/psi4/issues/989#issuecomment-385130211:363,Performance,optimiz,optimization,363,"In hindsight, I should have noticed this earlier:; OPTKING numbers atoms starting from 1, so the value in your options dict should be `1 2`, not `0 1`. Due to how the optimizer works, it will treat `1 2` and `1 3` as symmetry equivalent, so for actual code, you would need to manually specify Cs symmetry if you really wanted to fix only one bond. When I run the optimization with that change, it works just fine. I'm guessing that OPTKING doesn't know how to handle a request to process ""atom 0,"" which leads us to the choose-your-own-error-message adventure. This is definitely not the most graceful way to handle an invalid atom request, but I'll leave it to the core devs to decide what fix would be most appropriate, since OPTKING is scheduled to be replaced soon anyways.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/989#issuecomment-385130211
https://github.com/psi4/psi4/issues/989#issuecomment-385417768:312,Performance,optimiz,optimization,312,"""Rather fragile"" is about right. (And if anybody reading this needs help freezing two distances in PsiAPI, at time of writing, they need to be on the same line, like `1 2 1 3`.). I'll leave it to the core devs to decide whether this is worth fixing now, or whether it's worth waiting until @psi-rking brings the optimization code Py-side.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/989#issuecomment-385417768
https://github.com/psi4/psi4/issues/989#issuecomment-385430713:194,Integrability,interface,interface,194,"Third the ""rather fragile"" understatement. It'll stay as it is for now. But I've got geometric working in another branch. And a summer student is hooking up pylibefp. So more options and better interface forthcoming.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/989#issuecomment-385430713
https://github.com/psi4/psi4/pull/990#issuecomment-386180769:27,Testability,log,logic,27,"Now is a good time for the logic pass-through for `mass` and `Z`. I know there's a few places where molecular weight is being calculated, and those probably don't want to have ghost atom masses counted, so I will change those to `zero_ghost = true`. Many of the other cases I'm unfamiliar with their ""intended behavior"" so if anyone else sees places where the behavior should change let me know. Otherwise I'm defaulting to previous behavior. @loriab",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/990#issuecomment-386180769
https://github.com/psi4/psi4/pull/990#issuecomment-389223624:113,Usability,clear,clear,113,"As for `ghosts_join` versus `zero_ghost`, when you first used the phrase `zero_ghost` @loriab it was immediately clear what it would mean in both cases- you know exactly what you're getting when it's `true` or `false`. I feel like `ghosts_join` takes just a little bit more thought. Maybe I'm just a bit simpler-minded, I'm happy to change it if anyone else thinks `ghosts_join` is more clear.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/990#issuecomment-389223624
https://github.com/psi4/psi4/pull/990#issuecomment-389223624:304,Usability,simpl,simpler-minded,304,"As for `ghosts_join` versus `zero_ghost`, when you first used the phrase `zero_ghost` @loriab it was immediately clear what it would mean in both cases- you know exactly what you're getting when it's `true` or `false`. I feel like `ghosts_join` takes just a little bit more thought. Maybe I'm just a bit simpler-minded, I'm happy to change it if anyone else thinks `ghosts_join` is more clear.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/990#issuecomment-389223624
https://github.com/psi4/psi4/pull/990#issuecomment-389223624:387,Usability,clear,clear,387,"As for `ghosts_join` versus `zero_ghost`, when you first used the phrase `zero_ghost` @loriab it was immediately clear what it would mean in both cases- you know exactly what you're getting when it's `true` or `false`. I feel like `ghosts_join` takes just a little bit more thought. Maybe I'm just a bit simpler-minded, I'm happy to change it if anyone else thinks `ghosts_join` is more clear.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/990#issuecomment-389223624
https://github.com/psi4/psi4/issues/991#issuecomment-385267468:32,Usability,clear,clear,32,Perhaps we could make this more clear? I think if you had an issue understanding what this was supposed to mean others will have as well.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/991#issuecomment-385267468
https://github.com/psi4/psi4/pull/993#issuecomment-385707749:44,Availability,ping,pinging,44,"Cool, glad to see these updates. Thanks for pinging me about the naming. I don't have a strong preference for POL vs IND. I suppose being; consistent with IND is a good thing. Does it make sense to alias these; variables so either version works? Might be less confusing for people; consulting the EFP docs. I don't really like EFP_AI_XXX. I do like pre-pending with EFP so that all; EFP keywords start with that. But AI connotes Artificial Intelligence more; easily than ab initio, which I assume it's supposed to mean. I think I; like QM better. (EFP_QM_XXX). This makes sense in a QM/MM context, which; this basically is (EFP being a very advanced MM method). Additionally, I'm not sure the docs are not totally clear... I'm not; totally sure what this means:. /*- Do include polarization energy term in EFP computation? (QMEFP_POL c.; v1.1) -*/. Is this the polarization of the EFP by the QM region, or the polarization; of the QM region by the EFP?. On Tue, May 1, 2018 at 10:38 AM, Lori A. Burns <notifications@github.com>; wrote:. > @CDSherrill <https://github.com/CDSherrill>, you might want the; > opportunity to weigh in on this commit; > <https://github.com/psi4/psi4/pull/993/commits/609a84f64a50e5dee8728fcaa9a19cfaebffb4c2>,; > as it involves keyword names for EFP and our compromise between SAPT-like; > and libefp-like. Please see top post of PR for discussion.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/993#issuecomment-385686547>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AC9QdlhxccTVCdSWeK_EOxZgrE6MEQvnks5tuHNogaJpZM4TsPv1>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/993#issuecomment-385707749
https://github.com/psi4/psi4/pull/993#issuecomment-385707749:24,Deployability,update,updates,24,"Cool, glad to see these updates. Thanks for pinging me about the naming. I don't have a strong preference for POL vs IND. I suppose being; consistent with IND is a good thing. Does it make sense to alias these; variables so either version works? Might be less confusing for people; consulting the EFP docs. I don't really like EFP_AI_XXX. I do like pre-pending with EFP so that all; EFP keywords start with that. But AI connotes Artificial Intelligence more; easily than ab initio, which I assume it's supposed to mean. I think I; like QM better. (EFP_QM_XXX). This makes sense in a QM/MM context, which; this basically is (EFP being a very advanced MM method). Additionally, I'm not sure the docs are not totally clear... I'm not; totally sure what this means:. /*- Do include polarization energy term in EFP computation? (QMEFP_POL c.; v1.1) -*/. Is this the polarization of the EFP by the QM region, or the polarization; of the QM region by the EFP?. On Tue, May 1, 2018 at 10:38 AM, Lori A. Burns <notifications@github.com>; wrote:. > @CDSherrill <https://github.com/CDSherrill>, you might want the; > opportunity to weigh in on this commit; > <https://github.com/psi4/psi4/pull/993/commits/609a84f64a50e5dee8728fcaa9a19cfaebffb4c2>,; > as it involves keyword names for EFP and our compromise between SAPT-like; > and libefp-like. Please see top post of PR for discussion.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/993#issuecomment-385686547>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AC9QdlhxccTVCdSWeK_EOxZgrE6MEQvnks5tuHNogaJpZM4TsPv1>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/993#issuecomment-385707749
https://github.com/psi4/psi4/pull/993#issuecomment-385707749:791,Energy Efficiency,energy,energy,791,"Cool, glad to see these updates. Thanks for pinging me about the naming. I don't have a strong preference for POL vs IND. I suppose being; consistent with IND is a good thing. Does it make sense to alias these; variables so either version works? Might be less confusing for people; consulting the EFP docs. I don't really like EFP_AI_XXX. I do like pre-pending with EFP so that all; EFP keywords start with that. But AI connotes Artificial Intelligence more; easily than ab initio, which I assume it's supposed to mean. I think I; like QM better. (EFP_QM_XXX). This makes sense in a QM/MM context, which; this basically is (EFP being a very advanced MM method). Additionally, I'm not sure the docs are not totally clear... I'm not; totally sure what this means:. /*- Do include polarization energy term in EFP computation? (QMEFP_POL c.; v1.1) -*/. Is this the polarization of the EFP by the QM region, or the polarization; of the QM region by the EFP?. On Tue, May 1, 2018 at 10:38 AM, Lori A. Burns <notifications@github.com>; wrote:. > @CDSherrill <https://github.com/CDSherrill>, you might want the; > opportunity to weigh in on this commit; > <https://github.com/psi4/psi4/pull/993/commits/609a84f64a50e5dee8728fcaa9a19cfaebffb4c2>,; > as it involves keyword names for EFP and our compromise between SAPT-like; > and libefp-like. Please see top post of PR for discussion.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/993#issuecomment-385686547>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AC9QdlhxccTVCdSWeK_EOxZgrE6MEQvnks5tuHNogaJpZM4TsPv1>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/993#issuecomment-385707749
https://github.com/psi4/psi4/pull/993#issuecomment-385707749:211,Modifiability,variab,variables,211,"Cool, glad to see these updates. Thanks for pinging me about the naming. I don't have a strong preference for POL vs IND. I suppose being; consistent with IND is a good thing. Does it make sense to alias these; variables so either version works? Might be less confusing for people; consulting the EFP docs. I don't really like EFP_AI_XXX. I do like pre-pending with EFP so that all; EFP keywords start with that. But AI connotes Artificial Intelligence more; easily than ab initio, which I assume it's supposed to mean. I think I; like QM better. (EFP_QM_XXX). This makes sense in a QM/MM context, which; this basically is (EFP being a very advanced MM method). Additionally, I'm not sure the docs are not totally clear... I'm not; totally sure what this means:. /*- Do include polarization energy term in EFP computation? (QMEFP_POL c.; v1.1) -*/. Is this the polarization of the EFP by the QM region, or the polarization; of the QM region by the EFP?. On Tue, May 1, 2018 at 10:38 AM, Lori A. Burns <notifications@github.com>; wrote:. > @CDSherrill <https://github.com/CDSherrill>, you might want the; > opportunity to weigh in on this commit; > <https://github.com/psi4/psi4/pull/993/commits/609a84f64a50e5dee8728fcaa9a19cfaebffb4c2>,; > as it involves keyword names for EFP and our compromise between SAPT-like; > and libefp-like. Please see top post of PR for discussion.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/993#issuecomment-385686547>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AC9QdlhxccTVCdSWeK_EOxZgrE6MEQvnks5tuHNogaJpZM4TsPv1>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/993#issuecomment-385707749
https://github.com/psi4/psi4/pull/993#issuecomment-385707749:714,Usability,clear,clear,714,"Cool, glad to see these updates. Thanks for pinging me about the naming. I don't have a strong preference for POL vs IND. I suppose being; consistent with IND is a good thing. Does it make sense to alias these; variables so either version works? Might be less confusing for people; consulting the EFP docs. I don't really like EFP_AI_XXX. I do like pre-pending with EFP so that all; EFP keywords start with that. But AI connotes Artificial Intelligence more; easily than ab initio, which I assume it's supposed to mean. I think I; like QM better. (EFP_QM_XXX). This makes sense in a QM/MM context, which; this basically is (EFP being a very advanced MM method). Additionally, I'm not sure the docs are not totally clear... I'm not; totally sure what this means:. /*- Do include polarization energy term in EFP computation? (QMEFP_POL c.; v1.1) -*/. Is this the polarization of the EFP by the QM region, or the polarization; of the QM region by the EFP?. On Tue, May 1, 2018 at 10:38 AM, Lori A. Burns <notifications@github.com>; wrote:. > @CDSherrill <https://github.com/CDSherrill>, you might want the; > opportunity to weigh in on this commit; > <https://github.com/psi4/psi4/pull/993/commits/609a84f64a50e5dee8728fcaa9a19cfaebffb4c2>,; > as it involves keyword names for EFP and our compromise between SAPT-like; > and libefp-like. Please see top post of PR for discussion.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/993#issuecomment-385686547>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AC9QdlhxccTVCdSWeK_EOxZgrE6MEQvnks5tuHNogaJpZM4TsPv1>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/993#issuecomment-385707749
https://github.com/psi4/psi4/issues/996#issuecomment-385788395:132,Energy Efficiency,energy,energy,132,I can believe it. Good idea. I think one can just check the procedures dictionary. ```; >>> 'b3lyp-d3bj' in psi4.driver.procedures['energy']; True; >>> 'asdf-d3bj' in psi4.driver.procedures['energy']; False; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/996#issuecomment-385788395
https://github.com/psi4/psi4/issues/996#issuecomment-385788395:191,Energy Efficiency,energy,energy,191,I can believe it. Good idea. I think one can just check the procedures dictionary. ```; >>> 'b3lyp-d3bj' in psi4.driver.procedures['energy']; True; >>> 'asdf-d3bj' in psi4.driver.procedures['energy']; False; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/996#issuecomment-385788395
https://github.com/psi4/psi4/issues/996#issuecomment-385800439:227,Energy Efficiency,energy,energy,227,"```; from psi4.driver.qcdb.dashparam import get_dispersion_aliases; from psi4.driver.qcdb.dashparam import dashcoeff. for dtype in get_dispersion_aliases():; for func in dashcoeff[dtype]:; check=func in psi4.driver.procedures['energy']; if check == False:; print(dtype, func.upper(), ""missing!""). ```. saving this little bit here for now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/996#issuecomment-385800439
https://github.com/psi4/psi4/issues/996#issuecomment-385868187:103,Deployability,update,update,103,additional reminders:. - `dict_xc_funcs.py` is the place to add functional name aliases. Does not seem update to libxc4.0.1 yet.; - BHHLYP == BHLYP ?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/996#issuecomment-385868187
https://github.com/psi4/psi4/issues/996#issuecomment-385928190:880,Usability,simpl,simple,880,"`dict_func[""name""]` should be capitalised properly to look nice in printing. The `dashparams[disp_type][func].lower()` keys are matched against all aliases (including `dict_func[""name""].lower()`), if there is a match with any of them, all variants are generated. This is done here:; https://github.com/psi4/psi4/blob/a2eb599d9f08b976193a14c19b1a0cc9e643e9bf/psi4/driver/procrouting/dft_funcs/dict_builder.py#L126-L144. Aliases can be defined anywhere, not only in `dict_xc_funcs.py`. . Again: a slight nuisance are the two `-3c` functionals. I'd really like to have their names set to `PBEh-3c` and `HF-3c`, however the dashes mess with gCP here:. https://github.com/psi4/psi4/blob/a2eb599d9f08b976193a14c19b1a0cc9e643e9bf/psi4/driver/procrouting/empirical_dispersion.py#L235-L243. The dashes have to be stripped from the name passed to gCP, otherwise it returns no correction. A simple fix of `self.alias.replace(""-"","""")`, such as is done for dftd3, might do...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/996#issuecomment-385928190
https://github.com/psi4/psi4/issues/996#issuecomment-385938130:486,Energy Efficiency,energy,energy,486,"Well the ""-3c""s are not in dashparam. And for adding new entries to dashparam it will be somewhat clear if psi4 has the functional or not (Why else add it). So maybe a cookbook recipe is all that is needed. ```; from psi4.driver.qcdb.dashparam import get_dispersion_aliases; from psi4.driver.qcdb.dashparam import dashcoeff; from psi4.driver.procrouting.dft_funcs import dict_builder. for dtype in dashcoeff.keys():; for func in dashcoeff[dtype]:; check=func in psi4.driver.procedures['energy']; if check == False:; alt= find_approximate_string_matches(func,dict_builder.dict_functionals,3); print(dtype, func.upper(), ""not found! maybe? :"",alt); ```. Above is already quite nice, showing potential fitting names.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/996#issuecomment-385938130
https://github.com/psi4/psi4/issues/996#issuecomment-385938130:98,Usability,clear,clear,98,"Well the ""-3c""s are not in dashparam. And for adding new entries to dashparam it will be somewhat clear if psi4 has the functional or not (Why else add it). So maybe a cookbook recipe is all that is needed. ```; from psi4.driver.qcdb.dashparam import get_dispersion_aliases; from psi4.driver.qcdb.dashparam import dashcoeff; from psi4.driver.procrouting.dft_funcs import dict_builder. for dtype in dashcoeff.keys():; for func in dashcoeff[dtype]:; check=func in psi4.driver.procedures['energy']; if check == False:; alt= find_approximate_string_matches(func,dict_builder.dict_functionals,3); print(dtype, func.upper(), ""not found! maybe? :"",alt); ```. Above is already quite nice, showing potential fitting names.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/996#issuecomment-385938130
https://github.com/psi4/psi4/issues/996#issuecomment-481998433:3,Deployability,update,updated,3,"An updated script that works with current master:; ```; from qcengine.programs.dftd3 import get_dispersion_aliases; from qcengine.programs.dftd3 import dashcoeff; from psi4.driver.procrouting.dft import dft_builder; from psi4.driver import procedures; import psi4. for dtype in dashcoeff.keys() :; for func in dashcoeff[dtype][""definitions""]:; check=func in procedures['energy']; if check == False:; check=""{0:s}-{1:s}"".format(func,dtype) in procedures['energy']; if check == False:; alt= psi4.p4util.find_approximate_string_matches(func,dft_builder.dict_functionals,3); print(dtype, func.upper(), ""not found! maybe? :"",alt); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/996#issuecomment-481998433
https://github.com/psi4/psi4/issues/996#issuecomment-481998433:370,Energy Efficiency,energy,energy,370,"An updated script that works with current master:; ```; from qcengine.programs.dftd3 import get_dispersion_aliases; from qcengine.programs.dftd3 import dashcoeff; from psi4.driver.procrouting.dft import dft_builder; from psi4.driver import procedures; import psi4. for dtype in dashcoeff.keys() :; for func in dashcoeff[dtype][""definitions""]:; check=func in procedures['energy']; if check == False:; check=""{0:s}-{1:s}"".format(func,dtype) in procedures['energy']; if check == False:; alt= psi4.p4util.find_approximate_string_matches(func,dft_builder.dict_functionals,3); print(dtype, func.upper(), ""not found! maybe? :"",alt); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/996#issuecomment-481998433
https://github.com/psi4/psi4/issues/996#issuecomment-481998433:454,Energy Efficiency,energy,energy,454,"An updated script that works with current master:; ```; from qcengine.programs.dftd3 import get_dispersion_aliases; from qcengine.programs.dftd3 import dashcoeff; from psi4.driver.procrouting.dft import dft_builder; from psi4.driver import procedures; import psi4. for dtype in dashcoeff.keys() :; for func in dashcoeff[dtype][""definitions""]:; check=func in procedures['energy']; if check == False:; check=""{0:s}-{1:s}"".format(func,dtype) in procedures['energy']; if check == False:; alt= psi4.p4util.find_approximate_string_matches(func,dft_builder.dict_functionals,3); print(dtype, func.upper(), ""not found! maybe? :"",alt); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/996#issuecomment-481998433
https://github.com/psi4/psi4/pull/997#issuecomment-385835525:56,Modifiability,plugin,plugin,56,There are still some issues with option handling in the plugin itself that we're working on. I just wanted to get this PR in today with the hopes it could be accepted for 1.2.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/997#issuecomment-385835525
https://github.com/psi4/psi4/pull/997#issuecomment-387812268:31,Testability,test,tests,31,@edeprince3 Can you add in the tests? I dont see any blockers to getting this in beyond that. See `psi4/tests/chemps2` for an external project example.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/997#issuecomment-387812268
https://github.com/psi4/psi4/pull/997#issuecomment-387812268:104,Testability,test,tests,104,@edeprince3 Can you add in the tests? I dont see any blockers to getting this in beyond that. See `psi4/tests/chemps2` for an external project example.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/997#issuecomment-387812268
https://github.com/psi4/psi4/pull/997#issuecomment-388056593:82,Usability,guid,guide,82,https://github.com/psi4/psi4/search?utf8=%E2%9C%93&q=v2rdm&type= should be a good guide of places to fill in gpu_dfcc links. My main reservation is how to supply a conda package for this; but that's not on your plate.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/997#issuecomment-388056593
https://github.com/psi4/psi4/pull/997#issuecomment-397334449:1221,Availability,down,down,1221,"The code checks the number of GPUs and throws an exception if there are none. Regarding the memory, the code in its current form requires at least as much CPU memory as the GPU has. For GP100, that is 16 GB. I’ll reduce this test case to 16 GB, but I need to think carefully how to reduce it safely to a “normal” amount. > On Jun 14, 2018, at 11:16 AM, Lori A. Burns <notifications@github.com> wrote:; > ; > @loriab commented on this pull request.; > ; > In tests/gpu_dfcc/gpu_dfcc1/input.dat <https://github.com/psi4/psi4/pull/997#discussion_r195463106>:; > ; > > @@ -0,0 +1,34 @@; > +#! cc-pvdz (H2O)2 Test DF-CCSD vs GPU-DF-CCSD; > +; > +sys.path.insert(0,'../../../.'); > +; > +import gpu_dfcc; > +; > +molecule {; > + O 0.000000000000 0.000000000000 -0.068516219310 ; > + H 0.000000000000 -0.790689573744 0.543701060724 ; > + H 0.000000000000 0.790689573744 0.543701060724 ; > +}; > +; > +memory 32000 mb; > What happens on a computer with only CPUs? Do we need to disable if hardware not detected? Only import the plugin if num_gpus>1? Or is it just harmless or non-obliging if no GPUs to work with? Clearly I've just no experience with hardware-dependent tests.; > ; > In any case, I hope memory req. can be toned down?; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/psi4/psi4/pull/997#pullrequestreview-128837847>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AClSGg6UFdaiUjSouvB5u5K8uNAWsj5mks5t8n5DgaJpZM4Tutpb>.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/997#issuecomment-397334449
https://github.com/psi4/psi4/pull/997#issuecomment-397334449:213,Energy Efficiency,reduce,reduce,213,"The code checks the number of GPUs and throws an exception if there are none. Regarding the memory, the code in its current form requires at least as much CPU memory as the GPU has. For GP100, that is 16 GB. I’ll reduce this test case to 16 GB, but I need to think carefully how to reduce it safely to a “normal” amount. > On Jun 14, 2018, at 11:16 AM, Lori A. Burns <notifications@github.com> wrote:; > ; > @loriab commented on this pull request.; > ; > In tests/gpu_dfcc/gpu_dfcc1/input.dat <https://github.com/psi4/psi4/pull/997#discussion_r195463106>:; > ; > > @@ -0,0 +1,34 @@; > +#! cc-pvdz (H2O)2 Test DF-CCSD vs GPU-DF-CCSD; > +; > +sys.path.insert(0,'../../../.'); > +; > +import gpu_dfcc; > +; > +molecule {; > + O 0.000000000000 0.000000000000 -0.068516219310 ; > + H 0.000000000000 -0.790689573744 0.543701060724 ; > + H 0.000000000000 0.790689573744 0.543701060724 ; > +}; > +; > +memory 32000 mb; > What happens on a computer with only CPUs? Do we need to disable if hardware not detected? Only import the plugin if num_gpus>1? Or is it just harmless or non-obliging if no GPUs to work with? Clearly I've just no experience with hardware-dependent tests.; > ; > In any case, I hope memory req. can be toned down?; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/psi4/psi4/pull/997#pullrequestreview-128837847>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AClSGg6UFdaiUjSouvB5u5K8uNAWsj5mks5t8n5DgaJpZM4Tutpb>.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/997#issuecomment-397334449
https://github.com/psi4/psi4/pull/997#issuecomment-397334449:282,Energy Efficiency,reduce,reduce,282,"The code checks the number of GPUs and throws an exception if there are none. Regarding the memory, the code in its current form requires at least as much CPU memory as the GPU has. For GP100, that is 16 GB. I’ll reduce this test case to 16 GB, but I need to think carefully how to reduce it safely to a “normal” amount. > On Jun 14, 2018, at 11:16 AM, Lori A. Burns <notifications@github.com> wrote:; > ; > @loriab commented on this pull request.; > ; > In tests/gpu_dfcc/gpu_dfcc1/input.dat <https://github.com/psi4/psi4/pull/997#discussion_r195463106>:; > ; > > @@ -0,0 +1,34 @@; > +#! cc-pvdz (H2O)2 Test DF-CCSD vs GPU-DF-CCSD; > +; > +sys.path.insert(0,'../../../.'); > +; > +import gpu_dfcc; > +; > +molecule {; > + O 0.000000000000 0.000000000000 -0.068516219310 ; > + H 0.000000000000 -0.790689573744 0.543701060724 ; > + H 0.000000000000 0.790689573744 0.543701060724 ; > +}; > +; > +memory 32000 mb; > What happens on a computer with only CPUs? Do we need to disable if hardware not detected? Only import the plugin if num_gpus>1? Or is it just harmless or non-obliging if no GPUs to work with? Clearly I've just no experience with hardware-dependent tests.; > ; > In any case, I hope memory req. can be toned down?; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/psi4/psi4/pull/997#pullrequestreview-128837847>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AClSGg6UFdaiUjSouvB5u5K8uNAWsj5mks5t8n5DgaJpZM4Tutpb>.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/997#issuecomment-397334449
https://github.com/psi4/psi4/pull/997#issuecomment-397334449:1152,Integrability,depend,dependent,1152,"The code checks the number of GPUs and throws an exception if there are none. Regarding the memory, the code in its current form requires at least as much CPU memory as the GPU has. For GP100, that is 16 GB. I’ll reduce this test case to 16 GB, but I need to think carefully how to reduce it safely to a “normal” amount. > On Jun 14, 2018, at 11:16 AM, Lori A. Burns <notifications@github.com> wrote:; > ; > @loriab commented on this pull request.; > ; > In tests/gpu_dfcc/gpu_dfcc1/input.dat <https://github.com/psi4/psi4/pull/997#discussion_r195463106>:; > ; > > @@ -0,0 +1,34 @@; > +#! cc-pvdz (H2O)2 Test DF-CCSD vs GPU-DF-CCSD; > +; > +sys.path.insert(0,'../../../.'); > +; > +import gpu_dfcc; > +; > +molecule {; > + O 0.000000000000 0.000000000000 -0.068516219310 ; > + H 0.000000000000 -0.790689573744 0.543701060724 ; > + H 0.000000000000 0.790689573744 0.543701060724 ; > +}; > +; > +memory 32000 mb; > What happens on a computer with only CPUs? Do we need to disable if hardware not detected? Only import the plugin if num_gpus>1? Or is it just harmless or non-obliging if no GPUs to work with? Clearly I've just no experience with hardware-dependent tests.; > ; > In any case, I hope memory req. can be toned down?; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/psi4/psi4/pull/997#pullrequestreview-128837847>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AClSGg6UFdaiUjSouvB5u5K8uNAWsj5mks5t8n5DgaJpZM4Tutpb>.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/997#issuecomment-397334449
https://github.com/psi4/psi4/pull/997#issuecomment-397334449:1020,Modifiability,plugin,plugin,1020,"The code checks the number of GPUs and throws an exception if there are none. Regarding the memory, the code in its current form requires at least as much CPU memory as the GPU has. For GP100, that is 16 GB. I’ll reduce this test case to 16 GB, but I need to think carefully how to reduce it safely to a “normal” amount. > On Jun 14, 2018, at 11:16 AM, Lori A. Burns <notifications@github.com> wrote:; > ; > @loriab commented on this pull request.; > ; > In tests/gpu_dfcc/gpu_dfcc1/input.dat <https://github.com/psi4/psi4/pull/997#discussion_r195463106>:; > ; > > @@ -0,0 +1,34 @@; > +#! cc-pvdz (H2O)2 Test DF-CCSD vs GPU-DF-CCSD; > +; > +sys.path.insert(0,'../../../.'); > +; > +import gpu_dfcc; > +; > +molecule {; > + O 0.000000000000 0.000000000000 -0.068516219310 ; > + H 0.000000000000 -0.790689573744 0.543701060724 ; > + H 0.000000000000 0.790689573744 0.543701060724 ; > +}; > +; > +memory 32000 mb; > What happens on a computer with only CPUs? Do we need to disable if hardware not detected? Only import the plugin if num_gpus>1? Or is it just harmless or non-obliging if no GPUs to work with? Clearly I've just no experience with hardware-dependent tests.; > ; > In any case, I hope memory req. can be toned down?; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/psi4/psi4/pull/997#pullrequestreview-128837847>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AClSGg6UFdaiUjSouvB5u5K8uNAWsj5mks5t8n5DgaJpZM4Tutpb>.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/997#issuecomment-397334449
https://github.com/psi4/psi4/pull/997#issuecomment-397334449:292,Safety,safe,safely,292,"The code checks the number of GPUs and throws an exception if there are none. Regarding the memory, the code in its current form requires at least as much CPU memory as the GPU has. For GP100, that is 16 GB. I’ll reduce this test case to 16 GB, but I need to think carefully how to reduce it safely to a “normal” amount. > On Jun 14, 2018, at 11:16 AM, Lori A. Burns <notifications@github.com> wrote:; > ; > @loriab commented on this pull request.; > ; > In tests/gpu_dfcc/gpu_dfcc1/input.dat <https://github.com/psi4/psi4/pull/997#discussion_r195463106>:; > ; > > @@ -0,0 +1,34 @@; > +#! cc-pvdz (H2O)2 Test DF-CCSD vs GPU-DF-CCSD; > +; > +sys.path.insert(0,'../../../.'); > +; > +import gpu_dfcc; > +; > +molecule {; > + O 0.000000000000 0.000000000000 -0.068516219310 ; > + H 0.000000000000 -0.790689573744 0.543701060724 ; > + H 0.000000000000 0.790689573744 0.543701060724 ; > +}; > +; > +memory 32000 mb; > What happens on a computer with only CPUs? Do we need to disable if hardware not detected? Only import the plugin if num_gpus>1? Or is it just harmless or non-obliging if no GPUs to work with? Clearly I've just no experience with hardware-dependent tests.; > ; > In any case, I hope memory req. can be toned down?; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/psi4/psi4/pull/997#pullrequestreview-128837847>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AClSGg6UFdaiUjSouvB5u5K8uNAWsj5mks5t8n5DgaJpZM4Tutpb>.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/997#issuecomment-397334449
https://github.com/psi4/psi4/pull/997#issuecomment-397334449:994,Safety,detect,detected,994,"The code checks the number of GPUs and throws an exception if there are none. Regarding the memory, the code in its current form requires at least as much CPU memory as the GPU has. For GP100, that is 16 GB. I’ll reduce this test case to 16 GB, but I need to think carefully how to reduce it safely to a “normal” amount. > On Jun 14, 2018, at 11:16 AM, Lori A. Burns <notifications@github.com> wrote:; > ; > @loriab commented on this pull request.; > ; > In tests/gpu_dfcc/gpu_dfcc1/input.dat <https://github.com/psi4/psi4/pull/997#discussion_r195463106>:; > ; > > @@ -0,0 +1,34 @@; > +#! cc-pvdz (H2O)2 Test DF-CCSD vs GPU-DF-CCSD; > +; > +sys.path.insert(0,'../../../.'); > +; > +import gpu_dfcc; > +; > +molecule {; > + O 0.000000000000 0.000000000000 -0.068516219310 ; > + H 0.000000000000 -0.790689573744 0.543701060724 ; > + H 0.000000000000 0.790689573744 0.543701060724 ; > +}; > +; > +memory 32000 mb; > What happens on a computer with only CPUs? Do we need to disable if hardware not detected? Only import the plugin if num_gpus>1? Or is it just harmless or non-obliging if no GPUs to work with? Clearly I've just no experience with hardware-dependent tests.; > ; > In any case, I hope memory req. can be toned down?; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/psi4/psi4/pull/997#pullrequestreview-128837847>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AClSGg6UFdaiUjSouvB5u5K8uNAWsj5mks5t8n5DgaJpZM4Tutpb>.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/997#issuecomment-397334449
https://github.com/psi4/psi4/pull/997#issuecomment-397334449:225,Testability,test,test,225,"The code checks the number of GPUs and throws an exception if there are none. Regarding the memory, the code in its current form requires at least as much CPU memory as the GPU has. For GP100, that is 16 GB. I’ll reduce this test case to 16 GB, but I need to think carefully how to reduce it safely to a “normal” amount. > On Jun 14, 2018, at 11:16 AM, Lori A. Burns <notifications@github.com> wrote:; > ; > @loriab commented on this pull request.; > ; > In tests/gpu_dfcc/gpu_dfcc1/input.dat <https://github.com/psi4/psi4/pull/997#discussion_r195463106>:; > ; > > @@ -0,0 +1,34 @@; > +#! cc-pvdz (H2O)2 Test DF-CCSD vs GPU-DF-CCSD; > +; > +sys.path.insert(0,'../../../.'); > +; > +import gpu_dfcc; > +; > +molecule {; > + O 0.000000000000 0.000000000000 -0.068516219310 ; > + H 0.000000000000 -0.790689573744 0.543701060724 ; > + H 0.000000000000 0.790689573744 0.543701060724 ; > +}; > +; > +memory 32000 mb; > What happens on a computer with only CPUs? Do we need to disable if hardware not detected? Only import the plugin if num_gpus>1? Or is it just harmless or non-obliging if no GPUs to work with? Clearly I've just no experience with hardware-dependent tests.; > ; > In any case, I hope memory req. can be toned down?; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/psi4/psi4/pull/997#pullrequestreview-128837847>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AClSGg6UFdaiUjSouvB5u5K8uNAWsj5mks5t8n5DgaJpZM4Tutpb>.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/997#issuecomment-397334449
https://github.com/psi4/psi4/pull/997#issuecomment-397334449:458,Testability,test,tests,458,"The code checks the number of GPUs and throws an exception if there are none. Regarding the memory, the code in its current form requires at least as much CPU memory as the GPU has. For GP100, that is 16 GB. I’ll reduce this test case to 16 GB, but I need to think carefully how to reduce it safely to a “normal” amount. > On Jun 14, 2018, at 11:16 AM, Lori A. Burns <notifications@github.com> wrote:; > ; > @loriab commented on this pull request.; > ; > In tests/gpu_dfcc/gpu_dfcc1/input.dat <https://github.com/psi4/psi4/pull/997#discussion_r195463106>:; > ; > > @@ -0,0 +1,34 @@; > +#! cc-pvdz (H2O)2 Test DF-CCSD vs GPU-DF-CCSD; > +; > +sys.path.insert(0,'../../../.'); > +; > +import gpu_dfcc; > +; > +molecule {; > + O 0.000000000000 0.000000000000 -0.068516219310 ; > + H 0.000000000000 -0.790689573744 0.543701060724 ; > + H 0.000000000000 0.790689573744 0.543701060724 ; > +}; > +; > +memory 32000 mb; > What happens on a computer with only CPUs? Do we need to disable if hardware not detected? Only import the plugin if num_gpus>1? Or is it just harmless or non-obliging if no GPUs to work with? Clearly I've just no experience with hardware-dependent tests.; > ; > In any case, I hope memory req. can be toned down?; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/psi4/psi4/pull/997#pullrequestreview-128837847>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AClSGg6UFdaiUjSouvB5u5K8uNAWsj5mks5t8n5DgaJpZM4Tutpb>.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/997#issuecomment-397334449
https://github.com/psi4/psi4/pull/997#issuecomment-397334449:604,Testability,Test,Test,604,"The code checks the number of GPUs and throws an exception if there are none. Regarding the memory, the code in its current form requires at least as much CPU memory as the GPU has. For GP100, that is 16 GB. I’ll reduce this test case to 16 GB, but I need to think carefully how to reduce it safely to a “normal” amount. > On Jun 14, 2018, at 11:16 AM, Lori A. Burns <notifications@github.com> wrote:; > ; > @loriab commented on this pull request.; > ; > In tests/gpu_dfcc/gpu_dfcc1/input.dat <https://github.com/psi4/psi4/pull/997#discussion_r195463106>:; > ; > > @@ -0,0 +1,34 @@; > +#! cc-pvdz (H2O)2 Test DF-CCSD vs GPU-DF-CCSD; > +; > +sys.path.insert(0,'../../../.'); > +; > +import gpu_dfcc; > +; > +molecule {; > + O 0.000000000000 0.000000000000 -0.068516219310 ; > + H 0.000000000000 -0.790689573744 0.543701060724 ; > + H 0.000000000000 0.790689573744 0.543701060724 ; > +}; > +; > +memory 32000 mb; > What happens on a computer with only CPUs? Do we need to disable if hardware not detected? Only import the plugin if num_gpus>1? Or is it just harmless or non-obliging if no GPUs to work with? Clearly I've just no experience with hardware-dependent tests.; > ; > In any case, I hope memory req. can be toned down?; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/psi4/psi4/pull/997#pullrequestreview-128837847>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AClSGg6UFdaiUjSouvB5u5K8uNAWsj5mks5t8n5DgaJpZM4Tutpb>.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/997#issuecomment-397334449
https://github.com/psi4/psi4/pull/997#issuecomment-397334449:1162,Testability,test,tests,1162,"The code checks the number of GPUs and throws an exception if there are none. Regarding the memory, the code in its current form requires at least as much CPU memory as the GPU has. For GP100, that is 16 GB. I’ll reduce this test case to 16 GB, but I need to think carefully how to reduce it safely to a “normal” amount. > On Jun 14, 2018, at 11:16 AM, Lori A. Burns <notifications@github.com> wrote:; > ; > @loriab commented on this pull request.; > ; > In tests/gpu_dfcc/gpu_dfcc1/input.dat <https://github.com/psi4/psi4/pull/997#discussion_r195463106>:; > ; > > @@ -0,0 +1,34 @@; > +#! cc-pvdz (H2O)2 Test DF-CCSD vs GPU-DF-CCSD; > +; > +sys.path.insert(0,'../../../.'); > +; > +import gpu_dfcc; > +; > +molecule {; > + O 0.000000000000 0.000000000000 -0.068516219310 ; > + H 0.000000000000 -0.790689573744 0.543701060724 ; > + H 0.000000000000 0.790689573744 0.543701060724 ; > +}; > +; > +memory 32000 mb; > What happens on a computer with only CPUs? Do we need to disable if hardware not detected? Only import the plugin if num_gpus>1? Or is it just harmless or non-obliging if no GPUs to work with? Clearly I've just no experience with hardware-dependent tests.; > ; > In any case, I hope memory req. can be toned down?; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/psi4/psi4/pull/997#pullrequestreview-128837847>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AClSGg6UFdaiUjSouvB5u5K8uNAWsj5mks5t8n5DgaJpZM4Tutpb>.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/997#issuecomment-397334449
https://github.com/psi4/psi4/pull/997#issuecomment-397334449:1106,Usability,Clear,Clearly,1106,"The code checks the number of GPUs and throws an exception if there are none. Regarding the memory, the code in its current form requires at least as much CPU memory as the GPU has. For GP100, that is 16 GB. I’ll reduce this test case to 16 GB, but I need to think carefully how to reduce it safely to a “normal” amount. > On Jun 14, 2018, at 11:16 AM, Lori A. Burns <notifications@github.com> wrote:; > ; > @loriab commented on this pull request.; > ; > In tests/gpu_dfcc/gpu_dfcc1/input.dat <https://github.com/psi4/psi4/pull/997#discussion_r195463106>:; > ; > > @@ -0,0 +1,34 @@; > +#! cc-pvdz (H2O)2 Test DF-CCSD vs GPU-DF-CCSD; > +; > +sys.path.insert(0,'../../../.'); > +; > +import gpu_dfcc; > +; > +molecule {; > + O 0.000000000000 0.000000000000 -0.068516219310 ; > + H 0.000000000000 -0.790689573744 0.543701060724 ; > + H 0.000000000000 0.790689573744 0.543701060724 ; > +}; > +; > +memory 32000 mb; > What happens on a computer with only CPUs? Do we need to disable if hardware not detected? Only import the plugin if num_gpus>1? Or is it just harmless or non-obliging if no GPUs to work with? Clearly I've just no experience with hardware-dependent tests.; > ; > In any case, I hope memory req. can be toned down?; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/psi4/psi4/pull/997#pullrequestreview-128837847>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AClSGg6UFdaiUjSouvB5u5K8uNAWsj5mks5t8n5DgaJpZM4Tutpb>.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/997#issuecomment-397334449
https://github.com/psi4/psi4/pull/997#issuecomment-397381557:34,Deployability,update,updated,34,"OK, I've reverted that change and updated gpu_dfcc to have find_package(CUDA REQUIRED). Aside from the large memory requirement @loriab mentioned, I think everything is good on the psi4 and gpu_dfcc sides.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/997#issuecomment-397381557
https://github.com/psi4/psi4/issues/1004#issuecomment-386411503:428,Security,access,accesses,428,"I can help better if I know your goal. The `ENABLE_GENERIC=ON` for BLAS/LAPACK was added to facilitate static linking of MKL libraries for binary packaging and distribution, both to minimize file size and make sure the binary had high-quality math libraries w/o needing an Intel license. Since then, we've learned that there can be bad reactions between psi4-w/-mkl-statically-linked and other software (namely numpy) that also accesses the same symbols. (#748 and #755 for gory details.) So we've dropped static linking for BLAS. It helps that conda distributes MKL now, too. So, I'm glad to help if that hasn't warned you off.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386411503
https://github.com/psi4/psi4/issues/1004#issuecomment-386411503:306,Usability,learn,learned,306,"I can help better if I know your goal. The `ENABLE_GENERIC=ON` for BLAS/LAPACK was added to facilitate static linking of MKL libraries for binary packaging and distribution, both to minimize file size and make sure the binary had high-quality math libraries w/o needing an Intel license. Since then, we've learned that there can be bad reactions between psi4-w/-mkl-statically-linked and other software (namely numpy) that also accesses the same symbols. (#748 and #755 for gory details.) So we've dropped static linking for BLAS. It helps that conda distributes MKL now, too. So, I'm glad to help if that hasn't warned you off.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386411503
https://github.com/psi4/psi4/issues/1004#issuecomment-386415227:108,Deployability,install,install,108,"I need to run bin/psi4 from bash on different cloud nodes, and instead of having to figure out to mount mkl install on all nodes in the same way as on build server, it would just be alot easier to have mkl linked static in to psi4.... What would it take for me to make psi4 compile with static mkl, so I more easy can share my psi4 install dir between calculation nodes?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386415227
https://github.com/psi4/psi4/issues/1004#issuecomment-386415227:332,Deployability,install,install,332,"I need to run bin/psi4 from bash on different cloud nodes, and instead of having to figure out to mount mkl install on all nodes in the same way as on build server, it would just be alot easier to have mkl linked static in to psi4.... What would it take for me to make psi4 compile with static mkl, so I more easy can share my psi4 install dir between calculation nodes?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386415227
https://github.com/psi4/psi4/issues/1004#issuecomment-386422281:152,Deployability,install,installing,152,"I strongly recommend not doing that as you can get wrong answers and/or lose all threading capacity. . To get around the mkl-on-nodes problem, I advise installing the psi4-dev conda package that provides all of psi4's dependencies, incl. numpy and mkl, then building against that. ```; cd {top-level-psi4-dir}; conda create -n p4dev35 python=3.5 psi4-dev -c psi4/label/dev -c psi4; conda activate p4dev35; `psi4-path-advisor --intel`; # cmake configures; cd objdir && make -j`getconf _NPROCESSORS_ONLN`; make install; ```; Is there any reason the psi4 conda package itself isn't suitable? If size is an issue, then mkl is the problem, and it doesn't do to just fix mkl for psi4 b/c other pieces (numpy, chemps2) use it, too. I'm working on an openblas build. If you're resolved on statically linking mkl, short of probing the math detection, I'd consult the mkl-link-advisor and pass the resulting advice to psi4 cmake via example (G.) of http://psicode.org/psi4manual/master/build_planning.html#cmake-lapack . EDIT: `conda install` --> `conda create` on 2nd line of snippet",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386422281
https://github.com/psi4/psi4/issues/1004#issuecomment-386422281:509,Deployability,install,install,509,"I strongly recommend not doing that as you can get wrong answers and/or lose all threading capacity. . To get around the mkl-on-nodes problem, I advise installing the psi4-dev conda package that provides all of psi4's dependencies, incl. numpy and mkl, then building against that. ```; cd {top-level-psi4-dir}; conda create -n p4dev35 python=3.5 psi4-dev -c psi4/label/dev -c psi4; conda activate p4dev35; `psi4-path-advisor --intel`; # cmake configures; cd objdir && make -j`getconf _NPROCESSORS_ONLN`; make install; ```; Is there any reason the psi4 conda package itself isn't suitable? If size is an issue, then mkl is the problem, and it doesn't do to just fix mkl for psi4 b/c other pieces (numpy, chemps2) use it, too. I'm working on an openblas build. If you're resolved on statically linking mkl, short of probing the math detection, I'd consult the mkl-link-advisor and pass the resulting advice to psi4 cmake via example (G.) of http://psicode.org/psi4manual/master/build_planning.html#cmake-lapack . EDIT: `conda install` --> `conda create` on 2nd line of snippet",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386422281
https://github.com/psi4/psi4/issues/1004#issuecomment-386422281:1024,Deployability,install,install,1024,"I strongly recommend not doing that as you can get wrong answers and/or lose all threading capacity. . To get around the mkl-on-nodes problem, I advise installing the psi4-dev conda package that provides all of psi4's dependencies, incl. numpy and mkl, then building against that. ```; cd {top-level-psi4-dir}; conda create -n p4dev35 python=3.5 psi4-dev -c psi4/label/dev -c psi4; conda activate p4dev35; `psi4-path-advisor --intel`; # cmake configures; cd objdir && make -j`getconf _NPROCESSORS_ONLN`; make install; ```; Is there any reason the psi4 conda package itself isn't suitable? If size is an issue, then mkl is the problem, and it doesn't do to just fix mkl for psi4 b/c other pieces (numpy, chemps2) use it, too. I'm working on an openblas build. If you're resolved on statically linking mkl, short of probing the math detection, I'd consult the mkl-link-advisor and pass the resulting advice to psi4 cmake via example (G.) of http://psicode.org/psi4manual/master/build_planning.html#cmake-lapack . EDIT: `conda install` --> `conda create` on 2nd line of snippet",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386422281
https://github.com/psi4/psi4/issues/1004#issuecomment-386422281:218,Integrability,depend,dependencies,218,"I strongly recommend not doing that as you can get wrong answers and/or lose all threading capacity. . To get around the mkl-on-nodes problem, I advise installing the psi4-dev conda package that provides all of psi4's dependencies, incl. numpy and mkl, then building against that. ```; cd {top-level-psi4-dir}; conda create -n p4dev35 python=3.5 psi4-dev -c psi4/label/dev -c psi4; conda activate p4dev35; `psi4-path-advisor --intel`; # cmake configures; cd objdir && make -j`getconf _NPROCESSORS_ONLN`; make install; ```; Is there any reason the psi4 conda package itself isn't suitable? If size is an issue, then mkl is the problem, and it doesn't do to just fix mkl for psi4 b/c other pieces (numpy, chemps2) use it, too. I'm working on an openblas build. If you're resolved on statically linking mkl, short of probing the math detection, I'd consult the mkl-link-advisor and pass the resulting advice to psi4 cmake via example (G.) of http://psicode.org/psi4manual/master/build_planning.html#cmake-lapack . EDIT: `conda install` --> `conda create` on 2nd line of snippet",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386422281
https://github.com/psi4/psi4/issues/1004#issuecomment-386422281:443,Modifiability,config,configures,443,"I strongly recommend not doing that as you can get wrong answers and/or lose all threading capacity. . To get around the mkl-on-nodes problem, I advise installing the psi4-dev conda package that provides all of psi4's dependencies, incl. numpy and mkl, then building against that. ```; cd {top-level-psi4-dir}; conda create -n p4dev35 python=3.5 psi4-dev -c psi4/label/dev -c psi4; conda activate p4dev35; `psi4-path-advisor --intel`; # cmake configures; cd objdir && make -j`getconf _NPROCESSORS_ONLN`; make install; ```; Is there any reason the psi4 conda package itself isn't suitable? If size is an issue, then mkl is the problem, and it doesn't do to just fix mkl for psi4 b/c other pieces (numpy, chemps2) use it, too. I'm working on an openblas build. If you're resolved on statically linking mkl, short of probing the math detection, I'd consult the mkl-link-advisor and pass the resulting advice to psi4 cmake via example (G.) of http://psicode.org/psi4manual/master/build_planning.html#cmake-lapack . EDIT: `conda install` --> `conda create` on 2nd line of snippet",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386422281
https://github.com/psi4/psi4/issues/1004#issuecomment-386422281:831,Safety,detect,detection,831,"I strongly recommend not doing that as you can get wrong answers and/or lose all threading capacity. . To get around the mkl-on-nodes problem, I advise installing the psi4-dev conda package that provides all of psi4's dependencies, incl. numpy and mkl, then building against that. ```; cd {top-level-psi4-dir}; conda create -n p4dev35 python=3.5 psi4-dev -c psi4/label/dev -c psi4; conda activate p4dev35; `psi4-path-advisor --intel`; # cmake configures; cd objdir && make -j`getconf _NPROCESSORS_ONLN`; make install; ```; Is there any reason the psi4 conda package itself isn't suitable? If size is an issue, then mkl is the problem, and it doesn't do to just fix mkl for psi4 b/c other pieces (numpy, chemps2) use it, too. I'm working on an openblas build. If you're resolved on statically linking mkl, short of probing the math detection, I'd consult the mkl-link-advisor and pass the resulting advice to psi4 cmake via example (G.) of http://psicode.org/psi4manual/master/build_planning.html#cmake-lapack . EDIT: `conda install` --> `conda create` on 2nd line of snippet",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386422281
https://github.com/psi4/psi4/issues/1004#issuecomment-386429024:360,Availability,Error,Error,360,"new to conda (used to pip), needed to create env first...; `conda create -n p4dev35 python=3.5`. `psi4-path-advisor --intel`; ```; ...; -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc: /home/termo/miniconda3/envs/p4dev35/lib/libxc.so (found version 4.0.2); -- Found base compiler version ; CMake Error at cmake/custom_cxxstandard.cmake:39 (if):; if given arguments:. ""VERSION_LESS"" ""4.9"". Unknown arguments specified; Call Stack (most recent call first):; CMakeLists.txt:168 (include); ```; Any ideas what that is about?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386429024
https://github.com/psi4/psi4/issues/1004#issuecomment-386438642:10,Deployability,update,updated,10,I think I updated my post while you wrote back to me.... for some reason --intel fails in cmake (se previous post),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386438642
https://github.com/psi4/psi4/issues/1004#issuecomment-386439546:107,Availability,error,error,107,"Usually an old cmake or an old psi4 source. Can you paste the whole output from `cmake ...` onwards to the error. (Switch from `<backtick>psi4-path-advisor<backtick>` to `psi4-path-advisor`, copy, paste, enter.) Shouldn't be an old cmake as that's in the conda env. Also paste `cmake --version` and `git describe`. Also, always delete `objdir/` between cmake executions.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386439546
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:5158,Availability,Error,Error,5158,"version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Found LAPACK MKL: /home/termo/miniconda3/envs/p4dev35/lib/libmkl_rt.so;...; -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found HDF5: /home/termo/miniconda3/envs/p4dev35/lib/libhdf5.so;... (found version 1.10.1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc: /home/termo/miniconda3/envs/p4dev35/lib/libxc.so (found version 4.0.2); -- Found base compiler version ; CMake Error at cmake/custom_cxxstandard.cmake:39 (if):; if given arguments:. ""VERSION_LESS"" ""4.9"". Unknown arguments specified; Call Stack (most recent call first):; CMakeLists.txt:168 (include). -- Configuring incomplete, errors occurred!; See also ""/media/BIGdisk/psi4/objdir/CMakeFiles/CMakeOutput.log"".; (p4dev35) termo@Ubuntu16:/media/BIGdisk/psi4$ cmake --version; cmake version 3.9.4. CMake suite maintained and supported by Kitware (kitware.com/cmake).; (p4dev35) termo@Ubuntu16:/media/BIGdisk/psi4$ git describe; v1.2rc1. ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:5375,Availability,error,errors,5375,"version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Found LAPACK MKL: /home/termo/miniconda3/envs/p4dev35/lib/libmkl_rt.so;...; -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found HDF5: /home/termo/miniconda3/envs/p4dev35/lib/libhdf5.so;... (found version 1.10.1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc: /home/termo/miniconda3/envs/p4dev35/lib/libxc.so (found version 4.0.2); -- Found base compiler version ; CMake Error at cmake/custom_cxxstandard.cmake:39 (if):; if given arguments:. ""VERSION_LESS"" ""4.9"". Unknown arguments specified; Call Stack (most recent call first):; CMakeLists.txt:168 (include). -- Configuring incomplete, errors occurred!; See also ""/media/BIGdisk/psi4/objdir/CMakeFiles/CMakeOutput.log"".; (p4dev35) termo@Ubuntu16:/media/BIGdisk/psi4$ cmake --version; cmake version 3.9.4. CMake suite maintained and supported by Kitware (kitware.com/cmake).; (p4dev35) termo@Ubuntu16:/media/BIGdisk/psi4$ git describe; v1.2rc1. ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:3126,Deployability,Release,Release,3126,"ompiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP: ON; -- Setting (unspecified) option ENABLE_AUTO_BLAS: ON; -- Setting (unspecified) option ENABLE_AUTO_LAPACK: ON; -- Setting (unspecified) option ENABLE_PLUGIN_TESTING: OFF; -- Setting (unspecified) option ENABLE_XHOST: ON; -- Performing Test CMAKE_C_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_CXX_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_Fortran_FLAGS [-xHost] - Success, Appending; -- Setting (unspecified) option ENABLE_CODE_COVERAGE: OFF; -- Setting (unspecified) option ENABLE_BOUNDS_CHECK: OFF; -- Setting (unspecified) option ENABLE_ASAN: OFF; -- Setting (unspecified) option ENABLE_TSAN: OFF; -- Setting (unspecified) option ENABLE_UBSAN: OFF; -- Setting (unspecified) option ENABLE_MSAN: OFF; -- Setting option MAX_AM_ERI: 6; -- Setting (unspecified) option CMAKE_BUILD_TYPE: Release; -- Setting (unspecified) option FC_SYMBOL: 2; -- Setting (unspecified) option BUILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Foun",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:3574,Deployability,install,install,3574,"ompiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP: ON; -- Setting (unspecified) option ENABLE_AUTO_BLAS: ON; -- Setting (unspecified) option ENABLE_AUTO_LAPACK: ON; -- Setting (unspecified) option ENABLE_PLUGIN_TESTING: OFF; -- Setting (unspecified) option ENABLE_XHOST: ON; -- Performing Test CMAKE_C_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_CXX_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_Fortran_FLAGS [-xHost] - Success, Appending; -- Setting (unspecified) option ENABLE_CODE_COVERAGE: OFF; -- Setting (unspecified) option ENABLE_BOUNDS_CHECK: OFF; -- Setting (unspecified) option ENABLE_ASAN: OFF; -- Setting (unspecified) option ENABLE_TSAN: OFF; -- Setting (unspecified) option ENABLE_UBSAN: OFF; -- Setting (unspecified) option ENABLE_MSAN: OFF; -- Setting option MAX_AM_ERI: 6; -- Setting (unspecified) option CMAKE_BUILD_TYPE: Release; -- Setting (unspecified) option FC_SYMBOL: 2; -- Setting (unspecified) option BUILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Foun",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:4033,Deployability,configurat,configuration,4033," Setting option MAX_AM_ERI: 6; -- Setting (unspecified) option CMAKE_BUILD_TYPE: Release; -- Setting (unspecified) option FC_SYMBOL: 2; -- Setting (unspecified) option BUILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Found LAPACK MKL: /home/termo/miniconda3/envs/p4dev35/lib/libmkl_rt.so;...; -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found HDF5: /home/termo/miniconda3/envs/p4dev35/lib/libhdf5.so;... (found version 1.10.1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:4371,Deployability,configurat,configuration,4371,"ENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Found LAPACK MKL: /home/termo/miniconda3/envs/p4dev35/lib/libmkl_rt.so;...; -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found HDF5: /home/termo/miniconda3/envs/p4dev35/lib/libhdf5.so;... (found version 1.10.1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc: /home/termo/miniconda3/envs/p4dev35/lib/libxc.so (found version 4.0.2); -- Found base compiler version ; CMake Error at cmake/custom_cxxstandard.cmake:39 (if):; if given arguments:. ""VERSION_LESS"" ""4.9"". Unknown arguments specified; Call Stack (most recent call first):; CMakeLists.txt:168 (include). -- Configuring incomplete, errors occ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:4010,Integrability,wrap,wrapper,4010," Setting option MAX_AM_ERI: 6; -- Setting (unspecified) option CMAKE_BUILD_TYPE: Release; -- Setting (unspecified) option FC_SYMBOL: 2; -- Setting (unspecified) option BUILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Found LAPACK MKL: /home/termo/miniconda3/envs/p4dev35/lib/libmkl_rt.so;...; -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found HDF5: /home/termo/miniconda3/envs/p4dev35/lib/libhdf5.so;... (found version 1.10.1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:4348,Integrability,wrap,wrapper,4348,"ENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Found LAPACK MKL: /home/termo/miniconda3/envs/p4dev35/lib/libmkl_rt.so;...; -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found HDF5: /home/termo/miniconda3/envs/p4dev35/lib/libhdf5.so;... (found version 1.10.1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc: /home/termo/miniconda3/envs/p4dev35/lib/libxc.so (found version 4.0.2); -- Found base compiler version ; CMake Error at cmake/custom_cxxstandard.cmake:39 (if):; if given arguments:. ""VERSION_LESS"" ""4.9"". Unknown arguments specified; Call Stack (most recent call first):; CMakeLists.txt:168 (include). -- Configuring incomplete, errors occ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:4033,Modifiability,config,configuration,4033," Setting option MAX_AM_ERI: 6; -- Setting (unspecified) option CMAKE_BUILD_TYPE: Release; -- Setting (unspecified) option FC_SYMBOL: 2; -- Setting (unspecified) option BUILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Found LAPACK MKL: /home/termo/miniconda3/envs/p4dev35/lib/libmkl_rt.so;...; -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found HDF5: /home/termo/miniconda3/envs/p4dev35/lib/libhdf5.so;... (found version 1.10.1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:4371,Modifiability,config,configuration,4371,"ENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Found LAPACK MKL: /home/termo/miniconda3/envs/p4dev35/lib/libmkl_rt.so;...; -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found HDF5: /home/termo/miniconda3/envs/p4dev35/lib/libhdf5.so;... (found version 1.10.1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc: /home/termo/miniconda3/envs/p4dev35/lib/libxc.so (found version 4.0.2); -- Found base compiler version ; CMake Error at cmake/custom_cxxstandard.cmake:39 (if):; if given arguments:. ""VERSION_LESS"" ""4.9"". Unknown arguments specified; Call Stack (most recent call first):; CMakeLists.txt:168 (include). -- Configuring incomplete, errors occ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:5351,Modifiability,Config,Configuring,5351,"version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Found LAPACK MKL: /home/termo/miniconda3/envs/p4dev35/lib/libmkl_rt.so;...; -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found HDF5: /home/termo/miniconda3/envs/p4dev35/lib/libhdf5.so;... (found version 1.10.1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc: /home/termo/miniconda3/envs/p4dev35/lib/libxc.so (found version 4.0.2); -- Found base compiler version ; CMake Error at cmake/custom_cxxstandard.cmake:39 (if):; if given arguments:. ""VERSION_LESS"" ""4.9"". Unknown arguments specified; Call Stack (most recent call first):; CMakeLists.txt:168 (include). -- Configuring incomplete, errors occurred!; See also ""/media/BIGdisk/psi4/objdir/CMakeFiles/CMakeOutput.log"".; (p4dev35) termo@Ubuntu16:/media/BIGdisk/psi4$ cmake --version; cmake version 3.9.4. CMake suite maintained and supported by Kitware (kitware.com/cmake).; (p4dev35) termo@Ubuntu16:/media/BIGdisk/psi4$ git describe; v1.2rc1. ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:344,Performance,load,loading,344,```; (p4dev35) termo@Ubuntu16:/media/BIGdisk/psi4$ /home/termo/miniconda3/envs/p4dev35/bin/cmake -H. -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsCache.cmake -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake -Bobjdir; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; -- The C compiler identification is Intel 18.0.2.20180210; -- The CXX compiler identification is Intel 18.0.2.20180210; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The Fortran compiler identification is Intel 18.0.2.20180210; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:360,Performance,cache,cache,360,```; (p4dev35) termo@Ubuntu16:/media/BIGdisk/psi4$ /home/termo/miniconda3/envs/p4dev35/bin/cmake -H. -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsCache.cmake -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake -Bobjdir; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; -- The C compiler identification is Intel 18.0.2.20180210; -- The CXX compiler identification is Intel 18.0.2.20180210; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The Fortran compiler identification is Intel 18.0.2.20180210; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:445,Performance,load,loading,445,```; (p4dev35) termo@Ubuntu16:/media/BIGdisk/psi4$ /home/termo/miniconda3/envs/p4dev35/bin/cmake -H. -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsCache.cmake -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake -Bobjdir; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; -- The C compiler identification is Intel 18.0.2.20180210; -- The CXX compiler identification is Intel 18.0.2.20180210; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The Fortran compiler identification is Intel 18.0.2.20180210; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:461,Performance,cache,cache,461,```; (p4dev35) termo@Ubuntu16:/media/BIGdisk/psi4$ /home/termo/miniconda3/envs/p4dev35/bin/cmake -H. -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsCache.cmake -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake -Bobjdir; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; -- The C compiler identification is Intel 18.0.2.20180210; -- The CXX compiler identification is Intel 18.0.2.20180210; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The Fortran compiler identification is Intel 18.0.2.20180210; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:549,Performance,load,loading,549,```; (p4dev35) termo@Ubuntu16:/media/BIGdisk/psi4$ /home/termo/miniconda3/envs/p4dev35/bin/cmake -H. -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsCache.cmake -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake -Bobjdir; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; -- The C compiler identification is Intel 18.0.2.20180210; -- The CXX compiler identification is Intel 18.0.2.20180210; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The Fortran compiler identification is Intel 18.0.2.20180210; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:565,Performance,cache,cache,565,```; (p4dev35) termo@Ubuntu16:/media/BIGdisk/psi4$ /home/termo/miniconda3/envs/p4dev35/bin/cmake -H. -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsCache.cmake -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake -Bobjdir; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; -- The C compiler identification is Intel 18.0.2.20180210; -- The CXX compiler identification is Intel 18.0.2.20180210; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The Fortran compiler identification is Intel 18.0.2.20180210; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:2528,Performance,Perform,Performing,2528,"ompiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP: ON; -- Setting (unspecified) option ENABLE_AUTO_BLAS: ON; -- Setting (unspecified) option ENABLE_AUTO_LAPACK: ON; -- Setting (unspecified) option ENABLE_PLUGIN_TESTING: OFF; -- Setting (unspecified) option ENABLE_XHOST: ON; -- Performing Test CMAKE_C_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_CXX_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_Fortran_FLAGS [-xHost] - Success, Appending; -- Setting (unspecified) option ENABLE_CODE_COVERAGE: OFF; -- Setting (unspecified) option ENABLE_BOUNDS_CHECK: OFF; -- Setting (unspecified) option ENABLE_ASAN: OFF; -- Setting (unspecified) option ENABLE_TSAN: OFF; -- Setting (unspecified) option ENABLE_UBSAN: OFF; -- Setting (unspecified) option ENABLE_MSAN: OFF; -- Setting option MAX_AM_ERI: 6; -- Setting (unspecified) option CMAKE_BUILD_TYPE: Release; -- Setting (unspecified) option FC_SYMBOL: 2; -- Setting (unspecified) option BUILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Foun",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:2592,Performance,Perform,Performing,2592,"ompiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP: ON; -- Setting (unspecified) option ENABLE_AUTO_BLAS: ON; -- Setting (unspecified) option ENABLE_AUTO_LAPACK: ON; -- Setting (unspecified) option ENABLE_PLUGIN_TESTING: OFF; -- Setting (unspecified) option ENABLE_XHOST: ON; -- Performing Test CMAKE_C_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_CXX_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_Fortran_FLAGS [-xHost] - Success, Appending; -- Setting (unspecified) option ENABLE_CODE_COVERAGE: OFF; -- Setting (unspecified) option ENABLE_BOUNDS_CHECK: OFF; -- Setting (unspecified) option ENABLE_ASAN: OFF; -- Setting (unspecified) option ENABLE_TSAN: OFF; -- Setting (unspecified) option ENABLE_UBSAN: OFF; -- Setting (unspecified) option ENABLE_MSAN: OFF; -- Setting option MAX_AM_ERI: 6; -- Setting (unspecified) option CMAKE_BUILD_TYPE: Release; -- Setting (unspecified) option FC_SYMBOL: 2; -- Setting (unspecified) option BUILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Foun",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:2658,Performance,Perform,Performing,2658,"ompiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP: ON; -- Setting (unspecified) option ENABLE_AUTO_BLAS: ON; -- Setting (unspecified) option ENABLE_AUTO_LAPACK: ON; -- Setting (unspecified) option ENABLE_PLUGIN_TESTING: OFF; -- Setting (unspecified) option ENABLE_XHOST: ON; -- Performing Test CMAKE_C_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_CXX_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_Fortran_FLAGS [-xHost] - Success, Appending; -- Setting (unspecified) option ENABLE_CODE_COVERAGE: OFF; -- Setting (unspecified) option ENABLE_BOUNDS_CHECK: OFF; -- Setting (unspecified) option ENABLE_ASAN: OFF; -- Setting (unspecified) option ENABLE_TSAN: OFF; -- Setting (unspecified) option ENABLE_UBSAN: OFF; -- Setting (unspecified) option ENABLE_MSAN: OFF; -- Setting option MAX_AM_ERI: 6; -- Setting (unspecified) option CMAKE_BUILD_TYPE: Release; -- Setting (unspecified) option FC_SYMBOL: 2; -- Setting (unspecified) option BUILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Foun",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:4145,Performance,Perform,Performing,4145,"ILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Found LAPACK MKL: /home/termo/miniconda3/envs/p4dev35/lib/libmkl_rt.so;...; -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found HDF5: /home/termo/miniconda3/envs/p4dev35/lib/libhdf5.so;... (found version 1.10.1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc: /home/termo/miniconda3/envs/p4dev35/lib/libxc.so (found version 4.0.2); -- Found base compiler version ; CMake Error at cmake/custom_cxxstandard.cmake:39 (if):; if given",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:4180,Performance,Perform,Performing,4180,"ILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Found LAPACK MKL: /home/termo/miniconda3/envs/p4dev35/lib/libmkl_rt.so;...; -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found HDF5: /home/termo/miniconda3/envs/p4dev35/lib/libhdf5.so;... (found version 1.10.1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc: /home/termo/miniconda3/envs/p4dev35/lib/libxc.so (found version 4.0.2); -- Found base compiler version ; CMake Error at cmake/custom_cxxstandard.cmake:39 (if):; if given",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:1005,Safety,Detect,Detecting,1005,. -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsCache.cmake -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake -Bobjdir; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; -- The C compiler identification is Intel 18.0.2.20180210; -- The CXX compiler identification is Intel 18.0.2.20180210; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The Fortran compiler identification is Intel 18.0.2.20180210; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:1039,Safety,Detect,Detecting,1039,. -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsCache.cmake -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake -Bobjdir; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; -- The C compiler identification is Intel 18.0.2.20180210; -- The CXX compiler identification is Intel 18.0.2.20180210; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The Fortran compiler identification is Intel 18.0.2.20180210; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:1080,Safety,Detect,Detecting,1080,. -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsCache.cmake -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake -Bobjdir; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; -- The C compiler identification is Intel 18.0.2.20180210; -- The CXX compiler identification is Intel 18.0.2.20180210; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The Fortran compiler identification is Intel 18.0.2.20180210; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:1113,Safety,Detect,Detecting,1113,. -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsCache.cmake -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake -Bobjdir; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; -- The C compiler identification is Intel 18.0.2.20180210; -- The CXX compiler identification is Intel 18.0.2.20180210; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The Fortran compiler identification is Intel 18.0.2.20180210; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:1386,Safety,Detect,Detecting,1386,ile /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; -- The C compiler identification is Intel 18.0.2.20180210; -- The CXX compiler identification is Intel 18.0.2.20180210; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The Fortran compiler identification is Intel 18.0.2.20180210; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP: ON; -- Setting (unspecified) option ENABLE_AUTO_BLAS: ON; -- Setting (unspecified) option ENABLE_AUTO_LAPACK: ON; -- Setting (unspecified) option ENABLE_PLUGIN_TESTING,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:1422,Safety,Detect,Detecting,1422,ile /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; -- The C compiler identification is Intel 18.0.2.20180210; -- The CXX compiler identification is Intel 18.0.2.20180210; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The Fortran compiler identification is Intel 18.0.2.20180210; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP: ON; -- Setting (unspecified) option ENABLE_AUTO_BLAS: ON; -- Setting (unspecified) option ENABLE_AUTO_LAPACK: ON; -- Setting (unspecified) option ENABLE_PLUGIN_TESTING,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:1465,Safety,Detect,Detecting,1465,ile /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; -- The C compiler identification is Intel 18.0.2.20180210; -- The CXX compiler identification is Intel 18.0.2.20180210; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The Fortran compiler identification is Intel 18.0.2.20180210; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP: ON; -- Setting (unspecified) option ENABLE_AUTO_BLAS: ON; -- Setting (unspecified) option ENABLE_AUTO_LAPACK: ON; -- Setting (unspecified) option ENABLE_PLUGIN_TESTING,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:1500,Safety,Detect,Detecting,1500,ile /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; -- The C compiler identification is Intel 18.0.2.20180210; -- The CXX compiler identification is Intel 18.0.2.20180210; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The Fortran compiler identification is Intel 18.0.2.20180210; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP: ON; -- Setting (unspecified) option ENABLE_AUTO_BLAS: ON; -- Setting (unspecified) option ENABLE_AUTO_LAPACK: ON; -- Setting (unspecified) option ENABLE_PLUGIN_TESTING,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:1850,Safety,Detect,Detecting,1850,"C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The Fortran compiler identification is Intel 18.0.2.20180210; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP: ON; -- Setting (unspecified) option ENABLE_AUTO_BLAS: ON; -- Setting (unspecified) option ENABLE_AUTO_LAPACK: ON; -- Setting (unspecified) option ENABLE_PLUGIN_TESTING: OFF; -- Setting (unspecified) option ENABLE_XHOST: ON; -- Performing Test CMAKE_C_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_CXX_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_Fortran_FLAGS [-xHost] - Success, Appending; -- Setting (unspecified) option ENABLE_CODE_COVERAGE: OFF; -- Setting (unspecified) option ENABLE_BOUNDS_CHECK: OFF; -- Setting (unspecified) option ENABLE_ASAN: OFF; -- Setting (u",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:1890,Safety,Detect,Detecting,1890,"C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The Fortran compiler identification is Intel 18.0.2.20180210; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP: ON; -- Setting (unspecified) option ENABLE_AUTO_BLAS: ON; -- Setting (unspecified) option ENABLE_AUTO_LAPACK: ON; -- Setting (unspecified) option ENABLE_PLUGIN_TESTING: OFF; -- Setting (unspecified) option ENABLE_XHOST: ON; -- Performing Test CMAKE_C_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_CXX_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_Fortran_FLAGS [-xHost] - Success, Appending; -- Setting (unspecified) option ENABLE_CODE_COVERAGE: OFF; -- Setting (unspecified) option ENABLE_BOUNDS_CHECK: OFF; -- Setting (unspecified) option ENABLE_ASAN: OFF; -- Setting (u",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:2539,Testability,Test,Test,2539,"ompiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP: ON; -- Setting (unspecified) option ENABLE_AUTO_BLAS: ON; -- Setting (unspecified) option ENABLE_AUTO_LAPACK: ON; -- Setting (unspecified) option ENABLE_PLUGIN_TESTING: OFF; -- Setting (unspecified) option ENABLE_XHOST: ON; -- Performing Test CMAKE_C_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_CXX_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_Fortran_FLAGS [-xHost] - Success, Appending; -- Setting (unspecified) option ENABLE_CODE_COVERAGE: OFF; -- Setting (unspecified) option ENABLE_BOUNDS_CHECK: OFF; -- Setting (unspecified) option ENABLE_ASAN: OFF; -- Setting (unspecified) option ENABLE_TSAN: OFF; -- Setting (unspecified) option ENABLE_UBSAN: OFF; -- Setting (unspecified) option ENABLE_MSAN: OFF; -- Setting option MAX_AM_ERI: 6; -- Setting (unspecified) option CMAKE_BUILD_TYPE: Release; -- Setting (unspecified) option FC_SYMBOL: 2; -- Setting (unspecified) option BUILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Foun",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:2603,Testability,Test,Test,2603,"ompiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP: ON; -- Setting (unspecified) option ENABLE_AUTO_BLAS: ON; -- Setting (unspecified) option ENABLE_AUTO_LAPACK: ON; -- Setting (unspecified) option ENABLE_PLUGIN_TESTING: OFF; -- Setting (unspecified) option ENABLE_XHOST: ON; -- Performing Test CMAKE_C_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_CXX_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_Fortran_FLAGS [-xHost] - Success, Appending; -- Setting (unspecified) option ENABLE_CODE_COVERAGE: OFF; -- Setting (unspecified) option ENABLE_BOUNDS_CHECK: OFF; -- Setting (unspecified) option ENABLE_ASAN: OFF; -- Setting (unspecified) option ENABLE_TSAN: OFF; -- Setting (unspecified) option ENABLE_UBSAN: OFF; -- Setting (unspecified) option ENABLE_MSAN: OFF; -- Setting option MAX_AM_ERI: 6; -- Setting (unspecified) option CMAKE_BUILD_TYPE: Release; -- Setting (unspecified) option FC_SYMBOL: 2; -- Setting (unspecified) option BUILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Foun",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:2669,Testability,Test,Test,2669,"ompiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP: ON; -- Setting (unspecified) option ENABLE_AUTO_BLAS: ON; -- Setting (unspecified) option ENABLE_AUTO_LAPACK: ON; -- Setting (unspecified) option ENABLE_PLUGIN_TESTING: OFF; -- Setting (unspecified) option ENABLE_XHOST: ON; -- Performing Test CMAKE_C_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_CXX_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_Fortran_FLAGS [-xHost] - Success, Appending; -- Setting (unspecified) option ENABLE_CODE_COVERAGE: OFF; -- Setting (unspecified) option ENABLE_BOUNDS_CHECK: OFF; -- Setting (unspecified) option ENABLE_ASAN: OFF; -- Setting (unspecified) option ENABLE_TSAN: OFF; -- Setting (unspecified) option ENABLE_UBSAN: OFF; -- Setting (unspecified) option ENABLE_MSAN: OFF; -- Setting option MAX_AM_ERI: 6; -- Setting (unspecified) option CMAKE_BUILD_TYPE: Release; -- Setting (unspecified) option FC_SYMBOL: 2; -- Setting (unspecified) option BUILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Foun",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:4156,Testability,Test,Test,4156,"ILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Found LAPACK MKL: /home/termo/miniconda3/envs/p4dev35/lib/libmkl_rt.so;...; -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found HDF5: /home/termo/miniconda3/envs/p4dev35/lib/libhdf5.so;... (found version 1.10.1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc: /home/termo/miniconda3/envs/p4dev35/lib/libxc.so (found version 4.0.2); -- Found base compiler version ; CMake Error at cmake/custom_cxxstandard.cmake:39 (if):; if given",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:4191,Testability,Test,Test,4191,"ILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Found LAPACK MKL: /home/termo/miniconda3/envs/p4dev35/lib/libmkl_rt.so;...; -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found HDF5: /home/termo/miniconda3/envs/p4dev35/lib/libhdf5.so;... (found version 1.10.1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc: /home/termo/miniconda3/envs/p4dev35/lib/libxc.so (found version 4.0.2); -- Found base compiler version ; CMake Error at cmake/custom_cxxstandard.cmake:39 (if):; if given",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:5453,Testability,log,log,5453,"version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Found LAPACK MKL: /home/termo/miniconda3/envs/p4dev35/lib/libmkl_rt.so;...; -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found HDF5: /home/termo/miniconda3/envs/p4dev35/lib/libhdf5.so;... (found version 1.10.1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc: /home/termo/miniconda3/envs/p4dev35/lib/libxc.so (found version 4.0.2); -- Found base compiler version ; CMake Error at cmake/custom_cxxstandard.cmake:39 (if):; if given arguments:. ""VERSION_LESS"" ""4.9"". Unknown arguments specified; Call Stack (most recent call first):; CMakeLists.txt:168 (include). -- Configuring incomplete, errors occurred!; See also ""/media/BIGdisk/psi4/objdir/CMakeFiles/CMakeOutput.log"".; (p4dev35) termo@Ubuntu16:/media/BIGdisk/psi4$ cmake --version; cmake version 3.9.4. CMake suite maintained and supported by Kitware (kitware.com/cmake).; (p4dev35) termo@Ubuntu16:/media/BIGdisk/psi4$ git describe; v1.2rc1. ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883
https://github.com/psi4/psi4/issues/1004#issuecomment-386561008:2319,Integrability,depend,dependencies,2319,"3975_0 psi4/label/dev; mkl 2018.0.2 1; mkl-devel 2018.0.1 h470d631_5; mkl-include 2017.0.3 intel_8 psi4/label/dev; mkl_fft 1.0.1 py35h3010b51_0; mkl_random 1.0.1 py35h629b387_0; more-itertools 4.1.0 py35_0; ncurses 6.0 h9df7e31_2; networkx 2.1 py35_0; numpy 1.14.2 py35hdbf6ddf_1; openssl 1.0.2o h20670df_0; pcmsolver 1.2.1 py35hce75f6e_0 psi4/label/dev; pip 10.0.1 py35_0; pluggy 0.6.0 py35hb428803_0; psi4-dev 1.2a1.dev8 py35h45acd66_0 psi4/label/dev; py 1.5.3 py35_0; pybind11 2.2.3 py35_0 psi4/label/dev; pytest 3.5.1 py35_0; python 3.5.5 hc3d631a_3; readline 7.0 ha6073c6_4; rhash 1.3.5 hbf7ad62_1; setuptools 39.1.0 py35_0; six 1.11.0 py35h423b573_1; sqlite 3.23.1 he433501_0; tk 8.6.7 hc745277_3; wheel 0.31.0 py35_0; xz 5.2.3 h5e939de_4; zlib 1.2.11 ha838bed_2. ```; gcc --version; `gcc (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609`. $CC --version; `x86_64-conda_cos6-linux-gnu-cc (crosstool-NG fa8859cb) 7.2.0`. cat /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; ```; # psi4DepsIntelCache.cmake; # ------------------------; #; # This module sets some likely variable values to initialize the CMake; # cache for dependencies to build your Psi4 source.; # Note that this uses user-provided (non-conda) tools.; #; # See ``psi4-path-advisor`` (or cmake command below) for use.; #; # >>> /home/termo/miniconda3/envs/p4dev35/bin/cmake \; # -H. \; # -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake \; # -Bobjdir; #. set(CMAKE_C_COMPILER ""icc"" CACHE STRING """"); set(CMAKE_CXX_COMPILER ""icpc"" CACHE STRING """"); set(CMAKE_Fortran_COMPILER ""ifort"" CACHE STRING """"). set(CMAKE_C_FLAGS ""-gnu-prefix=x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_CXX_FLAGS ""-gnu-prefix=x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_Fortran_FLAGS ""-gnu-prefix=x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"). #set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"). ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386561008
https://github.com/psi4/psi4/issues/1004#issuecomment-386561008:2266,Modifiability,variab,variable,2266,"3975_0 psi4/label/dev; mkl 2018.0.2 1; mkl-devel 2018.0.1 h470d631_5; mkl-include 2017.0.3 intel_8 psi4/label/dev; mkl_fft 1.0.1 py35h3010b51_0; mkl_random 1.0.1 py35h629b387_0; more-itertools 4.1.0 py35_0; ncurses 6.0 h9df7e31_2; networkx 2.1 py35_0; numpy 1.14.2 py35hdbf6ddf_1; openssl 1.0.2o h20670df_0; pcmsolver 1.2.1 py35hce75f6e_0 psi4/label/dev; pip 10.0.1 py35_0; pluggy 0.6.0 py35hb428803_0; psi4-dev 1.2a1.dev8 py35h45acd66_0 psi4/label/dev; py 1.5.3 py35_0; pybind11 2.2.3 py35_0 psi4/label/dev; pytest 3.5.1 py35_0; python 3.5.5 hc3d631a_3; readline 7.0 ha6073c6_4; rhash 1.3.5 hbf7ad62_1; setuptools 39.1.0 py35_0; six 1.11.0 py35h423b573_1; sqlite 3.23.1 he433501_0; tk 8.6.7 hc745277_3; wheel 0.31.0 py35_0; xz 5.2.3 h5e939de_4; zlib 1.2.11 ha838bed_2. ```; gcc --version; `gcc (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609`. $CC --version; `x86_64-conda_cos6-linux-gnu-cc (crosstool-NG fa8859cb) 7.2.0`. cat /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; ```; # psi4DepsIntelCache.cmake; # ------------------------; #; # This module sets some likely variable values to initialize the CMake; # cache for dependencies to build your Psi4 source.; # Note that this uses user-provided (non-conda) tools.; #; # See ``psi4-path-advisor`` (or cmake command below) for use.; #; # >>> /home/termo/miniconda3/envs/p4dev35/bin/cmake \; # -H. \; # -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake \; # -Bobjdir; #. set(CMAKE_C_COMPILER ""icc"" CACHE STRING """"); set(CMAKE_CXX_COMPILER ""icpc"" CACHE STRING """"); set(CMAKE_Fortran_COMPILER ""ifort"" CACHE STRING """"). set(CMAKE_C_FLAGS ""-gnu-prefix=x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_CXX_FLAGS ""-gnu-prefix=x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_Fortran_FLAGS ""-gnu-prefix=x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"). #set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"). ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386561008
https://github.com/psi4/psi4/issues/1004#issuecomment-386561008:2309,Performance,cache,cache,2309,"3975_0 psi4/label/dev; mkl 2018.0.2 1; mkl-devel 2018.0.1 h470d631_5; mkl-include 2017.0.3 intel_8 psi4/label/dev; mkl_fft 1.0.1 py35h3010b51_0; mkl_random 1.0.1 py35h629b387_0; more-itertools 4.1.0 py35_0; ncurses 6.0 h9df7e31_2; networkx 2.1 py35_0; numpy 1.14.2 py35hdbf6ddf_1; openssl 1.0.2o h20670df_0; pcmsolver 1.2.1 py35hce75f6e_0 psi4/label/dev; pip 10.0.1 py35_0; pluggy 0.6.0 py35hb428803_0; psi4-dev 1.2a1.dev8 py35h45acd66_0 psi4/label/dev; py 1.5.3 py35_0; pybind11 2.2.3 py35_0 psi4/label/dev; pytest 3.5.1 py35_0; python 3.5.5 hc3d631a_3; readline 7.0 ha6073c6_4; rhash 1.3.5 hbf7ad62_1; setuptools 39.1.0 py35_0; six 1.11.0 py35h423b573_1; sqlite 3.23.1 he433501_0; tk 8.6.7 hc745277_3; wheel 0.31.0 py35_0; xz 5.2.3 h5e939de_4; zlib 1.2.11 ha838bed_2. ```; gcc --version; `gcc (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609`. $CC --version; `x86_64-conda_cos6-linux-gnu-cc (crosstool-NG fa8859cb) 7.2.0`. cat /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; ```; # psi4DepsIntelCache.cmake; # ------------------------; #; # This module sets some likely variable values to initialize the CMake; # cache for dependencies to build your Psi4 source.; # Note that this uses user-provided (non-conda) tools.; #; # See ``psi4-path-advisor`` (or cmake command below) for use.; #; # >>> /home/termo/miniconda3/envs/p4dev35/bin/cmake \; # -H. \; # -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake \; # -Bobjdir; #. set(CMAKE_C_COMPILER ""icc"" CACHE STRING """"); set(CMAKE_CXX_COMPILER ""icpc"" CACHE STRING """"); set(CMAKE_Fortran_COMPILER ""ifort"" CACHE STRING """"). set(CMAKE_C_FLAGS ""-gnu-prefix=x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_CXX_FLAGS ""-gnu-prefix=x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_Fortran_FLAGS ""-gnu-prefix=x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"). #set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"). ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386561008
https://github.com/psi4/psi4/issues/1004#issuecomment-386561008:2676,Performance,CACHE,CACHE,2676,"3975_0 psi4/label/dev; mkl 2018.0.2 1; mkl-devel 2018.0.1 h470d631_5; mkl-include 2017.0.3 intel_8 psi4/label/dev; mkl_fft 1.0.1 py35h3010b51_0; mkl_random 1.0.1 py35h629b387_0; more-itertools 4.1.0 py35_0; ncurses 6.0 h9df7e31_2; networkx 2.1 py35_0; numpy 1.14.2 py35hdbf6ddf_1; openssl 1.0.2o h20670df_0; pcmsolver 1.2.1 py35hce75f6e_0 psi4/label/dev; pip 10.0.1 py35_0; pluggy 0.6.0 py35hb428803_0; psi4-dev 1.2a1.dev8 py35h45acd66_0 psi4/label/dev; py 1.5.3 py35_0; pybind11 2.2.3 py35_0 psi4/label/dev; pytest 3.5.1 py35_0; python 3.5.5 hc3d631a_3; readline 7.0 ha6073c6_4; rhash 1.3.5 hbf7ad62_1; setuptools 39.1.0 py35_0; six 1.11.0 py35h423b573_1; sqlite 3.23.1 he433501_0; tk 8.6.7 hc745277_3; wheel 0.31.0 py35_0; xz 5.2.3 h5e939de_4; zlib 1.2.11 ha838bed_2. ```; gcc --version; `gcc (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609`. $CC --version; `x86_64-conda_cos6-linux-gnu-cc (crosstool-NG fa8859cb) 7.2.0`. cat /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; ```; # psi4DepsIntelCache.cmake; # ------------------------; #; # This module sets some likely variable values to initialize the CMake; # cache for dependencies to build your Psi4 source.; # Note that this uses user-provided (non-conda) tools.; #; # See ``psi4-path-advisor`` (or cmake command below) for use.; #; # >>> /home/termo/miniconda3/envs/p4dev35/bin/cmake \; # -H. \; # -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake \; # -Bobjdir; #. set(CMAKE_C_COMPILER ""icc"" CACHE STRING """"); set(CMAKE_CXX_COMPILER ""icpc"" CACHE STRING """"); set(CMAKE_Fortran_COMPILER ""ifort"" CACHE STRING """"). set(CMAKE_C_FLAGS ""-gnu-prefix=x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_CXX_FLAGS ""-gnu-prefix=x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_Fortran_FLAGS ""-gnu-prefix=x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"). #set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"). ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386561008
https://github.com/psi4/psi4/issues/1004#issuecomment-386561008:2724,Performance,CACHE,CACHE,2724,"3975_0 psi4/label/dev; mkl 2018.0.2 1; mkl-devel 2018.0.1 h470d631_5; mkl-include 2017.0.3 intel_8 psi4/label/dev; mkl_fft 1.0.1 py35h3010b51_0; mkl_random 1.0.1 py35h629b387_0; more-itertools 4.1.0 py35_0; ncurses 6.0 h9df7e31_2; networkx 2.1 py35_0; numpy 1.14.2 py35hdbf6ddf_1; openssl 1.0.2o h20670df_0; pcmsolver 1.2.1 py35hce75f6e_0 psi4/label/dev; pip 10.0.1 py35_0; pluggy 0.6.0 py35hb428803_0; psi4-dev 1.2a1.dev8 py35h45acd66_0 psi4/label/dev; py 1.5.3 py35_0; pybind11 2.2.3 py35_0 psi4/label/dev; pytest 3.5.1 py35_0; python 3.5.5 hc3d631a_3; readline 7.0 ha6073c6_4; rhash 1.3.5 hbf7ad62_1; setuptools 39.1.0 py35_0; six 1.11.0 py35h423b573_1; sqlite 3.23.1 he433501_0; tk 8.6.7 hc745277_3; wheel 0.31.0 py35_0; xz 5.2.3 h5e939de_4; zlib 1.2.11 ha838bed_2. ```; gcc --version; `gcc (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609`. $CC --version; `x86_64-conda_cos6-linux-gnu-cc (crosstool-NG fa8859cb) 7.2.0`. cat /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; ```; # psi4DepsIntelCache.cmake; # ------------------------; #; # This module sets some likely variable values to initialize the CMake; # cache for dependencies to build your Psi4 source.; # Note that this uses user-provided (non-conda) tools.; #; # See ``psi4-path-advisor`` (or cmake command below) for use.; #; # >>> /home/termo/miniconda3/envs/p4dev35/bin/cmake \; # -H. \; # -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake \; # -Bobjdir; #. set(CMAKE_C_COMPILER ""icc"" CACHE STRING """"); set(CMAKE_CXX_COMPILER ""icpc"" CACHE STRING """"); set(CMAKE_Fortran_COMPILER ""ifort"" CACHE STRING """"). set(CMAKE_C_FLAGS ""-gnu-prefix=x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_CXX_FLAGS ""-gnu-prefix=x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_Fortran_FLAGS ""-gnu-prefix=x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"). #set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"). ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386561008
https://github.com/psi4/psi4/issues/1004#issuecomment-386561008:2777,Performance,CACHE,CACHE,2777,"3975_0 psi4/label/dev; mkl 2018.0.2 1; mkl-devel 2018.0.1 h470d631_5; mkl-include 2017.0.3 intel_8 psi4/label/dev; mkl_fft 1.0.1 py35h3010b51_0; mkl_random 1.0.1 py35h629b387_0; more-itertools 4.1.0 py35_0; ncurses 6.0 h9df7e31_2; networkx 2.1 py35_0; numpy 1.14.2 py35hdbf6ddf_1; openssl 1.0.2o h20670df_0; pcmsolver 1.2.1 py35hce75f6e_0 psi4/label/dev; pip 10.0.1 py35_0; pluggy 0.6.0 py35hb428803_0; psi4-dev 1.2a1.dev8 py35h45acd66_0 psi4/label/dev; py 1.5.3 py35_0; pybind11 2.2.3 py35_0 psi4/label/dev; pytest 3.5.1 py35_0; python 3.5.5 hc3d631a_3; readline 7.0 ha6073c6_4; rhash 1.3.5 hbf7ad62_1; setuptools 39.1.0 py35_0; six 1.11.0 py35h423b573_1; sqlite 3.23.1 he433501_0; tk 8.6.7 hc745277_3; wheel 0.31.0 py35_0; xz 5.2.3 h5e939de_4; zlib 1.2.11 ha838bed_2. ```; gcc --version; `gcc (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609`. $CC --version; `x86_64-conda_cos6-linux-gnu-cc (crosstool-NG fa8859cb) 7.2.0`. cat /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; ```; # psi4DepsIntelCache.cmake; # ------------------------; #; # This module sets some likely variable values to initialize the CMake; # cache for dependencies to build your Psi4 source.; # Note that this uses user-provided (non-conda) tools.; #; # See ``psi4-path-advisor`` (or cmake command below) for use.; #; # >>> /home/termo/miniconda3/envs/p4dev35/bin/cmake \; # -H. \; # -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake \; # -Bobjdir; #. set(CMAKE_C_COMPILER ""icc"" CACHE STRING """"); set(CMAKE_CXX_COMPILER ""icpc"" CACHE STRING """"); set(CMAKE_Fortran_COMPILER ""ifort"" CACHE STRING """"). set(CMAKE_C_FLAGS ""-gnu-prefix=x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_CXX_FLAGS ""-gnu-prefix=x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_Fortran_FLAGS ""-gnu-prefix=x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"). #set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"). ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386561008
https://github.com/psi4/psi4/issues/1004#issuecomment-386561008:2856,Performance,CACHE,CACHE,2856,"3975_0 psi4/label/dev; mkl 2018.0.2 1; mkl-devel 2018.0.1 h470d631_5; mkl-include 2017.0.3 intel_8 psi4/label/dev; mkl_fft 1.0.1 py35h3010b51_0; mkl_random 1.0.1 py35h629b387_0; more-itertools 4.1.0 py35_0; ncurses 6.0 h9df7e31_2; networkx 2.1 py35_0; numpy 1.14.2 py35hdbf6ddf_1; openssl 1.0.2o h20670df_0; pcmsolver 1.2.1 py35hce75f6e_0 psi4/label/dev; pip 10.0.1 py35_0; pluggy 0.6.0 py35hb428803_0; psi4-dev 1.2a1.dev8 py35h45acd66_0 psi4/label/dev; py 1.5.3 py35_0; pybind11 2.2.3 py35_0 psi4/label/dev; pytest 3.5.1 py35_0; python 3.5.5 hc3d631a_3; readline 7.0 ha6073c6_4; rhash 1.3.5 hbf7ad62_1; setuptools 39.1.0 py35_0; six 1.11.0 py35h423b573_1; sqlite 3.23.1 he433501_0; tk 8.6.7 hc745277_3; wheel 0.31.0 py35_0; xz 5.2.3 h5e939de_4; zlib 1.2.11 ha838bed_2. ```; gcc --version; `gcc (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609`. $CC --version; `x86_64-conda_cos6-linux-gnu-cc (crosstool-NG fa8859cb) 7.2.0`. cat /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; ```; # psi4DepsIntelCache.cmake; # ------------------------; #; # This module sets some likely variable values to initialize the CMake; # cache for dependencies to build your Psi4 source.; # Note that this uses user-provided (non-conda) tools.; #; # See ``psi4-path-advisor`` (or cmake command below) for use.; #; # >>> /home/termo/miniconda3/envs/p4dev35/bin/cmake \; # -H. \; # -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake \; # -Bobjdir; #. set(CMAKE_C_COMPILER ""icc"" CACHE STRING """"); set(CMAKE_CXX_COMPILER ""icpc"" CACHE STRING """"); set(CMAKE_Fortran_COMPILER ""ifort"" CACHE STRING """"). set(CMAKE_C_FLAGS ""-gnu-prefix=x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_CXX_FLAGS ""-gnu-prefix=x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_Fortran_FLAGS ""-gnu-prefix=x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"). #set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"). ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386561008
https://github.com/psi4/psi4/issues/1004#issuecomment-386561008:2937,Performance,CACHE,CACHE,2937,"3975_0 psi4/label/dev; mkl 2018.0.2 1; mkl-devel 2018.0.1 h470d631_5; mkl-include 2017.0.3 intel_8 psi4/label/dev; mkl_fft 1.0.1 py35h3010b51_0; mkl_random 1.0.1 py35h629b387_0; more-itertools 4.1.0 py35_0; ncurses 6.0 h9df7e31_2; networkx 2.1 py35_0; numpy 1.14.2 py35hdbf6ddf_1; openssl 1.0.2o h20670df_0; pcmsolver 1.2.1 py35hce75f6e_0 psi4/label/dev; pip 10.0.1 py35_0; pluggy 0.6.0 py35hb428803_0; psi4-dev 1.2a1.dev8 py35h45acd66_0 psi4/label/dev; py 1.5.3 py35_0; pybind11 2.2.3 py35_0 psi4/label/dev; pytest 3.5.1 py35_0; python 3.5.5 hc3d631a_3; readline 7.0 ha6073c6_4; rhash 1.3.5 hbf7ad62_1; setuptools 39.1.0 py35_0; six 1.11.0 py35h423b573_1; sqlite 3.23.1 he433501_0; tk 8.6.7 hc745277_3; wheel 0.31.0 py35_0; xz 5.2.3 h5e939de_4; zlib 1.2.11 ha838bed_2. ```; gcc --version; `gcc (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609`. $CC --version; `x86_64-conda_cos6-linux-gnu-cc (crosstool-NG fa8859cb) 7.2.0`. cat /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; ```; # psi4DepsIntelCache.cmake; # ------------------------; #; # This module sets some likely variable values to initialize the CMake; # cache for dependencies to build your Psi4 source.; # Note that this uses user-provided (non-conda) tools.; #; # See ``psi4-path-advisor`` (or cmake command below) for use.; #; # >>> /home/termo/miniconda3/envs/p4dev35/bin/cmake \; # -H. \; # -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake \; # -Bobjdir; #. set(CMAKE_C_COMPILER ""icc"" CACHE STRING """"); set(CMAKE_CXX_COMPILER ""icpc"" CACHE STRING """"); set(CMAKE_Fortran_COMPILER ""ifort"" CACHE STRING """"). set(CMAKE_C_FLAGS ""-gnu-prefix=x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_CXX_FLAGS ""-gnu-prefix=x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_Fortran_FLAGS ""-gnu-prefix=x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"). #set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"). ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386561008
https://github.com/psi4/psi4/issues/1004#issuecomment-386561008:3022,Performance,CACHE,CACHE,3022,"3975_0 psi4/label/dev; mkl 2018.0.2 1; mkl-devel 2018.0.1 h470d631_5; mkl-include 2017.0.3 intel_8 psi4/label/dev; mkl_fft 1.0.1 py35h3010b51_0; mkl_random 1.0.1 py35h629b387_0; more-itertools 4.1.0 py35_0; ncurses 6.0 h9df7e31_2; networkx 2.1 py35_0; numpy 1.14.2 py35hdbf6ddf_1; openssl 1.0.2o h20670df_0; pcmsolver 1.2.1 py35hce75f6e_0 psi4/label/dev; pip 10.0.1 py35_0; pluggy 0.6.0 py35hb428803_0; psi4-dev 1.2a1.dev8 py35h45acd66_0 psi4/label/dev; py 1.5.3 py35_0; pybind11 2.2.3 py35_0 psi4/label/dev; pytest 3.5.1 py35_0; python 3.5.5 hc3d631a_3; readline 7.0 ha6073c6_4; rhash 1.3.5 hbf7ad62_1; setuptools 39.1.0 py35_0; six 1.11.0 py35h423b573_1; sqlite 3.23.1 he433501_0; tk 8.6.7 hc745277_3; wheel 0.31.0 py35_0; xz 5.2.3 h5e939de_4; zlib 1.2.11 ha838bed_2. ```; gcc --version; `gcc (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609`. $CC --version; `x86_64-conda_cos6-linux-gnu-cc (crosstool-NG fa8859cb) 7.2.0`. cat /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; ```; # psi4DepsIntelCache.cmake; # ------------------------; #; # This module sets some likely variable values to initialize the CMake; # cache for dependencies to build your Psi4 source.; # Note that this uses user-provided (non-conda) tools.; #; # See ``psi4-path-advisor`` (or cmake command below) for use.; #; # >>> /home/termo/miniconda3/envs/p4dev35/bin/cmake \; # -H. \; # -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake \; # -Bobjdir; #. set(CMAKE_C_COMPILER ""icc"" CACHE STRING """"); set(CMAKE_CXX_COMPILER ""icpc"" CACHE STRING """"); set(CMAKE_Fortran_COMPILER ""ifort"" CACHE STRING """"). set(CMAKE_C_FLAGS ""-gnu-prefix=x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_CXX_FLAGS ""-gnu-prefix=x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_Fortran_FLAGS ""-gnu-prefix=x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"). #set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"). ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386561008
https://github.com/psi4/psi4/issues/1004#issuecomment-386561008:3144,Performance,CACHE,CACHE,3144,"3975_0 psi4/label/dev; mkl 2018.0.2 1; mkl-devel 2018.0.1 h470d631_5; mkl-include 2017.0.3 intel_8 psi4/label/dev; mkl_fft 1.0.1 py35h3010b51_0; mkl_random 1.0.1 py35h629b387_0; more-itertools 4.1.0 py35_0; ncurses 6.0 h9df7e31_2; networkx 2.1 py35_0; numpy 1.14.2 py35hdbf6ddf_1; openssl 1.0.2o h20670df_0; pcmsolver 1.2.1 py35hce75f6e_0 psi4/label/dev; pip 10.0.1 py35_0; pluggy 0.6.0 py35hb428803_0; psi4-dev 1.2a1.dev8 py35h45acd66_0 psi4/label/dev; py 1.5.3 py35_0; pybind11 2.2.3 py35_0 psi4/label/dev; pytest 3.5.1 py35_0; python 3.5.5 hc3d631a_3; readline 7.0 ha6073c6_4; rhash 1.3.5 hbf7ad62_1; setuptools 39.1.0 py35_0; six 1.11.0 py35h423b573_1; sqlite 3.23.1 he433501_0; tk 8.6.7 hc745277_3; wheel 0.31.0 py35_0; xz 5.2.3 h5e939de_4; zlib 1.2.11 ha838bed_2. ```; gcc --version; `gcc (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609`. $CC --version; `x86_64-conda_cos6-linux-gnu-cc (crosstool-NG fa8859cb) 7.2.0`. cat /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; ```; # psi4DepsIntelCache.cmake; # ------------------------; #; # This module sets some likely variable values to initialize the CMake; # cache for dependencies to build your Psi4 source.; # Note that this uses user-provided (non-conda) tools.; #; # See ``psi4-path-advisor`` (or cmake command below) for use.; #; # >>> /home/termo/miniconda3/envs/p4dev35/bin/cmake \; # -H. \; # -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake \; # -Bobjdir; #. set(CMAKE_C_COMPILER ""icc"" CACHE STRING """"); set(CMAKE_CXX_COMPILER ""icpc"" CACHE STRING """"); set(CMAKE_Fortran_COMPILER ""ifort"" CACHE STRING """"). set(CMAKE_C_FLAGS ""-gnu-prefix=x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_CXX_FLAGS ""-gnu-prefix=x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_Fortran_FLAGS ""-gnu-prefix=x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"). #set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"). ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386561008
https://github.com/psi4/psi4/issues/1004#issuecomment-386561008:235,Security,certificate,certificates,235,conda list; ```; # packages in environment at /home/termo/miniconda3/envs/p4dev35:; #; # Name Version Build Channel; attrs 17.4.0 py35_0; binutils_impl_linux-64 2.28.1 had2808c_3; binutils_linux-64 7.2.0 26; bzip2 1.0.6 h9a117a8_4; ca-certificates 2018.03.07 0; certifi 2018.4.16 py35_0; chemps2 1.8.7 ha40901b_0 psi4/label/dev; cmake 3.9.4 h142f0e9_0; curl 7.59.0 h84994c4_0; decorator 4.3.0 py35_0; deepdiff 3.3.0 py_0 psi4/label/dev; dkh 1.2 h173d85e_2 psi4/label/dev; expat 2.2.5 he0dffb1_0; gau2grid 1.0.1 h14c3975_0 psi4/label/dev; gcc_impl_linux-64 7.2.0 habb00fd_3; gcc_linux-64 7.2.0 26; gdma 2.2.6 hf4d0741_5 psi4/label/dev; gfortran_impl_linux-64 7.2.0 hdf63c60_3; gfortran_linux-64 7.2.0 26; gxx_impl_linux-64 7.2.0 hdf63c60_3; gxx_linux-64 7.2.0 26; hdf5 1.10.1 h9caa474_1; intel-openmp 2018.0.0 8; jsonpickle 0.9.6 py_0 psi4/label/dev; libcurl 7.59.0 h1ad7b7a_0; libedit 3.1 heed3624_0; libefp 1.5b2 h470d631_0 psi4/label/dev; libffi 3.2.1 hd88cf55_4; libgcc-ng 7.2.0 hdf63c60_3; libgfortran-ng 7.2.0 hdf63c60_3; libint 1.2.1 h73b9bb0_3 psi4/label/dev; libssh2 1.8.0 h9cfc8f7_4; libstdcxx-ng 7.2.0 hdf63c60_3; libuv 1.20.0 h14c3975_0; libxc 4.0.2 h14c3975_0 psi4/label/dev; mkl 2018.0.2 1; mkl-devel 2018.0.1 h470d631_5; mkl-include 2017.0.3 intel_8 psi4/label/dev; mkl_fft 1.0.1 py35h3010b51_0; mkl_random 1.0.1 py35h629b387_0; more-itertools 4.1.0 py35_0; ncurses 6.0 h9df7e31_2; networkx 2.1 py35_0; numpy 1.14.2 py35hdbf6ddf_1; openssl 1.0.2o h20670df_0; pcmsolver 1.2.1 py35hce75f6e_0 psi4/label/dev; pip 10.0.1 py35_0; pluggy 0.6.0 py35hb428803_0; psi4-dev 1.2a1.dev8 py35h45acd66_0 psi4/label/dev; py 1.5.3 py35_0; pybind11 2.2.3 py35_0 psi4/label/dev; pytest 3.5.1 py35_0; python 3.5.5 hc3d631a_3; readline 7.0 ha6073c6_4; rhash 1.3.5 hbf7ad62_1; setuptools 39.1.0 py35_0; six 1.11.0 py35h423b573_1; sqlite 3.23.1 he433501_0; tk 8.6.7 hc745277_3; wheel 0.31.0 py35_0; xz 5.2.3 h5e939de_4; zlib 1.2.11 ha838bed_2. ```; gcc --version; `gcc (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 201,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386561008
https://github.com/psi4/psi4/issues/1004#issuecomment-386634031:470,Performance,CACHE,CACHE,470,"Your system has got us confused as to why GCC isn't picked up (at all, hence the `-- Found base compiler version `) much less incorrectly, as everything you've printed looks ideal. 1. Make _sure_ you're deleting `objdir/` btwn cmake attempts; 2. Make _sure_ you're `conda activate p4dev35` (sure looks like you are); 3. `printenv`, please; 4. See the commented out `#set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """")` in the file you just `cat`-ed? Paste the full path it has to the trio of `set(CMAKE_*_FLAGS ...` above and try again.; 5. Try a simple compile.; ```; >>>icpc -gnu-prefix=x86_64-conda_cos6-linux-gnu- hello.cc -o hello && ./hello; Hello, World!; GCC: 7.2.0; Intel: 1800; ```. hello.cc; ```; #include <iostream>; using namespace std;. int main() ; {; cout << ""Hello, World!"" << endl;; cout << ""GCC: "" << __GNUC__ << ""."" << __GNUC_MINOR__ << ""."" << __GNUC_PATCHLEVEL__ << endl;; #ifdef __INTEL_COMPILER; cout << ""Intel: "" << __INTEL_COMPILER << endl;; #endif. return 0;; }; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386634031
https://github.com/psi4/psi4/issues/1004#issuecomment-386634031:616,Usability,simpl,simple,616,"Your system has got us confused as to why GCC isn't picked up (at all, hence the `-- Found base compiler version `) much less incorrectly, as everything you've printed looks ideal. 1. Make _sure_ you're deleting `objdir/` btwn cmake attempts; 2. Make _sure_ you're `conda activate p4dev35` (sure looks like you are); 3. `printenv`, please; 4. See the commented out `#set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """")` in the file you just `cat`-ed? Paste the full path it has to the trio of `set(CMAKE_*_FLAGS ...` above and try again.; 5. Try a simple compile.; ```; >>>icpc -gnu-prefix=x86_64-conda_cos6-linux-gnu- hello.cc -o hello && ./hello; Hello, World!; GCC: 7.2.0; Intel: 1800; ```. hello.cc; ```; #include <iostream>; using namespace std;. int main() ; {; cout << ""Hello, World!"" << endl;; cout << ""GCC: "" << __GNUC__ << ""."" << __GNUC_MINOR__ << ""."" << __GNUC_PATCHLEVEL__ << endl;; #ifdef __INTEL_COMPILER; cout << ""Intel: "" << __INTEL_COMPILER << endl;; #endif. return 0;; }; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386634031
https://github.com/psi4/psi4/issues/1004#issuecomment-386642448:11053,Availability,error,error,11053,".2.199/linux/mpi; _=/usr/bin/printenv; ```. cat /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; ```; # psi4DepsIntelCache.cmake; # ------------------------; #; # This module sets some likely variable values to initialize the CMake; # cache for dependencies to build your Psi4 source.; # Note that this uses user-provided (non-conda) tools.; #; # See ``psi4-path-advisor`` (or cmake command below) for use.; #; # >>> /home/termo/miniconda3/envs/p4dev35/bin/cmake \; # -H. \; # -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake \; # -Bobjdir; #. set(CMAKE_C_COMPILER ""icc"" CACHE STRING """"); set(CMAKE_CXX_COMPILER ""icpc"" CACHE STRING """"); set(CMAKE_Fortran_COMPILER ""ifort"" CACHE STRING """"). set(CMAKE_C_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_Fortran_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"). #set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); ```; --> same error at same place as earlier... icpc -gnu-prefix=x86_64-conda_cos6-linux-gnu- hello.cc -o hello && ./hello; ```; In file included from /home/termo/miniconda3/envs/p4dev35/bin/../x86_64-conda_cos6-linux-gnu/include/c++/7.2.0/x86_64-conda_cos6-linux-gnu/bits/os_defines.h(39),; from /home/termo/miniconda3/envs/p4dev35/bin/../x86_64-conda_cos6-linux-gnu/include/c++/7.2.0/x86_64-conda_cos6-linux-gnu/bits/c++config.h(533),; from /home/termo/miniconda3/envs/p4dev35/bin/../x86_64-conda_cos6-linux-gnu/include/c++/7.2.0/iostream(38),; from hello.cc(1):; /usr/include/features.h(367): catastrophic error: cannot open source file ""sys/cdefs.h""; # include <sys/cdefs.h>; ^. compilation aborted for hello.cc (code 4). ```; now we are getting somewhere :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386642448
https://github.com/psi4/psi4/issues/1004#issuecomment-386642448:11648,Availability,error,error,11648,".2.199/linux/mpi; _=/usr/bin/printenv; ```. cat /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; ```; # psi4DepsIntelCache.cmake; # ------------------------; #; # This module sets some likely variable values to initialize the CMake; # cache for dependencies to build your Psi4 source.; # Note that this uses user-provided (non-conda) tools.; #; # See ``psi4-path-advisor`` (or cmake command below) for use.; #; # >>> /home/termo/miniconda3/envs/p4dev35/bin/cmake \; # -H. \; # -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake \; # -Bobjdir; #. set(CMAKE_C_COMPILER ""icc"" CACHE STRING """"); set(CMAKE_CXX_COMPILER ""icpc"" CACHE STRING """"); set(CMAKE_Fortran_COMPILER ""ifort"" CACHE STRING """"). set(CMAKE_C_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_Fortran_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"). #set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); ```; --> same error at same place as earlier... icpc -gnu-prefix=x86_64-conda_cos6-linux-gnu- hello.cc -o hello && ./hello; ```; In file included from /home/termo/miniconda3/envs/p4dev35/bin/../x86_64-conda_cos6-linux-gnu/include/c++/7.2.0/x86_64-conda_cos6-linux-gnu/bits/os_defines.h(39),; from /home/termo/miniconda3/envs/p4dev35/bin/../x86_64-conda_cos6-linux-gnu/include/c++/7.2.0/x86_64-conda_cos6-linux-gnu/bits/c++config.h(533),; from /home/termo/miniconda3/envs/p4dev35/bin/../x86_64-conda_cos6-linux-gnu/include/c++/7.2.0/iostream(38),; from hello.cc(1):; /usr/include/features.h(367): catastrophic error: cannot open source file ""sys/cdefs.h""; # include <sys/cdefs.h>; ^. compilation aborted for hello.cc (code 4). ```; now we are getting somewhere :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386642448
https://github.com/psi4/psi4/issues/1004#issuecomment-386642448:10076,Integrability,depend,dependencies,10076,"mentation_2018/en/debugger//gdb-igfx/info/; CC=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-cc; XDG_RUNTIME_DIR=/run/user/1000; READELF=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-readelf; GCC_AR=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-gcc-ar; OBJDUMP=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-objdump; LESSCLOSE=/usr/bin/lesspipe %s %s; GPROF=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-gprof; FFLAGS=-fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -pipe; GXX=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-g++; I_MPI_ROOT=/home/termo/intel/compilers_and_libraries_2018.2.199/linux/mpi; _=/usr/bin/printenv; ```. cat /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; ```; # psi4DepsIntelCache.cmake; # ------------------------; #; # This module sets some likely variable values to initialize the CMake; # cache for dependencies to build your Psi4 source.; # Note that this uses user-provided (non-conda) tools.; #; # See ``psi4-path-advisor`` (or cmake command below) for use.; #; # >>> /home/termo/miniconda3/envs/p4dev35/bin/cmake \; # -H. \; # -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake \; # -Bobjdir; #. set(CMAKE_C_COMPILER ""icc"" CACHE STRING """"); set(CMAKE_CXX_COMPILER ""icpc"" CACHE STRING """"); set(CMAKE_Fortran_COMPILER ""ifort"" CACHE STRING """"). set(CMAKE_C_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_Fortran_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"). #set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386642448
https://github.com/psi4/psi4/issues/1004#issuecomment-386642448:10023,Modifiability,variab,variable,10023,"mentation_2018/en/debugger//gdb-igfx/info/; CC=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-cc; XDG_RUNTIME_DIR=/run/user/1000; READELF=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-readelf; GCC_AR=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-gcc-ar; OBJDUMP=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-objdump; LESSCLOSE=/usr/bin/lesspipe %s %s; GPROF=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-gprof; FFLAGS=-fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -pipe; GXX=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-g++; I_MPI_ROOT=/home/termo/intel/compilers_and_libraries_2018.2.199/linux/mpi; _=/usr/bin/printenv; ```. cat /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; ```; # psi4DepsIntelCache.cmake; # ------------------------; #; # This module sets some likely variable values to initialize the CMake; # cache for dependencies to build your Psi4 source.; # Note that this uses user-provided (non-conda) tools.; #; # See ``psi4-path-advisor`` (or cmake command below) for use.; #; # >>> /home/termo/miniconda3/envs/p4dev35/bin/cmake \; # -H. \; # -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake \; # -Bobjdir; #. set(CMAKE_C_COMPILER ""icc"" CACHE STRING """"); set(CMAKE_CXX_COMPILER ""icpc"" CACHE STRING """"); set(CMAKE_Fortran_COMPILER ""ifort"" CACHE STRING """"). set(CMAKE_C_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_Fortran_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"). #set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386642448
https://github.com/psi4/psi4/issues/1004#issuecomment-386642448:11461,Modifiability,config,config,11461,".2.199/linux/mpi; _=/usr/bin/printenv; ```. cat /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; ```; # psi4DepsIntelCache.cmake; # ------------------------; #; # This module sets some likely variable values to initialize the CMake; # cache for dependencies to build your Psi4 source.; # Note that this uses user-provided (non-conda) tools.; #; # See ``psi4-path-advisor`` (or cmake command below) for use.; #; # >>> /home/termo/miniconda3/envs/p4dev35/bin/cmake \; # -H. \; # -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake \; # -Bobjdir; #. set(CMAKE_C_COMPILER ""icc"" CACHE STRING """"); set(CMAKE_CXX_COMPILER ""icpc"" CACHE STRING """"); set(CMAKE_Fortran_COMPILER ""ifort"" CACHE STRING """"). set(CMAKE_C_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_Fortran_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"). #set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); ```; --> same error at same place as earlier... icpc -gnu-prefix=x86_64-conda_cos6-linux-gnu- hello.cc -o hello && ./hello; ```; In file included from /home/termo/miniconda3/envs/p4dev35/bin/../x86_64-conda_cos6-linux-gnu/include/c++/7.2.0/x86_64-conda_cos6-linux-gnu/bits/os_defines.h(39),; from /home/termo/miniconda3/envs/p4dev35/bin/../x86_64-conda_cos6-linux-gnu/include/c++/7.2.0/x86_64-conda_cos6-linux-gnu/bits/c++config.h(533),; from /home/termo/miniconda3/envs/p4dev35/bin/../x86_64-conda_cos6-linux-gnu/include/c++/7.2.0/iostream(38),; from hello.cc(1):; /usr/include/features.h(367): catastrophic error: cannot open source file ""sys/cdefs.h""; # include <sys/cdefs.h>; ^. compilation aborted for hello.cc (code 4). ```; now we are getting somewhere :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386642448
https://github.com/psi4/psi4/issues/1004#issuecomment-386642448:10066,Performance,cache,cache,10066,"mentation_2018/en/debugger//gdb-igfx/info/; CC=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-cc; XDG_RUNTIME_DIR=/run/user/1000; READELF=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-readelf; GCC_AR=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-gcc-ar; OBJDUMP=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-objdump; LESSCLOSE=/usr/bin/lesspipe %s %s; GPROF=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-gprof; FFLAGS=-fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -pipe; GXX=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-g++; I_MPI_ROOT=/home/termo/intel/compilers_and_libraries_2018.2.199/linux/mpi; _=/usr/bin/printenv; ```. cat /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; ```; # psi4DepsIntelCache.cmake; # ------------------------; #; # This module sets some likely variable values to initialize the CMake; # cache for dependencies to build your Psi4 source.; # Note that this uses user-provided (non-conda) tools.; #; # See ``psi4-path-advisor`` (or cmake command below) for use.; #; # >>> /home/termo/miniconda3/envs/p4dev35/bin/cmake \; # -H. \; # -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake \; # -Bobjdir; #. set(CMAKE_C_COMPILER ""icc"" CACHE STRING """"); set(CMAKE_CXX_COMPILER ""icpc"" CACHE STRING """"); set(CMAKE_Fortran_COMPILER ""ifort"" CACHE STRING """"). set(CMAKE_C_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_Fortran_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"). #set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386642448
https://github.com/psi4/psi4/issues/1004#issuecomment-386642448:10433,Performance,CACHE,CACHE,10433,"=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-gprof; FFLAGS=-fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -pipe; GXX=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-g++; I_MPI_ROOT=/home/termo/intel/compilers_and_libraries_2018.2.199/linux/mpi; _=/usr/bin/printenv; ```. cat /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; ```; # psi4DepsIntelCache.cmake; # ------------------------; #; # This module sets some likely variable values to initialize the CMake; # cache for dependencies to build your Psi4 source.; # Note that this uses user-provided (non-conda) tools.; #; # See ``psi4-path-advisor`` (or cmake command below) for use.; #; # >>> /home/termo/miniconda3/envs/p4dev35/bin/cmake \; # -H. \; # -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake \; # -Bobjdir; #. set(CMAKE_C_COMPILER ""icc"" CACHE STRING """"); set(CMAKE_CXX_COMPILER ""icpc"" CACHE STRING """"); set(CMAKE_Fortran_COMPILER ""ifort"" CACHE STRING """"). set(CMAKE_C_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_Fortran_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"). #set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); ```; --> same error at same place as earlier... icpc -gnu-prefix=x86_64-conda_cos6-linux-gnu- hello.cc -o hello && ./hello; ```; In file included from /home/termo/miniconda3/envs/p4dev35/bin/../x86_64-conda_cos6-linux-gnu/include/c++/7.2.0/x86_64-conda_cos6-linux-gnu/bits/os_defines.h(39),; from /home/termo/miniconda3/envs/p4dev35/bin/../x86_64-conda_cos6-linux-gnu/include/c++/7.2.0/x86_64-conda_cos6-linux-gnu/bits/c++config.h(533),; f",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386642448
https://github.com/psi4/psi4/issues/1004#issuecomment-386642448:10481,Performance,CACHE,CACHE,10481,"=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-gprof; FFLAGS=-fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -pipe; GXX=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-g++; I_MPI_ROOT=/home/termo/intel/compilers_and_libraries_2018.2.199/linux/mpi; _=/usr/bin/printenv; ```. cat /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; ```; # psi4DepsIntelCache.cmake; # ------------------------; #; # This module sets some likely variable values to initialize the CMake; # cache for dependencies to build your Psi4 source.; # Note that this uses user-provided (non-conda) tools.; #; # See ``psi4-path-advisor`` (or cmake command below) for use.; #; # >>> /home/termo/miniconda3/envs/p4dev35/bin/cmake \; # -H. \; # -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake \; # -Bobjdir; #. set(CMAKE_C_COMPILER ""icc"" CACHE STRING """"); set(CMAKE_CXX_COMPILER ""icpc"" CACHE STRING """"); set(CMAKE_Fortran_COMPILER ""ifort"" CACHE STRING """"). set(CMAKE_C_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_Fortran_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"). #set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); ```; --> same error at same place as earlier... icpc -gnu-prefix=x86_64-conda_cos6-linux-gnu- hello.cc -o hello && ./hello; ```; In file included from /home/termo/miniconda3/envs/p4dev35/bin/../x86_64-conda_cos6-linux-gnu/include/c++/7.2.0/x86_64-conda_cos6-linux-gnu/bits/os_defines.h(39),; from /home/termo/miniconda3/envs/p4dev35/bin/../x86_64-conda_cos6-linux-gnu/include/c++/7.2.0/x86_64-conda_cos6-linux-gnu/bits/c++config.h(533),; f",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386642448
https://github.com/psi4/psi4/issues/1004#issuecomment-386642448:10534,Performance,CACHE,CACHE,10534,"=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-gprof; FFLAGS=-fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -pipe; GXX=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-g++; I_MPI_ROOT=/home/termo/intel/compilers_and_libraries_2018.2.199/linux/mpi; _=/usr/bin/printenv; ```. cat /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; ```; # psi4DepsIntelCache.cmake; # ------------------------; #; # This module sets some likely variable values to initialize the CMake; # cache for dependencies to build your Psi4 source.; # Note that this uses user-provided (non-conda) tools.; #; # See ``psi4-path-advisor`` (or cmake command below) for use.; #; # >>> /home/termo/miniconda3/envs/p4dev35/bin/cmake \; # -H. \; # -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake \; # -Bobjdir; #. set(CMAKE_C_COMPILER ""icc"" CACHE STRING """"); set(CMAKE_CXX_COMPILER ""icpc"" CACHE STRING """"); set(CMAKE_Fortran_COMPILER ""ifort"" CACHE STRING """"). set(CMAKE_C_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_Fortran_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"). #set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); ```; --> same error at same place as earlier... icpc -gnu-prefix=x86_64-conda_cos6-linux-gnu- hello.cc -o hello && ./hello; ```; In file included from /home/termo/miniconda3/envs/p4dev35/bin/../x86_64-conda_cos6-linux-gnu/include/c++/7.2.0/x86_64-conda_cos6-linux-gnu/bits/os_defines.h(39),; from /home/termo/miniconda3/envs/p4dev35/bin/../x86_64-conda_cos6-linux-gnu/include/c++/7.2.0/x86_64-conda_cos6-linux-gnu/bits/c++config.h(533),; f",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386642448
https://github.com/psi4/psi4/issues/1004#issuecomment-386642448:10653,Performance,CACHE,CACHE,10653,"x-gnu-g++; I_MPI_ROOT=/home/termo/intel/compilers_and_libraries_2018.2.199/linux/mpi; _=/usr/bin/printenv; ```. cat /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; ```; # psi4DepsIntelCache.cmake; # ------------------------; #; # This module sets some likely variable values to initialize the CMake; # cache for dependencies to build your Psi4 source.; # Note that this uses user-provided (non-conda) tools.; #; # See ``psi4-path-advisor`` (or cmake command below) for use.; #; # >>> /home/termo/miniconda3/envs/p4dev35/bin/cmake \; # -H. \; # -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake \; # -Bobjdir; #. set(CMAKE_C_COMPILER ""icc"" CACHE STRING """"); set(CMAKE_CXX_COMPILER ""icpc"" CACHE STRING """"); set(CMAKE_Fortran_COMPILER ""ifort"" CACHE STRING """"). set(CMAKE_C_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_Fortran_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"). #set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); ```; --> same error at same place as earlier... icpc -gnu-prefix=x86_64-conda_cos6-linux-gnu- hello.cc -o hello && ./hello; ```; In file included from /home/termo/miniconda3/envs/p4dev35/bin/../x86_64-conda_cos6-linux-gnu/include/c++/7.2.0/x86_64-conda_cos6-linux-gnu/bits/os_defines.h(39),; from /home/termo/miniconda3/envs/p4dev35/bin/../x86_64-conda_cos6-linux-gnu/include/c++/7.2.0/x86_64-conda_cos6-linux-gnu/bits/c++config.h(533),; from /home/termo/miniconda3/envs/p4dev35/bin/../x86_64-conda_cos6-linux-gnu/include/c++/7.2.0/iostream(38),; from hello.cc(1):; /usr/include/features.h(367): catastrophic error: cannot open source file ""sys/cdefs.h""; # include <sys/cdefs.h>; ^. compilation ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386642448
https://github.com/psi4/psi4/issues/1004#issuecomment-386642448:10774,Performance,CACHE,CACHE,10774,"x-gnu-g++; I_MPI_ROOT=/home/termo/intel/compilers_and_libraries_2018.2.199/linux/mpi; _=/usr/bin/printenv; ```. cat /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; ```; # psi4DepsIntelCache.cmake; # ------------------------; #; # This module sets some likely variable values to initialize the CMake; # cache for dependencies to build your Psi4 source.; # Note that this uses user-provided (non-conda) tools.; #; # See ``psi4-path-advisor`` (or cmake command below) for use.; #; # >>> /home/termo/miniconda3/envs/p4dev35/bin/cmake \; # -H. \; # -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake \; # -Bobjdir; #. set(CMAKE_C_COMPILER ""icc"" CACHE STRING """"); set(CMAKE_CXX_COMPILER ""icpc"" CACHE STRING """"); set(CMAKE_Fortran_COMPILER ""ifort"" CACHE STRING """"). set(CMAKE_C_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_Fortran_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"). #set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); ```; --> same error at same place as earlier... icpc -gnu-prefix=x86_64-conda_cos6-linux-gnu- hello.cc -o hello && ./hello; ```; In file included from /home/termo/miniconda3/envs/p4dev35/bin/../x86_64-conda_cos6-linux-gnu/include/c++/7.2.0/x86_64-conda_cos6-linux-gnu/bits/os_defines.h(39),; from /home/termo/miniconda3/envs/p4dev35/bin/../x86_64-conda_cos6-linux-gnu/include/c++/7.2.0/x86_64-conda_cos6-linux-gnu/bits/c++config.h(533),; from /home/termo/miniconda3/envs/p4dev35/bin/../x86_64-conda_cos6-linux-gnu/include/c++/7.2.0/iostream(38),; from hello.cc(1):; /usr/include/features.h(367): catastrophic error: cannot open source file ""sys/cdefs.h""; # include <sys/cdefs.h>; ^. compilation ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386642448
https://github.com/psi4/psi4/issues/1004#issuecomment-386642448:10899,Performance,CACHE,CACHE,10899,"x-gnu-g++; I_MPI_ROOT=/home/termo/intel/compilers_and_libraries_2018.2.199/linux/mpi; _=/usr/bin/printenv; ```. cat /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; ```; # psi4DepsIntelCache.cmake; # ------------------------; #; # This module sets some likely variable values to initialize the CMake; # cache for dependencies to build your Psi4 source.; # Note that this uses user-provided (non-conda) tools.; #; # See ``psi4-path-advisor`` (or cmake command below) for use.; #; # >>> /home/termo/miniconda3/envs/p4dev35/bin/cmake \; # -H. \; # -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake \; # -Bobjdir; #. set(CMAKE_C_COMPILER ""icc"" CACHE STRING """"); set(CMAKE_CXX_COMPILER ""icpc"" CACHE STRING """"); set(CMAKE_Fortran_COMPILER ""ifort"" CACHE STRING """"). set(CMAKE_C_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_Fortran_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"). #set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); ```; --> same error at same place as earlier... icpc -gnu-prefix=x86_64-conda_cos6-linux-gnu- hello.cc -o hello && ./hello; ```; In file included from /home/termo/miniconda3/envs/p4dev35/bin/../x86_64-conda_cos6-linux-gnu/include/c++/7.2.0/x86_64-conda_cos6-linux-gnu/bits/os_defines.h(39),; from /home/termo/miniconda3/envs/p4dev35/bin/../x86_64-conda_cos6-linux-gnu/include/c++/7.2.0/x86_64-conda_cos6-linux-gnu/bits/c++config.h(533),; from /home/termo/miniconda3/envs/p4dev35/bin/../x86_64-conda_cos6-linux-gnu/include/c++/7.2.0/iostream(38),; from hello.cc(1):; /usr/include/features.h(367): catastrophic error: cannot open source file ""sys/cdefs.h""; # include <sys/cdefs.h>; ^. compilation ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386642448
https://github.com/psi4/psi4/issues/1004#issuecomment-386642448:11021,Performance,CACHE,CACHE,11021,".2.199/linux/mpi; _=/usr/bin/printenv; ```. cat /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; ```; # psi4DepsIntelCache.cmake; # ------------------------; #; # This module sets some likely variable values to initialize the CMake; # cache for dependencies to build your Psi4 source.; # Note that this uses user-provided (non-conda) tools.; #; # See ``psi4-path-advisor`` (or cmake command below) for use.; #; # >>> /home/termo/miniconda3/envs/p4dev35/bin/cmake \; # -H. \; # -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake \; # -Bobjdir; #. set(CMAKE_C_COMPILER ""icc"" CACHE STRING """"); set(CMAKE_CXX_COMPILER ""icpc"" CACHE STRING """"); set(CMAKE_Fortran_COMPILER ""ifort"" CACHE STRING """"). set(CMAKE_C_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_Fortran_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"). #set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); ```; --> same error at same place as earlier... icpc -gnu-prefix=x86_64-conda_cos6-linux-gnu- hello.cc -o hello && ./hello; ```; In file included from /home/termo/miniconda3/envs/p4dev35/bin/../x86_64-conda_cos6-linux-gnu/include/c++/7.2.0/x86_64-conda_cos6-linux-gnu/bits/os_defines.h(39),; from /home/termo/miniconda3/envs/p4dev35/bin/../x86_64-conda_cos6-linux-gnu/include/c++/7.2.0/x86_64-conda_cos6-linux-gnu/bits/c++config.h(533),; from /home/termo/miniconda3/envs/p4dev35/bin/../x86_64-conda_cos6-linux-gnu/include/c++/7.2.0/iostream(38),; from hello.cc(1):; /usr/include/features.h(367): catastrophic error: cannot open source file ""sys/cdefs.h""; # include <sys/cdefs.h>; ^. compilation aborted for hello.cc (code 4). ```; now we are getting somewhere :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386642448
https://github.com/psi4/psi4/issues/1004#issuecomment-386642448:11734,Safety,abort,aborted,11734,".2.199/linux/mpi; _=/usr/bin/printenv; ```. cat /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; ```; # psi4DepsIntelCache.cmake; # ------------------------; #; # This module sets some likely variable values to initialize the CMake; # cache for dependencies to build your Psi4 source.; # Note that this uses user-provided (non-conda) tools.; #; # See ``psi4-path-advisor`` (or cmake command below) for use.; #; # >>> /home/termo/miniconda3/envs/p4dev35/bin/cmake \; # -H. \; # -C/home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake \; # -Bobjdir; #. set(CMAKE_C_COMPILER ""icc"" CACHE STRING """"); set(CMAKE_CXX_COMPILER ""icpc"" CACHE STRING """"); set(CMAKE_Fortran_COMPILER ""ifort"" CACHE STRING """"). set(CMAKE_C_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); set(CMAKE_Fortran_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"). #set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-"" CACHE STRING """"); ```; --> same error at same place as earlier... icpc -gnu-prefix=x86_64-conda_cos6-linux-gnu- hello.cc -o hello && ./hello; ```; In file included from /home/termo/miniconda3/envs/p4dev35/bin/../x86_64-conda_cos6-linux-gnu/include/c++/7.2.0/x86_64-conda_cos6-linux-gnu/bits/os_defines.h(39),; from /home/termo/miniconda3/envs/p4dev35/bin/../x86_64-conda_cos6-linux-gnu/include/c++/7.2.0/x86_64-conda_cos6-linux-gnu/bits/c++config.h(533),; from /home/termo/miniconda3/envs/p4dev35/bin/../x86_64-conda_cos6-linux-gnu/include/c++/7.2.0/iostream(38),; from hello.cc(1):; /usr/include/features.h(367): catastrophic error: cannot open source file ""sys/cdefs.h""; # include <sys/cdefs.h>; ^. compilation aborted for hello.cc (code 4). ```; now we are getting somewhere :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386642448
https://github.com/psi4/psi4/issues/1004#issuecomment-386642448:8328,Testability,LOG,LOGNAME,8328,LANG=en_US.UTF-8; DEBUG_FFLAGS=-fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -pipe -fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-all -fno-plt -Og -g -Wall -Wextra -fcheck=all -fbacktrace -fimplicit-none -fvar-tracking-assignments -pipe; F77=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-gfortran; CXX=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-c++; MPM_LAUNCHER=/home/termo/intel/debugger_2018/mpm/mic/bin/start_mpm.sh; OBJCOPY=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-objcopy; INTEL_PYTHONHOME=/home/termo/intel/debugger_2018/python/intel64/; SHLVL=1; HOME=/home/termo; FORTRANFLAGS=-fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -pipe; DEBUG_CPPFLAGS=-D_DEBUG -D_FORTIFY_SOURCE=2 -Og; CFLAGS=-march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -pipe; FC=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-gfortran; _CONDA_PYTHON_SYSCONFIGDATA_NAME=_sysconfigdata_x86_64_conda_cos6_linux_gnu; GCC=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-gcc; ADDR2LINE=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-addr2line; CONDA_PYTHON_EXE=/home/termo/miniconda3/bin/python; LOGNAME=termo; CLASSPATH=/home/termo/intel/compilers_and_libraries_2018.2.199/linux/mpi/intel64/lib/mpi.jar; XDG_DATA_DIRS=/usr/local/share:/usr/share:/var/lib/snapd/desktop; SSH_CONNECTION=185.107.12.100 44238 10.0.0.4 22; CONDA_DEFAULT_ENV=p4dev35; PKG_CONFIG_PATH=/home/termo/intel/compilers_and_libraries_2018.2.199/linux/mkl/bin/pkgconfig; LESSOPEN=| /usr/bin/lesspipe %s; DEBUG_CFLAGS=-march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-all -fno-plt -Og -g -Wall -Wextra -fvar-tracking-assignments -pipe; RANLIB=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-ranlib; INFOPATH=,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386642448
https://github.com/psi4/psi4/issues/1004#issuecomment-386646370:14,Availability,error,error,14,"Excellent, an error!. Ok, that header is provided by `gcc_impl_linux-64` pkg and shows up for me at `/path/to/env/x86_64-conda_cos6-linux-gnu/sysroot/usr/include/sys/cdefs.h`. Same?. Note that if you hate this and just want to get on with life, drop the `--intel` from `psi4-path-advisor`, use the resulting `cmake -C/various/psi4DepsCache.cmake ... -H. -Bobjdir` command and tack on your own `-DCMAKE_CXX_COMPILER=icpc` etc. to configure against your system gcc 5.4, which will do just fine.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386646370
https://github.com/psi4/psi4/issues/1004#issuecomment-386646370:429,Modifiability,config,configure,429,"Excellent, an error!. Ok, that header is provided by `gcc_impl_linux-64` pkg and shows up for me at `/path/to/env/x86_64-conda_cos6-linux-gnu/sysroot/usr/include/sys/cdefs.h`. Same?. Note that if you hate this and just want to get on with life, drop the `--intel` from `psi4-path-advisor`, use the resulting `cmake -C/various/psi4DepsCache.cmake ... -H. -Bobjdir` command and tack on your own `-DCMAKE_CXX_COMPILER=icpc` etc. to configure against your system gcc 5.4, which will do just fine.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386646370
https://github.com/psi4/psi4/issues/1004#issuecomment-386733869:43,Availability,error,error,43,"except for the last they all give the same error with not finding cdefs.h; ```; /usr/include/features.h(367): catastrophic error: cannot open source file ""sys/cdefs.h""; # include <sys/cdefs.h>; ```. last one gives:; icpc --sysroot=$CONDAENV/x86_64-conda_cos6-linux-gnu/sysroot -Qlocation,ld,$CONDAENV/x86_64-conda_cos6-linux-gnu/bin hello.cc -o hello && ./hello; ```; In file included from hello.cc(1):; /usr/include/c++/5/iostream(38): catastrophic error: cannot open source file ""bits/c++config.h""; #include <bits/c++config.h>; ```; file exist here: /usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386733869
https://github.com/psi4/psi4/issues/1004#issuecomment-386733869:123,Availability,error,error,123,"except for the last they all give the same error with not finding cdefs.h; ```; /usr/include/features.h(367): catastrophic error: cannot open source file ""sys/cdefs.h""; # include <sys/cdefs.h>; ```. last one gives:; icpc --sysroot=$CONDAENV/x86_64-conda_cos6-linux-gnu/sysroot -Qlocation,ld,$CONDAENV/x86_64-conda_cos6-linux-gnu/bin hello.cc -o hello && ./hello; ```; In file included from hello.cc(1):; /usr/include/c++/5/iostream(38): catastrophic error: cannot open source file ""bits/c++config.h""; #include <bits/c++config.h>; ```; file exist here: /usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386733869
https://github.com/psi4/psi4/issues/1004#issuecomment-386733869:450,Availability,error,error,450,"except for the last they all give the same error with not finding cdefs.h; ```; /usr/include/features.h(367): catastrophic error: cannot open source file ""sys/cdefs.h""; # include <sys/cdefs.h>; ```. last one gives:; icpc --sysroot=$CONDAENV/x86_64-conda_cos6-linux-gnu/sysroot -Qlocation,ld,$CONDAENV/x86_64-conda_cos6-linux-gnu/bin hello.cc -o hello && ./hello; ```; In file included from hello.cc(1):; /usr/include/c++/5/iostream(38): catastrophic error: cannot open source file ""bits/c++config.h""; #include <bits/c++config.h>; ```; file exist here: /usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386733869
https://github.com/psi4/psi4/issues/1004#issuecomment-386733869:490,Modifiability,config,config,490,"except for the last they all give the same error with not finding cdefs.h; ```; /usr/include/features.h(367): catastrophic error: cannot open source file ""sys/cdefs.h""; # include <sys/cdefs.h>; ```. last one gives:; icpc --sysroot=$CONDAENV/x86_64-conda_cos6-linux-gnu/sysroot -Qlocation,ld,$CONDAENV/x86_64-conda_cos6-linux-gnu/bin hello.cc -o hello && ./hello; ```; In file included from hello.cc(1):; /usr/include/c++/5/iostream(38): catastrophic error: cannot open source file ""bits/c++config.h""; #include <bits/c++config.h>; ```; file exist here: /usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386733869
https://github.com/psi4/psi4/issues/1004#issuecomment-386733869:519,Modifiability,config,config,519,"except for the last they all give the same error with not finding cdefs.h; ```; /usr/include/features.h(367): catastrophic error: cannot open source file ""sys/cdefs.h""; # include <sys/cdefs.h>; ```. last one gives:; icpc --sysroot=$CONDAENV/x86_64-conda_cos6-linux-gnu/sysroot -Qlocation,ld,$CONDAENV/x86_64-conda_cos6-linux-gnu/bin hello.cc -o hello && ./hello; ```; In file included from hello.cc(1):; /usr/include/c++/5/iostream(38): catastrophic error: cannot open source file ""bits/c++config.h""; #include <bits/c++config.h>; ```; file exist here: /usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386733869
https://github.com/psi4/psi4/issues/1004#issuecomment-386733869:596,Modifiability,config,config,596,"except for the last they all give the same error with not finding cdefs.h; ```; /usr/include/features.h(367): catastrophic error: cannot open source file ""sys/cdefs.h""; # include <sys/cdefs.h>; ```. last one gives:; icpc --sysroot=$CONDAENV/x86_64-conda_cos6-linux-gnu/sysroot -Qlocation,ld,$CONDAENV/x86_64-conda_cos6-linux-gnu/bin hello.cc -o hello && ./hello; ```; In file included from hello.cc(1):; /usr/include/c++/5/iostream(38): catastrophic error: cannot open source file ""bits/c++config.h""; #include <bits/c++config.h>; ```; file exist here: /usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386733869
https://github.com/psi4/psi4/issues/1004#issuecomment-386735634:47,Availability,error,error,47,"@jturney, any ideas? In his original `cdefs.h` error, it's showing finding three headers in the proper conda-supplied locations, then failing out on the 4th in the chain. I've tried all the `man icpc` options I can find. Very confused, as, apart from RHEL7 supplying 4.8.5 instead of 5.4 natively, my system is about the same setup and working with only env activation and `-gnu-prefix`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386735634
https://github.com/psi4/psi4/issues/1004#issuecomment-386739654:222,Performance,CACHE,CACHE,222,"Yay!. Ok, back to IntelCache.cmake. `set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu- --sysroot=/home/termo/miniconda3/envs/p4dev35/x86_64-conda_cos6-linux-gnu/sysroot"" CACHE STRING """")`. Do a line like the above for each of C, CXX, Fortran.; Clear away `objdir/`; Try the `psi4-path-advisor --intel` again",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386739654
https://github.com/psi4/psi4/issues/1004#issuecomment-386739654:296,Usability,Clear,Clear,296,"Yay!. Ok, back to IntelCache.cmake. `set(CMAKE_CXX_FLAGS ""-gnu-prefix=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu- --sysroot=/home/termo/miniconda3/envs/p4dev35/x86_64-conda_cos6-linux-gnu/sysroot"" CACHE STRING """")`. Do a line like the above for each of C, CXX, Fortran.; Clear away `objdir/`; Try the `psi4-path-advisor --intel` again",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386739654
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:2827,Deployability,Release,Release,2827,"ompiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP: ON; -- Setting (unspecified) option ENABLE_AUTO_BLAS: ON; -- Setting (unspecified) option ENABLE_AUTO_LAPACK: ON; -- Setting (unspecified) option ENABLE_PLUGIN_TESTING: OFF; -- Setting (unspecified) option ENABLE_XHOST: ON; -- Performing Test CMAKE_C_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_CXX_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_Fortran_FLAGS [-xHost] - Success, Appending; -- Setting (unspecified) option ENABLE_CODE_COVERAGE: OFF; -- Setting (unspecified) option ENABLE_BOUNDS_CHECK: OFF; -- Setting (unspecified) option ENABLE_ASAN: OFF; -- Setting (unspecified) option ENABLE_TSAN: OFF; -- Setting (unspecified) option ENABLE_UBSAN: OFF; -- Setting (unspecified) option ENABLE_MSAN: OFF; -- Setting option MAX_AM_ERI: 6; -- Setting (unspecified) option CMAKE_BUILD_TYPE: Release; -- Setting (unspecified) option FC_SYMBOL: 2; -- Setting (unspecified) option BUILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Foun",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:3275,Deployability,install,install,3275,"ompiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP: ON; -- Setting (unspecified) option ENABLE_AUTO_BLAS: ON; -- Setting (unspecified) option ENABLE_AUTO_LAPACK: ON; -- Setting (unspecified) option ENABLE_PLUGIN_TESTING: OFF; -- Setting (unspecified) option ENABLE_XHOST: ON; -- Performing Test CMAKE_C_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_CXX_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_Fortran_FLAGS [-xHost] - Success, Appending; -- Setting (unspecified) option ENABLE_CODE_COVERAGE: OFF; -- Setting (unspecified) option ENABLE_BOUNDS_CHECK: OFF; -- Setting (unspecified) option ENABLE_ASAN: OFF; -- Setting (unspecified) option ENABLE_TSAN: OFF; -- Setting (unspecified) option ENABLE_UBSAN: OFF; -- Setting (unspecified) option ENABLE_MSAN: OFF; -- Setting option MAX_AM_ERI: 6; -- Setting (unspecified) option CMAKE_BUILD_TYPE: Release; -- Setting (unspecified) option FC_SYMBOL: 2; -- Setting (unspecified) option BUILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Foun",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:3734,Deployability,configurat,configuration,3734," Setting option MAX_AM_ERI: 6; -- Setting (unspecified) option CMAKE_BUILD_TYPE: Release; -- Setting (unspecified) option FC_SYMBOL: 2; -- Setting (unspecified) option BUILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Found LAPACK MKL: /home/termo/miniconda3/envs/p4dev35/lib/libmkl_rt.so;...; -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found HDF5: /home/termo/miniconda3/envs/p4dev35/lib/libhdf5.so;... (found version 1.10.1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:4072,Deployability,configurat,configuration,4072,"ENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Found LAPACK MKL: /home/termo/miniconda3/envs/p4dev35/lib/libmkl_rt.so;...; -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found HDF5: /home/termo/miniconda3/envs/p4dev35/lib/libhdf5.so;... (found version 1.10.1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc: /home/termo/miniconda3/envs/p4dev35/lib/libxc.so (found version 4.0.2); -- Found base compiler version 7.2.0; -- Found OpenMP_C: -qopenmp ; -- Found OpenMP_CXX: -qopenmp ; -- Found OpenMP_Fortran: -qopenmp ; -- No Doxygen, no docs.; -- No Sphinx, no docs. Pre-built documentation at http://psicode.org/psi4manual/master/index.html; -- No ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:5232,Deployability,install,install,5232,".1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc: /home/termo/miniconda3/envs/p4dev35/lib/libxc.so (found version 4.0.2); -- Found base compiler version 7.2.0; -- Found OpenMP_C: -qopenmp ; -- Found OpenMP_CXX: -qopenmp ; -- Found OpenMP_Fortran: -qopenmp ; -- No Doxygen, no docs.; -- No Sphinx, no docs. Pre-built documentation at http://psicode.org/psi4manual/master/index.html; -- No LaTeX (incl. pdflatex), no PDF docs. Pre-built documentation at http://psicode.org/psi4manual/master/index.html; -- No theme, no docs (try: conda install sphinx-psi-theme cloud_sptheme astropy-helpers graphviz python-graphviz -c conda-forge -c astropy -c psi4); Python3 incompatible test: pywrap-db2... skipping; Python3 incompatible test: pywrap-freq-e-sowreap... skipping; Python3 incompatible test: pywrap-freq-g-sowreap... skipping; Python3 incompatible test: pywrap-opt-sowreap... skipping; -- Adding test cases: Psi4; -- Adding test cases: Psi4 + CheMPS2; -- Adding test cases: Psi4 + dkh; -- Adding test cases: Psi4 + libefp; -- Adding test cases: Psi4 + gdma; -- Adding test cases: Psi4 + PCMSolver; -- Configuring done; -- Generating done; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:3711,Integrability,wrap,wrapper,3711," Setting option MAX_AM_ERI: 6; -- Setting (unspecified) option CMAKE_BUILD_TYPE: Release; -- Setting (unspecified) option FC_SYMBOL: 2; -- Setting (unspecified) option BUILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Found LAPACK MKL: /home/termo/miniconda3/envs/p4dev35/lib/libmkl_rt.so;...; -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found HDF5: /home/termo/miniconda3/envs/p4dev35/lib/libhdf5.so;... (found version 1.10.1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:4049,Integrability,wrap,wrapper,4049,"ENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Found LAPACK MKL: /home/termo/miniconda3/envs/p4dev35/lib/libmkl_rt.so;...; -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found HDF5: /home/termo/miniconda3/envs/p4dev35/lib/libhdf5.so;... (found version 1.10.1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc: /home/termo/miniconda3/envs/p4dev35/lib/libxc.so (found version 4.0.2); -- Found base compiler version 7.2.0; -- Found OpenMP_C: -qopenmp ; -- Found OpenMP_CXX: -qopenmp ; -- Found OpenMP_Fortran: -qopenmp ; -- No Doxygen, no docs.; -- No Sphinx, no docs. Pre-built documentation at http://psicode.org/psi4manual/master/index.html; -- No ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:3734,Modifiability,config,configuration,3734," Setting option MAX_AM_ERI: 6; -- Setting (unspecified) option CMAKE_BUILD_TYPE: Release; -- Setting (unspecified) option FC_SYMBOL: 2; -- Setting (unspecified) option BUILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Found LAPACK MKL: /home/termo/miniconda3/envs/p4dev35/lib/libmkl_rt.so;...; -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found HDF5: /home/termo/miniconda3/envs/p4dev35/lib/libhdf5.so;... (found version 1.10.1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:4072,Modifiability,config,configuration,4072,"ENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Found LAPACK MKL: /home/termo/miniconda3/envs/p4dev35/lib/libmkl_rt.so;...; -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found HDF5: /home/termo/miniconda3/envs/p4dev35/lib/libhdf5.so;... (found version 1.10.1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc: /home/termo/miniconda3/envs/p4dev35/lib/libxc.so (found version 4.0.2); -- Found base compiler version 7.2.0; -- Found OpenMP_C: -qopenmp ; -- Found OpenMP_CXX: -qopenmp ; -- Found OpenMP_Fortran: -qopenmp ; -- No Doxygen, no docs.; -- No Sphinx, no docs. Pre-built documentation at http://psicode.org/psi4manual/master/index.html; -- No ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:5797,Modifiability,Config,Configuring,5797,".1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc: /home/termo/miniconda3/envs/p4dev35/lib/libxc.so (found version 4.0.2); -- Found base compiler version 7.2.0; -- Found OpenMP_C: -qopenmp ; -- Found OpenMP_CXX: -qopenmp ; -- Found OpenMP_Fortran: -qopenmp ; -- No Doxygen, no docs.; -- No Sphinx, no docs. Pre-built documentation at http://psicode.org/psi4manual/master/index.html; -- No LaTeX (incl. pdflatex), no PDF docs. Pre-built documentation at http://psicode.org/psi4manual/master/index.html; -- No theme, no docs (try: conda install sphinx-psi-theme cloud_sptheme astropy-helpers graphviz python-graphviz -c conda-forge -c astropy -c psi4); Python3 incompatible test: pywrap-db2... skipping; Python3 incompatible test: pywrap-freq-e-sowreap... skipping; Python3 incompatible test: pywrap-freq-g-sowreap... skipping; Python3 incompatible test: pywrap-opt-sowreap... skipping; -- Adding test cases: Psi4; -- Adding test cases: Psi4 + CheMPS2; -- Adding test cases: Psi4 + dkh; -- Adding test cases: Psi4 + libefp; -- Adding test cases: Psi4 + gdma; -- Adding test cases: Psi4 + PCMSolver; -- Configuring done; -- Generating done; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:45,Performance,load,loading,45,sweeeet: ; `psi4-path-advisor --intel`; ```; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; -- The C compiler identification is Intel 18.0.2.20180210; -- The CXX compiler identification is Intel 18.0.2.20180210; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The Fortran compiler identification is Intel 18.0.2.20180210; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:61,Performance,cache,cache,61,sweeeet: ; `psi4-path-advisor --intel`; ```; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; -- The C compiler identification is Intel 18.0.2.20180210; -- The CXX compiler identification is Intel 18.0.2.20180210; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The Fortran compiler identification is Intel 18.0.2.20180210; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:146,Performance,load,loading,146,sweeeet: ; `psi4-path-advisor --intel`; ```; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; -- The C compiler identification is Intel 18.0.2.20180210; -- The CXX compiler identification is Intel 18.0.2.20180210; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The Fortran compiler identification is Intel 18.0.2.20180210; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:162,Performance,cache,cache,162,sweeeet: ; `psi4-path-advisor --intel`; ```; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; -- The C compiler identification is Intel 18.0.2.20180210; -- The CXX compiler identification is Intel 18.0.2.20180210; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The Fortran compiler identification is Intel 18.0.2.20180210; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:250,Performance,load,loading,250,sweeeet: ; `psi4-path-advisor --intel`; ```; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; -- The C compiler identification is Intel 18.0.2.20180210; -- The CXX compiler identification is Intel 18.0.2.20180210; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The Fortran compiler identification is Intel 18.0.2.20180210; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:266,Performance,cache,cache,266,sweeeet: ; `psi4-path-advisor --intel`; ```; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; -- The C compiler identification is Intel 18.0.2.20180210; -- The CXX compiler identification is Intel 18.0.2.20180210; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The Fortran compiler identification is Intel 18.0.2.20180210; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:2229,Performance,Perform,Performing,2229,"ompiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP: ON; -- Setting (unspecified) option ENABLE_AUTO_BLAS: ON; -- Setting (unspecified) option ENABLE_AUTO_LAPACK: ON; -- Setting (unspecified) option ENABLE_PLUGIN_TESTING: OFF; -- Setting (unspecified) option ENABLE_XHOST: ON; -- Performing Test CMAKE_C_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_CXX_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_Fortran_FLAGS [-xHost] - Success, Appending; -- Setting (unspecified) option ENABLE_CODE_COVERAGE: OFF; -- Setting (unspecified) option ENABLE_BOUNDS_CHECK: OFF; -- Setting (unspecified) option ENABLE_ASAN: OFF; -- Setting (unspecified) option ENABLE_TSAN: OFF; -- Setting (unspecified) option ENABLE_UBSAN: OFF; -- Setting (unspecified) option ENABLE_MSAN: OFF; -- Setting option MAX_AM_ERI: 6; -- Setting (unspecified) option CMAKE_BUILD_TYPE: Release; -- Setting (unspecified) option FC_SYMBOL: 2; -- Setting (unspecified) option BUILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Foun",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:2293,Performance,Perform,Performing,2293,"ompiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP: ON; -- Setting (unspecified) option ENABLE_AUTO_BLAS: ON; -- Setting (unspecified) option ENABLE_AUTO_LAPACK: ON; -- Setting (unspecified) option ENABLE_PLUGIN_TESTING: OFF; -- Setting (unspecified) option ENABLE_XHOST: ON; -- Performing Test CMAKE_C_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_CXX_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_Fortran_FLAGS [-xHost] - Success, Appending; -- Setting (unspecified) option ENABLE_CODE_COVERAGE: OFF; -- Setting (unspecified) option ENABLE_BOUNDS_CHECK: OFF; -- Setting (unspecified) option ENABLE_ASAN: OFF; -- Setting (unspecified) option ENABLE_TSAN: OFF; -- Setting (unspecified) option ENABLE_UBSAN: OFF; -- Setting (unspecified) option ENABLE_MSAN: OFF; -- Setting option MAX_AM_ERI: 6; -- Setting (unspecified) option CMAKE_BUILD_TYPE: Release; -- Setting (unspecified) option FC_SYMBOL: 2; -- Setting (unspecified) option BUILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Foun",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:2359,Performance,Perform,Performing,2359,"ompiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP: ON; -- Setting (unspecified) option ENABLE_AUTO_BLAS: ON; -- Setting (unspecified) option ENABLE_AUTO_LAPACK: ON; -- Setting (unspecified) option ENABLE_PLUGIN_TESTING: OFF; -- Setting (unspecified) option ENABLE_XHOST: ON; -- Performing Test CMAKE_C_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_CXX_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_Fortran_FLAGS [-xHost] - Success, Appending; -- Setting (unspecified) option ENABLE_CODE_COVERAGE: OFF; -- Setting (unspecified) option ENABLE_BOUNDS_CHECK: OFF; -- Setting (unspecified) option ENABLE_ASAN: OFF; -- Setting (unspecified) option ENABLE_TSAN: OFF; -- Setting (unspecified) option ENABLE_UBSAN: OFF; -- Setting (unspecified) option ENABLE_MSAN: OFF; -- Setting option MAX_AM_ERI: 6; -- Setting (unspecified) option CMAKE_BUILD_TYPE: Release; -- Setting (unspecified) option FC_SYMBOL: 2; -- Setting (unspecified) option BUILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Foun",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:3846,Performance,Perform,Performing,3846,"ILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Found LAPACK MKL: /home/termo/miniconda3/envs/p4dev35/lib/libmkl_rt.so;...; -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found HDF5: /home/termo/miniconda3/envs/p4dev35/lib/libhdf5.so;... (found version 1.10.1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc: /home/termo/miniconda3/envs/p4dev35/lib/libxc.so (found version 4.0.2); -- Found base compiler version 7.2.0; -- Found OpenMP_C: -qopenmp ; -- Found OpenMP_CXX: -qopenmp",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:3881,Performance,Perform,Performing,3881,"ILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Found LAPACK MKL: /home/termo/miniconda3/envs/p4dev35/lib/libmkl_rt.so;...; -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found HDF5: /home/termo/miniconda3/envs/p4dev35/lib/libhdf5.so;... (found version 1.10.1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc: /home/termo/miniconda3/envs/p4dev35/lib/libxc.so (found version 4.0.2); -- Found base compiler version 7.2.0; -- Found OpenMP_C: -qopenmp ; -- Found OpenMP_CXX: -qopenmp",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:706,Safety,Detect,Detecting,706,sweeeet: ; `psi4-path-advisor --intel`; ```; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; -- The C compiler identification is Intel 18.0.2.20180210; -- The CXX compiler identification is Intel 18.0.2.20180210; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The Fortran compiler identification is Intel 18.0.2.20180210; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:740,Safety,Detect,Detecting,740,sweeeet: ; `psi4-path-advisor --intel`; ```; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; -- The C compiler identification is Intel 18.0.2.20180210; -- The CXX compiler identification is Intel 18.0.2.20180210; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The Fortran compiler identification is Intel 18.0.2.20180210; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:781,Safety,Detect,Detecting,781,sweeeet: ; `psi4-path-advisor --intel`; ```; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; -- The C compiler identification is Intel 18.0.2.20180210; -- The CXX compiler identification is Intel 18.0.2.20180210; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The Fortran compiler identification is Intel 18.0.2.20180210; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:814,Safety,Detect,Detecting,814,sweeeet: ; `psi4-path-advisor --intel`; ```; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; -- The C compiler identification is Intel 18.0.2.20180210; -- The CXX compiler identification is Intel 18.0.2.20180210; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The Fortran compiler identification is Intel 18.0.2.20180210; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:1087,Safety,Detect,Detecting,1087,ile /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; -- The C compiler identification is Intel 18.0.2.20180210; -- The CXX compiler identification is Intel 18.0.2.20180210; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The Fortran compiler identification is Intel 18.0.2.20180210; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP: ON; -- Setting (unspecified) option ENABLE_AUTO_BLAS: ON; -- Setting (unspecified) option ENABLE_AUTO_LAPACK: ON; -- Setting (unspecified) option ENABLE_PLUGIN_TESTING,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:1123,Safety,Detect,Detecting,1123,ile /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; -- The C compiler identification is Intel 18.0.2.20180210; -- The CXX compiler identification is Intel 18.0.2.20180210; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The Fortran compiler identification is Intel 18.0.2.20180210; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP: ON; -- Setting (unspecified) option ENABLE_AUTO_BLAS: ON; -- Setting (unspecified) option ENABLE_AUTO_LAPACK: ON; -- Setting (unspecified) option ENABLE_PLUGIN_TESTING,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:1166,Safety,Detect,Detecting,1166,ile /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; -- The C compiler identification is Intel 18.0.2.20180210; -- The CXX compiler identification is Intel 18.0.2.20180210; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The Fortran compiler identification is Intel 18.0.2.20180210; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP: ON; -- Setting (unspecified) option ENABLE_AUTO_BLAS: ON; -- Setting (unspecified) option ENABLE_AUTO_LAPACK: ON; -- Setting (unspecified) option ENABLE_PLUGIN_TESTING,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:1201,Safety,Detect,Detecting,1201,ile /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsMKLCache.cmake; loading initial cache file /home/termo/miniconda3/envs/p4dev35/share/cmake/psi4/psi4DepsIntelCache.cmake; -- The C compiler identification is Intel 18.0.2.20180210; -- The CXX compiler identification is Intel 18.0.2.20180210; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc; -- Check for working C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The Fortran compiler identification is Intel 18.0.2.20180210; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP: ON; -- Setting (unspecified) option ENABLE_AUTO_BLAS: ON; -- Setting (unspecified) option ENABLE_AUTO_LAPACK: ON; -- Setting (unspecified) option ENABLE_PLUGIN_TESTING,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:1551,Safety,Detect,Detecting,1551,"C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The Fortran compiler identification is Intel 18.0.2.20180210; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP: ON; -- Setting (unspecified) option ENABLE_AUTO_BLAS: ON; -- Setting (unspecified) option ENABLE_AUTO_LAPACK: ON; -- Setting (unspecified) option ENABLE_PLUGIN_TESTING: OFF; -- Setting (unspecified) option ENABLE_XHOST: ON; -- Performing Test CMAKE_C_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_CXX_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_Fortran_FLAGS [-xHost] - Success, Appending; -- Setting (unspecified) option ENABLE_CODE_COVERAGE: OFF; -- Setting (unspecified) option ENABLE_BOUNDS_CHECK: OFF; -- Setting (unspecified) option ENABLE_ASAN: OFF; -- Setting (u",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:1591,Safety,Detect,Detecting,1591,"C compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc; -- Check for working CXX compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- The Fortran compiler identification is Intel 18.0.2.20180210; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort; -- Check for working Fortran compiler: /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP: ON; -- Setting (unspecified) option ENABLE_AUTO_BLAS: ON; -- Setting (unspecified) option ENABLE_AUTO_LAPACK: ON; -- Setting (unspecified) option ENABLE_PLUGIN_TESTING: OFF; -- Setting (unspecified) option ENABLE_XHOST: ON; -- Performing Test CMAKE_C_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_CXX_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_Fortran_FLAGS [-xHost] - Success, Appending; -- Setting (unspecified) option ENABLE_CODE_COVERAGE: OFF; -- Setting (unspecified) option ENABLE_BOUNDS_CHECK: OFF; -- Setting (unspecified) option ENABLE_ASAN: OFF; -- Setting (u",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:2240,Testability,Test,Test,2240,"ompiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP: ON; -- Setting (unspecified) option ENABLE_AUTO_BLAS: ON; -- Setting (unspecified) option ENABLE_AUTO_LAPACK: ON; -- Setting (unspecified) option ENABLE_PLUGIN_TESTING: OFF; -- Setting (unspecified) option ENABLE_XHOST: ON; -- Performing Test CMAKE_C_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_CXX_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_Fortran_FLAGS [-xHost] - Success, Appending; -- Setting (unspecified) option ENABLE_CODE_COVERAGE: OFF; -- Setting (unspecified) option ENABLE_BOUNDS_CHECK: OFF; -- Setting (unspecified) option ENABLE_ASAN: OFF; -- Setting (unspecified) option ENABLE_TSAN: OFF; -- Setting (unspecified) option ENABLE_UBSAN: OFF; -- Setting (unspecified) option ENABLE_MSAN: OFF; -- Setting option MAX_AM_ERI: 6; -- Setting (unspecified) option CMAKE_BUILD_TYPE: Release; -- Setting (unspecified) option FC_SYMBOL: 2; -- Setting (unspecified) option BUILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Foun",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:2304,Testability,Test,Test,2304,"ompiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP: ON; -- Setting (unspecified) option ENABLE_AUTO_BLAS: ON; -- Setting (unspecified) option ENABLE_AUTO_LAPACK: ON; -- Setting (unspecified) option ENABLE_PLUGIN_TESTING: OFF; -- Setting (unspecified) option ENABLE_XHOST: ON; -- Performing Test CMAKE_C_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_CXX_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_Fortran_FLAGS [-xHost] - Success, Appending; -- Setting (unspecified) option ENABLE_CODE_COVERAGE: OFF; -- Setting (unspecified) option ENABLE_BOUNDS_CHECK: OFF; -- Setting (unspecified) option ENABLE_ASAN: OFF; -- Setting (unspecified) option ENABLE_TSAN: OFF; -- Setting (unspecified) option ENABLE_UBSAN: OFF; -- Setting (unspecified) option ENABLE_MSAN: OFF; -- Setting option MAX_AM_ERI: 6; -- Setting (unspecified) option CMAKE_BUILD_TYPE: Release; -- Setting (unspecified) option FC_SYMBOL: 2; -- Setting (unspecified) option BUILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Foun",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:2370,Testability,Test,Test,2370,"ompiler ABI info - done; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90; -- Checking whether /home/termo/intel/compilers_and_libraries_2018.2.199/linux/bin/intel64/ifort supports Fortran 90 -- yes; -- Enabling Fortran; -- Setting (unspecified) option BUILD_SHARED_LIBS: OFF; -- Setting (unspecified) option ENABLE_OPENMP: ON; -- Setting (unspecified) option ENABLE_AUTO_BLAS: ON; -- Setting (unspecified) option ENABLE_AUTO_LAPACK: ON; -- Setting (unspecified) option ENABLE_PLUGIN_TESTING: OFF; -- Setting (unspecified) option ENABLE_XHOST: ON; -- Performing Test CMAKE_C_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_CXX_FLAGS [-xHost] - Success, Appending; -- Performing Test CMAKE_Fortran_FLAGS [-xHost] - Success, Appending; -- Setting (unspecified) option ENABLE_CODE_COVERAGE: OFF; -- Setting (unspecified) option ENABLE_BOUNDS_CHECK: OFF; -- Setting (unspecified) option ENABLE_ASAN: OFF; -- Setting (unspecified) option ENABLE_TSAN: OFF; -- Setting (unspecified) option ENABLE_UBSAN: OFF; -- Setting (unspecified) option ENABLE_MSAN: OFF; -- Setting option MAX_AM_ERI: 6; -- Setting (unspecified) option CMAKE_BUILD_TYPE: Release; -- Setting (unspecified) option FC_SYMBOL: 2; -- Setting (unspecified) option BUILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Foun",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:3857,Testability,Test,Test,3857,"ILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Found LAPACK MKL: /home/termo/miniconda3/envs/p4dev35/lib/libmkl_rt.so;...; -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found HDF5: /home/termo/miniconda3/envs/p4dev35/lib/libhdf5.so;... (found version 1.10.1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc: /home/termo/miniconda3/envs/p4dev35/lib/libxc.so (found version 4.0.2); -- Found base compiler version 7.2.0; -- Found OpenMP_C: -qopenmp ; -- Found OpenMP_CXX: -qopenmp",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:3892,Testability,Test,Test,3892,"ILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Found LAPACK MKL: /home/termo/miniconda3/envs/p4dev35/lib/libmkl_rt.so;...; -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found HDF5: /home/termo/miniconda3/envs/p4dev35/lib/libhdf5.so;... (found version 1.10.1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc: /home/termo/miniconda3/envs/p4dev35/lib/libxc.so (found version 4.0.2); -- Found base compiler version 7.2.0; -- Found OpenMP_C: -qopenmp ; -- Found OpenMP_CXX: -qopenmp",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:5369,Testability,test,test,5369,".1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc: /home/termo/miniconda3/envs/p4dev35/lib/libxc.so (found version 4.0.2); -- Found base compiler version 7.2.0; -- Found OpenMP_C: -qopenmp ; -- Found OpenMP_CXX: -qopenmp ; -- Found OpenMP_Fortran: -qopenmp ; -- No Doxygen, no docs.; -- No Sphinx, no docs. Pre-built documentation at http://psicode.org/psi4manual/master/index.html; -- No LaTeX (incl. pdflatex), no PDF docs. Pre-built documentation at http://psicode.org/psi4manual/master/index.html; -- No theme, no docs (try: conda install sphinx-psi-theme cloud_sptheme astropy-helpers graphviz python-graphviz -c conda-forge -c astropy -c psi4); Python3 incompatible test: pywrap-db2... skipping; Python3 incompatible test: pywrap-freq-e-sowreap... skipping; Python3 incompatible test: pywrap-freq-g-sowreap... skipping; Python3 incompatible test: pywrap-opt-sowreap... skipping; -- Adding test cases: Psi4; -- Adding test cases: Psi4 + CheMPS2; -- Adding test cases: Psi4 + dkh; -- Adding test cases: Psi4 + libefp; -- Adding test cases: Psi4 + gdma; -- Adding test cases: Psi4 + PCMSolver; -- Configuring done; -- Generating done; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:5420,Testability,test,test,5420,".1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc: /home/termo/miniconda3/envs/p4dev35/lib/libxc.so (found version 4.0.2); -- Found base compiler version 7.2.0; -- Found OpenMP_C: -qopenmp ; -- Found OpenMP_CXX: -qopenmp ; -- Found OpenMP_Fortran: -qopenmp ; -- No Doxygen, no docs.; -- No Sphinx, no docs. Pre-built documentation at http://psicode.org/psi4manual/master/index.html; -- No LaTeX (incl. pdflatex), no PDF docs. Pre-built documentation at http://psicode.org/psi4manual/master/index.html; -- No theme, no docs (try: conda install sphinx-psi-theme cloud_sptheme astropy-helpers graphviz python-graphviz -c conda-forge -c astropy -c psi4); Python3 incompatible test: pywrap-db2... skipping; Python3 incompatible test: pywrap-freq-e-sowreap... skipping; Python3 incompatible test: pywrap-freq-g-sowreap... skipping; Python3 incompatible test: pywrap-opt-sowreap... skipping; -- Adding test cases: Psi4; -- Adding test cases: Psi4 + CheMPS2; -- Adding test cases: Psi4 + dkh; -- Adding test cases: Psi4 + libefp; -- Adding test cases: Psi4 + gdma; -- Adding test cases: Psi4 + PCMSolver; -- Configuring done; -- Generating done; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:5482,Testability,test,test,5482,".1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc: /home/termo/miniconda3/envs/p4dev35/lib/libxc.so (found version 4.0.2); -- Found base compiler version 7.2.0; -- Found OpenMP_C: -qopenmp ; -- Found OpenMP_CXX: -qopenmp ; -- Found OpenMP_Fortran: -qopenmp ; -- No Doxygen, no docs.; -- No Sphinx, no docs. Pre-built documentation at http://psicode.org/psi4manual/master/index.html; -- No LaTeX (incl. pdflatex), no PDF docs. Pre-built documentation at http://psicode.org/psi4manual/master/index.html; -- No theme, no docs (try: conda install sphinx-psi-theme cloud_sptheme astropy-helpers graphviz python-graphviz -c conda-forge -c astropy -c psi4); Python3 incompatible test: pywrap-db2... skipping; Python3 incompatible test: pywrap-freq-e-sowreap... skipping; Python3 incompatible test: pywrap-freq-g-sowreap... skipping; Python3 incompatible test: pywrap-opt-sowreap... skipping; -- Adding test cases: Psi4; -- Adding test cases: Psi4 + CheMPS2; -- Adding test cases: Psi4 + dkh; -- Adding test cases: Psi4 + libefp; -- Adding test cases: Psi4 + gdma; -- Adding test cases: Psi4 + PCMSolver; -- Configuring done; -- Generating done; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:5544,Testability,test,test,5544,".1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc: /home/termo/miniconda3/envs/p4dev35/lib/libxc.so (found version 4.0.2); -- Found base compiler version 7.2.0; -- Found OpenMP_C: -qopenmp ; -- Found OpenMP_CXX: -qopenmp ; -- Found OpenMP_Fortran: -qopenmp ; -- No Doxygen, no docs.; -- No Sphinx, no docs. Pre-built documentation at http://psicode.org/psi4manual/master/index.html; -- No LaTeX (incl. pdflatex), no PDF docs. Pre-built documentation at http://psicode.org/psi4manual/master/index.html; -- No theme, no docs (try: conda install sphinx-psi-theme cloud_sptheme astropy-helpers graphviz python-graphviz -c conda-forge -c astropy -c psi4); Python3 incompatible test: pywrap-db2... skipping; Python3 incompatible test: pywrap-freq-e-sowreap... skipping; Python3 incompatible test: pywrap-freq-g-sowreap... skipping; Python3 incompatible test: pywrap-opt-sowreap... skipping; -- Adding test cases: Psi4; -- Adding test cases: Psi4 + CheMPS2; -- Adding test cases: Psi4 + dkh; -- Adding test cases: Psi4 + libefp; -- Adding test cases: Psi4 + gdma; -- Adding test cases: Psi4 + PCMSolver; -- Configuring done; -- Generating done; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524
